uint64_t sub_19F170204(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5[4];

  v2 = *(void *)(v1 + 24);
  if (v2)
  {
    v3 = *(void *)(v1 + 16);
    if (qword_1EB390B70 != -1) {
      result = swift_once();
    }
    v5[2] = v3;
    v5[3] = v2;
    v4 = *(os_unfair_lock_s **)(qword_1EB394EE0 + 16);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v4 + 6);
    sub_19EEB3E34(v5);
    os_unfair_lock_unlock(v4 + 6);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_19F170300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EE628D4(v2 + *(int *)(a1 + 24), a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for JetPackDataStreamSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_19EEA0784(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    uint64_t v13 = sub_19F1DB34C();
    uint64_t v14 = *(void *)(v13 - 8);
    v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
      memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for JetPackDataStreamSource(uint64_t a1, uint64_t a2)
{
  sub_19EEA072C(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t *initializeWithCopy for JetPackDataStreamSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_19EEA0784(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  uint64_t v12 = sub_19F1DB34C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t *assignWithCopy for JetPackDataStreamSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_19EEA0784(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_19EEA072C(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_19F1DB34C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  int v16 = v15(v12, 1, v13);
  if (!v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *initializeWithTake for JetPackDataStreamSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  unint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t *assignWithTake for JetPackDataStreamSource(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_19EEA072C(v6, v7);
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  v11 = (char *)(a2 + v9);
  uint64_t v12 = sub_19F1DB34C();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for JetPackDataStreamSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F170B34);
}

uint64_t sub_19F170B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 24);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for JetPackDataStreamSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F170C08);
}

uint64_t sub_19F170C08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_19F170CB4()
{
  sub_19EE23F8C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_19F170D54@<X0>(uint64_t a1@<X8>)
{
  return sub_19F172FFC(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_19F170D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  if (*(unsigned char *)(v4 + 56))
  {
    sub_19EF4F724();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    sub_19F1DADCC();
    swift_allocObject();
    sub_19F1DADBC();
    sub_19F172160();
    uint64_t v7 = sub_19F1DADAC();
    unint64_t v9 = v8;
    uint64_t result = swift_release();
    if (!v5)
    {
      LODWORD(v10) = 0;
      switch(v9 >> 62)
      {
        case 1uLL:
          LODWORD(v10) = HIDWORD(v7) - v7;
          if (__OFSUB__(HIDWORD(v7), v7))
          {
            __break(1u);
LABEL_14:
            __break(1u);
          }
          unint64_t v10 = (int)v10;
LABEL_9:
          if ((v10 & 0x8000000000000000) != 0 || HIDWORD(v10))
          {
            sub_19F1DCFBC();
            __break(1u);
            JUMPOUT(0x19F171044);
          }
LABEL_11:
          uint64_t v20 = v7;
          int __src = v10;
          uint64_t v14 = *(void *)(v4 + 48);
          __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), *(void *)(v4 + 40));
          uint64_t v15 = sub_19EE684CC(&__src, 4);
          unint64_t v17 = v16;
          (*(void (**)(void))(v14 + 8))();
          sub_19EEA072C(v15, v17);
          uint64_t v18 = *(void *)(v4 + 40);
          uint64_t v19 = *(void *)(v4 + 48);
          __swift_project_boxed_opaque_existential_1((void *)(v4 + 16), v18);
          (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v19 + 8))(v20, v9, v18, v19);
          uint64_t result = sub_19EEA072C(v20, v9);
          *(unsigned char *)(v4 + 56) = 1;
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v7 + 16);
          uint64_t v11 = *(void *)(v7 + 24);
          BOOL v13 = __OFSUB__(v11, v12);
          unint64_t v10 = v11 - v12;
          if (!v13) {
            goto LABEL_9;
          }
          goto LABEL_14;
        case 3uLL:
          goto LABEL_11;
        default:
          LODWORD(v10) = BYTE6(v9);
          goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_19F171054@<X0>(_OWORD *a1@<X8>)
{
  if (*(unsigned char *)(v1 + 56))
  {
    sub_19F172BBC();
    swift_allocError();
    *uint64_t v4 = 0;
    return swift_willThrow();
  }
  else
  {
    uint64_t v6 = v1;
    uint64_t v7 = (void *)(v1 + 16);
    uint64_t v8 = *(void *)(v1 + 40);
    uint64_t v9 = *(void *)(v6 + 48);
    __swift_project_boxed_opaque_existential_1(v7, v8);
    uint64_t result = sub_19EF872C4(v8, v9);
    if (!v2)
    {
      int v10 = result;
      uint64_t v11 = result;
      uint64_t v12 = *(void *)(v6 + 40);
      uint64_t v13 = *(void *)(v6 + 48);
      __swift_project_boxed_opaque_existential_1(v7, v12);
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v11, v12, v13);
      unint64_t v16 = v15;
      uint64_t v17 = v14;
      switch(v15 >> 62)
      {
        case 1uLL:
          LODWORD(v18) = HIDWORD(v14) - v14;
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_15:
            __break(1u);
            JUMPOUT(0x19F17127CLL);
          }
          uint64_t v18 = (int)v18;
LABEL_9:
          if (v18 == v11)
          {
LABEL_10:
            sub_19F1DAD0C();
            swift_allocObject();
            sub_19F1DACFC();
            sub_19F172C10();
            sub_19F1DACEC();
            sub_19EEA072C(v17, v16);
            uint64_t result = swift_release();
            *(unsigned char *)(v6 + 56) = 1;
            *a1 = v23;
            a1[1] = v24;
          }
          else
          {
LABEL_12:
            sub_19F172BBC();
            swift_allocError();
            *uint64_t v22 = 2;
            swift_willThrow();
            uint64_t result = sub_19EEA072C(v17, v16);
          }
          break;
        case 2uLL:
          uint64_t v20 = *(void *)(v14 + 16);
          uint64_t v19 = *(void *)(v14 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          uint64_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_9;
          }
          goto LABEL_15;
        case 3uLL:
          if (v10) {
            goto LABEL_12;
          }
          goto LABEL_10;
        default:
          uint64_t v18 = BYTE6(v15);
          goto LABEL_9;
      }
    }
  }
  return result;
}

uint64_t sub_19F17128C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  unint64_t v6 = v2[1];
  uint64_t v7 = (void *)v2[2];
  sub_19EEC4154(a1, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE38);
  uint64_t inited = swift_initStackObject();
  uint64_t v9 = inited + 16;
  sub_19EEBB420(v25, inited + 16);
  *(unsigned char *)(inited + 56) = 0;
  sub_19F171054(&v22);
  if (!v3)
  {
    uint64_t v26 = v7;
    unint64_t v10 = *((void *)&v22 + 1);
    uint64_t v12 = v23;
    unint64_t v11 = v24;
    if (*(unsigned char *)(inited + 56) == 1)
    {
      uint64_t v19 = v23;
      unint64_t v20 = v24;
      uint64_t v13 = v22;
      sub_19EEC4154(v9, (uint64_t)&v22);
      sub_19EEC4154(a2, (uint64_t)v21);
      type metadata accessor for CommonCryptoAESGCMCryptor();
      swift_allocObject();
      sub_19EEA0784(v5, v6);
      sub_19EEA0784(v13, v10);
      sub_19F171DC4((uint64_t)&v22, (uint64_t)v21, v5, v6, v13, v10, 1u, (uint64_t)v26);
      sub_19F1714F0();
      uint64_t v26 = sub_19F171780(v19, v20);
      unint64_t v18 = v17;
      swift_release();
      swift_setDeallocating();
      __swift_destroy_boxed_opaque_existential_1Tm(v9);
      sub_19EEA072C(v13, v10);
      sub_19EEA072C(v19, v20);
      return sub_19EEA072C((uint64_t)v26, v18);
    }
    uint64_t v14 = v22;
    sub_19F172BBC();
    swift_allocError();
    *unint64_t v15 = 0;
    swift_willThrow();
    sub_19EEA072C(v14, v10);
    sub_19EEA072C(v12, v11);
  }
  swift_setDeallocating();
  return __swift_destroy_boxed_opaque_existential_1Tm(v9);
}

uint64_t sub_19F1714F0()
{
  v24[1] = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(v0 + 136))
  {
    sub_19F17210C();
    swift_allocError();
    char v3 = 2;
    *(_DWORD *)uint64_t v2 = 2;
LABEL_3:
    *(unsigned char *)(v2 + 4) = v3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v5 = v0;
    unint64_t v6 = (void *)(v0 + 24);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), v7);
    for (uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
          (result & 1) != 0;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22))
    {
      uint64_t v9 = *(void *)(v5 + 48);
      uint64_t v10 = *(void *)(v5 + 56);
      __swift_project_boxed_opaque_existential_1(v6, v9);
      size_t v11 = *(void *)(v5 + 128);
      uint64_t result = (*(uint64_t (**)(void, size_t, uint64_t, uint64_t))(v10 + 32))(*(void *)(v5 + 104), v11, v9, v10);
      if (v1) {
        break;
      }
      size_t v12 = result;
      if (result < 1) {
        goto LABEL_15;
      }
      uint64_t v13 = *(_CCCryptor **)(v5 + 16);
      int64_t OutputLength = CCCryptorGetOutputLength(v13, v11, 1);
      unint64_t v16 = *(void **)(v5 + 112);
      int64_t v15 = *(void *)(v5 + 120);
      if (v15 < OutputLength)
      {
        int64_t v17 = OutputLength;
        if (v16) {
          MEMORY[0x19F3C9470](*(void *)(v5 + 112), -1, -1);
        }
        unint64_t v16 = (void *)swift_slowAlloc();
        *(void *)(v5 + 112) = v16;
        *(void *)(v5 + 120) = v17;
        int64_t v15 = v17;
      }
      if (!v16)
      {
LABEL_15:
        sub_19F17210C();
        swift_allocError();
        *(_DWORD *)uint64_t v2 = 4;
        char v3 = 2;
        goto LABEL_3;
      }
      v24[0] = 0;
      CCCryptorStatus v18 = CCCryptorUpdate(v13, *(const void **)(v5 + 104), v12, v16, v15, v24);
      if (v18)
      {
        CCCryptorStatus v23 = v18;
        sub_19F17210C();
        swift_allocError();
        *(_DWORD *)uint64_t v2 = v23;
        char v3 = 1;
        goto LABEL_3;
      }
      uint64_t v19 = *(void *)(v5 + 88);
      uint64_t v20 = *(void *)(v5 + 96);
      __swift_project_boxed_opaque_existential_1((void *)(v5 + 64), v19);
      (*(void (**)(void *, size_t, uint64_t, uint64_t))(v20 + 16))(v16, v24[0], v19, v20);
      uint64_t v21 = *(void *)(v5 + 48);
      uint64_t v22 = *(void *)(v5 + 56);
      __swift_project_boxed_opaque_existential_1(v6, v21);
    }
  }
  return result;
}

void *sub_19F171780(uint64_t a1, unint64_t a2)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  if (*(unsigned char *)(v2 + 136))
  {
    sub_19F17210C();
    swift_allocError();
    char v5 = 2;
    *(_DWORD *)uint64_t v4 = 2;
LABEL_3:
    *(unsigned char *)(v4 + 4) = v5;
    return (void *)swift_willThrow();
  }
  *(unsigned char *)(v2 + 136) = 1;
  uint64_t result = (void *)sub_19F1721B4(1);
  if (!v3)
  {
    size_t dataOutMoved = 0;
    CCCryptorStatus v9 = CCCryptorFinal(*(CCCryptorRef *)(v2 + 16), result, *(void *)(v2 + 120), &dataOutMoved);
    if (v9)
    {
      CCCryptorStatus v10 = v9;
      sub_19F17210C();
      swift_allocError();
      *(_DWORD *)uint64_t v4 = v10;
      char v5 = 1;
      goto LABEL_3;
    }
    if (a2 >> 60 == 15)
    {
      sub_19F1DB08C();
      swift_allocObject();
      uint64_t v15 = 0x1000000000;
      uint64_t v16 = sub_19F1DB05C();
      sub_19F172258((int *)&v15, 0);
      uint64_t v11 = v15;
      uint64_t v12 = v16 | 0x4000000000000000;
    }
    else
    {
      uint64_t v11 = a1;
      uint64_t v12 = a2;
    }
    uint64_t v18 = v11;
    unint64_t v19 = v12;
    sub_19EEE0560(a1, a2);
    swift_retain();
    int v13 = sub_19F172860(&v18);
    swift_release();
    if (v13)
    {
      sub_19F17210C();
      swift_allocError();
      *(_DWORD *)uint64_t v14 = v13;
      *(unsigned char *)(v14 + 4) = 1;
      swift_willThrow();
      return (void *)sub_19EEA072C(v18, v19);
    }
    else
    {
      return (void *)v18;
    }
  }
  return result;
}

uint64_t sub_19F17197C(uint64_t a1, uint64_t a2)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *v2;
  unint64_t v7 = v2[1];
  uint64_t v8 = v2[2];
  *(void *)((char *)bytes + 6) = 0;
  *(void *)&bytes[0] = 0;
  BYTE14(bytes[0]) = 12;
  if (SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E4F3BC60], 0xCuLL, bytes))
  {
    sub_19F17210C();
    swift_allocError();
    *(_DWORD *)uint64_t v9 = 3;
    *(unsigned char *)(v9 + 4) = 2;
    return swift_willThrow();
  }
  else
  {
    unint64_t v26 = DWORD2(bytes[0]) | ((unint64_t)BYTE12(bytes[0]) << 32) | ((unint64_t)BYTE13(bytes[0]) << 40) | ((unint64_t)BYTE14(bytes[0]) << 48);
    uint64_t v27 = *(void *)&bytes[0];
    uint64_t v11 = type metadata accessor for DataOutputStream();
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_19F256D40;
    sub_19EEC4154(a2, (uint64_t)bytes);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475F90);
    uint64_t inited = swift_initStackObject();
    *(unsigned char *)(inited + 56) = 0;
    sub_19EEBB420(bytes, inited + 16);
    sub_19EEC4154(a1, (uint64_t)v29);
    v28[3] = v11;
    v28[4] = &off_1EF13E808;
    v28[0] = v12;
    type metadata accessor for CommonCryptoAESGCMCryptor();
    swift_allocObject();
    swift_retain();
    sub_19EEA0784(v6, v7);
    sub_19F171DC4((uint64_t)v29, (uint64_t)v28, v6, v7, v27, v26, 0, v8);
    if (v3)
    {
      swift_release();
    }
    else
    {
      uint64_t v14 = v12;
      sub_19F1714F0();
      uint64_t v15 = sub_19F171780(0, 0xF000000000000000);
      uint64_t v17 = v16;
      uint64_t v18 = (uint64_t)v15;
      sub_19EEA0784((uint64_t)v15, v16);
      unint64_t v25 = v17;
      sub_19F170D70(v27, v26, v18, v17);
      swift_beginAccess();
      unint64_t v19 = (void *)(inited + 16);
      if (*(unsigned char *)(inited + 56) == 1)
      {
        uint64_t v20 = *(void *)(v12 + 16);
        unint64_t v21 = *(void *)(v14 + 24);
        uint64_t v22 = *(void *)(inited + 40);
        uint64_t v23 = *(void *)(inited + 48);
        __swift_project_boxed_opaque_existential_1(v19, v22);
        unint64_t v24 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 8);
        sub_19EEA0784(v20, v21);
        v24(v20, v21, v22, v23);
        sub_19EEA072C(v20, v21);
      }
      else
      {
        sub_19EF4F724();
        swift_allocError();
        swift_willThrow();
      }
      sub_19EEA072C(v27, v26);
      sub_19EEA072C(v18, v25);
      sub_19EEA072C(v18, v25);
      swift_release();
      swift_setDeallocating();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
    }
    return swift_release();
  }
}

uint64_t sub_19F171DC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, CCOperation op, uint64_t a8)
{
  *(void *)(v8 + 112) = 0;
  CCCryptorRef v17 = sub_19F1722EC(a3, a4, a5, a6, op, 0xBu, 0, (_CCCryptor *)1);
  if (v9)
  {
    sub_19EEA072C(a5, a6);
    sub_19EEA072C(a3, a4);
    __swift_destroy_boxed_opaque_existential_1Tm(a2);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v8 + 16) = v17;
    *(unsigned char *)(v8 + 136) = 0;
    *(void *)(v8 + 128) = a8;
    sub_19EEC4154(a1, v8 + 24);
    sub_19EEC4154(a2, v8 + 64);
    uint64_t v18 = swift_slowAlloc();
    sub_19EEA072C(a5, a6);
    sub_19EEA072C(a3, a4);
    __swift_destroy_boxed_opaque_existential_1Tm(a2);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    *(void *)(v8 + 104) = v18;
    *(void *)(v8 + 120) = 0;
  }
  return v8;
}

uint64_t sub_19F171F20()
{
  MEMORY[0x19F3C9470](*(void *)(v0 + 104), -1, -1);
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1) {
    MEMORY[0x19F3C9470](v1, -1, -1);
  }
  CCCryptorRelease(*(CCCryptorRef *)(v0 + 16));
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CommonCryptoAESGCMCryptor()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for CommonCryptoAESGCMCryptor.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F17207CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonCryptoAESGCMCryptor.State()
{
  return &type metadata for CommonCryptoAESGCMCryptor.State;
}

unint64_t sub_19F1720B8()
{
  unint64_t result = qword_1E9475F80;
  if (!qword_1E9475F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475F80);
  }
  return result;
}

unint64_t sub_19F17210C()
{
  unint64_t result = qword_1E9475F88;
  if (!qword_1E9475F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475F88);
  }
  return result;
}

unint64_t sub_19F172160()
{
  unint64_t result = qword_1E9475F98;
  if (!qword_1E9475F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475F98);
  }
  return result;
}

uint64_t sub_19F1721B4(char a1)
{
  int64_t OutputLength = CCCryptorGetOutputLength(*(CCCryptorRef *)(v1 + 16), *(void *)(v1 + 128), a1 & 1);
  uint64_t result = *(void *)(v1 + 112);
  if (*(void *)(v1 + 120) < OutputLength)
  {
    if (result) {
      MEMORY[0x19F3C9470](result, -1, -1);
    }
    uint64_t result = swift_slowAlloc();
    *(void *)(v1 + 112) = result;
    *(void *)(v1 + 120) = OutputLength;
  }
  if (!result)
  {
    sub_19F17210C();
    swift_allocError();
    *(_DWORD *)uint64_t v4 = 4;
    *(unsigned char *)(v4 + 4) = 2;
    return swift_willThrow();
  }
  return result;
}

char *sub_19F172258(int *a1, int a2)
{
  uint64_t result = (char *)sub_19F1DB39C();
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = (char *)sub_19F1DB04C();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  unint64_t v7 = result;
  uint64_t result = (char *)sub_19F1DB07C();
  uint64_t v8 = v5 - (void)result;
  if (__OFSUB__(v5, result))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v9 = v6 - v5;
  uint64_t v10 = sub_19F1DB06C();
  if (v10 >= v9) {
    size_t v11 = v9;
  }
  else {
    size_t v11 = v10;
  }
  return (char *)memset(&v7[v8], a2, v11);
}

CCCryptorRef sub_19F1722EC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, CCOperation op, CCMode mode, CCAlgorithm alg, _CCCryptor *padding)
{
  cryptorRef[1] = *(CCCryptorRef *)MEMORY[0x1E4F143B8];
  unint64_t v8 = a2 >> 62;
  CCCryptorRef v9 = padding;
  unint64_t v13 = a4;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v16) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      uint64_t v16 = (int)v16;
LABEL_6:
      if (v16 == 16)
      {
        cryptorRef[0] = 0;
        if (!v8)
        {
          key[0] = a1;
          LOWORD(key[1]) = a2;
          BYTE2(key[1]) = BYTE2(a2);
          BYTE3(key[1]) = BYTE3(a2);
          BYTE4(key[1]) = BYTE4(a2);
          BYTE5(key[1]) = BYTE5(a2);
          CCCryptorRef v9 = (CCCryptorRef)CCCryptorCreateWithMode(op, mode, alg, (CCPadding)padding, 0, key, BYTE6(a2), 0, 0, 0, 0, cryptorRef);
          if (v9)
          {
LABEL_26:
            sub_19F17210C();
            swift_allocError();
            *(_DWORD *)uint64_t v22 = v9;
LABEL_27:
            char v23 = 1;
            goto LABEL_28;
          }
LABEL_17:
          CCCryptorRef v9 = cryptorRef[0];
          if (cryptorRef[0])
          {
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)a3 > a3 >> 32) {
                  goto LABEL_52;
                }
                sub_19EEA0784(a3, v13);
                if (sub_19F1DB04C() && __OFSUB__((int)a3, sub_19F1DB07C())) {
                  goto LABEL_55;
                }
                sub_19F1DB06C();
                if (__OFSUB__(HIDWORD(a3), a3)) {
                  goto LABEL_54;
                }
                int v30 = CCCryptorGCMSetIV();
                sub_19EEA072C(a3, v13);
                if (!v30) {
                  return v9;
                }
LABEL_44:
                sub_19F17210C();
                swift_allocError();
                *(_DWORD *)uint64_t v22 = v30;
                break;
              case 2uLL:
                uint64_t v31 = *(void *)(a3 + 16);
                swift_retain();
                swift_retain();
                if (sub_19F1DB04C() && __OFSUB__(v31, sub_19F1DB07C())) {
                  goto LABEL_56;
                }
                sub_19F1DB06C();
                if (__OFSUB__(*(void *)(a3 + 24), *(void *)(a3 + 16))) {
                  goto LABEL_53;
                }
                int v30 = CCCryptorGCMSetIV();
                swift_release();
                swift_release();
                if (!v30) {
                  return v9;
                }
                goto LABEL_44;
              case 3uLL:
                memset(key, 0, 14);
                goto LABEL_43;
              default:
                key[0] = a3;
                LOWORD(key[1]) = v13;
                BYTE2(key[1]) = BYTE2(v13);
                BYTE3(key[1]) = BYTE3(v13);
                BYTE4(key[1]) = BYTE4(v13);
                BYTE5(key[1]) = BYTE5(v13);
LABEL_43:
                int v30 = CCCryptorGCMSetIV();
                if (v30) {
                  goto LABEL_44;
                }
                return v9;
            }
          }
          else
          {
            sub_19F17210C();
            swift_allocError();
            *(_DWORD *)uint64_t v22 = 0;
          }
          goto LABEL_27;
        }
        if (v8 != 1)
        {
          uint64_t v24 = *(void *)(a1 + 16);
          swift_retain();
          swift_retain();
          unint64_t v25 = (char *)sub_19F1DB04C();
          if (v25)
          {
            uint64_t v26 = sub_19F1DB07C();
            if (__OFSUB__(v24, v26))
            {
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
            }
            v25 += v24 - v26;
          }
          sub_19F1DB06C();
          uint64_t v28 = *(void *)(a1 + 16);
          uint64_t v27 = *(void *)(a1 + 24);
          if (!__OFSUB__(v27, v28))
          {
            CCCryptorRef v9 = (CCCryptorRef)CCCryptorCreateWithMode(op, mode, alg, (CCPadding)v9, 0, v25, v27 - v28, 0, 0, 0, 0, cryptorRef);
            swift_release();
            swift_release();
LABEL_25:
            unint64_t v13 = a4;
            if (v9) {
              goto LABEL_26;
            }
            goto LABEL_17;
          }
          goto LABEL_49;
        }
        CCPadding paddinga = padding;
        if ((int)a1 <= a1 >> 32)
        {
          sub_19EEA0784(a1, a2);
          uint64_t v20 = (char *)sub_19F1DB04C();
          if (v20)
          {
            uint64_t v21 = sub_19F1DB07C();
            if (__OFSUB__((int)a1, v21))
            {
LABEL_50:
              __break(1u);
              goto LABEL_51;
            }
            v20 += (int)a1 - v21;
          }
          sub_19F1DB06C();
          if (!__OFSUB__(HIDWORD(a1), a1))
          {
            CCCryptorRef v9 = (CCCryptorRef)CCCryptorCreateWithMode(op, mode, alg, paddinga, 0, v20, HIDWORD(a1) - (int)a1, 0, 0, 0, 0, cryptorRef);
            sub_19EEA072C(a1, a2);
            goto LABEL_25;
          }
          goto LABEL_48;
        }
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_15:
      sub_19F17210C();
      swift_allocError();
      *(_DWORD *)uint64_t v22 = 0;
      char v23 = 2;
LABEL_28:
      *(unsigned char *)(v22 + 4) = v23;
      swift_willThrow();
      return v9;
    case 2uLL:
      uint64_t v18 = *(void *)(a1 + 16);
      uint64_t v17 = *(void *)(a1 + 24);
      BOOL v19 = __OFSUB__(v17, v18);
      uint64_t v16 = v17 - v18;
      if (!v19) {
        goto LABEL_6;
      }
      goto LABEL_46;
    case 3uLL:
      goto LABEL_15;
    default:
      uint64_t v16 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_19F172860(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v5 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_19F256D40;
      swift_retain_n();
      uint64_t v6 = v2 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_14;
      }
      if (v6 < (int)v2) {
        goto LABEL_21;
      }
      if (sub_19F1DB04C() && __OFSUB__((int)v2, sub_19F1DB07C())) {
        goto LABEL_22;
      }
      sub_19F1DB08C();
      swift_allocObject();
      uint64_t v9 = sub_19F1DB02C();
      swift_release();
      uint64_t v5 = v9;
LABEL_14:
      if (v6 < (int)v2) {
        goto LABEL_19;
      }
      swift_retain();
      if (!sub_19F1DB04C()) {
        goto LABEL_24;
      }
      if (__OFSUB__((int)v2, sub_19F1DB07C())) {
        goto LABEL_20;
      }
      sub_19F1DB06C();
      uint64_t v10 = CCCryptorGCMFinalize();
      swift_release_n();
      *a1 = v2;
      a1[1] = v5 | 0x4000000000000000;
      uint64_t result = v10;
      break;
    case 2uLL:
      uint64_t v11 = *a1;
      uint64_t v13 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      swift_retain_n();
      sub_19F1DB35C();
      uint64_t v7 = *(void *)(v11 + 16);
      swift_retain();
      if (!sub_19F1DB04C())
      {
        __break(1u);
LABEL_24:
        __break(1u);
        JUMPOUT(0x19F172BACLL);
      }
      if (__OFSUB__(v7, sub_19F1DB07C()))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
      }
      sub_19F1DB06C();
      uint64_t v8 = CCCryptorGCMFinalize();
      swift_release_n();
      *a1 = v11;
      a1[1] = v13 | 0x8000000000000000;
      uint64_t result = v8;
      break;
    case 3uLL:
      return CCCryptorGCMFinalize();
    default:
      LOWORD(v12) = a1[1];
      BYTE2(v12) = BYTE2(a1[1]);
      HIBYTE(v12) = BYTE3(a1[1]);
      __int16 v14 = WORD2(a1[1]);
      unsigned __int8 v15 = BYTE6(a1[1]);
      uint64_t result = CCCryptorGCMFinalize();
      *a1 = v2;
      a1[1] = v12 | ((unint64_t)v14 << 32) | ((unint64_t)HIBYTE(v14) << 40) | ((unint64_t)v15 << 48);
      return result;
  }
  return result;
}

unint64_t sub_19F172BBC()
{
  unint64_t result = qword_1E9475FA0;
  if (!qword_1E9475FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475FA0);
  }
  return result;
}

unint64_t sub_19F172C10()
{
  unint64_t result = qword_1E946FDB0[0];
  if (!qword_1E946FDB0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E946FDB0);
  }
  return result;
}

uint64_t destroy for CommonCryptoPackageEncryption(uint64_t a1)
{
  return sub_19EEA072C(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *_s9JetEngine29CommonCryptoPackageEncryptionVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_19EEA0784(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithCopy for CommonCryptoPackageEncryption(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_19EEA0784(*a2, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_19EEA072C(v6, v7);
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for CommonCryptoPackageEncryption(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_19EEA072C(v4, v5);
  a1[2] = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonCryptoPackageEncryption(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CommonCryptoPackageEncryption(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonCryptoPackageEncryption()
{
  return &type metadata for CommonCryptoPackageEncryption;
}

void SystemInfoMetricsFieldsProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_19F172E1C(uint64_t a1)
{
  return SystemInfoMetricsFieldsProvider.addMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for SystemInfoMetricsFieldsProvider()
{
  return &type metadata for SystemInfoMetricsFieldsProvider;
}

uint64_t JetPackFileStreamSource.path.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_19F172E74()
{
  unint64_t result = qword_1E9475FA8;
  if (!qword_1E9475FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475FA8);
  }
  return result;
}

uint64_t sub_19F172EC8(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + 24);
  if (v2)
  {
    uint64_t v3 = *(void *)(v1 + 16);
    if (qword_1EB390B70 != -1) {
      unint64_t result = swift_once();
    }
    uint64_t v6 = v3;
    uint64_t v7 = v2;
    uint64_t v4 = *(os_unfair_lock_s **)(qword_1EB394EE0 + 16);
    MEMORY[0x1F4188790](result);
    swift_retain();
    os_unfair_lock_lock(v4 + 6);
    sub_19F170D54((uint64_t)v5);
    os_unfair_lock_unlock(v4 + 6);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_19F172FBC@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_19EEB3E98(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_19F172FFC@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = sub_19F04282C(v8, v3, v4);
  uint64_t v6 = v8[0];
  uint64_t v7 = v8[1];
  *(unsigned char *)a2 = result & 1;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v7;
  return result;
}

ValueMetadata *type metadata accessor for FoundationDictionary()
{
  return &type metadata for FoundationDictionary;
}

void sub_19F173074(void (*a1)(char *, char *, uint64_t, uint64_t, long long *), uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  v78 = a1;
  uint64_t v79 = a2;
  uint64_t v12 = sub_19F1DCAAC();
  MEMORY[0x1F4188790](v12 - 8);
  v76 = (char *)&v66 - v13;
  uint64_t v14 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v15);
  v81 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v18);
  v75 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v66 - v21;
  uint64_t v77 = a4;
  uint64_t v74 = a6;
  v100[6] = sub_19F1DBAEC();
  v80 = a3;
  sub_19F1DC77C();
  uint64_t v85 = swift_retain();
  sub_19F1DC78C();
  sub_19EEC1178((uint64_t)&v95, (uint64_t)&v98);
  if (!v99)
  {
LABEL_35:
    swift_release_n();
    return;
  }
  v84 = v100;
  unint64_t v66 = (unint64_t)"ffer";
  BOOL v24 = (0x800000019F274770 & 0x2000000000000000) == 0 || (0x800000019F274770 & 0xF00000000000000) != 0;
  BOOL v73 = v24;
  v71 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  v72 = (void (**)(char *, char *, uint64_t))(v17 + 16);
  v69 = (void (**)(char *, uint64_t))(v14 + 8);
  v70 = (void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  v68 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v83 = MEMORY[0x1E4FBC840] + 8;
  long long v82 = xmmword_19F24EAD0;
  unint64_t v25 = v81;
  v86 = v22;
  uint64_t v67 = a5;
  while (1)
  {
    sub_19EEBDC00(&v98, v94);
    sub_19EEBDC00(v84, v93);
    sub_19EEBDBA4((uint64_t)v94, (uint64_t)&v95);
    sub_19EEBDC10(0, (unint64_t *)&unk_1EB392290);
    if (!swift_dynamicCast()) {
      break;
    }
    uint64_t v26 = (void *)v88;
    *((void *)&v96 + 1) = &type metadata for FoundationValue;
    v97 = &off_1EF13D8F8;
    *(void *)&long long v95 = swift_allocObject();
    sub_19EEBDBA4((uint64_t)v93, v95 + 16);
    uint64_t v27 = sub_19F1DBD7C();
    v78(v22, v25, v27, v28, &v95);
    if (v7)
    {

      swift_release_n();
      swift_bridgeObjectRelease();
      sub_19EEC3418((uint64_t)&v95);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v93);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v94);
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = v77;
    (*v72)(v75, v86, v77);
    int v30 = v76;
    (*v71)(v76, v25, a5);
    (*v70)(v30, 0, 1, a5);
    sub_19F1DBC0C();
    uint64_t v22 = v86;
    sub_19F1DBC6C();

    (*v69)(v25, a5);
    (*v68)(v22, v29);
    sub_19EEC3418((uint64_t)&v95);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v93);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v94);
LABEL_11:
    sub_19F1DC78C();
    sub_19EEC1178((uint64_t)&v95, (uint64_t)&v98);
    if (!v99) {
      goto LABEL_35;
    }
  }
  if (qword_1E946F668 != -1) {
    swift_once();
  }
  uint64_t v31 = (void *)qword_1E946F658;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v82;
  v33 = v31;
  v34 = sub_19EEC3F3C(0, 43, 0, MEMORY[0x1E4FBC860]);
  v92 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
  unint64_t v90 = 0x697274532D6E6F4ELL;
  unint64_t v91 = 0xEF2079656B20676ELL;
  long long v88 = 0u;
  long long v89 = 0u;
  sub_19EEC3E70((uint64_t)&v90, (uint64_t)&v88);
  LOBYTE(v97) = 0;
  long long v95 = v88;
  long long v96 = v89;
  unint64_t v36 = v34[2];
  unint64_t v35 = v34[3];
  if (v36 >= v35 >> 1) {
    v34 = sub_19EEC3F3C((void *)(v35 > 1), v36 + 1, 1, v34);
  }
  v34[2] = v36 + 1;
  v37 = &v34[5 * v36];
  *((_OWORD *)v37 + 2) = v95;
  *((_OWORD *)v37 + 3) = v96;
  *((unsigned char *)v37 + 64) = (_BYTE)v97;
  sub_19EEBDBA4((uint64_t)v94, (uint64_t)&v90);
  sub_19EEBCD00((uint64_t)&v90, (uint64_t)v87);
  long long v88 = 0u;
  long long v89 = 0u;
  sub_19EEC3E70((uint64_t)v87, (uint64_t)&v88);
  LOBYTE(v97) = 0;
  long long v95 = v88;
  long long v96 = v89;
  unint64_t v39 = v34[2];
  unint64_t v38 = v34[3];
  if (v39 >= v38 >> 1) {
    v34 = sub_19EEC3F3C((void *)(v38 > 1), v39 + 1, 1, v34);
  }
  v34[2] = v39 + 1;
  v40 = &v34[5 * v39];
  long long v41 = v95;
  long long v42 = v96;
  *((unsigned char *)v40 + 64) = (_BYTE)v97;
  *((_OWORD *)v40 + 2) = v41;
  *((_OWORD *)v40 + 3) = v42;
  sub_19EEBCB4C((uint64_t)&v90);
  if (v73)
  {
    v92 = (ValueMetadata *)MEMORY[0x1E4FBB1A0];
    unint64_t v90 = 0xD00000000000001ALL;
    unint64_t v91 = v66 | 0x8000000000000000;
    long long v88 = 0u;
    long long v89 = 0u;
    sub_19EEC3E70((uint64_t)&v90, (uint64_t)&v88);
    LOBYTE(v97) = 0;
    long long v95 = v88;
    long long v96 = v89;
    unint64_t v44 = v34[2];
    unint64_t v43 = v34[3];
    if (v44 >= v43 >> 1) {
      v34 = sub_19EEC3F3C((void *)(v43 > 1), v44 + 1, 1, v34);
    }
    v34[2] = v44 + 1;
    v45 = &v34[5 * v44];
    long long v46 = v95;
    long long v47 = v96;
    *((unsigned char *)v45 + 64) = (_BYTE)v97;
    *((_OWORD *)v45 + 2) = v46;
    *((_OWORD *)v45 + 3) = v47;
  }
  v92 = &type metadata for FoundationDictionary;
  v48 = v80;
  unint64_t v90 = (unint64_t)v80;
  sub_19EEBCD00((uint64_t)&v90, (uint64_t)v87);
  long long v88 = 0u;
  long long v89 = 0u;
  id v49 = v48;
  sub_19EEC3E70((uint64_t)v87, (uint64_t)&v88);
  LOBYTE(v97) = 0;
  long long v95 = v88;
  long long v96 = v89;
  unint64_t v51 = v34[2];
  unint64_t v50 = v34[3];
  if (v51 >= v50 >> 1) {
    v34 = sub_19EEC3F3C((void *)(v50 > 1), v51 + 1, 1, v34);
  }
  v34[2] = v51 + 1;
  v52 = &v34[5 * v51];
  long long v53 = v95;
  long long v54 = v96;
  *((unsigned char *)v52 + 64) = (_BYTE)v97;
  *((_OWORD *)v52 + 2) = v53;
  *((_OWORD *)v52 + 3) = v54;
  sub_19EEBCB4C((uint64_t)&v90);
  *(void *)(v32 + 32) = v34;
  os_log_type_t v55 = sub_19F1DC7CC();
  if (!os_log_type_enabled(v33, v55))
  {

    swift_bridgeObjectRelease();
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v93);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v94);
    unint64_t v25 = v81;
    goto LABEL_11;
  }
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  v56 = (unsigned char *)(qword_1EB391C90 + 16);
  v57 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v57);
  sub_19EEC4E5C(v56, &v95);
  if (!v7)
  {
    uint64_t v7 = 0;
    os_unfair_lock_unlock(v57);
    int v58 = v95;
    swift_release();
    if (v58 == 2) {
      char has_internal_content = os_variant_has_internal_content();
    }
    else {
      char has_internal_content = v58 & 1;
    }
    char v60 = has_internal_content ^ 1;
    uint64_t v61 = swift_allocObject();
    *(unsigned char *)(v61 + 16) = v60;
    *(void *)&long long v95 = v32;
    *((void *)&v95 + 1) = sub_19EEDF8DC;
    *(void *)&long long v96 = v61;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393220);
    sub_19EEC6824();
    uint64_t v62 = sub_19F1DBCCC();
    uint64_t v64 = v63;
    swift_release();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = v82;
    *(void *)(v65 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v65 + 64) = sub_19EEC67D0();
    *(void *)(v65 + 32) = v62;
    *(void *)(v65 + 40) = v64;
    sub_19F1DB7EC();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a5 = v67;
    uint64_t v22 = v86;
    goto LABEL_10;
  }
  os_unfair_lock_unlock(v57);
  __break(1u);
}

void *sub_19F1739FC(void *a1)
{
  uint64_t v2 = sub_19F1DB1BC();
  uint64_t v15 = *(void *)(v2 - 8);
  double v3 = MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_keyEnumerator, v3);
  sub_19F1DC79C();
  id v14 = v6;

  sub_19F173C8C();
  sub_19F1DCB2C();
  if (v21)
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      sub_19EEBDC00(&v20, v19);
      sub_19EEBDBA4((uint64_t)v19, (uint64_t)v16);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v17 = 0;
        uint64_t v18 = 0;
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
      uint64_t v9 = v18;
      if (v18)
      {
        uint64_t v10 = v17;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_19EE91FA0(0, v7[2] + 1, 1, v7);
        }
        unint64_t v12 = v7[2];
        unint64_t v11 = v7[3];
        if (v12 >= v11 >> 1) {
          uint64_t v7 = sub_19EE91FA0((void *)(v11 > 1), v12 + 1, 1, v7);
        }
        v7[2] = v12 + 1;
        uint64_t v8 = &v7[2 * v12];
        v8[4] = v10;
        v8[5] = v9;
      }
      sub_19F1DCB2C();
    }
    while (v21);
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v2);

  return v7;
}

BOOL sub_19F173C30()
{
  return objc_msgSend(*v0, sel_count) == 0;
}

void sub_19F173C5C(void (*a1)(char *, char *, uint64_t, uint64_t, long long *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_19F173074(a1, a2, *v5, a3, a4, a5);
}

void *sub_19F173C84()
{
  return sub_19F1739FC(*v0);
}

unint64_t sub_19F173C8C()
{
  unint64_t result = qword_1E946FAA8;
  if (!qword_1E946FAA8)
  {
    sub_19F1DB1BC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946FAA8);
  }
  return result;
}

uint64_t sub_19F173CE4()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_19F173CF4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F173D2C()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

BOOL static ImpressionsTracking.ImpressionableItem.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ImpressionsTracking.ImpressionableItem.State.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t ImpressionsTracking.ImpressionableItem.State.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:)(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v14 = swift_allocObject();
  ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:)(uint64_t a1, char a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7)
{
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 72);
  *(void *)(v7 + 168) = 0;
  *(_OWORD *)(v7 + 72) = *(_OWORD *)a1;
  *(void *)(v7 + 88) = v13;
  *(void *)(v7 + 96) = v14;
  *(_OWORD *)(v7 + 104) = *(_OWORD *)(a1 + 32);
  *(void *)(v7 + 120) = v15;
  *(_OWORD *)(v7 + 128) = *(_OWORD *)(a1 + 56);
  *(void *)(v7 + 144) = v16;
  *(unsigned char *)(v7 + 161) = 1;
  *(CGFloat *)(v7 + 184) = a3;
  *(CGFloat *)(v7 + 192) = a4;
  *(CGFloat *)(v7 + 200) = a5;
  *(CGFloat *)(v7 + 208) = a6;
  *(double *)(v7 + 16) = a7;
  *(unsigned char *)(v7 + 24) = a2;
  double v17 = CGRectGetWidth(*(CGRect *)&a3) * a7;
  v29.origin.x = a3;
  v29.origin.y = a4;
  v29.size.width = a5;
  v29.size.height = a6;
  double v27 = CGRectGetHeight(v29) * a7;
  v30.origin.x = a3;
  v30.origin.y = a4;
  v30.size.width = a5;
  v30.size.height = a6;
  double MinX = CGRectGetMinX(v30);
  v31.origin.x = a3;
  v31.origin.y = a4;
  v31.size.width = a5;
  v31.size.height = a6;
  double MinY = CGRectGetMinY(v31);
  double v19 = fabs(a7 + -0.5);
  if (v19 >= 0.01)
  {
    v32.origin.x = a3;
    v32.origin.y = a4;
    double v26 = MinY;
    v32.size.width = a5;
    v32.size.height = a6;
    CGFloat v25 = CGRectGetMaxX(v32) - v17 + 0.0;
    v33.origin.x = a3;
    v33.origin.y = a4;
    v33.size.width = a5;
    v33.size.height = a6;
    double v22 = CGRectGetMaxY(v33) - v27 + 0.0;
    BOOL v20 = a7 > 0.5;
    double v23 = v27;
    CGFloat v21 = v25;
    double MinY = v26;
  }
  else
  {
    BOOL v20 = 0;
    CGFloat v21 = 0.0;
    double v22 = 0.0;
    double v23 = v27;
  }
  *(double *)(v7 + 32) = v17 + MinX + 0.0;
  *(double *)(v7 + 40) = v23 + MinY + 0.0;
  *(CGFloat *)(v7 + 48) = v21;
  *(double *)(v7 + 56) = v22;
  *(unsigned char *)(v7 + 64) = v19 < 0.01;
  *(unsigned char *)(v7 + 65) = v20;
  *(unsigned char *)(v7 + 176) = 0;
  *(void *)(v7 + 152) = 0;
  *(unsigned char *)(v7 + 160) = 1;
  return v7;
}

uint64_t ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:position:)(uint64_t a1, char a2, uint64_t a3, char a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  char v17 = a4 & 1;
  uint64_t v18 = swift_allocObject();
  ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:position:)(a1, a2, a3, v17, a5, a6, a7, a8, a9);
  return v18;
}

uint64_t ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  uint64_t v12 = swift_allocObject();
  ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t ImpressionsTracking.ImpressionableItem.init(item:rect:visibleThreshold:)(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, double a6)
{
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 72);
  *(void *)(v6 + 168) = 0;
  *(_OWORD *)(v6 + 72) = *(_OWORD *)a1;
  *(void *)(v6 + 88) = v12;
  *(void *)(v6 + 96) = v13;
  *(_OWORD *)(v6 + 104) = *(_OWORD *)(a1 + 32);
  *(void *)(v6 + 120) = v14;
  *(_OWORD *)(v6 + 128) = *(_OWORD *)(a1 + 56);
  *(void *)(v6 + 144) = v15;
  *(unsigned char *)(v6 + 161) = 1;
  *(CGFloat *)(v6 + 184) = a2;
  *(CGFloat *)(v6 + 192) = a3;
  *(CGFloat *)(v6 + 200) = a4;
  *(CGFloat *)(v6 + 208) = a5;
  *(double *)(v6 + 16) = a6;
  *(unsigned char *)(v6 + 24) = 1;
  double v16 = CGRectGetWidth(*(CGRect *)&a2) * a6;
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  double v26 = CGRectGetHeight(v28) * a6;
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  double MinX = CGRectGetMinX(v29);
  v30.origin.x = a2;
  v30.origin.y = a3;
  v30.size.width = a4;
  v30.size.height = a5;
  double MinY = CGRectGetMinY(v30);
  double v18 = fabs(a6 + -0.5);
  if (v18 >= 0.01)
  {
    v31.origin.x = a2;
    v31.origin.y = a3;
    double v25 = MinY;
    v31.size.width = a4;
    v31.size.height = a5;
    CGFloat v24 = CGRectGetMaxX(v31) - v16 + 0.0;
    v32.origin.x = a2;
    v32.origin.y = a3;
    v32.size.width = a4;
    v32.size.height = a5;
    double v21 = CGRectGetMaxY(v32) - v26 + 0.0;
    BOOL v19 = a6 > 0.5;
    double v22 = v26;
    CGFloat v20 = v24;
    double MinY = v25;
  }
  else
  {
    BOOL v19 = 0;
    CGFloat v20 = 0.0;
    double v21 = 0.0;
    double v22 = v26;
  }
  *(double *)(v6 + 32) = v16 + MinX + 0.0;
  *(double *)(v6 + 40) = v22 + MinY + 0.0;
  *(CGFloat *)(v6 + 48) = v20;
  *(double *)(v6 + 56) = v21;
  *(unsigned char *)(v6 + 64) = v18 < 0.01;
  *(unsigned char *)(v6 + 65) = v19;
  *(unsigned char *)(v6 + 176) = 0;
  *(void *)(v6 + 152) = 0;
  *(unsigned char *)(v6 + 160) = 1;
  return v6;
}

uint64_t ImpressionsTracking.ImpressionableItem.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t v4 = *(void *)(v1 + 128);
  uint64_t v5 = *(void *)(v1 + 136);
  uint64_t v6 = *(void *)(v1 + 144);
  *(void *)a1 = *(void *)(v1 + 72);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 80);
  *(void *)(a1 + 24) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 48) = v3;
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsTracking.ImpressionableItem.position.getter()
{
  return *(void *)(v0 + 152);
}

uint64_t ImpressionsTracking.ImpressionableItem.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 161);
  return result;
}

uint64_t ImpressionsTracking.ImpressionableItem.state.setter(char *a1)
{
  char v2 = *a1;
  swift_beginAccess();
  *(unsigned char *)(v1 + 161) = v2;
  return sub_19EE89460();
}

uint64_t (*ImpressionsTracking.ImpressionableItem.state.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_19F1744A4;
}

uint64_t sub_19F1744A4(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_19EE89460();
  }
  return result;
}

uint64_t ImpressionsTracking.ImpressionableItem.childImpressionsCalculator.getter()
{
  return swift_retain();
}

uint64_t ImpressionsTracking.ImpressionableItem.childImpressionsCalculator.setter(uint64_t a1)
{
  sub_19EE8BC00(a1);
  return swift_release();
}

void ImpressionsTracking.ImpressionableItem.isContainer.setter(char a1)
{
  swift_beginAccess();
  *(unsigned char *)(v1 + 176) = a1;
  sub_19EE8BDA4();
}

void (*ImpressionsTracking.ImpressionableItem.childImpressionsCalculator.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = *(void *)(v1 + 168);
  swift_retain();
  return sub_19F174608;
}

void sub_19F174608(uint64_t a1, char a2)
{
  char v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    uint64_t v4 = swift_retain();
    sub_19EE8BC00(v4);
    swift_release();
  }
  else
  {
    sub_19EE8BC00(v3);
  }
  swift_release();
  free(v2);
}

uint64_t ImpressionsTracking.ImpressionableItem.childCalculator.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 168);
  if (v1)
  {
    type metadata accessor for Unstable.ImpressionsCalculator();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_retain();
  return v2;
}

uint64_t sub_19F1746EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 168);
  if (v4)
  {
    type metadata accessor for Unstable.ImpressionsCalculator();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
  return swift_retain();
}

uint64_t sub_19F174760(uint64_t a1)
{
  if (*(void *)a1)
  {
    uint64_t v1 = *(void *)(*(void *)a1 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v1 = 0;
  }
  swift_retain();
  sub_19EE8BC00(v1);
  swift_release();
  return swift_release();
}

uint64_t ImpressionsTracking.ImpressionableItem.childCalculator.setter(uint64_t a1)
{
  if (a1)
  {
    uint64_t v1 = *(void *)(a1 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v1 = 0;
  }
  sub_19EE8BC00(v1);
  swift_release();
  return swift_release();
}

void (*ImpressionsTracking.ImpressionableItem.childCalculator.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = v3 + 3;
  v3[4] = v1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 168);
  if (v5)
  {
    type metadata accessor for Unstable.ImpressionsCalculator();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *uint64_t v4 = v6;
  swift_retain();
  return sub_19F1748D8;
}

void sub_19F1748D8(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    if (v3)
    {
      uint64_t v4 = *(void *)(v3 + 16);
      swift_retain();
    }
    else
    {
      uint64_t v4 = 0;
    }
    swift_retain();
    sub_19EE8BC00(v4);
    swift_release();
    swift_release();
  }
  else
  {
    if (v3)
    {
      uint64_t v5 = *(void *)(v3 + 16);
      swift_retain();
    }
    else
    {
      uint64_t v5 = 0;
    }
    sub_19EE8BC00(v5);
    swift_release();
  }
  swift_release();
  free(v2);
}

uint64_t ImpressionsTracking.ImpressionableItem.isContainer.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t (*ImpressionsTracking.ImpressionableItem.isContainer.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_19F174A24;
}

double ImpressionsTracking.ImpressionableItem.itemFrame.getter()
{
  swift_beginAccess();
  return *(double *)(v0 + 184);
}

void sub_19F174A60(long long *a1, uint64_t *a2)
{
  long long v5 = *a1;
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(_OWORD *)(v4 + 184) = v5;
  *(void *)(v4 + 200) = v2;
  *(void *)(v4 + 208) = v3;
  sub_19EE8BDA4();
}

void ImpressionsTracking.ImpressionableItem.itemFrame.setter(double a1, double a2, double a3, double a4)
{
  swift_beginAccess();
  v4[23] = a1;
  v4[24] = a2;
  v4[25] = a3;
  v4[26] = a4;
  sub_19EE8BDA4();
}

uint64_t (*ImpressionsTracking.ImpressionableItem.itemFrame.modify(uint64_t a1))()
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_19F174A24;
}

void sub_19F174B74(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_19EE8BDA4();
  }
}

uint64_t ImpressionsTracking.ImpressionableItem.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ImpressionsTracking.ImpressionableItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_19F174CA8(double a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, double a9@<D4>)
{
  double v33 = CGRectGetWidth(*(CGRect *)&a5) * a9;
  v34.origin.x = a5;
  v34.origin.y = a6;
  v34.size.width = a7;
  v34.size.height = a8;
  double v18 = CGRectGetHeight(v34) * a9;
  double v19 = a1;
  double v20 = a2;
  double v21 = 0.0;
  if (a3) {
    double v20 = 0.0;
  }
  double v29 = v20;
  if (a3) {
    double v19 = 0.0;
  }
  double v31 = v18;
  double v32 = v19;
  v35.origin.x = a5;
  v35.origin.y = a6;
  v35.size.width = a7;
  v35.size.height = a8;
  double MinX = CGRectGetMinX(v35);
  v36.origin.x = a5;
  v36.origin.y = a6;
  v36.size.width = a7;
  v36.size.height = a8;
  double MinY = CGRectGetMinY(v36);
  double v23 = fabs(a9 + -0.5);
  if (v23 >= 0.01)
  {
    v37.origin.x = a5;
    v37.origin.y = a6;
    v37.size.width = a7;
    double v28 = MinY;
    v37.size.height = a8;
    double v21 = v32 + CGRectGetMaxX(v37) - v33;
    v38.origin.x = a5;
    v38.origin.y = a6;
    v38.size.width = a7;
    v38.size.height = a8;
    double v25 = v29 + CGRectGetMaxY(v38) - v31;
    BOOL v24 = a9 > 0.5;
    double v26 = v31;
    double v27 = v29;
    double MinY = v28;
  }
  else
  {
    BOOL v24 = 0;
    double v25 = 0.0;
    double v26 = v31;
    double v27 = v29;
  }
  *(double *)a4 = v32 + v33 + MinX;
  *(double *)(a4 + 8) = v27 + v26 + MinY;
  *(double *)(a4 + 16) = v21;
  *(double *)(a4 + 24) = v25;
  *(unsigned char *)(a4 + 32) = v23 < 0.01;
  *(unsigned char *)(a4 + 33) = v24;
}

unint64_t sub_19F174E58()
{
  unint64_t result = qword_1E9475FB0;
  if (!qword_1E9475FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475FB0);
  }
  return result;
}

uint64_t sub_19F174EAC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 161);
  return result;
}

uint64_t sub_19F174EF4(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(unsigned char *)(v3 + 161) = v2;
  return sub_19EE89460();
}

uint64_t sub_19F174F3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 168);
  return swift_retain();
}

uint64_t sub_19F174F88()
{
  uint64_t v0 = swift_retain();
  sub_19EE8BC00(v0);
  return swift_release();
}

uint64_t sub_19F174FD4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 176);
  return result;
}

void sub_19F17501C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(unsigned char *)(v3 + 176) = v2;
  sub_19EE8BDA4();
}

__n128 sub_19F175064@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  __n128 result = *(__n128 *)(v3 + 184);
  long long v5 = *(_OWORD *)(v3 + 200);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t method lookup function for ImpressionsTracking.ImpressionableItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImpressionsTracking.ImpressionableItem);
}

uint64_t dispatch thunk of ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:overrideVisibleThresholdForContainer:position:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 160))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of ImpressionsTracking.ImpressionableItem.__allocating_init(item:rect:visibleThreshold:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

unsigned char *_s18ImpressionableItemC5StateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1751D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTracking.ImpressionableItem.State()
{
  return &type metadata for ImpressionsTracking.ImpressionableItem.State;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s18ImpressionableItemC16ImpressionPointsVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 33);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s18ImpressionableItemC16ImpressionPointsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 33) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s18ImpressionableItemC16ImpressionPointsVMa()
{
  return &_s18ImpressionableItemC16ImpressionPointsVN;
}

uint64_t sub_19F1752D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F1752E4);
}

uint64_t sub_19F1752E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_19F175350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F175364);
}

uint64_t sub_19F175364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB34C();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FileArtifact()
{
  uint64_t result = qword_1E946FD50;
  if (!qword_1E946FD50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id Bag.jsExport.getter()
{
  uint64_t v1 = *v0;
  char v2 = (objc_class *)type metadata accessor for JSBagObject();
  unsigned int v3 = (char *)objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  swift_unknownObjectRetain();
  return objc_msgSendSuper2(&v5, sel_init);
}

id Bag.jsRepresentation(in:)@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (objc_class *)type metadata accessor for JSBagObject();
  objc_super v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  swift_unknownObjectRetain();
  id result = objc_msgSendSuper2(&v7, sel_init);
  a1[3] = v4;
  a1[4] = &off_1EF13A778;
  *a1 = result;
  return result;
}

id sub_19F17550C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (objc_class *)type metadata accessor for JSBagObject();
  objc_super v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag] = v3;
  v7.receiver = v5;
  v7.super_class = v4;
  swift_unknownObjectRetain();
  id result = objc_msgSendSuper2(&v7, sel_init);
  a1[3] = v4;
  a1[4] = &off_1EF13A778;
  *a1 = result;
  return result;
}

void sub_19F175594(void *a1, void *a2, char *a3)
{
  id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD98]), sel_init);
  objc_super v5 = (void *)sub_19F1DBD4C();
  id v6 = objc_msgSend(a2, sel_valueForProperty_, v5);

  if (!v6)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  unsigned int v7 = objc_msgSend(v6, sel_toUInt32);

  id v8 = a2;
  unint64_t v9 = (unint64_t)sub_19F18EBF8(0, v7, v8);

  if (v9 >> 62)
  {
LABEL_21:
    uint64_t v10 = sub_19F1DD03C();
    long long v41 = a1;
    if (v10)
    {
LABEL_4:
      uint64_t v11 = 4;
      while (1)
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v12 = (id)MEMORY[0x19F3C7060](v11 - 4, v9);
        }
        else {
          id v12 = *(id *)(v9 + 8 * v11);
        }
        a1 = v12;
        uint64_t v13 = v11 - 3;
        if (__OFADD__(v11 - 4, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        uint64_t v14 = (void *)sub_19F1DBD4C();
        id v15 = objc_msgSend(a1, sel_valueForProperty_, v14);

        if (!v15) {
          break;
        }
        if (!objc_msgSend(v15, sel_isString)
          || (id v16 = objc_msgSend(v15, sel_toString)) == 0)
        {
          swift_bridgeObjectRelease();

          sub_19EF600C0();
          swift_allocError();
          *(void *)uint64_t v25 = 0xD000000000000029;
LABEL_19:
          *(void *)(v25 + 8) = (unint64_t)(v26 - 32) | 0x8000000000000000;
          *(void *)(v25 + 16) = 0;
          *(unsigned char *)(v25 + 24) = 1;
          *(void *)(v25 + 32) = 0;
          *(unsigned char *)(v25 + 40) = 1;
          *(_OWORD *)(v25 + 48) = 0u;
          *(_OWORD *)(v25 + 64) = 0u;
          *(_OWORD *)(v25 + 80) = 0u;
          *(void *)(v25 + 96) = 0;
          swift_willThrow();

          return;
        }
        char v17 = v16;
        sub_19F1DBD7C();

        double v18 = (void *)sub_19F1DBD4C();
        id v19 = objc_msgSend(a1, sel_valueForProperty_, v18);

        if (!v19) {
          goto LABEL_25;
        }
        uint64_t v20 = sub_19F0BEA60(v19);
        if (v21)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_19EF600C0();
          swift_allocError();
          *(void *)uint64_t v25 = 0xD000000000000024;
          goto LABEL_19;
        }
        uint64_t v22 = v20;
        double v23 = (void *)sub_19F1DBD4C();
        swift_bridgeObjectRelease();
        BOOL v24 = v44;
        if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
        {
          objc_msgSend(v44, sel_mutableCopyWithZone_, 0);
          sub_19F1DCBEC();
          swift_unknownObjectRelease();
          sub_19EFE5C4C();
          swift_dynamicCast();
          BOOL v24 = (void *)aBlock[6];
        }
        id v44 = v24;
        objc_msgSend(v24, sel_addBagKey_valueType_, v23, v22);

        ++v11;
        if (v13 == v10) {
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    long long v41 = a1;
    if (v10) {
      goto LABEL_4;
    }
  }
LABEL_22:
  swift_bridgeObjectRelease();
  uint64_t v43 = OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag;
  double v27 = *(void **)&a3[OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag];
  id v28 = v44;
  id v29 = objc_msgSend((id)swift_unknownObjectRetain(), sel_profile);
  sub_19F1DBD7C();

  id v30 = objc_msgSend(v27, sel_profileVersion);
  sub_19F1DBD7C();
  swift_unknownObjectRelease();

  double v31 = self;
  id v32 = v28;
  double v33 = (void *)sub_19F1DBD4C();
  CGRect v34 = (void *)sub_19F1DBD4C();
  objc_msgSend(v31, sel_registerBagKeySet_forProfile_profileVersion_, v32, v33, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  dispatch_semaphore_t v35 = dispatch_semaphore_create(0);
  CGRect v36 = *(void **)&a3[v43];
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a3;
  *(void *)(v37 + 24) = v35;
  aBlock[4] = sub_19F1760CC;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_19EF7D74C;
  aBlock[3] = &block_descriptor_39;
  CGRect v38 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  unint64_t v39 = a3;
  v40 = v35;
  swift_release();
  objc_msgSend(v36, sel_createSnapshotWithCompletion_, v38);
  _Block_release(v38);
  swift_unknownObjectRelease();
  sub_19F1DC9AC();
  if (objc_msgSend(self, sel_valueWithUndefinedInContext_, v41))
  {

    return;
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_19F175B94(void *a1, id a2, uint64_t a3)
{
  if (a1)
  {
    *(void *)(a3 + OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag) = a1;
    id v3 = a1;
    swift_unknownObjectRelease();
  }
  else if (a2)
  {
    id v5 = a2;
    if (qword_1E946E1C0 != -1) {
      swift_once();
    }
    id v6 = (void *)qword_1E9498A98;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_19F24EB80;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v8 + 16) = xmmword_19F24EAD0;
    uint64_t v22 = v9;
    v21[0] = 0xD00000000000002DLL;
    v21[1] = 0x800000019F274940;
    long long v19 = 0u;
    long long v20 = 0u;
    id v10 = v6;
    sub_19EEC3E70((uint64_t)v21, (uint64_t)&v19);
    *(unsigned char *)(v8 + 64) = 0;
    long long v11 = v20;
    *(_OWORD *)(v8 + 32) = v19;
    *(_OWORD *)(v8 + 48) = v11;
    *(void *)(v7 + 32) = v8;
    swift_getErrorValue();
    uint64_t v22 = v18;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v21);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(boxed_opaque_existential_2Tm, v17, v18);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    sub_19EEBCD00((uint64_t)v21, (uint64_t)v16);
    long long v19 = 0u;
    long long v20 = 0u;
    sub_19EEC3E70((uint64_t)v16, (uint64_t)&v19);
    *(unsigned char *)(v13 + 64) = 0;
    long long v14 = v20;
    *(_OWORD *)(v13 + 32) = v19;
    *(_OWORD *)(v13 + 48) = v14;
    *(void *)(v7 + 40) = v13;
    sub_19EEBD664((uint64_t)v21, &qword_1EB393260);
    *(void *)&long long v19 = v10;
    LOBYTE(v21[0]) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v7, (JetEngine::LogMessageLevel)v21);
    swift_bridgeObjectRelease();
  }
  return sub_19F1DC9BC();
}

id sub_19F175ED8(id a1, uint64_t a2, void *a3)
{
  id v5 = *(void **)(a2 + OBJC_IVAR____TtC9JetEngineP33_CD4A13C520117F75F11731052EDCF02B11JSBagObject_bag);
  swift_unknownObjectRetain();
  id result = objc_msgSend(a3, sel_toString);
  if (result)
  {
    uint64_t v7 = result;
    id v8 = objc_msgSend(v5, sel_integerForKey_, result);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3910B0);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v8;
    v9[3] = sub_19EECD0C8;
    v9[4] = 0;
    swift_unknownObjectRelease();

    uint64_t v10 = sub_19EEA4600((uint64_t)v9);
    if ((v11 & 1) == 0)
    {
      a1 = objc_msgSend(self, sel_valueWithDouble_inContext_, a1, (double)v10);
      if (a1)
      {
LABEL_6:
        swift_release();
        return a1;
      }
      __break(1u);
    }
    id result = objc_msgSend(self, sel_valueWithUndefinedInContext_, a1);
    a1 = result;
    if (result) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_19F17608C()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F1760CC(void *a1, void *a2)
{
  return sub_19F175B94(a1, a2, *(void *)(v2 + 16));
}

JetEngine::JSArrayBuffer_optional __swiftcall JSArrayBuffer.init(_:)(JSValue a1)
{
  Class isa = a1.super.isa;
  id v3 = v1;
  id TypedArrayType = [(objc_class *)a1.super.isa context];
  if (TypedArrayType)
  {
    id v6 = TypedArrayType;
    uint64_t v7 = (const OpaqueJSContext *)objc_msgSend(TypedArrayType, sel_JSGlobalContextRef);

    id TypedArrayType = (id)JSValueGetTypedArrayType(v7, (JSValueRef)[(objc_class *)isa JSValueRef], 0);
    if (TypedArrayType != 9)
    {

      Class isa = 0;
    }
    *id v3 = isa;
  }
  else
  {
    __break(1u);
  }
  result.value.value.super.Class isa = (Class)TypedArrayType;
  result.is_nil = v5;
  return result;
}

void JSArrayBuffer.init(bytesNoCopy:count:deallocator:in:)(void *a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  v25[1] = *(JSValueRef *)MEMORY[0x1E4F143B8];
  type metadata accessor for JSBytesDeallocatorHolder();
  id v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v25[0] = 0;
  swift_retain();
  JSObjectRef ArrayBufferWithBytesNoCopy = JSObjectMakeArrayBufferWithBytesNoCopy((JSContextRef)objc_msgSend(a5, sel_JSGlobalContextRef), a1, a2, (JSTypedArrayBytesDeallocator)sub_19F0D89F8, v12, v25);
  if (ArrayBufferWithBytesNoCopy)
  {
    id v14 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, ArrayBufferWithBytesNoCopy, a5);
    if (v14)
    {
      id v15 = v14;
      swift_release();

      *a6 = v15;
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
  swift_release();
  JSValueRef v16 = v25[0];
  sub_19EF600C0();
  swift_allocError();
  uint64_t v18 = v17;
  id v19 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v16, a5);
  if (!v19)
  {
LABEL_9:
    __break(1u);
    return;
  }
  long long v20 = v19;
  char v21 = (void (**)(const void *, void *, id))objc_msgSend(a5, sel_exceptionHandler);
  if (v21)
  {
    uint64_t v22 = v21;
    double v23 = v21[2];
    id v24 = v20;
    v23(v22, a5, v24);
    _Block_release(v22);
  }
  JSError.init(_:)(v20, v18);
  swift_willThrow();
  swift_release();
}

uint64_t JSArrayBuffer.init(data:in:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x19F1764D4);
      }
      size_t v9 = HIDWORD(a1) - (int)a1;
LABEL_5:
      uint64_t v10 = (void *)swift_slowAlloc();
      sub_19F1DB46C();
      break;
    case 2uLL:
      if (__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
        goto LABEL_15;
      }
      uint64_t v10 = (void *)swift_slowAlloc();
      sub_19F1DB46C();
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      size_t v9 = v11 - v12;
      if (__OFSUB__(v11, v12))
      {
        __break(1u);
LABEL_10:
        uint64_t v10 = (void *)swift_slowAlloc();
        sub_19F1DB46C();
        size_t v9 = 0;
      }
      break;
    case 3uLL:
      goto LABEL_10;
    default:
      size_t v9 = BYTE6(a2);
      goto LABEL_5;
  }
  JSArrayBuffer.init(bytesNoCopy:count:deallocator:in:)(v10, v9, (uint64_t)sub_19F1764E4, 0, a3, &v14);
  uint64_t result = sub_19EEA072C(a1, a2);
  if (!v4) {
    *a4 = v14;
  }
  return result;
}

uint64_t sub_19F1764E4(uint64_t result)
{
  if (result) {
    JUMPOUT(0x19F3C9470);
  }
  return result;
}

id JSArrayBuffer.value.getter()
{
  return *v0;
}

id JSArrayBuffer.data.getter()
{
  id v1 = *v0;
  id result = objc_msgSend(*v0, sel_context);
  if (!result)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  id v3 = result;
  uint64_t v4 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

  id result = JSObjectGetArrayBufferBytesPtr(v4, (JSObjectRef)objc_msgSend(v1, sel_JSValueRef), 0);
  if (result)
  {
    Swift::Bool v5 = result;
    id result = objc_msgSend(v1, sel_context);
    if (result)
    {
      id v6 = result;
      uint64_t v7 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

      size_t ArrayBufferByteLength = JSObjectGetArrayBufferByteLength(v7, (JSObjectRef)objc_msgSend(v1, sel_JSValueRef), 0);
      return (id)sub_19EE684CC(v5, ArrayBufferByteLength);
    }
    goto LABEL_7;
  }
  return result;
}

uint64_t static JSArrayBuffer.== infix(_:_:)()
{
  return sub_19F1DCA1C() & 1;
}

uint64_t JSArrayBuffer.description.getter()
{
  id v1 = objc_msgSend(*v0, sel_description);
  uint64_t v2 = sub_19F1DBD7C();

  return v2;
}

uint64_t sub_19F17668C()
{
  return sub_19F1DCA1C() & 1;
}

uint64_t sub_19F1766D0()
{
  id v1 = objc_msgSend(*v0, sel_description);
  uint64_t v2 = sub_19F1DBD7C();

  return v2;
}

ValueMetadata *type metadata accessor for JSArrayBuffer()
{
  return &type metadata for JSArrayBuffer;
}

id sub_19F176768()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WrappedMetricsPipeline();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19F1767AC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v8, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v9;
  if (v9)
  {
    uint64_t v5 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  }
  else
  {
    sub_19EEBD664((uint64_t)v8, (uint64_t *)&unk_1E946FD20);
    char v6 = 1;
  }
  sub_19EEC3418(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6 & 1;
  return result;
}

uint64_t sub_19F176870(uint64_t a1, uint64_t a2)
{
  sub_19EEC3ED8(a1, (uint64_t)v10, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v11;
  if (!v11)
  {
    sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  uint64_t v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if (v6)
  {
LABEL_5:
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19EEC355C(a1, (uint64_t)v10);
  v9[0] = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_19EF5B958((uint64_t)v10, v9);
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  return v8;
}

double sub_19F176A54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v16;
  if (v16)
  {
    uint64_t v7 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v15);
      swift_bridgeObjectRetain();
      sub_19F17B100((uint64_t)v15, a2, (uint64_t)&v12);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      double result = *(double *)&v12;
      uint64_t v10 = v13;
      uint64_t v11 = v14;
      *(_OWORD *)a3 = v12;
      *(void *)(a3 + 16) = v10;
      *(void *)(a3 + 24) = v11;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v15, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_19F176C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v12, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v13;
  if (v13)
  {
    uint64_t v7 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v12);
      swift_bridgeObjectRetain();
      sub_19F17B370((uint64_t)v12, a2, (uint64_t)v11);
      sub_19EEC3418(a1);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = v11[1];
      *a3 = v11[0];
      a3[1] = v10;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = 0;
  a3[1] = 0;
  return result;
}

double sub_19F176E40@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v17, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = *((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    uint64_t v7 = v19;
    __swift_project_boxed_opaque_existential_1(&v17, *((uint64_t *)&v18 + 1));
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v16);
      uint64_t v15 = a2;
      swift_bridgeObjectRetain();
      Models.Menu.init(deserializing:using:)((uint64_t)v16, &v15, (uint64_t)&v17);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      long long v9 = v22;
      long long v10 = v23;
      a3[4] = v21;
      a3[5] = v9;
      long long v11 = v24;
      a3[6] = v10;
      a3[7] = v11;
      long long v12 = v18;
      *a3 = v17;
      a3[1] = v12;
      double result = *(double *)&v19;
      long long v14 = v20;
      a3[2] = v19;
      a3[3] = v14;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v17, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  double result = 0.0;
  a3[6] = 0u;
  a3[7] = 0u;
  a3[4] = 0u;
  a3[5] = 0u;
  a3[2] = 0u;
  a3[3] = 0u;
  *a3 = 0u;
  a3[1] = 0u;
  return result;
}

uint64_t sub_19F177064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v12, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v13;
  if (v13)
  {
    uint64_t v7 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v11);
      uint64_t v10 = a2;
      swift_bridgeObjectRetain();
      Models.Menu.Child.init(deserializing:using:)((uint64_t)v11, &v10, (uint64_t)v12);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      return sub_19F1801A4((uint64_t)v12, a3);
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_WORD *)(a3 + 160) = -256;
  return result;
}

__n128 sub_19F177278@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v17, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = *((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    uint64_t v7 = v19;
    __swift_project_boxed_opaque_existential_1(&v17, *((uint64_t *)&v18 + 1));
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v16);
      uint64_t v15 = a2;
      swift_bridgeObjectRetain();
      Models.Menu.Item.init(deserializing:using:)((uint64_t)v16, &v15, (uint64_t)&v17);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      long long v9 = v24;
      long long v10 = v26;
      *(_OWORD *)(a3 + 128) = v25;
      *(_OWORD *)(a3 + 144) = v10;
      long long v11 = v22;
      long long v12 = v23;
      *(_OWORD *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 80) = v11;
      *(unsigned char *)(a3 + 160) = v27;
      *(_OWORD *)(a3 + 96) = v12;
      *(_OWORD *)(a3 + 112) = v9;
      long long v13 = v18;
      *(_OWORD *)a3 = v17;
      *(_OWORD *)(a3 + 16) = v13;
      __n128 result = v20;
      *(_OWORD *)(a3 + 32) = v19;
      *(__n128 *)(a3 + 48) = result;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v17, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a3 + 160) = 0;
  result.n128_u64[0] = 0;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 144) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_19F1774BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F177764(a1, a2, (uint64_t (*)(void))type metadata accessor for Models.HTTPTemplateAction, (void (*)(void *, void *))Models.HTTPTemplateAction.init(deserializing:using:), (uint64_t (*)(void))type metadata accessor for Models.HTTPTemplateAction, a3);
}

double sub_19F1774FC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v16;
  if ((void)v16)
  {
    uint64_t v5 = *((void *)&v16 + 1);
    __swift_project_boxed_opaque_existential_1(v14, v16);
    char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v6 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v13);
      swift_bridgeObjectRetain();
      Models.HTTPTemplateAction.Parameter.init(deserializing:using:)((uint64_t)v13, (uint64_t)v14);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      uint64_t v7 = v14[1];
      __int16 v8 = v15;
      char v9 = v17;
      uint64_t v10 = v18;
      char v11 = v19;
      *(void *)a2 = v14[0];
      *(void *)(a2 + 8) = v7;
      *(_WORD *)(a2 + 16) = v8;
      double result = *(double *)&v16;
      *(_OWORD *)(a2 + 24) = v16;
      *(unsigned char *)(a2 + 40) = v9;
      *(void *)(a2 + 48) = v10;
      *(unsigned char *)(a2 + 56) = v11;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  double result = 0.0;
  *(_OWORD *)(a2 + 41) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

uint64_t sub_19F177724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F177764(a1, a2, (uint64_t (*)(void))type metadata accessor for Models.ExternalURLAction, (void (*)(void *, void *))Models.ExternalURLAction.init(deserializing:using:), (uint64_t (*)(void))type metadata accessor for Models.ExternalURLAction, a3);
}

uint64_t sub_19F177764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(void *, void *)@<X4>, uint64_t (*a5)(void)@<X5>, uint64_t a6@<X8>)
{
  long long v24 = a4;
  uint64_t v11 = a3(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v21 - v13;
  sub_19EEC3ED8(a1, (uint64_t)v27, (uint64_t *)&unk_1E946FD20);
  uint64_t v15 = v28;
  if (!v28)
  {
    sub_19EEBD664((uint64_t)v27, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  long long v22 = a5;
  uint64_t v23 = v6;
  uint64_t v16 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  char v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 104);
  uint64_t v25 = a6;
  char v18 = v17(v15, v16);
  a6 = v25;
  LOBYTE(v16) = v18;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
  if (v16)
  {
LABEL_5:
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    uint64_t v19 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a6, v19, 1, v11);
  }
  sub_19EEC355C(a1, (uint64_t)v27);
  v26[0] = a2;
  swift_bridgeObjectRetain();
  v24(v27, v26);
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  a6 = v25;
  sub_19F1802B8((uint64_t)v14, v25, v22);
  uint64_t v19 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a6, v19, 1, v11);
}

__n128 sub_19F177A30@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v16, (uint64_t *)&unk_1E946FD20);
  unint64_t v6 = v17.n128_u64[1];
  if (v17.n128_u64[1])
  {
    uint64_t v7 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, v17.n128_i64[1]);
    char v8 = (*(uint64_t (**)(unint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v16);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v15);
      uint64_t v14 = a2;
      swift_bridgeObjectRetain();
      Models.ToastAction.init(deserializing:using:)((uint64_t)v15, &v14, (uint64_t)&v16);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      long long v9 = v21;
      long long v10 = v23;
      long long v11 = v24;
      *(_OWORD *)(a3 + 96) = v22;
      *(_OWORD *)(a3 + 112) = v10;
      *(_OWORD *)(a3 + 128) = v11;
      long long v12 = v19;
      *(_OWORD *)(a3 + 32) = v18;
      *(_OWORD *)(a3 + 48) = v12;
      *(_OWORD *)(a3 + 64) = v20;
      *(_OWORD *)(a3 + 80) = v9;
      __n128 result = v17;
      *(_OWORD *)a3 = v16;
      *(__n128 *)(a3 + 16) = result;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v16, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  result.n128_u64[0] = 0;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

double sub_19F177C5C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v17, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = *((void *)&v18 + 1);
  if (*((void *)&v18 + 1))
  {
    uint64_t v7 = v19;
    __swift_project_boxed_opaque_existential_1(&v17, *((uint64_t *)&v18 + 1));
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v16);
      uint64_t v15 = a2;
      swift_bridgeObjectRetain();
      Models.AlertAction.init(deserializing:using:)((uint64_t)v16, &v15, (uint64_t)&v17);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      long long v9 = v24;
      long long v10 = v25;
      long long v11 = v22;
      *(_OWORD *)(a3 + 96) = v23;
      *(_OWORD *)(a3 + 112) = v9;
      *(_OWORD *)(a3 + 128) = v10;
      *(void *)(a3 + 144) = v26;
      long long v12 = v20;
      *(_OWORD *)(a3 + 32) = v19;
      *(_OWORD *)(a3 + 48) = v12;
      *(_OWORD *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 80) = v11;
      double result = *(double *)&v17;
      long long v14 = v18;
      *(_OWORD *)a3 = v17;
      *(_OWORD *)(a3 + 16) = v14;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v17, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(void *)(a3 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a3 + 112) = 0u;
  *(_OWORD *)(a3 + 128) = 0u;
  *(_OWORD *)(a3 + 80) = 0u;
  *(_OWORD *)(a3 + 96) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

__n128 sub_19F177E9C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v13, (uint64_t *)&unk_1E946FD20);
  unint64_t v6 = v14.n128_u64[1];
  if (v14.n128_u64[1])
  {
    uint64_t v7 = v15;
    __swift_project_boxed_opaque_existential_1(&v13, v14.n128_i64[1]);
    char v8 = (*(uint64_t (**)(unint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v12);
      uint64_t v11 = a2;
      swift_bridgeObjectRetain();
      Models.AlertAction.Button.init(deserializing:using:)((uint64_t)v12, &v11, (uint64_t *)&v13);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      long long v9 = v16;
      *(_OWORD *)(a3 + 32) = v15;
      *(_OWORD *)(a3 + 48) = v9;
      *(void *)(a3 + 64) = v17;
      __n128 result = v14;
      *(_OWORD *)a3 = v13;
      *(__n128 *)(a3 + 16) = result;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v13, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(void *)(a3 + 64) = 0;
  result.n128_u64[0] = 0;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_19F1780B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F177764(a1, a2, (uint64_t (*)(void))type metadata accessor for Models.HTTPAction, (void (*)(void *, void *))Models.HTTPAction.init(deserializing:using:), (uint64_t (*)(void))type metadata accessor for Models.HTTPAction, a3);
}

uint64_t sub_19F1780F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F177764(a1, a2, (uint64_t (*)(void))type metadata accessor for Bag.ValueOverride, (void (*)(void *, void *))Bag.ValueOverride.init(deserializing:using:), (uint64_t (*)(void))type metadata accessor for Bag.ValueOverride, a3);
}

double sub_19F178134@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v15;
  if (v15)
  {
    uint64_t v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v14);
      uint64_t v13 = a2;
      swift_bridgeObjectRetain();
      sub_19F026540((uint64_t)v14, (uint64_t)v11);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      uint64_t v9 = v11[1];
      *(void *)a3 = v11[0];
      *(void *)(a3 + 8) = v9;
      double result = *(double *)&v12;
      *(_OWORD *)(a3 + 16) = v12;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_19F178334(uint64_t a1)
{
  sub_19EEC3ED8(a1, (uint64_t)v7, (uint64_t *)&unk_1E946FD20);
  uint64_t v2 = v8;
  if (!v8)
  {
    sub_19EEBD664((uint64_t)v7, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  uint64_t v3 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 104))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  if (v4)
  {
LABEL_5:
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19EEC355C(a1, (uint64_t)v7);
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_19EE2313C((uint64_t)v7);
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_19F178530@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)__src, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = __src[3];
  if (__src[3])
  {
    uint64_t v5 = __src[4];
    __swift_project_boxed_opaque_existential_1(__src, __src[3]);
    char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)__src);
    if ((v6 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v8);
      swift_bridgeObjectRetain();
      JSNetworkPerformanceMetrics.init(deserializing:using:)((uint64_t)v8, __src);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      memcpy(a2, __src, 0x158uLL);
      return nullsub_1(a2);
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)__src, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  sub_19F1251C4((uint64_t)__src);
  return sub_19F180250((uint64_t)__src, (uint64_t)a2);
}

uint64_t sub_19F178658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v15;
  if (!v15)
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  uint64_t v7 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  if (v8)
  {
LABEL_5:
    sub_19EEC3418(a1);
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    char v10 = -1;
    goto LABEL_6;
  }
  sub_19EEC355C(a1, (uint64_t)v14);
  uint64_t v13 = a2;
  swift_bridgeObjectRetain();
  JSONBridgingConfiguration.PropertyDescriptor.init(deserializing:using:)((uint64_t)v14, (uint64_t)&v11);
  sub_19EEC3418(a1);
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = v12;
  *(_OWORD *)a3 = v11;
LABEL_6:
  *(unsigned char *)(a3 + 16) = v10;
  return result;
}

uint64_t sub_19F178858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v15;
  if (v15)
  {
    uint64_t v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v14);
      uint64_t v13 = a2;
      swift_bridgeObjectRetain();
      sub_19EF5999C((uint64_t)v14, &v13, (uint64_t)v11);
      sub_19EEC3418(a1);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = v12;
      *(unsigned char *)a3 = v11[0];
      *(void *)(a3 + 8) = v10;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  return result;
}

double sub_19F178A54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v12, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v13;
  if (v13)
  {
    uint64_t v7 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v12);
      uint64_t v11 = a2;
      swift_bridgeObjectRetain();
      LintedMetricsEvent.init(deserializing:using:)((uint64_t)v12, &v11, (uint64_t *)v10);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      double result = v10[0];
      *(_OWORD *)a3 = *(_OWORD *)v10;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  return result;
}

double sub_19F178C48@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v16, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v18;
  if (v18)
  {
    uint64_t v7 = v19;
    __swift_project_boxed_opaque_existential_1(&v16, v18);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v16);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v15);
      uint64_t v14 = a2;
      swift_bridgeObjectRetain();
      ImpressionMetrics.init(deserializing:using:)((uint64_t)v15, &v14, &v16);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      uint64_t v9 = v17;
      uint64_t v10 = v18;
      uint64_t v11 = v20;
      uint64_t v12 = v22;
      *(_OWORD *)a3 = v16;
      *(void *)(a3 + 16) = v9;
      *(void *)(a3 + 24) = v10;
      *(_OWORD *)(a3 + 32) = v19;
      *(void *)(a3 + 48) = v11;
      double result = *(double *)&v21;
      *(_OWORD *)(a3 + 56) = v21;
      *(void *)(a3 + 72) = v12;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v16, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  double result = 0.0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

double sub_19F178E70@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v12, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v14;
  if (v14)
  {
    uint64_t v5 = v15;
    __swift_project_boxed_opaque_existential_1(&v12, v14);
    char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v12);
    if ((v6 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v11);
      swift_bridgeObjectRetain();
      ImpressionMetrics.ID.init(deserializing:using:)((uint64_t)v11, (uint64_t)&v12);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      uint64_t v7 = v13;
      uint64_t v8 = v14;
      uint64_t v9 = v16;
      *(_OWORD *)a2 = v12;
      *(void *)(a2 + 16) = v7;
      *(void *)(a2 + 24) = v8;
      double result = *(double *)&v15;
      *(_OWORD *)(a2 + 32) = v15;
      *(void *)(a2 + 48) = v9;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v12, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(void *)(a2 + 48) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  return result;
}

double sub_19F179088@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v15;
  if (v15)
  {
    uint64_t v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v14);
      uint64_t v13 = a2;
      swift_bridgeObjectRetain();
      CompoundAction.init(deserializing:using:)((uint64_t)v14, &v13, (uint64_t)&v11);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      uint64_t v9 = v12;
      double result = *(double *)&v11;
      *(_OWORD *)a3 = v11;
      *(void *)(a3 + 16) = v9;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  return result;
}

double sub_19F179288@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v12, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v13;
  if (v13)
  {
    uint64_t v7 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v12);
      uint64_t v11 = a2;
      swift_bridgeObjectRetain();
      ActionMetrics.init(deserializing:using:)((uint64_t)v12, &v11, (uint64_t *)v10);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      double result = v10[0];
      *(_OWORD *)a3 = *(_OWORD *)v10;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  return result;
}

double sub_19F17947C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = *((void *)&v15 + 1);
  if (*((void *)&v15 + 1))
  {
    uint64_t v7 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v13);
      uint64_t v12 = a2;
      swift_bridgeObjectRetain();
      MediaArtwork.init(deserializing:using:)((uint64_t)v13, &v12, (uint64_t)&v14);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      long long v9 = v17;
      *(_OWORD *)(a3 + 32) = v16;
      *(_OWORD *)(a3 + 48) = v9;
      *(_OWORD *)(a3 + 64) = v18;
      *(void *)(a3 + 80) = v19;
      double result = *(double *)&v14;
      long long v11 = v15;
      *(_OWORD *)a3 = v14;
      *(_OWORD *)(a3 + 16) = v11;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(void *)(a3 + 80) = 0;
  double result = 0.0;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_OWORD *)(a3 + 64) = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

double sub_19F1796A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v15;
  if (v15)
  {
    uint64_t v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v14);
      uint64_t v13 = a2;
      swift_bridgeObjectRetain();
      PageMetrics.init(deserializing:using:)((uint64_t)v14, &v13, v11);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      uint64_t v9 = v11[1];
      *(void *)a3 = v11[0];
      *(void *)(a3 + 8) = v9;
      double result = *(double *)&v12;
      *(_OWORD *)(a3 + 16) = v12;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

__n128 sub_19F1798A0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v15;
  if (v15)
  {
    uint64_t v7 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v14);
      swift_bridgeObjectRetain();
      JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v12);
      uint64_t v11 = a2;
      ActionMetrics.init(deserializing:using:)((uint64_t)v12, &v11, (uint64_t *)&v13);
      sub_19EEC3418((uint64_t)v14);
      __n128 v10 = v13;
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      __n128 result = v10;
      *a3 = v10;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  return result;
}

double sub_19F179AD0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v14, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = *((void *)&v15 + 1);
  if (*((void *)&v15 + 1))
  {
    uint64_t v7 = v16;
    __swift_project_boxed_opaque_existential_1(&v14, *((uint64_t *)&v15 + 1));
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v13);
      swift_bridgeObjectRetain();
      sub_19F17B5D8((uint64_t)v13, a2, (uint64_t)&v14);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      double result = *(double *)&v14;
      long long v10 = v15;
      uint64_t v11 = v16;
      uint64_t v12 = v17;
      *(_OWORD *)a3 = v14;
      *(_OWORD *)(a3 + 16) = v10;
      *(void *)(a3 + 32) = v11;
      *(void *)(a3 + 40) = v12;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v14, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  return result;
}

uint64_t sub_19F179CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_19F177764(a1, a2, (uint64_t (*)(void))type metadata accessor for NetRequest, (void (*)(void *, void *))NetRequest.init(deserializing:using:), (uint64_t (*)(void))type metadata accessor for NetRequest, a3);
}

unint64_t sub_19F179D10(uint64_t a1, uint64_t a2)
{
  sub_19EEC3ED8(a1, (uint64_t)v10, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v11;
  if (!v11)
  {
    sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  uint64_t v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if (v6)
  {
LABEL_5:
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19EEC355C(a1, (uint64_t)v10);
  uint64_t v9 = a2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19F0B4F8C((uint64_t)v10);
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_19F179EFC(uint64_t a1, void *a2)
{
  sub_19EEC3ED8(a1, (uint64_t)v10, (uint64_t *)&unk_1E946FD20);
  uint64_t v4 = v11;
  if (!v11)
  {
    sub_19EEBD664((uint64_t)v10, (uint64_t *)&unk_1E946FD20);
    goto LABEL_5;
  }
  uint64_t v5 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 104))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  if (v6)
  {
LABEL_5:
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_19EEC355C(a1, (uint64_t)v10);
  id v9 = a2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19F17B848((uint64_t)v10, &v9);
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  return v8;
}

__n128 sub_19F17A0EC@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_19EEC3ED8(a1, (uint64_t)&v15, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = *((void *)&v16 + 1);
  if (*((void *)&v16 + 1))
  {
    uint64_t v7 = v17;
    __swift_project_boxed_opaque_existential_1(&v15, *((uint64_t *)&v16 + 1));
    char v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 104))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v15);
    if ((v8 & 1) == 0)
    {
      sub_19EEC355C(a1, (uint64_t)v14);
      swift_bridgeObjectRetain();
      JSONObject.subscript.getter(0x6575676573, 0xE500000000000000, (uint64_t)v12);
      uint64_t v11 = a2;
      static AnyActionTypes.makeInstance(byDeserializing:using:)((uint64_t)v12, &v11, (uint64_t)v13);
      sub_19EEC3418((uint64_t)v14);
      sub_19EEC3418((uint64_t)v12);
      swift_bridgeObjectRelease();
      sub_19EEBB420(v13, (uint64_t)&v15);
      sub_19EEC3418(a1);
      swift_bridgeObjectRelease();
      __n128 result = v15;
      long long v10 = v16;
      *(__n128 *)a3 = v15;
      *(_OWORD *)(a3 + 16) = v10;
      *(void *)(a3 + 32) = v17;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v15, (uint64_t *)&unk_1E946FD20);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  *(void *)(a3 + 32) = 0;
  result.n128_u64[0] = 0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

double sub_19F17A334@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!*(void *)(a3 + 16))
  {
    long long v30 = 0u;
    long long v31 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  if ((v9 & 1) == 0)
  {
    long long v30 = 0u;
    long long v31 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v8, (uint64_t)&v30);
  swift_bridgeObjectRelease();
  if (!*((void *)&v31 + 1))
  {
LABEL_8:
    sub_19EEBD664((uint64_t)&v30, &qword_1EB393260);
    goto LABEL_9;
  }
  sub_19EEBDC00(&v30, v33);
  sub_19EEBDBA4((uint64_t)v33, (uint64_t)&v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C840);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
    sub_19EEBB420(&v30, a4);
    return result;
  }
  uint64_t v32 = 0;
  long long v30 = 0u;
  long long v31 = 0u;
  sub_19EEBD664((uint64_t)&v30, qword_1E946D938);
  if (qword_1E946F668 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_1E946F658;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_19F24EB80;
  id v13 = v11;
  uint64_t v29 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
  v14._object = (void *)0x800000019F26BAB0;
  v14._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v14);
  v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474610);
  v28[0] = a1;
  v28[1] = a2;
  sub_19EEC3ED8((uint64_t)v28, (uint64_t)v27, &qword_1EB393260);
  long long v25 = 0u;
  long long v26 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v27, (uint64_t)&v25);
  LOBYTE(v32) = 0;
  long long v30 = v25;
  long long v31 = v26;
  __n128 v15 = v29;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    __n128 v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
  }
  unint64_t v17 = v15[2];
  unint64_t v16 = v15[3];
  if (v17 >= v16 >> 1) {
    __n128 v15 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v15);
  }
  v15[2] = v17 + 1;
  long long v18 = &v15[5 * v17];
  long long v19 = v30;
  long long v20 = v31;
  *((unsigned char *)v18 + 64) = v32;
  *((_OWORD *)v18 + 2) = v19;
  *((_OWORD *)v18 + 3) = v20;
  uint64_t v29 = v15;
  sub_19EEBD664((uint64_t)v28, &qword_1EB393260);
  v21._countAndFlagsBits = 96;
  v21._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v21);
  *(void *)(v12 + 32) = v29;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
  *((void *)&v26 + 1) = v23;
  *(void *)&long long v25 = 0xD000000000000027;
  *((void *)&v25 + 1) = 0x800000019F26AE20;
  long long v30 = 0u;
  long long v31 = 0u;
  sub_19EEC3E70((uint64_t)&v25, (uint64_t)&v30);
  *(unsigned char *)(v22 + 64) = 0;
  long long v24 = v31;
  *(_OWORD *)(v22 + 32) = v30;
  *(_OWORD *)(v22 + 48) = v24;
  *(void *)(v12 + 40) = v22;
  *(void *)&long long v30 = v13;
  LOBYTE(v25) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v12, (JetEngine::LogMessageLevel)&v25);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
LABEL_9:
  *(void *)(a4 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

uint64_t sub_19F17A6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EE78D1C(a1, a2, a3, &qword_1E946F9A0, qword_1E94760D0);
}

uint64_t sub_19F17A6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X8>)
{
  if (!*(void *)(a3 + 16))
  {
    long long v29 = 0u;
    long long v30 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  if ((v9 & 1) == 0)
  {
    long long v29 = 0u;
    long long v30 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v8, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  if (!*((void *)&v30 + 1))
  {
LABEL_8:
    uint64_t result = sub_19EEBD664((uint64_t)&v29, &qword_1EB393260);
LABEL_9:
    long long v11 = xmmword_19F263530;
    goto LABEL_10;
  }
  sub_19EEBDC00(&v29, v34);
  sub_19EEBDBA4((uint64_t)v34, (uint64_t)&v29);
  if (!swift_dynamicCast())
  {
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EB80;
    id v14 = v12;
    double v33 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
    v15._object = (void *)0x800000019F26BAB0;
    v15._countAndFlagsBits = 0xD00000000000001ALL;
    LogMessage.StringInterpolation.appendLiteral(_:)(v15);
    v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94760C0);
    v32[0] = a1;
    v32[1] = a2;
    sub_19EEC3ED8((uint64_t)v32, (uint64_t)v28, &qword_1EB393260);
    long long v26 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v28, (uint64_t)&v26);
    char v31 = 0;
    long long v29 = v26;
    long long v30 = v27;
    unint64_t v16 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      unint64_t v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    v16[2] = v18 + 1;
    long long v19 = &v16[5 * v18];
    long long v20 = v29;
    long long v21 = v30;
    *((unsigned char *)v19 + 64) = v31;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    double v33 = v16;
    sub_19EEBD664((uint64_t)v32, &qword_1EB393260);
    v22._countAndFlagsBits = 96;
    v22._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    *(void *)(v13 + 32) = v33;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v23 + 16) = xmmword_19F24EAD0;
    *((void *)&v27 + 1) = v24;
    *(void *)&long long v26 = 0xD000000000000027;
    *((void *)&v26 + 1) = 0x800000019F26AE20;
    long long v29 = 0u;
    long long v30 = 0u;
    sub_19EEC3E70((uint64_t)&v26, (uint64_t)&v29);
    *(unsigned char *)(v23 + 64) = 0;
    long long v25 = v30;
    *(_OWORD *)(v23 + 32) = v29;
    *(_OWORD *)(v23 + 48) = v25;
    *(void *)(v13 + 40) = v23;
    *(void *)&long long v29 = v14;
    LOBYTE(v26) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v26);

    swift_bridgeObjectRelease();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    goto LABEL_9;
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
  long long v11 = v26;
LABEL_10:
  *a4 = v11;
  return result;
}

uint64_t sub_19F17AA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_19EE78D1C(a1, a2, a3, &qword_1E94745F0, &qword_1E94745F8);
}

uint64_t sub_19F17AA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!*(void *)(a3 + 16))
  {
    long long v29 = 0u;
    long long v30 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(a1, a2);
  if ((v9 & 1) == 0)
  {
    long long v29 = 0u;
    long long v30 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v8, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  if (!*((void *)&v30 + 1))
  {
LABEL_8:
    uint64_t result = sub_19EEBD664((uint64_t)&v29, &qword_1EB393260);
    goto LABEL_9;
  }
  sub_19EEBDC00(&v29, v34);
  sub_19EEBDBA4((uint64_t)v34, (uint64_t)&v29);
  if (swift_dynamicCast())
  {
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    uint64_t v11 = v27;
    *(_OWORD *)a4 = v26;
    *(void *)(a4 + 16) = v11;
    return result;
  }
  if (qword_1E946F668 != -1) {
    swift_once();
  }
  uint64_t v12 = (void *)qword_1E946F658;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_19F24EB80;
  id v14 = v12;
  double v33 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
  v15._object = (void *)0x800000019F26BAB0;
  v15._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v15);
  v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94760C8);
  v32[0] = a1;
  v32[1] = a2;
  sub_19EEC3ED8((uint64_t)v32, (uint64_t)v28, &qword_1EB393260);
  long long v26 = 0u;
  long long v27 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v28, (uint64_t)&v26);
  char v31 = 0;
  long long v29 = v26;
  long long v30 = v27;
  unint64_t v16 = v33;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v16 = sub_19EEC3F3C(0, v16[2] + 1, 1, v16);
  }
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    unint64_t v16 = sub_19EEC3F3C((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v16[2] = v18 + 1;
  long long v19 = &v16[5 * v18];
  long long v20 = v29;
  long long v21 = v30;
  *((unsigned char *)v19 + 64) = v31;
  *((_OWORD *)v19 + 2) = v20;
  *((_OWORD *)v19 + 3) = v21;
  double v33 = v16;
  sub_19EEBD664((uint64_t)v32, &qword_1EB393260);
  v22._countAndFlagsBits = 96;
  v22._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v22);
  *(void *)(v13 + 32) = v33;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v23 + 16) = xmmword_19F24EAD0;
  *((void *)&v27 + 1) = v24;
  *(void *)&long long v26 = 0xD000000000000027;
  *((void *)&v26 + 1) = 0x800000019F26AE20;
  long long v29 = 0u;
  long long v30 = 0u;
  sub_19EEC3E70((uint64_t)&v26, (uint64_t)&v29);
  *(unsigned char *)(v23 + 64) = 0;
  long long v25 = v30;
  *(_OWORD *)(v23 + 32) = v29;
  *(_OWORD *)(v23 + 48) = v25;
  *(void *)(v13 + 40) = v23;
  *(void *)&long long v29 = v14;
  LOBYTE(v26) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v13, (JetEngine::LogMessageLevel)&v26);

  swift_bridgeObjectRelease();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
LABEL_9:
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  return result;
}

uint64_t sub_19F17ADA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16))
  {
    long long v26 = 0u;
    long long v27 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_19EEBD400(a1, a2);
  if ((v7 & 1) == 0)
  {
    long long v26 = 0u;
    long long v27 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v6, (uint64_t)&v26);
  swift_bridgeObjectRelease();
  if (!*((void *)&v27 + 1))
  {
LABEL_8:
    sub_19EEBD664((uint64_t)&v26, &qword_1EB393260);
    return 0;
  }
  sub_19EEBDC00(&v26, v31);
  sub_19EEBDBA4((uint64_t)v31, (uint64_t)&v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474600);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
    return v23;
  }
  if (qword_1E946F668 != -1) {
    swift_once();
  }
  char v9 = (void *)qword_1E946F658;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EB80;
  id v11 = v9;
  long long v30 = sub_19EEC3F3C(0, 28, 0, MEMORY[0x1E4FBC860]);
  v12._object = (void *)0x800000019F26BAB0;
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  LogMessage.StringInterpolation.appendLiteral(_:)(v12);
  v29[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474608);
  v29[0] = a1;
  v29[1] = a2;
  sub_19EEC3ED8((uint64_t)v29, (uint64_t)v25, &qword_1EB393260);
  long long v23 = 0u;
  long long v24 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v25, (uint64_t)&v23);
  char v28 = 0;
  long long v26 = v23;
  long long v27 = v24;
  uint64_t v13 = v30;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_19EEC3F3C(0, v13[2] + 1, 1, v13);
  }
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_19EEC3F3C((void *)(v14 > 1), v15 + 1, 1, v13);
  }
  long long v13[2] = v15 + 1;
  unint64_t v16 = &v13[5 * v15];
  long long v17 = v26;
  long long v18 = v27;
  *((unsigned char *)v16 + 64) = v28;
  *((_OWORD *)v16 + 2) = v17;
  *((_OWORD *)v16 + 3) = v18;
  long long v30 = v13;
  sub_19EEBD664((uint64_t)v29, &qword_1EB393260);
  v19._countAndFlagsBits = 96;
  v19._object = (void *)0xE100000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v19);
  *(void *)(v10 + 32) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(v20 + 16) = xmmword_19F24EAD0;
  *((void *)&v24 + 1) = v21;
  *(void *)&long long v23 = 0xD000000000000027;
  *((void *)&v23 + 1) = 0x800000019F26AE20;
  long long v26 = 0u;
  long long v27 = 0u;
  sub_19EEC3E70((uint64_t)&v23, (uint64_t)&v26);
  *(unsigned char *)(v20 + 64) = 0;
  long long v22 = v27;
  *(_OWORD *)(v20 + 32) = v26;
  *(_OWORD *)(v20 + 48) = v22;
  *(void *)(v10 + 40) = v20;
  *(void *)&long long v26 = v11;
  LOBYTE(v23) = 1;
  OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v10, (JetEngine::LogMessageLevel)&v23);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  return 0;
}

void sub_19F17B100(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_19F1DCDCC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v21 - v12;
  sub_19F17BB48(a2, (uint64_t *)&v21);
  if (v3)
  {
    swift_bridgeObjectRelease();
    *(void *)&long long v21 = v3;
    id v14 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      sub_19EF5B580();
      swift_allocError();
      unint64_t v16 = v15;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
      *(void *)(v17 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v18, v10, v7);
      *unint64_t v16 = &type metadata for ShelfID;
      v16[1] = v17;
      v16[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      sub_19EEC3418(a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      sub_19EEC3418(a1);
    }
  }
  else
  {
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    uint64_t v19 = v22;
    uint64_t v20 = v23;
    *(_OWORD *)a3 = v21;
    *(void *)(a3 + 16) = v19;
    *(void *)(a3 + 24) = v20;
  }
}

void sub_19F17B370(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_19F1DCDCC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v20 - v12;
  sub_19F17BC14(a2, (uint64_t *)v20);
  if (v3)
  {
    swift_bridgeObjectRelease();
    v20[0] = v3;
    id v14 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      sub_19EF5B580();
      swift_allocError();
      unint64_t v16 = v15;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
      *(void *)(v17 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v18, v10, v7);
      *unint64_t v16 = &type metadata for PageID;
      v16[1] = v17;
      v16[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      sub_19EEC3418(a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      sub_19EEC3418(a1);
    }
  }
  else
  {
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    id v19 = v20[1];
    *(id *)a3 = v20[0];
    *(void *)(a3 + 8) = v19;
  }
}

void sub_19F17B5D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_19F1DCDCC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v22 - v12;
  sub_19F17BCE0(a2, (uint64_t *)v22);
  if (v3)
  {
    swift_bridgeObjectRelease();
    *(void *)&v22[0] = v3;
    id v14 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      sub_19EF5B580();
      swift_allocError();
      unint64_t v16 = v15;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
      *(void *)(v17 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v18, v10, v7);
      *unint64_t v16 = &type metadata for ComponentID;
      v16[1] = v17;
      v16[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      sub_19EEC3418(a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      sub_19EEC3418(a1);
    }
  }
  else
  {
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    long long v19 = v22[1];
    uint64_t v20 = v23;
    uint64_t v21 = v24;
    *(_OWORD *)a3 = v22[0];
    *(_OWORD *)(a3 + 16) = v19;
    *(void *)(a3 + 32) = v20;
    *(void *)(a3 + 40) = v21;
  }
}

unint64_t sub_19F17B848(uint64_t a1, id *a2)
{
  uint64_t v5 = sub_19F1DCDCC();
  uint64_t v22 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v21 - v9;
  v24[0] = *a2;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)_sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0((uint64_t *)v24);
  sub_19EEC355C(a1, (uint64_t)v24);
  v24[5] = v11;
  v24[6] = (id)MEMORY[0x1E4FBC860];
  v23[3] = &type metadata for _JSONObjectDecoder;
  v23[4] = sub_19EE70560();
  v23[0] = swift_allocObject();
  sub_19EE70470((uint64_t)v24, v23[0] + 16);
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_19EF8380C(v23);
  v24[8] = v13;
  if (v2)
  {
    sub_19EE703B4((uint64_t)v24);
    swift_bridgeObjectRelease();
    v24[0] = v2;
    id v14 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {

      uint64_t v15 = v22;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v7, v10, v5);
      sub_19EF5B580();
      swift_allocError();
      uint64_t v17 = v16;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D900);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
      *(void *)(v18 + 32) = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v19, v7, v5);
      *uint64_t v17 = &type metadata for Models.AdamID;
      v17[1] = v18;
      v17[2] &= 0xFFFFFFFFFFFFFF8uLL;
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_19EEC3418(a1);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v5);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_19EEC3418(a1);
    }
  }
  else
  {
    sub_19EE703B4((uint64_t)v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
  }
  return v12;
}

uint64_t sub_19F17BB48@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v7[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v7);
  sub_19EEC355C(v2, (uint64_t)v7);
  v7[5] = v4;
  v7[6] = MEMORY[0x1E4FBC860];
  v6[3] = &type metadata for _JSONObjectDecoder;
  v6[4] = sub_19EE70560();
  v6[0] = swift_allocObject();
  sub_19EE70470((uint64_t)v7, v6[0] + 16);
  swift_bridgeObjectRetain();
  ShelfID.init(from:)(v6, a2);
  sub_19EE703B4((uint64_t)v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F17BC14@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v7[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v7);
  sub_19EEC355C(v2, (uint64_t)v7);
  v7[5] = v4;
  v7[6] = MEMORY[0x1E4FBC860];
  v6[3] = &type metadata for _JSONObjectDecoder;
  v6[4] = sub_19EE70560();
  v6[0] = swift_allocObject();
  sub_19EE70470((uint64_t)v7, v6[0] + 16);
  swift_bridgeObjectRetain();
  PageID.init(from:)(v6, a2);
  sub_19EE703B4((uint64_t)v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F17BCE0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v7[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(v7);
  sub_19EEC355C(v2, (uint64_t)v7);
  v7[5] = v4;
  v7[6] = MEMORY[0x1E4FBC860];
  v6[3] = &type metadata for _JSONObjectDecoder;
  v6[4] = sub_19EE70560();
  v6[0] = swift_allocObject();
  sub_19EE70470((uint64_t)v7, v6[0] + 16);
  swift_bridgeObjectRetain();
  ComponentID.init(from:)(v6, a2);
  sub_19EE703B4((uint64_t)v7);
  return swift_bridgeObjectRelease();
}

uint64_t NetRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v83 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_19F1DB34C();
  uint64_t v82 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  v81 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475FC8);
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v7 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for NetRequest();
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = &v11[v9[7]];
  *(void *)unint64_t v12 = 5522759;
  *((void *)v12 + 1) = 0xE300000000000000;
  *(void *)&long long v92 = v12;
  uint64_t v13 = v9[8];
  *(void *)&v11[v13] = 0;
  uint64_t v14 = v9[9];
  uint64_t v15 = MEMORY[0x1E4FBC860];
  unint64_t v16 = sub_19EE8F204(MEMORY[0x1E4FBC860]);
  uint64_t v91 = v14;
  *(void *)&v11[v14] = v16;
  uint64_t v17 = v9[10];
  *(void *)&v11[v17] = 0x403E000000000000;
  uint64_t v18 = &v11[v9[11]];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  v87 = v18;
  v18[16] = 0;
  uint64_t v19 = &v11[v9[12]];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;
  long long v88 = v19;
  uint64_t v20 = v9[13];
  unint64_t v21 = sub_19EE78050(v15);
  unint64_t v90 = v11;
  *(void *)&v11[v20] = v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F17F12C();
  uint64_t v22 = v89;
  sub_19F1DD8AC();
  if (v22) {
    goto LABEL_4;
  }
  uint64_t v23 = (uint64_t)v83;
  uint64_t v78 = v13;
  unint64_t v76 = v16;
  uint64_t v77 = v17;
  uint64_t v79 = a1;
  LOBYTE(v101) = 0;
  sub_19F1DD18C();
  uint64_t v89 = v20;
  sub_19F1DB2FC();
  swift_bridgeObjectRelease();
  uint64_t v24 = v82;
  uint64_t v25 = v85;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v23, 1, v85) == 1)
  {
    sub_19EEBD664(v23, (uint64_t *)&unk_1EB392E50);
    uint64_t v26 = sub_19F1DCDCC();
    swift_allocError();
    char v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50);
    *char v28 = v85;
    a1 = v79;
    __swift_project_boxed_opaque_existential_1(v79, v79[3]);
    sub_19F1DD86C();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x1E4FBBA70], v26);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v7, v86);
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  long long v30 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v81, v23, v25);
  char v31 = v7;
  uint64_t v32 = (uint64_t)v90;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v90, v30, v25);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
  LOBYTE(v98) = 2;
  sub_19F11FF74();
  sub_19F1DD1BC();
  uint64_t v83 = (char *)v33;
  uint64_t v34 = *((void *)&v101 + 1);
  if (*((void *)&v101 + 1))
  {
    uint64_t v35 = v92;
    *(void *)long long v92 = v101;
    *(void *)(v35 + 8) = v34;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475FD8);
  LOBYTE(v98) = 4;
  sub_19F17F180();
  sub_19F1DD1BC();
  if (BYTE8(v101) != 1) {
    *(void *)(v32 + v78) = v101;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476000);
  LOBYTE(v98) = 5;
  sub_19F17F298();
  sub_19F1DD17C();
  uint64_t v36 = v101;
  if ((void)v101)
  {
    swift_bridgeObjectRelease();
    *(void *)(v32 + v91) = v36;
  }
  uint64_t v37 = v77;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472B10);
  LOBYTE(v98) = 3;
  sub_19F026A9C();
  sub_19F1DD1BC();
  if ((BYTE8(v101) & 1) == 0) {
    *(void *)(v32 + v37) = v101;
  }
  LOBYTE(v98) = 1;
  sub_19F1DD17C();
  uint64_t v38 = *((void *)&v101 + 1);
  if (*((void *)&v101 + 1) >= 2uLL)
  {
    unint64_t v39 = v88;
    *(void *)long long v88 = v101;
    *((void *)v39 + 1) = v38;
  }
  unint64_t v40 = 0xD00000000000001FLL;
  long long v41 = v79;
  __swift_project_boxed_opaque_existential_1(v79, v79[3]);
  uint64_t v42 = sub_19F1DD89C();
  JSONContext.init(userInfo:)((Swift::OpaquePointer)v42);
  uint64_t v43 = v101;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_19EE78D1C(0xD00000000000001FLL, 0x800000019F2699A0, v43, &qword_1E946F9A0, qword_1E94760D0);
  uint64_t v83 = (char *)v43;
  swift_bridgeObjectRelease();
  if (!v44)
  {
    swift_bridgeObjectRelease();
    if (qword_1E946F668 != -1) {
LABEL_37:
    }
      swift_once();
    v45 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_19F24EB80;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v47 = swift_allocObject();
    long long v92 = xmmword_19F24EAD0;
    uint64_t v48 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v47 + 16) = xmmword_19F24EAD0;
    uint64_t v100 = v48;
    long long v98 = (char *)(v40 + 19);
    unint64_t v99 = 0x800000019F274A70;
    long long v101 = 0u;
    long long v102 = 0u;
    id v49 = v45;
    sub_19EEC3E70((uint64_t)&v98, (uint64_t)&v101);
    *(unsigned char *)(v47 + 64) = 0;
    long long v50 = v102;
    *(_OWORD *)(v47 + 32) = v101;
    *(_OWORD *)(v47 + 48) = v50;
    *(void *)(v46 + 32) = v47;
    uint64_t v51 = swift_allocObject();
    *(_OWORD *)(v51 + 16) = v92;
    uint64_t v100 = v48;
    long long v98 = (char *)(v40 + 15);
    unint64_t v99 = 0x800000019F274AB0;
    long long v101 = 0u;
    long long v102 = 0u;
    sub_19EEC3E70((uint64_t)&v98, (uint64_t)&v101);
    *(unsigned char *)(v51 + 64) = 0;
    long long v52 = v102;
    *(_OWORD *)(v51 + 32) = v101;
    *(_OWORD *)(v51 + 48) = v52;
    *(void *)(v46 + 40) = v51;
    *(void *)&long long v101 = v49;
    LOBYTE(v98) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v46, (JetEngine::LogMessageLevel)&v98);

    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  sub_19EEC4154((uint64_t)v41, (uint64_t)&v98);
  JSONObject.init(from:)(&v98, (uint64_t *)&v101);
  uint64_t v53 = *(void *)(v44 + 16);
  uint64_t v78 = v44;
  if (!v53)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EEC3418((uint64_t)&v101);
LABEL_34:
    (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v85);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v31, v86);
    sub_19EE5C360(v32, v80);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v79);
    return sub_19EE5C208(v32);
  }
  long long v54 = (uint64_t *)(v44 + 40);
  unint64_t v40 = 0x8000000000000000;
  while (1)
  {
    uint64_t v56 = *(v54 - 1);
    uint64_t v57 = *v54;
    long long v98 = v83;
    sub_19EE77660((uint64_t)&v101, (uint64_t *)&v98, v56, v57, v96);
    sub_19EE77720();
    uint64_t v58 = v97;
    v59 = __swift_project_boxed_opaque_existential_1(v96, v97);
    uint64_t v95 = v58;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v94);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(boxed_opaque_existential_2Tm, v59, v58);
    sub_19EEBDC00(&v94, v93);
    uint64_t v61 = v89;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v103 = *(void **)(v32 + v61);
    uint64_t v63 = v103;
    *(void *)(v32 + v61) = 0x8000000000000000;
    unint64_t v65 = sub_19EE77500((uint64_t)&v98);
    uint64_t v66 = v63[2];
    BOOL v67 = (v64 & 1) == 0;
    uint64_t v68 = v66 + v67;
    if (__OFADD__(v66, v67))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v63[3] < v68) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v69 = v64;
      sub_19EFBD530();
      goto LABEL_27;
    }
LABEL_29:
    v72 = v103;
    if (v64)
    {
      os_log_type_t v55 = (_OWORD *)(v103[7] + 32 * v65);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v55);
      sub_19EEBDC00(v93, v55);
    }
    else
    {
      v103[(v65 >> 6) + 8] |= 1 << v65;
      sub_19EE77E34((uint64_t)&v98, v72[6] + 40 * v65);
      sub_19EEBDC00(v93, (_OWORD *)(v72[7] + 32 * v65));
      uint64_t v73 = v72[2];
      BOOL v74 = __OFADD__(v73, 1);
      uint64_t v75 = v73 + 1;
      if (v74) {
        goto LABEL_36;
      }
      v72[2] = v75;
    }
    *(void *)(v32 + v89) = v72;
    swift_bridgeObjectRelease();
    sub_19EE7760C((uint64_t)&v98);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v96);
    v54 += 2;
    if (!--v53) {
      goto LABEL_33;
    }
  }
  char v69 = v64;
  sub_19EE77768(v68, isUniquelyReferenced_nonNull_native);
  unint64_t v70 = sub_19EE77500((uint64_t)&v98);
  if ((v69 & 1) == (v71 & 1))
  {
    unint64_t v65 = v70;
LABEL_27:
    char v64 = v69;
    unint64_t v40 = 0x8000000000000000;
    goto LABEL_29;
  }
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t NetRequest.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476018);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F17F12C();
  sub_19F1DD8FC();
  LOBYTE(v36) = 0;
  sub_19F1DB34C();
  sub_19F17F338(&qword_1E94730A0, MEMORY[0x1E4F276F0]);
  sub_19F1DD2AC();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for NetRequest();
    LOBYTE(v36) = 2;
    sub_19F1DD26C();
    *(void *)&long long v36 = *(void *)(v1 + v9[6]);
    LOBYTE(v38) = 4;
    type metadata accessor for CachePolicy(0);
    sub_19F17F338(qword_1E9476020, type metadata accessor for CachePolicy);
    sub_19F1DD2AC();
    *(void *)&long long v36 = *(void *)(v1 + v9[7]);
    LOBYTE(v38) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
    sub_19F17F380();
    sub_19F1DD2AC();
    LOBYTE(v36) = 3;
    sub_19F1DD28C();
    long long v36 = *(_OWORD *)(v1 + v9[10]);
    LOBYTE(v38) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
    sub_19EE78558((unint64_t *)&qword_1E94722F8, &qword_1EB392310);
    sub_19F1DD2AC();
    uint64_t v10 = a1[3];
    *(void *)&long long v33 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v10);
    uint64_t v11 = sub_19F1DD8EC();
    JSONContext.init(userInfo:)((Swift::OpaquePointer)v11);
    uint64_t v12 = sub_19EE78D1C(0xD00000000000001FLL, 0x800000019F2699A0, v36, &qword_1E946F9A0, qword_1E94760D0);
    swift_bridgeObjectRelease();
    if (v12)
    {
      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        uint64_t v14 = v9[11];
        v30[1] = v12;
        uint64_t v31 = v14;
        uint64_t v15 = (uint64_t *)(v12 + 40);
        do
        {
          *(void *)&long long v33 = v13;
          uint64_t v16 = *(v15 - 1);
          uint64_t v17 = *(void *)(v3 + v31);
          uint64_t v32 = *v15;
          uint64_t v40 = v16;
          sub_19EE77720();
          if (*(void *)(v17 + 16) && (unint64_t v18 = sub_19EE77500((uint64_t)&v36), (v19 & 1) != 0))
          {
            sub_19EEBDBA4(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v34);
          }
          else
          {
            long long v34 = 0u;
            long long v35 = 0u;
          }
          sub_19EE7760C((uint64_t)&v36);
          if (*((void *)&v35 + 1))
          {
            sub_19EEBDC00(&v34, &v38);
            uint64_t v20 = v39;
            unint64_t v21 = __swift_project_boxed_opaque_existential_1(&v38, v39);
            *((void *)&v37 + 1) = v20;
            boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v36);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(boxed_opaque_existential_2Tm, v21, v20);
            sub_19F0BA1EC((uint64_t)&v36, (uint64_t)a1, v40, v32);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v36);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v38);
          }
          else
          {
            sub_19EEBD664((uint64_t)&v34, &qword_1EB393260);
          }
          v15 += 2;
          uint64_t v13 = v33 - 1;
        }
        while ((void)v33 != 1);
      }
    }
    else
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v23 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v24 = swift_allocObject();
      long long v33 = xmmword_19F24EAD0;
      *(_OWORD *)(v24 + 16) = xmmword_19F24EAD0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
      uint64_t v25 = swift_allocObject();
      uint64_t v26 = MEMORY[0x1E4FBB1A0];
      *(_OWORD *)(v25 + 16) = v33;
      uint64_t v39 = v26;
      *(void *)&long long v38 = 0xD000000000000058;
      *((void *)&v38 + 1) = 0x800000019F274AE0;
      long long v36 = 0u;
      long long v37 = 0u;
      id v27 = v23;
      sub_19EEC3E70((uint64_t)&v38, (uint64_t)&v36);
      *(unsigned char *)(v25 + 64) = 0;
      long long v28 = v37;
      *(_OWORD *)(v25 + 32) = v36;
      *(_OWORD *)(v25 + 48) = v28;
      *(void *)(v24 + 32) = v25;
      *(void *)&long long v36 = v27;
      LOBYTE(v38) = 1;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v24, (JetEngine::LogMessageLevel)&v38);
    }
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t NetRequest.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a1 + 8);
  uint64_t v7 = *(void *)(v3 + *(int *)(type metadata accessor for NetRequest() + 44));
  return sub_19F17D28C(v7, v6, a2, a3);
}

uint64_t NetRequest.ScopeContainer.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_19F17D28C(*v3, a1, a2, a3);
}

uint64_t sub_19F17D28C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_19F1DCAAC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - v11;
  sub_19EE77720();
  if (*(void *)(a1 + 16) && (unint64_t v13 = sub_19EE77500((uint64_t)v22), (v14 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a1 + 56) + 32 * v13, (uint64_t)&v20);
  }
  else
  {
    long long v20 = 0u;
    long long v21 = 0u;
  }
  sub_19EE7760C((uint64_t)v22);
  if (*((void *)&v21 + 1))
  {
    sub_19EEBDC00(&v20, v23);
    sub_19EEBDBA4((uint64_t)v23, (uint64_t)v22);
    int v15 = swift_dynamicCast();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
    if (v15)
    {
      uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
      v16(v12, 0, 1, AssociatedTypeWitness);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a4, v12, AssociatedTypeWitness);
    }
    else
    {
      v16(v12, 1, 1, AssociatedTypeWitness);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      __break(1u);
    }
  }
  else
  {
    uint64_t v19 = sub_19EEBD664((uint64_t)&v20, &qword_1EB393260);
    MEMORY[0x1F4188790](v19);
    *((void *)&v20 - 2) = a2;
    *((void *)&v20 - 1) = a3;
    if (qword_1E946F730 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    if (v22[0] == 1) {
      sub_19F1A4018((uint64_t)"JetEngine/NetRequest.swift", 26, 2, 160, sub_19F180320);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  }
  return result;
}

uint64_t NetRequest.ScopeContainer.subscript.setter(uint64_t a1)
{
  sub_19F17F640(a1);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t vars8;

  sub_19F17F708(a1);
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

void (*NetRequest.ScopeContainer.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1, char a2)
{
  uint64_t v11 = malloc(0x48uLL);
  *a1 = v11;
  void v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  uint64_t v11[2] = a4;
  void *v11 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  size_t v14 = *(void *)(v13 + 64);
  v11[7] = malloc(v14);
  int v15 = malloc(v14);
  unsigned char v11[8] = v15;
  sub_19F17D28C(*v5, a4, a5, (uint64_t)v15);
  return sub_19F17D740;
}

void sub_19F17D740(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 56);
  uint64_t v4 = *(void **)(*(void *)a1 + 64);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 48);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 56), v4, v5);
    sub_19F17F640((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_19F17F640(*(void *)(*(void *)a1 + 64));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t NetRequest.ScopeContainer.subscript.getter@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_19F17D28C(*v3, *(void *)(*MEMORY[0x1E4FBC5F0] + *a1 + 8), a2, a3);
}

uint64_t sub_19F17D89C@<X0>(void **a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(uint64_t *)((char *)a1 + a2 - 8);
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  NetRequest.ScopeContainer.subscript.getter(v5, v4, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F17D918(uint64_t a1)
{
  return sub_19F17F708(a1);
}

void (*NetRequest.ScopeContainer.subscript.modify(void *a1, void *a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[1] = a4;
  v9[2] = v4;
  *uint64_t v9 = a3;
  uint64_t v10 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a2 + 8);
  uint64_t v9[3] = v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  v9[5] = v12;
  size_t v13 = *(void *)(v12 + 64);
  v9[6] = malloc(v13);
  size_t v14 = malloc(v13);
  v9[7] = v14;
  sub_19F17D28C(*v4, v10, a4, (uint64_t)v14);
  return sub_19F17DB90;
}

void sub_19F17DB90(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 56);
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  uint64_t v6 = *(void *)(*(void *)a1 + 40);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 48), v4, v5);
    sub_19F17F640((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_19F17F640(*(void *)(*(void *)a1 + 56));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t NetRequest.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for NetRequest();
  uint64_t v5 = (void *)(a2 + v4[5]);
  *uint64_t v5 = 5522759;
  v5[1] = 0xE300000000000000;
  *(void *)(a2 + v4[6]) = 0;
  uint64_t v6 = v4[7];
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(a2 + v6) = sub_19EE8F204(MEMORY[0x1E4FBC860]);
  *(void *)(a2 + v4[8]) = 0x403E000000000000;
  uint64_t v8 = a2 + v4[9];
  *(void *)uint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  *(unsigned char *)(v8 + 16) = 0;
  uint64_t v9 = (void *)(a2 + v4[10]);
  *uint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = v4[11];
  *(void *)(a2 + v10) = sub_19EE78050(v7);
  uint64_t v11 = sub_19F1DB34C();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  return v12(a2, a1, v11);
}

uint64_t NetRequest.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t NetRequest.url.setter(uint64_t a1)
{
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*NetRequest.url.modify())()
{
  return nullsub_1;
}

uint64_t NetRequest.method.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for NetRequest() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetRequest.method.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for NetRequest() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetRequest.method.modify())(void)
{
  return nullsub_1;
}

uint64_t NetRequest.cache.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for NetRequest() + 24));
}

uint64_t NetRequest.cache.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for NetRequest();
  *(void *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*NetRequest.cache.modify())(void)
{
  return nullsub_1;
}

uint64_t NetRequest.headers.getter()
{
  type metadata accessor for NetRequest();
  return swift_bridgeObjectRetain();
}

uint64_t NetRequest.headers.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for NetRequest() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*NetRequest.headers.modify())(void)
{
  return nullsub_1;
}

double NetRequest.timeout.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for NetRequest() + 32));
}

uint64_t NetRequest.timeout.setter(double a1)
{
  uint64_t result = type metadata accessor for NetRequest();
  *(double *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*NetRequest.timeout.modify())(void)
{
  return nullsub_1;
}

uint64_t NetRequest.body.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for NetRequest() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NetRequest.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for NetRequest() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*NetRequest.body.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_19F17E21C()
{
  return 0;
}

uint64_t NetRequest.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(v3 + *(int *)(type metadata accessor for NetRequest() + 44));
  return sub_19F17D28C(v7, a1, a2, a3);
}

uint64_t NetRequest.subscript.setter(uint64_t a1)
{
  sub_19F17F71C(a1);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t vars8;

  sub_19F17F7F0(a1);
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v3(a1, AssociatedTypeWitness);
}

void (*NetRequest.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  uint64_t v9[3] = v4;
  *uint64_t v9 = a2;
  v9[1] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  size_t v12 = *(void *)(v11 + 64);
  v9[6] = malloc(v12);
  size_t v13 = malloc(v12);
  v9[7] = v13;
  uint64_t v14 = type metadata accessor for NetRequest();
  sub_19F17D28C(*(void *)(v4 + *(int *)(v14 + 44)), a3, a4, (uint64_t)v13);
  return sub_19F17E51C;
}

void sub_19F17E51C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 48);
  uint64_t v4 = *(void **)(*(void *)a1 + 56);
  uint64_t v5 = *(void *)(*(void *)a1 + 32);
  uint64_t v6 = *(void *)(*(void *)a1 + 40);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 48), v4, v5);
    sub_19F17F71C((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_19F17F71C(*(void *)(*(void *)a1 + 56));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

void (*NetRequest.subscript.modify(void *a1, void *a2, uint64_t a3))(uint64_t a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  *uint64_t v7 = a3;
  v7[1] = v3;
  v7[2] = *(void *)(*MEMORY[0x1E4FBC5F0] + *a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  void v7[3] = AssociatedTypeWitness;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  uint64_t v11 = malloc(v10);
  v7[6] = v11;
  NetRequest.subscript.getter(a2, a3, (uint64_t)v11);
  return sub_19F17E830;
}

void sub_19F17E830(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 40);
  uint64_t v4 = *(void **)(*(void *)a1 + 48);
  uint64_t v5 = *(void *)(*(void *)a1 + 24);
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 40), v4, v5);
    sub_19F17F71C((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_19F17F71C(*(void *)(*(void *)a1 + 48));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t NetRequest.subscript.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for NetRequest() + 44));
  return swift_bridgeObjectRetain();
}

{
  uint64_t v1;
  uint64_t vars8;

  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for NetRequest() + 44));
  return swift_bridgeObjectRetain();
}

uint64_t NetRequest.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = *a1;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v9 = *(int *)(type metadata accessor for NetRequest() + 44);
  for (uint64_t i = v7 + 40; ; i += 16)
  {
    sub_19EE77720();
    sub_19EE77E34((uint64_t)v41, (uint64_t)v40);
    v38[0] = v41[0];
    v38[1] = v41[1];
    uint64_t v39 = v42;
    if (*(void *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_19EE77500((uint64_t)v38);
      if (v13)
      {
        sub_19EEBDBA4(*(void *)(v6 + 56) + 32 * v12, (uint64_t)&v36);
      }
      else
      {
        long long v36 = 0u;
        long long v37 = 0u;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v36 = 0u;
      long long v37 = 0u;
    }
    sub_19EE7760C((uint64_t)v38);
    if (!*((void *)&v37 + 1))
    {
      sub_19EEBD664((uint64_t)&v36, &qword_1EB393260);
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_19EE77500((uint64_t)v40);
      char v27 = v26;
      swift_bridgeObjectRelease();
      if (v27)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v29 = *(void *)(v5 + v9);
        *(void *)&v35[0] = v29;
        *(void *)(v5 + v9) = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_19EFBD530();
          uint64_t v29 = *(void *)&v35[0];
        }
        sub_19EE7760C(*(void *)(v29 + 48) + 40 * v25);
        sub_19EEBDC00((_OWORD *)(*(void *)(v29 + 56) + 32 * v25), v34);
        sub_19EF6C118(v25, v29);
        *(void *)(v5 + v9) = v29;
        swift_bridgeObjectRelease();
        sub_19EEBDC00(v34, v35);
      }
      else
      {
        memset(v35, 0, sizeof(v35));
      }
      sub_19EE7760C((uint64_t)v40);
      sub_19EEBD664((uint64_t)v35, &qword_1EB393260);
      goto LABEL_5;
    }
    sub_19EEBDC00(&v36, v35);
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v34[0] = *(void *)(v5 + v9);
    uint64_t v15 = *(void *)&v34[0];
    *(void *)(v5 + v9) = 0x8000000000000000;
    unint64_t v17 = sub_19EE77500((uint64_t)v40);
    uint64_t v18 = *(void *)(v15 + 16);
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v21 = v16;
    if (*(void *)(v15 + 24) >= v20)
    {
      if (v14)
      {
        uint64_t v24 = *(void **)&v34[0];
        if ((v16 & 1) == 0) {
          goto LABEL_24;
        }
      }
      else
      {
        sub_19EFBD530();
        uint64_t v24 = *(void **)&v34[0];
        if ((v21 & 1) == 0) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      sub_19EE77768(v20, v14);
      unint64_t v22 = sub_19EE77500((uint64_t)v40);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_36;
      }
      unint64_t v17 = v22;
      uint64_t v24 = *(void **)&v34[0];
      if ((v21 & 1) == 0)
      {
LABEL_24:
        v24[(v17 >> 6) + 8] |= 1 << v17;
        sub_19EE77E34((uint64_t)v40, v24[6] + 40 * v17);
        sub_19EEBDC00(v35, (_OWORD *)(v24[7] + 32 * v17));
        uint64_t v30 = v24[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_35;
        }
        size_t v24[2] = v32;
        goto LABEL_4;
      }
    }
    uint64_t v11 = (_OWORD *)(v24[7] + 32 * v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_19EEBDC00(v35, v11);
LABEL_4:
    *(void *)(v5 + v9) = v24;
    swift_bridgeObjectRelease();
    sub_19EE7760C((uint64_t)v40);
LABEL_5:
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

{
  uint64_t vars8;

  sub_19F17F7FC(a1, a3, a4);
  return swift_release();
}

void (*NetRequest.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, uint64_t a2)
{
  uint64_t v9 = malloc(0x28uLL);
  *a1 = v9;
  uint64_t v9[3] = a4;
  v9[4] = v4;
  v9[1] = a2;
  v9[2] = a3;
  *uint64_t v9 = *(void *)(v4 + *(int *)(type metadata accessor for NetRequest() + 44));
  swift_bridgeObjectRetain();
  return sub_19F17ED94;
}

void sub_19F17ED94(uint64_t **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[3];
  uint64_t v4 = (*a1)[2];
  uint64_t v6 = **a1;
  if (a2)
  {
    swift_bridgeObjectRetain();
    NetRequest.subscript.setter(&v6, v5, v4, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    NetRequest.subscript.setter(&v6, a2, v4, v3);
  }
  free(v2);
}

uint64_t (*NetRequest.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, uint64_t a2)
{
  a1[2] = a4;
  a1[3] = v4;
  a1[1] = a3;
  *a1 = *(void *)(v4 + *(int *)(type metadata accessor for NetRequest() + 44));
  swift_bridgeObjectRetain();
  return sub_19F17EF04;
}

uint64_t sub_19F17EF04(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v3;
    NetRequest.subscript.setter(&v7, v5, v4, v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *a1;
    return NetRequest.subscript.setter(&v7, a2, v4, v2);
  }
}

uint64_t sub_19F17EF94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return NetRequest.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19F17EFAC()
{
  uint64_t result = 7107189;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2036625250;
      break;
    case 2:
      uint64_t result = 0x646F6874656DLL;
      break;
    case 3:
      uint64_t result = 0x74756F656D6974;
      break;
    case 4:
      uint64_t result = 0x6568636163;
      break;
    case 5:
      uint64_t result = 0x73726564616568;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F17F05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F17F3EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F17F084(uint64_t a1)
{
  unint64_t v2 = sub_19F17F12C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F17F0C0(uint64_t a1)
{
  unint64_t v2 = sub_19F17F12C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F17F0FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return NetRequest.init(from:)(a1, a2);
}

uint64_t sub_19F17F114(void *a1)
{
  return NetRequest.encode(to:)(a1);
}

unint64_t sub_19F17F12C()
{
  unint64_t result = qword_1E9475FD0;
  if (!qword_1E9475FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475FD0);
  }
  return result;
}

unint64_t sub_19F17F180()
{
  unint64_t result = qword_1E9475FE0;
  if (!qword_1E9475FE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9475FD8);
    sub_19F17F1F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475FE0);
  }
  return result;
}

unint64_t sub_19F17F1F4()
{
  unint64_t result = qword_1E9475FE8;
  if (!qword_1E9475FE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9475FF0);
    sub_19F17F338(&qword_1E9475FF8, type metadata accessor for CachePolicy);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9475FE8);
  }
  return result;
}

unint64_t sub_19F17F298()
{
  unint64_t result = qword_1E9476008;
  if (!qword_1E9476008)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9476000);
    sub_19EE78558(&qword_1E9476010, &qword_1EB391070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476008);
  }
  return result;
}

uint64_t sub_19F17F338(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19F17F380()
{
  unint64_t result = qword_1E946CA98;
  if (!qword_1E946CA98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA98);
  }
  return result;
}

uint64_t sub_19F17F3EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646F6874656DLL && a2 == 0xE600000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74756F656D6974 && a2 == 0xE700000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6568636163 && a2 == 0xE500000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73726564616568 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_19F17F640(uint64_t a1)
{
  sub_19EE77720();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[3] = AssociatedTypeWitness;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_2Tm, a1, AssociatedTypeWitness);
  return sub_19EFB59B4((uint64_t)v5, (uint64_t)v6);
}

uint64_t sub_19F17F708(uint64_t a1)
{
  return sub_19F17F640(a1);
}

uint64_t sub_19F17F71C(uint64_t a1)
{
  sub_19EE77720();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[3] = AssociatedTypeWitness;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_2Tm, a1, AssociatedTypeWitness);
  type metadata accessor for NetRequest();
  return sub_19EFB59B4((uint64_t)v5, (uint64_t)v6);
}

uint64_t sub_19F17F7F0(uint64_t a1)
{
  return sub_19F17F71C(a1);
}

uint64_t sub_19F17F7FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  return NetRequest.subscript.setter(&v4, a2, a2, a3);
}

uint64_t sub_19F17F838()
{
  return 32;
}

__n128 sub_19F17F844(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_19F17F850@<X0>(void **a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return NetRequest.subscript.getter(*a1, *(uint64_t *)((char *)a1 + a2 - 8), a3);
}

uint64_t sub_19F17F884(uint64_t a1)
{
  return sub_19F17F7F0(a1);
}

uint64_t sub_19F17F8B0()
{
  return 16;
}

__n128 sub_19F17F8BC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_19F17F8C8@<X0>(void *a1@<X8>)
{
  return NetRequest.subscript.getter(a1);
}

uint64_t sub_19F17F8EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = *a1;
  swift_bridgeObjectRetain();
  return sub_19F17F7FC(&v7, v4, v5);
}

uint64_t sub_19F17F940()
{
  return 16;
}

__n128 sub_19F17F94C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for NetRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_19F1DB34C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    size_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *size_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[9];
    uint64_t v15 = a3[10];
    char v16 = (char *)a1 + v14;
    unint64_t v17 = (char *)a2 + v14;
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)char v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    v16[16] = v17[16];
    BOOL v19 = (uint64_t *)((char *)a1 + v15);
    uint64_t v20 = (uint64_t *)((char *)a2 + v15);
    uint64_t v21 = v20[1];
    *BOOL v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for NetRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v10 = a3[9];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(void *)uint64_t v11 = *(void *)(a2 + v10);
  *(void *)(v11 + 8) = *(void *)(a2 + v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v11 + 16) = *(unsigned char *)(v12 + 16);
  uint64_t v13 = a3[10];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for NetRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  uint64_t v10 = a3[10];
  uint64_t v11 = a1 + v9;
  uint64_t v12 = (long long *)(a2 + v9);
  long long v13 = *v12;
  *(unsigned char *)(v11 + 16) = *((unsigned char *)v12 + 16);
  *(_OWORD *)uint64_t v11 = v13;
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for NetRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)(a2 + v13);
  uint64_t v17 = *(void *)(a2 + v13 + 8);
  *(void *)uint64_t v14 = v16;
  *(void *)(v14 + 8) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v14 + 16) = *(unsigned char *)(v15 + 16);
  uint64_t v18 = a3[10];
  BOOL v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *BOOL v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for NetRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F17FDE8);
}

uint64_t sub_19F17FDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for NetRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F17FEC0);
}

uint64_t sub_19F17FEC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_19F1DB34C();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for NetRequest.ScopeContainer()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *storeEnumTagSinglePayload for NetRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F180064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetRequest.CodingKeys()
{
  return &type metadata for NetRequest.CodingKeys;
}

unint64_t sub_19F1800A0()
{
  unint64_t result = qword_1E94760A8;
  if (!qword_1E94760A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94760A8);
  }
  return result;
}

unint64_t sub_19F1800F8()
{
  unint64_t result = qword_1E94760B0;
  if (!qword_1E94760B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94760B0);
  }
  return result;
}

unint64_t sub_19F180150()
{
  unint64_t result = qword_1E94760B8;
  if (!qword_1E94760B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94760B8);
  }
  return result;
}

uint64_t sub_19F1801A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F180200()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19F180250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475288);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F1802B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_19F180320()
{
  return sub_19F17E21C();
}

uint64_t _CodeByKind_Many.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*_CodeByKind_Many.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _CodeByKind_Many.description.getter()
{
  return 0;
}

uint64_t _CodeByKind_Many.init(from:)(uint64_t a1, uint64_t a2)
{
  sub_19EEC4154(a1, (uint64_t)v12);
  type metadata accessor for CodeByKind();
  swift_getWitnessTable();
  uint64_t v5 = sub_19F1DC2BC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else
  {
    v12[0] = v5;
    MEMORY[0x1F4188790](v5);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v7 = sub_19F1DC27C();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t WitnessTable = swift_getWitnessTable();
    a2 = sub_19F053D3C((void (*)(char *, char *))sub_19F154070, KeyPath, v7, AssociatedTypeWitness, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v10);
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return a2;
}

uint64_t _CodeByKind_Many.init(_partiallyFrom:)(uint64_t a1)
{
  sub_19EEC4154(a1, (uint64_t)v9);
  type metadata accessor for CodeByKind();
  swift_getWitnessTable();
  v9[0] = Array<A>.init(_partiallyFrom:)(v9);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_19F1DC27C();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_19F053D3C((void (*)(char *, char *))sub_19F154070, KeyPath, v3, AssociatedTypeWitness, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t _CodeByKind_Many.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v9[5] = a2;
  v9[2] = a3;
  uint64_t v9[3] = a4;
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_19F1DC27C();
  uint64_t v5 = type metadata accessor for CodeByKind();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_19F053D3C((void (*)(char *, char *))sub_19F180DAC, (uint64_t)v9, v4, v5, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v7);
  swift_bridgeObjectRelease();
  swift_getWitnessTable();
  sub_19F1DC28C();
  return swift_bridgeObjectRelease();
}

uint64_t _CodeByKind_Many._partiallyEncode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12[5] = a2;
  v12[2] = a3;
  void v12[3] = a4;
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_19F1DC27C();
  uint64_t v6 = type metadata accessor for CodeByKind();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_19F053D3C((void (*)(char *, char *))sub_19F180A90, (uint64_t)v12, v5, v6, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = swift_getWitnessTable();
  Array<A>._partiallyEncode(to:)(a1, v9, v6, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F180990@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, double))(v8 + 16))((char *)&v10 - v6, a1, v5);
  return CodeByKind.init(wrappedValue:)((uint64_t)v7, a2);
}

uint64_t sub_19F180A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F180990(a1, a2);
}

uint64_t sub_19F180AB0()
{
  return _CodeByKind_Many.description.getter();
}

uint64_t sub_19F180AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _CodeByKind_Many.init(from:)(a1, *(void *)(a2 + 16));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_19F180AF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _CodeByKind_Many.init(_partiallyFrom:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_19F180B24(uint64_t a1, uint64_t a2)
{
  return _CodeByKind_Many.encode(to:)(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_19F180B48(void *a1, uint64_t a2)
{
  return _CodeByKind_Many._partiallyEncode(to:)(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t static _CodeByKind_Many<>.== infix(_:_:)()
{
  swift_getAssociatedTypeWitness();
  return sub_19F1DC2AC();
}

uint64_t sub_19F180BC8()
{
  return static _CodeByKind_Many<>.== infix(_:_:)();
}

uint64_t _CodeByKind_Many<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  sub_19F1DC29C();
  return swift_bridgeObjectRelease();
}

uint64_t _CodeByKind_Many<>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F180CCC()
{
  return _CodeByKind_Many<>.hashValue.getter();
}

uint64_t sub_19F180CE0()
{
  return _CodeByKind_Many<>.hash(into:)();
}

uint64_t sub_19F180CF4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F180D4C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for _CodeByKind_Many()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F180DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F180A90(a1, a2);
}

uint64_t Bag.Value.currentOrNil()(uint64_t a1, uint64_t a2)
{
  v3[23] = a1;
  v3[24] = a2;
  v3[25] = *v2;
  return MEMORY[0x1F4188298](sub_19F180DEC, 0, 0);
}

uint64_t sub_19F180DEC()
{
  uint64_t v1 = *(void *)(v0 + 192);
  *(void *)(v0 + 208) = (*(uint64_t (**)(void))(**(void **)(v0 + 200) + 88))();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v2;
  *(void *)(v0 + 224) = *(void *)(v1 + 16);
  sub_19F1DCAAC();
  uint64_t v3 = type metadata accessor for Promise();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v2 = v0;
  v2[1] = sub_19F180F00;
  uint64_t v5 = *(void *)(v0 + 184);
  return Future.result.getter(v5, v3, WitnessTable);
}

uint64_t sub_19F180F00()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F181074;
  }
  else {
    uint64_t v2 = sub_19F181014;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F181014()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F181074()
{
  uint64_t v24 = v0;
  swift_release();
  swift_getErrorValue();
  if (sub_19EEA3A88(*(void *)(v0 + 128)))
  {
  }
  else
  {
    uint64_t v1 = (long long *)(v0 + 16);
    if (qword_1EB3910D8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_1EB394F08;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
    id v4 = v2;
    uint64_t v20 = sub_19EEC3F3C(0, 34, 0, MEMORY[0x1E4FBC860]);
    v5._object = (void *)0x800000019F269A50;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 152);
    *(void *)(v0 + 80) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19EEBCD00(v0 + 56, v0 + 88);
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_19EEC3E70(v0 + 88, v0 + 16);
    *(unsigned char *)(v0 + 48) = 0;
    long long v9 = *(_OWORD *)(v0 + 32);
    long long v21 = *v1;
    long long v22 = v9;
    char v23 = *(unsigned char *)(v0 + 48);
    uint64_t v10 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    uint64_t v13 = *(void **)(v0 + 232);
    v10[2] = v12 + 1;
    uint64_t v14 = &v10[5 * v12];
    long long v15 = v21;
    long long v16 = v22;
    *((unsigned char *)v14 + 64) = v23;
    *((_OWORD *)v14 + 2) = v15;
    *((_OWORD *)v14 + 3) = v16;
    uint64_t v20 = v10;
    sub_19EEBD664(v0 + 56, &qword_1EB393260);
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v17);
    *(void *)(v3 + 32) = v10;
    *(void *)&long long v21 = v4;
    LOBYTE(v20) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v20);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(void, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 224) - 8) + 56))(*(void *)(v0 + 184), 1, 1);
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_19F18137C(uint64_t a1)
{
  *(void *)(v1 + 288) = a1;
  return MEMORY[0x1F4188298](sub_19EEDB000, 0, 0);
}

uint64_t sub_19F18139C()
{
  uint64_t v25 = v0;
  swift_release();
  swift_getErrorValue();
  if ((sub_19EEA3A88(*(void *)(v0 + 232)) & 1) == 0)
  {
    uint64_t v1 = (long long *)(v0 + 80);
    if (qword_1EB3910D8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_1EB394F08;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
    id v4 = v2;
    long long v21 = sub_19EEC3F3C(0, 34, 0, MEMORY[0x1E4FBC860]);
    v5._object = (void *)0x800000019F269A50;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    uint64_t v6 = *(void *)(v0 + 248);
    uint64_t v7 = *(void *)(v0 + 256);
    *(void *)(v0 + 184) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 160));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19EEBCD00(v0 + 160, v0 + 192);
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 96) = 0u;
    sub_19EEC3E70(v0 + 192, v0 + 80);
    *(unsigned char *)(v0 + 112) = 0;
    long long v9 = *(_OWORD *)(v0 + 96);
    long long v22 = *v1;
    long long v23 = v9;
    char v24 = *(unsigned char *)(v0 + 112);
    uint64_t v10 = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    v10[2] = v12 + 1;
    uint64_t v13 = &v10[5 * v12];
    long long v14 = v22;
    long long v15 = v23;
    *((unsigned char *)v13 + 64) = v24;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    long long v21 = v10;
    sub_19EEBD664(v0 + 160, &qword_1EB393260);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(void *)(v3 + 32) = v10;
    *(void *)&long long v22 = v4;
    LOBYTE(v21) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v21);
    swift_bridgeObjectRelease();
  }
  Swift::String v17 = *(void **)(v0 + 304);
  unint64_t v18 = sub_19EE78050(MEMORY[0x1E4FBC860]);

  BOOL v19 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v19(v18);
}

uint64_t Bag.Value.current(or:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[24] = a2;
  v5[25] = a3;
  v5[23] = a1;
  v5[26] = *(void *)(a4 + 16);
  uint64_t v6 = sub_19F1DCAAC();
  v5[27] = v6;
  v5[28] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *v4;
  v5[29] = v7;
  v5[30] = v8;
  return MEMORY[0x1F4188298](sub_19F181740, 0, 0);
}

uint64_t sub_19F181740()
{
  *(void *)(v0 + 248) = (*(uint64_t (**)(void))(**(void **)(v0 + 240) + 88))();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v1;
  uint64_t v2 = type metadata accessor for Promise();
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v1 = v0;
  v1[1] = sub_19F181848;
  uint64_t v4 = *(void *)(v0 + 232);
  return Future.result.getter(v4, v2, WitnessTable);
}

uint64_t sub_19F181848()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_19F181A94;
  }
  else
  {
    uint64_t v2 = sub_19F181964;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F181964()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 208);
  swift_release();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = *(void *)(v0 + 232);
  if (v4 == 1)
  {
    uint64_t v6 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 224);
    (*(void (**)(void))(v0 + 192))();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    (*(void (**)(void, void, void))(v3 + 32))(*(void *)(v0 + 184), *(void *)(v0 + 232), *(void *)(v0 + 208));
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_19F181A94()
{
  uint64_t v24 = v0;
  swift_getErrorValue();
  if ((sub_19EEA3A88(*(void *)(v0 + 128)) & 1) == 0)
  {
    uint64_t v1 = (long long *)(v0 + 16);
    if (qword_1EB3910D8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)qword_1EB394F08;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_19F24EAD0;
    id v4 = v2;
    uint64_t v20 = sub_19EEC3F3C(0, 34, 0, MEMORY[0x1E4FBC860]);
    v5._object = (void *)0x800000019F269A50;
    v5._countAndFlagsBits = 0xD000000000000021;
    LogMessage.StringInterpolation.appendLiteral(_:)(v5);
    swift_getErrorValue();
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v7 = *(void *)(v0 + 152);
    *(void *)(v0 + 80) = v7;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 56));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_2Tm, v6, v7);
    sub_19EEBCD00(v0 + 56, v0 + 88);
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_19EEC3E70(v0 + 88, v0 + 16);
    *(unsigned char *)(v0 + 48) = 0;
    long long v9 = *(_OWORD *)(v0 + 32);
    long long v21 = *v1;
    long long v22 = v9;
    char v23 = *(unsigned char *)(v0 + 48);
    uint64_t v10 = v20;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_19EEC3F3C((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    v10[2] = v12 + 1;
    uint64_t v13 = &v10[5 * v12];
    long long v14 = v21;
    long long v15 = v22;
    *((unsigned char *)v13 + 64) = v23;
    *((_OWORD *)v13 + 2) = v14;
    *((_OWORD *)v13 + 3) = v15;
    uint64_t v20 = v10;
    sub_19EEBD664(v0 + 56, &qword_1EB393260);
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v16);
    *(void *)(v3 + 32) = v10;
    *(void *)&long long v21 = v4;
    LOBYTE(v20) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v3, (JetEngine::LogMessageLevel)&v20);
    swift_bridgeObjectRelease();
  }
  Swift::String v17 = *(void **)(v0 + 264);
  (*(void (**)(void))(v0 + 192))();

  swift_task_dealloc();
  unint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

void sub_19F181D5C()
{
}

void sub_19F181DB8()
{
}

uint64_t sub_19F181E14()
{
  return swift_release();
}

id sub_19F181E44@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  a2[3] = (uint64_t)&type metadata for FoundationValue;
  a2[4] = (uint64_t)&off_1EF13D8F8;
  uint64_t v3 = swift_allocObject();
  *a2 = v3;
  *(void *)(v3 + 40) = sub_19EEBDC10(0, &qword_1EB392CF0);
  *(void *)(v3 + 16) = a1;
  return a1;
}

uint64_t sub_19F181ED4()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F181F14()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F181F4C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F181F84(uint64_t a1, unint64_t a2, int a3)
{
  JSValueRef v25[2] = *MEMORY[0x1E4F143B8];
  uint64_t v5 = v4;
  uint64_t v7 = a2;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_19EEA0784(a1, v7);
      uint64_t v22 = sub_19F182310((int)a1, a1 >> 32, v7, v3, a3);
      if (v4) {
        goto LABEL_21;
      }
      uint64_t v19 = v22;
      sub_19EEA072C(a1, v7);
      break;
    case 2uLL:
      uint64_t v7 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v16 = *(void *)(a1 + 16);
      uint64_t v17 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v18 = sub_19F182310(v16, v17, v7, v3, a3);
      if (v5)
      {
        swift_release();
        swift_release();
        swift_release();
        __break(1u);
LABEL_21:
        swift_release();
        sub_19EEA072C(a1, v7);
        __break(1u);
        JUMPOUT(0x19F1822C0);
      }
      uint64_t v19 = v18;
      swift_release();
      swift_release();
      break;
    case 3uLL:
      memset(v25, 0, 14);
      uint64_t v20 = (sqlite3_stmt *)*((void *)v3 + 2);
      uint64_t v21 = qword_1EB390DC8;
      swift_retain();
      if (v21 != -1) {
        swift_once();
      }
      unint64_t v12 = (void (__cdecl *)(void *))qword_1EB390DD0;
      uint64_t v13 = v20;
      int v14 = a3;
      int v15 = 0;
      goto LABEL_10;
    default:
      v25[0] = a1;
      LOWORD(v25[1]) = a2;
      BYTE2(v25[1]) = BYTE2(a2);
      BYTE3(v25[1]) = BYTE3(a2);
      BYTE4(v25[1]) = BYTE4(a2);
      BYTE5(v25[1]) = BYTE5(a2);
      long long v9 = (sqlite3_stmt *)*((void *)v3 + 2);
      int v10 = BYTE6(a2);
      uint64_t v11 = qword_1EB390DC8;
      swift_retain();
      if (v11 != -1) {
        swift_once();
      }
      unint64_t v12 = (void (__cdecl *)(void *))qword_1EB390DD0;
      uint64_t v13 = v9;
      int v14 = a3;
      int v15 = v10;
LABEL_10:
      uint64_t v19 = sqlite3_bind_blob(v13, v14, v25, v15, v12);
      break;
  }
  swift_release();
  if (qword_1EB3912E8 != -1) {
    swift_once();
  }
  if (!sub_19EE672C4(v19, qword_1EB394F10))
  {
    sub_19EFE0074();
    swift_allocError();
    *char v23 = v19;
    swift_willThrow();
  }
  return v19;
}

uint64_t sub_19F1822D0()
{
  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19F182310(uint64_t a1, uint64_t a2, int a3, sqlite3_stmt *a4, int a5)
{
  LODWORD(v7) = a3;
  int v10 = (char *)sub_19F1DB04C();
  if (!v10)
  {
LABEL_4:
    BOOL v12 = __OFSUB__(a2, a1);
    uint64_t v13 = a2 - a1;
    if (v12)
    {
      __break(1u);
    }
    else
    {
      uint64_t v14 = sub_19F1DB06C();
      if (v14 >= v13) {
        uint64_t v15 = v13;
      }
      else {
        uint64_t v15 = v14;
      }
      if (v10) {
        uint64_t v7 = v15;
      }
      else {
        uint64_t v7 = 0;
      }
      if (v7 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (v7 <= 0x7FFFFFFF)
        {
          a4 = (sqlite3_stmt *)*((void *)a4 + 2);
          if (qword_1EB390DC8 == -1) {
            return sqlite3_bind_blob(a4, a5, v10, v7, (void (__cdecl *)(void *))qword_1EB390DD0);
          }
LABEL_18:
          swift_once();
          return sqlite3_bind_blob(a4, a5, v10, v7, (void (__cdecl *)(void *))qword_1EB390DD0);
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  uint64_t result = sub_19F1DB07C();
  if (!__OFSUB__(a1, result))
  {
    v10 += a1 - result;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for SQLiteStatementError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F1824ACLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLiteStatementError()
{
  return &type metadata for SQLiteStatementError;
}

unint64_t sub_19F1824E8()
{
  unint64_t result = qword_1E9476170[0];
  if (!qword_1E9476170[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1E9476170);
  }
  return result;
}

uint64_t sub_19F18253C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for JSIntentRequest();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, a1, v8);
  int v10 = (int *)type metadata accessor for JSIntentResponse();
  uint64_t v11 = a4 + v10[9];
  uint64_t v12 = sub_19F1DAE7C();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  sub_19EECD9F0(a3, a4 + v10[10]);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  v21[0] = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  uint64_t v15 = sub_19EE967CC(a3, v21);
  swift_bridgeObjectRelease();
  *(void *)(a4 + v10[11]) = v15;
  JSONObject.subscript.getter(0xD000000000000013, 0x800000019F26DAB0, (uint64_t)v21);
  unint64_t v16 = sub_19EEBF898(v14);
  uint64_t v17 = sub_19EE964AC((uint64_t)v21, v16);
  sub_19F183A80(a3);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  *(void *)(a4 + v10[12]) = v17;
  return result;
}

uint64_t JSIntentResponse.intentRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for JSIntentRequest();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t JSIntentResponse.requestDuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_19F1DAE7C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t JSIntentResponse.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EECD9F0(v2 + *(int *)(a1 + 40), a2);
}

uint64_t JSIntentResponse.incidents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t JSIntentResponse.networkPerformance.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_19F182848()
{
  type metadata accessor for JSIntentRequest();
  if (v0 <= 0x3F)
  {
    sub_19F1DAE7C();
    if (v1 <= 0x3F)
    {
      sub_19EEDF468();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_19F182960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = sub_19F1DAE7C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  unint64_t v11 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 9;
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = v10 | 7;
  unsigned int v14 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v14 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((((v10 + 40) & ~v10) + v12 + 7 + (((v10 | 7) + v12 + (v11 & ~v10)) & ~(v10 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v18 = v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7));
    swift_retain();
  }
  else
  {
    uint64_t v38 = v10 + 40;
    uint64_t v39 = ((v10 + 40) & ~v10) + v12 + 7;
    uint64_t v19 = ~v10;
    uint64_t v36 = v8;
    uint64_t v37 = ~v13;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v20 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v21 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    char v22 = *(unsigned char *)(v21 + 8);
    *(void *)unint64_t v20 = *(void *)v21;
    *(unsigned char *)(v20 + 8) = v22;
    unint64_t v23 = ((unint64_t)a1 + v11) & v19;
    unint64_t v24 = ((unint64_t)a2 + v11) & v19;
    uint64_t v25 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v25(v23, v24, v36);
    unint64_t v26 = v23 + v12 + v13;
    char v27 = (_OWORD *)(v26 & v37);
    unint64_t v28 = v24 + v12 + v13;
    uint64_t v29 = (long long *)(v28 & v37);
    uint64_t v30 = *(void *)((v28 & v37) + 0x18);
    if (v30)
    {
      *(void *)((v26 & v37) + 0x18) = v30;
      *(void *)((v26 & v37) + 0x20) = *(void *)((v28 & v37) + 0x20);
      (**(void (***)(_OWORD *, long long *))(v30 - 8))(v27, v29);
    }
    else
    {
      long long v31 = *v29;
      long long v32 = *(_OWORD *)((v28 & v37) + 0x10);
      *(void *)((v26 & v37) + 0x20) = *(void *)((v28 & v37) + 0x20);
      *char v27 = v31;
      *(_OWORD *)((v26 & v37) + 0x10) = v32;
    }
    v25(((unint64_t)v27 + v38) & v19, ((unint64_t)v29 + v38) & v19, v36);
    long long v33 = (void *)(((unint64_t)v27 + v39) & 0xFFFFFFFFFFFFFFF8);
    long long v34 = (void *)(((unint64_t)v29 + v39) & 0xFFFFFFFFFFFFFFF8);
    void *v33 = *v34;
    *(void *)(((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  return (uint64_t *)v18;
}

uint64_t sub_19F182C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (*(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_19F1DAE7C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (a1 + v9 + v4 + 9) & ~v9;
  v7(v10, v5);
  uint64_t v11 = *(void *)(v8 + 56) + (v9 | 7) + v10;
  uint64_t v12 = v11 & ~(v9 | 7);
  if (*(void *)(v12 + 0x18)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v11 & ~(v9 | 7));
  }
  v7((v9 + 40 + v12) & ~v9, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F182D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = sub_19F1DAE7C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = v12 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = v10 + v15 + 9;
  uint64_t v17 = ~v15;
  uint64_t v18 = (v16 + a1) & ~v15;
  uint64_t v19 = (v16 + a2) & ~v15;
  v13(v18, v19, v11);
  uint64_t v20 = *(void *)(v14 + 48);
  uint64_t v21 = v20 + (v15 | 7);
  uint64_t v22 = (v21 + v18) & ~(v15 | 7);
  uint64_t v23 = v21 + v19;
  uint64_t v24 = v23 & ~(v15 | 7);
  uint64_t v25 = *(void *)(v24 + 0x18);
  if (v25)
  {
    *(void *)(v22 + 24) = v25;
    *(void *)(v22 + 32) = *(void *)((v23 & ~(v15 | 7)) + 0x20);
    (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v22, v24);
  }
  else
  {
    long long v26 = *(_OWORD *)v24;
    long long v27 = *(_OWORD *)((v23 & ~(v15 | 7)) + 0x10);
    *(void *)(v22 + 32) = *(void *)((v23 & ~(v15 | 7)) + 0x20);
    *(_OWORD *)uint64_t v22 = v26;
    *(_OWORD *)(v22 + 16) = v27;
  }
  v13((v15 + 40 + v22) & v17, (v15 + 40 + v24) & v17, v11);
  uint64_t v28 = ((v15 + 40) & v17) + v20 + 7;
  uint64_t v29 = (void *)((v28 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)((v28 + v24) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_19F182F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = sub_19F1DAE7C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 24);
  uint64_t v14 = v12 + 24;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = v10 + v15 + 9;
  uint64_t v17 = ~v15;
  uint64_t v18 = (v16 + a1) & ~v15;
  uint64_t v19 = (v16 + a2) & ~v15;
  v13(v18, v19, v11);
  uint64_t v20 = *(void *)(v14 + 40);
  uint64_t v21 = v20 + (v15 | 7);
  uint64_t v22 = (v21 + v18) & ~(v15 | 7);
  uint64_t v23 = v21 + v19;
  uint64_t v24 = v23 & ~(v15 | 7);
  uint64_t v25 = *(void *)(v24 + 0x18);
  if (!*(void *)(v22 + 24))
  {
    if (v25)
    {
      *(void *)(v22 + 24) = v25;
      *(void *)(v22 + 32) = *(void *)((v23 & ~(v15 | 7)) + 0x20);
      (**(void (***)(uint64_t, uint64_t))(v25 - 8))(v22, v24);
      goto LABEL_8;
    }
LABEL_7:
    long long v26 = *(_OWORD *)v24;
    long long v27 = *(_OWORD *)(v24 + 16);
    *(void *)(v22 + 32) = *(void *)(v24 + 32);
    *(_OWORD *)uint64_t v22 = v26;
    *(_OWORD *)(v22 + 16) = v27;
    goto LABEL_8;
  }
  if (!v25)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v22);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v22, (uint64_t *)(v23 & ~(v15 | 7)));
LABEL_8:
  v13((v15 + 40 + v22) & v17, (v15 + 40 + v24) & v17, v11);
  uint64_t v28 = ((v15 + 40) & v17) + v20 + 7;
  uint64_t v29 = (void *)((v28 + v22) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = v28 + v24;
  unint64_t v31 = (v30 & 0xFFFFFFFFFFFFFFF8) + 15;
  *uint64_t v29 = *(void *)(v30 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v31 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_19F183150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = sub_19F1DAE7C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  uint64_t v14 = v12 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = v10 + v15 + 9;
  uint64_t v17 = (v16 + a1) & ~v15;
  uint64_t v18 = (v16 + a2) & ~v15;
  v13(v17, v18, v11);
  uint64_t v19 = *(void *)(v14 + 32);
  uint64_t v20 = v19 + (v15 | 7);
  uint64_t v21 = (v20 + v17) & ~(v15 | 7);
  uint64_t v22 = (v20 + v18) & ~(v15 | 7);
  uint64_t v23 = *(void *)(v22 + 0x20);
  long long v24 = *(_OWORD *)(v22 + 0x10);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v24;
  *(void *)(v21 + 32) = v23;
  v13((v15 + 40 + v21) & ~v15, (v15 + 40 + v22) & ~v15, v11);
  uint64_t v25 = ((v15 + 40) & ~v15) + v19 + 7;
  long long v26 = (void *)((v25 + v21) & 0xFFFFFFFFFFFFFFF8);
  long long v27 = (void *)((v25 + v22) & 0xFFFFFFFFFFFFFFF8);
  *long long v26 = *v27;
  *(void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_19F1832D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)unint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = sub_19F1DAE7C();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40);
  uint64_t v14 = v12 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = v10 + v15 + 9;
  uint64_t v32 = a1;
  uint64_t v17 = ~v15;
  uint64_t v18 = (v16 + a1) & ~v15;
  uint64_t v19 = (v16 + a2) & ~v15;
  v13(v18, v19, v11);
  uint64_t v20 = *(void *)(v14 + 24);
  uint64_t v21 = v20 + (v15 | 7);
  uint64_t v22 = v21 + v18;
  uint64_t v23 = ~(v15 | 7);
  uint64_t v24 = v22 & v23;
  if (*(void *)((v22 & v23) + 0x18)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v22 & v23);
  }
  uint64_t v25 = (v21 + v19) & v23;
  long long v26 = *(_OWORD *)v25;
  long long v27 = *(_OWORD *)(v25 + 16);
  *(void *)(v24 + 32) = *(void *)(v25 + 32);
  *(_OWORD *)uint64_t v24 = v26;
  *(_OWORD *)(v24 + 16) = v27;
  v13((v15 + 40 + v24) & v17, (v15 + 40 + v25) & v17, v11);
  uint64_t v28 = ((v15 + 40) & v17) + v20 + 7;
  uint64_t v29 = (void *)((v28 + v24) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)((v28 + v25) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v30;
  swift_bridgeObjectRelease();
  *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_19F183484(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_19F1DAE7C() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v8 + 64);
  if (v9 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  unint64_t v13 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 9;
  uint64_t v14 = v10 | 7;
  uint64_t v15 = (v10 | 7) + v11;
  uint64_t v16 = ((v10 + 40) & ~v10) + v11 + 7;
  if (v12 < a2)
  {
    unint64_t v17 = ((((v16 + ((v15 + (v13 & ~v10)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v18 = v17 & 0xFFFFFFF8;
    if ((v17 & 0xFFFFFFF8) != 0) {
      unsigned int v19 = 2;
    }
    else {
      unsigned int v19 = a2 - v12 + 1;
    }
    if (v19 >= 0x10000) {
      unsigned int v20 = 4;
    }
    else {
      unsigned int v20 = 2;
    }
    if (v19 < 0x100) {
      unsigned int v20 = 1;
    }
    if (v19 >= 2) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 0;
    }
    switch(v21)
    {
      case 1:
        int v22 = *((unsigned __int8 *)a1 + v17);
        if (!v22) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v22 = *(unsigned __int16 *)((char *)a1 + v17);
        if (v22) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x19F183728);
      case 4:
        int v22 = *(int *)((char *)a1 + v17);
        if (!v22) {
          break;
        }
LABEL_24:
        int v24 = v22 - 1;
        if (v18)
        {
          int v24 = 0;
          int v25 = *a1;
        }
        else
        {
          int v25 = 0;
        }
        return v12 + (v25 | v24) + 1;
      default:
        break;
    }
  }
  if (v7 == v12)
  {
    long long v26 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v6 + 48);
    return v26(a1, v7, v5);
  }
  else
  {
    unint64_t v27 = ((unint64_t)a1 + v13) & ~v10;
    if (v9 == v12)
    {
      uint64_t v28 = *(uint64_t (**)(unint64_t))(v8 + 48);
      return v28(v27);
    }
    else
    {
      unint64_t v29 = *(void *)((v16 + ((v15 + v27) & ~v14)) & 0xFFFFFFFFFFFFFFF8);
      if (v29 >= 0xFFFFFFFF) {
        LODWORD(v29) = -1;
      }
      return (v29 + 1);
    }
  }
}

void sub_19F18373C(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v30 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_19F1DAE7C() - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = *(void *)(v10 + 64);
  if (v11 <= v9) {
    unsigned int v14 = v9;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  unint64_t v15 = ((*(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 9;
  uint64_t v16 = (v12 | 7) + v13;
  uint64_t v17 = ((v12 + 40) & ~v12) + v13 + 7;
  unint64_t v18 = ((((v17 + ((v16 + (v15 & ~v12)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v14 >= a3)
  {
    int v21 = 0;
    int v22 = a2 - v14;
    if (a2 <= v14)
    {
LABEL_19:
      switch(v21)
      {
        case 1:
          *((unsigned char *)a1 + v18) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v18) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)((char *)a1 + v18) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v9 == v14)
            {
              int v25 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v30 + 56);
              v25(a1, a2, v9, v7);
            }
            else
            {
              unint64_t v26 = ((unint64_t)a1 + v15) & ~v12;
              if (v11 == v14)
              {
                unint64_t v27 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                v27(v26, a2);
              }
              else
              {
                uint64_t v28 = (void *)((v17 + ((v16 + v26) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0) {
                  uint64_t v29 = a2 ^ 0x80000000;
                }
                else {
                  uint64_t v29 = (a2 - 1);
                }
                *uint64_t v28 = v29;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((v17 + ((v16 + (v15 & ~v12)) & ~(v12 | 7))) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      unsigned int v19 = a3 - v14 + 1;
    else {
      unsigned int v19 = 2;
    }
    if (v19 >= 0x10000) {
      int v20 = 4;
    }
    else {
      int v20 = 2;
    }
    if (v19 < 0x100) {
      int v20 = 1;
    }
    if (v19 >= 2) {
      int v21 = v20;
    }
    else {
      int v21 = 0;
    }
    int v22 = a2 - v14;
    if (a2 <= v14) {
      goto LABEL_19;
    }
  }
  if (((((v17 + ((v16 + (v15 & ~v12)) & ~(v12 | 7))) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
    int v23 = v22;
  else {
    int v23 = 1;
  }
  if (((((v17 + ((v16 + (v15 & ~v12)) & ~(v12 | 7))) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v24 = ~v14 + a2;
    bzero(a1, ((((v17 + ((v16 + (v15 & ~v12)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v24;
  }
  switch(v21)
  {
    case 1:
      *((unsigned char *)a1 + v18) = v23;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v18) = v23;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x19F183A40);
    case 4:
      *(_DWORD *)((char *)a1 + v18) = v23;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for JSIntentResponse()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F183A80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Decoder.withUserInfo(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  void v12[3] = a2;
  v12[4] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, v4, a2);
  a4[3] = (uint64_t)&type metadata for _Wrapped_Decoder;
  a4[4] = sub_19F184060();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = (_OWORD *)(v9 + 16);
  *a4 = v9;
  swift_bridgeObjectRetain();
  return sub_19F183C28(v12, a1, v10);
}

uint64_t sub_19F183B9C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_19F184390(a1, (uint64_t)sub_19F1842E8, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_19F183C28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = sub_19F1DD89C();
  uint64_t v7 = sub_19F183B9C(a2, v6);
  sub_19EEC4154((uint64_t)a1, (uint64_t)&v35);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946F6F8);
  if (swift_dynamicCast())
  {
    long long v38 = v31;
    long long v39 = v32;
    long long v40 = v33;
    uint64_t v41 = v34;
    MetatypeMetadata = &type metadata for _JSONObjectDecoder;
    unint64_t v37 = sub_19EE70560();
    uint64_t v8 = swift_allocObject();
    *(void *)&long long v35 = v8;
    sub_19EEC355C((uint64_t)&v38, v8 + 16);
    uint64_t v9 = v41;
    *(void *)(v8 + 56) = v7;
    *(void *)(v8 + 64) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19EE703B4((uint64_t)&v38);
    sub_19EEBB420(&v35, (uint64_t)&v31);
  }
  else
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    long long v31 = 0u;
    sub_19EEBD664((uint64_t)&v31, &qword_1E9476200);
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v10 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_19F24DBC0;
    id v12 = v10;
    uint64_t v30 = sub_19EEC3F3C(0, 60, 0, MEMORY[0x1E4FBC860]);
    v13._countAndFlagsBits = 0xD000000000000028;
    v13._object = (void *)0x800000019F274CF0;
    LogMessage.StringInterpolation.appendLiteral(_:)(v13);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t DynamicType = swift_getDynamicType();
    MetatypeMetadata = (ValueMetadata *)swift_getMetatypeMetadata();
    *(void *)&long long v35 = DynamicType;
    sub_19EEBCD00((uint64_t)&v35, (uint64_t)v29);
    long long v31 = 0u;
    long long v32 = 0u;
    sub_19EEC3E70((uint64_t)v29, (uint64_t)&v31);
    LOBYTE(v40) = 0;
    long long v38 = v31;
    long long v39 = v32;
    unint64_t v15 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
    }
    unint64_t v17 = v15[2];
    unint64_t v16 = v15[3];
    if (v17 >= v16 >> 1) {
      unint64_t v15 = sub_19EEC3F3C((void *)(v16 > 1), v17 + 1, 1, v15);
    }
    v15[2] = v17 + 1;
    unint64_t v18 = &v15[5 * v17];
    long long v19 = v38;
    long long v20 = v39;
    *((unsigned char *)v18 + 64) = v40;
    *((_OWORD *)v18 + 2) = v19;
    *((_OWORD *)v18 + 3) = v20;
    uint64_t v30 = v15;
    sub_19EEBD664((uint64_t)&v35, &qword_1EB393260);
    v21._object = (void *)0x800000019F274D20;
    v21._countAndFlagsBits = 0xD000000000000013;
    LogMessage.StringInterpolation.appendLiteral(_:)(v21);
    *(void *)(v11 + 32) = v30;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393250);
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = MEMORY[0x1E4FBB1A0];
    *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
    *((void *)&v32 + 1) = v23;
    *(void *)&long long v31 = 0xD000000000000057;
    *((void *)&v31 + 1) = 0x800000019F274D40;
    long long v38 = 0u;
    long long v39 = 0u;
    sub_19EEC3E70((uint64_t)&v31, (uint64_t)&v38);
    *(unsigned char *)(v22 + 64) = 0;
    long long v24 = v39;
    *(_OWORD *)(v22 + 32) = v38;
    *(_OWORD *)(v22 + 48) = v24;
    *(void *)(v11 + 40) = v22;
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
    *((void *)&v32 + 1) = v23;
    *(void *)&long long v31 = 0xD000000000000026;
    *((void *)&v31 + 1) = 0x800000019F274DA0;
    long long v38 = 0u;
    long long v39 = 0u;
    sub_19EEC3E70((uint64_t)&v31, (uint64_t)&v38);
    *(unsigned char *)(v25 + 64) = 0;
    long long v26 = v39;
    *(_OWORD *)(v25 + 32) = v38;
    *(_OWORD *)(v25 + 48) = v26;
    *(void *)(v11 + 48) = v25;
    *(void *)&long long v38 = v12;
    LOBYTE(v31) = 1;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v11, (JetEngine::LogMessageLevel)&v31);

    swift_bridgeObjectRelease();
    sub_19EEC4154((uint64_t)a1, (uint64_t)&v31);
  }
  *((void *)&v33 + 1) = v7;
  long long v27 = v32;
  *a3 = v31;
  a3[1] = v27;
  a3[2] = v33;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19F184060()
{
  unint64_t result = qword_1E94761F8;
  if (!qword_1E94761F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94761F8);
  }
  return result;
}

uint64_t sub_19F1840B4()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

ValueMetadata *type metadata accessor for _Wrapped_Decoder()
{
  return &type metadata for _Wrapped_Decoder;
}

uint64_t sub_19F184104()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_19F1DD8AC();
}

uint64_t sub_19F184180()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_19F1DD86C();
}

uint64_t sub_19F1841C4()
{
  return sub_19F184104();
}

uint64_t sub_19F1841DC(uint64_t a1, uint64_t a2)
{
  return sub_19F184234(a1, a2, MEMORY[0x1E4FBC5B0]);
}

uint64_t sub_19F184208(uint64_t a1, uint64_t a2)
{
  return sub_19F184234(a1, a2, MEMORY[0x1E4FBC5B8]);
}

uint64_t sub_19F184234(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = v3[3];
  uint64_t v6 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  return a3(v5, v6);
}

uint64_t sub_19F184298()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19F1842E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946D478) + 48);
  uint64_t v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E9472170) + 48);
  uint64_t v6 = sub_19F1DCF8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return sub_19EEBDBA4(v4, v5);
}

uint64_t sub_19F184390(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = sub_19F1DCF8C();
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476208);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = ~v16;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = -v16;
  uint64_t v44 = a1;
  uint64_t v45 = a1 + 64;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  uint64_t v46 = v17;
  uint64_t v47 = 0;
  uint64_t v48 = v20 & v18;
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  v39[2] = a1;
  swift_bridgeObjectRetain();
  v39[1] = a3;
  swift_retain();
  sub_19EFC9C9C((uint64_t)v15);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472170);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_19EEBDCB0();
    return swift_release();
  }
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
  long long v40 = (void (**)(char *, uint64_t))(v41 + 8);
  while (1)
  {
    long long v24 = &v15[*(int *)(v21 + 48)];
    uint64_t v25 = v10;
    v51(v12, v15, v10);
    sub_19EEBDC00(v24, v43);
    uint64_t v26 = *a5;
    unint64_t v28 = sub_19EE71FE4((uint64_t)v12);
    uint64_t v29 = *(void *)(v26 + 16);
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (*(void *)(v26 + 24) >= v31)
    {
      if (a4)
      {
        if (v27) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_19EFBDE24();
        if (v32) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_19EFB8860(v31, a4 & 1);
      unint64_t v33 = sub_19EE71FE4((uint64_t)v12);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_22;
      }
      unint64_t v28 = v33;
      if (v32)
      {
LABEL_7:
        sub_19EEBDBA4((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
        uint64_t v10 = v25;
        (*v40)(v12, v25);
        uint64_t v23 = (_OWORD *)(*(void *)(*a5 + 56) + 32 * v28);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
        sub_19EEBDC00(v42, v23);
        goto LABEL_8;
      }
    }
    long long v35 = (void *)*a5;
    *(void *)(*a5 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    uint64_t v10 = v25;
    v51((char *)(v35[6] + *(void *)(v41 + 72) * v28), v12, v25);
    sub_19EEBDC00(v43, (_OWORD *)(v35[7] + 32 * v28));
    uint64_t v36 = v35[2];
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (v37) {
      goto LABEL_21;
    }
    _OWORD v35[2] = v38;
LABEL_8:
    sub_19EFC9C9C((uint64_t)v15);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472170);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

unint64_t NativeIntentDispatcher.init()@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  uint64_t v2 = (_OWORD *)(a1 + 8);
  sub_19EEBD664(a1 + 8, qword_1E946CC60);
  *uint64_t v2 = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  unint64_t result = sub_19EFB570C(MEMORY[0x1E4FBC860]);
  *(void *)a1 = result;
  return result;
}

uint64_t NativeIntentDispatcher.register(contentsOf:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v5 = *v1;
  *unint64_t v1 = 0x8000000000000000;
  sub_19F10CDBC(v2, (uint64_t)sub_19F10CD68, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v5);
  *unint64_t v1 = v5;
  return swift_bridgeObjectRelease();
}

uint64_t NativeIntentDispatcher.registering<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_19F10D120(v4, a4);
  return NativeIntentDispatcher.register<A>(_:)(a1, a2, a3);
}

uint64_t NativeIntentDispatcher.next.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC3ED8(v1 + 8, a1, qword_1E946CC60);
}

uint64_t NativeIntentDispatcher.next.setter(uint64_t a1)
{
  return sub_19EE6EEAC(a1, v1 + 8, qword_1E946CC60);
}

uint64_t (*NativeIntentDispatcher.next.modify())()
{
  return nullsub_1;
}

uint64_t NativeIntentDispatcher.withNext(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19F10D120(v2, a2);
  sub_19EEC3ED8(a1, (uint64_t)v6, qword_1E946CC60);
  return sub_19EE6EEAC((uint64_t)v6, a2 + 8, qword_1E946CC60);
}

uint64_t NativeIntentDispatcher.register<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  uint64_t v8 = v7;
  void v11[3] = a2;
  v11[4] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_2Tm, a1, a2);
  return sub_19EFB5DD0((uint64_t)v11, v6, v8);
}

uint64_t NativeIntentDispatcher.registering(contentsOf:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_19F10D120(v2, (uint64_t)a2);
  uint64_t v5 = *a1;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a2;
  *a2 = 0x8000000000000000;
  sub_19F10CDBC(v5, (uint64_t)sub_19F10CD68, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  *a2 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t NativeIntentDispatcher.dispatcher<A, B>(for:asPartOf:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_19F184B34, 0, 0);
}

uint64_t sub_19F184B34()
{
  uint64_t v1 = (uint64_t *)v0[2];
  uint64_t v2 = v0[3];
  v1[3] = (uint64_t)&type metadata for NativeIntentDispatcher;
  v1[4] = (uint64_t)&protocol witness table for NativeIntentDispatcher;
  uint64_t v3 = swift_allocObject();
  *uint64_t v1 = v3;
  sub_19F10D120(v2, v3 + 16);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t NativeIntentDispatcher.dispatch<A>(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  void v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[8] = AssociatedTypeWitness;
  uint64_t v8 = type metadata accessor for IntentOutcome();
  v6[9] = v8;
  v6[10] = *(void *)(v8 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v6[13] = *(void *)(AssociatedTypeWitness - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F184D38, 0, 0);
}

uint64_t sub_19F184D38()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 64);
  sub_19F1853B8(*(void *)(v0 + 40), *(void *)(v0 + 48), v1);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 128) = v4;
  *(void *)(v0 + 136) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v1, 1, v3) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    *(void *)(v0 + 144) = v8;
    *(void *)(v0 + 152) = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v8(v5, v6);
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 160) = v9;
    *(void *)uint64_t v9 = v0;
    *(void *)(v9 + 8) = sub_19F184F14;
    uint64_t v10 = *(void *)(v0 + 88);
    long long v11 = *(_OWORD *)(v0 + 24);
    long long v12 = *(_OWORD *)(v0 + 40);
    *(void *)(v9 + 176) = *(void *)(v0 + 56);
    *(_OWORD *)(v9 + 144) = v11;
    *(_OWORD *)(v9 + 160) = v12;
    *(void *)(v9 + 136) = v10;
    return MEMORY[0x1F4188298](sub_19F185590, 0, 0);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 64);
    uint64_t v15 = *(void *)(v0 + 16);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 104) + 32);
    v16(v13, *(void *)(v0 + 96), v14);
    v16(v15, v13, v14);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_19F184F14()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F185330;
  }
  else {
    uint64_t v2 = sub_19F185028;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F185028()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 128))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, void))(v0 + 144))(v1, *(void *)(v0 + 72));
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 176) = v3;
    *(void *)uint64_t v3 = v0;
    *(void *)(v3 + 8) = sub_19F1851BC;
    long long v4 = *(_OWORD *)(v0 + 16);
    long long v5 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v3 + 112) = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v3 + 128) = v5;
    *(_OWORD *)(v3 + 96) = v4;
    return MEMORY[0x1F4188298](sub_19F1859EC, 0, 0);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 16);
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 104) + 32);
    v8(v6, v1, v2);
    v8(v7, v6, v2);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_19F1851BC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F185330()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F1853B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_19F1DCAAC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - v9;
  static StaticIntent._unwrapData<A>(of:)(AssociatedTypeWitness, a1, a2, (uint64_t)&v14 - v9);
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v12 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v10, AssociatedTypeWitness);
    uint64_t v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, v12, 1, AssociatedTypeWitness);
}

uint64_t sub_19F185568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[21] = a5;
  v6[22] = v5;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  return MEMORY[0x1F4188298](sub_19F185590, 0, 0);
}

uint64_t sub_19F185590()
{
  uint64_t v1 = **(void **)(v0 + 176);
  (*(void (**)(void))(*(void *)(v0 + 168) + 40))(*(void *)(v0 + 160));
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  if (*(void *)(v1 + 16) && (unint64_t v6 = sub_19EEBD400(v4, v5), (v7 & 1) != 0))
  {
    sub_19EEC4154(*(void *)(v1 + 56) + 40 * v6, v0 + 96);
  }
  else
  {
    *(void *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v0 + 160);
  uint64_t v9 = *(void *)(v0 + 168);
  if (*(void *)(v0 + 120))
  {
    long long v18 = *(_OWORD *)(v0 + 144);
    sub_19EEBB420((long long *)(v0 + 96), v0 + 16);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 184) = v10;
    *(void *)(v10 + 16) = v8;
    *(void *)(v10 + 24) = v9;
    *(void *)(v10 + 32) = v0 + 16;
    *(_OWORD *)(v10 + 40) = v18;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v11;
    swift_getAssociatedTypeWitness();
    uint64_t v12 = type metadata accessor for IntentOutcome();
    void *v11 = v0;
    v11[1] = sub_19F185830;
    uint64_t v13 = *(void *)(v0 + 136);
    return sub_19F12F6F4(v13, (uint64_t)&unk_1E9476248, v10, v12);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 136);
    sub_19EEBD664(v0 + 96, qword_1E946CDE0);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v15, 1, 1, AssociatedTypeWitness);
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_19F185830()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F185960;
  }
  else {
    uint64_t v2 = sub_19F048ED8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F185960()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F1859C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[16] = a5;
  v6[17] = v5;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  return MEMORY[0x1F4188298](sub_19F1859EC, 0, 0);
}

uint64_t sub_19F1859EC()
{
  sub_19EEC3ED8(*(void *)(v0 + 136) + 8, v0 + 56, qword_1E946CC60);
  if (*(void *)(v0 + 80))
  {
    sub_19EEBB420((long long *)(v0 + 56), v0 + 16);
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t v2 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v1);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 16)
                                                                                                + **(int **)(v2 + 16));
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_19F185BAC;
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 96);
    return v12(v8, v6, v7, v4, v5, v1, v2);
  }
  else
  {
    sub_19EEBD664(v0 + 56, qword_1E946CC60);
    sub_19F049244();
    swift_allocError();
    *uint64_t v10 = 0;
    swift_willThrow();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_19F185BAC()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F185CC0;
  }
  else {
    uint64_t v2 = sub_19F048ED8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F185CC0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F185D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  void v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x1F4188298](sub_19F185D4C, 0, 0);
}

uint64_t sub_19F185D4C()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v3 = v1[3];
  uint64_t v2 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F185E10;
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[2];
  return sub_19F185F04(v9, v7, v8, v3, v5, v2, v6);
}

uint64_t sub_19F185E10()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_19F185F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned char v8[40] = a7;
  v8[41] = v7;
  v8[38] = a5;
  v8[39] = a6;
  v8[36] = a3;
  v8[37] = a4;
  v8[34] = a1;
  v8[35] = a2;
  v8[42] = swift_getAssociatedTypeWitness();
  v8[43] = type metadata accessor for IntentOutcome();
  uint64_t v9 = sub_19F1DCAAC();
  v8[44] = v9;
  v8[45] = *(void *)(v9 - 8);
  v8[46] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[47] = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for IntentOutcome();
  v8[48] = v11;
  v8[49] = *(void *)(v11 - 8);
  v8[50] = swift_task_alloc();
  v8[51] = swift_task_alloc();
  uint64_t v12 = sub_19F1DCAAC();
  v8[52] = v12;
  v8[53] = *(void *)(v12 - 8);
  v8[54] = swift_task_alloc();
  v8[55] = *(void *)(AssociatedTypeWitness - 8);
  v8[56] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F1861A8, 0, 0);
}

uint64_t sub_19F1861A8()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 336);
  (*(void (**)(void))(*(void *)(v0 + 320) + 40))(*(void *)(v0 + 304));
  *(void *)(v0 + 264) = v2;
  swift_getExtendedExistentialTypeMetadata();
  int v3 = swift_dynamicCast();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  if (v3)
  {
    uint64_t v6 = *(void *)(v0 + 440);
    uint64_t v5 = *(void *)(v0 + 448);
    uint64_t v7 = *(void *)(v0 + 432);
    uint64_t v8 = *(void *)(v0 + 376);
    uint64_t v46 = *(void *)(v0 + 312);
    v4(v7, 0, 1, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v5, v7, v8);
    uint64_t v45 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 + 32)
                                                                              + **(int **)(v46 + 32));
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 456) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_19F186778;
    uint64_t v10 = *(void *)(v0 + 448);
    uint64_t v11 = *(void *)(v0 + 408);
    uint64_t v12 = *(void *)(v0 + 312);
    uint64_t v13 = *(void *)(v0 + 288);
    uint64_t v14 = *(void *)(v0 + 296);
    return v45(v11, v10, v13, v14, v12);
  }
  else
  {
    uint64_t v16 = (long long *)(v0 + 56);
    uint64_t v18 = *(void *)(v0 + 424);
    uint64_t v17 = *(void *)(v0 + 432);
    uint64_t v19 = *(void *)(v0 + 416);
    v4(v17, 1, 1, *(void *)(v0 + 376));
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    if (qword_1E946F668 != -1) {
      swift_once();
    }
    uint64_t v20 = (void *)qword_1E946F658;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_19F24EAD0;
    id v47 = v20;
    uint64_t v48 = sub_19EEC3F3C(0, 50, 0, MEMORY[0x1E4FBC860]);
    v22._countAndFlagsBits = 0x7420746E65746E49;
    v22._object = (void *)0xED00006020657079;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t DynamicType = swift_getDynamicType();
    *(void *)(v0 + 160) = swift_getMetatypeMetadata();
    *(void *)(v0 + 136) = DynamicType;
    sub_19EEC3ED8(v0 + 136, v0 + 168, &qword_1EB393260);
    *uint64_t v16 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_19EE6EEAC(v0 + 168, v0 + 56, &qword_1EB393260);
    *(unsigned char *)(v0 + 88) = 0;
    long long v24 = *(_OWORD *)(v0 + 72);
    long long v49 = *v16;
    long long v50 = v24;
    char v51 = *(unsigned char *)(v0 + 88);
    uint64_t v25 = v48;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v25 = sub_19EEC3F3C(0, v48[2] + 1, 1, v48);
    }
    uint64_t v26 = (long long *)(v0 + 96);
    unint64_t v28 = v25[2];
    unint64_t v27 = v25[3];
    if (v28 >= v27 >> 1) {
      uint64_t v25 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v25);
    }
    uint64_t v29 = *(void *)(v0 + 376);
    JSValueRef v25[2] = v28 + 1;
    BOOL v30 = &v25[5 * v28];
    long long v31 = v49;
    long long v32 = v50;
    *((unsigned char *)v30 + 64) = v51;
    *((_OWORD *)v30 + 2) = v31;
    *((_OWORD *)v30 + 3) = v32;
    uint64_t v48 = v25;
    sub_19EEBD664(v0 + 136, &qword_1EB393260);
    v33._object = (void *)0x800000019F274DD0;
    v33._countAndFlagsBits = 0xD000000000000022;
    LogMessage.StringInterpolation.appendLiteral(_:)(v33);
    *(void *)(v0 + 224) = swift_getMetatypeMetadata();
    *(void *)(v0 + 200) = v29;
    sub_19EEC3ED8(v0 + 200, v0 + 232, &qword_1EB393260);
    *uint64_t v26 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_19EE6EEAC(v0 + 232, v0 + 96, &qword_1EB393260);
    *(unsigned char *)(v0 + 128) = 0;
    long long v34 = *(_OWORD *)(v0 + 112);
    long long v49 = *v26;
    long long v50 = v34;
    char v51 = *(unsigned char *)(v0 + 128);
    long long v35 = v48;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v35 = sub_19EEC3F3C(0, v48[2] + 1, 1, v48);
    }
    unint64_t v37 = v35[2];
    unint64_t v36 = v35[3];
    if (v37 >= v36 >> 1) {
      long long v35 = sub_19EEC3F3C((void *)(v36 > 1), v37 + 1, 1, v35);
    }
    uint64_t v38 = *(void *)(v0 + 336);
    uint64_t v39 = *(void *)(v0 + 272);
    _OWORD v35[2] = v37 + 1;
    long long v40 = &v35[5 * v37];
    long long v41 = v49;
    long long v42 = v50;
    *((unsigned char *)v40 + 64) = v51;
    *((_OWORD *)v40 + 2) = v41;
    *((_OWORD *)v40 + 3) = v42;
    uint64_t v48 = v35;
    sub_19EEBD664(v0 + 200, &qword_1EB393260);
    v43._countAndFlagsBits = 96;
    v43._object = (void *)0xE100000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v43);
    *(void *)(v21 + 32) = v35;
    *(void *)&long long v49 = v47;
    LOBYTE(v48) = 0;
    OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v21, (JetEngine::LogMessageLevel)&v48);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v39, 1, 1, v38);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
    return v44();
  }
}

uint64_t sub_19F186778()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_19F186BAC;
  }
  else {
    uint64_t v2 = sub_19F18688C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_19F18688C()
{
  (*(void (**)(void, void, void))(v0[49] + 16))(v0[50], v0[51], v0[48]);
  if (swift_dynamicCast())
  {
    uint64_t v1 = v0[55];
    uint64_t v15 = v0[56];
    uint64_t v2 = v0[51];
    uint64_t v3 = v0[48];
    uint64_t v4 = v0[49];
    uint64_t v6 = v0[46];
    uint64_t v5 = v0[47];
    uint64_t v7 = v0[43];
    uint64_t v8 = v0[34];
    uint64_t v9 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v7);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v15, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v6, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v13 = v0[45];
    uint64_t v12 = v0[46];
    uint64_t v14 = v0[44];
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)(v0[43] - 8) + 56))(v12, 1, 1, v0[43]);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    return sub_19F1DCFCC();
  }
}

uint64_t sub_19F186BAC()
{
  (*(void (**)(void, void))(v0[55] + 8))(v0[56], v0[47]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_19F186C64(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_19EEB8A6C;
  return MEMORY[0x1F4188298](sub_19F184B34, 0, 0);
}

uint64_t sub_19F186D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_19EE17780;
  return NativeIntentDispatcher.dispatch<A>(_:objectGraph:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19F186DD8()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  }
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t destroy for NativeIntentDispatcher(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  }
  return result;
}

uint64_t initializeWithCopy for NativeIntentDispatcher(uint64_t a1, void *a2)
{
  *(void *)a1 = *a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  uint64_t v5 = a2 + 1;
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, void *, uint64_t))(v6 - 8))(a1 + 8, v5, v6);
  }
  else
  {
    long long v8 = *((_OWORD *)v5 + 1);
    *uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 24) = v8;
    *(void *)(a1 + 40) = v5[4];
  }
  return a1;
}

uint64_t assignWithCopy for NativeIntentDispatcher(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 8);
    long long v6 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t assignWithTake for NativeIntentDispatcher(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  }
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for NativeIntentDispatcher()
{
  return &type metadata for NativeIntentDispatcher;
}

uint64_t sub_19F187058(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 16);
  long long v6 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_19EEB8A6C;
  *(_OWORD *)(v5 + 48) = v7;
  *(void *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  return MEMORY[0x1F4188298](sub_19F185D4C, 0, 0);
}

uint64_t sub_19F187120()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F187208()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F187328()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F187440()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1874CC()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1875BC()
{
  return sub_19F1DD78C();
}

void __swiftcall ImpressionMetrics.ID.init(element:)(JetEngine::ImpressionMetrics::ID *__return_ptr retstr, Swift::String element)
{
  ImpressionMetrics.ID.init(parent:element:index:uniqueID:)(&v7, (Swift::String_optional)0, element, -1, (Swift::String_optional)0);
  uint64_t countAndFlagsBits = v7.element._countAndFlagsBits;
  object = v7.element._object;
  uint64_t v5 = v7.uniqueID.value._object;
  long long v6 = *(_OWORD *)&v7.index;
  retstr->parent = v7.parent;
  retstr->element._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->element._object = object;
  *(_OWORD *)&retstr->index = v6;
  retstr->uniqueID.value._object = v5;
}

uint64_t ImpressionMetrics.ID.parent.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImpressionMetrics.ID.parent.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ImpressionMetrics.ID.parent.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.ID.element.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ImpressionMetrics.ID.element.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.ID.index.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*ImpressionMetrics.ID.index.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.ID.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 48);
  sub_19F1DD72C();
  sub_19F1DD74C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  sub_19F1DD74C();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  return sub_19F1DD78C();
}

uint64_t sub_19F18793C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ImpressionMetrics.ID.init(deserializing:using:)(a1, a2);
}

uint64_t (*ImpressionMetrics.id.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionMetrics.fields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ImpressionMetrics.fields.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.custom.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionMetrics.custom.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  return result;
}

uint64_t (*ImpressionMetrics.custom.modify())()
{
  return nullsub_1;
}

uint64_t ImpressionMetrics.clickLocationFields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionMetrics.clickLocationFields.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*ImpressionMetrics.clickLocationFields.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F187A84(unsigned __int8 *a1, char *a2)
{
  return sub_19F03AB90(*a1, *a2);
}

uint64_t sub_19F187A90()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F187B68()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F187C28()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F187CFC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F189DA0();
  *a1 = result;
  return result;
}

void sub_19F187D2C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x6449746E65726170;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 25705;
      goto LABEL_3;
    case 2:
      *a1 = 0x6973736572706D69;
      a1[1] = 0xEF7865646E496E6FLL;
      break;
    case 3:
      *a1 = 0x4449657571696E75;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_19F187DC4()
{
  uint64_t result = 0x6449746E65726170;
  switch(*v0)
  {
    case 1:
      uint64_t result = 25705;
      break;
    case 2:
      uint64_t result = 0x6973736572706D69;
      break;
    case 3:
      uint64_t result = 0x4449657571696E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F187E50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F189DA0();
  *a1 = result;
  return result;
}

uint64_t sub_19F187E78(uint64_t a1)
{
  unint64_t v2 = sub_19F1895B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F187EB4(uint64_t a1)
{
  unint64_t v2 = sub_19F1895B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ImpressionMetrics.ID.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476258);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1895B0();
  sub_19F1DD8AC();
  if (!v2)
  {
    LOBYTE(v29.parent.value._countAndFlagsBits) = 0;
    if (sub_19F1DD1DC())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
      char v30 = 0;
      sub_19F11FF74();
      sub_19F1DD1BC();
      object = v29.parent.value._object;
      uint64_t countAndFlagsBits = v29.parent.value._countAndFlagsBits;
    }
    else
    {
      uint64_t countAndFlagsBits = 0;
      object = 0;
    }
    LOBYTE(v29.parent.value._countAndFlagsBits) = 1;
    uint64_t v10 = sub_19F1DD18C();
    uint64_t v12 = v11;
    uint64_t v27 = v10;
    LOBYTE(v29.parent.value._countAndFlagsBits) = 2;
    uint64_t v13 = sub_19F1DD16C();
    if (v14) {
      Swift::Int v16 = -1;
    }
    else {
      Swift::Int v16 = v13;
    }
    Swift::Int v26 = v16;
    LOBYTE(v29.parent.value._countAndFlagsBits) = 3;
    if (sub_19F1DD1DC())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
      char v30 = 3;
      sub_19F11FF74();
      sub_19F1DD1BC();
      uint64_t v17 = v29.parent.value._countAndFlagsBits;
      uint64_t v18 = v29.parent.value._object;
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v18 = 0;
    }
    v20._uint64_t countAndFlagsBits = v27;
    v19.value._uint64_t countAndFlagsBits = countAndFlagsBits;
    v19.value._object = object;
    v20._object = v12;
    ImpressionMetrics.ID.init(parent:element:index:uniqueID:)(&v29, v19, v20, v26, *(Swift::String_optional *)&v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = v29.element._countAndFlagsBits;
    Swift::String v22 = v29.element._object;
    uint64_t v23 = v29.uniqueID.value._object;
    long long v24 = *(_OWORD *)&v29.index;
    *(Swift::String_optional *)a2 = v29.parent;
    *(void *)(a2 + 16) = v21;
    *(void *)(a2 + 24) = v22;
    *(_OWORD *)(a2 + 32) = v24;
    *(void *)(a2 + 48) = v23;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t ImpressionMetrics.ID.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476268);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v18 = v9;
  uint64_t v10 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v10;
  uint64_t v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1895B0();
  sub_19F1DD8FC();
  uint64_t v20 = v8;
  uint64_t v21 = v7;
  char v22 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392310);
  sub_19EE78558((unint64_t *)&qword_1E94722F8, &qword_1EB392310);
  uint64_t v11 = v19;
  sub_19F1DD2AC();
  if (!v11)
  {
    uint64_t v12 = v15;
    LOBYTE(v20) = 1;
    sub_19F1DD26C();
    LOBYTE(v20) = 2;
    sub_19F1DD29C();
    uint64_t v20 = v12;
    uint64_t v21 = v14;
    char v22 = 3;
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_19F188404@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImpressionMetrics.ID.init(from:)(a1, a2);
}

uint64_t sub_19F18841C(void *a1)
{
  return ImpressionMetrics.ID.encode(to:)(a1);
}

uint64_t sub_19F188434(char *a1, char *a2)
{
  return sub_19F03AD18(*a1, *a2);
}

uint64_t sub_19F188440()
{
  return sub_19F1874CC();
}

uint64_t sub_19F188448()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F188520()
{
  return sub_19EFB6460();
}

uint64_t sub_19F188528@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F189D54();
  *a1 = result;
  return result;
}

void sub_19F188558(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 25705;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x73646C656966;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6D6F74737563;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 3:
      strcpy((char *)a1, "commonFields");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 4:
      *(void *)a1 = 0xD000000000000013;
      *(void *)(a1 + 8) = 0x800000019F268200;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_19F18860C()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x73646C656966;
      break;
    case 2:
      unint64_t result = 0x6D6F74737563;
      break;
    case 3:
      unint64_t result = 0x69466E6F6D6D6F63;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F1886B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F189D54();
  *a1 = result;
  return result;
}

uint64_t sub_19F1886D8(uint64_t a1)
{
  unint64_t v2 = sub_19EFDE308();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F188714(uint64_t a1)
{
  unint64_t v2 = sub_19EFDE308();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ImpressionMetrics.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476270);
  uint64_t v6 = *(char **)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EFDE308();
  sub_19F1DD8AC();
  if (!v2)
  {
    LOBYTE(v49[0]) = 0;
    sub_19F189604();
    sub_19F1DD1BC();
    uint64_t v46 = a2;
    id v47 = v6;
    uint64_t v9 = v52[1];
    uint64_t v10 = v52[3];
    uint64_t v44 = v52[2];
    uint64_t v45 = v52[0];
    uint64_t v43 = v52[4];
    uint64_t v11 = v52[6];
    uint64_t v42 = v52[5];
    LOBYTE(v49[0]) = 1;
    unint64_t v12 = sub_19EFAA6E8();
    sub_19F1DD1BC();
    uint64_t v38 = v12;
    uint64_t v40 = v10;
    uint64_t v41 = v9;
    JSONObject.dictionary.getter((uint64_t)v49);
    uint64_t v14 = v50;
    if (v50)
    {
      uint64_t v39 = v11;
      uint64_t v15 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      uint64_t v16 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v15 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v14, v15);
      sub_19EEC05FC((uint64_t)v49);
      uint64_t v17 = (void (**)(char *, uint64_t))v47;
      if (v16)
      {
        LOBYTE(v49[0]) = 2;
        if (sub_19F1DD1DC())
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471950);
          v48[0] = 2;
          sub_19EE78558(&qword_1E9471958, &qword_1E9471950);
          sub_19F1DD1BC();
          uint64_t v18 = v49[0];
        }
        else
        {
          uint64_t v18 = MEMORY[0x1E4FBC868];
        }
        uint64_t v37 = v18;
        unint64_t v23 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
        LOBYTE(v49[0]) = 3;
        if ((sub_19F1DD1DC() & 1) == 0) {
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
        char v53 = 3;
        sub_19F1DD1BC();
        JSONObject.dictionary.getter((uint64_t)v49);
        sub_19EEC3418((uint64_t)v48);
        uint64_t v24 = v50;
        if (v50)
        {
          uint64_t v25 = v51;
          __swift_project_boxed_opaque_existential_1(v49, v50);
          unint64_t v23 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v25 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v24, v25);
          sub_19EEC05FC((uint64_t)v49);
          if (v23)
          {
LABEL_15:
            unint64_t v36 = v23;
            goto LABEL_16;
          }
        }
        else
        {
          sub_19EEBD664((uint64_t)v49, &qword_1E946F740);
        }
        unint64_t v36 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
LABEL_16:
        unint64_t v26 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
        LOBYTE(v49[0]) = 4;
        if ((sub_19F1DD1DC() & 1) == 0)
        {
LABEL_25:
          uint64_t v29 = v36;
          swift_bridgeObjectRetain();
          uint64_t v30 = sub_19EEBF80C(v16, v29);
          uint64_t v31 = sub_19EEBF80C(v26, v29);
          sub_19EEC3418((uint64_t)v52);
          v17[1](v8, v5);
          long long v32 = v46;
          uint64_t v33 = v41;
          *uint64_t v46 = v45;
          v32[1] = v33;
          uint64_t v34 = v40;
          v32[2] = v44;
          v32[3] = v34;
          uint64_t v35 = v42;
          void v32[4] = v43;
          v32[5] = v35;
          v32[6] = v39;
          v32[7] = v30;
          v32[8] = v37;
          v32[9] = v31;
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
        }
        swift_bridgeObjectRelease();
        char v53 = 4;
        sub_19F1DD1BC();
        uint64_t v38 = v16;
        JSONObject.dictionary.getter((uint64_t)v49);
        sub_19EEC3418((uint64_t)v48);
        uint64_t v27 = v50;
        if (v50)
        {
          uint64_t v28 = v51;
          __swift_project_boxed_opaque_existential_1(v49, v50);
          unint64_t v26 = (*(uint64_t (**)(void, uint64_t, void, uint64_t, uint64_t))(v28 + 32))(MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB1B0], v27, v28);
          sub_19EEC05FC((uint64_t)v49);
          if (v26)
          {
LABEL_24:
            uint64_t v16 = v38;
            goto LABEL_25;
          }
        }
        else
        {
          sub_19EEBD664((uint64_t)v49, &qword_1E946F740);
        }
        unint64_t v26 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19EEBD664((uint64_t)v49, &qword_1E946F740);
      uint64_t v17 = (void (**)(char *, uint64_t))v47;
    }
    uint64_t v46 = (void *)v5;
    uint64_t v19 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v21 = v20;
    id v47 = (char *)v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1E946DB50) + 48);
    *uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    char v22 = (void *)sub_19F1DD86C();
    sub_19EFDD7F8(1, v22);
    swift_bridgeObjectRelease();
    v49[0] = 0;
    v49[1] = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA70], v19);
    swift_willThrow();
    sub_19EEC3418((uint64_t)v52);
    v17[1](v8, (uint64_t)v46);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t ImpressionMetrics.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476280);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v1;
  long long v20 = v1[1];
  long long v21 = v8;
  long long v19 = v1[2];
  uint64_t v10 = *((void *)v1 + 6);
  uint64_t v9 = *((void *)v1 + 7);
  uint64_t v17 = *((void *)v1 + 8);
  uint64_t v18 = v9;
  uint64_t v16 = *((void *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19EFDE308();
  sub_19F1DD8FC();
  long long v22 = v21;
  long long v23 = v20;
  long long v24 = v19;
  uint64_t v25 = v10;
  char v26 = 0;
  sub_19F189658();
  sub_19F1DD2AC();
  if (!v2)
  {
    *((void *)&v23 + 1) = &type metadata for FoundationValue;
    *(void *)&long long v24 = &off_1EF13D8F8;
    uint64_t v12 = swift_allocObject();
    *(void *)&long long v22 = v12;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    *(void *)(v12 + 40) = v13;
    *(void *)(v12 + 16) = v18;
    char v26 = 1;
    sub_19EFAA85C();
    swift_bridgeObjectRetain();
    sub_19F1DD2AC();
    sub_19EEC3418((uint64_t)&v22);
    *(void *)&long long v22 = v17;
    char v26 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471950);
    sub_19EE78558(&qword_1E94719A8, &qword_1E9471950);
    sub_19F1DD2AC();
    *((void *)&v23 + 1) = &type metadata for FoundationValue;
    *(void *)&long long v24 = &off_1EF13D8F8;
    uint64_t v14 = swift_allocObject();
    *(void *)&long long v22 = v14;
    *(void *)(v14 + 40) = v13;
    *(void *)(v14 + 16) = v16;
    char v26 = 4;
    swift_bridgeObjectRetain();
    sub_19F1DD2AC();
    sub_19EEC3418((uint64_t)&v22);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19F1892D8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ImpressionMetrics.init(from:)(a1, a2);
}

uint64_t sub_19F1892F0(void *a1)
{
  return ImpressionMetrics.encode(to:)(a1);
}

__n128 ImpressionMetrics.init(id:fields:custom:)@<Q0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  long long v15 = a1[1];
  long long v16 = *a1;
  __n128 v14 = (__n128)a1[2];
  uint64_t v6 = *((void *)a1 + 6);
  uint64_t v7 = *a3;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  unint64_t v9 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  unint64_t v10 = sub_19EEBF898(v8);
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_19EEBF80C(a2, v9);
  uint64_t v12 = sub_19EEBF80C(v10, v9);
  *(_OWORD *)a4 = v16;
  *(_OWORD *)(a4 + 16) = v15;
  __n128 result = v14;
  *(__n128 *)(a4 + 32) = v14;
  *(void *)(a4 + 48) = v6;
  *(void *)(a4 + 56) = v11;
  *(void *)(a4 + 64) = v7;
  *(void *)(a4 + 72) = v12;
  return result;
}

uint64_t _s9JetEngine17ImpressionMetricsV2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *((void *)a1 + 6);
  uint64_t v5 = *((void *)a1 + 7);
  uint64_t v7 = *((void *)a1 + 8);
  uint64_t v6 = *((void *)a1 + 9);
  uint64_t v8 = *((void *)a2 + 2);
  uint64_t v9 = *((void *)a2 + 3);
  uint64_t v10 = *((void *)a2 + 6);
  uint64_t v11 = *((void *)a2 + 8);
  long long v26 = *a1;
  uint64_t v27 = v2;
  uint64_t v28 = v3;
  long long v29 = a1[2];
  uint64_t v30 = v4;
  long long v21 = *a2;
  uint64_t v22 = v8;
  uint64_t v23 = v9;
  long long v24 = a2[2];
  uint64_t v25 = v10;
  if ((_s9JetEngine17ImpressionMetricsV2IDV2eeoiySbAE_AEtFZ_0((uint64_t *)&v26, (uint64_t *)&v21) & 1) == 0) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = swift_bridgeObjectRetain();
  char v13 = sub_19EFA9A90(v12, v5);
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_7;
  }
  MEMORY[0x1F4188790](v14);
  if ((sub_19EFAA2BC(v5, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_19EFAA4A8) & 1) == 0) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v15 = sub_19EF6950C(v7, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = swift_bridgeObjectRetain();
  char v17 = sub_19EFA9A90(v16, v6);
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_bridgeObjectRelease();
  if (v17)
  {
    MEMORY[0x1F4188790](v18);
    char v19 = sub_19EFAA2BC(v6, (uint64_t (*)(uint64_t, uint64_t, unsigned char *))sub_19EFAB390);
  }
  else
  {
LABEL_7:
    char v19 = 0;
  }
  return v19 & 1;
}

unint64_t sub_19F1895B0()
{
  unint64_t result = qword_1E9476260;
  if (!qword_1E9476260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476260);
  }
  return result;
}

unint64_t sub_19F189604()
{
  unint64_t result = qword_1E9476278;
  if (!qword_1E9476278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476278);
  }
  return result;
}

unint64_t sub_19F189658()
{
  unint64_t result = qword_1E9476288;
  if (!qword_1E9476288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476288);
  }
  return result;
}

uint64_t sub_19F1896AC()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void *assignWithCopy for ImpressionMetrics(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImpressionMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithCopy for ImpressionMetrics.ID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImpressionMetrics.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for ImpressionMetrics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F189A08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionMetrics.CodingKeys()
{
  return &type metadata for ImpressionMetrics.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ImpressionMetrics.ID.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F189B0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionMetrics.ID.CodingKeys()
{
  return &type metadata for ImpressionMetrics.ID.CodingKeys;
}

unint64_t sub_19F189B48()
{
  unint64_t result = qword_1E9476290;
  if (!qword_1E9476290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476290);
  }
  return result;
}

unint64_t sub_19F189BA0()
{
  unint64_t result = qword_1E9476298;
  if (!qword_1E9476298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476298);
  }
  return result;
}

unint64_t sub_19F189BF8()
{
  unint64_t result = qword_1E94762A0;
  if (!qword_1E94762A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762A0);
  }
  return result;
}

unint64_t sub_19F189C50()
{
  unint64_t result = qword_1E94762A8;
  if (!qword_1E94762A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762A8);
  }
  return result;
}

unint64_t sub_19F189CA8()
{
  unint64_t result = qword_1E94762B0;
  if (!qword_1E94762B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762B0);
  }
  return result;
}

unint64_t sub_19F189D00()
{
  unint64_t result = qword_1E94762B8;
  if (!qword_1E94762B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762B8);
  }
  return result;
}

uint64_t sub_19F189D54()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

uint64_t sub_19F189DA0()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t *sub_19F189DEC(uint64_t *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v39 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v39 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_19F1DB57C();
    char v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = a3[8];
    uint64_t v16 = (uint64_t *)((char *)v4 + v14);
    char v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    char v19 = (uint64_t *)((char *)v4 + v15);
    long long v20 = (uint64_t *)((char *)a2 + v15);
    uint64_t v41 = v20[1];
    *char v19 = *v20;
    v19[1] = v41;
    uint64_t v21 = a3[9];
    uint64_t v22 = a3[10];
    uint64_t v23 = (uint64_t *)((char *)v4 + v21);
    long long v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    long long v26 = (uint64_t *)((char *)v4 + v22);
    uint64_t v27 = (uint64_t *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *long long v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = a3[12];
    *(uint64_t *)((char *)v4 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v29) = *(uint64_t *)((char *)a2 + v29);
    uint64_t v30 = a3[13];
    uint64_t v31 = a3[14];
    long long v32 = (uint64_t *)((char *)v4 + v30);
    uint64_t v33 = (uint64_t *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    *long long v32 = *v33;
    v32[1] = v34;
    v32[2] = v33[2];
    uint64_t v35 = (uint64_t *)((char *)v4 + v31);
    unint64_t v36 = (uint64_t *)((char *)a2 + v31);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = v36[3];
    _OWORD v35[2] = v36[2];
    v35[3] = v38;
    *(uint64_t *)((char *)v4 + a3[15]) = *(uint64_t *)((char *)a2 + a3[15]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_19F189FEC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_19F18A0FC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_19F1DB57C();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)((char *)a1 + v13);
  uint64_t v16 = (void *)((char *)a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (void *)((char *)a1 + v14);
  char v19 = (void *)((char *)a2 + v14);
  uint64_t v39 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v39;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = (void *)((char *)a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)((char *)a1 + v21);
  long long v26 = (void *)((char *)a2 + v21);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  uint64_t v29 = a3[13];
  uint64_t v30 = a3[14];
  uint64_t v31 = (void *)((char *)a1 + v29);
  long long v32 = (void *)((char *)a2 + v29);
  uint64_t v33 = v32[1];
  *uint64_t v31 = *v32;
  v31[1] = v33;
  _OWORD v31[2] = v32[2];
  uint64_t v34 = (void *)((char *)a1 + v30);
  uint64_t v35 = (void *)((char *)a2 + v30);
  uint64_t v36 = v35[1];
  void *v34 = *v35;
  v34[1] = v36;
  uint64_t v37 = v35[3];
  _OWORD v34[2] = v35[2];
  v34[3] = v37;
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_19F18A2AC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB57C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (char *)a2 + v22;
  *uint64_t v23 = *(void *)((char *)a2 + v22);
  v23[1] = *(void *)((char *)a2 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v23[2] = *((void *)v24 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[14];
  long long v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (char *)a2 + v25;
  *long long v26 = *(void *)((char *)a2 + v25);
  v26[1] = *(void *)((char *)a2 + v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26[2] = *((void *)v27 + 2);
  void v26[3] = *((void *)v27 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  return a1;
}

_OWORD *sub_19F18A4F4(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_19F1DB57C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[13];
  uint64_t v15 = a3[14];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  long long v18 = *(_OWORD *)v17;
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *(_OWORD *)uint64_t v16 = v18;
  uint64_t v19 = (_OWORD *)((char *)a1 + v15);
  uint64_t v20 = (_OWORD *)((char *)a2 + v15);
  long long v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  return a1;
}

void *sub_19F18A5F4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_19F1DB57C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  long long v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *long long v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[13];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = *(void *)((char *)a2 + v32 + 8);
  void *v33 = *(void *)((char *)a2 + v32);
  v33[1] = v35;
  swift_bridgeObjectRelease();
  _OWORD v33[2] = *((void *)v34 + 2);
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[14];
  uint64_t v37 = (void *)((char *)a1 + v36);
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)((char *)a2 + v36 + 8);
  void *v37 = *(void *)((char *)a2 + v36);
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = *((void *)v38 + 3);
  v37[2] = *((void *)v38 + 2);
  v37[3] = v40;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  return a1;
}

uint64_t sub_19F18A794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F18A7A8);
}

uint64_t sub_19F18A7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_19F1DB57C();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_19F18A858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F18A86C);
}

uint64_t sub_19F18A86C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_19F1DB57C();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_19F18A914(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_19F18A994(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a2;
  uint64_t v11 = a5;
  type metadata accessor for SentryArray.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_19F1DD2BC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8FC();
  uint64_t v14 = v12;
  sub_19F1DC27C();
  uint64_t v13 = v11;
  swift_getWitnessTable();
  sub_19F1DD2AC();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void *sub_19F18AB48(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a3;
  type metadata accessor for SentryArray.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_19F1DD1EC();
  uint64_t v12 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8AC();
  if (!v3)
  {
    uint64_t v9 = v12;
    sub_19F1DC27C();
    uint64_t v14 = v13;
    swift_getWitnessTable();
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v5);
    uint64_t v8 = v15;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return v8;
}

uint64_t sub_19F18AD38()
{
  return 0x7365756C6176;
}

uint64_t sub_19F18AD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F18A914(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_19F18AD84@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19EF4F19C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_19F18ADBC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_19F18AE10(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

void *sub_19F18AE64@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_19F18AB48(a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_19F18AE9C(void *a1, uint64_t *a2)
{
  return sub_19F18A994(a1, *v2, a2[2], a2[3], a2[4]);
}

uint64_t sub_19F18AEC4()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F18AF24()
{
  return sub_19F1DC0EC();
}

uint64_t sub_19F18AF74(char a1)
{
  uint64_t result = 0x64695F746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7463656A6F7270;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6D726F6674616C70;
      break;
    case 4:
      uint64_t result = 0x657361656C6572;
      break;
    case 5:
      uint64_t result = 1953720676;
      break;
    case 6:
      uint64_t result = 0x6D6E6F7269766E65;
      break;
    case 7:
      uint64_t result = 1936154996;
      break;
    case 8:
      uint64_t result = 0x6F69747065637865;
      break;
    case 9:
      uint64_t result = 0x74736575716572;
      break;
    case 10:
      uint64_t result = 7038067;
      break;
    case 11:
      uint64_t result = 118;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F18B0D4(char a1)
{
  uint64_t result = 0x64695F746E657665;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7463656A6F7270;
      break;
    case 2:
      uint64_t result = 0x6D617473656D6974;
      break;
    case 3:
      uint64_t result = 0x6D726F6674616C70;
      break;
    case 4:
      uint64_t result = 0x657361656C6572;
      break;
    case 5:
      uint64_t result = 1953720676;
      break;
    case 6:
      uint64_t result = 0x6D6E6F7269766E65;
      break;
    case 7:
      uint64_t result = 1936154996;
      break;
    case 8:
      uint64_t result = 0x6F69747065637865;
      break;
    case 9:
      uint64_t result = 0x74736575716572;
      break;
    case 10:
      uint64_t result = 7038067;
      break;
    case 11:
      uint64_t result = 118;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F18B234(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_19F18AF74(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_19F18AF74(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_19F1DD44C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_19F18B2C0()
{
  char v1 = *v0;
  sub_19F1DD72C();
  sub_19F18AF74(v1);
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  return sub_19F1DD78C();
}

uint64_t sub_19F18B324()
{
  sub_19F18AF74(*v0);
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F18B378()
{
  char v1 = *v0;
  sub_19F1DD72C();
  sub_19F18AF74(v1);
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  return sub_19F1DD78C();
}

uint64_t sub_19F18B3D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F18C880();
  *a1 = result;
  return result;
}

uint64_t sub_19F18B408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_19F18AF74(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_19F18B434()
{
  return sub_19F18B0D4(*v0);
}

uint64_t sub_19F18B43C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F18C880();
  *a1 = result;
  return result;
}

void sub_19F18B464(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_19F18B470(uint64_t a1)
{
  unint64_t v2 = sub_19F18C1AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F18B4AC(uint64_t a1)
{
  unint64_t v2 = sub_19F18C1AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F18B4E8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F18C1AC();
  sub_19F1DD8FC();
  v20[0] = 0;
  sub_19F1DD26C();
  if (!v2)
  {
    v20[0] = 1;
    sub_19F1DD26C();
    uint64_t v9 = (int *)type metadata accessor for SentryEvent();
    v20[0] = 2;
    sub_19F1DB57C();
    sub_19EE4C51C(&qword_1EB390B10);
    sub_19F1DD2AC();
    uint64_t v10 = (uint64_t *)(v3 + v9[7]);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    *(void *)uint64_t v20 = v12;
    *(void *)&v20[8] = v11;
    char v22 = 3;
    sub_19F18C200();
    sub_19F1DD2AC();
    v20[0] = 4;
    sub_19F1DD21C();
    v20[0] = 5;
    sub_19F1DD21C();
    v20[0] = 6;
    sub_19F1DD21C();
    *(void *)uint64_t v20 = *(void *)(v3 + v9[11]);
    char v22 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
    sub_19F18C350((unint64_t *)&qword_1E946CA98);
    sub_19F1DD25C();
    *(void *)uint64_t v20 = *(void *)(v3 + v9[12]);
    char v22 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C988);
    sub_19F18C3B4(&qword_1E946C980);
    sub_19F1DD25C();
    uint64_t v13 = v3 + v9[13];
    *(void *)uint64_t v20 = *(void *)v13;
    *(_OWORD *)&v20[8] = *(_OWORD *)(v13 + 8);
    char v22 = 9;
    sub_19F18C254();
    sub_19F1DD2AC();
    uint64_t v14 = (long long *)(v3 + v9[14]);
    long long v15 = *v14;
    uint64_t v17 = *((void *)v14 + 2);
    uint64_t v16 = *((void *)v14 + 3);
    *(_OWORD *)uint64_t v20 = v15;
    *(void *)&v20[16] = v17;
    uint64_t v21 = v16;
    char v22 = 10;
    sub_19F18C2A8();
    sub_19F1DD2AC();
    v20[0] = 11;
    sub_19F1DD29C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_19F18B93C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_19F1DB57C();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94762C0);
  uint64_t v8 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SentryEvent();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (uint64_t *)((char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v49 = v14;
  *(uint64_t *)((char *)v13 + v14[15]) = 1;
  uint64_t v15 = a1[3];
  id v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_19F18C1AC();
  sub_19F1DD8AC();
  if (v2)
  {
    uint64_t v48 = v2;
    uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    int v17 = 0;
    int v18 = 0;
    int v52 = 0;
  }
  else
  {
    uint64_t v43 = a2;
    v50[0] = 0;
    *uint64_t v13 = sub_19F1DD18C();
    v13[1] = v19;
    v50[0] = 1;
    uint64_t v20 = sub_19F1DD18C();
    uint64_t v21 = v49;
    long long v13[2] = v20;
    v13[3] = v22;
    v50[0] = 2;
    sub_19EE4C51C(&qword_1EB390C70);
    uint64_t v23 = v46;
    sub_19F1DD1BC();
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))((char *)v13 + v21[6], v7, v23);
    char v53 = 3;
    sub_19F18C2FC();
    sub_19F1DD1BC();
    uint64_t v24 = *(void *)&v50[8];
    uint64_t v25 = (uint64_t *)((char *)v13 + v21[7]);
    *uint64_t v25 = *(void *)v50;
    v25[1] = v24;
    v50[0] = 4;
    uint64_t v26 = sub_19F1DD13C();
    uint64_t v27 = (uint64_t *)((char *)v13 + v21[8]);
    *uint64_t v27 = v26;
    v27[1] = v28;
    v50[0] = 5;
    uint64_t v29 = sub_19F1DD13C();
    uint64_t v30 = (uint64_t *)((char *)v13 + v21[9]);
    *uint64_t v30 = v29;
    v30[1] = v31;
    v50[0] = 6;
    uint64_t v32 = sub_19F1DD13C();
    uint64_t v33 = (uint64_t *)((char *)v13 + v21[10]);
    uint64_t *v33 = v32;
    v33[1] = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
    char v53 = 7;
    sub_19F18C350(&qword_1E94762D0);
    sub_19F1DD17C();
    int v52 = 1;
    *(uint64_t *)((char *)v13 + v21[11]) = *(void *)v50;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C988);
    char v53 = 8;
    sub_19F18C3B4(&qword_1E94762D8);
    sub_19F1DD17C();
    *(uint64_t *)((char *)v13 + v21[12]) = *(void *)v50;
    char v53 = 9;
    sub_19F18C3FC();
    sub_19F1DD1BC();
    uint64_t v48 = 0;
    uint64_t v35 = (char *)v13 + v49[13];
    *(void *)uint64_t v35 = *(void *)v50;
    *(_OWORD *)(v35 + 8) = *(_OWORD *)&v50[8];
    char v53 = 10;
    sub_19F18C450();
    uint64_t v36 = v48;
    sub_19F1DD1BC();
    uint64_t v48 = v36;
    if (!v36)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v44);
      uint64_t v39 = *(void *)&v50[16];
      uint64_t v40 = v51;
      uint64_t v41 = (char *)v13 + v49[14];
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v50;
      *((void *)v41 + 2) = v39;
      *((void *)v41 + 3) = v40;
      sub_19F18C4A4((uint64_t)v13, v43);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
      return sub_19F18C508((uint64_t)v13);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v44);
    int v18 = 1;
    int v17 = 1;
    uint64_t v37 = v46;
    uint64_t v38 = v49;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))((char *)v13 + v38[6], v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v52)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  if (v18)
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return result;
    }
    goto LABEL_10;
  }
  if (!v17) {
    return result;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F18C17C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F18B93C(a1, a2);
}

uint64_t sub_19F18C194(void *a1)
{
  return sub_19F18B4E8(a1);
}

unint64_t sub_19F18C1AC()
{
  unint64_t result = qword_1E946C990;
  if (!qword_1E946C990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C990);
  }
  return result;
}

unint64_t sub_19F18C200()
{
  unint64_t result = qword_1E946C9A8;
  if (!qword_1E946C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9A8);
  }
  return result;
}

unint64_t sub_19F18C254()
{
  unint64_t result = qword_1E946C9E0;
  if (!qword_1E946C9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9E0);
  }
  return result;
}

unint64_t sub_19F18C2A8()
{
  unint64_t result = qword_1E946CA90;
  if (!qword_1E946CA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CA90);
  }
  return result;
}

unint64_t sub_19F18C2FC()
{
  unint64_t result = qword_1E94762C8;
  if (!qword_1E94762C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762C8);
  }
  return result;
}

uint64_t sub_19F18C350(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB391070);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19F18C3B4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946C988);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19F18C3FC()
{
  unint64_t result = qword_1E94762E0;
  if (!qword_1E94762E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762E0);
  }
  return result;
}

unint64_t sub_19F18C450()
{
  unint64_t result = qword_1E94762E8;
  if (!qword_1E94762E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762E8);
  }
  return result;
}

uint64_t sub_19F18C4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SentryEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F18C508(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SentryEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t getEnumTagSinglePayload for SentryEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SentryEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F18C6C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryEvent.CodingKeys()
{
  return &type metadata for SentryEvent.CodingKeys;
}

uint64_t type metadata accessor for SentryArray()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for SentryEvent.Platform()
{
  return &type metadata for SentryEvent.Platform;
}

unint64_t sub_19F18C724()
{
  unint64_t result = qword_1E94762F0;
  if (!qword_1E94762F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762F0);
  }
  return result;
}

unint64_t sub_19F18C77C()
{
  unint64_t result = qword_1E94762F8;
  if (!qword_1E94762F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94762F8);
  }
  return result;
}

unint64_t sub_19F18C7D4()
{
  unint64_t result = qword_1E946C9A0;
  if (!qword_1E946C9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9A0);
  }
  return result;
}

unint64_t sub_19F18C82C()
{
  unint64_t result = qword_1E946C998;
  if (!qword_1E946C998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C998);
  }
  return result;
}

uint64_t sub_19F18C880()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC) {
    return 12;
  }
  else {
    return v0;
  }
}

unint64_t sub_19F18C8CC()
{
  unint64_t result = qword_1E946C9B0;
  if (!qword_1E946C9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9B0);
  }
  return result;
}

uint64_t type metadata accessor for SentryArray.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_19F18C938(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F18C9D4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F18C9FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F18CA18()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F18CA34()
{
  return swift_getWitnessTable();
}

id Account.unsafelyUnwrapped.getter()
{
  return *v0;
}

void Account.subscript.getter(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  id v8 = *v2;
  id v5 = v8;
  unsigned int v6 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*MEMORY[0x1E4FBBE08] + v4 + 8) - 8) + 16))(a2);
  v6(v7, 0);
}

JetEngine::Account __swiftcall Account.init(wrapping:)(JetEngine::Account wrapping)
{
  v1->base.super.Class isa = wrapping.base.super.isa;
  return wrapping;
}

uint64_t Account.cookies(for:)()
{
  uint64_t v1 = *v0;
  int v2 = (void *)sub_19F1DB25C();
  id v3 = objc_msgSend(v1, sel_ams_cookiesForURL_, v2);

  sub_19EEBDC10(0, (unint64_t *)&qword_1E946E570);
  uint64_t v4 = sub_19F1DC16C();

  return v4;
}

uint64_t Account.acAccountCopy.getter()
{
  objc_msgSend(*v0, sel_copy);
  sub_19F1DCBEC();
  swift_unknownObjectRelease();
  sub_19EEBDC10(0, (unint64_t *)&qword_1E946CD00);
  swift_dynamicCast();
  return v2;
}

void Account.subscript.getter()
{
  id v1 = *v0;
  swift_getAtKeyPath();
}

void sub_19F18CC98(id *a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  id v5 = *a1;
  Account.subscript.getter(v4, a3);
}

uint64_t Account.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_19F18D224(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*MEMORY[0x1E4FBBE08] + v3 + 8) - 8) + 8);
  return v4(a1);
}

void (*Account.subscript.modify(void *a1, uint64_t *a2))(void ***a1, char a2)
{
  id v5 = malloc(0x30uLL);
  *a1 = v5;
  *id v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(*MEMORY[0x1E4FBBE08] + *a2 + 8);
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  Account.subscript.getter(a2, (uint64_t)v9);
  return sub_19F18CEBC;
}

void sub_19F18CEBC(void ***a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  uint64_t v4 = (*a1)[5];
  id v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    ((void (*)(void *, void *, void *))v6[2])((*a1)[4], v4, v5);
    swift_retain();
    sub_19F18D224((uint64_t)v3, v7);
    size_t v8 = (void (*)(void *, void *))v6[1];
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    swift_retain();
    sub_19F18D224((uint64_t)v4, v7);
    ((void (*)(void *, void *))v6[1])(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

double Account.value(forFlag:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  if (objc_msgSend(*v2, sel_ams_accountFlagValueForAccountFlag_, a1))
  {
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t Account.setValue(_:forFlag:)(void *a1, uint64_t a2)
{
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    id v5 = *v2;
    objc_msgSend(v5, sel_copy);
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    sub_19EEBDC10(0, (unint64_t *)&qword_1E946CD00);
    swift_dynamicCast();

    id v6 = *v2;
    *uint64_t v2 = v9;
  }
  id v7 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  objc_msgSend(v7, sel_ams_setAccountFlagValue_forAccountFlag_, sub_19F1DD42C(), a2);
  return swift_unknownObjectRelease();
}

uint64_t Account.storefront(for:)(uint64_t a1)
{
  id v2 = objc_msgSend(*v1, sel_ams_storefrontForMediaType_, a1);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_19F1DBD7C();

  return v4;
}

uint64_t _s9JetEngine7AccountV10forReadingSo9ACAccountCvg_0()
{
  objc_msgSend(*v0, sel_copy);
  sub_19F1DCBEC();
  swift_unknownObjectRelease();
  sub_19EEBDC10(0, (unint64_t *)&qword_1E946CD00);
  swift_dynamicCast();
  return v2;
}

uint64_t sub_19F18D224(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(*MEMORY[0x1E4FBBE08] + *a2 + 8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  id v7 = (char *)v14 - v6;
  if ((swift_isUniquelyReferenced_nonNull() & 1) == 0)
  {
    id v8 = *v2;
    objc_msgSend(v8, sel_copy);
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
    swift_dynamicCast();
    uint64_t v9 = (void *)v14[1];

    id v10 = *v2;
    *uint64_t v2 = v9;
  }
  id v11 = *v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  void v14[2] = v11;
  id v12 = v11;
  swift_setAtReferenceWritableKeyPath();

  return swift_release();
}

uint64_t sub_19F18D3D0(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v4 = *a3;
  swift_retain();
  return sub_19F18D224(a1, v4);
}

uint64_t sub_19F18D414()
{
  return 8;
}

void *sub_19F18D420(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

ValueMetadata *type metadata accessor for Account()
{
  return &type metadata for Account;
}

ValueMetadata *type metadata accessor for EventVersionFieldProvider()
{
  return &type metadata for EventVersionFieldProvider;
}

uint64_t sub_19F18D44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = a3;
  return MEMORY[0x1F4188298](sub_19EE761B8, 0, 0);
}

uint64_t static StartUpPerformanceEvent.Checkpoint.dependencyCreated(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_19F18D474()
{
  uint64_t v1 = *v0;
  sub_19F1DD72C();
  if (v1) {
    sub_19F1DD73C();
  }
  sub_19F1DD73C();
  return sub_19F1DD78C();
}

uint64_t sub_19F18D4D8()
{
  if (*v0) {
    sub_19F1DD73C();
  }
  return sub_19F1DD73C();
}

uint64_t sub_19F18D51C()
{
  uint64_t v1 = *v0;
  sub_19F1DD72C();
  if (v1) {
    sub_19F1DD73C();
  }
  sub_19F1DD73C();
  return sub_19F1DD78C();
}

BOOL sub_19F18D578(void *a1, void *a2)
{
  if (*a1) {
    BOOL v2 = *a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2) {
    return (*a1 | *a2) == 0;
  }
  else {
    return *a1 == *a2;
  }
}

uint64_t StartUpPerformanceEvent.Checkpoint.hash(into:)()
{
  if (*v0) {
    sub_19F1DD73C();
  }
  return sub_19F1DD73C();
}

BOOL static StartUpPerformanceEvent.Checkpoint.== infix(_:_:)(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1) {
    return v2 && *a1 == v2;
  }
  return !v2;
}

uint64_t StartUpPerformanceEvent.Checkpoint.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_19F1DD72C();
  if (v1) {
    sub_19F1DD73C();
  }
  sub_19F1DD73C();
  return sub_19F1DD78C();
}

BOOL sub_19F18D678(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1) {
    return v2 && *a1 == v2;
  }
  return !v2;
}

void *static StartUpPerformanceEvent.forLazy(domain:withCheckpoints:)(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    sub_19F19FC90((unint64_t)"JetEngine/StartUpPerformanceEvent.swift", 0x27uLL, 2, 0x5CuLL);
  }
  swift_allocObject();
  swift_bridgeObjectRetain();
  return sub_19EE25DEC(a1, a2);
}

uint64_t StartUpPerformanceEvent.deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  sub_19F18DAD8((unsigned char *)(v2 + 16), &v5);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  BOOL v3 = v5;
  swift_release();
  if (v3) {
    sub_19EE25280();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t StartUpPerformanceEvent.__deallocating_deinit()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  sub_19F18DAD8((unsigned char *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  BOOL v2 = v4;
  swift_release();
  if (v2) {
    sub_19EE25280();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

unsigned char *sub_19F18D898@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 1;
  return result;
}

uint64_t sub_19F18D8AC()
{
  sub_19EE3C010();
  sub_19F1DB9CC();
  uint64_t v1 = sub_19F1DB99C();
  uint64_t v2 = *(void *)(v0 + 48);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 20));
  sub_19F18D898((unsigned char *)(v2 + 16), &v5);
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 20));
  BOOL v3 = v5;
  swift_release();
  if (v3)
  {
    swift_retain();
    sub_19F1DB96C();
  }
  sub_19EFCC42C(v1);
  return v1;
}

uint64_t method lookup function for StartUpPerformanceEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for StartUpPerformanceEvent);
}

unsigned char *storeEnumTagSinglePayload for StartUpPerformanceEvent.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F18DA58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

unint64_t sub_19F18DA84()
{
  unint64_t result = qword_1E9476310;
  if (!qword_1E9476310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476310);
  }
  return result;
}

unsigned char *sub_19F18DAD8@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_19F18D898(a1, a2);
}

uint64_t MetricsFieldInclusionRequest.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  swift_bridgeObjectRelease();
  sub_19EEBF040(a1, (uint64_t)v12);
  uint64_t v4 = v13;
  if (v13)
  {
    uint64_t v5 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
    uint64_t v8 = v7;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
    if (v8)
    {
      uint64_t result = sub_19EEC3418(a1);
      *a2 = v6;
      a2[1] = v8;
      return result;
    }
  }
  else
  {
    sub_19EEBF108((uint64_t)v12);
  }
  sub_19EF5B580();
  swift_allocError();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  void *v11 = &type metadata for MetricsFieldInclusionRequest;
  v11[1] = v10;
  uint64_t v11[2] = 0;
  void v11[3] = 0;
  swift_willThrow();
  return sub_19EEC3418(a1);
}

uint64_t MetricsFieldInclusionRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_19F1DD45C();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t MetricsFieldInclusionRequest.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t MetricsFieldInclusionRequest.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static MetricsFieldInclusionRequest.crossfireReferral.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x800000019F274FE0;
}

void static MetricsFieldInclusionRequest.impressions.getter(void *a1@<X8>)
{
  *a1 = 0x6973736572706D69;
  a1[1] = 0xEB00000000736E6FLL;
}

void static MetricsFieldInclusionRequest.pageFields.getter(void *a1@<X8>)
{
  *a1 = 0x6C65694665676170;
  a1[1] = 0xEA00000000007364;
}

void static MetricsFieldInclusionRequest.pageReferrer.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsFieldInclusionRequest.clickLocation.getter(uint64_t a1@<X8>)
{
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_19F18DE30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return MetricsFieldInclusionRequest.init(deserializing:using:)(a1, a2);
}

ValueMetadata *static TraceMetricsEventEnqueue._attestation.getter()
{
  return &type metadata for _AttestFromJetEngine;
}

id TraceMetricsEventEnqueue.subject.getter()
{
  return *v0;
}

ValueMetadata *sub_19F18DE5C()
{
  return &type metadata for _AttestFromJetEngine;
}

ValueMetadata *type metadata accessor for TraceMetricsEventEnqueue()
{
  return &type metadata for TraceMetricsEventEnqueue;
}

Swift::Bool __swiftcall JSValue.hasValue(forProperty:)(Swift::String forProperty)
{
  uint64_t v2 = (void *)sub_19F1DBD4C();
  id v3 = objc_msgSend(v1, sel_valueForProperty_, v2);

  if (v3)
  {
    if (objc_msgSend(v3, sel_isUndefined))
    {

      return 0;
    }
    else
    {
      unsigned __int8 v5 = objc_msgSend(v3, sel_isNull);

      return v5 ^ 1;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t JSValue.string.getter()
{
  if (!objc_msgSend(v0, sel_isString)) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_toString);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_19F1DBD7C();

  return v3;
}

uint64_t JSValue.BOOL.getter()
{
  if (objc_msgSend(v0, sel_isBoolean)) {
    return (uint64_t)objc_msgSend(v0, sel_toBool);
  }
  else {
    return 2;
  }
}

id JSValue.number.getter()
{
  if (objc_msgSend(v0, sel_isNumber)) {
    return objc_msgSend(v0, sel_toNumber);
  }
  else {
    return 0;
  }
}

void JSValue.subscript.getter()
{
  id v1 = (void *)sub_19F1DBD4C();
  id v2 = objc_msgSend(v0, sel_valueForProperty_, v1);

  if (!v2) {
    __break(1u);
  }
}

void JSValue.array.getter()
{
  id v1 = (void *)sub_19F1DBD4C();
  id v2 = objc_msgSend(v0, sel_valueForProperty_, v1);

  if (v2)
  {
    unsigned int v3 = objc_msgSend(v2, sel_toUInt32);

    id v4 = v0;
    sub_19F18EBF8(0, v3, v4);
  }
  else
  {
    __break(1u);
  }
}

uint64_t JSValue.int.getter()
{
  if (objc_msgSend(v0, sel_isNumber)) {
    return (int)objc_msgSend(v0, sel_toInt32);
  }
  else {
    return 0;
  }
}

uint64_t JSValue.uint.getter()
{
  if (objc_msgSend(v0, sel_isNumber)) {
    return objc_msgSend(v0, sel_toUInt32);
  }
  else {
    return 0;
  }
}

uint64_t JSValue.double.getter()
{
  if (!objc_msgSend(v0, sel_isNumber)) {
    return 0;
  }
  objc_msgSend(v0, sel_toDouble);
  return v1;
}

void sub_19F18E228()
{
  if (!objc_msgSend(v0, sel_isObject) || (objc_msgSend(v0, sel_isNull) & 1) != 0) {
    return;
  }
  uint64_t v1 = (void *)sub_19F1DBD4C();
  id v2 = objc_msgSend(v0, sel_valueForProperty_, v1);

  if (!v2)
  {
    __break(1u);
    goto LABEL_11;
  }
  unsigned int v3 = (void *)sub_19F1DBD4C();
  id v4 = objc_msgSend(v2, sel_valueForProperty_, v3);

  if (!v4)
  {
LABEL_11:
    __break(1u);
    return;
  }

  if (objc_msgSend(v4, sel_isString)
    && (id v5 = objc_msgSend(v4, sel_toString)) != 0)
  {
    uint64_t v6 = v5;
    sub_19F1DBD7C();
  }
  else
  {
  }
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSValue.call(method:withArguments:)(Swift::String method, Swift::OpaquePointer withArguments)
{
  result.super.Class isa = (Class)objc_msgSend(v2, sel_context);
  if (result.super.isa)
  {
    Class isa = result.super.isa;
    id v5 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19EEB2BCC(isa, v5);
    v7.super.Class isa = v6;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id JSValue.subscript.getter(uint64_t a1)
{
  id result = objc_msgSend(v1, sel_valueAtIndex_, a1);
  if (!result) {
    __break(1u);
  }
  return result;
}

void JSValue.propertyNames.getter()
{
  if (objc_msgSend(v0, sel_isObject))
  {
    id v1 = objc_msgSend(v0, sel_context);
    if (v1)
    {
      id v2 = v1;
      unsigned int v3 = (const OpaqueJSContext *)objc_msgSend(v1, sel_JSGlobalContextRef);

      id v4 = JSObjectCopyPropertyNames(v3, (JSObjectRef)objc_msgSend(v0, sel_JSValueRef));
      size_t Count = JSPropertyNameArrayGetCount(v4);
      if ((Count & 0x8000000000000000) == 0)
      {
        size_t v6 = Count;
        if (!Count)
        {
LABEL_14:
          JSPropertyNameArrayRelease(v4);
          return;
        }
        uint64_t v18 = MEMORY[0x1E4FBC860];
        sub_19EEA1364(0, Count, 0);
        size_t v7 = 0;
        CFAllocatorRef v8 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
        while (v6 != v7)
        {
          NameAtIndex = JSPropertyNameArrayGetNameAtIndex(v4, v7);
          if (!NameAtIndex) {
            goto LABEL_17;
          }
          CFStringRef v10 = JSStringCopyCFString(v8, NameAtIndex);
          if (!v10) {
            goto LABEL_18;
          }
          id v11 = (__CFString *)v10;
          uint64_t v12 = sub_19F1DBD7C();
          uint64_t v14 = v13;

          unint64_t v16 = *(void *)(v18 + 16);
          unint64_t v15 = *(void *)(v18 + 24);
          if (v16 >= v15 >> 1) {
            sub_19EEA1364(v15 > 1, v16 + 1, 1);
          }
          ++v7;
          *(void *)(v18 + 16) = v16 + 1;
          uint64_t v17 = v18 + 16 * v16;
          *(void *)(v17 + 32) = v12;
          *(void *)(v17 + 40) = v14;
          if (v6 == v7) {
            goto LABEL_14;
          }
        }
        __break(1u);
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t JSValue.date.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  double v5 = MEMORY[0x1F4188790](v4 - 8);
  size_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(v2, sel_isDate, v5))
  {
    id v8 = objc_msgSend(v2, sel_toDate);
    if (v8)
    {
      uint64_t v9 = v8;
      sub_19F1DB54C();

      uint64_t v10 = sub_19F1DB57C();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 0, 1, v10);
    }
    else
    {
      uint64_t v14 = sub_19F1DB57C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
    }
    return sub_19EF5F380((uint64_t)v7, a1);
  }
  else
  {
    uint64_t v11 = sub_19F1DB57C();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a1, 1, 1, v11);
  }
}

void sub_19F18E794(void **a1@<X0>, void *a2@<X8>)
{
  unsigned int v3 = *a1;
  uint64_t v4 = (void *)sub_19F1DBD4C();
  id v5 = objc_msgSend(v3, sel_valueForProperty_, v4);

  if (v5) {
    *a2 = v5;
  }
  else {
    __break(1u);
  }
}

void sub_19F18E7FC(void **a1, void **a2)
{
  id v2 = *a1;
  unsigned int v3 = *a2;
  swift_bridgeObjectRetain();
  id v4 = v2;
  id v5 = (id)sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setValue_forProperty_, v4, v5);
}

void JSValue.subscript.modify(void *a1, uint64_t a2, uint64_t a3)
{
  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  id v5 = (void *)sub_19F1DBD4C();
  id v6 = objc_msgSend(v3, sel_valueForProperty_, v5);

  if (v6) {
    *a1 = v6;
  }
  else {
    __break(1u);
  }
}

void sub_19F18E918(uint64_t a1, char a2)
{
  unsigned int v3 = *(void **)(a1 + 24);
  id v4 = *(void **)a1;
  swift_bridgeObjectRetain();
  id v5 = v4;
  uint64_t v6 = sub_19F1DBD4C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setValue_forProperty_, v5, v6);
  if (a2) {
    size_t v7 = (void *)v6;
  }
  else {
    size_t v7 = v5;
  }
  if (a2) {
    id v8 = v5;
  }
  else {
    id v8 = (id)v6;
  }
  id v9 = v8;
}

id sub_19F18E9C4@<X0>(id *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  id result = objc_msgSend(*a1, sel_valueAtIndex_, *a2);
  if (result) {
    *a3 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

void JSValue.subscript.setter(void *a1, uint64_t a2)
{
  objc_msgSend(v2, sel_setValue_atIndex_, a1, a2);
}

void (*JSValue.subscript.modify(void (**a1)(id *a1), void (*a2)(id *a1)))(id *a1)
{
  a1[1] = a2;
  a1[2] = v2;
  id result = (void (*)(id *))objc_msgSend(v2, sel_valueAtIndex_, a2);
  if (result)
  {
    *a1 = result;
    return sub_19F18EAC0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_19F18EAC0(id *a1)
{
  id v1 = *a1;
  objc_msgSend(a1[2], sel_setValue_atIndex_);
}

uint64_t JSValue.url.getter@<X0>(uint64_t a1@<X8>)
{
  if (objc_msgSend(v1, sel_isString)
    && (id v3 = objc_msgSend(v1, sel_toString)) != 0)
  {
    id v4 = v3;
    sub_19F1DBD7C();

    sub_19F1DB2FC();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_19F1DB34C();
    size_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    return v7(a1, 1, 1, v6);
  }
}

id sub_19F18EBF8(id result, unint64_t a2, void *a3)
{
  unint64_t v5 = (unint64_t)result;
  unint64_t v6 = a2 - (void)result;
  if (a2 >= (unint64_t)result)
  {
    if ((uint64_t)(a2 - (void)result) < 0)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
      return result;
    }
  }
  else
  {
    if ((uint64_t)((uint64_t)result - a2) < 0)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    unint64_t v6 = a2 - (void)result;
  }
  id result = (id)MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    id result = (id)sub_19F1DCE6C();
    if ((v6 & 0x8000000000000000) == 0)
    {
      if (a2 >= v5) {
        unint64_t v7 = a2 - v5;
      }
      else {
        unint64_t v7 = 0;
      }
      for (unint64_t i = v5; ; ++i)
      {
        id result = objc_msgSend(a3, sel_valueAtIndex_, i);
        if (!result) {
          break;
        }
        sub_19F1DCE3C();
        sub_19F1DCE7C();
        sub_19F1DCE8C();
        id result = (id)sub_19F1DCE4C();
        if (a2 < v5)
        {
          __break(1u);
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
        if (!v7) {
          goto LABEL_18;
        }
        --v7;
        if (!--v6) {
          return (id)v9;
        }
      }
      goto LABEL_22;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_19F18ED40()
{
  return 0;
}

id sub_19F18ED54(void *a1, id *a2, void *a3)
{
  return objc_msgSend(*a2, sel_setValue_atIndex_, *a1, *a3);
}

uint64_t sub_19F18ED6C()
{
  return 0;
}

JetEngine::MetricsEventType __swiftcall MetricsEventType.init(rawValue:)(JetEngine::MetricsEventType rawValue)
{
  *id v1 = rawValue;
  return rawValue;
}

uint64_t MetricsEventType.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = sub_19F1DD45C();
    uint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
    *a2 = v5;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t MetricsEventType.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t MetricsEventType.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static MetricsEventType.account.getter(void *a1@<X8>)
{
  *a1 = 0x746E756F636361;
  a1[1] = 0xE700000000000000;
}

void static MetricsEventType.click.getter(void *a1@<X8>)
{
  *a1 = 0x6B63696C63;
  a1[1] = 0xE500000000000000;
}

void static MetricsEventType.demographic.getter(void *a1@<X8>)
{
  *a1 = 0x706172676F6D6564;
  a1[1] = 0xEB00000000636968;
}

void static MetricsEventType.dialog.getter(void *a1@<X8>)
{
  *a1 = 0x676F6C616964;
  a1[1] = 0xE600000000000000;
}

void static MetricsEventType.enter.getter(void *a1@<X8>)
{
  *a1 = 0x7265746E65;
  a1[1] = 0xE500000000000000;
}

void static MetricsEventType.exit.getter(void *a1@<X8>)
{
  *a1 = 1953069157;
  a1[1] = 0xE400000000000000;
}

void static MetricsEventType.impressions.getter(void *a1@<X8>)
{
  *a1 = 0x6973736572706D69;
  a1[1] = 0xEB00000000736E6FLL;
}

void static MetricsEventType.media.getter(void *a1@<X8>)
{
  *a1 = 0x616964656DLL;
  a1[1] = 0xE500000000000000;
}

void static MetricsEventType.page.getter(void *a1@<X8>)
{
  *a1 = 1701273968;
  a1[1] = 0xE400000000000000;
}

void static MetricsEventType.pageChange.getter(void *a1@<X8>)
{
  *a1 = 0x6E61684365676170;
  a1[1] = 0xEA00000000006567;
}

void static MetricsEventType.search.getter(void *a1@<X8>)
{
  *a1 = 0x686372616573;
  a1[1] = 0xE600000000000000;
}

void static MetricsEventType.playActivity.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsEventType.seekActivity.getter(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void static MetricsEventType.loadURL.getter(void *a1@<X8>)
{
  *a1 = 0x6C725564616F6CLL;
  a1[1] = 0xE700000000000000;
}

void static MetricsEventType.pageRender.getter(void *a1@<X8>)
{
  *a1 = 0x646E655265676170;
  a1[1] = 0xEA00000000007265;
}

void static MetricsEventType.unknown.getter(void *a1@<X8>)
{
  *a1 = 0x6E776F6E6B6E75;
  a1[1] = 0xE700000000000000;
}

BOOL static JetPackAssetCacheStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetPackAssetCacheStatus.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JetPackAssetCacheStatus.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F18F164()
{
  unint64_t result = qword_1E9476320;
  if (!qword_1E9476320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476320);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JetPackAssetCacheStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F18F284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetPackAssetCacheStatus()
{
  return &type metadata for JetPackAssetCacheStatus;
}

uint64_t dispatch thunk of JetPackAssetCachePolicy.status(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for JetPackAssetStandardCachePolicy()
{
  return &type metadata for JetPackAssetStandardCachePolicy;
}

Swift::Bool __swiftcall jet_debug_tooling_os_variant_has_internal_content(_:)(Swift::String a1)
{
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  uint64_t v1 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v2 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_19EEC4E5C(v1, &v6);
  os_unfair_lock_unlock(v2);
  int v3 = v6;
  swift_release();
  if (v3 != 2) {
    return v3 & 1;
  }
  sub_19F1DBE3C();
  char has_internal_content = os_variant_has_internal_content();
  swift_release();
  return has_internal_content;
}

ValueMetadata *type metadata accessor for JetDebugTooling()
{
  return &type metadata for JetDebugTooling;
}

id sub_19F18F440(void *a1, void *a2, id a3)
{
  id v5 = a2;
  sub_19F035B70(v5, (char *)&v21);
  char countAndFlagsBits = v21._countAndFlagsBits;
  if (LOBYTE(v21._countAndFlagsBits) == 2)
  {
    sub_19EF600C0();
    swift_allocError();
    a3 = v7;
    id v8 = v5;
    uint64_t v9 = (uint64_t)a3;
LABEL_8:
    JSError.init(badValue:expected:)(v8, v9);
    swift_willThrow();
    return a3;
  }
  if ((objc_msgSend(a3, sel_isString) & 1) == 0)
  {
LABEL_7:
    sub_19EF600C0();
    swift_allocError();
    uint64_t v20 = v19;
    id v8 = a3;
    uint64_t v9 = v20;
    goto LABEL_8;
  }
  LOBYTE(v21._countAndFlagsBits) = countAndFlagsBits & 1;
  id result = objc_msgSend(a3, sel_toString, v21._countAndFlagsBits);
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = sub_19F1DBD7C();
    uint64_t v14 = v13;

    v15._char countAndFlagsBits = v12;
    v15._object = v14;
    Swift::String v16 = CryptoAlgorithm.makeDigest(fromContentsOf:)(v15);
    swift_bridgeObjectRelease();
    Swift::String v21 = v16;
    id v17 = a1;
    uint64_t v18 = sub_19F1DD62C();
    a3 = objc_msgSend(self, sel_valueWithObject_inContext_, v18, v17);
    swift_unknownObjectRelease();

    if (a3) {
      return a3;
    }
    __break(1u);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_19F18F730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v6);
  uint64_t v7 = a2;
  swift_bridgeObjectRetain();
  return Models.AlertAction.Button.init(deserializing:using:)((uint64_t)v6, &v7, a3);
}

uint64_t static Models.AlertAction.ButtonRole.cancel.getter()
{
  return 0x6C65636E6163;
}

uint64_t static Models.AlertAction.ButtonRole.destructive.getter()
{
  return 0x7463757274736564;
}

uint64_t Models.AlertAction.ButtonRole.rawValue.getter(uint64_t a1)
{
  return a1;
}

uint64_t Models.AlertAction.Button.init(title:role:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  uint64_t result = sub_19F1127A4(a5, (uint64_t)(a6 + 4));
  a6[2] = a3;
  a6[3] = a4;
  return result;
}

uint64_t Models.AlertAction.Button.init(title:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t result = sub_19F1127A4(a3, (uint64_t)(a4 + 4));
  a4[2] = 0;
  a4[3] = 0;
  return result;
}

uint64_t Models.AlertAction.Button.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a2;
  JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)v20);
  sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1E946FD20);
  uint64_t v6 = v18;
  if (!v18)
  {
    sub_19EEBD664((uint64_t)v17, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v20);
    goto LABEL_8;
  }
  uint64_t v7 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
  uint64_t v10 = v9;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  sub_19EEC3418((uint64_t)v20);
  if (!v10)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v15 = xmmword_19F264A20;
    *(void *)(v15 + 16) = 0x20000001EF149C50uLL;
    *(void *)(v15 + 24) = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  *a3 = v8;
  a3[1] = v10;
  JSONObject.subscript.getter(0x6E6F69746361, 0xE600000000000000, (uint64_t)v17);
  uint64_t v21 = v5;
  static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)v17, &v21, (uint64_t)v20);
  sub_19EEC3418((uint64_t)v17);
  swift_bridgeObjectRelease();
  sub_19F1127A4((uint64_t)v20, (uint64_t)(a3 + 4));
  JSONObject.subscript.getter(1701605234, 0xE400000000000000, (uint64_t)v20);
  sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1E946FD20);
  uint64_t v11 = v18;
  if (v18)
  {
    uint64_t v12 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12);
    uint64_t v14 = v13;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
    if (!v14) {
      uint64_t v11 = 0;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v17, (uint64_t *)&unk_1E946FD20);
    uint64_t v14 = 0;
  }
  sub_19EEC3418(a1);
  uint64_t result = sub_19EEC3418((uint64_t)v20);
  a3[2] = v11;
  a3[3] = v14;
  return result;
}

uint64_t Models.AlertAction.Button.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.AlertAction.Button.role.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.AlertAction.Button.action.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC3ED8(v1 + 32, a1, qword_1E946D0B8);
}

uint64_t sub_19F18FB34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return Models.AlertAction.Button.init(deserializing:using:)(a1, a2, a3);
}

uint64_t Models.AlertAction.Severity.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t Models.AlertAction.Severity.rawValue.getter()
{
  if (*v0) {
    return 0x6C61636974697263;
  }
  else {
    return 0x74616D726F666E69;
  }
}

uint64_t sub_19F18FBF8(char *a1, char *a2)
{
  return sub_19F039E10(*a1, *a2);
}

uint64_t sub_19F18FC04()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F18FC94()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F18FD10()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F18FD9C@<X0>(char *a1@<X8>)
{
  return Models.AlertAction.Severity.init(rawValue:)(a1);
}

void sub_19F18FDA8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x74616D726F666E69;
  if (*v1) {
    uint64_t v2 = 0x6C61636974697263;
  }
  unint64_t v3 = 0xED00006C616E6F69;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19F18FDF4()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F18FE54()
{
  return sub_19F1DC0EC();
}

__n128 Models.AlertAction.init(actionMetrics:severity:icon:title:message:buttons:)@<Q0>(_OWORD *a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(_OWORD *)a9 = *a1;
  long long v9 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a9 + 56) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a9 + 72) = v9;
  *(_OWORD *)(a9 + 88) = *(_OWORD *)(a3 + 64);
  __n128 result = *(__n128 *)a3;
  long long v11 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 24) = *(_OWORD *)a3;
  *(unsigned char *)(a9 + 16) = *a2;
  uint64_t v12 = *(void *)(a3 + 80);
  *(_OWORD *)(a9 + 40) = v11;
  *(void *)(a9 + 104) = v12;
  *(void *)(a9 + 112) = a4;
  *(void *)(a9 + 120) = a5;
  *(void *)(a9 + 128) = a6;
  *(void *)(a9 + 136) = a7;
  *(void *)(a9 + 144) = a8;
  return result;
}

uint64_t Models.AlertAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x736E6F74747562, 0xE700000000000000, (uint64_t)v46);
  sub_19EEC3ED8((uint64_t)v46, (uint64_t)v49, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v50;
  if (!v50)
  {
    sub_19EEBD664((uint64_t)v49, (uint64_t *)&unk_1E946FD20);
    long long v52 = 0u;
    long long v53 = 0u;
    uint64_t v54 = 0;
    sub_19EEC3418((uint64_t)v46);
    goto LABEL_6;
  }
  uint64_t v8 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v8 + 120))(&v52, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  uint64_t v9 = *((void *)&v53 + 1);
  sub_19EEC3418((uint64_t)v46);
  if (!v9)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)&v52, &qword_1E946FA88);
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v10 = xmmword_19F264A30;
    *(void *)(v10 + 16) = 0x20000001EF149DE0uLL;
    *(void *)(v10 + 24) = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  v55[0] = v52;
  v55[1] = v53;
  uint64_t v56 = v54;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)v46);
  *(void *)&long long v52 = v6;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)v46, (uint64_t *)&v52, v48);
  if (v3)
  {
    swift_bridgeObjectRelease();
    sub_19EEC3418(a1);
    return sub_19EEC5764((uint64_t)v55);
  }
  uint64_t v11 = v48[0];
  uint64_t v57 = v48[1];
  JSONObject.subscript.getter(0x7974697265766573, 0xE800000000000000, (uint64_t)v46);
  sub_19EEC3ED8((uint64_t)v46, (uint64_t)&v52, (uint64_t *)&unk_1E946FD20);
  uint64_t v12 = *((void *)&v53 + 1);
  if (*((void *)&v53 + 1))
  {
    uint64_t v13 = v54;
    __swift_project_boxed_opaque_existential_1(&v52, *((uint64_t *)&v53 + 1));
    (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
    uint64_t v15 = v14;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v52);
    if (v15)
    {
      uint64_t v16 = sub_19F1DD0FC();
      swift_bridgeObjectRelease();
      if (v16 == 1) {
        int v17 = 1;
      }
      else {
        int v17 = 2;
      }
      if (v16) {
        int v18 = v17;
      }
      else {
        int v18 = 0;
      }
      goto LABEL_17;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v52, (uint64_t *)&unk_1E946FD20);
  }
  int v18 = 2;
LABEL_17:
  sub_19EEC3418((uint64_t)v46);
  JSONObject.subscript.getter(1852793705, 0xE400000000000000, (uint64_t)&v52);
  v49[0] = v6;
  swift_bridgeObjectRetain();
  MediaArtwork.init(deserializing:using:)((uint64_t)&v52, v49, (uint64_t)v46);
  int v39 = v18;
  JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)&v52);
  sub_19EEC3ED8((uint64_t)&v52, (uint64_t)v49, (uint64_t *)&unk_1E946FD20);
  uint64_t v19 = v50;
  if (v50)
  {
    uint64_t v20 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 24))(v19, v20);
    uint64_t v41 = v21;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  }
  else
  {
    sub_19EEBD664((uint64_t)v49, (uint64_t *)&unk_1E946FD20);
    uint64_t v38 = 0;
    uint64_t v41 = 0;
  }
  sub_19EEC3418((uint64_t)&v52);
  JSONObject.subscript.getter(0x6567617373656DLL, 0xE700000000000000, (uint64_t)v49);
  sub_19EEC3ED8((uint64_t)v49, (uint64_t)v43, (uint64_t *)&unk_1E946FD20);
  uint64_t v22 = v44;
  uint64_t v42 = v11;
  if (v44)
  {
    uint64_t v23 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v22, v23);
    uint64_t v40 = v24;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
  }
  else
  {
    sub_19EEBD664((uint64_t)v43, (uint64_t *)&unk_1E946FD20);
    uint64_t v37 = 0;
    uint64_t v40 = 0;
  }
  sub_19EEC3418((uint64_t)v49);
  uint64_t v25 = sub_19EEC589C((uint64_t)v55, (uint64_t)v43);
  MEMORY[0x1F4188790](v25);
  v36[2] = v6;
  uint64_t v26 = v44;
  uint64_t v27 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  uint64_t v29 = (*(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), void *, ValueMetadata *, uint64_t, uint64_t))(v27 + 48))(sub_19F1904B4, v36, &type metadata for Models.AlertAction.Button, v26, v27);
  sub_19EEC5764((uint64_t)v43);
  swift_bridgeObjectRelease();
  sub_19EEC3418(a1);
  uint64_t result = sub_19EEC5764((uint64_t)v55);
  long long v30 = v46[3];
  *(_OWORD *)(a3 + 56) = v46[2];
  *(_OWORD *)(a3 + 72) = v30;
  *(_OWORD *)(a3 + 88) = v46[4];
  long long v31 = v46[1];
  *(_OWORD *)(a3 + 24) = v46[0];
  uint64_t v32 = v57;
  *(void *)a3 = v42;
  *(void *)(a3 + 8) = v32;
  *(unsigned char *)(a3 + 16) = v39;
  uint64_t v33 = v47;
  *(_OWORD *)(a3 + 40) = v31;
  uint64_t v34 = v38;
  *(void *)(a3 + 104) = v33;
  *(void *)(a3 + 112) = v34;
  uint64_t v35 = v37;
  *(void *)(a3 + 120) = v41;
  *(void *)(a3 + 128) = v35;
  *(void *)(a3 + 136) = v40;
  *(void *)(a3 + 144) = v29;
  return result;
}

uint64_t sub_19F1904B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F18F730(a1, *(void *)(v2 + 16), a2);
}

uint64_t Models.AlertAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void Models.AlertAction.severity.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t Models.AlertAction.icon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC3ED8(v1 + 24, a1, &qword_1E9475798);
}

uint64_t Models.AlertAction.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.AlertAction.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.AlertAction.buttons.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F1905A8()
{
  uint64_t result = 0x654D6E6F69746361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7974697265766573;
      break;
    case 2:
      uint64_t result = 1852793705;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 5:
      uint64_t result = 0x736E6F74747562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F190670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F1929F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F190698(uint64_t a1)
{
  unint64_t v2 = sub_19F1913D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F1906D4(uint64_t a1)
{
  unint64_t v2 = sub_19F1913D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F190710@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.AlertAction.init(deserializing:using:)(a1, a2, a3);
}

uint64_t sub_19F190728()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F190788()
{
  return sub_19F1DC0EC();
}

uint64_t sub_19F1907D8()
{
  uint64_t v1 = 0x6E6F69746361;
  if (*v0 != 1) {
    uint64_t v1 = 1701605234;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_19F190824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F192C88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F19084C(uint64_t a1)
{
  unint64_t v2 = sub_19F190C08();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F190888(uint64_t a1)
{
  unint64_t v2 = sub_19F190C08();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.AlertAction.Button.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476328);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v8 = sub_19F190C08();
  sub_19F1DD8AC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  unint64_t v14 = v8;
  LOBYTE(v16) = 0;
  v18[0] = sub_19F1DD18C();
  v18[1] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476338);
  char v20 = 2;
  sub_19F191AC4(&qword_1E9476340, &qword_1E9476338, (void (*)(void))sub_19F190C5C);
  sub_19F1DD17C();
  uint64_t v12 = v16;
  uint64_t v11 = v17;
  if (v17 == 1)
  {
    uint64_t v12 = 0;
    uint64_t v11 = 0;
  }
  v18[2] = v12;
  v18[3] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_19F1DD89C();
  sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v13);
  swift_bridgeObjectRelease();
  char v20 = 1;
  decodeActionModel<A, B>(using:container:forKey:)((uint64_t)&v16);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_19F1127A4((uint64_t)&v16, (uint64_t)&v19);
  sub_19F190CEC(v18, v15);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_19F190D24((uint64_t)v18);
}

unint64_t sub_19F190C08()
{
  unint64_t result = qword_1E9476330;
  if (!qword_1E9476330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476330);
  }
  return result;
}

uint64_t sub_19F190C5C()
{
  return sub_19F191AC4(&qword_1E9476348, &qword_1E9476350, (void (*)(void))sub_19F190C98);
}

unint64_t sub_19F190C98()
{
  unint64_t result = qword_1E9476358;
  if (!qword_1E9476358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476358);
  }
  return result;
}

uint64_t sub_19F190CEC(void *a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F190D24(uint64_t a1)
{
  return a1;
}

uint64_t Models.AlertAction.Button.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476360);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v7 = sub_19F190C08();
  sub_19F1DD8FC();
  LOBYTE(v13) = 0;
  uint64_t v8 = v12;
  sub_19F1DD26C();
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  unint64_t v11 = v7;
  uint64_t v12 = v4;
  long long v13 = *(_OWORD *)(v1 + 16);
  char v14 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476350);
  sub_19F191AC4(&qword_1E9476368, &qword_1E9476350, (void (*)(void))sub_19F190FFC);
  sub_19F1DD2AC();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_19F1DD8EC();
  sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v10);
  swift_bridgeObjectRelease();
  LOBYTE(v13) = 1;
  encodeActionModel<A, B>(_:using:container:forKey:)(v1 + 32);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v3);
}

unint64_t sub_19F190FFC()
{
  unint64_t result = qword_1E9476370;
  if (!qword_1E9476370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476370);
  }
  return result;
}

uint64_t sub_19F191050@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.AlertAction.Button.init(from:)(a1, a2);
}

uint64_t sub_19F191068(void *a1)
{
  return Models.AlertAction.Button.encode(to:)(a1);
}

uint64_t Models.AlertAction.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476378);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1913D4();
  sub_19F1DD8FC();
  long long v12 = *v3;
  char v11 = 0;
  sub_19F046118();
  sub_19F1DD2AC();
  if (!v2)
  {
    LOBYTE(v12) = *((unsigned char *)v3 + 16);
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476388);
    sub_19F191AC4(&qword_1E9476390, &qword_1E9476388, (void (*)(void))sub_19F191428);
    sub_19F1DD2AC();
    LOBYTE(v12) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475798);
    sub_19EE78558(&qword_1E94763B0, &qword_1E9475798);
    sub_19F1DD2AC();
    long long v12 = v3[7];
    char v11 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
    sub_19F11FD8C();
    sub_19F1DD2AC();
    long long v12 = v3[8];
    char v11 = 4;
    sub_19F1DD2AC();
    *(void *)&long long v12 = *((void *)v3 + 18);
    char v11 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94763B8);
    sub_19F191AC4(&qword_1E94763C0, &qword_1E94763B8, (void (*)(void))sub_19F1914B8);
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_19F1913D4()
{
  unint64_t result = qword_1E9476380;
  if (!qword_1E9476380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476380);
  }
  return result;
}

uint64_t sub_19F191428()
{
  return sub_19F191AC4(&qword_1E9476398, &qword_1E94763A0, (void (*)(void))sub_19F191464);
}

unint64_t sub_19F191464()
{
  unint64_t result = qword_1E94763A8;
  if (!qword_1E94763A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94763A8);
  }
  return result;
}

uint64_t sub_19F1914B8()
{
  return sub_19F191AC4(&qword_1E94763C8, &qword_1E94763D0, (void (*)(void))sub_19F1914F4);
}

unint64_t sub_19F1914F4()
{
  unint64_t result = qword_1E94763D8;
  if (!qword_1E94763D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94763D8);
  }
  return result;
}

uint64_t Models.AlertAction.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94763E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = 2;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v9 = a1[3];
  uint64_t v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_19F1913D4();
  sub_19F1DD8AC();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = 0;
    sub_19F046530();
    sub_19F1DD1BC();
    long long v14 = v11[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476388);
    char v13 = 1;
    sub_19F191AC4(&qword_1E94763E8, &qword_1E9476388, (void (*)(void))sub_19F1919F8);
    sub_19F1DD1BC();
    char v15 = v11[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475798);
    char v13 = 2;
    sub_19EE78558(&qword_1E94757A0, &qword_1E9475798);
    sub_19F1DD1BC();
    long long v18 = v11[2];
    long long v19 = v11[3];
    long long v20 = v11[4];
    uint64_t v21 = v12;
    long long v16 = v11[0];
    long long v17 = v11[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
    char v13 = 3;
    sub_19F11FF74();
    sub_19F1DD1BC();
    long long v22 = v11[0];
    char v13 = 4;
    sub_19F1DD1BC();
    long long v23 = v11[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94763B8);
    char v13 = 5;
    sub_19F191AC4(&qword_1E9476400, &qword_1E94763B8, (void (*)(void))sub_19F191A88);
    sub_19F1DD1BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v24 = *(void *)&v11[0];
    sub_19F191B84((uint64_t)&v14, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    return sub_19F191BBC((uint64_t)&v14);
  }
}

uint64_t sub_19F1919F8()
{
  return sub_19F191AC4(&qword_1E94763F0, &qword_1E94763A0, (void (*)(void))sub_19F191A34);
}

unint64_t sub_19F191A34()
{
  unint64_t result = qword_1E94763F8;
  if (!qword_1E94763F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94763F8);
  }
  return result;
}

uint64_t sub_19F191A88()
{
  return sub_19F191AC4(&qword_1E9476408, &qword_1E94763D0, (void (*)(void))sub_19F191B30);
}

uint64_t sub_19F191AC4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19F191B30()
{
  unint64_t result = qword_1E9476410;
  if (!qword_1E9476410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476410);
  }
  return result;
}

uint64_t sub_19F191B84(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F191BBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F191BEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.AlertAction.init(from:)(a1, a2);
}

uint64_t sub_19F191C04(void *a1)
{
  return Models.AlertAction.encode(to:)(a1);
}

__n128 Models.AlertAction.init(actionMetrics:title:message:buttons:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X8>)
{
  long long v16 = &_s12_EmptySourceVN;
  long long v17 = &off_1EC30E250;
  MediaArtwork.init(_:)(&v15, (uint64_t)&a7[1].n128_i64[1]);
  __n128 result = *a1;
  *a7 = *a1;
  a7[1].n128_u8[0] = 2;
  a7[7].n128_u64[0] = a2;
  a7[7].n128_u64[1] = a3;
  a7[8].n128_u64[0] = a4;
  a7[8].n128_u64[1] = a5;
  a7[9].n128_u64[0] = a6;
  return result;
}

unint64_t sub_19F191CB4()
{
  unint64_t result = qword_1E9476418;
  if (!qword_1E9476418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476418);
  }
  return result;
}

unint64_t sub_19F191D0C()
{
  unint64_t result = qword_1E9476420;
  if (!qword_1E9476420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476420);
  }
  return result;
}

uint64_t sub_19F191D60@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 16);
  return result;
}

unsigned char *sub_19F191D6C(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = *result;
  return result;
}

uint64_t sub_19F191D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEC3ED8(a1 + 24, a2, &qword_1E9475798);
}

uint64_t sub_19F191DA0(uint64_t a1, uint64_t a2)
{
  sub_19F0D09CC(a1, (uint64_t)v4);
  return sub_19F192DC0((uint64_t)v4, a2 + 24);
}

uint64_t sub_19F191DDC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F191DE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 112) = v4;
  *(void *)(a2 + 120) = v3;
  return result;
}

uint64_t sub_19F191E2C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 136);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F191E38(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 128) = v4;
  *(void *)(a2 + 136) = v3;
  return result;
}

uint64_t sub_19F191E7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 144);
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F191E88(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 144) = v3;
  return result;
}

uint64_t _s11AlertActionVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s11AlertActionVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v7 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v8 = a2 + 72;
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v9;
  uint64_t v10 = v9;
  char v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v12 = v6;
  id v13 = v7;
  v11(a1 + 72, v8, v10);
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  uint64_t v15 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v15;
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11AlertActionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  uint64_t v8 = *(void **)(a2 + 48);
  long long v9 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = v8;
  id v10 = v8;

  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 72), (uint64_t *)(a2 + 72));
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11AlertActionVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.AlertAction()
{
  return &type metadata for Models.AlertAction;
}

ValueMetadata *type metadata accessor for Models.AlertAction.ButtonRole()
{
  return &type metadata for Models.AlertAction.ButtonRole;
}

uint64_t _s11AlertActionV6ButtonVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  }
  return result;
}

uint64_t _s11AlertActionV6ButtonVwcp(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 4;
  uint64_t v7 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, void *, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    long long v9 = *((_OWORD *)v6 + 1);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(void *)(a1 + 64) = v6[4];
  }
  return a1;
}

uint64_t _s11AlertActionV6ButtonVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56))
  {
    if (v4)
    {
      *(void *)(a1 + 56) = v4;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
      return a1;
    }
LABEL_7:
    long long v5 = *(_OWORD *)(a2 + 32);
    long long v6 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  return a1;
}

uint64_t _s11AlertActionV6ButtonVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 32);
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for Models.AlertAction.Button()
{
  return &type metadata for Models.AlertAction.Button;
}

unsigned char *_s11AlertActionV8SeverityOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1925A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Models.AlertAction.Severity()
{
  return &type metadata for Models.AlertAction.Severity;
}

unsigned char *_s11AlertActionV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1926ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11AlertActionV10CodingKeysOMa()
{
  return &_s11AlertActionV10CodingKeysON;
}

unsigned char *_s11AlertActionV6ButtonV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1927B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11AlertActionV6ButtonV10CodingKeysOMa()
{
  return &_s11AlertActionV6ButtonV10CodingKeysON;
}

unint64_t sub_19F1927EC()
{
  unint64_t result = qword_1E9476428;
  if (!qword_1E9476428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476428);
  }
  return result;
}

unint64_t sub_19F192844()
{
  unint64_t result = qword_1E9476430;
  if (!qword_1E9476430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476430);
  }
  return result;
}

unint64_t sub_19F19289C()
{
  unint64_t result = qword_1E9476438;
  if (!qword_1E9476438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476438);
  }
  return result;
}

unint64_t sub_19F1928F4()
{
  unint64_t result = qword_1E9476440;
  if (!qword_1E9476440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476440);
  }
  return result;
}

unint64_t sub_19F19294C()
{
  unint64_t result = qword_1E9476448;
  if (!qword_1E9476448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476448);
  }
  return result;
}

unint64_t sub_19F1929A4()
{
  unint64_t result = qword_1E9476450;
  if (!qword_1E9476450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476450);
  }
  return result;
}

uint64_t sub_19F1929F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974697265766573 && a2 == 0xE800000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736E6F74747562 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_19F192C88(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_19F192DC0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_19F192E1C()
{
  unint64_t result = qword_1E9476458;
  if (!qword_1E9476458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476458);
  }
  return result;
}

unint64_t sub_19F192E70()
{
  unint64_t result = qword_1E9476460;
  if (!qword_1E9476460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476460);
  }
  return result;
}

uint64_t JPStream.makeStream()()
{
  sub_19F19DB10((unint64_t)"JetEngine/JetPackStreamSource.swift", 0x23uLL, 2, 0x2EuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C80);
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v0;
  *(unsigned char *)(v1 + 32) = 1;
  id v3 = v0;
  return v1;
}

uint64_t sub_19F192F44()
{
  uint64_t v1 = *v0;
  sub_19F19DB10((unint64_t)"JetEngine/JetPackStreamSource.swift", 0x23uLL, 2, 0x2EuLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C80);
  uint64_t v2 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  *(void *)(v2 + 16) = v3;
  *(void *)(v2 + 24) = v1;
  *(unsigned char *)(v2 + 32) = 1;
  id v4 = v1;
  return v2;
}

uint64_t dispatch thunk of JetPackStreamSource.makeStream()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t MetricsError.errorDescription.getter()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0x6520746F6E6E6143;
      sub_19F1DBEFC();
      goto LABEL_7;
    case 2:
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000014;
      goto LABEL_9;
    case 3:
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD000000000000010;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E94712C0);
      sub_19F19333C();
      sub_19EEC4910();
      sub_19F1DC0AC();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 4:
      sub_19F1DCCEC();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD00000000000001CLL;
LABEL_9:
      unint64_t v3 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E94712C0);
      sub_19F19333C();
      sub_19EEC4910();
      sub_19F1DC0AC();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      return v3;
    case 5:
      unint64_t result = 0xD000000000000031;
      switch(*(void *)v0)
      {
        case 1:
          unint64_t result = 0xD00000000000002ELL;
          break;
        case 2:
          unint64_t result = 0xD00000000000003FLL;
          break;
        case 3:
          unint64_t result = 0xD00000000000002BLL;
          break;
        case 4:
          unint64_t result = 0xD00000000000004ELL;
          break;
        default:
          return result;
      }
      return result;
    default:
      unint64_t v3 = 0;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
LABEL_7:
      sub_19F1DBEFC();
      return v3;
  }
}

unint64_t sub_19F19333C()
{
  unint64_t result = qword_1E9476468;
  if (!qword_1E9476468)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E94712C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476468);
  }
  return result;
}

uint64_t sub_19F1933A4(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for MetricsError(uint64_t a1)
{
  return sub_19F193408(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_19F193408(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s9JetEngine12MetricsErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_19F1933A4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MetricsError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_19F1933A4(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_19F193408(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MetricsError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_19F193408(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetricsError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MetricsError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19F1935D4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_19F1935EC(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)uint64_t result = a2 - 5;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MetricsError()
{
  return &type metadata for MetricsError;
}

void sub_19F193614()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  id v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_19F1DBD7C();

    uint64_t v2 = sub_19F1DBE1C();
    uint64_t v4 = v3;
    swift_bridgeObjectRelease();
    if (qword_1E946E748 != -1) {
      swift_once();
    }
    char v5 = sub_19EE7F4A0(v2, v4, qword_1E946E740);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = 0;
  }
  byte_1E946D1C8 = v5 & 1;
}

uint64_t static NSBundle.isMusic.getter()
{
  return sub_19F193944(&qword_1E946E750, (unsigned __int8 *)&byte_1E946D1C8);
}

uint64_t sub_19F193734()
{
  uint64_t v0 = sub_19EFAB050((uint64_t)&unk_1EF14CD78);
  uint64_t result = swift_arrayDestroy();
  qword_1E946E740 = v0;
  return result;
}

void sub_19F193780(uint64_t a1)
{
}

uint64_t static NSBundle.isAppStoreBundle.getter()
{
  return sub_19F193944(&qword_1E9470230, byte_1E9476470);
}

uint64_t sub_19F1937D0()
{
  uint64_t v0 = sub_19EFAB050((uint64_t)&unk_1EF14CDD8);
  uint64_t result = swift_arrayDestroy();
  qword_1E9476478 = v0;
  return result;
}

void sub_19F19381C(uint64_t a1)
{
}

void sub_19F193848(uint64_t a1, void *a2, uint64_t *a3, unsigned char *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v6 = *a3;
  id v7 = objc_msgSend(self, sel_mainBundle);
  id v8 = objc_msgSend(v7, sel_bundleIdentifier);

  if (v8)
  {
    uint64_t v9 = sub_19F1DBD7C();
    uint64_t v11 = v10;

    char v12 = sub_19EE7F4A0(v9, v11, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = 0;
  }
  *a4 = v12 & 1;
}

uint64_t static NSBundle.isJetTestAppBundle.getter()
{
  return sub_19F193944(&qword_1E9470240, byte_1E9476480);
}

uint64_t sub_19F193944(void *a1, unsigned __int8 *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2;
}

uint64_t sub_19F193980()
{
  uint64_t v0 = sub_19EFAB050((uint64_t)&unk_1EF14CE18);
  uint64_t result = swift_arrayDestroy();
  qword_1E9476488 = v0;
  return result;
}

uint64_t JSSource.init(_:file:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)a3 + *(int *)(type metadata accessor for JSSource() + 20);
  uint64_t v10 = sub_19F1DB34C();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  *a3 = a1;
  a3[1] = a2;
  sub_19F1DB23C();
  swift_bridgeObjectRelease();
  v11((uint64_t)v8, 0, 1, v10);
  return sub_19EE62024((uint64_t)v8, v9);
}

uint64_t type metadata accessor for JSSource()
{
  uint64_t result = qword_1E946FAD0;
  if (!qword_1E946FAD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

JSValue __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSSource.evaluate(against:in:)(JSValue_optional against, JSContext in)
{
  uint64_t v3 = *(void **)&against.is_nil;
  Class isa = against.value.super.isa;
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2[1];
  if ((v12 & 0x1000000000000000) != 0 || !(v12 & 0x2000000000000000 | *v2 & 0x1000000000000000))
  {
    sub_19F1DCCDC();
    long long v17 = *(OpaqueJSString **)string;
  }
  else
  {
    MEMORY[0x1F4188790](v9);
    *(&v37 - 2) = (uint64_t)sub_19EF4D53C;
    *(&v37 - 1) = 0;
    if ((v14 & 0x2000000000000000) != 0)
    {
      *(void *)string = v13;
      uint64_t v41 = v14 & 0xFFFFFFFFFFFFFFLL;
      result.super.Class isa = JSStringCreateWithUTF8CString(string);
      if (!result.super.isa) {
        goto LABEL_37;
      }
      long long v17 = result.super.isa;
    }
    else
    {
      if ((v13 & 0x1000000000000000) != 0)
      {
        uint64_t v15 = (v14 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v15 = sub_19F1DCE2C();
      }
      long long v17 = (OpaqueJSString *)sub_19F1069C8(v15, v16, (uint64_t (*)(void))sub_19F195070);
    }
  }
  uint64_t v19 = type metadata accessor for JSSource();
  sub_19EE628D4((uint64_t)v2 + *(int *)(v19 + 20), (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_19EEBD664((uint64_t)v6, (uint64_t *)&unk_1EB392E50);
    long long v20 = 0;
LABEL_21:
    *(void *)string = 0;
    uint64_t v27 = (const OpaqueJSContext *)objc_msgSend(v3, sel_JSGlobalContextRef);
    JSValueRef v28 = JSEvaluateScript(v27, v17, (JSObjectRef)[(objc_class *)isa JSValueRef], v20, 0, (JSValueRef *)string);
    if (!v28)
    {
      long long v30 = *(OpaqueJSString **)string;
      sub_19EF600C0();
      swift_allocError();
      Class v29 = v31;
      result.super.Class isa = (Class)objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v30, v3);
      if (result.super.isa)
      {
        Class v32 = result.super.isa;
        uint64_t v33 = (void (**)(const void *, void *, objc_class *))objc_msgSend(v3, sel_exceptionHandler);
        if (v33)
        {
          uint64_t v34 = v33;
          Class isa = v17;
          uint64_t v35 = v33[2];
          uint64_t v36 = v32;
          v35(v34, v3, v36);
          long long v17 = isa;
          _Block_release(v34);
        }
        JSError.init(_:)(v32, (uint64_t)v29);
        swift_willThrow();
        if (v20) {
          JSStringRelease(v20);
        }
        goto LABEL_31;
      }
      goto LABEL_38;
    }
    result.super.Class isa = (Class)objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v28, v3);
    if (result.super.isa)
    {
      Class v29 = result.super.isa;
      if (v20) {
        JSStringRelease(v20);
      }
LABEL_31:
      JSStringRelease(v17);
      return (JSValue)v29;
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
  uint64_t v21 = sub_19F1DB1DC();
  uint64_t v23 = v22;
  if ((v22 & 0x1000000000000000) != 0 || !(v22 & 0x2000000000000000 | v21 & 0x1000000000000000))
  {
    sub_19F1DCCDC();
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_20:
    long long v20 = (OpaqueJSString *)v39;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    goto LABEL_21;
  }
  MEMORY[0x1F4188790](v21);
  *(&v37 - 2) = (uint64_t)sub_19EF4D53C;
  *(&v37 - 1) = 0;
  if ((v23 & 0x2000000000000000) == 0)
  {
    if ((v24 & 0x1000000000000000) != 0)
    {
      uint64_t v25 = (v23 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v26 = v24 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v25 = sub_19F1DCE2C();
    }
    uint64_t v39 = sub_19F1069C8(v25, v26, (uint64_t (*)(void))sub_19EFC4F14);
    goto LABEL_17;
  }
  *(void *)string = v24;
  uint64_t v41 = v23 & 0xFFFFFFFFFFFFFFLL;
  result.super.Class isa = JSStringCreateWithUTF8CString(string);
  if (result.super.isa)
  {
    uint64_t v39 = (uint64_t)result.super.isa;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t JSSource.init(code:sourceURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = (uint64_t)a4 + *(int *)(type metadata accessor for JSSource() + 20);
  uint64_t v9 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *a4 = a1;
  a4[1] = a2;
  return sub_19EE62024(a3, v8);
}

uint64_t JSSource.code.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*JSSource.code.modify())()
{
  return nullsub_1;
}

uint64_t JSSource.sourceURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JSSource() + 20);
  return sub_19EE628D4(v3, a1);
}

uint64_t JSSource.sourceURL.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for JSSource() + 20);
  return sub_19EE62024(a1, v3);
}

uint64_t (*JSSource.sourceURL.modify())(void)
{
  return nullsub_1;
}

uint64_t JSSource.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

JSValue sub_19F1942B8(JSValue_optional a1, JSContext a2)
{
  return JSSource.evaluate(against:in:)(a1, a2);
}

uint64_t sub_19F1942D4()
{
  return sub_19F16EB70(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t _s9JetEngine8JSSourceV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  JSValueRef v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FAB0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for JSSource();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v17 = (char *)&v28 - v16;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_19F0DEA28((uint64_t)a1, (uint64_t)&v28 - v16);
    sub_19F0DEA28((uint64_t)a2, (uint64_t)v14);
  }
  else
  {
    char v18 = sub_19F1DD44C();
    sub_19F0DEA28((uint64_t)a1, (uint64_t)v17);
    sub_19F0DEA28((uint64_t)a2, (uint64_t)v14);
    if ((v18 & 1) == 0)
    {
      sub_19F087D78((uint64_t)v14);
      sub_19F087D78((uint64_t)v17);
      char v24 = 0;
      return v24 & 1;
    }
  }
  uint64_t v19 = *(int *)(v12 + 20);
  uint64_t v20 = (uint64_t)&v14[v19];
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_19EE628D4((uint64_t)&v17[v19], (uint64_t)v11);
  sub_19EE628D4(v20, v21);
  uint64_t v22 = v29;
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  if (v23((uint64_t)v11, 1, v4) != 1)
  {
    sub_19EE628D4((uint64_t)v11, (uint64_t)v8);
    if (v23(v21, 1, v4) != 1)
    {
      uint64_t v25 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v28, v21, v4);
      sub_19EE6208C();
      char v24 = sub_19F1DBD3C();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v22 + 8);
      v26(v25, v4);
      sub_19F087D78((uint64_t)v14);
      sub_19F087D78((uint64_t)v17);
      v26(v8, v4);
      sub_19EEBD664((uint64_t)v11, (uint64_t *)&unk_1EB392E50);
      return v24 & 1;
    }
    sub_19F087D78((uint64_t)v14);
    sub_19F087D78((uint64_t)v17);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v4);
    goto LABEL_10;
  }
  sub_19F087D78((uint64_t)v14);
  sub_19F087D78((uint64_t)v17);
  if (v23(v21, 1, v4) != 1)
  {
LABEL_10:
    sub_19EEBD664((uint64_t)v11, &qword_1E946FAB0);
    char v24 = 0;
    return v24 & 1;
  }
  sub_19EEBD664((uint64_t)v11, (uint64_t *)&unk_1EB392E50);
  char v24 = 1;
  return v24 & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for JSSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_19F1DB34C();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for JSSource(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for JSSource(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_19F1DB34C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for JSSource(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_19F1DB34C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *initializeWithTake for JSSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_19F1DB34C();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for JSSource(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_19F1DB34C();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_19F194E64);
}

uint64_t sub_19F194E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for JSSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_19F194F2C);
}

uint64_t sub_19F194F2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_19F194FD8()
{
  sub_19EE23F8C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_19F195070@<X0>(void *a1@<X8>)
{
  return sub_19EFC4F14(a1);
}

uint64_t PathExpression.init(pattern:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v66 = a4;
  uint64_t v7 = sub_19F1DABEC();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_19F1DABFC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = a1;
  sub_19F1DCD2C();
  uint64_t v14 = sub_19F1962AC();
  swift_bridgeObjectRelease();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 + 16);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    id v49 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
    uint64_t v46 = 10798;
    uint64_t v47 = 0xE200000000000000;
    uint64_t v48 = v71;
LABEL_34:
    uint64_t result = (uint64_t)sub_19EF7FBBC(v46, v47, 0);
    if (!v48) {
      *uint64_t v66 = result;
    }
    return result;
  }
  uint64_t v58 = a2;
  int v59 = a3;
  char v60 = v9;
  uint64_t v61 = v13;
  uint64_t v62 = v11;
  uint64_t v63 = v10;
  uint64_t v65 = v15;
  long long v17 = (unint64_t *)(v15 + 40);
  uint64_t v69 = 12126;
  unint64_t v70 = 0xE200000000000000;
  uint64_t v18 = v71;
  while (1)
  {
    uint64_t v20 = *(v17 - 1);
    unint64_t v19 = *v17;
    BOOL v21 = v20 == 47 && v19 == 0xE100000000000000;
    if (v21 || (sub_19F1DD44C() & 1) != 0) {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v22 = sub_19F1DBFBC();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      sub_19F1DBEFC();
    }
    if (v20 == 42 && v19 == 0xE100000000000000 || (sub_19F1DD44C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      goto LABEL_4;
    }
    if ((sub_19F1DBFAC() & 1) == 0 && (sub_19F1DBFBC() & 1) == 0)
    {
      if (sub_19F1DBFAC() & 1) != 0 || (sub_19F1DBFBC())
      {
        if ((sub_19F1DBFAC() & 1) == 0 || (sub_19F1DBFBC() & 1) == 0)
        {
LABEL_37:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_19F1DABAC();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
          *(void *)(inited + 32) = sub_19F1DBD7C();
          *(void *)(inited + 40) = v51;
          uint64_t v67 = 0;
          unint64_t v68 = 0xE000000000000000;
          sub_19F1DCCEC();
          sub_19F1DBEFC();
          sub_19F1DBEFC();
          swift_bridgeObjectRelease();
          sub_19F1DBEFC();
          uint64_t v52 = v67;
          unint64_t v53 = v68;
          *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
          *(void *)(inited + 48) = v52;
          *(void *)(inited + 56) = v53;
          *(void *)(inited + 80) = sub_19F1DBD7C();
          *(void *)(inited + 88) = v54;
          *(void *)(inited + 120) = MEMORY[0x1E4FBBA00];
          uint64_t v55 = v58;
          *(void *)(inited + 96) = v64;
          *(void *)(inited + 104) = v55;
          *(unsigned char *)(inited + 112) = v59;
          sub_19EEBF898(inited);
          sub_19F0A671C();
          uint64_t v56 = v61;
          uint64_t v57 = v63;
          sub_19F1DB17C();
          sub_19F1DAB9C();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v57);
          return swift_willThrow();
        }
        sub_19F1DBEFC();
      }
      else
      {
        uint64_t v40 = self;
        uint64_t v41 = (void *)sub_19F1DBD4C();
        swift_bridgeObjectRelease();
        id v42 = objc_msgSend(v40, sel_escapedPatternForString_, v41);

        sub_19F1DBD7C();
        sub_19F1DBEFC();
      }
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if ((sub_19F1DBFAC() & 1) == 0 || (sub_19F1DBFBC() & 1) == 0) {
      goto LABEL_37;
    }
    unint64_t v23 = sub_19F196640(1uLL, v20, v19);
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t result = sub_19F1DCAFC();
    if (__OFSUB__(result, 1)) {
      break;
    }
    uint64_t v27 = sub_19F1DCAEC();
    if (v28) {
      unint64_t v29 = v25;
    }
    else {
      unint64_t v29 = v27;
    }
    uint64_t result = self;
    if (v29 >> 14 < v23 >> 14) {
      goto LABEL_39;
    }
    long long v30 = (void *)result;
    uint64_t v31 = sub_19F1DCB1C();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    MEMORY[0x19F3C6140](v31, v33, v35, v37);
    swift_bridgeObjectRelease();
    uint64_t v38 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
    id v39 = objc_msgSend(v30, sel_escapedPatternForString_, v38);

    sub_19F1DBD7C();
    uint64_t v67 = 3948328;
    unint64_t v68 = 0xE300000000000000;
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    uint64_t v18 = v71;
LABEL_4:
    v17 += 2;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      uint64_t v43 = v69;
      unint64_t v44 = v70;
      id v45 = objc_allocWithZone(MEMORY[0x1E4F28FD8]);
      uint64_t v46 = v43;
      uint64_t v47 = v44;
      uint64_t v48 = v18;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

JetEngine::PathExpression::MatchResult_optional __swiftcall PathExpression.match(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v5 = v1;
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)sub_19F1DBD4C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94717E0);
  sub_19EEA5E10((unint64_t *)&qword_1E94717E8, &qword_1E94717E0);
  sub_19EEC4910();
  uint64_t v8 = sub_19F1DCA4C();
  id v10 = objc_msgSend(v6, sel_firstMatchInString_options_range_, v7, 0, v8, v9);

  if (v10)
  {
    uint64_t v11 = (objc_class *)swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    object = 0;
  }
  *uint64_t v5 = v10;
  v5[1] = countAndFlagsBits;
  v5[2] = object;
  result.value.raw._object = v13;
  result.value.raw._uint64_t countAndFlagsBits = v12;
  result.value.base.super.Class isa = v11;
  return result;
}

uint64_t PathExpression.MatchResult.raw.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PathExpression.MatchResult.startIndex.getter()
{
  return 0;
}

char *PathExpression.MatchResult.endIndex.getter()
{
  uint64_t v1 = (char *)objc_msgSend(*v0, sel_numberOfRanges);
  BOOL v2 = __OFSUB__(v1, 1);
  JetEngine::PathExpression::MatchResult_optional result = v1 - 1;
  if (v2) {
    __break(1u);
  }
  return result;
}

Swift::Int __swiftcall PathExpression.MatchResult.index(after:)(Swift::Int after)
{
  BOOL v1 = __OFADD__(after, 1);
  Swift::Int result = after + 1;
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t PathExpression.MatchResult.subscript.getter(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v3 = *v1;
  id v4 = objc_msgSend(*v1, sel_numberOfRanges);
  if (__OFSUB__(v4, 1))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if ((uint64_t)v4 - 1 <= a1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  objc_msgSend(v3, sel_rangeAtIndex_, a1 + 1);
  sub_19F1DC73C();
  if ((v5 & 1) == 0)
  {
    uint64_t v6 = sub_19F1DC00C();
    uint64_t v7 = MEMORY[0x19F3C6140](v6);
    swift_bridgeObjectRelease();
    return v7;
  }
LABEL_9:
  uint64_t result = sub_19F1DCFCC();
  __break(1u);
  return result;
}

uint64_t PathExpression.MatchResult.subscript.getter()
{
  BOOL v1 = *v0;
  BOOL v2 = (void *)sub_19F1DBD4C();
  objc_msgSend(v1, sel_rangeWithName_, v2);

  sub_19F1DC73C();
  if (v3) {
    return 0;
  }
  uint64_t v4 = sub_19F1DC00C();
  uint64_t v5 = MEMORY[0x19F3C6140](v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t PathExpression.MatchResult.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_19F1DABEC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_19F1DABFC();
  uint64_t v26 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + 8);
  uint64_t v10 = *(void *)(v2 + 16);
  id v11 = *(id *)v2;
  swift_bridgeObjectRetain();
  v23[1] = a1;
  _OWORD v23[2] = a2;
  uint64_t v12 = (void *)sub_19F1DBD4C();
  objc_msgSend(v11, sel_rangeWithName_, v12);

  sub_19F1DC73C();
  if (v13)
  {
    swift_bridgeObjectRelease();

    sub_19F1DABAC();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
    *(void *)(inited + 32) = sub_19F1DBD7C();
    *(void *)(inited + 40) = v18;
    unint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    unint64_t v24 = 0xD000000000000019;
    unint64_t v25 = 0x800000019F275320;
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    unint64_t v19 = v24;
    unint64_t v20 = v25;
    uint64_t v21 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v19;
    *(void *)(inited + 56) = v20;
    *(void *)(inited + 80) = sub_19F1DBD7C();
    *(void *)(inited + 88) = v22;
    *(void *)(inited + 120) = v21;
    *(void *)(inited + 96) = v9;
    *(void *)(inited + 104) = v10;
    swift_bridgeObjectRetain();
    sub_19EEBF898(inited);
    sub_19F0A671C();
    sub_19F1DB17C();
    sub_19F1DAB9C();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v6);
    return swift_willThrow();
  }
  else
  {
    uint64_t v14 = sub_19F1DC00C();
    uint64_t v15 = MEMORY[0x19F3C6140](v14);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return v15;
  }
}

uint64_t PathExpression.MatchResult.debugDescription.getter()
{
  strcpy((char *)v1, "MatchResult(");
  sub_19F1966F0();
  sub_19EEC4910();
  sub_19F1DC0AC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v1[0];
}

char *sub_19F195FA4@<X0>(void *a1@<X8>)
{
  uint64_t result = (char *)objc_msgSend(*v1, sel_numberOfRanges);
  if (__OFSUB__(result, 1)) {
    __break(1u);
  }
  else {
    *a1 = result - 1;
  }
  return result;
}

uint64_t (*sub_19F195FE4(uint64_t *a1, uint64_t *a2))()
{
  uint64_t matched = PathExpression.MatchResult.subscript.getter(*a2);
  a1[1] = v4;
  a1[2] = v4;
  *a1 = matched;
  return destroy for DynamicImpressionsTracker.Configuration;
}

char *sub_19F196030@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = *(void *)(v2 + 8);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t result = (char *)objc_msgSend(v6, sel_numberOfRanges);
  uint64_t v10 = (uint64_t)(result - 1);
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v10 < 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v5 < 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v10 < v4)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  *a2 = v5;
  a2[1] = v4;
  id v11 = v6;
  return (char *)swift_bridgeObjectRetain();
}

char *sub_19F1960C8@<X0>(void *a1@<X8>)
{
  char v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = 0;
  id v6 = v3;
  swift_bridgeObjectRetain();
  uint64_t result = (char *)objc_msgSend(v6, sel_numberOfRanges);
  if (__OFSUB__(result, 1)) {
    __break(1u);
  }
  else {
    a1[4] = result - 1;
  }
  return result;
}

id sub_19F196130()
{
  id result = objc_msgSend(*v0, sel_numberOfRanges);
  if (!__OFSUB__(result, 1)) {
    return (id)(result == (id)1);
  }
  __break(1u);
  return result;
}

uint64_t sub_19F19616C()
{
  strcpy((char *)v1, "MatchResult(");
  sub_19F1966F0();
  sub_19EEC4910();
  sub_19F1DC0AC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v1[0];
}

char *sub_19F19621C()
{
  uint64_t v1 = (char *)objc_msgSend(*v0, sel_numberOfRanges);
  BOOL v2 = __OFSUB__(v1, 1);
  id result = v1 - 1;
  if (v2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (((unint64_t)result & 0x8000000000000000) != 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t *sub_19F196254()
{
  uint64_t v1 = *(void **)v0;
  BOOL v2 = sub_19EF9EA9C(*(void **)v0, *(void *)(v0 + 8), *(void *)(v0 + 16));
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_19F1962A0(void *a1, uint64_t *a2, uint64_t a3)
{
  return sub_19EF9DAA8(a1, a2, a3, *(id *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16));
}

uint64_t sub_19F1962AC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v0 - 8);
  BOOL v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_19F1DB34C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB01C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB00C();
  sub_19F1DAFFC();
  swift_bridgeObjectRetain();
  sub_19F1DAFAC();
  sub_19F1DAF6C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_19EE6293C((uint64_t)v2);
    uint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    uint64_t v11 = sub_19F1DB22C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

unint64_t PathExpression.debugDescription.getter()
{
  id v1 = objc_msgSend(*v0, sel_pattern);
  sub_19F1DBD7C();

  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return 0xD000000000000018;
}

unint64_t sub_19F1965A0()
{
  id v1 = objc_msgSend(*v0, sel_pattern);
  sub_19F1DBD7C();

  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return 0xD000000000000018;
}

unint64_t sub_19F196640(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  id result = sub_19F1DBEDC();
  if (v6) {
    id result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_19F1DC00C();
}

unint64_t sub_19F1966F0()
{
  unint64_t result = qword_1E9476490;
  if (!qword_1E9476490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476490);
  }
  return result;
}

uint64_t sub_19F196748()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_19F196754()
{
  return sub_19EEA5E10(&qword_1E9476498, &qword_1E94764A0);
}

uint64_t sub_19F196790()
{
  return sub_19EEA5E10(&qword_1E94764A8, &qword_1E94764B0);
}

uint64_t sub_19F1967CC()
{
  return sub_19EEA5E10(&qword_1E94764B8, &qword_1E94764C0);
}

ValueMetadata *type metadata accessor for PathExpression()
{
  return &type metadata for PathExpression;
}

void *sub_19F19681C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PathExpression.MatchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PathExpression.MatchResult(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PathExpression.MatchResult()
{
  return &type metadata for PathExpression.MatchResult;
}

uint64_t sub_19F196918(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    unint64_t v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1)) {
      unint64_t v3 = a2 - 1;
    }
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL)) {
      unint64_t v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v4 = v3 + 1;
    if (v4 >= 5)
    {
      uint64_t v7 = v4 & 3;
      if ((v4 & 3) == 0) {
        uint64_t v7 = 4;
      }
      unint64_t v5 = v4 - v7;
      int64x2_t v8 = 0uLL;
      int64x2_t v9 = (int64x2_t)(unint64_t)result;
      int64x2_t v10 = vdupq_n_s64(1uLL);
      unint64_t v11 = v5;
      do
      {
        int64x2_t v8 = vaddq_s64(v8, v10);
        int64x2_t v9 = vaddq_s64(v9, v10);
        v11 -= 4;
      }
      while (v11);
      uint64_t v6 = vaddvq_s64(vaddq_s64(vzip2q_s64(v9, v8), vzip1q_s64(v9, v8)));
    }
    else
    {
      unint64_t v5 = 0;
      uint64_t v6 = result;
    }
    uint64_t v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v13 = v5 + result - a3;
    uint64_t v14 = a2 - v5;
    unint64_t result = v6;
    while (1)
    {
      if (!v13) {
        return 0;
      }
      if (!v12) {
        break;
      }
      ++result;
      ++v12;
      ++v13;
      if (!--v14) {
        return result;
      }
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t JSONObject.decode<A>(_:using:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  swift_bridgeObjectRetain();
  uint64_t v2 = _sSD9JetEngines17CodingUserInfoKeyVRszypRs_rlE11jsonContextSDyACypGAA11JSONContextV_tcfC_0(&v4);
  JSONObject.decode<A>(_:withUserInfo:)(v2, v2);
  return swift_bridgeObjectRelease();
}

uint64_t JSONObject.decode<A>(_:withUserInfo:)(uint64_t a1, uint64_t a2)
{
  sub_19EEC355C(v2, (uint64_t)v6);
  uint64_t v7 = a2;
  uint64_t v8 = MEMORY[0x1E4FBC860];
  sub_19EE70560();
  uint64_t v5 = swift_allocObject();
  sub_19EE70470((uint64_t)v6, v5 + 16);
  swift_bridgeObjectRetain();
  sub_19F1DC59C();
  return sub_19EE703B4((uint64_t)v6);
}

void static JSONContext.Property<A>.enableStrictKeyChecking.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000002BLL;
  a1[1] = 0x800000019F26B930;
}

uint64_t sub_19F196B54()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

void sub_19F196BA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v44;
  if ((void)v44)
  {
    *(void *)&long long v44 = 0;
    *((void *)&v44 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    v8(&v44);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      *(void *)&long long v44 = 0;
      *((void *)&v44 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      long long v9 = v44;
      os_log_type_t v10 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_19F1DCA7C();
      if (os_log_type_enabled(v11, v10))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        *(void *)&long long v44 = v13;
        *(_DWORD *)uint64_t v12 = 136446722;
        uint64_t v14 = sub_19F1DCD2C();
        sub_19EEAD23C(v14, v15, (uint64_t *)&v44);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v12 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v41 = sub_19EEAD23C(v9, *((unint64_t *)&v9 + 1), (uint64_t *)&v44);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v11, v10, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v12, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v13, -1, -1);
        MEMORY[0x19F3C9470](v12, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v16 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_19F24EAD0;
      id v18 = v16;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v19._uint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v19);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v47 = a1;
      *((void *)&v47 + 1) = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v47, (uint64_t)v43);
      long long v41 = 0u;
      long long v42 = 0u;
      sub_19EEC3E70((uint64_t)v43, (uint64_t)&v41);
      char v46 = 0;
      long long v44 = v41;
      long long v45 = v42;
      unint64_t v20 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v20 = sub_19EEC3F3C(0, v20[2] + 1, 1, v20);
      }
      unint64_t v22 = v20[2];
      unint64_t v21 = v20[3];
      if (v22 >= v21 >> 1) {
        unint64_t v20 = sub_19EEC3F3C((void *)(v21 > 1), v22 + 1, 1, v20);
      }
      id v20[2] = v22 + 1;
      unint64_t v23 = &v20[5 * v22];
      long long v24 = v44;
      long long v25 = v45;
      *((unsigned char *)v23 + 64) = v46;
      *((_OWORD *)v23 + 2) = v24;
      *((_OWORD *)v23 + 3) = v25;
      uint64_t v50 = v20;
      sub_19EEBCB4C((uint64_t)&v47);
      v26._uint64_t countAndFlagsBits = 58;
      v26._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      *(void *)&long long v47 = a4;
      sub_19EEBCD00((uint64_t)&v47, (uint64_t)v43);
      long long v41 = 0u;
      long long v42 = 0u;
      sub_19EEC3E70((uint64_t)v43, (uint64_t)&v41);
      char v46 = 0;
      long long v44 = v41;
      long long v45 = v42;
      uint64_t v27 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_19EEC3F3C(0, v27[2] + 1, 1, v27);
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1) {
        uint64_t v27 = sub_19EEC3F3C((void *)(v28 > 1), v29 + 1, 1, v27);
      }
      v27[2] = v29 + 1;
      long long v30 = &v27[5 * v29];
      long long v31 = v44;
      long long v32 = v45;
      *((unsigned char *)v30 + 64) = v46;
      *((_OWORD *)v30 + 2) = v31;
      *((_OWORD *)v30 + 3) = v32;
      uint64_t v50 = v27;
      sub_19EEBCB4C((uint64_t)&v47);
      v33._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v33._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      *(void *)&long long v44 = 0;
      *((void *)&v44 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      long long v47 = v44;
      sub_19EEBCD00((uint64_t)&v47, (uint64_t)v43);
      long long v41 = 0u;
      long long v42 = 0u;
      sub_19EEC3E70((uint64_t)v43, (uint64_t)&v41);
      char v46 = 0;
      long long v44 = v41;
      long long v45 = v42;
      uint64_t v34 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v34 = sub_19EEC3F3C(0, v34[2] + 1, 1, v34);
      }
      unint64_t v36 = v34[2];
      unint64_t v35 = v34[3];
      if (v36 >= v35 >> 1) {
        uint64_t v34 = sub_19EEC3F3C((void *)(v35 > 1), v36 + 1, 1, v34);
      }
      _OWORD v34[2] = v36 + 1;
      uint64_t v37 = &v34[5 * v36];
      long long v38 = v44;
      long long v39 = v45;
      *((unsigned char *)v37 + 64) = v46;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      uint64_t v50 = v34;
      sub_19EEBCB4C((uint64_t)&v47);
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      *(void *)(v17 + 32) = v50;
      *(void *)&long long v44 = v18;
      LOBYTE(v41) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v17, (JetEngine::LogMessageLevel)&v41);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F197398(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000080;
    *((void *)&v43 + 1) = 0x800000019F275DA0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000080, 0x800000019F275DA0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      unint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        Swift::String v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        Swift::String v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000080;
      unint64_t v47 = 0x800000019F275DA0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        Swift::String v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1979DC(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000024;
    *((void *)&v43 + 1) = 0x800000019F2756C0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000024, 0x800000019F2756C0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      unint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        Swift::String v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        Swift::String v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000024;
      unint64_t v47 = 0x800000019F2756C0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        Swift::String v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F198020(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000095;
    *((void *)&v43 + 1) = 0x800000019F275B00;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000095, 0x800000019F275B00, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      unint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        Swift::String v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        Swift::String v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000095;
      unint64_t v47 = 0x800000019F275B00;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        Swift::String v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F198664(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000001ALL;
    *((void *)&v43 + 1) = 0x800000019F275BA0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000001ALL, 0x800000019F275BA0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      unint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        Swift::String v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        Swift::String v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000001ALL;
      unint64_t v47 = 0x800000019F275BA0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        Swift::String v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F198CA8(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000090;
    *((void *)&v43 + 1) = 0x800000019F275A60;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000090, 0x800000019F275A60, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      unint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        Swift::String v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        Swift::String v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000090;
      unint64_t v47 = 0x800000019F275A60;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      Swift::String v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        Swift::String v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1992EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_19F199308(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_19F199324(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v45;
  if ((void)v45)
  {
    *(void *)&long long v45 = 0;
    *((void *)&v45 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    swift_bridgeObjectRetain();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    v8(&v45);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      *(void *)&long long v45 = 0;
      *((void *)&v45 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_bridgeObjectRetain();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      long long v9 = v45;
      os_log_type_t v10 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_19F1DCA7C();
      os_log_type_t v12 = v10;
      if (os_log_type_enabled(v11, v10))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        *(void *)&long long v45 = v14;
        *(_DWORD *)uint64_t v13 = 136446722;
        uint64_t v15 = sub_19F1DCD2C();
        sub_19EEAD23C(v15, v16, (uint64_t *)&v45);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v13 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v42 = sub_19EEAD23C(v9, *((unint64_t *)&v9 + 1), (uint64_t *)&v45);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v11, v12, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v14, -1, -1);
        MEMORY[0x19F3C9470](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      id v17 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
      id v19 = v17;
      uint64_t v51 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t v50 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v48 = a1;
      *((void *)&v48 + 1) = a2;
      char v49 = a3;
      sub_19EEBCD00((uint64_t)&v48, (uint64_t)v44);
      long long v42 = 0u;
      long long v43 = 0u;
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v42);
      char v47 = 0;
      long long v45 = v42;
      long long v46 = v43;
      unint64_t v21 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v21 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1) {
        unint64_t v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
      }
      v21[2] = v23 + 1;
      long long v24 = &v21[5 * v23];
      long long v25 = v45;
      long long v26 = v46;
      *((unsigned char *)v24 + 64) = v47;
      *((_OWORD *)v24 + 2) = v25;
      *((_OWORD *)v24 + 3) = v26;
      uint64_t v51 = v21;
      sub_19EEBCB4C((uint64_t)&v48);
      v27._uint64_t countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t v50 = MEMORY[0x1E4FBB808];
      *(void *)&long long v48 = a4;
      sub_19EEBCD00((uint64_t)&v48, (uint64_t)v44);
      long long v42 = 0u;
      long long v43 = 0u;
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v42);
      char v47 = 0;
      long long v45 = v42;
      long long v46 = v43;
      unint64_t v28 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v28 = sub_19EEC3F3C(0, v28[2] + 1, 1, v28);
      }
      unint64_t v30 = v28[2];
      unint64_t v29 = v28[3];
      if (v30 >= v29 >> 1) {
        unint64_t v28 = sub_19EEC3F3C((void *)(v29 > 1), v30 + 1, 1, v28);
      }
      v28[2] = v30 + 1;
      long long v31 = &v28[5 * v30];
      long long v32 = v45;
      long long v33 = v46;
      *((unsigned char *)v31 + 64) = v47;
      *((_OWORD *)v31 + 2) = v32;
      *((_OWORD *)v31 + 3) = v33;
      uint64_t v51 = v28;
      sub_19EEBCB4C((uint64_t)&v48);
      v34._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v34._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      *(void *)&long long v45 = 0;
      *((void *)&v45 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_bridgeObjectRetain();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      uint64_t v50 = MEMORY[0x1E4FBB1A0];
      long long v48 = v45;
      sub_19EEBCD00((uint64_t)&v48, (uint64_t)v44);
      long long v42 = 0u;
      long long v43 = 0u;
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v42);
      char v47 = 0;
      long long v45 = v42;
      long long v46 = v43;
      unint64_t v35 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v35 = sub_19EEC3F3C(0, v35[2] + 1, 1, v35);
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1) {
        unint64_t v35 = sub_19EEC3F3C((void *)(v36 > 1), v37 + 1, 1, v35);
      }
      _OWORD v35[2] = v37 + 1;
      long long v38 = &v35[5 * v37];
      long long v39 = v45;
      long long v40 = v46;
      *((unsigned char *)v38 + 64) = v47;
      *((_OWORD *)v38 + 2) = v39;
      *((_OWORD *)v38 + 3) = v40;
      uint64_t v51 = v35;
      sub_19EEBCB4C((uint64_t)&v48);
      v41._uint64_t countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      *(void *)(v18 + 32) = v51;
      *(void *)&long long v45 = v19;
      LOBYTE(v42) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v42);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_bridgeObjectRetain();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F199BF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_19F199C14(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_19F199C30(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_19F199C4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_19F199C68(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000022;
    *((void *)&v43 + 1) = 0x800000019F275A30;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000022, 0x800000019F275A30, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000022;
      unint64_t v47 = 0x800000019F275A30;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19A2AC(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000034;
    *((void *)&v43 + 1) = 0x800000019F2756F0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000034, 0x800000019F2756F0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000034;
      unint64_t v47 = 0x800000019F2756F0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19A8F0(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000032;
    *((void *)&v43 + 1) = 0x800000019F275730;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000032, 0x800000019F275730, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000032;
      unint64_t v47 = 0x800000019F275730;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19AF34(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000027;
    *((void *)&v43 + 1) = 0x800000019F275770;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000027, 0x800000019F275770, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000027;
      unint64_t v47 = 0x800000019F275770;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19B578(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000003CLL;
    *((void *)&v43 + 1) = 0x800000019F2759F0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000003CLL, 0x800000019F2759F0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000003CLL;
      unint64_t v47 = 0x800000019F2759F0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19BBBC(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000032;
    *((void *)&v43 + 1) = 0x800000019F2759B0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000032, 0x800000019F2759B0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000032;
      unint64_t v47 = 0x800000019F2759B0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19C200(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000005CLL;
    *((void *)&v43 + 1) = 0x800000019F275530;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000005CLL, 0x800000019F275530, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000005CLL;
      unint64_t v47 = 0x800000019F275530;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19C844(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000002BLL;
    *((void *)&v43 + 1) = 0x800000019F275960;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000002BLL, 0x800000019F275960, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000002BLL;
      unint64_t v47 = 0x800000019F275960;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19CE88(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000047;
    *((void *)&v43 + 1) = 0x800000019F2757A0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000047, 0x800000019F2757A0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000047;
      unint64_t v47 = 0x800000019F2757A0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19D4CC(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000002ALL;
    *((void *)&v43 + 1) = 0x800000019F275930;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000002ALL, 0x800000019F275930, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000002ALL;
      unint64_t v47 = 0x800000019F275930;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19DB10(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000039;
    *((void *)&v43 + 1) = 0x800000019F275440;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000039, 0x800000019F275440, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000039;
      unint64_t v47 = 0x800000019F275440;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19E154(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  os_log_type_t v10 = (void (*)(long long *))v46;
  if ((void)v46)
  {
    *(void *)&long long v46 = 0;
    *((void *)&v46 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    *(void *)&long long v43 = a5;
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    v10(&v46);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v10);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      *(void *)&long long v46 = 0;
      *((void *)&v46 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v43 = a5;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      long long v11 = v46;
      os_log_type_t v12 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_19F1DCA7C();
      if (os_log_type_enabled(v13, v12))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        *(void *)&long long v46 = v15;
        *(_DWORD *)uint64_t v14 = 136446722;
        uint64_t v16 = sub_19F1DCD2C();
        sub_19EEAD23C(v16, v17, (uint64_t *)&v46);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v14 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v43 = sub_19EEAD23C(v11, *((unint64_t *)&v11 + 1), (uint64_t *)&v46);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v13, v12, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v14, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v15, -1, -1);
        MEMORY[0x19F3C9470](v14, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      Swift::String v18 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_19F24EAD0;
      id v20 = v18;
      uint64_t v52 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v21._uint64_t countAndFlagsBits = 0;
      v21._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v21);
      uint64_t v51 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v49 = a1;
      *((void *)&v49 + 1) = a2;
      char v50 = a3;
      sub_19EEBCD00((uint64_t)&v49, (uint64_t)v45);
      long long v43 = 0u;
      long long v44 = 0u;
      sub_19EEC3E70((uint64_t)v45, (uint64_t)&v43);
      char v48 = 0;
      long long v46 = v43;
      long long v47 = v44;
      unint64_t v22 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v22 = sub_19EEC3F3C(0, v22[2] + 1, 1, v22);
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1) {
        unint64_t v22 = sub_19EEC3F3C((void *)(v23 > 1), v24 + 1, 1, v22);
      }
      _OWORD v22[2] = v24 + 1;
      Swift::String v25 = &v22[5 * v24];
      long long v26 = v46;
      long long v27 = v47;
      *((unsigned char *)v25 + 64) = v48;
      *((_OWORD *)v25 + 2) = v26;
      *((_OWORD *)v25 + 3) = v27;
      uint64_t v52 = v22;
      sub_19EEBCB4C((uint64_t)&v49);
      v28._uint64_t countAndFlagsBits = 58;
      v28._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v28);
      uint64_t v51 = MEMORY[0x1E4FBB808];
      *(void *)&long long v49 = a4;
      sub_19EEBCD00((uint64_t)&v49, (uint64_t)v45);
      long long v43 = 0u;
      long long v44 = 0u;
      sub_19EEC3E70((uint64_t)v45, (uint64_t)&v43);
      char v48 = 0;
      long long v46 = v43;
      long long v47 = v44;
      unint64_t v29 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v29 = sub_19EEC3F3C(0, v29[2] + 1, 1, v29);
      }
      unint64_t v31 = v29[2];
      unint64_t v30 = v29[3];
      if (v31 >= v30 >> 1) {
        unint64_t v29 = sub_19EEC3F3C((void *)(v30 > 1), v31 + 1, 1, v29);
      }
      v29[2] = v31 + 1;
      Swift::String v32 = &v29[5 * v31];
      long long v33 = v46;
      long long v34 = v47;
      *((unsigned char *)v32 + 64) = v48;
      *((_OWORD *)v32 + 2) = v33;
      *((_OWORD *)v32 + 3) = v34;
      uint64_t v52 = v29;
      sub_19EEBCB4C((uint64_t)&v49);
      v35._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v35._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v35);
      *(void *)&long long v46 = 0;
      *((void *)&v46 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v43 = a5;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      uint64_t v51 = MEMORY[0x1E4FBB1A0];
      long long v49 = v46;
      sub_19EEBCD00((uint64_t)&v49, (uint64_t)v45);
      long long v43 = 0u;
      long long v44 = 0u;
      sub_19EEC3E70((uint64_t)v45, (uint64_t)&v43);
      char v48 = 0;
      long long v46 = v43;
      long long v47 = v44;
      unint64_t v36 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v36 = sub_19EEC3F3C(0, v36[2] + 1, 1, v36);
      }
      unint64_t v38 = v36[2];
      unint64_t v37 = v36[3];
      if (v38 >= v37 >> 1) {
        unint64_t v36 = sub_19EEC3F3C((void *)(v37 > 1), v38 + 1, 1, v36);
      }
      v36[2] = v38 + 1;
      Swift::String v39 = &v36[5 * v38];
      long long v40 = v46;
      long long v41 = v47;
      *((unsigned char *)v39 + 64) = v48;
      *((_OWORD *)v39 + 2) = v40;
      *((_OWORD *)v39 + 3) = v41;
      uint64_t v52 = v36;
      sub_19EEBCB4C((uint64_t)&v49);
      v42._uint64_t countAndFlagsBits = 0;
      v42._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v42);
      *(void *)(v19 + 32) = v52;
      *(void *)&long long v46 = v20;
      LOBYTE(v43) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v19, (JetEngine::LogMessageLevel)&v43);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19E9C0(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000004CLL;
    *((void *)&v43 + 1) = 0x800000019F2758A0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000004CLL, 0x800000019F2758A0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      char v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      uint64_t v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        uint64_t v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      char v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      char v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000004CLL;
      unint64_t v47 = 0x800000019F2758A0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      char v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19F008(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000003ALL;
    *((void *)&v43 + 1) = 0x800000019F2757F0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000003ALL, 0x800000019F2757F0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      char v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      uint64_t v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        uint64_t v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      char v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      char v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000003ALL;
      unint64_t v47 = 0x800000019F2757F0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      char v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19F64C(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000029;
    *((void *)&v43 + 1) = 0x800000019F275590;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000029, 0x800000019F275590, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      char v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      uint64_t v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        uint64_t v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      char v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      char v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000029;
      unint64_t v47 = 0x800000019F275590;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      char v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F19FC90(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD000000000000079;
    *((void *)&v43 + 1) = 0x800000019F2754B0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD000000000000079, 0x800000019F2754B0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      char v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      uint64_t v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        uint64_t v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      char v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      char v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD000000000000079;
      unint64_t v47 = 0x800000019F2754B0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      char v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1A02D4(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000002ALL;
    *((void *)&v43 + 1) = 0x800000019F275480;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000002ALL, 0x800000019F275480, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      char v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      uint64_t v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        uint64_t v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      char v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      char v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000002ALL;
      unint64_t v47 = 0x800000019F275480;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      char v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1A0918(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v45;
  if ((void)v45)
  {
    *(void *)&long long v45 = 0;
    *((void *)&v45 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DCD2C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    v8(&v45);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      *(void *)&long long v45 = 0;
      *((void *)&v45 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCD2C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      long long v9 = v45;
      os_log_type_t v10 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_19F1DCA7C();
      os_log_type_t v12 = v10;
      if (os_log_type_enabled(v11, v10))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        *(void *)&long long v45 = v14;
        *(_DWORD *)uint64_t v13 = 136446722;
        uint64_t v15 = sub_19F1DCD2C();
        sub_19EEAD23C(v15, v16, (uint64_t *)&v45);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v13 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v42 = sub_19EEAD23C(v9, *((unint64_t *)&v9 + 1), (uint64_t *)&v45);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v11, v12, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v14, -1, -1);
        MEMORY[0x19F3C9470](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      id v17 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_19F24EAD0;
      id v19 = v17;
      uint64_t v51 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v20);
      uint64_t v50 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v48 = a1;
      *((void *)&v48 + 1) = a2;
      char v49 = a3;
      sub_19EEBCD00((uint64_t)&v48, (uint64_t)v44);
      long long v42 = 0u;
      long long v43 = 0u;
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v42);
      char v47 = 0;
      long long v45 = v42;
      long long v46 = v43;
      unint64_t v21 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v21 = sub_19EEC3F3C(0, v21[2] + 1, 1, v21);
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1) {
        unint64_t v21 = sub_19EEC3F3C((void *)(v22 > 1), v23 + 1, 1, v21);
      }
      v21[2] = v23 + 1;
      long long v24 = &v21[5 * v23];
      long long v25 = v45;
      long long v26 = v46;
      *((unsigned char *)v24 + 64) = v47;
      *((_OWORD *)v24 + 2) = v25;
      *((_OWORD *)v24 + 3) = v26;
      uint64_t v51 = v21;
      sub_19EEBCB4C((uint64_t)&v48);
      v27._uint64_t countAndFlagsBits = 58;
      v27._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v27);
      uint64_t v50 = MEMORY[0x1E4FBB808];
      *(void *)&long long v48 = a4;
      sub_19EEBCD00((uint64_t)&v48, (uint64_t)v44);
      long long v42 = 0u;
      long long v43 = 0u;
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v42);
      char v47 = 0;
      long long v45 = v42;
      long long v46 = v43;
      unint64_t v28 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v28 = sub_19EEC3F3C(0, v28[2] + 1, 1, v28);
      }
      unint64_t v30 = v28[2];
      unint64_t v29 = v28[3];
      if (v30 >= v29 >> 1) {
        unint64_t v28 = sub_19EEC3F3C((void *)(v29 > 1), v30 + 1, 1, v28);
      }
      v28[2] = v30 + 1;
      long long v31 = &v28[5 * v30];
      long long v32 = v45;
      long long v33 = v46;
      *((unsigned char *)v31 + 64) = v47;
      *((_OWORD *)v31 + 2) = v32;
      *((_OWORD *)v31 + 3) = v33;
      uint64_t v51 = v28;
      sub_19EEBCB4C((uint64_t)&v48);
      v34._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v34._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v34);
      *(void *)&long long v45 = 0;
      *((void *)&v45 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCD2C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      uint64_t v50 = MEMORY[0x1E4FBB1A0];
      long long v48 = v45;
      sub_19EEBCD00((uint64_t)&v48, (uint64_t)v44);
      long long v42 = 0u;
      long long v43 = 0u;
      sub_19EEC3E70((uint64_t)v44, (uint64_t)&v42);
      char v47 = 0;
      long long v45 = v42;
      long long v46 = v43;
      unint64_t v35 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v35 = sub_19EEC3F3C(0, v35[2] + 1, 1, v35);
      }
      unint64_t v37 = v35[2];
      unint64_t v36 = v35[3];
      if (v37 >= v36 >> 1) {
        unint64_t v35 = sub_19EEC3F3C((void *)(v36 > 1), v37 + 1, 1, v35);
      }
      _OWORD v35[2] = v37 + 1;
      long long v38 = &v35[5 * v37];
      long long v39 = v45;
      long long v40 = v46;
      *((unsigned char *)v38 + 64) = v47;
      *((_OWORD *)v38 + 2) = v39;
      *((_OWORD *)v38 + 3) = v40;
      uint64_t v51 = v35;
      sub_19EEBCB4C((uint64_t)&v48);
      v41._uint64_t countAndFlagsBits = 0;
      v41._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v41);
      *(void *)(v18 + 32) = v51;
      *(void *)&long long v45 = v19;
      LOBYTE(v42) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v18, (JetEngine::LogMessageLevel)&v42);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCD2C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1A1230(unint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v8 = (void (*)(long long *))v43;
  if ((void)v43)
  {
    *(void *)&long long v43 = 0xD00000000000001FLL;
    *((void *)&v43 + 1) = 0x800000019F2753A0;
    v8(&v43);
    sub_19EE83660((uint64_t)v8);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v43 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v43);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        *(void *)&long long v40 = sub_19EEAD23C(0xD00000000000001FLL, 0x800000019F2753A0, (uint64_t *)&v43);
        sub_19F1DCB3C();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v17 = v15;
      uint64_t v50 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v49 = MEMORY[0x1E4FBBA00];
      unint64_t v46 = a1;
      unint64_t v47 = a2;
      char v48 = a3;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      id v19 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        id v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      unint64_t v22 = &v19[5 * v21];
      long long v23 = v43;
      long long v24 = v44;
      *((unsigned char *)v22 + 64) = v45;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      uint64_t v50 = v19;
      sub_19EEBCB4C((uint64_t)&v46);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v49 = MEMORY[0x1E4FBB808];
      unint64_t v46 = a4;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v26 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        long long v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      unint64_t v29 = &v26[5 * v28];
      long long v30 = v43;
      long long v31 = v44;
      *((unsigned char *)v29 + 64) = v45;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v50 = v26;
      sub_19EEBCB4C((uint64_t)&v46);
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v32._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v49 = MEMORY[0x1E4FBB1A0];
      unint64_t v46 = 0xD00000000000001FLL;
      unint64_t v47 = 0x800000019F2753A0;
      sub_19EEBCD00((uint64_t)&v46, (uint64_t)v42);
      long long v40 = 0u;
      long long v41 = 0u;
      sub_19EEC3E70((uint64_t)v42, (uint64_t)&v40);
      char v45 = 0;
      long long v43 = v40;
      long long v44 = v41;
      long long v33 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        long long v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      unint64_t v36 = &v33[5 * v35];
      long long v37 = v43;
      long long v38 = v44;
      *((unsigned char *)v36 + 64) = v45;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v50 = v33;
      sub_19EEBCB4C((uint64_t)&v46);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v16 + 32) = v50;
      *(void *)&long long v43 = v17;
      LOBYTE(v40) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v16, (JetEngine::LogMessageLevel)&v40);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void requirementFailure(_:file:line:)(uint64_t (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_19F1DD95C();
  uint64_t v12 = (void (*)(long long *))v53;
  if ((void)v53)
  {
    *(void *)&long long v53 = ((uint64_t (*)(uint64_t))a1)(v11);
    *((void *)&v53 + 1) = v13;
    v12(&v53);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v12);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      uint64_t v11 = swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      uint64_t v14 = a1();
      unint64_t v16 = v15;
      os_log_type_t v17 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      Swift::String v18 = sub_19F1DCA7C();
      if (os_log_type_enabled(v18, v17))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v20 = swift_slowAlloc();
        *(void *)&long long v53 = v20;
        *(_DWORD *)uint64_t v19 = 136446722;
        uint64_t v21 = sub_19F1DCD2C();
        sub_19EEAD23C(v21, v22, (uint64_t *)&v53);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v19 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v50 = sub_19EEAD23C(v14, v16, (uint64_t *)&v53);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v18, v17, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v20, -1, -1);
        MEMORY[0x19F3C9470](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      long long v23 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_19F24EAD0;
      id v25 = v23;
      char v60 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v26._uint64_t countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t v59 = MEMORY[0x1E4FBBA00];
      uint64_t v56 = a3;
      uint64_t v57 = a4;
      char v58 = a5;
      sub_19EEBCD00((uint64_t)&v56, (uint64_t)v52);
      long long v50 = 0u;
      long long v51 = 0u;
      sub_19EEC3E70((uint64_t)v52, (uint64_t)&v50);
      char v55 = 0;
      long long v53 = v50;
      long long v54 = v51;
      unint64_t v27 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v27 = sub_19EEC3F3C(0, v27[2] + 1, 1, v27);
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1) {
        unint64_t v27 = sub_19EEC3F3C((void *)(v28 > 1), v29 + 1, 1, v27);
      }
      v27[2] = v29 + 1;
      long long v30 = &v27[5 * v29];
      long long v31 = v53;
      long long v32 = v54;
      *((unsigned char *)v30 + 64) = v55;
      *((_OWORD *)v30 + 2) = v31;
      *((_OWORD *)v30 + 3) = v32;
      char v60 = v27;
      sub_19EEBCB4C((uint64_t)&v56);
      v33._uint64_t countAndFlagsBits = 58;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      uint64_t v59 = MEMORY[0x1E4FBB808];
      uint64_t v56 = a6;
      sub_19EEBCD00((uint64_t)&v56, (uint64_t)v52);
      long long v50 = 0u;
      long long v51 = 0u;
      sub_19EEC3E70((uint64_t)v52, (uint64_t)&v50);
      char v55 = 0;
      long long v53 = v50;
      long long v54 = v51;
      unint64_t v34 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v34 = sub_19EEC3F3C(0, v34[2] + 1, 1, v34);
      }
      unint64_t v36 = v34[2];
      unint64_t v35 = v34[3];
      if (v36 >= v35 >> 1) {
        unint64_t v34 = sub_19EEC3F3C((void *)(v35 > 1), v36 + 1, 1, v34);
      }
      _OWORD v34[2] = v36 + 1;
      long long v37 = &v34[5 * v36];
      long long v38 = v53;
      long long v39 = v54;
      *((unsigned char *)v37 + 64) = v55;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      char v60 = v34;
      sub_19EEBCB4C((uint64_t)&v56);
      v40._object = (void *)0x800000019F275360;
      v40._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      uint64_t v41 = a1();
      uint64_t v59 = MEMORY[0x1E4FBB1A0];
      uint64_t v56 = v41;
      uint64_t v57 = v42;
      sub_19EEBCD00((uint64_t)&v56, (uint64_t)v52);
      long long v50 = 0u;
      long long v51 = 0u;
      sub_19EEC3E70((uint64_t)v52, (uint64_t)&v50);
      char v55 = 0;
      long long v53 = v50;
      long long v54 = v51;
      long long v43 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v43 = sub_19EEC3F3C(0, v43[2] + 1, 1, v43);
      }
      unint64_t v45 = v43[2];
      unint64_t v44 = v43[3];
      if (v45 >= v44 >> 1) {
        long long v43 = sub_19EEC3F3C((void *)(v44 > 1), v45 + 1, 1, v43);
      }
      _OWORD v43[2] = v45 + 1;
      unint64_t v46 = &v43[5 * v45];
      long long v47 = v53;
      long long v48 = v54;
      *((unsigned char *)v46 + 64) = v55;
      *((_OWORD *)v46 + 2) = v47;
      *((_OWORD *)v46 + 3) = v48;
      char v60 = v43;
      sub_19EEBCB4C((uint64_t)&v56);
      v49._uint64_t countAndFlagsBits = 0;
      v49._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v49);
      *(void *)(v24 + 32) = v60;
      *(void *)&long long v53 = v25;
      LOBYTE(v50) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v24, (JetEngine::LogMessageLevel)&v50);

      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(uint64_t))a1)(v11);
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

uint64_t withUnsatisfiedRequirementHandler(_:perform:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94764D0);
  uint64_t v7 = swift_task_localValuePush();
  a3(v7);
  swift_task_localValuePop();
  return swift_release();
}

uint64_t withUnsatisfiedRequirementHandlerAsync(_:perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  return MEMORY[0x1F4188298](sub_19F1A2014, 0, 0);
}

uint64_t sub_19F1A2014()
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  *(void *)(v0 + 16) = sub_19F1A6ED4;
  *(void *)(v0 + 24) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 48);
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19F1A219C;
  return MEMORY[0x1F41881B8](v5, v0 + 16, &unk_1E94764E8, v4, 0, 0, 0xD00000000000001CLL, 0x800000019F275380);
}

uint64_t sub_19F1A219C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  sub_19EE83660(*(void *)(v2 + 16));
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_19F0612E4;
  }
  else {
    uint64_t v3 = sub_19F04F83C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_19F1A22DC(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_19EEB8A6C;
  return v5();
}

uint64_t sub_19F1A23A8()
{
  int has_internal_content = os_variant_has_internal_content();
  uint64_t v1 = JEGestaltGetBuildVersion();
  sub_19F1DBD7C();

  if (has_internal_content) {
    char v2 = (sub_19F1A26C0() & 1) == 0;
  }
  else {
    char v2 = 2;
  }
  byte_1E94764C8 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t static RequirementFailurePolicy.active.getter@<X0>(unsigned char *a1@<X8>)
{
  if (qword_1E9470250 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = byte_1E94764C8;
  return result;
}

uint64_t sub_19F1A2494()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94764F8);
  swift_allocObject();
  uint64_t result = sub_19F1DD94C();
  qword_1E9498BA8 = result;
  return result;
}

uint64_t RequirementFailurePolicy.hash(into:)()
{
  return sub_19F1DD73C();
}

BOOL static RequirementFailurePolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RequirementFailurePolicy.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1A2570(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927C0);
    os_log_type_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    os_log_type_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F1A26C0()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_19F1DBF3C();
  if (!v1)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v2 = v0;
  uint64_t v3 = v1;
  while (1)
  {
    BOOL v5 = v3 == 0xE100000000000000;
    BOOL v6 = v3 == 0xE100000000000000 && v2 == 65;
    if (!v6)
    {
      if (sub_19F1DD44C()) {
        goto LABEL_4;
      }
      if (v2 == 90 && v3 == 0xE100000000000000) {
        break;
      }
    }
    if ((sub_19F1DD44C() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_15;
      }
      goto LABEL_19;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_19F1DBF3C();
    uint64_t v3 = v4;
    if (!v4) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  BOOL v5 = 1;
LABEL_15:
  if (sub_19F1DD44C()) {
    goto LABEL_19;
  }
  char v8 = !v5;
  if (v2 != 69) {
    char v8 = 1;
  }
  if ((v8 & 1) == 0)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return 1;
  }
  char v9 = sub_19F1DD44C();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

void sub_19F1A283C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A28A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A2910(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  int64_t v7 = (void (*)(long long *))v47;
  if ((void)v47)
  {
    *(void *)&long long v47 = 0;
    *((void *)&v47 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    *(void *)&long long v44 = a5;
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    sub_19F1DBEFC();
    v7(&v47);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v7);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      *(void *)&long long v47 = 0;
      *((void *)&v47 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v44 = a5;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      long long v8 = v47;
      os_log_type_t v9 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      os_log_type_t v10 = sub_19F1DCA7C();
      if (os_log_type_enabled(v10, v9))
      {
        uint64_t v11 = swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(void *)&long long v47 = v12;
        *(_DWORD *)uint64_t v11 = 136446722;
        uint64_t v13 = sub_19F1DCD2C();
        sub_19EEAD23C(v13, v14, (uint64_t *)&v47);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v11 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v11 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v44 = sub_19EEAD23C(v8, *((unint64_t *)&v8 + 1), (uint64_t *)&v47);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v10, v9, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v11, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v12, -1, -1);
        MEMORY[0x19F3C9470](v11, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      unint64_t v15 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_19F24EAD0;
      id v39 = v15;
      long long v53 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v17._uint64_t countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v17);
      uint64_t v52 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v50 = a1;
      *((void *)&v50 + 1) = a2;
      char v51 = a3;
      sub_19EEBCD00((uint64_t)&v50, (uint64_t)v46);
      long long v44 = 0u;
      long long v45 = 0u;
      sub_19EEC3E70((uint64_t)v46, (uint64_t)&v44);
      char v49 = 0;
      long long v47 = v44;
      long long v48 = v45;
      Swift::String v18 = v53;
      contentsOf._rawValue = (void *)v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v18 = sub_19EEC3F3C(0, v18[2] + 1, 1, v18);
      }
      unint64_t v20 = v18[2];
      unint64_t v19 = v18[3];
      if (v20 >= v19 >> 1) {
        Swift::String v18 = sub_19EEC3F3C((void *)(v19 > 1), v20 + 1, 1, v18);
      }
      v18[2] = v20 + 1;
      uint64_t v21 = &v18[5 * v20];
      long long v22 = v47;
      long long v23 = v48;
      *((unsigned char *)v21 + 64) = v49;
      *((_OWORD *)v21 + 2) = v22;
      *((_OWORD *)v21 + 3) = v23;
      long long v53 = v18;
      sub_19EEBCB4C((uint64_t)&v50);
      v24._uint64_t countAndFlagsBits = 58;
      v24._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v24);
      uint64_t v52 = MEMORY[0x1E4FBB808];
      *(void *)&long long v50 = a4;
      sub_19EEBCD00((uint64_t)&v50, (uint64_t)v46);
      long long v44 = 0u;
      long long v45 = 0u;
      sub_19EEC3E70((uint64_t)v46, (uint64_t)&v44);
      char v49 = 0;
      long long v47 = v44;
      long long v48 = v45;
      id v25 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v25 = sub_19EEC3F3C(0, v25[2] + 1, 1, v25);
      }
      unint64_t v27 = v25[2];
      unint64_t v26 = v25[3];
      if (v27 >= v26 >> 1) {
        id v25 = sub_19EEC3F3C((void *)(v26 > 1), v27 + 1, 1, v25);
      }
      JSValueRef v25[2] = v27 + 1;
      unint64_t v28 = &v25[5 * v27];
      long long v29 = v47;
      long long v30 = v48;
      *((unsigned char *)v28 + 64) = v49;
      *((_OWORD *)v28 + 2) = v29;
      *((_OWORD *)v28 + 3) = v30;
      long long v53 = v25;
      sub_19EEBCB4C((uint64_t)&v50);
      v31._object = (void *)0x800000019F275360;
      v31._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v31);
      *(void *)&long long v47 = 0;
      *((void *)&v47 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v44 = a5;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      uint64_t v52 = MEMORY[0x1E4FBB1A0];
      long long v50 = v47;
      sub_19EEBCD00((uint64_t)&v50, (uint64_t)v46);
      long long v44 = 0u;
      long long v45 = 0u;
      sub_19EEC3E70((uint64_t)v46, (uint64_t)&v44);
      char v49 = 0;
      long long v47 = v44;
      long long v48 = v45;
      long long v32 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v32 = sub_19EEC3F3C(0, v32[2] + 1, 1, v32);
      }
      unint64_t v34 = v32[2];
      unint64_t v33 = v32[3];
      if (v34 >= v33 >> 1) {
        long long v32 = sub_19EEC3F3C((void *)(v33 > 1), v34 + 1, 1, v32);
      }
      v32[2] = v34 + 1;
      unint64_t v35 = &v32[5 * v34];
      long long v36 = v47;
      long long v37 = v48;
      *((unsigned char *)v35 + 64) = v49;
      *((_OWORD *)v35 + 2) = v36;
      *((_OWORD *)v35 + 3) = v37;
      long long v53 = v32;
      sub_19EEBCB4C((uint64_t)&v50);
      v38._uint64_t countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v38);
      *((void *)contentsOf._rawValue + 4) = v53;
      *(void *)&long long v47 = v39;
      LOBYTE(v44) = 0;
      OSLogger.log(contentsOf:withLevel:)(contentsOf, (JetEngine::LogMessageLevel)&v44);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      sub_19F1DBEFC();
      swift_release();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1A31DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3244(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A32B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3314(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A337C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unint64_t *a6)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  os_log_type_t v9 = (void (*)(long long *))v48;
  if ((void)v48)
  {
    sub_19EEBDC10(0, a6);
    *(void *)&long long v48 = 0;
    *((void *)&v48 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    *(void *)&long long v45 = a5;
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    v9(&v48);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v9);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      sub_19EEBDC10(0, a6);
      *(void *)&long long v48 = 0;
      *((void *)&v48 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v45 = a5;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      long long v10 = v48;
      os_log_type_t v11 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_19F1DCA7C();
      if (os_log_type_enabled(v12, v11))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        *(void *)&long long v48 = v14;
        *(_DWORD *)uint64_t v13 = 136446722;
        uint64_t v15 = sub_19F1DCD2C();
        sub_19EEAD23C(v15, v16, (uint64_t *)&v48);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v13 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v45 = sub_19EEAD23C(v10, *((unint64_t *)&v10 + 1), (uint64_t *)&v48);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v12, v11, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v14, -1, -1);
        MEMORY[0x19F3C9470](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      Swift::String v17 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_19F24EAD0;
      id v40 = v17;
      long long v54 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v18._uint64_t countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v18);
      uint64_t v53 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v51 = a1;
      *((void *)&v51 + 1) = a2;
      char v52 = a3;
      sub_19EEBCD00((uint64_t)&v51, (uint64_t)v47);
      long long v45 = 0u;
      long long v46 = 0u;
      sub_19EEC3E70((uint64_t)v47, (uint64_t)&v45);
      char v50 = 0;
      long long v48 = v45;
      long long v49 = v46;
      unint64_t v19 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_19EEC3F3C(0, v19[2] + 1, 1, v19);
      }
      unint64_t v21 = v19[2];
      unint64_t v20 = v19[3];
      if (v21 >= v20 >> 1) {
        unint64_t v19 = sub_19EEC3F3C((void *)(v20 > 1), v21 + 1, 1, v19);
      }
      _OWORD v19[2] = v21 + 1;
      long long v22 = &v19[5 * v21];
      long long v23 = v48;
      long long v24 = v49;
      *((unsigned char *)v22 + 64) = v50;
      *((_OWORD *)v22 + 2) = v23;
      *((_OWORD *)v22 + 3) = v24;
      long long v54 = v19;
      sub_19EEBCB4C((uint64_t)&v51);
      v25._uint64_t countAndFlagsBits = 58;
      v25._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v53 = MEMORY[0x1E4FBB808];
      *(void *)&long long v51 = a4;
      sub_19EEBCD00((uint64_t)&v51, (uint64_t)v47);
      long long v45 = 0u;
      long long v46 = 0u;
      sub_19EEC3E70((uint64_t)v47, (uint64_t)&v45);
      char v50 = 0;
      long long v48 = v45;
      long long v49 = v46;
      unint64_t v26 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        unint64_t v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      long long v29 = &v26[5 * v28];
      long long v30 = v48;
      long long v31 = v49;
      *((unsigned char *)v29 + 64) = v50;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      long long v54 = v26;
      sub_19EEBCB4C((uint64_t)&v51);
      v32._object = (void *)0x800000019F275360;
      v32._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      sub_19EEBDC10(0, a6);
      *(void *)&long long v48 = 0;
      *((void *)&v48 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v45 = a5;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      uint64_t v53 = MEMORY[0x1E4FBB1A0];
      long long v51 = v48;
      sub_19EEBCD00((uint64_t)&v51, (uint64_t)v47);
      long long v45 = 0u;
      long long v46 = 0u;
      sub_19EEC3E70((uint64_t)v47, (uint64_t)&v45);
      char v50 = 0;
      long long v48 = v45;
      long long v49 = v46;
      unint64_t v33 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        unint64_t v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      long long v36 = &v33[5 * v35];
      long long v37 = v48;
      long long v38 = v49;
      *((unsigned char *)v36 + 64) = v50;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      long long v54 = v33;
      sub_19EEBCB4C((uint64_t)&v51);
      v39._uint64_t countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      *(void *)(v41 + 32) = v54;
      *(void *)&long long v48 = v40;
      LOBYTE(v45) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v41, (JetEngine::LogMessageLevel)&v45);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19EEBDC10(0, a6);
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      swift_release();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1A3CD0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3D38(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3DA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3E08(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3E70(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3ED8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3F44(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A3FAC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A4018(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(void))
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_19F1DD95C();
  os_log_type_t v11 = (void (*)(long long *))v52;
  if ((void)v52)
  {
    *(void *)&long long v52 = ((uint64_t (*)(uint64_t))a5)(v10);
    *((void *)&v52 + 1) = v12;
    v11(&v52);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v11);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      uint64_t v10 = swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      uint64_t v13 = a5();
      unint64_t v15 = v14;
      os_log_type_t v16 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      Swift::String v17 = sub_19F1DCA7C();
      if (os_log_type_enabled(v17, v16))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        *(void *)&long long v52 = v19;
        *(_DWORD *)uint64_t v18 = 136446722;
        uint64_t v20 = sub_19F1DCD2C();
        sub_19EEAD23C(v20, v21, (uint64_t *)&v52);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v18 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v49 = sub_19EEAD23C(v13, v15, (uint64_t *)&v52);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v17, v16, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v18, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v19, -1, -1);
        MEMORY[0x19F3C9470](v18, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      long long v22 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_19F24EAD0;
      id v24 = v22;
      uint64_t v59 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v25._uint64_t countAndFlagsBits = 0;
      v25._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v25);
      uint64_t v58 = MEMORY[0x1E4FBBA00];
      uint64_t v55 = a1;
      uint64_t v56 = a2;
      char v57 = a3;
      sub_19EEBCD00((uint64_t)&v55, (uint64_t)v51);
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
      char v54 = 0;
      long long v52 = v49;
      long long v53 = v50;
      unint64_t v26 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v26 = sub_19EEC3F3C(0, v26[2] + 1, 1, v26);
      }
      unint64_t v28 = v26[2];
      unint64_t v27 = v26[3];
      if (v28 >= v27 >> 1) {
        unint64_t v26 = sub_19EEC3F3C((void *)(v27 > 1), v28 + 1, 1, v26);
      }
      v26[2] = v28 + 1;
      long long v29 = &v26[5 * v28];
      long long v30 = v52;
      long long v31 = v53;
      *((unsigned char *)v29 + 64) = v54;
      *((_OWORD *)v29 + 2) = v30;
      *((_OWORD *)v29 + 3) = v31;
      uint64_t v59 = v26;
      sub_19EEBCB4C((uint64_t)&v55);
      v32._uint64_t countAndFlagsBits = 58;
      v32._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v32);
      uint64_t v58 = MEMORY[0x1E4FBB808];
      uint64_t v55 = a4;
      sub_19EEBCD00((uint64_t)&v55, (uint64_t)v51);
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
      char v54 = 0;
      long long v52 = v49;
      long long v53 = v50;
      unint64_t v33 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v33 = sub_19EEC3F3C(0, v33[2] + 1, 1, v33);
      }
      unint64_t v35 = v33[2];
      unint64_t v34 = v33[3];
      if (v35 >= v34 >> 1) {
        unint64_t v33 = sub_19EEC3F3C((void *)(v34 > 1), v35 + 1, 1, v33);
      }
      _OWORD v33[2] = v35 + 1;
      long long v36 = &v33[5 * v35];
      long long v37 = v52;
      long long v38 = v53;
      *((unsigned char *)v36 + 64) = v54;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
      uint64_t v59 = v33;
      sub_19EEBCB4C((uint64_t)&v55);
      v39._object = (void *)0x800000019F275360;
      v39._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v39);
      uint64_t v40 = a5();
      uint64_t v58 = MEMORY[0x1E4FBB1A0];
      uint64_t v55 = v40;
      uint64_t v56 = v41;
      sub_19EEBCD00((uint64_t)&v55, (uint64_t)v51);
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
      char v54 = 0;
      long long v52 = v49;
      long long v53 = v50;
      uint64_t v42 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v42 = sub_19EEC3F3C(0, v42[2] + 1, 1, v42);
      }
      unint64_t v44 = v42[2];
      unint64_t v43 = v42[3];
      if (v44 >= v43 >> 1) {
        uint64_t v42 = sub_19EEC3F3C((void *)(v43 > 1), v44 + 1, 1, v42);
      }
      _OWORD v42[2] = v44 + 1;
      long long v45 = &v42[5 * v44];
      long long v46 = v52;
      long long v47 = v53;
      *((unsigned char *)v45 + 64) = v54;
      *((_OWORD *)v45 + 2) = v46;
      *((_OWORD *)v45 + 3) = v47;
      uint64_t v59 = v42;
      sub_19EEBCB4C((uint64_t)&v55);
      v48._uint64_t countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v48);
      *(void *)(v23 + 32) = v59;
      *(void *)&long long v52 = v24;
      LOBYTE(v49) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v23, (JetEngine::LogMessageLevel)&v49);

      swift_bridgeObjectRelease();
    }
    else
    {
      ((void (*)(uint64_t))a5)(v10);
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

uint64_t sub_19F1A4690()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F1A46C8(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_19F1A46F8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  BOOL v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *BOOL v5 = v2;
  v5[1] = sub_19EEB8A6C;
  BOOL v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1E94764E0 + dword_1E94764E0);
  return v6(a1, v4);
}

unint64_t sub_19F1A47B4()
{
  unint64_t result = qword_1E94764F0;
  if (!qword_1E94764F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94764F0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for RequirementFailurePolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1A48D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RequirementFailurePolicy()
{
  return &type metadata for RequirementFailurePolicy;
}

void sub_19F1A490C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A4974(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A49E0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A4A40(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A4AA4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A4B14(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A4B88(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_19F1A4BE4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
}

void sub_19F1A4C44(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v12 = (void (*)(long long *))v51;
  if ((void)v51)
  {
    *(void *)&long long v51 = 0;
    *((void *)&v51 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    *(void *)&long long v48 = a5;
    __swift_instantiateConcreteTypeFromMangledName(a8);
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    v12(&v51);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v12);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      *(void *)&long long v51 = 0;
      *((void *)&v51 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v48 = a5;
      __swift_instantiateConcreteTypeFromMangledName(a8);
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      long long v13 = v51;
      os_log_type_t v14 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_19F1DCA7C();
      os_log_type_t v16 = v14;
      if (os_log_type_enabled(v15, v14))
      {
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        *(void *)&long long v51 = v18;
        *(_DWORD *)uint64_t v17 = 136446722;
        uint64_t v19 = sub_19F1DCD2C();
        sub_19EEAD23C(v19, v20, (uint64_t *)&v51);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v17 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v48 = sub_19EEAD23C(v13, *((unint64_t *)&v13 + 1), (uint64_t *)&v51);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v15, v16, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v17, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v18, -1, -1);
        MEMORY[0x19F3C9470](v17, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      unint64_t v21 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_19F24EAD0;
      id v45 = v21;
      char v57 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      uint64_t v56 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v54 = a1;
      *((void *)&v54 + 1) = a2;
      char v55 = a3;
      sub_19EEBCD00((uint64_t)&v54, (uint64_t)v50);
      long long v48 = 0u;
      long long v49 = 0u;
      sub_19EEC3E70((uint64_t)v50, (uint64_t)&v48);
      char v53 = 0;
      long long v51 = v48;
      long long v52 = v49;
      id v24 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v24 = sub_19EEC3F3C(0, v24[2] + 1, 1, v24);
      }
      unint64_t v26 = v24[2];
      unint64_t v25 = v24[3];
      if (v26 >= v25 >> 1) {
        id v24 = sub_19EEC3F3C((void *)(v25 > 1), v26 + 1, 1, v24);
      }
      size_t v24[2] = v26 + 1;
      unint64_t v27 = &v24[5 * v26];
      long long v28 = v51;
      long long v29 = v52;
      *((unsigned char *)v27 + 64) = v53;
      *((_OWORD *)v27 + 2) = v28;
      *((_OWORD *)v27 + 3) = v29;
      char v57 = v24;
      sub_19EEBCB4C((uint64_t)&v54);
      v30._uint64_t countAndFlagsBits = 58;
      v30._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t v56 = MEMORY[0x1E4FBB808];
      *(void *)&long long v54 = a4;
      sub_19EEBCD00((uint64_t)&v54, (uint64_t)v50);
      long long v48 = 0u;
      long long v49 = 0u;
      sub_19EEC3E70((uint64_t)v50, (uint64_t)&v48);
      char v53 = 0;
      long long v51 = v48;
      long long v52 = v49;
      long long v31 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v31 = sub_19EEC3F3C(0, v31[2] + 1, 1, v31);
      }
      unint64_t v33 = v31[2];
      unint64_t v32 = v31[3];
      if (v33 >= v32 >> 1) {
        long long v31 = sub_19EEC3F3C((void *)(v32 > 1), v33 + 1, 1, v31);
      }
      _OWORD v31[2] = v33 + 1;
      unint64_t v34 = &v31[5 * v33];
      long long v35 = v51;
      long long v36 = v52;
      *((unsigned char *)v34 + 64) = v53;
      *((_OWORD *)v34 + 2) = v35;
      *((_OWORD *)v34 + 3) = v36;
      char v57 = v31;
      sub_19EEBCB4C((uint64_t)&v54);
      v37._object = (void *)0x800000019F275360;
      v37._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      *(void *)&long long v51 = 0;
      *((void *)&v51 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v48 = a5;
      __swift_instantiateConcreteTypeFromMangledName(a8);
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      uint64_t v56 = MEMORY[0x1E4FBB1A0];
      long long v54 = v51;
      sub_19EEBCD00((uint64_t)&v54, (uint64_t)v50);
      long long v48 = 0u;
      long long v49 = 0u;
      sub_19EEC3E70((uint64_t)v50, (uint64_t)&v48);
      char v53 = 0;
      long long v51 = v48;
      long long v52 = v49;
      long long v38 = v57;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v38 = sub_19EEC3F3C(0, v38[2] + 1, 1, v38);
      }
      unint64_t v40 = v38[2];
      unint64_t v39 = v38[3];
      if (v40 >= v39 >> 1) {
        long long v38 = sub_19EEC3F3C((void *)(v39 > 1), v40 + 1, 1, v38);
      }
      _OWORD v38[2] = v40 + 1;
      uint64_t v41 = &v38[5 * v40];
      long long v42 = v51;
      long long v43 = v52;
      *((unsigned char *)v41 + 64) = v53;
      *((_OWORD *)v41 + 2) = v42;
      *((_OWORD *)v41 + 3) = v43;
      char v57 = v38;
      sub_19EEBCB4C((uint64_t)&v54);
      v44._uint64_t countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      *(void *)(v22 + 32) = v57;
      *(void *)&long long v51 = v45;
      LOBYTE(v48) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v22, (JetEngine::LogMessageLevel)&v48);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      __swift_instantiateConcreteTypeFromMangledName(a8);
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      sub_19F1DD98C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DBEFC();
      swift_release();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1A553C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A55B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A5628(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A5690(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A56FC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  os_log_type_t v16 = (void (*)(long long *))v52;
  if ((void)v52)
  {
    *(void *)&long long v52 = 0;
    *((void *)&v52 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    long long v49 = v52;
    sub_19F1DBEFC();
    *(void *)&long long v53 = a7;
    *((void *)&v53 + 1) = a8;
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    v16(&v52);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v16);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      *(void *)&long long v52 = 0;
      *((void *)&v52 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      long long v49 = v52;
      sub_19F1DBEFC();
      *(void *)&long long v52 = a5;
      *((void *)&v52 + 1) = a6;
      *(void *)&long long v53 = a7;
      *((void *)&v53 + 1) = a8;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      long long v17 = v49;
      os_log_type_t v18 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_19F1DCA7C();
      if (os_log_type_enabled(v19, v18))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        *(void *)&long long v52 = v21;
        *(_DWORD *)uint64_t v20 = 136446722;
        uint64_t v22 = sub_19F1DCD2C();
        sub_19EEAD23C(v22, v23, (uint64_t *)&v52);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v20 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v49 = sub_19EEAD23C(v17, *((unint64_t *)&v17 + 1), (uint64_t *)&v52);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v19, v18, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v20, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v21, -1, -1);
        MEMORY[0x19F3C9470](v20, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      id v24 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_19F24EAD0;
      id v48 = v24;
      uint64_t v58 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v26._uint64_t countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v26);
      uint64_t v57 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v55 = a1;
      *((void *)&v55 + 1) = a2;
      char v56 = a3;
      sub_19EEBCD00((uint64_t)&v55, (uint64_t)v51);
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
      char v54 = 0;
      long long v52 = v49;
      long long v53 = v50;
      unint64_t v27 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v27 = sub_19EEC3F3C(0, v27[2] + 1, 1, v27);
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      if (v29 >= v28 >> 1) {
        unint64_t v27 = sub_19EEC3F3C((void *)(v28 > 1), v29 + 1, 1, v27);
      }
      v27[2] = v29 + 1;
      Swift::String v30 = &v27[5 * v29];
      long long v31 = v52;
      long long v32 = v53;
      *((unsigned char *)v30 + 64) = v54;
      *((_OWORD *)v30 + 2) = v31;
      *((_OWORD *)v30 + 3) = v32;
      uint64_t v58 = v27;
      sub_19EEBCB4C((uint64_t)&v55);
      v33._uint64_t countAndFlagsBits = 58;
      v33._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v33);
      uint64_t v57 = MEMORY[0x1E4FBB808];
      *(void *)&long long v55 = a4;
      sub_19EEBCD00((uint64_t)&v55, (uint64_t)v51);
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
      char v54 = 0;
      long long v52 = v49;
      long long v53 = v50;
      unint64_t v34 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v34 = sub_19EEC3F3C(0, v34[2] + 1, 1, v34);
      }
      unint64_t v36 = v34[2];
      unint64_t v35 = v34[3];
      if (v36 >= v35 >> 1) {
        unint64_t v34 = sub_19EEC3F3C((void *)(v35 > 1), v36 + 1, 1, v34);
      }
      _OWORD v34[2] = v36 + 1;
      Swift::String v37 = &v34[5 * v36];
      long long v38 = v52;
      long long v39 = v53;
      *((unsigned char *)v37 + 64) = v54;
      *((_OWORD *)v37 + 2) = v38;
      *((_OWORD *)v37 + 3) = v39;
      uint64_t v58 = v34;
      sub_19EEBCB4C((uint64_t)&v55);
      v40._object = (void *)0x800000019F275360;
      v40._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      LogMessage.StringInterpolation.appendLiteral(_:)(v40);
      *(void *)&long long v52 = 0;
      *((void *)&v52 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      long long v49 = v52;
      sub_19F1DBEFC();
      *(void *)&long long v52 = a5;
      *((void *)&v52 + 1) = a6;
      *(void *)&long long v53 = a7;
      *((void *)&v53 + 1) = a8;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      uint64_t v57 = MEMORY[0x1E4FBB1A0];
      long long v55 = v49;
      sub_19EEBCD00((uint64_t)&v55, (uint64_t)v51);
      long long v49 = 0u;
      long long v50 = 0u;
      sub_19EEC3E70((uint64_t)v51, (uint64_t)&v49);
      char v54 = 0;
      long long v52 = v49;
      long long v53 = v50;
      uint64_t v41 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v41 = sub_19EEC3F3C(0, v41[2] + 1, 1, v41);
      }
      unint64_t v43 = v41[2];
      unint64_t v42 = v41[3];
      if (v43 >= v42 >> 1) {
        uint64_t v41 = sub_19EEC3F3C((void *)(v42 > 1), v43 + 1, 1, v41);
      }
      _OWORD v41[2] = v43 + 1;
      Swift::String v44 = &v41[5 * v43];
      long long v45 = v52;
      long long v46 = v53;
      *((unsigned char *)v44 + 64) = v54;
      *((_OWORD *)v44 + 2) = v45;
      *((_OWORD *)v44 + 3) = v46;
      uint64_t v58 = v41;
      sub_19EEBCB4C((uint64_t)&v55);
      v47._uint64_t countAndFlagsBits = 0;
      v47._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v47);
      *(void *)(v25 + 32) = v58;
      *(void *)&long long v52 = v48;
      LOBYTE(v49) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v25, (JetEngine::LogMessageLevel)&v49);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

void sub_19F1A5F9C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6010(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6088(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A60EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6154(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A61BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6228(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6290(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6300(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6368(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A63D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A643C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A64A8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6510(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A657C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A65E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
}

void sub_19F1A6650(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (qword_1E9470258 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v12 = (void (*)(long long *))v48;
  if ((void)v48)
  {
    *(void *)&long long v48 = 0;
    *((void *)&v48 + 1) = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    *(void *)&long long v45 = a5;
    *((void *)&v45 + 1) = a6;
    sub_19F1DCF4C();
    sub_19F1DBEFC();
    v12(&v48);
    swift_bridgeObjectRelease();
    sub_19EE83660((uint64_t)v12);
  }
  else
  {
    if (qword_1E9470250 != -1) {
      swift_once();
    }
    if (byte_1E94764C8 == 1)
    {
      *(void *)&long long v48 = 0;
      *((void *)&v48 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v45 = a5;
      *((void *)&v45 + 1) = a6;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      long long v13 = v48;
      os_log_type_t v14 = sub_19F1DC7DC();
      sub_19EEBDC10(0, (unint64_t *)&qword_1EB3931F8);
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_19F1DCA7C();
      if (os_log_type_enabled(v15, v14))
      {
        uint64_t v16 = swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        *(void *)&long long v48 = v17;
        *(_DWORD *)uint64_t v16 = 136446722;
        uint64_t v18 = sub_19F1DCD2C();
        sub_19EEAD23C(v18, v19, (uint64_t *)&v48);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2050;
        sub_19F1DCB3C();
        *(_WORD *)(v16 + 22) = 2082;
        swift_bridgeObjectRetain();
        *(void *)&long long v45 = sub_19EEAD23C(v13, *((unint64_t *)&v13 + 1), (uint64_t *)&v48);
        sub_19F1DCB3C();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_19EE14000, v15, v14, "%{public}s:%{public}lu: Requirement unsatisfied: %{public}s", (uint8_t *)v16, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x19F3C9470](v17, -1, -1);
        MEMORY[0x19F3C9470](v16, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
    else if (byte_1E94764C8 == 2)
    {
      if (qword_1E946F668 != -1) {
        swift_once();
      }
      uint64_t v20 = (void *)qword_1E946F658;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_19F24EAD0;
      id v22 = v20;
      char v54 = sub_19EEC3F3C(0, 31, 0, MEMORY[0x1E4FBC860]);
      v23._uint64_t countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v23);
      uint64_t v53 = MEMORY[0x1E4FBBA00];
      *(void *)&long long v51 = a1;
      *((void *)&v51 + 1) = a2;
      char v52 = a3;
      sub_19EEBCD00((uint64_t)&v51, (uint64_t)v47);
      long long v45 = 0u;
      long long v46 = 0u;
      sub_19EEC3E70((uint64_t)v47, (uint64_t)&v45);
      char v50 = 0;
      long long v48 = v45;
      long long v49 = v46;
      id v24 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v24 = sub_19EEC3F3C(0, v24[2] + 1, 1, v24);
      }
      unint64_t v26 = v24[2];
      unint64_t v25 = v24[3];
      if (v26 >= v25 >> 1) {
        id v24 = sub_19EEC3F3C((void *)(v25 > 1), v26 + 1, 1, v24);
      }
      size_t v24[2] = v26 + 1;
      unint64_t v27 = &v24[5 * v26];
      long long v28 = v48;
      long long v29 = v49;
      *((unsigned char *)v27 + 64) = v50;
      *((_OWORD *)v27 + 2) = v28;
      *((_OWORD *)v27 + 3) = v29;
      char v54 = v24;
      sub_19EEBCB4C((uint64_t)&v51);
      v30._uint64_t countAndFlagsBits = 58;
      v30._object = (void *)0xE100000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v30);
      uint64_t v53 = MEMORY[0x1E4FBB808];
      *(void *)&long long v51 = a4;
      sub_19EEBCD00((uint64_t)&v51, (uint64_t)v47);
      long long v45 = 0u;
      long long v46 = 0u;
      sub_19EEC3E70((uint64_t)v47, (uint64_t)&v45);
      char v50 = 0;
      long long v48 = v45;
      long long v49 = v46;
      long long v31 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v31 = sub_19EEC3F3C(0, v31[2] + 1, 1, v31);
      }
      unint64_t v33 = v31[2];
      unint64_t v32 = v31[3];
      if (v33 >= v32 >> 1) {
        long long v31 = sub_19EEC3F3C((void *)(v32 > 1), v33 + 1, 1, v31);
      }
      _OWORD v31[2] = v33 + 1;
      unint64_t v34 = &v31[5 * v33];
      long long v35 = v48;
      long long v36 = v49;
      *((unsigned char *)v34 + 64) = v50;
      *((_OWORD *)v34 + 2) = v35;
      *((_OWORD *)v34 + 3) = v36;
      char v54 = v31;
      sub_19EEBCB4C((uint64_t)&v51);
      v37._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      v37._object = (void *)0x800000019F275360;
      LogMessage.StringInterpolation.appendLiteral(_:)(v37);
      *(void *)&long long v48 = 0;
      *((void *)&v48 + 1) = 0xE000000000000000;
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      *(void *)&long long v45 = a5;
      *((void *)&v45 + 1) = a6;
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      uint64_t v53 = MEMORY[0x1E4FBB1A0];
      long long v51 = v48;
      sub_19EEBCD00((uint64_t)&v51, (uint64_t)v47);
      long long v45 = 0u;
      long long v46 = 0u;
      sub_19EEC3E70((uint64_t)v47, (uint64_t)&v45);
      char v50 = 0;
      long long v48 = v45;
      long long v49 = v46;
      long long v38 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v38 = sub_19EEC3F3C(0, v38[2] + 1, 1, v38);
      }
      unint64_t v40 = v38[2];
      unint64_t v39 = v38[3];
      if (v40 >= v39 >> 1) {
        long long v38 = sub_19EEC3F3C((void *)(v39 > 1), v40 + 1, 1, v38);
      }
      _OWORD v38[2] = v40 + 1;
      uint64_t v41 = &v38[5 * v40];
      long long v42 = v48;
      long long v43 = v49;
      *((unsigned char *)v41 + 64) = v50;
      *((_OWORD *)v41 + 2) = v42;
      *((_OWORD *)v41 + 3) = v43;
      char v54 = v38;
      sub_19EEBCB4C((uint64_t)&v51);
      v44._uint64_t countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      LogMessage.StringInterpolation.appendLiteral(_:)(v44);
      *(void *)(v21 + 32) = v54;
      *(void *)&long long v48 = v22;
      LOBYTE(v45) = 0;
      OSLogger.log(contentsOf:withLevel:)((Swift::OpaquePointer)v21, (JetEngine::LogMessageLevel)&v45);

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_19F1DCCEC();
      sub_19F1DBEFC();
      sub_19F1DCF4C();
      sub_19F1DBEFC();
      swift_bridgeObjectRelease();
      sub_19F1DCFCC();
      __break(1u);
    }
  }
}

uint64_t JSONDictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, v5, v6);
}

uint64_t JSONDictionary.isEmpty.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) & 1;
}

uint64_t JSONDictionary.count.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t JSONDictionary.map<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = v5[3];
  uint64_t v12 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 40))(a1, a2, a3, a4, a5, v11, v12);
}

uint64_t JSONDictionary.flatMap<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = v5[3];
  uint64_t v12 = v5[4];
  __swift_project_boxed_opaque_existential_1(v5, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, a2, a3, a4, a5, v11, v12);
}

double static AutomationSemantics.artistDetail(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  *(void *)&v14[0] = &unk_1EF140CE0;
  *((void *)&v14[0] + 1) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_19EE913A4(v10, (uint64_t)sub_19EE91750, 0);
  long long v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a3, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v14, (void *)(inited + 32));
  sub_19EEBCD00(a4, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v14, (void *)(inited + 64));
  sub_19EE9104C(inited);
  double result = *(double *)&v13;
  *a5 = v13;
  return result;
}

double static AutomationSemantics.albumDetail(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  *(void *)&v14[0] = &unk_1EF1408D0;
  *((void *)&v14[0] + 1) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_19EE913A4(v10, (uint64_t)sub_19EE91750, 0);
  long long v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a3, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v14, (void *)(inited + 32));
  sub_19EEBCD00(a4, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v14, (void *)(inited + 64));
  sub_19EE9104C(inited);
  double result = *(double *)&v13;
  *a5 = v13;
  return result;
}

double static AutomationSemantics.episodePage(elementName:id:parentId:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X8>)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_19F24EAD0;
  *(void *)(v10 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  *(void *)&v14[0] = &unk_1EF140900;
  *((void *)&v14[0] + 1) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_19EE913A4(v10, (uint64_t)sub_19EE91750, 0);
  long long v13 = v14[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  sub_19EEBCD00(a3, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(25705, 0xE200000000000000, (uint64_t)v14, (void *)(inited + 32));
  sub_19EEBCD00(a4, (uint64_t)v14);
  AutomationAttribute.init(key:value:)(0x6449746E65726170, 0xE800000000000000, (uint64_t)v14, (void *)(inited + 64));
  sub_19EE9104C(inited);
  double result = *(double *)&v13;
  *a5 = v13;
  return result;
}

uint64_t sub_19F1A75D4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
  CFDataRef v6 = (const __CFData *)sub_19F1DB3EC();
  SecCertificateRef v7 = SecCertificateCreateWithData(v5, v6);

  if (!v7)
  {
    sub_19F1A79F4();
    uint64_t v8 = (void *)swift_allocError();
    *os_log_type_t v9 = 0;
    swift_willThrow();
LABEL_4:
    CFErrorRef error = 0;
    uint64_t v27 = 0xE000000000000000;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    sub_19F1DCF4C();
    sub_19F0E88E4((uint64_t)error, v27);

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v11 = sub_19F1A7A8C(v7);
  SecKeyRef v12 = SecTrustCopyKey(v11);
  if (!v12)
  {
    sub_19F0E88E4(0xD00000000000002ALL, 0x800000019F275E60);
    sub_19F1A79F4();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v16 = 0;
    swift_willThrow();

    goto LABEL_4;
  }
  SecKeyRef v13 = v12;
  if (qword_1E946F0B8 != -1) {
    swift_once();
  }
  if (!SecKeyIsAlgorithmSupported(v13, kSecKeyOperationTypeVerify, (SecKeyAlgorithm)qword_1E946F888))
  {
    sub_19F1A79F4();
    uint64_t v8 = (void *)swift_allocError();
    *uint64_t v17 = 1;
    swift_willThrow();

    goto LABEL_4;
  }
  uint64_t v14 = sub_19F1A7BCC(a2, a3);
  uint64_t v18 = v14;
  unint64_t v19 = v15;
  sub_19EEA0784(v14, v15);
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  uint64_t v27 = 0x800000019F275E90;
  sub_19F1DB3FC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F0E88EC(0xD00000000000001FLL, 0x800000019F275E90);
  swift_bridgeObjectRelease();
  CFErrorRef error = 0;
  CFStringRef v20 = (const __CFString *)qword_1E946F888;
  CFDataRef v21 = (const __CFData *)sub_19F1DB3EC();
  CFDataRef v22 = (const __CFData *)sub_19F1DB3EC();
  LODWORD(v20) = SecKeyVerifySignature(v13, v20, v21, v22, &error);

  if (!v20)
  {
    CFErrorRef v23 = error;
    if (error)
    {
      type metadata accessor for CFError(0);
      sub_19F1A7DCC();
      uint64_t v8 = (void *)swift_allocError();
      *id v24 = v23;
    }
    else
    {
      sub_19F1A79F4();
      uint64_t v8 = (void *)swift_allocError();
      *unint64_t v25 = 2;
    }
    swift_willThrow();
    sub_19EEA072C(v18, v19);

    goto LABEL_4;
  }
  sub_19EEA072C(v18, v19);

  return 1;
}

unint64_t sub_19F1A79F4()
{
  unint64_t result = qword_1E9476500;
  if (!qword_1E9476500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476500);
  }
  return result;
}

uint64_t sub_19F1A7A48()
{
  uint64_t result = sub_19EE22910((uint64_t)&unk_1EF147C88);
  qword_1E946F878 = result;
  unk_1E946F880 = v1;
  return result;
}

id sub_19F1A7A74()
{
  qword_1E946F888 = *MEMORY[0x1E4F3BA38];
  return (id)qword_1E946F888;
}

SecTrustRef sub_19F1A7A8C(void *a1)
{
  trust[1] = *(SecTrustRef *)MEMORY[0x1E4F143B8];
  trust[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392E38);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_19F255020;
  *(void *)(v2 + 32) = a1;
  sub_19F1DC17C();
  type metadata accessor for SecCertificate(0);
  id v3 = a1;
  unsigned int v4 = (void *)sub_19F1DC14C();
  swift_bridgeObjectRelease();
  OSStatus v5 = SecTrustCreateWithCertificates(v4, 0, trust);

  SecTrustRef v6 = trust[0];
  if (v5 || !trust[0])
  {
    sub_19F0E88E4(0xD00000000000002ELL, 0x800000019F275EB0);
    sub_19F1A79F4();
    swift_allocError();
    *SecCertificateRef v7 = 0;
    swift_willThrow();
  }
  return v6;
}

uint64_t sub_19F1A7BCC(void *a1, uint64_t a2)
{
  OSStatus v5 = (const void *)swift_slowAlloc();
  SecTrustRef v6 = (CC_SHA256_CTX *)swift_slowAlloc();
  CC_SHA256_Init(v6);
  while (1)
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v7);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) & 1) == 0)
    {
      uint64_t v13 = sub_19F1DC1DC();
      *(void *)(v13 + 16) = 32;
      *(_OWORD *)(v13 + 48) = 0u;
      *(_OWORD *)(v13 + 32) = 0u;
      CC_SHA256_Final((unsigned __int8 *)(v13 + 32), v6);
      uint64_t v11 = sub_19EE22910(v13);
      swift_bridgeObjectRelease();
LABEL_8:
      MEMORY[0x19F3C9470](v6, -1, -1);
      MEMORY[0x19F3C9470](v5, -1, -1);
      return v11;
    }
    uint64_t v9 = a1[3];
    uint64_t v10 = a1[4];
    uint64_t v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, v9);
    unint64_t v12 = (*(uint64_t (**)(const void *, uint64_t, uint64_t, uint64_t))(v10 + 32))(v5, a2, v9, v10);
    if (v2) {
      goto LABEL_8;
    }
    if ((v12 & 0x8000000000000000) != 0 || HIDWORD(v12)) {
      break;
    }
    CC_SHA256_Update(v6, v5, v12);
  }
  uint64_t result = sub_19F1DCFBC();
  __break(1u);
  return result;
}

unint64_t sub_19F1A7DCC()
{
  unint64_t result = qword_1E9476508;
  if (!qword_1E9476508)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476508);
  }
  return result;
}

uint64_t LocalizerPreferences.preferredPluralCategory(forCount:in:)()
{
  return 0;
}

uint64_t dispatch thunk of LocalizerPreferences.ignoreDefaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LocalizerPreferences.preferredPluralCategory(forCount:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

BOOL static JetpackSignatureVerifierError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetpackSignatureVerifierError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JetpackSignatureVerifierError.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F1A7F04()
{
  unint64_t result = qword_1E9476510;
  if (!qword_1E9476510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476510);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JetpackSignatureVerifierError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1A8024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackSignatureVerifierError()
{
  return &type metadata for JetpackSignatureVerifierError;
}

void JSONObject.init(transcoding:)(void *a1)
{
}

uint64_t static _AutomationID.covering(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393230);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_19F24EAD0;
  *(void *)(v6 + 32) = a1;
  *(void *)(v6 + 40) = a2;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *a3 = v6;
  a3[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t _AutomationID.attributes(_:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  *a1 = v2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_bridgeObjectRetain();
  return sub_19EE9104C(v4);
}

double _AutomationID.components(_:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  long long v6 = *v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EE913A4(a1, (uint64_t)sub_19EE91750, 0);
  double result = *(double *)&v6;
  *a2 = v6;
  return result;
}

uint64_t static _AutomationID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if ((sub_19EF636C0(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  return sub_19EF63788(v2, v3);
}

uint64_t _AutomationID.debugDescription.getter()
{
  sub_19F1DCCEC();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "_AutomationID(");
  _AutomationID.axElementID.getter();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  return v1[0];
}

uint64_t sub_19F1A82EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if ((sub_19EF636C0(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }
  return sub_19EF63788(v2, v3);
}

uint64_t AutomationAttribute.key.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomationAttribute.key.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AutomationAttribute.key.modify())()
{
  return nullsub_1;
}

uint64_t AutomationAttribute.value.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AutomationAttribute.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AutomationAttribute.value.modify())()
{
  return nullsub_1;
}

uint64_t AutomationAttribute.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_19F1DD74C();
  }
  sub_19F1DD74C();
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t AutomationAttribute.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_19F1DD72C();
  sub_19F1DBE9C();
  sub_19F1DD74C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  return sub_19F1DD78C();
}

uint64_t sub_19F1A85B0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_19F1DD72C();
  sub_19F1DBE9C();
  sub_19F1DD74C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  return sub_19F1DD78C();
}

uint64_t sub_19F1A864C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_19F1DBE9C();
  if (!v1) {
    return sub_19F1DD74C();
  }
  sub_19F1DD74C();
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F1A86D8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_19F1DD72C();
  sub_19F1DBE9C();
  sub_19F1DD74C();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_19F1DBE9C();
    swift_bridgeObjectRelease();
  }
  return sub_19F1DD78C();
}

uint64_t _s9JetEngine19AutomationAttributeV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_19F1DD44C(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        BOOL v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_19F1DD44C() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_19F1A8814()
{
  unint64_t result = qword_1E9476518;
  if (!qword_1E9476518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476518);
  }
  return result;
}

uint64_t static CodableKindTable._defaultType.getter()
{
  return 0;
}

uint64_t dispatch thunk of static CodableKindTable._table.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static CodableKindTable._defaultType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static CodableKindTable._unknownTypeWrapper.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static CodableKindTable._decode(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t Dependency.typeDescription.getter()
{
  return sub_19F1DD98C();
}

uint64_t Dependency._Personality.hash(into:)()
{
  return sub_19F1DD73C();
}

BOOL static Dependency._Personality.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Dependency._Personality.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t static Dependency.satisfying<A>(_:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v7 = a2;
  *a4 = a1;
  a4[4] = a3;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a4 + 1);
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_2Tm, &v7, a3);
  return swift_unknownObjectRetain();
}

uint64_t Dependency.init<A>(satisfyingSyncThrowing:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_19F1A8C40(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t))type metadata accessor for ThrowingDependencyCell, sub_19F1C0034, a5);
}

uint64_t _s9JetEngine10DependencyV11_satisfying4withACxm_xyYaYbKctcs8SendableRzlufC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for DependencyPromise();
  uint64_t result = sub_19EE52B9C(a2, a3);
  a4[4] = v7;
  a4[1] = result;
  return result;
}

uint64_t Dependency.init<A>(satisfyingSync:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_19F1A8C40(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t))type metadata accessor for DependencyCell, sub_19EEAC044, a5);
}

uint64_t sub_19F1A8C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void, uint64_t)@<X4>, uint64_t (*a6)(uint64_t, uint64_t)@<X5>, void *a7@<X8>)
{
  *a7 = a1;
  uint64_t v11 = a5(0, a4);
  swift_retain();
  uint64_t v12 = a6(a2, a3);
  a7[4] = v11;
  uint64_t result = swift_release();
  a7[1] = v12;
  return result;
}

unint64_t sub_19F1A8CC8()
{
  unint64_t result = qword_1E9476520;
  if (!qword_1E9476520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476520);
  }
  return result;
}

void *assignWithCopy for Dependency(void *a1, void *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_0(a1 + 1, a2 + 1);
  return a1;
}

uint64_t assignWithTake for Dependency(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for Dependency._Personality(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1A8E5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Dependency._Personality()
{
  return &type metadata for Dependency._Personality;
}

__n128 CompoundAction.init(actionMetrics:subactions:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  __n128 result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = a2;
  return result;
}

uint64_t sub_19F1A8EA4()
{
  if (*v0) {
    return 0x6F69746361627573;
  }
  else {
    return 0x654D6E6F69746361;
  }
}

uint64_t sub_19F1A8EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F1A9C8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F1A8F18(uint64_t a1)
{
  unint64_t v2 = sub_19F1A921C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F1A8F54(uint64_t a1)
{
  unint64_t v2 = sub_19F1A921C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CompoundAction.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476528);
  uint64_t v5 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1A921C();
  sub_19F1DD8AC();
  if (!v2)
  {
    uint64_t v17 = v5;
    char v21 = 0;
    sub_19F046530();
    uint64_t v8 = v18;
    sub_19F1DD17C();
    uint64_t v9 = v19;
    if (!v19) {
      uint64_t v9 = MEMORY[0x1E4FBC860];
    }
    uint64_t v16 = v9;
    uint64_t v10 = MEMORY[0x1E4FBC868];
    if (v19) {
      uint64_t v10 = v20;
    }
    uint64_t v15 = v10;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v11 = sub_19F1DD89C();
    sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v11);
    swift_bridgeObjectRelease();
    LOBYTE(v19) = 1;
    uint64_t v12 = sub_19F1A9270();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v8);
    uint64_t v13 = v15;
    *a2 = v16;
    a2[1] = v13;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

unint64_t sub_19F1A921C()
{
  unint64_t result = qword_1E9476530;
  if (!qword_1E9476530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476530);
  }
  return result;
}

uint64_t sub_19F1A9270()
{
  type metadata accessor for _CodeByKind_Many();
  sub_19F1DD1EC();
  swift_getWitnessTable();
  uint64_t result = sub_19F1DD1BC();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t CompoundAction.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476538);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *((void *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10[0] = sub_19F1A921C();
  sub_19F1DD8FC();
  long long v11 = *v1;
  char v12 = 0;
  sub_19F046118();
  sub_19F1DD2AC();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v8 = sub_19F1DD8EC();
    sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v8);
    swift_bridgeObjectRelease();
    LOBYTE(v11) = 1;
    sub_19F1A9530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_19F1A9530()
{
  return swift_bridgeObjectRelease();
}

uint64_t CompoundAction.actionMetrics.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 CompoundAction.actionMetrics.setter(__n128 *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = *a1;
  *uint64_t v1 = *a1;
  return result;
}

uint64_t (*CompoundAction.actionMetrics.modify())()
{
  return nullsub_1;
}

uint64_t CompoundAction.subactions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CompoundAction.subactions.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*CompoundAction.subactions.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F1A970C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CompoundAction.init(from:)(a1, a2);
}

uint64_t sub_19F1A9724(void *a1)
{
  return CompoundAction.encode(to:)(a1);
}

uint64_t CompoundAction.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x654D6E6F69746361, 0xED00007363697274, (uint64_t)&v33);
  *(void *)&long long v29 = v6;
  swift_bridgeObjectRetain();
  ActionMetrics.init(deserializing:using:)((uint64_t)&v33, (uint64_t *)&v29, v32);
  if (v3)
  {
    sub_19EEC3418(a1);
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = v32[0];
  uint64_t v9 = v32[1];
  JSONObject.subscript.getter(0x6F69746361627573, 0xEA0000000000736ELL, (uint64_t)v32);
  sub_19EEBF040((uint64_t)v32, (uint64_t)v26);
  uint64_t v10 = v27;
  if (v27)
  {
    uint64_t v11 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 120))(&v29, v10, v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
    uint64_t v12 = *((void *)&v30 + 1);
    uint64_t v13 = sub_19EEC3418((uint64_t)v32);
    if (v12)
    {
      uint64_t v25 = v9;
      uint64_t v36 = v8;
      v24[0] = a3;
      v24[1] = v24;
      long long v33 = v29;
      long long v34 = v30;
      uint64_t v35 = v31;
      MEMORY[0x1F4188790](v13);
      _OWORD v23[2] = v6;
      uint64_t v15 = *((void *)&v34 + 1);
      uint64_t v14 = v35;
      __swift_project_boxed_opaque_existential_1(&v33, *((uint64_t *)&v34 + 1));
      uint64_t v16 = *(uint64_t (**)(uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>), void *, uint64_t, uint64_t, uint64_t))(v14 + 48);
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946E488);
      uint64_t v18 = v16(sub_19F1A9A3C, v23, v17, v15, v14);
      sub_19EEC3418(a1);
      sub_19EEC5764((uint64_t)&v33);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = v24[0];
      uint64_t v22 = v25;
      *(void *)v24[0] = v36;
      *(void *)(v21 + 8) = v22;
      *(void *)(v21 + 16) = v18;
      return result;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v26, (uint64_t *)&unk_1E946FD20);
    long long v29 = 0u;
    long long v30 = 0u;
    uint64_t v31 = 0;
    sub_19EEC3418((uint64_t)v32);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19EEBD664((uint64_t)&v29, &qword_1E946FA88);
  sub_19EF5B580();
  swift_allocError();
  *(_OWORD *)uint64_t v19 = xmmword_19F2656B0;
  uint64_t v20 = MEMORY[0x1E4FBC860];
  *(void *)(v19 + 16) = 0x40000001EF13CE58uLL;
  *(void *)(v19 + 24) = v20;
  swift_willThrow();
  return sub_19EEC3418(a1);
}

uint64_t sub_19F1A9A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F0FF7D8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_19F1A9A58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return CompoundAction.init(deserializing:using:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for CompoundAction()
{
  return &type metadata for CompoundAction;
}

unsigned char *storeEnumTagSinglePayload for CompoundAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1A9B4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompoundAction.CodingKeys()
{
  return &type metadata for CompoundAction.CodingKeys;
}

unint64_t sub_19F1A9B88()
{
  unint64_t result = qword_1E9476540;
  if (!qword_1E9476540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476540);
  }
  return result;
}

unint64_t sub_19F1A9BE0()
{
  unint64_t result = qword_1E9476548;
  if (!qword_1E9476548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476548);
  }
  return result;
}

unint64_t sub_19F1A9C38()
{
  unint64_t result = qword_1E9476550;
  if (!qword_1E9476550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476550);
  }
  return result;
}

uint64_t sub_19F1A9C8C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D6E6F69746361 && a2 == 0xED00007363697274;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746361627573 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t Lazy.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_19F1DCAAC();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v10 - v7, a1, v4, v6);
  sub_19EF96A18((uint64_t)v8, v4, &v11);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *a2 = v11;
  return result;
}

uint64_t Lazy.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  sub_19F1DCAAC();
  type metadata accessor for LazyValueWrapper();
  swift_retain();
  sub_19EF96F20(a1);
  return swift_release();
}

uint64_t Lazy.wrappedValue.setter(uint64_t a1)
{
  sub_19F1AAE6C();
  uint64_t v2 = sub_19F1DCAAC();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

void (*Lazy.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = sub_19F1DCAAC();
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  Lazy.wrappedValue.getter((uint64_t)v9);
  return sub_19F1AA104;
}

void sub_19F1AA104(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  int v3 = *(void **)(*(void *)a1 + 32);
  uint64_t v4 = *(void **)(*(void *)a1 + 40);
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  uint64_t v6 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 32), v4, v5);
    sub_19F1AAE6C();
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_19F1AAE6C();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t Lazy.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  size_t v8 = (void *)swift_allocObject();
  uint64_t v8[2] = a3;
  void v8[3] = a1;
  v8[4] = a2;
  sub_19F1DCAAC();
  uint64_t result = sub_19EF96924((uint64_t)sub_19F1AAEFC, (uint64_t)v8, &v10);
  *a4 = v10;
  return result;
}

uint64_t sub_19F1AA28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = (uint64_t (*)(void))MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v7();
  if (!v3)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v9, a2);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a3, 0, 1, a2);
  }
  return result;
}

uint64_t Lazy.description.getter()
{
  return 0;
}

uint64_t Lazy<A>.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = sub_19F1DCAAC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v9 - v5;
  Lazy.wrappedValue.getter((uint64_t)v9 - v5);
  uint64_t v7 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v2) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_19F1DBC7C();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v6, v2);
}

uint64_t sub_19F1AA594(uint64_t a1, uint64_t a2)
{
  return Lazy<A>.encode(to:)(a1, a2);
}

uint64_t Lazy<A>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a2;
  sub_19EEC355C(a1, (uint64_t)v13);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  long long v11 = v13[1];
  *(_OWORD *)(v10 + 32) = v13[0];
  *(_OWORD *)(v10 + 48) = v11;
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 72) = v9;
  sub_19F1DCAAC();
  sub_19EF96924((uint64_t)sub_19F1AAF64, v10, (uint64_t *)v13);
  uint64_t result = sub_19EEC3418(a1);
  *a5 = *(void *)&v13[0];
  return result;
}

uint64_t sub_19F1AA680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v17);
  v14[0] = a2;
  uint64_t v10 = *(void (**)(unsigned char *, void *, uint64_t, uint64_t))(a4 + 8);
  swift_bridgeObjectRetain();
  v10(v17, v14, a3, a4);
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56))(a5, 0, 1, a3);
  }
  swift_bridgeObjectRetain();
  sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, a2, (uint64_t)v17);
  swift_bridgeObjectRelease();
  sub_19EFE5A88((uint64_t)v17, (uint64_t)v14);
  uint64_t v11 = v15;
  if (v15)
  {
    uint64_t v12 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8))(a3, v5, v11, v12);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
  else
  {
    sub_19EFE5AF0((uint64_t)v14);
  }
  swift_willThrow();
  return sub_19EFE5AF0((uint64_t)v17);
}

uint64_t sub_19F1AA804@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return Lazy<A>.init(deserializing:using:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8), a5);
}

uint64_t static Lazy<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a4;
  uint64_t v47 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v39 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DCAAC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v41 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v11);
  long long v46 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v38 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v38 - v17;
  type metadata accessor for Lazy();
  Lazy.wrappedValue.getter((uint64_t)v18);
  Lazy.wrappedValue.getter((uint64_t)v15);
  uint64_t v42 = TupleTypeMetadata2;
  uint64_t v19 = &v9[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v20(v9, v18, v6);
  long long v43 = v19;
  uint64_t v44 = v6;
  v20(v19, v15, v6);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  uint64_t v45 = a3;
  if (v21(v9, 1, a3) != 1)
  {
    long long v38 = v18;
    uint64_t v26 = v44;
    v20(v46, v9, v44);
    uint64_t v27 = v43;
    uint64_t v28 = v45;
    int v29 = v21(v43, 1, v45);
    uint64_t v30 = v47;
    uint64_t v31 = (void (**)(char *, uint64_t))(v47 + 8);
    if (v29 != 1)
    {
      long long v33 = v39;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v39, v27, v28);
      char v25 = sub_19F1DBD3C();
      uint64_t v34 = v28;
      uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
      v35(v33, v34);
      uint64_t v36 = *(void (**)(char *, uint64_t))(v10 + 8);
      v36(v15, v26);
      v36(v38, v26);
      v35(v46, v34);
      v36(v9, v26);
      return v25 & 1;
    }
    unint64_t v32 = *(void (**)(char *, uint64_t))(v10 + 8);
    v32(v15, v26);
    v32(v38, v26);
    (*v31)(v46, v28);
    goto LABEL_6;
  }
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  CFErrorRef v23 = v15;
  uint64_t v24 = v44;
  v22(v23, v44);
  v22(v18, v24);
  if (v21(v43, 1, v45) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v42);
    char v25 = 0;
    return v25 & 1;
  }
  v22(v9, v24);
  char v25 = 1;
  return v25 & 1;
}

uint64_t sub_19F1AACA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Lazy<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t Lazy<A>.hash(into:)()
{
  uint64_t v0 = sub_19F1DCAAC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - v2;
  Lazy.wrappedValue.getter((uint64_t)&v5 - v2);
  sub_19F1DCACC();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t Lazy<A>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1AAE08()
{
  return Lazy<A>.hashValue.getter();
}

uint64_t sub_19F1AAE10()
{
  return Lazy<A>.hash(into:)();
}

uint64_t sub_19F1AAE18()
{
  return sub_19F1DD78C();
}

void sub_19F1AAE6C()
{
}

uint64_t sub_19F1AAEC4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F1AAEFC@<X0>(uint64_t a1@<X8>)
{
  return sub_19F1AA28C(*(void *)(v1 + 24), *(void *)(v1 + 16), a1);
}

uint64_t sub_19F1AAF1C()
{
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F1AAF64@<X0>(uint64_t a1@<X8>)
{
  return sub_19F1AA680((uint64_t)(v1 + 4), v1[9], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for Lazy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F1AAFA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F1AAFE8@<X0>(uint64_t a1@<X8>)
{
  return Lazy.wrappedValue.getter(a1);
}

void sub_19F1AB034()
{
}

uint64_t sub_19F1AB074()
{
  return 8;
}

void *sub_19F1AB080(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_19F1AB08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void **)(a1 + 24);
  swift_beginAccess();
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6)
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v15 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v15) {
      goto LABEL_14;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v9 = *(void *)(v5 + 8 * v7 + 32);
    uint64_t v10 = *(uint64_t (**)(uint64_t))(*(void *)v9 + 88);
    uint64_t v11 = swift_retain();
    if ((v10(v11) & 1) == 0
      || (uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 104))(a2), (v10(v12) & 1) == 0))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_19F09D694(0, v8[2] + 1, 1, v8);
      }
      unint64_t v14 = v8[2];
      unint64_t v13 = v8[3];
      if (v14 >= v13 >> 1) {
        uint64_t v8 = sub_19F09D694((void *)(v13 > 1), v14 + 1, 1, v8);
      }
      uint64_t v8[2] = v14 + 1;
      v8[v14 + 4] = v7;
    }
    ++v7;
    swift_release();
  }
  while (v6 != v7);
  swift_bridgeObjectRelease();
  uint64_t v15 = v8[2];
  if (!v15) {
    return swift_bridgeObjectRelease();
  }
LABEL_14:
  while (v15 <= v8[2])
  {
    unint64_t v16 = v8[v15 + 3];
    swift_beginAccess();
    uint64_t v17 = *v4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v4 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v17 = sub_19F16BA08(v17);
      *uint64_t v4 = v17;
    }
    unint64_t v19 = v17[2];
    if (v16 >= v19) {
      goto LABEL_22;
    }
    unint64_t v20 = v19 - 1;
    uint64_t v21 = v19 - 1 - v16;
    if (v21 < 0) {
      goto LABEL_23;
    }
    --v15;
    memmove(&v17[v16 + 4], &v17[v16 + 5], 8 * v21);
    v17[2] = v20;
    *uint64_t v4 = v17;
    swift_endAccess();
    swift_release();
    if (!v15) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F1AB32C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void **)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v16 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v16) {
      goto LABEL_14;
    }
    return swift_bridgeObjectRelease();
  }
  v24[7] = v2;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v10 = *(void *)(v6 + 8 * v8 + 32);
    uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)v10 + 88);
    uint64_t v12 = swift_retain();
    if ((v11(v12) & 1) == 0
      || (v24[0] = a2, uint64_t v13 = (*(uint64_t (**)(void *))(*(void *)v10 + 104))(v24), (v11(v13) & 1) == 0))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_19F09D694(0, v9[2] + 1, 1, v9);
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1) {
        uint64_t v9 = sub_19F09D694((void *)(v14 > 1), v15 + 1, 1, v9);
      }
      void v9[2] = v15 + 1;
      v9[v15 + 4] = v8;
    }
    ++v8;
    swift_release();
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
  uint64_t v16 = v9[2];
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
LABEL_14:
  while (v16 <= v9[2])
  {
    unint64_t v17 = v9[v16 + 3];
    swift_beginAccess();
    uint64_t v18 = *v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v18 = sub_19F16BA44(v18);
      *uint64_t v5 = v18;
    }
    unint64_t v20 = v18[2];
    if (v17 >= v20) {
      goto LABEL_22;
    }
    unint64_t v21 = v20 - 1;
    uint64_t v22 = v20 - 1 - v17;
    if (v22 < 0) {
      goto LABEL_23;
    }
    --v16;
    memmove(&v18[v17 + 4], &v18[v17 + 5], 8 * v22);
    v18[2] = v21;
    *uint64_t v5 = v18;
    swift_endAccess();
    swift_release();
    if (!v16) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t sub_19F1AB5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t v5 = (void **)(a1 + 24);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7)
  {
    uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v16 = *(void *)(MEMORY[0x1E4FBC860] + 16);
    if (v16) {
      goto LABEL_14;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v10 = *(void *)(v6 + 8 * v8 + 32);
    uint64_t v11 = *(uint64_t (**)(uint64_t))(*(void *)v10 + 88);
    uint64_t v12 = swift_retain();
    if ((v11(v12) & 1) == 0
      || (v24[0] = a2,
          v24[1] = v25,
          uint64_t v13 = (*(uint64_t (**)(void *))(*(void *)v10 + 104))(v24),
          (v11(v13) & 1) == 0))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_19F09D694(0, v9[2] + 1, 1, v9);
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1) {
        uint64_t v9 = sub_19F09D694((void *)(v14 > 1), v15 + 1, 1, v9);
      }
      void v9[2] = v15 + 1;
      v9[v15 + 4] = v8;
    }
    ++v8;
    swift_release();
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
  uint64_t v16 = v9[2];
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
LABEL_14:
  while (v16 <= v9[2])
  {
    unint64_t v17 = v9[v16 + 3];
    swift_beginAccess();
    uint64_t v18 = *v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v18 = sub_19F16BA80(v18);
      *uint64_t v5 = v18;
    }
    unint64_t v20 = v18[2];
    if (v17 >= v20) {
      goto LABEL_22;
    }
    unint64_t v21 = v20 - 1;
    uint64_t v22 = v20 - 1 - v17;
    if (v22 < 0) {
      goto LABEL_23;
    }
    --v16;
    memmove(&v18[v17 + 4], &v18[v17 + 5], 8 * v22);
    v18[2] = v21;
    *uint64_t v5 = v18;
    swift_endAccess();
    swift_release();
    if (!v16) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_19F1DD07C();
  __break(1u);
  return result;
}

uint64_t AppMetricsPresenter.AppStateEvent.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static AppMetricsPresenter.AppStateEvent.enter.getter(void *a1@<X8>)
{
  *a1 = 0x7265746E65;
  a1[1] = 0xE500000000000000;
}

void static AppMetricsPresenter.AppStateEvent.exit.getter(void *a1@<X8>)
{
  *a1 = 1953069157;
  a1[1] = 0xE400000000000000;
}

uint64_t AppMetricsPresenter.AppStateEvent.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t static AppMetricsPresenter.AppStateEvent.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

uint64_t AppMetricsPresenter.AppStateEvent.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t AppMetricsPresenter.__allocating_init(pipeline:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  AppMetricsPresenter.init(pipeline:)(a1);
  return v2;
}

void *AppMetricsPresenter.init(pipeline:)(uint64_t a1)
{
  uint64_t v2 = (void *)v1;
  sub_19EE99F44(a1, v1 + 16);
  *(unsigned char *)(v1 + 193) = 1;
  uint64_t v4 = sub_19EFF2800((uint64_t)&unk_1EF140728);
  swift_arrayDestroy();
  *(void *)(v1 + 200) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F390);
  uint64_t v5 = swift_allocObject();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28FD0]), sel_init);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v5 + 16) = v6;
  *(void *)(v5 + 24) = v7;
  v2[26] = v5;
  sub_19EEC4154(a1 + 112, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB391AF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946DBF0);
  if (swift_dynamicCast())
  {
    sub_19EEBB420(v14, (uint64_t)v17);
    uint64_t v8 = v18;
    uint64_t v9 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    uint64_t v12 = v11;
    sub_19EE98E9C(a1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_19EE98E9C(a1);
    sub_19F1AC310((uint64_t)v14);
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  v2[27] = v10;
  v2[28] = v12;
  return v2;
}

uint64_t AppMetricsPresenter.flushedEvents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AppMetricsPresenter.flushedEvents.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 200) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*AppMetricsPresenter.flushedEvents.modify())()
{
  return j__swift_endAccess_0;
}

uint64_t AppMetricsPresenter.onAppStateEvent.getter()
{
  return swift_retain();
}

Swift::Void __swiftcall AppMetricsPresenter.didBecomeActive()()
{
}

Swift::Void __swiftcall AppMetricsPresenter.didBecomeActive(using:)(JetEngine::MetricsFieldsContext using)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_19F1DBA6C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)using.storage._rawValue;
  sub_19EEA5F34();
  *uint64_t v7 = sub_19F1DC87C();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  LOBYTE(using.storage._rawValue) = sub_19F1DBA8C();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((uint64_t)using.storage._rawValue)
  {
    if (*(unsigned char *)(v2 + 193) == 1)
    {
      uint64_t v9 = *(void *)(v2 + 208);
      uint64_t v10 = *(void **)(v9 + 16);
      objc_msgSend(v10, sel_lock);
      sub_19F1AB5D0(v9, 0x7265746E65, 0xE500000000000000);
      objc_msgSend(v10, sel_unlock);
      uint64_t v12 = *(void *)(v2 + 216);
      uint64_t v11 = *(void *)(v2 + 224);
      swift_beginAccess();
      uint64_t v13 = *(void *)(v2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v14 = sub_19EE7F4A0(0x7265746E65, 0xE500000000000000, v13);
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
      *(void *)(inited + 32) = 0x707954746E657665;
      *(void *)(inited + 40) = 0xE900000000000065;
      uint64_t v16 = MEMORY[0x1E4FBB1A0];
      *(void *)(inited + 48) = 0x7265746E65;
      *(void *)(inited + 56) = 0xE500000000000000;
      *(void *)(inited + 72) = v16;
      *(void *)(inited + 80) = 1701869940;
      uint64_t v17 = 0x68636E75616CLL;
      if (byte_1E9498AF9) {
        uint64_t v17 = 0x746977536B736174;
      }
      unint64_t v18 = 0xE600000000000000;
      if (byte_1E9498AF9) {
        unint64_t v18 = 0xEA00000000006863;
      }
      *(void *)(inited + 120) = v16;
      *(void *)(inited + 88) = 0xE400000000000000;
      *(void *)(inited + 96) = v17;
      *(void *)(inited + 104) = v18;
      unint64_t v19 = sub_19EEBF898(inited);
      uint64_t v20 = sub_19EFF1EB4((uint64_t)&unk_1EF1406F8);
      swift_arrayDestroy();
      v23[0] = v12;
      v23[1] = v11;
      char v24 = v14 & 1;
      unint64_t v25 = v19;
      uint64_t v26 = v20;
      uint64_t v27 = MEMORY[0x1E4FBC870];
      uint64_t v22 = v8;
      MetricsPipeline.process(_:using:)((uint64_t)v23, &v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      *(unsigned char *)(v2 + 193) = 0;
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall AppMetricsPresenter.didResignActive()()
{
}

uint64_t sub_19F1ABFA0(void (*a1)(unint64_t *))
{
  unint64_t v3 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  a1(&v3);
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall AppMetricsPresenter.didResignActive(using:)(JetEngine::MetricsFieldsContext using)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_19F1DBA6C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)using.storage._rawValue;
  sub_19EEA5F34();
  *uint64_t v7 = sub_19F1DC87C();
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCBF0], v4);
  LOBYTE(using.storage._rawValue) = sub_19F1DBA8C();
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((uint64_t)using.storage._rawValue)
  {
    uint64_t v9 = *(void *)(v2 + 208);
    uint64_t v10 = *(void **)(v9 + 16);
    objc_msgSend(v10, sel_lock);
    sub_19F1AB5D0(v9, 1953069157, 0xE400000000000000);
    objc_msgSend(v10, sel_unlock);
    uint64_t v12 = *(void *)(v2 + 216);
    uint64_t v11 = *(void *)(v2 + 224);
    swift_beginAccess();
    uint64_t v13 = *(void *)(v2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v10) = sub_19EE7F4A0(1953069157, 0xE400000000000000, v13);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = 0x707954746E657665;
    *(void *)(inited + 40) = 0xE900000000000065;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = 1953069157;
    *(void *)(inited + 56) = 0xE400000000000000;
    unint64_t v15 = sub_19EEBF898(inited);
    v18[0] = v12;
    v18[1] = v11;
    char v19 = v10 & 1;
    unint64_t v20 = v15;
    uint64_t v21 = MEMORY[0x1E4FBC870];
    uint64_t v22 = MEMORY[0x1E4FBC870];
    uint64_t v17 = v8;
    MetricsPipeline.process(_:using:)((uint64_t)v18, &v17);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *(unsigned char *)(v2 + 193) = 1;
    byte_1E9498AF9 = 1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t AppMetricsPresenter.deinit()
{
  sub_19EE98E9C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AppMetricsPresenter.__deallocating_deinit()
{
  sub_19EE98E9C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_19F1AC310(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_19F1AC374()
{
  unint64_t result = qword_1E946F388;
  if (!qword_1E946F388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946F388);
  }
  return result;
}

uint64_t type metadata accessor for AppMetricsPresenter()
{
  return self;
}

uint64_t method lookup function for AppMetricsPresenter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppMetricsPresenter);
}

uint64_t dispatch thunk of AppMetricsPresenter.__allocating_init(pipeline:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

ValueMetadata *type metadata accessor for AppMetricsPresenter.AppStateEvent()
{
  return &type metadata for AppMetricsPresenter.AppStateEvent;
}

uint64_t sub_19F1AC4D0()
{
  id v0 = objc_msgSend(self, sel_mainBundle);
  uint64_t v1 = (void *)sub_19F1DBD4C();
  id v2 = objc_msgSend(v0, sel_objectForInfoDictionaryKey_, v1);

  if (!v2) {
    return 0;
  }
  sub_19F1DCBEC();
  swift_unknownObjectRelease();
  sub_19EEBDC00(v7, v8);
  sub_19EEBDBA4((uint64_t)v8, (uint64_t)v7);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_19EEBDBA4((uint64_t)v8, (uint64_t)v7);
    sub_19EE85BDC();
    if (swift_dynamicCast())
    {
      id v4 = objc_msgSend(v6, sel_stringValue);
      uint64_t v3 = sub_19F1DBD7C();

      goto LABEL_6;
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    return 0;
  }
  uint64_t v3 = (uint64_t)v6;
LABEL_6:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
  return v3;
}

uint64_t sub_19F1AC65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  JSONObject.dictionary.getter((uint64_t)&v8);
  if (*((void *)&v9 + 1))
  {
    uint64_t result = sub_19EEC3418(a1);
    long long v5 = v9;
    *(_OWORD *)a2 = v8;
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v10;
  }
  else
  {
    sub_19EEBD664((uint64_t)&v8, &qword_1E946F740);
    sub_19EF5B580();
    swift_allocError();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    *uint64_t v7 = &type metadata for LocalizedStringsContainerJSONObject;
    v7[1] = v6;
    _OWORD v7[2] = 0;
    void v7[3] = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedStringsContainerJSONObject()
{
  return &type metadata for LocalizedStringsContainerJSONObject;
}

uint64_t sub_19F1AC730()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    long long v5 = (uint64_t *)(v3 + 40);
    uint64_t v6 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v10 = *(v5 - 1);
      uint64_t v11 = *v5;
      BOOL v12 = v10 == 0x74616D726F66 && v11 == 0xE600000000000000;
      if (!v12 && (sub_19F1DD44C() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_19EEA1364(0, *(void *)(v6 + 16) + 1, 1);
        }
        unint64_t v8 = *(void *)(v6 + 16);
        unint64_t v7 = *(void *)(v6 + 24);
        if (v8 >= v7 >> 1) {
          sub_19EEA1364(v7 > 1, v8 + 1, 1);
        }
        *(void *)(v6 + 16) = v8 + 1;
        uint64_t v9 = v6 + 16 * v8;
        *(void *)(v9 + 32) = v10;
        *(void *)(v9 + 40) = v11;
      }
      v5 += 2;
      --v4;
    }
    while (v4);
  }
  else
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v6;
}

void *sub_19F1AC898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4[3];
  uint64_t v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(v22, a3, a4, v9, v10);
  uint64_t v11 = v22;
  JSONObject.dictionary.getter((uint64_t)&v19);
  sub_19EEC3418((uint64_t)v22);
  if (*((void *)&v20 + 1))
  {
    v23[0] = v19;
    v23[1] = v20;
    uint64_t v12 = v21;
    uint64_t v24 = v21;
    uint64_t v13 = *((void *)&v20 + 1);
    __swift_project_boxed_opaque_existential_1(v23, *((uint64_t *)&v20 + 1));
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 24))(v22, a1, a2, v13, v12);
    sub_19EEBF040((uint64_t)v22, (uint64_t)&v19);
    uint64_t v14 = *((void *)&v20 + 1);
    if (*((void *)&v20 + 1))
    {
      uint64_t v15 = v21;
      __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
      uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
    }
    else
    {
      sub_19EEBD664((uint64_t)&v19, (uint64_t *)&unk_1E946FD20);
      uint64_t v11 = 0;
    }
    sub_19EEC3418((uint64_t)v22);
    sub_19EEC05FC((uint64_t)v23);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v19, &qword_1E946F740);
    sub_19EF5B580();
    swift_allocError();
    *uint64_t v16 = a3;
    v16[1] = a4;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    v16[2] = 0x40000001EF13D270uLL;
    v16[3] = v17;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return v11;
}

uint64_t sub_19F1ACA74()
{
  return sub_19F1AC730();
}

uint64_t sub_19F1ACA9C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2);
}

void *sub_19F1ACAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_19F1AC898(a1, a2, a3, a4);
}

uint64_t dispatch thunk of LanguageSource.fetchLanguages()(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_19F01B558;
  return v7(a1, a2);
}

uint64_t dispatch thunk of LanguageSource.locale(forLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

JetEngine::SwiftLogger __swiftcall SwiftLogger.init(name:)(JetEngine::SwiftLogger name)
{
  *uint64_t v1 = name;
  return name;
}

Swift::Void __swiftcall SwiftLogger.log(contentsOf:withLevel:)(Swift::OpaquePointer contentsOf, JetEngine::LogMessageLevel withLevel)
{
  if (qword_1EB391C98 != -1) {
    swift_once();
  }
  uint64_t v3 = (unsigned char *)(qword_1EB391C90 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_19EEC4E5C(v3, &rawValue);
  os_unfair_lock_unlock(v4);
  int v5 = rawValue;
  swift_release();
  if (v5 == 2) {
    char has_internal_content = os_variant_has_internal_content();
  }
  else {
    char has_internal_content = v5 & 1;
  }
  char v7 = has_internal_content ^ 1;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = v7;
  rawValue = contentsOf._rawValue;
  uint64_t v13 = sub_19EE175B0;
  uint64_t v14 = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393220);
  sub_19EEC6824();
  sub_19F1DBCCC();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_19F24EAD0;
  rawValue = 0;
  uint64_t v13 = (uint64_t (*)@<X0>(uint64_t *@<X8>))0xE000000000000000;
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  uint64_t v10 = rawValue;
  uint64_t v11 = v13;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v11;
  sub_19F1DD6FC();
  swift_bridgeObjectRelease();
}

uint64_t sub_19F1ACEC8()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

ValueMetadata *type metadata accessor for SwiftLogger()
{
  return &type metadata for SwiftLogger;
}

void sub_19F1ACEEC(uint64_t a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 1;
    sub_19EEDA73C(v3, 0, MEMORY[0x1E4FBC8A8]);
    swift_bridgeObjectRetain();
    sub_19EEA766C(v3, 0, MEMORY[0x1E4FBC898]);
    os_unfair_lock_unlock(v2);
    uint64_t v4 = v3[2];
    if (v4)
    {
      uint64_t v5 = (uint64_t)(v3 + 4);
      do
      {
        sub_19EEC3ED8(v5, (uint64_t)v21, &qword_1E946D620);
        sub_19EEC3ED8((uint64_t)v21, (uint64_t)v18, &qword_1E946D620);
        uint64_t v6 = v18[0];
        if (v20)
        {
          **(void **)(*(void *)(v18[0] + 64) + 40) = a1;
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v7 = v18[1];
          swift_release();
          sub_19EEBB420(&v19, (uint64_t)v15);
          uint64_t v9 = v16;
          uint64_t v8 = v17;
          __swift_project_boxed_opaque_existential_1(v15, v16);
          uint64_t v10 = (void *)swift_allocObject();
          void v10[2] = v6;
          void v10[3] = v7;
          v10[4] = a1;
          uint64_t v11 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v8 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          v11(sub_19EECAE70, v10, v9, v8);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
        }
        sub_19EEBD664((uint64_t)v21, &qword_1E946D620);
        v5 += 80;
        --v4;
      }
      while (v4);
      uint64_t v12 = (void (*)(id))MEMORY[0x1E4FBC898];
      uint64_t v13 = v3;
    }
    else
    {
      uint64_t v12 = (void (*)(id))MEMORY[0x1E4FBC898];
      uint64_t v13 = v3;
    }
    sub_19EEA766C(v13, 0, v12);
  }
}

void sub_19F1AD1AC(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v26, (uint64_t *)&unk_1E9476560);
  if (v27 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v27)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v26[0];
    sub_19EEC355C(a1, (uint64_t)v25);
    v25[40] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v25, v1 + 24, (uint64_t *)&unk_1E9476560);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v25, (uint64_t *)&unk_1E94737E0);
        sub_19EEC3ED8((uint64_t)v25, (uint64_t)v22, (uint64_t *)&unk_1E94737E0);
        uint64_t v10 = v22[0];
        if (v24)
        {
          sub_19EEC355C(a1, (uint64_t)&v19);
          uint64_t v7 = *(void *)(*(void *)(v10 + 64) + 40);
          uint64_t v8 = v21;
          long long v9 = v20;
          *(_OWORD *)uint64_t v7 = v19;
          *(_OWORD *)(v7 + 16) = v9;
          *(void *)(v7 + 32) = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v11 = v22[1];
          swift_release();
          sub_19EEBB420(&v23, (uint64_t)&v19);
          uint64_t v13 = *((void *)&v20 + 1);
          uint64_t v12 = v21;
          __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
          sub_19EEC355C(a1, (uint64_t)v17);
          uint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = v10;
          *(void *)(v14 + 24) = v11;
          long long v15 = v17[1];
          *(_OWORD *)(v14 + 32) = v17[0];
          *(_OWORD *)(v14 + 48) = v15;
          *(void *)(v14 + 64) = v18;
          uint64_t v16 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 8);
          swift_retain();
          v16(sub_19EEA7148, v14, v13, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
        }
        sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E94737E0);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AD46C(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v26, &qword_1EB392CB0);
  if (v27 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v27)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v26[0];
    sub_19EEA966C(a1, (uint64_t)v25);
    v25[40] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v25, v1 + 24, &qword_1EB392CB0);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v25, &qword_1EB392850);
        sub_19EEC3ED8((uint64_t)v25, (uint64_t)v22, &qword_1EB392850);
        uint64_t v10 = v22[0];
        if (v24)
        {
          sub_19EEA966C(a1, (uint64_t)&v19);
          uint64_t v7 = *(void *)(*(void *)(v10 + 64) + 40);
          uint64_t v8 = v21;
          long long v9 = v20;
          *(_OWORD *)uint64_t v7 = v19;
          *(_OWORD *)(v7 + 16) = v9;
          *(void *)(v7 + 32) = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v11 = v22[1];
          swift_release();
          sub_19EEBB420(&v23, (uint64_t)&v19);
          uint64_t v13 = *((void *)&v20 + 1);
          uint64_t v12 = v21;
          __swift_project_boxed_opaque_existential_1(&v19, *((uint64_t *)&v20 + 1));
          sub_19EEA966C(a1, (uint64_t)v17);
          uint64_t v14 = swift_allocObject();
          *(void *)(v14 + 16) = v10;
          *(void *)(v14 + 24) = v11;
          long long v15 = v17[1];
          *(_OWORD *)(v14 + 32) = v17[0];
          *(_OWORD *)(v14 + 48) = v15;
          *(void *)(v14 + 64) = v18;
          uint64_t v16 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 8);
          swift_retain();
          v16(sub_19EEA7148, v14, v13, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v19);
        }
        sub_19EEBD664((uint64_t)v25, &qword_1EB392850);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AD72C(void *a1)
{
}

void sub_19F1AD754(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 56) == 3)
  {
    os_unfair_lock_unlock(v5);
  }
  else if (*(unsigned char *)(v4 + 56))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void **)(v4 + 24);
    unint64_t v7 = *(void *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 40);
    uint64_t v9 = *(void *)(v4 + 48);
    *(void *)(v4 + 24) = a1;
    *(void *)(v4 + 32) = a2;
    *(void *)(v4 + 40) = a3;
    *(void *)(v4 + 48) = a4;
    *(unsigned char *)(v4 + 56) = 1;
    sub_19F08439C(v6, v7, v8, v9, 0);
    sub_19EF3C628(a1, a2);
    sub_19EF58E88(v6, v7, v8, v9, 0);
    os_unfair_lock_unlock(v5);
    uint64_t v10 = v6[2];
    if (v10)
    {
      uint64_t v20 = v9;
      unint64_t v21 = v7;
      uint64_t v22 = v6;
      uint64_t v11 = (uint64_t)(v6 + 4);
      do
      {
        sub_19EEC3ED8(v11, (uint64_t)v36, &qword_1E9471080);
        sub_19EEC3ED8((uint64_t)v36, (uint64_t)v33, &qword_1E9471080);
        uint64_t v12 = v33[0];
        if (v35)
        {
          v30[0] = a1;
          v30[1] = a2;
          void v30[2] = a3;
          uint64_t v31 = a4;
          sub_19EF3C628(a1, a2);
          sub_19F1B8E60((uint64_t)v30, *(void *)(*(void *)(v12 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v13 = v33[1];
          swift_release();
          sub_19EEBB420(&v34, (uint64_t)v30);
          uint64_t v14 = v32;
          uint64_t v24 = v31;
          __swift_project_boxed_opaque_existential_1(v30, v31);
          v29[0] = a1;
          v29[1] = a2;
          v29[2] = a3;
          v29[3] = a4;
          uint64_t v15 = swift_allocObject();
          *(void *)(v15 + 16) = v12;
          *(void *)(v15 + 24) = v13;
          sub_19F1B8E60((uint64_t)v29, v15 + 32);
          long long v23 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v14 + 8);
          sub_19EF3C628(a1, a2);
          swift_retain();
          v23(sub_19F1B8EC0, v15, v24, v14);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
        }
        sub_19EEBD664((uint64_t)v36, &qword_1E9471080);
        v11 += 80;
        --v10;
      }
      while (v10);
      unint64_t v17 = v21;
      uint64_t v16 = v22;
      uint64_t v19 = v20;
      uint64_t v18 = v8;
    }
    else
    {
      uint64_t v16 = v6;
      unint64_t v17 = v7;
      uint64_t v18 = v8;
      uint64_t v19 = v9;
    }
    sub_19EF58E88(v16, v17, v18, v19, 0);
  }
}

void sub_19F1ADA50(void *a1)
{
}

void sub_19F1ADA78(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 1;
    uint64_t v5 = (void *)swift_bridgeObjectRetain();
    sub_19EE7F054(v5, 0);
    os_unfair_lock_unlock(v3);
    uint64_t v6 = *(void *)(v4 + 16);
    if (v6)
    {
      uint64_t v7 = v4 + 32;
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v20, &qword_1EB390E20);
        sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, &qword_1EB390E20);
        uint64_t v8 = v17[0];
        if (v19)
        {
          **(void **)(*(void *)(v17[0] + 64) + 40) = a1;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v9 = v17[1];
          swift_release();
          sub_19EEBB420(&v18, (uint64_t)v14);
          uint64_t v11 = v15;
          uint64_t v10 = v16;
          __swift_project_boxed_opaque_existential_1(v14, v15);
          uint64_t v12 = (void *)swift_allocObject();
          v12[2] = v8;
          void v12[3] = v9;
          v12[4] = a1;
          uint64_t v13 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v10 + 8);
          swift_retain();
          v13(sub_19EECAE70, v12, v11, v10);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
        }
        sub_19EEBD664((uint64_t)v20, &qword_1EB390E20);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1ADCC0(void *a1)
{
}

void sub_19F1ADCE8(void *a1)
{
}

void sub_19F1ADD10(uint64_t a1)
{
}

void sub_19F1ADD38(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for MTMetricsIdentifier();
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v29 = v3;
  uint64_t v33 = (uint64_t)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946D5F0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)v27 - v8);
  uint64_t v10 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v11, (uint64_t)v9, (uint64_t *)&unk_1E946D5F0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v10);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v9;
    sub_19EE96E6C(v34, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v6, v11, (uint64_t *)&unk_1E946D5F0);
    swift_endAccess();
    os_unfair_lock_unlock(v10);
    uint64_t v14 = v13[2];
    if (v14)
    {
      v27[1] = v13;
      uint64_t v15 = (uint64_t)(v13 + 4);
      uint64_t v28 = (long long *)v39;
      uint64_t v16 = (uint64_t *)&unk_1E946D600;
      do
      {
        sub_19EEC3ED8(v15, (uint64_t)v40, v16);
        sub_19EEC3ED8((uint64_t)v40, (uint64_t)v38, v16);
        uint64_t v18 = v38[0];
        if (v39[40])
        {
          uint64_t v17 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
          sub_19EE97284(v17, *(void *)(*(void *)(v18 + 64) + 40), (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v19 = v38[1];
          swift_release();
          sub_19EEBB420(v28, (uint64_t)v35);
          uint64_t v32 = v36;
          uint64_t v20 = v37;
          uint64_t v31 = __swift_project_boxed_opaque_existential_1(v35, v36);
          unint64_t v21 = v16;
          uint64_t v22 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
          unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v18;
          *(void *)(v24 + 24) = v19;
          uint64_t v25 = v22;
          uint64_t v16 = v21;
          sub_19EE97284(v25, v24 + v23, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
          uint64_t v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v20 + 8);
          swift_retain();
          v26(sub_19F1B7988, v24, v32, v20);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
        }
        sub_19EEBD664((uint64_t)v40, v16);
        v15 += 80;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AE1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 40) == 3)
  {
    os_unfair_lock_unlock(v4);
  }
  else if (*(unsigned char *)(v2 + 40))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void **)(v2 + 24);
    uint64_t v6 = *(void *)(v2 + 32);
    *(void *)(v2 + 24) = a1;
    *(void *)(v2 + 32) = a2;
    *(unsigned char *)(v2 + 40) = 1;
    sub_19F083468(v5, v6, 0);
    swift_bridgeObjectRetain();
    sub_19EF58938(v5, v6, 0);
    os_unfair_lock_unlock(v4);
    uint64_t v7 = v5;
    uint64_t v8 = v5[2];
    if (v8)
    {
      uint64_t v9 = (uint64_t)(v7 + 4);
      do
      {
        sub_19EEC3ED8(v9, (uint64_t)v24, &qword_1E9470FA0);
        sub_19EEC3ED8((uint64_t)v24, (uint64_t)v21, &qword_1E9470FA0);
        uint64_t v11 = v21[0];
        if (v23)
        {
          uint64_t v10 = *(void **)(*(void *)(v21[0] + 64) + 40);
          *uint64_t v10 = a1;
          v10[1] = a2;
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v12 = v21[1];
          swift_release();
          sub_19EEBB420(&v22, (uint64_t)v18);
          uint64_t v14 = v19;
          uint64_t v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          uint64_t v15 = (void *)swift_allocObject();
          v15[2] = v11;
          void v15[3] = v12;
          v15[4] = a1;
          v15[5] = a2;
          uint64_t v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          v16(sub_19F1B7B04, v15, v14, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19EEBD664((uint64_t)v24, &qword_1E9470FA0);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AE444(uint64_t a1)
{
  uint64_t v38 = sub_19F1DACDC();
  uint64_t v3 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v32 = v4;
  uint64_t v37 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FE40);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (id *)((char *)v27 - v9);
  os_unfair_lock_t v35 = (os_unfair_lock_t)(v1[2] + 16);
  os_unfair_lock_lock(v35);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v11, (uint64_t)v10, &qword_1E946FE40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v35);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v10;
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v36(v7, a1, v38);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v7, v11, &qword_1E946FE40);
    swift_endAccess();
    os_unfair_lock_unlock(v35);
    uint64_t v14 = v13[2];
    if (v14)
    {
      v27[1] = v13;
      uint64_t v15 = (uint64_t)(v13 + 4);
      uint64_t v28 = (long long *)v43;
      uint64_t v31 = v3;
      os_unfair_lock_t v35 = (os_unfair_lock_t)(v3 + 32);
      uint64_t v30 = a1;
      uint64_t v29 = v3 + 16;
      do
      {
        sub_19EEC3ED8(v15, (uint64_t)v44, (uint64_t *)&unk_1E946F9D0);
        sub_19EEC3ED8((uint64_t)v44, (uint64_t)v42, (uint64_t *)&unk_1E946F9D0);
        uint64_t v18 = v42[0];
        if (v43[40])
        {
          uint64_t v16 = v37;
          uint64_t v17 = v38;
          v36(v37, a1, v38);
          (*(void (**)(void, char *, uint64_t))&v35->_os_unfair_lock_opaque)(*(void *)(*(void *)(v18 + 64) + 40), v16, v17);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v19 = v42[1];
          swift_release();
          sub_19EEBB420(v28, (uint64_t)v39);
          uint64_t v34 = v40;
          uint64_t v20 = v41;
          uint64_t v33 = __swift_project_boxed_opaque_existential_1(v39, v40);
          unint64_t v21 = v37;
          uint64_t v22 = v38;
          v36(v37, a1, v38);
          uint64_t v23 = v31;
          unint64_t v24 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
          uint64_t v25 = swift_allocObject();
          *(void *)(v25 + 16) = v18;
          *(void *)(v25 + 24) = v19;
          (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v25 + v24, v21, v22);
          uint64_t v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v20 + 8);
          swift_retain();
          v26(sub_19F1B85B4, v25, v34, v20);
          a1 = v30;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
        }
        sub_19EEBD664((uint64_t)v44, (uint64_t *)&unk_1E946F9D0);
        v15 += 80;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AE94C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 40) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(unsigned char *)(v2 + 40))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 24);
    uint64_t v5 = *(void *)(v2 + 32);
    *(void *)(v2 + 24) = a1;
    *(void *)(v2 + 32) = a2;
    *(unsigned char *)(v2 + 40) = 1;
    sub_19F1B834C(v4, v5, 0, (uint64_t (*)(id))sub_19EEA0784);
    sub_19EEA0784(a1, a2);
    sub_19F1B83A0(v4, v5, 0, (void (*)(id))sub_19EEA072C);
    os_unfair_lock_unlock(v3);
    uint64_t v6 = v4[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v23, &qword_1E9473830);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, &qword_1E9473830);
        uint64_t v9 = v20[0];
        if (v22)
        {
          sub_19EEA0784(a1, a2);
          uint64_t v8 = *(uint64_t **)(*(void *)(v9 + 64) + 40);
          *uint64_t v8 = a1;
          v8[1] = a2;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v10 = v20[1];
          swift_release();
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v12 = v18;
          uint64_t v11 = v19;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          uint64_t v13 = (void *)swift_allocObject();
          _OWORD v13[2] = v9;
          v13[3] = v10;
          v13[4] = a1;
          v13[5] = a2;
          uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v11 + 8);
          sub_19EEA0784(a1, a2);
          swift_retain();
          v14(sub_19EEA6FB8, v13, v12, v11);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, &qword_1E9473830);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AEBF4(void *a1)
{
}

void sub_19F1AEC1C(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v21, &qword_1E9473800);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v21[0];
    sub_19EEC4154(a1, (uint64_t)v20);
    unsigned char v20[40] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v20, v1 + 24, &qword_1E9473800);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v20, (uint64_t *)&unk_1E9470F80);
        sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1E9470F80);
        uint64_t v7 = v17[0];
        if (v19)
        {
          sub_19EEC4154(a1, (uint64_t)&v14);
          sub_19EEBB420(&v14, *(void *)(*(void *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v8 = v17[1];
          swift_release();
          sub_19EEBB420(&v18, (uint64_t)&v14);
          uint64_t v10 = v15;
          uint64_t v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19EEC4154(a1, (uint64_t)v13);
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v7;
          *(void *)(v11 + 24) = v8;
          sub_19EEBB420(v13, v11 + 32);
          uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19EEA7148, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E9470F80);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AEECC(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for JSSource();
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v29 = v3;
  uint64_t v33 = (uint64_t)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946C7A0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)v27 - v8);
  uint64_t v10 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v11, (uint64_t)v9, &qword_1E946C7A0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v10);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v9;
    sub_19EE96E6C(v34, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for JSSource);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v6, v11, &qword_1E946C7A0);
    swift_endAccess();
    os_unfair_lock_unlock(v10);
    uint64_t v14 = v13[2];
    if (v14)
    {
      v27[1] = v13;
      uint64_t v15 = (uint64_t)(v13 + 4);
      uint64_t v28 = (long long *)v39;
      uint64_t v16 = &qword_1E9470FA8;
      do
      {
        sub_19EEC3ED8(v15, (uint64_t)v40, v16);
        sub_19EEC3ED8((uint64_t)v40, (uint64_t)v38, v16);
        uint64_t v18 = v38[0];
        if (v39[40])
        {
          uint64_t v17 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for JSSource);
          sub_19EE97284(v17, *(void *)(*(void *)(v18 + 64) + 40), (uint64_t (*)(void))type metadata accessor for JSSource);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v19 = v38[1];
          swift_release();
          sub_19EEBB420(v28, (uint64_t)v35);
          uint64_t v32 = v36;
          uint64_t v20 = v37;
          uint64_t v31 = __swift_project_boxed_opaque_existential_1(v35, v36);
          long long v21 = v16;
          uint64_t v22 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for JSSource);
          unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v18;
          *(void *)(v24 + 24) = v19;
          uint64_t v25 = v22;
          uint64_t v16 = v21;
          sub_19EE97284(v25, v24 + v23, (uint64_t (*)(void))type metadata accessor for JSSource);
          uint64_t v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v20 + 8);
          swift_retain();
          v26(sub_19F1B81E8, v24, v32, v20);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
        }
        sub_19EEBD664((uint64_t)v40, v16);
        v15 += 80;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AF360(uint64_t a1)
{
}

void sub_19F1AF388(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v3 + 16) + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  if (*(unsigned char *)(v3 + 48) == 3)
  {
    os_unfair_lock_unlock(v5);
  }
  else if (*(unsigned char *)(v3 + 48))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    unint64_t v7 = *(void *)(v3 + 32);
    uint64_t v6 = *(void **)(v3 + 40);
    uint64_t v8 = *(void **)(v3 + 24);
    *(void *)(v3 + 24) = a1;
    *(void *)(v3 + 32) = a2;
    *(void *)(v3 + 40) = a3;
    *(unsigned char *)(v3 + 48) = 1;
    sub_19F08421C(v8, v7, v6, 0);
    sub_19EEA0784(a1, a2);
    id v21 = a3;
    sub_19EF58CA0(v8, v7, v6, 0);
    os_unfair_lock_unlock(v5);
    uint64_t v9 = v8[2];
    if (v9)
    {
      uint64_t v10 = (uint64_t)(v8 + 4);
      do
      {
        sub_19EEC3ED8(v10, (uint64_t)v30, &qword_1EB390C20);
        sub_19EEC3ED8((uint64_t)v30, (uint64_t)v27, &qword_1EB390C20);
        uint64_t v13 = v27[0];
        if (v29)
        {
          sub_19EEA0784(a1, a2);
          uint64_t v11 = *(uint64_t **)(*(void *)(v13 + 64) + 40);
          uint64_t *v11 = a1;
          v11[1] = a2;
          uint64_t v11[2] = (uint64_t)a3;
          id v12 = v21;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v14 = v27[1];
          swift_release();
          sub_19EEBB420(&v28, (uint64_t)v24);
          uint64_t v16 = v25;
          uint64_t v15 = v26;
          __swift_project_boxed_opaque_existential_1(v24, v25);
          uint64_t v17 = (void *)swift_allocObject();
          _OWORD v17[2] = v13;
          void v17[3] = v14;
          v17[4] = a1;
          v17[5] = a2;
          v17[6] = a3;
          uint64_t v18 = a3;
          uint64_t v19 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v15 + 8);
          sub_19EEA0784(a1, a2);
          id v20 = v21;
          swift_retain();
          v19(sub_19F1B7A14, v17, v16, v15);
          a3 = v18;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
        }
        sub_19EEBD664((uint64_t)v30, &qword_1EB390C20);
        v10 += 80;
        --v9;
      }
      while (v9);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AF644(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v21, &qword_1E9471030);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v21[0];
    sub_19EEC4154(a1, (uint64_t)v20);
    unsigned char v20[40] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v20, v1 + 24, &qword_1E9471030);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v20, &qword_1E9471038);
        sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, &qword_1E9471038);
        uint64_t v7 = v17[0];
        if (v19)
        {
          sub_19EEC4154(a1, (uint64_t)&v14);
          sub_19EEBB420(&v14, *(void *)(*(void *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v8 = v17[1];
          swift_release();
          sub_19EEBB420(&v18, (uint64_t)&v14);
          uint64_t v10 = v15;
          uint64_t v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19EEC4154(a1, (uint64_t)v13);
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v7;
          *(void *)(v11 + 24) = v8;
          sub_19EEBB420(v13, v11 + 32);
          id v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19EEA7148, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19EEBD664((uint64_t)v20, &qword_1E9471038);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AF8F4(uint64_t a1, char a2)
{
  uint64_t v5 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 33) == 3)
  {
    os_unfair_lock_unlock(v5);
  }
  else if (*(unsigned char *)(v2 + 33))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    int v6 = a2 & 1;
    uint64_t v7 = *(void *)(v2 + 24);
    *(void *)(v2 + 24) = a1;
    uint64_t v8 = *(unsigned __int8 *)(v2 + 32);
    int v9 = v6;
    *(unsigned char *)(v2 + 32) = v6;
    *(unsigned char *)(v2 + 33) = 1;
    uint64_t v10 = (void *)swift_bridgeObjectRetain();
    sub_19EE6F32C(v10, v8, 0);
    os_unfair_lock_unlock(v5);
    uint64_t v11 = v7;
    uint64_t v12 = *(void *)(v7 + 16);
    if (v12)
    {
      uint64_t v13 = v11 + 32;
      int v22 = v9;
      do
      {
        sub_19EEC3ED8(v13, (uint64_t)v33, &qword_1E9471040);
        sub_19EEC3ED8((uint64_t)v33, (uint64_t)v30, &qword_1E9471040);
        uint64_t v14 = v30[0];
        if (v32)
        {
          uint64_t v26 = a1;
          BOOL v27 = v9 != 0;
          sub_19F1B8980((uint64_t)&v26, *(void *)(*(void *)(v30[0] + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          BOOL v15 = v9 != 0;
          uint64_t v16 = v30[1];
          swift_release();
          sub_19EEBB420(&v31, (uint64_t)&v26);
          uint64_t v17 = v29;
          uint64_t v23 = v28;
          __swift_project_boxed_opaque_existential_1(&v26, v28);
          uint64_t v24 = a1;
          BOOL v25 = v15;
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = v14;
          *(void *)(v18 + 24) = v16;
          sub_19F1B8980((uint64_t)&v24, v18 + 32);
          uint64_t v19 = a1;
          id v20 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v17 + 8);
          swift_retain();
          uint64_t v21 = v17;
          int v9 = v22;
          v20(sub_19F1B8A14, v18, v23, v21);
          a1 = v19;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v26);
        }
        sub_19EEBD664((uint64_t)v33, &qword_1E9471040);
        v13 += 80;
        --v12;
      }
      while (v12);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1AFB80(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for PageIntentInstrumentation();
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v29 = v3;
  uint64_t v33 = (uint64_t)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471048);
  MEMORY[0x1F4188790](v4);
  int v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int v9 = (id *)((char *)v27 - v8);
  uint64_t v10 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v11, (uint64_t)v9, &qword_1E9471048);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v10);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v9;
    sub_19EE96E6C(v34, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v6, v11, &qword_1E9471048);
    swift_endAccess();
    os_unfair_lock_unlock(v10);
    uint64_t v14 = v13[2];
    if (v14)
    {
      v27[1] = v13;
      uint64_t v15 = (uint64_t)(v13 + 4);
      uint64_t v28 = (long long *)v39;
      uint64_t v16 = (uint64_t *)&unk_1E9471050;
      do
      {
        sub_19EEC3ED8(v15, (uint64_t)v40, v16);
        sub_19EEC3ED8((uint64_t)v40, (uint64_t)v38, v16);
        uint64_t v18 = v38[0];
        if (v39[40])
        {
          uint64_t v17 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
          sub_19EE97284(v17, *(void *)(*(void *)(v18 + 64) + 40), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v19 = v38[1];
          swift_release();
          sub_19EEBB420(v28, (uint64_t)v35);
          uint64_t v32 = v36;
          uint64_t v20 = v37;
          long long v31 = __swift_project_boxed_opaque_existential_1(v35, v36);
          uint64_t v21 = v16;
          uint64_t v22 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
          unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v18;
          *(void *)(v24 + 24) = v19;
          uint64_t v25 = v22;
          uint64_t v16 = v21;
          sub_19EE97284(v25, v24 + v23, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
          uint64_t v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v20 + 8);
          swift_retain();
          v26(sub_19F1B8A1C, v24, v32, v20);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
        }
        sub_19EEBD664((uint64_t)v40, v16);
        v15 += 80;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B0014(char a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = a1 & 1;
    uint64_t v5 = *(void *)(v1 + 24);
    *(void *)(v1 + 24) = v4;
    *(unsigned char *)(v1 + 32) = 1;
    int v6 = (void *)swift_bridgeObjectRetain();
    sub_19EE7F054(v6, 0);
    os_unfair_lock_unlock(v3);
    uint64_t v7 = *(void *)(v5 + 16);
    if (v7)
    {
      uint64_t v8 = v5 + 32;
      do
      {
        sub_19EEC3ED8(v8, (uint64_t)v21, &qword_1E946D1C0);
        sub_19EEC3ED8((uint64_t)v21, (uint64_t)v18, &qword_1E946D1C0);
        uint64_t v9 = v18[0];
        if (v20)
        {
          **(unsigned char **)(*(void *)(v18[0] + 64) + 40) = v4 != 0;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v10 = v18[1];
          swift_release();
          sub_19EEBB420(&v19, (uint64_t)v15);
          uint64_t v11 = v16;
          uint64_t v12 = v17;
          __swift_project_boxed_opaque_existential_1(v15, v16);
          uint64_t v13 = swift_allocObject();
          *(void *)(v13 + 16) = v9;
          *(void *)(v13 + 24) = v10;
          *(unsigned char *)(v13 + 32) = v4 != 0;
          uint64_t v14 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v12 + 8);
          swift_retain();
          v14(sub_19F1B8270, v13, v11, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
        }
        sub_19EEBD664((uint64_t)v21, &qword_1E946D1C0);
        v8 += 80;
        --v7;
      }
      while (v7);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B0270(uint64_t *a1)
{
  uint64_t v37 = a1[1];
  uint64_t v38 = *a1;
  uint64_t v35 = a1[3];
  uint64_t v36 = a1[2];
  uint64_t v2 = a1[4];
  uint64_t v3 = a1[5];
  uint64_t v33 = a1[7];
  uint64_t v34 = a1[6];
  uint64_t v32 = *((unsigned __int8 *)a1 + 64);
  uint64_t v30 = a1[10];
  uint64_t v31 = a1[9];
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  uint64_t v29 = a1[11];
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 120) == 3)
  {
    os_unfair_lock_unlock(v4);
  }
  else if (*(unsigned char *)(v1 + 120))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v22 = *(void *)(v1 + 104);
    uint64_t v23 = *(void *)(v1 + 112);
    uint64_t v20 = *(void *)(v1 + 88);
    uint64_t v21 = *(void *)(v1 + 96);
    uint64_t v5 = *(void *)(v1 + 80);
    uint64_t v6 = *(void *)(v1 + 64);
    uint64_t v26 = v6;
    uint64_t v27 = *(void *)(v1 + 72);
    uint64_t v25 = *(void *)(v1 + 56);
    uint64_t v7 = *(void *)(v1 + 40);
    uint64_t v18 = v7;
    uint64_t v19 = *(void *)(v1 + 48);
    uint64_t v8 = *(void **)(v1 + 24);
    uint64_t v9 = *(void *)(v1 + 32);
    *(void *)(v1 + 24) = v38;
    *(void *)(v1 + 32) = v37;
    *(void *)(v1 + 40) = v36;
    *(void *)(v1 + 48) = v35;
    *(void *)(v1 + 56) = v2;
    *(void *)(v1 + 64) = v3;
    *(void *)(v1 + 72) = v34;
    *(void *)(v1 + 80) = v33;
    *(void *)(v1 + 88) = v32;
    *(void *)(v1 + 96) = v31;
    *(void *)(v1 + 104) = v30;
    *(void *)(v1 + 112) = v29;
    *(unsigned char *)(v1 + 120) = 1;
    uint64_t v10 = v5;
    sub_19F084038(v8, v9, v7, v19, v25, v6, v27, v5, v20, v21, v22, v23, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19EF58BA4(v8, v9, v18, v19, v25, v26, v27, v10, v20, v21, v22, v23, 0);
    os_unfair_lock_unlock(v4);
    uint64_t v11 = v8[2];
    if (v11)
    {
      uint64_t v12 = (uint64_t)(v8 + 4);
      do
      {
        sub_19EEC3ED8(v12, (uint64_t)v45, &qword_1EB3906F0);
        sub_19EEC3ED8((uint64_t)v45, (uint64_t)v42, &qword_1EB3906F0);
        uint64_t v14 = v42[0];
        if (v44)
        {
          uint64_t v13 = *(void *)(*(void *)(v42[0] + 64) + 40);
          *(void *)uint64_t v13 = v38;
          *(void *)(v13 + 8) = v37;
          *(void *)(v13 + 16) = v36;
          *(void *)(v13 + 24) = v35;
          *(void *)(v13 + 32) = v2;
          *(void *)(v13 + 40) = v3;
          *(void *)(v13 + 48) = v34;
          *(void *)(v13 + 56) = v33;
          *(unsigned char *)(v13 + 64) = v32;
          *(void *)(v13 + 72) = v31;
          *(void *)(v13 + 80) = v30;
          *(void *)(v13 + 88) = v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v15 = v42[1];
          swift_release();
          sub_19EEBB420(&v43, (uint64_t)v39);
          uint64_t v16 = v41;
          uint64_t v28 = v40;
          __swift_project_boxed_opaque_existential_1(v39, v40);
          uint64_t v17 = swift_allocObject();
          *(void *)(v17 + 16) = v14;
          *(void *)(v17 + 24) = v15;
          *(void *)(v17 + 32) = v38;
          *(void *)(v17 + 40) = v37;
          *(void *)(v17 + 48) = v36;
          *(void *)(v17 + 56) = v35;
          *(void *)(v17 + 64) = v2;
          *(void *)(v17 + 72) = v3;
          *(void *)(v17 + 80) = v34;
          *(void *)(v17 + 88) = v33;
          *(unsigned char *)(v17 + 96) = v32;
          *(void *)(v17 + 104) = v31;
          *(void *)(v17 + 112) = v30;
          *(void *)(v17 + 120) = v29;
          uint64_t v24 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          v24(sub_19F1B8FCC, v17, v28, v16);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
        }
        sub_19EEBD664((uint64_t)v45, &qword_1EB3906F0);
        v12 += 80;
        --v11;
      }
      while (v11);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B068C(uint64_t a1)
{
  uint64_t v38 = sub_19F1DB34C();
  uint64_t v3 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v32 = v4;
  uint64_t v37 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3921D8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (id *)((char *)v27 - v9);
  os_unfair_lock_t v35 = (os_unfair_lock_t)(v1[2] + 16);
  os_unfair_lock_lock(v35);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v11, (uint64_t)v10, &qword_1EB3921D8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v35);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v10;
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v36(v7, a1, v38);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v7, v11, &qword_1EB3921D8);
    swift_endAccess();
    os_unfair_lock_unlock(v35);
    uint64_t v14 = v13[2];
    if (v14)
    {
      v27[1] = v13;
      uint64_t v15 = (uint64_t)(v13 + 4);
      uint64_t v28 = (long long *)v43;
      uint64_t v31 = v3;
      os_unfair_lock_t v35 = (os_unfair_lock_t)(v3 + 32);
      uint64_t v30 = a1;
      uint64_t v29 = v3 + 16;
      do
      {
        sub_19EEC3ED8(v15, (uint64_t)v44, &qword_1E946FC00);
        sub_19EEC3ED8((uint64_t)v44, (uint64_t)v42, &qword_1E946FC00);
        uint64_t v18 = v42[0];
        if (v43[40])
        {
          uint64_t v16 = v37;
          uint64_t v17 = v38;
          v36(v37, a1, v38);
          (*(void (**)(void, char *, uint64_t))&v35->_os_unfair_lock_opaque)(*(void *)(*(void *)(v18 + 64) + 40), v16, v17);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v19 = v42[1];
          swift_release();
          sub_19EEBB420(v28, (uint64_t)v39);
          uint64_t v34 = v40;
          uint64_t v20 = v41;
          uint64_t v33 = __swift_project_boxed_opaque_existential_1(v39, v40);
          uint64_t v21 = v37;
          uint64_t v22 = v38;
          v36(v37, a1, v38);
          uint64_t v23 = v31;
          unint64_t v24 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
          uint64_t v25 = swift_allocObject();
          *(void *)(v25 + 16) = v18;
          *(void *)(v25 + 24) = v19;
          (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v25 + v24, v21, v22);
          uint64_t v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v20 + 8);
          swift_retain();
          v26(sub_19F1B8184, v25, v34, v20);
          a1 = v30;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
        }
        sub_19EEBD664((uint64_t)v44, &qword_1E946FC00);
        v15 += 80;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B0B94(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v22, (uint64_t *)&unk_1E946DD80);
  if (v23 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v23)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v22[0];
    sub_19EEC3ED8(a1, (uint64_t)v21, &qword_1E946F7B0);
    unsigned char v21[40] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v21, v1 + 24, (uint64_t *)&unk_1E946DD80);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4;
    uint64_t v6 = v4[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v5 + 4);
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v21, (uint64_t *)&unk_1E946DDA0);
        sub_19EEC3ED8((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_1E946DDA0);
        uint64_t v8 = v18[0];
        if (v20)
        {
          sub_19EEC3ED8(a1, (uint64_t)v15, &qword_1E946F7B0);
          sub_19EEBDC4C((uint64_t)v15, *(void *)(*(void *)(v8 + 64) + 40), &qword_1E946F7B0);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v9 = v18[1];
          swift_release();
          sub_19EEBB420(&v19, (uint64_t)v15);
          uint64_t v10 = v17;
          uint64_t v13 = v16;
          __swift_project_boxed_opaque_existential_1(v15, v16);
          sub_19EEC3ED8(a1, (uint64_t)v14, &qword_1E946F7B0);
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v8;
          *(void *)(v11 + 24) = v9;
          sub_19EEBDC4C((uint64_t)v14, v11 + 32, &qword_1E946F7B0);
          uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
          swift_retain();
          v12(sub_19EEA7148, v11, v13, v10);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
        }
        sub_19EEBD664((uint64_t)v21, (uint64_t *)&unk_1E946DDA0);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B0E60(void *a1)
{
}

void sub_19F1B0E88(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v21, (uint64_t *)&unk_1E9471020);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v21[0];
    sub_19EEC4154(a1, (uint64_t)v20);
    unsigned char v20[40] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v20, v1 + 24, (uint64_t *)&unk_1E9471020);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v20, (uint64_t *)&unk_1E9473890);
        sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1E9473890);
        uint64_t v7 = v17[0];
        if (v19)
        {
          sub_19EEC4154(a1, (uint64_t)&v14);
          sub_19EEBB420(&v14, *(void *)(*(void *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v8 = v17[1];
          swift_release();
          sub_19EEBB420(&v18, (uint64_t)&v14);
          uint64_t v10 = v15;
          uint64_t v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19EEC4154(a1, (uint64_t)v13);
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v7;
          *(void *)(v11 + 24) = v8;
          sub_19EEBB420(v13, v11 + 32);
          uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19EEA7148, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E9473890);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B1138(uint64_t a1)
{
  uint64_t v2 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  if (*(unsigned char *)(v1 + 32) == 3)
  {
    os_unfair_lock_unlock(v2);
  }
  else if (*(unsigned char *)(v1 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = a1;
    *(unsigned char *)(v1 + 32) = 1;
    sub_19EEDA73C(v3, 0, MEMORY[0x1E4FBC8A8]);
    swift_bridgeObjectRetain();
    sub_19EEA766C(v3, 0, MEMORY[0x1E4FBC898]);
    os_unfair_lock_unlock(v2);
    uint64_t v4 = v3[2];
    if (v4)
    {
      uint64_t v5 = (uint64_t)(v3 + 4);
      uint64_t v6 = &qword_1E946FB90;
      do
      {
        sub_19EEC3ED8(v5, (uint64_t)v23, v6);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, v6);
        uint64_t v8 = v20[0];
        if (v22)
        {
          v17[0] = a1;
          uint64_t v7 = *(void *)(*(void *)(v20[0] + 64) + 40);
          swift_bridgeObjectRetain();
          sub_19EEBDC4C((uint64_t)v17, v7, &qword_1E946FB98);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v9 = v20[1];
          swift_release();
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v10 = v19;
          uint64_t v14 = v18;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          uint64_t v16 = a1;
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v8;
          *(void *)(v11 + 24) = v9;
          sub_19EEBDC4C((uint64_t)&v16, v11 + 32, &qword_1E946FB98);
          uint64_t v12 = v6;
          uint64_t v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          v13(sub_19EECAE70, v11, v14, v10);
          uint64_t v6 = v12;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, v6);
        v5 += 80;
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B13FC(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  uint64_t v4 = v1 + 24;
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v34, (uint64_t *)&unk_1E9471000);
  if (v35 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v35)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = v34[0];
    sub_19EEDFF38(a1, (uint64_t)&v28);
    char v33 = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)&v28, v4, (uint64_t *)&unk_1E9471000);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v6 = v5[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v5 + 4);
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v27, (uint64_t *)&unk_1E9473870);
        sub_19EEC3ED8((uint64_t)v27, (uint64_t)v24, (uint64_t *)&unk_1E9473870);
        uint64_t v12 = v24[0];
        if (v26)
        {
          sub_19EEDFF38(a1, (uint64_t)&v28);
          uint64_t v8 = *(_OWORD **)(*(void *)(v12 + 64) + 40);
          *uint64_t v8 = v28;
          long long v10 = v31;
          long long v9 = v32;
          long long v11 = v30;
          v8[1] = v29;
          _OWORD v8[2] = v11;
          void v8[3] = v10;
          v8[4] = v9;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v13 = v24[1];
          swift_release();
          sub_19EEBB420(&v25, (uint64_t)v21);
          uint64_t v15 = v22;
          uint64_t v14 = v23;
          __swift_project_boxed_opaque_existential_1(v21, v22);
          sub_19EEDFF38(a1, (uint64_t)&v28);
          uint64_t v16 = swift_allocObject();
          *(void *)(v16 + 16) = v12;
          *(void *)(v16 + 24) = v13;
          long long v17 = v31;
          *(_OWORD *)(v16 + 64) = v30;
          *(_OWORD *)(v16 + 80) = v17;
          *(_OWORD *)(v16 + 96) = v32;
          long long v18 = v29;
          *(_OWORD *)(v16 + 32) = v28;
          *(_OWORD *)(v16 + 48) = v18;
          uint64_t v19 = a1;
          char v20 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v14 + 8);
          swift_retain();
          v20(sub_19EEA7148, v16, v15, v14);
          a1 = v19;
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
        }
        sub_19EEBD664((uint64_t)v27, (uint64_t *)&unk_1E9473870);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B16DC(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v21, (uint64_t *)&unk_1E9471010);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v21[0];
    sub_19EEC4154(a1, (uint64_t)v20);
    unsigned char v20[40] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v20, v1 + 24, (uint64_t *)&unk_1E9471010);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v20, (uint64_t *)&unk_1E9473880);
        sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, (uint64_t *)&unk_1E9473880);
        uint64_t v7 = v17[0];
        if (v19)
        {
          sub_19EEC4154(a1, (uint64_t)&v14);
          sub_19EEBB420(&v14, *(void *)(*(void *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v8 = v17[1];
          swift_release();
          sub_19EEBB420(&v18, (uint64_t)&v14);
          uint64_t v10 = v15;
          uint64_t v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19EEC4154(a1, (uint64_t)v13);
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v7;
          *(void *)(v11 + 24) = v8;
          sub_19EEBB420(v13, v11 + 32);
          uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19EEA7148, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19EEBD664((uint64_t)v20, (uint64_t *)&unk_1E9473880);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B198C(void *a1)
{
}

void sub_19F1B19B4(uint64_t a1)
{
}

void sub_19F1B19DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(unsigned char *)(v4 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void **)(v4 + 24);
    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = 1;
    sub_19EEA76F0(v7, 0);
    swift_retain();
    sub_19EEA766C(v7, 0, MEMORY[0x1E4FBC8D0]);
    os_unfair_lock_unlock(v6);
    uint64_t v8 = v7[2];
    if (v8)
    {
      uint64_t v9 = (uint64_t)(v7 + 4);
      uint64_t v16 = a2;
      do
      {
        sub_19EEC3ED8(v9, (uint64_t)v25, a2);
        sub_19EEC3ED8((uint64_t)v25, (uint64_t)v22, a2);
        uint64_t v10 = v22[0];
        if (v24)
        {
          **(void **)(*(void *)(v22[0] + 64) + 40) = a1;
          swift_retain();
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v11 = v22[1];
          swift_release();
          sub_19EEBB420(&v23, (uint64_t)v19);
          uint64_t v13 = v20;
          uint64_t v12 = v21;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          long long v14 = (void *)swift_allocObject();
          long long v14[2] = v10;
          void v14[3] = v11;
          v14[4] = a1;
          uint64_t v15 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v12 + 8);
          swift_retain();
          swift_retain();
          a2 = v16;
          v15(a4, v14, v13, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19EEBD664((uint64_t)v25, a2);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B1C48(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for JetPackAsset(0);
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v29 = v3;
  uint64_t v33 = (uint64_t)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FC0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)v27 - v8);
  uint64_t v10 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v11, (uint64_t)v9, (uint64_t *)&unk_1E9470FC0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v10);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v9;
    sub_19EE96E6C(v34, (uint64_t)v6, type metadata accessor for JetPackAsset);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v6, v11, (uint64_t *)&unk_1E9470FC0);
    swift_endAccess();
    os_unfair_lock_unlock(v10);
    uint64_t v14 = v13[2];
    if (v14)
    {
      v27[1] = v13;
      uint64_t v15 = (uint64_t)(v13 + 4);
      long long v28 = (long long *)v39;
      uint64_t v16 = (uint64_t *)&unk_1E9473840;
      do
      {
        sub_19EEC3ED8(v15, (uint64_t)v40, v16);
        sub_19EEC3ED8((uint64_t)v40, (uint64_t)v38, v16);
        uint64_t v18 = v38[0];
        if (v39[40])
        {
          uint64_t v17 = v33;
          sub_19EE96E6C(v34, v33, type metadata accessor for JetPackAsset);
          sub_19EE97284(v17, *(void *)(*(void *)(v18 + 64) + 40), type metadata accessor for JetPackAsset);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v19 = v38[1];
          swift_release();
          sub_19EEBB420(v28, (uint64_t)v35);
          uint64_t v32 = v36;
          uint64_t v20 = v37;
          long long v31 = __swift_project_boxed_opaque_existential_1(v35, v36);
          uint64_t v21 = v16;
          uint64_t v22 = v33;
          sub_19EE96E6C(v34, v33, type metadata accessor for JetPackAsset);
          unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v18;
          *(void *)(v24 + 24) = v19;
          uint64_t v25 = v22;
          uint64_t v16 = v21;
          sub_19EE97284(v25, v24 + v23, type metadata accessor for JetPackAsset);
          char v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v20 + 8);
          swift_retain();
          v26(sub_19F1B86C4, v24, v32, v20);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
        }
        sub_19EEBD664((uint64_t)v40, v16);
        v15 += 80;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B20DC(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v29, (uint64_t *)&unk_1E9470FE0);
  if (v30 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v30)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v29[0];
    sub_19EE5A0EC(a1, (uint64_t)v28);
    v28[56] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v28, v1 + 24, (uint64_t *)&unk_1E9470FE0);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v28, (uint64_t *)&unk_1E9473860);
        sub_19EEC3ED8((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1E9473860);
        uint64_t v11 = v25[0];
        if (v27)
        {
          sub_19EE5A0EC(a1, (uint64_t)&v21);
          uint64_t v7 = *(void *)(*(void *)(v11 + 64) + 40);
          long long v8 = v21;
          long long v9 = v22;
          long long v10 = v23;
          *(void *)(v7 + 48) = v24;
          *(_OWORD *)(v7 + 16) = v9;
          *(_OWORD *)(v7 + 32) = v10;
          *(_OWORD *)uint64_t v7 = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v12 = v25[1];
          swift_release();
          sub_19EEBB420(&v26, (uint64_t)v18);
          uint64_t v14 = v19;
          uint64_t v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          sub_19EE5A0EC(a1, (uint64_t)&v21);
          uint64_t v15 = swift_allocObject();
          *(void *)(v15 + 16) = v11;
          *(void *)(v15 + 24) = v12;
          long long v16 = v22;
          *(_OWORD *)(v15 + 32) = v21;
          *(_OWORD *)(v15 + 48) = v16;
          *(_OWORD *)(v15 + 64) = v23;
          *(void *)(v15 + 80) = v24;
          uint64_t v17 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 8);
          swift_retain();
          v17(sub_19EEA7148, v15, v14, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19EEBD664((uint64_t)v28, (uint64_t *)&unk_1E9473860);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B23B0(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v29, (uint64_t *)&unk_1E9470FD0);
  if (v30 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v30)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v29[0];
    sub_19EE5A148(a1, (uint64_t)v28);
    v28[56] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v28, v1 + 24, (uint64_t *)&unk_1E9470FD0);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v28, (uint64_t *)&unk_1E9473850);
        sub_19EEC3ED8((uint64_t)v28, (uint64_t)v25, (uint64_t *)&unk_1E9473850);
        uint64_t v11 = v25[0];
        if (v27)
        {
          sub_19EE5A148(a1, (uint64_t)&v21);
          uint64_t v7 = *(void *)(*(void *)(v11 + 64) + 40);
          long long v8 = v21;
          long long v9 = v22;
          long long v10 = v23;
          *(void *)(v7 + 48) = v24;
          *(_OWORD *)(v7 + 16) = v9;
          *(_OWORD *)(v7 + 32) = v10;
          *(_OWORD *)uint64_t v7 = v8;
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v12 = v25[1];
          swift_release();
          sub_19EEBB420(&v26, (uint64_t)v18);
          uint64_t v14 = v19;
          uint64_t v13 = v20;
          __swift_project_boxed_opaque_existential_1(v18, v19);
          sub_19EE5A148(a1, (uint64_t)&v21);
          uint64_t v15 = swift_allocObject();
          *(void *)(v15 + 16) = v11;
          *(void *)(v15 + 24) = v12;
          long long v16 = v22;
          *(_OWORD *)(v15 + 32) = v21;
          *(_OWORD *)(v15 + 48) = v16;
          *(_OWORD *)(v15 + 64) = v23;
          *(void *)(v15 + 80) = v24;
          uint64_t v17 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v13 + 8);
          swift_retain();
          v17(sub_19EEA7148, v15, v14, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
        }
        sub_19EEBD664((uint64_t)v28, (uint64_t *)&unk_1E9473850);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B2684(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for JSPackageIndex();
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v29 = v3;
  uint64_t v33 = (uint64_t)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E9470FB0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v9 = (id *)((char *)v27 - v8);
  long long v10 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v11, (uint64_t)v9, (uint64_t *)&unk_1E9470FB0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v10);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v9;
    sub_19EE96E6C(v34, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v6, v11, (uint64_t *)&unk_1E9470FB0);
    swift_endAccess();
    os_unfair_lock_unlock(v10);
    uint64_t v14 = v13[2];
    if (v14)
    {
      v27[1] = v13;
      uint64_t v15 = (uint64_t)(v13 + 4);
      long long v28 = (long long *)v39;
      long long v16 = (uint64_t *)&unk_1E9476570;
      do
      {
        sub_19EEC3ED8(v15, (uint64_t)v40, v16);
        sub_19EEC3ED8((uint64_t)v40, (uint64_t)v38, v16);
        uint64_t v18 = v38[0];
        if (v39[40])
        {
          uint64_t v17 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
          sub_19EE97284(v17, *(void *)(*(void *)(v18 + 64) + 40), (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v19 = v38[1];
          swift_release();
          sub_19EEBB420(v28, (uint64_t)v35);
          uint64_t v32 = v36;
          uint64_t v20 = v37;
          long long v31 = __swift_project_boxed_opaque_existential_1(v35, v36);
          long long v21 = v16;
          uint64_t v22 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
          unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v18;
          *(void *)(v24 + 24) = v19;
          uint64_t v25 = v22;
          long long v16 = v21;
          sub_19EE97284(v25, v24 + v23, (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
          long long v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v20 + 8);
          swift_retain();
          v26(sub_19F1B8478, v24, v32, v20);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
        }
        sub_19EEBD664((uint64_t)v40, v16);
        v15 += 80;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B2B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v3 + 16) + 16);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  if (*(unsigned char *)(v3 + 48) == 3)
  {
    os_unfair_lock_unlock(v4);
  }
  else if (*(unsigned char *)(v3 + 48))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 32);
    uint64_t v5 = *(void *)(v3 + 40);
    uint64_t v7 = *(void **)(v3 + 24);
    *(void *)(v3 + 24) = a1;
    *(void *)(v3 + 32) = a2;
    *(void *)(v3 + 40) = a3;
    *(unsigned char *)(v3 + 48) = 1;
    sub_19F083A7C(v7, v6, v5, 0);
    sub_19EF58A68(a1);
    swift_bridgeObjectRetain();
    sub_19EF5898C(v7, v6, v5, 0);
    os_unfair_lock_unlock(v4);
    uint64_t v8 = v7[2];
    if (v8)
    {
      uint64_t v9 = (uint64_t)(v7 + 4);
      do
      {
        sub_19EEC3ED8(v9, (uint64_t)v26, &qword_1E946CDA0);
        sub_19EEC3ED8((uint64_t)v26, (uint64_t)v23, &qword_1E946CDA0);
        uint64_t v11 = v23[0];
        if (v25)
        {
          sub_19EF58A68(a1);
          long long v10 = *(uint64_t **)(*(void *)(v11 + 64) + 40);
          *long long v10 = a1;
          v10[1] = a2;
          void v10[2] = a3;
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v12 = v23[1];
          swift_release();
          sub_19EEBB420(&v24, (uint64_t)v20);
          uint64_t v14 = v21;
          uint64_t v13 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          uint64_t v15 = (void *)swift_allocObject();
          v15[2] = v11;
          void v15[3] = v12;
          v15[4] = a1;
          v15[5] = a2;
          v15[6] = a3;
          long long v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
          sub_19EF58A68(a1);
          swift_bridgeObjectRetain();
          swift_retain();
          v16(sub_19F1B7A14, v15, v14, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19EEBD664((uint64_t)v26, &qword_1E946CDA0);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B2DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v2 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  if (*(unsigned char *)(v2 + 40) == 3)
  {
    os_unfair_lock_unlock(v3);
  }
  else if (*(unsigned char *)(v2 + 40))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void **)(v2 + 24);
    uint64_t v5 = *(void *)(v2 + 32);
    *(void *)(v2 + 24) = a1;
    *(void *)(v2 + 32) = a2;
    *(unsigned char *)(v2 + 40) = 1;
    sub_19F1B834C(v4, v5, 0, (uint64_t (*)(id))sub_19EF58A68);
    sub_19EF58A68(a1);
    sub_19F1B83A0(v4, v5, 0, (void (*)(id))sub_19EF58A28);
    os_unfair_lock_unlock(v3);
    uint64_t v6 = v4[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v7, (uint64_t)v23, &qword_1E946CB98);
        sub_19EEC3ED8((uint64_t)v23, (uint64_t)v20, &qword_1E946CB98);
        uint64_t v8 = v20[0];
        if (v22)
        {
          v17[0] = a1;
          v17[1] = a2;
          sub_19EF58A68(a1);
          sub_19EEBDC4C((uint64_t)v17, *(void *)(*(void *)(v8 + 64) + 40), (uint64_t *)&unk_1E946CD90);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v9 = v20[1];
          swift_release();
          sub_19EEBB420(&v21, (uint64_t)v17);
          uint64_t v10 = v19;
          uint64_t v13 = v18;
          __swift_project_boxed_opaque_existential_1(v17, v18);
          v16[0] = a1;
          v16[1] = a2;
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v8;
          *(void *)(v11 + 24) = v9;
          sub_19EEBDC4C((uint64_t)v16, v11 + 32, (uint64_t *)&unk_1E946CD90);
          uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
          sub_19EF58A68(a1);
          swift_retain();
          v12(sub_19EEA6FB8, v11, v13, v10);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        }
        sub_19EEBD664((uint64_t)v23, &qword_1E946CB98);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B30A4(uint64_t a1)
{
}

void sub_19F1B30CC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v4 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(unsigned char *)(v4 + 32) == 3)
  {
    os_unfair_lock_unlock(v6);
  }
  else if (*(unsigned char *)(v4 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void **)(v4 + 24);
    *(void *)(v4 + 24) = a1;
    *(unsigned char *)(v4 + 32) = 1;
    sub_19EEDA73C(v7, 0, MEMORY[0x1E4FBC8A8]);
    swift_bridgeObjectRetain();
    sub_19EEA766C(v7, 0, MEMORY[0x1E4FBC898]);
    os_unfair_lock_unlock(v6);
    uint64_t v8 = v7[2];
    if (v8)
    {
      uint64_t v9 = (uint64_t)(v7 + 4);
      long long v16 = a2;
      do
      {
        sub_19EEC3ED8(v9, (uint64_t)v25, a2);
        sub_19EEC3ED8((uint64_t)v25, (uint64_t)v22, a2);
        uint64_t v10 = v22[0];
        if (v24)
        {
          **(void **)(*(void *)(v22[0] + 64) + 40) = a1;
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v11 = v22[1];
          swift_release();
          sub_19EEBB420(&v23, (uint64_t)v19);
          uint64_t v13 = v20;
          uint64_t v12 = v21;
          __swift_project_boxed_opaque_existential_1(v19, v20);
          uint64_t v14 = (void *)swift_allocObject();
          long long v14[2] = v10;
          void v14[3] = v11;
          v14[4] = a1;
          uint64_t v15 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v12 + 8);
          swift_bridgeObjectRetain();
          swift_retain();
          a2 = v16;
          v15(a4, v14, v13, v12);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        }
        sub_19EEBD664((uint64_t)v25, a2);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B334C(void *a1)
{
}

void sub_19F1B3374(uint64_t a1)
{
  uint64_t v3 = (os_unfair_lock_s *)(*(void *)(v1 + 16) + 16);
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  sub_19EEC3ED8(v1 + 24, (uint64_t)v21, (uint64_t *)&unk_1E946C790);
  if (v22 == 3)
  {

    os_unfair_lock_unlock(v3);
  }
  else if (v22)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v21[0];
    sub_19EEC4154(a1, (uint64_t)v20);
    unsigned char v20[40] = 1;
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v20, v1 + 24, (uint64_t *)&unk_1E946C790);
    swift_endAccess();
    os_unfair_lock_unlock(v3);
    uint64_t v5 = v4[2];
    if (v5)
    {
      uint64_t v6 = (uint64_t)(v4 + 4);
      do
      {
        sub_19EEC3ED8(v6, (uint64_t)v20, &qword_1E9473838);
        sub_19EEC3ED8((uint64_t)v20, (uint64_t)v17, &qword_1E9473838);
        uint64_t v7 = v17[0];
        if (v19)
        {
          sub_19EEC4154(a1, (uint64_t)&v14);
          sub_19EEBB420(&v14, *(void *)(*(void *)(v7 + 64) + 40));
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v8 = v17[1];
          swift_release();
          sub_19EEBB420(&v18, (uint64_t)&v14);
          uint64_t v10 = v15;
          uint64_t v9 = v16;
          __swift_project_boxed_opaque_existential_1(&v14, v15);
          sub_19EEC4154(a1, (uint64_t)v13);
          uint64_t v11 = swift_allocObject();
          *(void *)(v11 + 16) = v7;
          *(void *)(v11 + 24) = v8;
          sub_19EEBB420(v13, v11 + 32);
          uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
          swift_retain();
          v12(sub_19EEA7148, v11, v10, v9);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
        }
        sub_19EEBD664((uint64_t)v20, &qword_1E9473838);
        v6 += 80;
        --v5;
      }
      while (v5);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B3624(uint64_t a1)
{
}

void sub_19F1B364C(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for JSIntentResult();
  uint64_t v30 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v29 = v3;
  uint64_t v33 = (uint64_t)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9473818);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)((char *)v27 - v8);
  uint64_t v10 = (os_unfair_lock_s *)(v1[2] + 16);
  os_unfair_lock_lock(v10);
  uint64_t v11 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  sub_19EEC3ED8(v11, (uint64_t)v9, &qword_1E9473818);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {

    os_unfair_lock_unlock(v10);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v13 = *v9;
    sub_19EE96E6C(v34, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for JSIntentResult);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_19EE6EEAC((uint64_t)v6, v11, &qword_1E9473818);
    swift_endAccess();
    os_unfair_lock_unlock(v10);
    uint64_t v14 = v13[2];
    if (v14)
    {
      v27[1] = v13;
      uint64_t v15 = (uint64_t)(v13 + 4);
      long long v28 = (long long *)v39;
      uint64_t v16 = (uint64_t *)&unk_1E9473820;
      do
      {
        sub_19EEC3ED8(v15, (uint64_t)v40, v16);
        sub_19EEC3ED8((uint64_t)v40, (uint64_t)v38, v16);
        uint64_t v18 = v38[0];
        if (v39[40])
        {
          uint64_t v17 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for JSIntentResult);
          sub_19EE97284(v17, *(void *)(*(void *)(v18 + 64) + 40), (uint64_t (*)(void))type metadata accessor for JSIntentResult);
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v19 = v38[1];
          swift_release();
          sub_19EEBB420(v28, (uint64_t)v35);
          uint64_t v32 = v36;
          uint64_t v20 = v37;
          long long v31 = __swift_project_boxed_opaque_existential_1(v35, v36);
          uint64_t v21 = v16;
          uint64_t v22 = v33;
          sub_19EE96E6C(v34, v33, (uint64_t (*)(void))type metadata accessor for JSIntentResult);
          unint64_t v23 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v18;
          *(void *)(v24 + 24) = v19;
          uint64_t v25 = v22;
          uint64_t v16 = v21;
          sub_19EE97284(v25, v24 + v23, (uint64_t (*)(void))type metadata accessor for JSIntentResult);
          long long v26 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v20 + 8);
          swift_retain();
          v26(sub_19F1B8154, v24, v32, v20);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
        }
        sub_19EEBD664((uint64_t)v40, v16);
        v15 += 80;
        --v14;
      }
      while (v14);
    }
    swift_bridgeObjectRelease();
  }
}

void sub_19F1B3AE0(uint64_t a1)
{
}

void sub_19F1B3B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (os_unfair_lock_s *)(*(void *)(v3 + 16) + 16);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  if (*(unsigned char *)(v3 + 48) == 3)
  {
    os_unfair_lock_unlock(v4);
  }
  else if (*(unsigned char *)(v3 + 48))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v6 = *(void *)(v3 + 32);
    uint64_t v5 = *(void *)(v3 + 40);
    uint64_t v7 = *(void **)(v3 + 24);
    *(void *)(v3 + 24) = a1;
    *(void *)(v3 + 32) = a2;
    *(void *)(v3 + 40) = a3;
    *(unsigned char *)(v3 + 48) = 1;
    sub_19F083350(v7, v6, v5, 0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19EF58890(v7, v6, v5, 0);
    os_unfair_lock_unlock(v4);
    uint64_t v8 = v7[2];
    if (v8)
    {
      uint64_t v9 = (uint64_t)(v7 + 4);
      do
      {
        sub_19EEC3ED8(v9, (uint64_t)v26, (uint64_t *)&unk_1E9470F70);
        sub_19EEC3ED8((uint64_t)v26, (uint64_t)v23, (uint64_t *)&unk_1E9470F70);
        uint64_t v11 = v23[0];
        if (v25)
        {
          uint64_t v10 = *(void **)(*(void *)(v23[0] + 64) + 40);
          *uint64_t v10 = a1;
          v10[1] = a2;
          void v10[2] = a3;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v12 = v23[1];
          swift_release();
          sub_19EEBB420(&v24, (uint64_t)v20);
          uint64_t v14 = v21;
          uint64_t v13 = v22;
          __swift_project_boxed_opaque_existential_1(v20, v21);
          uint64_t v15 = (void *)swift_allocObject();
          v15[2] = v11;
          void v15[3] = v12;
          v15[4] = a1;
          v15[5] = a2;
          v15[6] = a3;
          uint64_t v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          v16(sub_19F1B7A14, v15, v14, v13);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
        }
        sub_19EEBD664((uint64_t)v26, (uint64_t *)&unk_1E9470F70);
        v9 += 80;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_19F1B3DD8(uint64_t a1)
{
  return sub_19F1B3E50(a1, &qword_1E946D620, (uint64_t)&unk_1EF158120, MEMORY[0x1E4FBC8A8], (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B3E14(uint64_t a1)
{
  return sub_19F1B3E50(a1, (uint64_t *)&unk_1EB3909D0, (uint64_t)&unk_1EF158350, MEMORY[0x1E4FBC900], (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B3E50(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v8 = v5;
  sub_19EEC3ED8(v8, (uint64_t)v20, a2);
  uint64_t v10 = v20[0];
  if (v22)
  {
    **(void **)(*(void *)(v20[0] + 64) + 40) = a1;
    a4(a1);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v12 = v20[1];
    swift_release();
    sub_19EEBB420(&v21, (uint64_t)v17);
    uint64_t v13 = v18;
    uint64_t v14 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v10;
    void v15[3] = v12;
    v15[4] = a1;
    uint64_t v16 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(v14 + 8);
    a4(a1);
    swift_retain();
    v16(a5, v15, v13, v14);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
}

uint64_t sub_19F1B3F98(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  sub_19EEC3ED8(v5, (uint64_t)v21, &qword_1E9471080);
  uint64_t v10 = v21[0];
  if (v23)
  {
    v18[0] = a1;
    v18[1] = a2;
    void v18[2] = a3;
    uint64_t v19 = a4;
    sub_19EF3C628(a1, a2);
    sub_19F1B8E60((uint64_t)v18, *(void *)(*(void *)(v10 + 64) + 40));
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v12 = v21[1];
    swift_release();
    sub_19EEBB420(&v22, (uint64_t)v18);
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v17[0] = a1;
    v17[1] = a2;
    _OWORD v17[2] = a3;
    void v17[3] = a4;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v10;
    *(void *)(v15 + 24) = v12;
    sub_19F1B8E60((uint64_t)v17, v15 + 32);
    uint64_t v16 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v14 + 8);
    sub_19EF3C628(a1, a2);
    swift_retain();
    v16(sub_19F1B8EC0, v15, v13, v14);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  }
}

uint64_t sub_19F1B4124(void *a1)
{
  return sub_19EE9B7F4(a1, &qword_1E94738A0, (uint64_t)&unk_1EF159160, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B414C(uint64_t a1)
{
  sub_19EEC3ED8(v1, (uint64_t)v15, &qword_1E946FB90);
  uint64_t v3 = v15[0];
  if (v17)
  {
    v12[0] = a1;
    uint64_t v4 = *(void *)(*(void *)(v15[0] + 64) + 40);
    swift_bridgeObjectRetain();
    sub_19EEBDC4C((uint64_t)v12, v4, &qword_1E946FB98);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v6 = v15[1];
    swift_release();
    sub_19EEBB420(&v16, (uint64_t)v12);
    uint64_t v7 = v13;
    uint64_t v8 = v14;
    __swift_project_boxed_opaque_existential_1(v12, v13);
    uint64_t v11 = a1;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v3;
    *(void *)(v9 + 24) = v6;
    sub_19EEBDC4C((uint64_t)&v11, v9 + 32, &qword_1E946FB98);
    uint64_t v10 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v10(sub_19EECAE70, v9, v7, v8);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  }
}

uint64_t sub_19F1B42BC(uint64_t a1, char a2)
{
  return sub_19F1B431C(a1, a2, (uint64_t *)&unk_1E946F910, (uint64_t)&unk_1EF1591D8, &qword_1E946F920, (uint64_t)sub_19F1B8A14);
}

uint64_t sub_19F1B42EC(uint64_t a1, char a2)
{
  return sub_19F1B431C(a1, a2, &qword_1EB3908A0, (uint64_t)&unk_1EF158FD0, &qword_1EB390E70, (uint64_t)sub_19F1B8A14);
}

uint64_t sub_19F1B431C(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  sub_19EEC3ED8(v6, (uint64_t)v24, a3);
  uint64_t v11 = v24[0];
  if (v26)
  {
    uint64_t v20 = a1;
    char v21 = a2 & 1;
    sub_19EEBDC4C((uint64_t)&v20, *(void *)(*(void *)(v24[0] + 64) + 40), a5);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v13 = v24[1];
    swift_release();
    sub_19EEBB420(&v25, (uint64_t)&v20);
    uint64_t v14 = v22;
    uint64_t v15 = v23;
    __swift_project_boxed_opaque_existential_1(&v20, v22);
    uint64_t v18 = a1;
    char v19 = a2 & 1;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v11;
    *(void *)(v16 + 24) = v13;
    sub_19EEBDC4C((uint64_t)&v18, v16 + 32, a5);
    char v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8);
    swift_retain();
    v17(a6, v16, v14, v15);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
  }
}

uint64_t sub_19F1B4474(uint64_t a1)
{
  return sub_19F1B4F2C(a1, (uint64_t *)&unk_1E946DDB0, (uint64_t)&unk_1EF158D00, (void (*)(unsigned char *, uint64_t))sub_19EEBB420, (uint64_t)sub_19EEA7148);
}

uint64_t sub_19F1B44B0()
{
  sub_19EEC3ED8(v0, (uint64_t)v11, &qword_1E946FBE0);
  uint64_t v1 = v11[0];
  if (v13) {
    return swift_continuation_throwingResume();
  }
  uint64_t v3 = v11[1];
  swift_release();
  sub_19EEBB420(&v12, (uint64_t)v8);
  uint64_t v4 = v9;
  uint64_t v5 = v10;
  __swift_project_boxed_opaque_existential_1(v8, v9);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v3;
  uint64_t v7 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v5 + 8);
  swift_retain();
  v7(sub_19EEA6FE8, v6, v4, v5);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
}

uint64_t sub_19F1B45B8(uint64_t a1)
{
  sub_19EEC3ED8(v1, (uint64_t)v13, &qword_1EB390E20);
  uint64_t v3 = v13[0];
  if (v15)
  {
    **(void **)(*(void *)(v13[0] + 64) + 40) = a1;
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v5 = v13[1];
    swift_release();
    sub_19EEBB420(&v14, (uint64_t)v10);
    uint64_t v6 = v11;
    uint64_t v7 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v8 = (void *)swift_allocObject();
    _OWORD v8[2] = v3;
    void v8[3] = v5;
    v8[4] = a1;
    uint64_t v9 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    v9(sub_19EECAE70, v8, v6, v7);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
}

uint64_t sub_19F1B46E8(void *a1)
{
  return sub_19EE9B7F4(a1, (uint64_t *)&unk_1EB3909E8, (uint64_t)&unk_1EF1586E8, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B4710(void *a1)
{
  return sub_19EE9B7F4(a1, (uint64_t *)&unk_1EB3918A0, (uint64_t)&unk_1EF158A30, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B4738(uint64_t a1)
{
  return sub_19F1B3E50(a1, (uint64_t *)&unk_1E946D610, (uint64_t)&unk_1EF157F18, MEMORY[0x1E4FBC8A8], (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B4774(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MTMetricsIdentifier();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  sub_19EEC3ED8(v1, (uint64_t)v18, (uint64_t *)&unk_1E946D600);
  uint64_t v6 = v18[0];
  if (v20)
  {
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v6 + 64) + 40), (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v8;
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
    char v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    v13(sub_19F1B7988, v12, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_19F1B4984(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_19EEC3ED8(v3, (uint64_t)v17, &qword_1E9470FA0);
  uint64_t v6 = v17[0];
  if (v19)
  {
    uint64_t v7 = *(void **)(*(void *)(v17[0] + 64) + 40);
    *uint64_t v7 = a1;
    v7[1] = a2;
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v9 = v17[1];
    swift_release();
    sub_19EEBB420(&v18, (uint64_t)v14);
    uint64_t v10 = v15;
    uint64_t v11 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v6;
    void v12[3] = v9;
    v12[4] = a1;
    uint64_t v12[5] = a2;
    char v13 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v13(sub_19F1B7B04, v12, v10, v11);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
}

uint64_t sub_19F1B4AD4(void *a1)
{
  return sub_19EE9B7F4(a1, (uint64_t *)&unk_1EB3918B0, (uint64_t)&unk_1EF158508, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B4AFC(uint64_t a1)
{
  return sub_19F1B4CCC(a1, MEMORY[0x1E4F26C48], (uint64_t *)&unk_1E946F9D0, (uint64_t)&unk_1EF1589E0, (uint64_t)sub_19F1B85B4);
}

uint64_t sub_19F1B4B38(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  sub_19EEC3ED8(v3, (uint64_t)v17, &qword_1E9473830);
  uint64_t v6 = v17[0];
  if (v19)
  {
    sub_19EEA0784(a1, a2);
    uint64_t v7 = *(uint64_t **)(*(void *)(v6 + 64) + 40);
    *uint64_t v7 = a1;
    v7[1] = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v9 = v17[1];
    swift_release();
    sub_19EEBB420(&v18, (uint64_t)v14);
    uint64_t v10 = v15;
    uint64_t v11 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v6;
    void v12[3] = v9;
    v12[4] = a1;
    uint64_t v12[5] = a2;
    char v13 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v11 + 8);
    sub_19EEA0784(a1, a2);
    swift_retain();
    v13(sub_19EEA6FB8, v12, v10, v11);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
}

uint64_t sub_19F1B4C90(uint64_t a1)
{
  return sub_19F1B4CCC(a1, MEMORY[0x1E4F276F0], &qword_1E946FC00, (uint64_t)&unk_1EF158580, (uint64_t)sub_19F1B8184);
}

uint64_t sub_19F1B4CCC(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = v5;
  uint64_t v10 = a2(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)v22 - v12;
  sub_19EEC3ED8(v8, (uint64_t)v27, a3);
  uint64_t v14 = v27[0];
  if (v29)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    (*(void (**)(void, char *, uint64_t))(v11 + 32))(*(void *)(*(void *)(v14 + 64) + 40), v13, v10);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v16 = v27[1];
    swift_release();
    sub_19EEBB420(&v28, (uint64_t)v24);
    uint64_t v23 = a5;
    uint64_t v17 = v25;
    uint64_t v18 = v26;
    v22[1] = __swift_project_boxed_opaque_existential_1(v24, v25);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
    unint64_t v19 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v14;
    *(void *)(v20 + 24) = v16;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v20 + v19, v13, v10);
    char v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8);
    swift_retain();
    v21(v23, v20, v17, v18);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v24);
  }
}

uint64_t sub_19F1B4EF0(uint64_t a1)
{
  return sub_19F1B4F2C(a1, (uint64_t *)&unk_1E9470F80, (uint64_t)&unk_1EF158058, (void (*)(unsigned char *, uint64_t))sub_19EEBB420, (uint64_t)sub_19EEA7148);
}

uint64_t sub_19F1B4F2C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t), uint64_t a5)
{
  sub_19EEC3ED8(v5, (uint64_t)v20, a2);
  uint64_t v9 = v20[0];
  if (v22)
  {
    sub_19EEC4154(a1, (uint64_t)v17);
    a4(v17, *(void *)(*(void *)(v9 + 64) + 40));
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v11 = v20[1];
    swift_release();
    sub_19EEBB420(&v21, (uint64_t)v17);
    uint64_t v12 = v18;
    uint64_t v13 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    sub_19EEC4154(a1, (uint64_t)v16);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v9;
    *(void *)(v14 + 24) = v11;
    a4(v16, v14 + 32);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8);
    swift_retain();
    v15(a5, v14, v12, v13);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  }
}

uint64_t sub_19F1B5084(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JSSource();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  sub_19EEC3ED8(v1, (uint64_t)v18, &qword_1E9470FA8);
  uint64_t v6 = v18[0];
  if (v20)
  {
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for JSSource);
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v6 + 64) + 40), (uint64_t (*)(void))type metadata accessor for JSSource);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for JSSource);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v8;
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for JSSource);
    uint64_t v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    v13(sub_19F1B81E8, v12, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_19F1B5294(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  sub_19EEC3ED8(v4, (uint64_t)v21, &qword_1EB390C20);
  uint64_t v8 = v21[0];
  if (v23)
  {
    sub_19EEA0784(a1, a2);
    uint64_t v9 = *(uint64_t **)(*(void *)(v8 + 64) + 40);
    *uint64_t v9 = a1;
    v9[1] = a2;
    void v9[2] = (uint64_t)a3;
    id v10 = a3;
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v12 = v21[1];
    swift_release();
    sub_19EEBB420(&v22, (uint64_t)v18);
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v8;
    void v15[3] = v12;
    v15[4] = a1;
    v15[5] = a2;
    v15[6] = a3;
    uint64_t v16 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v14 + 8);
    sub_19EEA0784(a1, a2);
    id v17 = a3;
    swift_retain();
    v16(sub_19F1B7A14, v15, v13, v14);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  }
}

uint64_t sub_19F1B5400(uint64_t a1)
{
  return sub_19EE26590(a1, &qword_1E9471060, (uint64_t)&unk_1EF159048, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B5428(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JSResponse();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  sub_19EEC3ED8(v1, (uint64_t)v18, &qword_1EB3912C0);
  uint64_t v6 = v18[0];
  if (v20)
  {
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for JSResponse);
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v6 + 64) + 40), (uint64_t (*)(void))type metadata accessor for JSResponse);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for JSResponse);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v8;
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for JSResponse);
    uint64_t v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    v13(sub_19EEA6734, v12, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_19F1B5638(uint64_t a1)
{
  return sub_19F1B6224(a1, &qword_1EB391EE8, &qword_1EB3912C8, (uint64_t)&unk_1EF158D78, (uint64_t)sub_19EEB22E0);
}

uint64_t sub_19F1B5668(void *a1)
{
  return sub_19EE9B7F4(a1, &qword_1EB3912E0, (uint64_t)&unk_1EF158760, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B5690(uint64_t a1)
{
  return sub_19F1B4F2C(a1, &qword_1E9471038, (uint64_t)&unk_1EF158DC8, (void (*)(unsigned char *, uint64_t))sub_19EEBB420, (uint64_t)sub_19EEA7148);
}

uint64_t sub_19F1B56CC(uint64_t a1, char a2)
{
  sub_19EEC3ED8(v2, (uint64_t)v18, &qword_1E9471040);
  uint64_t v5 = v18[0];
  if (v20)
  {
    uint64_t v14 = a1;
    char v15 = a2 & 1;
    sub_19F1B8980((uint64_t)&v14, *(void *)(*(void *)(v18[0] + 64) + 40));
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v7 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)&v14);
    uint64_t v8 = v16;
    uint64_t v9 = v17;
    __swift_project_boxed_opaque_existential_1(&v14, v16);
    uint64_t v12 = a1;
    char v13 = a2 & 1;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v5;
    *(void *)(v10 + 24) = v7;
    sub_19F1B8980((uint64_t)&v12, v10 + 32);
    unint64_t v11 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
    swift_retain();
    v11(sub_19F1B8A14, v10, v8, v9);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
  }
}

uint64_t sub_19F1B5824(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PageIntentInstrumentation();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  sub_19EEC3ED8(v1, (uint64_t)v18, (uint64_t *)&unk_1E9471050);
  uint64_t v6 = v18[0];
  if (v20)
  {
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v6 + 64) + 40), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v8;
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
    char v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    v13(sub_19F1B8A1C, v12, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_19F1B5A34(char a1)
{
  sub_19EEC3ED8(v1, (uint64_t)v13, &qword_1E946D1C0);
  uint64_t v3 = v13[0];
  if (v15)
  {
    **(unsigned char **)(*(void *)(v13[0] + 64) + 40) = a1 & 1;
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v5 = v13[1];
    swift_release();
    sub_19EEBB420(&v14, (uint64_t)v10);
    uint64_t v6 = v11;
    uint64_t v7 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v5;
    *(unsigned char *)(v8 + 32) = a1 & 1;
    uint64_t v9 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    v9(sub_19F1B8270, v8, v6, v7);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
}

uint64_t sub_19F1B5B68(char a1)
{
  uint64_t v2 = v1;
  sub_19EEC3ED8(v2, (uint64_t)v14, &qword_1E946EB20);
  uint64_t v4 = v14[0];
  if (v16)
  {
    **(unsigned char **)(*(void *)(v14[0] + 64) + 40) = a1 & 1;
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v6 = v14[1];
    swift_release();
    sub_19EEBB420(&v15, (uint64_t)v11);
    uint64_t v7 = v12;
    uint64_t v8 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v4;
    *(void *)(v9 + 24) = v6;
    *(unsigned char *)(v9 + 32) = a1 & 1;
    uint64_t v10 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v8 + 8);
    swift_retain();
    v10(sub_19F1B8270, v9, v7, v8);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  }
}

uint64_t sub_19F1B5CA4(long long *a1)
{
  sub_19EEC3ED8(v1, (uint64_t)v16, (uint64_t *)&unk_1EB3904F0);
  uint64_t v3 = v16[0];
  if (v18)
  {
    long long v4 = a1[1];
    long long v13 = *a1;
    long long v14 = v4;
    long long v15 = a1[2];
    sub_19EE4E86C((uint64_t)a1);
    uint64_t v5 = *(_OWORD **)(*(void *)(v3 + 64) + 40);
    *uint64_t v5 = v13;
    v5[1] = v14;
    v5[2] = v15;
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v7 = v16[1];
    swift_release();
    sub_19EEBB420(&v17, (uint64_t)&v13);
    uint64_t v8 = *((void *)&v14 + 1);
    uint64_t v9 = v15;
    __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v3;
    *(void *)(v10 + 24) = v7;
    long long v11 = a1[1];
    *(_OWORD *)(v10 + 32) = *a1;
    *(_OWORD *)(v10 + 48) = v11;
    *(_OWORD *)(v10 + 64) = a1[2];
    uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v9 + 8);
    sub_19EE4E86C((uint64_t)a1);
    swift_retain();
    v12(sub_19F1B8BDC, v10, v8, v9);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
  }
}

uint64_t sub_19F1B5E1C(char a1)
{
  sub_19EEC3ED8(v1, (uint64_t)v14, &qword_1E946EC70);
  uint64_t v3 = v14[0];
  if (v16)
  {
    LOBYTE(v11[0]) = a1;
    sub_19EEBDC4C((uint64_t)v11, *(void *)(*(void *)(v14[0] + 64) + 40), &qword_1E946F690);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v5 = v14[1];
    swift_release();
    sub_19EEBB420(&v15, (uint64_t)v11);
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    char v10 = a1;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v5;
    sub_19EEBDC4C((uint64_t)&v10, v8 + 32, &qword_1E946F690);
    uint64_t v9 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    v9(sub_19F1B8274, v8, v6, v7);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  }
}

uint64_t sub_19F1B5F70(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v9 = a1[7];
  uint64_t v23 = a1[6];
  char v24 = *((unsigned char *)a1 + 64);
  uint64_t v11 = a1[9];
  uint64_t v10 = a1[10];
  uint64_t v12 = a1[11];
  sub_19EEC3ED8(v2, (uint64_t)v29, &qword_1EB3906F0);
  uint64_t v13 = v29[0];
  if (v31)
  {
    uint64_t v14 = *(void *)(*(void *)(v29[0] + 64) + 40);
    *(void *)uint64_t v14 = v4;
    *(void *)(v14 + 8) = v3;
    *(void *)(v14 + 16) = v6;
    *(void *)(v14 + 24) = v5;
    *(void *)(v14 + 32) = v8;
    *(void *)(v14 + 40) = v7;
    *(void *)(v14 + 48) = v23;
    *(void *)(v14 + 56) = v9;
    *(unsigned char *)(v14 + 64) = v24;
    *(void *)(v14 + 72) = v11;
    *(void *)(v14 + 80) = v10;
    *(void *)(v14 + 88) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v21 = v6;
    uint64_t v16 = v29[1];
    swift_release();
    sub_19EEBB420(&v30, (uint64_t)v26);
    uint64_t v22 = v27;
    uint64_t v19 = v12;
    uint64_t v17 = v28;
    uint64_t v20 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v13;
    *(void *)(v18 + 24) = v16;
    *(void *)(v18 + 32) = v4;
    *(void *)(v18 + 40) = v3;
    *(void *)(v18 + 48) = v21;
    *(void *)(v18 + 56) = v5;
    *(void *)(v18 + 64) = v8;
    *(void *)(v18 + 72) = v7;
    *(void *)(v18 + 80) = v23;
    *(void *)(v18 + 88) = v9;
    *(unsigned char *)(v18 + 96) = v24;
    *(void *)(v18 + 104) = v11;
    *(void *)(v18 + 112) = v10;
    *(void *)(v18 + 120) = v19;
    uint64_t v25 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v17 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(sub_19F1B8B60, v18, v22, v20);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v26);
  }
}

uint64_t sub_19F1B6190(void *a1)
{
  return sub_19EE9B7F4(a1, &qword_1E946DDC0, (uint64_t)&unk_1EF158918, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B61B8(uint64_t a1)
{
  return sub_19F1B4F2C(a1, (uint64_t *)&unk_1E9473890, (uint64_t)&unk_1EF158CB0, (void (*)(unsigned char *, uint64_t))sub_19EEBB420, (uint64_t)sub_19EEA7148);
}

uint64_t sub_19F1B61F4(uint64_t a1)
{
  return sub_19F1B6224(a1, (uint64_t *)&unk_1EB392E50, &qword_1EB390F10, (uint64_t)&unk_1EF158260, (uint64_t)sub_19F1B7D2C);
}

uint64_t sub_19F1B6224(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  sub_19EEC3ED8(v5, (uint64_t)v25, a3);
  uint64_t v12 = v25[0];
  if (v27)
  {
    sub_19EEC3ED8(a1, (uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    sub_19EEBDC4C((uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v12 + 64) + 40), a2);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v14 = v25[1];
    swift_release();
    sub_19EEBB420(&v26, (uint64_t)v22);
    uint64_t v16 = v23;
    uint64_t v15 = v24;
    v20[1] = __swift_project_boxed_opaque_existential_1(v22, v23);
    sub_19EEC3ED8(a1, (uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    unint64_t v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v12;
    *(void *)(v18 + 24) = v14;
    sub_19EEBDC4C((uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, a2);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8);
    swift_retain();
    v19(v21, v18, v16, v15);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  }
}

uint64_t sub_19F1B6404(void *a1)
{
  return sub_19EE9B7F4(a1, &qword_1EB390A30, (uint64_t)&unk_1EF158288, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B642C(uint64_t a1)
{
  sub_19EEC3ED8(v1, (uint64_t)v24, (uint64_t *)&unk_1E9473870);
  uint64_t v3 = v24[0];
  if (v26)
  {
    sub_19EEDFF38(a1, (uint64_t)&v19);
    uint64_t v4 = *(_OWORD **)(*(void *)(v3 + 64) + 40);
    *uint64_t v4 = v19;
    long long v6 = v22;
    long long v5 = v23;
    long long v7 = v21;
    v4[1] = v20;
    v4[2] = v7;
    v4[3] = v6;
    v4[4] = v5;
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v9 = v24[1];
    swift_release();
    sub_19EEBB420(&v25, (uint64_t)v16);
    uint64_t v10 = v17;
    uint64_t v11 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    sub_19EEDFF38(a1, (uint64_t)&v19);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v3;
    *(void *)(v12 + 24) = v9;
    long long v13 = v22;
    *(_OWORD *)(v12 + 64) = v21;
    *(_OWORD *)(v12 + 80) = v13;
    *(_OWORD *)(v12 + 96) = v23;
    long long v14 = v20;
    *(_OWORD *)(v12 + 32) = v19;
    *(_OWORD *)(v12 + 48) = v14;
    uint64_t v15 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v11 + 8);
    swift_retain();
    v15(sub_19EEA79E8, v12, v10, v11);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
}

uint64_t sub_19F1B65A4(uint64_t a1)
{
  return sub_19F1B4F2C(a1, (uint64_t *)&unk_1E9473880, (uint64_t)&unk_1EF158C60, (void (*)(unsigned char *, uint64_t))sub_19EEBB420, (uint64_t)sub_19EEA79E8);
}

uint64_t sub_19F1B65E0(void *a1)
{
  return sub_19EE9B7F4(a1, (uint64_t *)&unk_1E9470FF0, (uint64_t)&unk_1EF158B70, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B6608(uint64_t a1)
{
  return sub_19EE26590(a1, qword_1E9476580, (uint64_t)&unk_1EF158BC0, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B6630(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DiskJetPackResourceBundle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  sub_19EEC3ED8(v1, (uint64_t)v18, (uint64_t *)&unk_1E946E640);
  uint64_t v6 = v18[0];
  if (v20)
  {
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle);
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v6 + 64) + 40), (uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v8;
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle);
    long long v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    v13(sub_19EECC2E4, v12, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_19F1B6840(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JetPackAsset(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  sub_19EEC3ED8(v1, (uint64_t)v18, (uint64_t *)&unk_1E9473840);
  uint64_t v6 = v18[0];
  if (v20)
  {
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for JetPackAsset);
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v6 + 64) + 40), type metadata accessor for JetPackAsset);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for JetPackAsset);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v8;
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for JetPackAsset);
    long long v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    v13(sub_19F1B86C4, v12, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_19F1B6A50(uint64_t a1)
{
  return sub_19F1B6AC8(a1, (uint64_t *)&unk_1E9473860, (void (*)(uint64_t, long long *))sub_19EE5A0EC, (uint64_t)&unk_1EF158B20, (uint64_t)sub_19EEA79E8);
}

uint64_t sub_19F1B6A8C(uint64_t a1)
{
  return sub_19F1B6AC8(a1, (uint64_t *)&unk_1E9473850, (void (*)(uint64_t, long long *))sub_19EE5A148, (uint64_t)&unk_1EF158AD0, (uint64_t)sub_19EEA7148);
}

uint64_t sub_19F1B6AC8(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, long long *), uint64_t a4, uint64_t a5)
{
  sub_19EEC3ED8(v5, (uint64_t)v28, a2);
  uint64_t v9 = v28[0];
  if (v30)
  {
    a3(a1, &v24);
    uint64_t v10 = *(void *)(*(void *)(v9 + 64) + 40);
    long long v11 = v24;
    long long v12 = v25;
    long long v13 = v26;
    *(void *)(v10 + 48) = v27;
    *(_OWORD *)(v10 + 16) = v12;
    *(_OWORD *)(v10 + 32) = v13;
    *(_OWORD *)uint64_t v10 = v11;
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v15 = v28[1];
    swift_release();
    sub_19EEBB420(&v29, (uint64_t)v21);
    uint64_t v16 = v22;
    uint64_t v17 = v23;
    __swift_project_boxed_opaque_existential_1(v21, v22);
    a3(a1, &v24);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v9;
    *(void *)(v18 + 24) = v15;
    long long v19 = v25;
    *(_OWORD *)(v18 + 32) = v24;
    *(_OWORD *)(v18 + 48) = v19;
    *(_OWORD *)(v18 + 64) = v26;
    *(void *)(v18 + 80) = v27;
    char v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8);
    swift_retain();
    v20(a5, v18, v16, v17);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
  }
}

uint64_t sub_19F1B6C44(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for JSPackageIndex();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  sub_19EEC3ED8(v1, (uint64_t)v18, (uint64_t *)&unk_1E9476570);
  uint64_t v6 = v18[0];
  if (v20)
  {
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v6 + 64) + 40), (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v8;
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for JSPackageIndex);
    long long v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    v13(sub_19F1B8478, v12, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_19F1B6E54(void *a1)
{
  return sub_19EE9B7F4(a1, &qword_1E946E3E0, (uint64_t)&unk_1EF158648, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B6E7C(uint64_t a1)
{
  return sub_19F1B3E50(a1, &qword_1E946CBA0, (uint64_t)&unk_1EF158800, MEMORY[0x1E4FBC8A8], (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B6EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_19EEC3ED8(v4, (uint64_t)v19, &qword_1E946CDA0);
  uint64_t v8 = v19[0];
  if (v21)
  {
    sub_19EF58A68(a1);
    uint64_t v9 = *(uint64_t **)(*(void *)(v8 + 64) + 40);
    *uint64_t v9 = a1;
    v9[1] = a2;
    void v9[2] = a3;
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v11 = v19[1];
    swift_release();
    sub_19EEBB420(&v20, (uint64_t)v16);
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    long long v14 = (void *)swift_allocObject();
    long long v14[2] = v8;
    void v14[3] = v11;
    v14[4] = a1;
    v14[5] = a2;
    void v14[6] = a3;
    uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
    sub_19EF58A68(a1);
    swift_bridgeObjectRetain();
    swift_retain();
    v15(sub_19F1B7A14, v14, v12, v13);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
}

uint64_t sub_19F1B702C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_19EEC3ED8(v3, (uint64_t)v17, &qword_1E946CB98);
  uint64_t v6 = v17[0];
  if (v19)
  {
    v14[0] = a1;
    v14[1] = a2;
    sub_19EF58A68(a1);
    sub_19EEBDC4C((uint64_t)v14, *(void *)(*(void *)(v6 + 64) + 40), (uint64_t *)&unk_1E946CD90);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v17[1];
    swift_release();
    sub_19EEBB420(&v18, (uint64_t)v14);
    uint64_t v9 = v15;
    uint64_t v10 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    v13[0] = a1;
    v13[1] = a2;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v6;
    *(void *)(v11 + 24) = v8;
    sub_19EEBDC4C((uint64_t)v13, v11 + 32, (uint64_t *)&unk_1E946CD90);
    uint64_t v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    sub_19EF58A68(a1);
    swift_retain();
    v12(sub_19EEA6FB8, v11, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
}

uint64_t sub_19F1B71A8(uint64_t a1)
{
  return sub_19EE26590(a1, (uint64_t *)&unk_1E9470F90, (uint64_t)&unk_1EF1581C0, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B71D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_19EEC3ED8(v4, (uint64_t)v19, (uint64_t *)&unk_1E9470F70);
  uint64_t v8 = v19[0];
  if (v21)
  {
    uint64_t v9 = *(void **)(*(void *)(v19[0] + 64) + 40);
    *uint64_t v9 = a1;
    v9[1] = a2;
    void v9[2] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v11 = v19[1];
    swift_release();
    sub_19EEBB420(&v20, (uint64_t)v16);
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    long long v14 = (void *)swift_allocObject();
    long long v14[2] = v8;
    void v14[3] = v11;
    v14[4] = a1;
    v14[5] = a2;
    void v14[6] = a3;
    uint64_t v15 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v13 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v15(sub_19F1B7A14, v14, v12, v13);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  }
}

uint64_t sub_19F1B734C(void *a1)
{
  return sub_19EE9B7F4(a1, &qword_1EB3909E0, (uint64_t)&unk_1EF1583C8, (uint64_t)sub_19EECAE70);
}

uint64_t sub_19F1B7374(uint64_t a1)
{
  return sub_19F1B3E50(a1, &qword_1E946D6A0, (uint64_t)&unk_1EF158378, MEMORY[0x1E4FBC900], (uint64_t)sub_19EECAE24);
}

uint64_t sub_19F1B73B0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NetResponse();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  sub_19EEC3ED8(v1, (uint64_t)v18, &qword_1E946F650);
  uint64_t v6 = v18[0];
  if (v20)
  {
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for NetResponse);
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(*(void *)(v6 + 64) + 40), (uint64_t (*)(void))type metadata accessor for NetResponse);
    return swift_continuation_throwingResume();
  }
  else
  {
    uint64_t v8 = v18[1];
    swift_release();
    sub_19EEBB420(&v19, (uint64_t)v15);
    uint64_t v9 = v16;
    uint64_t v10 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    sub_19EE96E6C(a1, (uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for NetResponse);
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v6;
    *(void *)(v12 + 24) = v8;
    sub_19EE97284((uint64_t)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, (uint64_t (*)(void))type metadata accessor for NetResponse);
    uint64_t v13 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 8);
    swift_retain();
    v13(sub_19EEB3CC4, v12, v9, v10);
    swift_release();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t sub_19F1B75C0(long long *a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC80);
  uint64_t v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(v7 + 16) = 0;
  *(void *)(v6 + 16) = v7;
  *(void *)(v6 + 24) = v8;
  *(unsigned char *)(v6 + 32) = 0;
  long long v10 = *a1;
  sub_19F02B768(&v10, a2, a3);
  sub_19EE7EE30();
  return v6;
}

uint64_t sub_19F1B766C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC80);
  uint64_t v9 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v9 + 16) = v10;
  *(void *)(v9 + 24) = v11;
  *(unsigned char *)(v9 + 32) = 0;
  uint64_t v12 = *(void **)(v4 + 32);
  objc_msgSend(v12, sel_lock);
  sub_19F1259C0(v4, a3, a4, a1, a2);
  objc_msgSend(v12, sel_unlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_19EFCC194(a3, a4, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_19EE7EE30();
  return v9;
}

uint64_t dispatch thunk of MetricsEventRecorder.record(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of MetricsEventRecorder._recordAsync(_:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_19F1B77C4(long long *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946FC80);
  uint64_t v6 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(_DWORD *)(v7 + 16) = 0;
  *(void *)(v6 + 16) = v7;
  *(void *)(v6 + 24) = v8;
  *(unsigned char *)(v6 + 32) = 0;
  long long v12 = *a1;
  v9.fields._rawValue = &v12;
  v9.issues._rawValue = a2;
  v10.value._uint64_t countAndFlagsBits = a3;
  AMSInMemoryMetricsEventRecorder.record(_:on:)(v9, v10);
  sub_19EE7EE30();
  return v6;
}

uint64_t sub_19F1B7874(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_19F1B766C(*a1, a1[1], a2, a3);
}

uint64_t dispatch thunk of MetricsEventRecorder.flush()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_19F1B78C0()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19F1B78D8()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19F1B78F4()
{
  swift_release();
  if (*(void *)(v0 + 56)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  }
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19F1B793C()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B7954()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B796C()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B7988()
{
  return sub_19EEA6020((uint64_t (*)(void))type metadata accessor for MTMetricsIdentifier);
}

uint64_t sub_19F1B79A8(uint64_t (*a1)(long long *), uint64_t a2, long long *a3)
{
  uint64_t v3 = *((void *)a3 + 2);
  uint64_t v4 = *((void *)a3 + 3);
  char v5 = *((unsigned char *)a3 + 64);
  uint64_t v6 = *((void *)a3 + 11);
  long long v9 = *a3;
  uint64_t v10 = v3;
  uint64_t v11 = v4;
  long long v7 = a3[3];
  long long v12 = a3[2];
  long long v13 = v7;
  char v14 = v5;
  long long v15 = *(long long *)((char *)a3 + 72);
  uint64_t v16 = v6;
  return a1(&v9);
}

uint64_t objectdestroy_32Tm_1()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F1B7A6C()
{
  uint64_t v1 = *(uint64_t (**)(long long *))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v4 = *(_OWORD *)(v0 + 32);
  uint64_t v5 = v2;
  return v1(&v4);
}

uint64_t objectdestroy_42Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t objectdestroy_49Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F1B7B4C()
{
  uint64_t v1 = (uint64_t (*)(void *))v0[2];
  uint64_t v2 = v0[5];
  v4[0] = v0[4];
  v4[1] = v2;
  return v1(v4);
}

uint64_t sub_19F1B7B8C()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B7BA4()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for MTMetricsIdentifier() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[8];
  uint64_t v8 = sub_19F1DB57C();
  long long v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v6 + v1[9], v8);
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_19F1B7CF0()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19F1B7D10()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19F1B7D2C()
{
  return sub_19EEB22EC((uint64_t *)&unk_1EB392E50);
}

uint64_t objectdestroy_88Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = sub_19F1DB34C();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_19F1B7E6C()
{
  return objectdestroy_102Tm((uint64_t (*)(void))type metadata accessor for InMemoryJetPackResourceBundle, MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B7E98()
{
  return objectdestroy_102Tm((uint64_t (*)(void))type metadata accessor for InMemoryJetPackResourceBundle, MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B7EC4()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_19F1B7EDC()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_19F1B7EF4()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8F8]);
}

uint64_t sub_19F1B7F14()
{
  return objectdestroy_102Tm((uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19F1B7F40()
{
  return objectdestroy_102Tm((uint64_t (*)(void))type metadata accessor for DiskJetPackResourceBundle, MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19F1B7F6C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F1B7FA4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F1B7FDC()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B7FFC()
{
  uint64_t v1 = type metadata accessor for JSIntentResult();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = sub_19F1DAE7C();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v0 + v3, v5);
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 20);
  if (*(void *)(v7 + 24)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + v3 + *(int *)(v1 + 20));
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391EE8);
  v6(v7 + *(int *)(v8 + 28), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_19F1B8154()
{
  return sub_19EEA6020((uint64_t (*)(void))type metadata accessor for JSIntentResult);
}

uint64_t sub_19F1B816C()
{
  return objectdestroy_156Tm(MEMORY[0x1E4F276F0]);
}

uint64_t sub_19F1B8184()
{
  return sub_19EEA6020(MEMORY[0x1E4F276F0]);
}

uint64_t objectdestroy_159Tm()
{
  swift_release();
  sub_19EEA072C(*(void *)(v0 + 32), *(void *)(v0 + 40));
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F1B81E8()
{
  return sub_19EEA6020((uint64_t (*)(void))type metadata accessor for JSSource);
}

uint64_t sub_19F1B8208()
{
  return objectdestroy_156Tm(MEMORY[0x1E4F276F0]);
}

uint64_t sub_19F1B8238()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_19F1B8274()
{
  uint64_t v1 = *(uint64_t (**)(char *))(v0 + 16);
  char v3 = *(unsigned char *)(v0 + 32);
  return v1(&v3);
}

uint64_t sub_19F1B82B4()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B82CC()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t objectdestroy_214Tm()
{
  swift_release();
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

id sub_19F1B834C(id result, uint64_t a2, char a3, uint64_t (*a4)(id))
{
  switch(a3)
  {
    case 0:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      uint64_t result = (id)a4(result);
      break;
    case 2:
    case 3:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_19F1B83A0(id a1, uint64_t a2, char a3, void (*a4)(id))
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      a4(a1);
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t objectdestroy_224Tm()
{
  swift_release();
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F1B8458()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC898]);
}

uint64_t sub_19F1B8478()
{
  return sub_19EEA6020((uint64_t (*)(void))type metadata accessor for JSPackageIndex);
}

uint64_t objectdestroy_246Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for JSPackageIndex() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = sub_19F1DB34C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_19F1B859C()
{
  return objectdestroy_156Tm(MEMORY[0x1E4F26C48]);
}

uint64_t sub_19F1B85B4()
{
  return sub_19EEA6020(MEMORY[0x1E4F26C48]);
}

uint64_t sub_19F1B85D4()
{
  return objectdestroy_156Tm(MEMORY[0x1E4F26C48]);
}

uint64_t objectdestroy_156Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_19F1B86C4()
{
  return sub_19EEA6020(type metadata accessor for JetPackAsset);
}

uint64_t objectdestroy_267Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for JetPackAsset(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  __swift_destroy_boxed_opaque_existential_1Tm(v6);
  uint64_t v7 = v6 + v1[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v7 + *(int *)(type metadata accessor for JetPackAsset.Metadata(0) + 24);
  uint64_t v9 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t objectdestroy_274Tm_0()
{
  swift_release();
  sub_19EECDEA8(v0[4], v0[5]);
  if (v0[9]) {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 6));
  }
  return MEMORY[0x1F4186498](v0, 88, 7);
}

uint64_t sub_19F1B8890()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19F1B88A8()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_302Tm()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 72);
  return MEMORY[0x1F4186498](v0, 112, 7);
}

uint64_t sub_19F1B8924()
{
  swift_release();
  if (*(void *)(v0 + 56) >= 2uLL) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  }
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_19F1B8980(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_19F1B89DC()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_19F1B8A1C()
{
  return sub_19EEA6020((uint64_t (*)(void))type metadata accessor for PageIntentInstrumentation);
}

uint64_t objectdestroy_354Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for PageIntentInstrumentation() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    uint64_t v5 = sub_19F1DB57C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_19F1B8B60()
{
  return sub_19F1B79A8(*(uint64_t (**)(long long *))(v0 + 16), *(void *)(v0 + 24), (long long *)(v0 + 32));
}

uint64_t objectdestroy_361Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 128, 7);
}

uint64_t objectdestroy_371Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F1B8C2C()
{
  uint64_t v1 = *(uint64_t (**)(long long *))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 56);
  long long v5 = *(_OWORD *)(v0 + 32);
  uint64_t v6 = v2;
  uint64_t v7 = v3;
  long long v8 = *(_OWORD *)(v0 + 64);
  return v1(&v5);
}

uint64_t objectdestroy_388Tm()
{
  swift_release();
  sub_19EEA072C(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F1B8CCC()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t sub_19F1B8D04()
{
  return objectdestroyTm_7(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_166Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for JSSource() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = sub_19F1DB34C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_19F1B8E60(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t objectdestroy_413Tm()
{
  swift_release();
  if (*(void *)(v0 + 40) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_19F1B8F18()
{
  uint64_t v1 = *(uint64_t (**)(_OWORD *))(v0 + 16);
  long long v2 = *(_OWORD *)(v0 + 48);
  v4[0] = *(_OWORD *)(v0 + 32);
  v4[1] = v2;
  return v1(v4);
}

uint64_t sub_19F1B8F84()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t *))(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 32);
  char v5 = v2;
  return v1(&v4);
}

void *IntentDispatchOptions.init(name:dependencies:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  v3[3] = a1;
  v3[4] = a2;
  v3[2] = v4;
  return v3;
}

void *IntentDispatchOptions.__allocating_init(dispatcher:)(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EB392D00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
  sub_19EEC4154(a1, (uint64_t)v8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 64) = v3;
  uint64_t v4 = swift_allocObject();
  *(void *)(inited + 40) = v4;
  sub_19EEBB420(v8, v4 + 16);
  sub_19EE6D228();
  *(void *)&v8[0] = sub_19F1DBB7C();
  sub_19EE6C294(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v5 = *(void *)&v8[0];
  uint64_t v6 = (void *)swift_allocObject();
  v6[3] = 0xD000000000000017;
  v6[4] = 0x800000019F2760F0;
  v6[2] = v5;
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return v6;
}

uint64_t sub_19F1B9144()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void *IntentDispatchOptions.__allocating_init()()
{
  sub_19EE6D228();
  uint64_t v1 = sub_19F1DBB7C();
  sub_19EE6C294(MEMORY[0x1E4FBC860]);
  uint64_t result = (void *)swift_allocObject();
  result[3] = 0xD000000000000017;
  result[4] = 0x800000019F2760F0;
  result[2] = v1;
  return result;
}

uint64_t IntentDispatchOptions.dispatcher.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_19EF29D40(v2, a1);
  swift_bridgeObjectRelease();
  return swift_task_localValuePop();
}

uint64_t IntentDispatchOptions.withDispatcher(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94708A0);
  sub_19EEC3ED8(a1, (uint64_t)&v11, qword_1E946CC60);
  if (v12)
  {
    sub_19EEBB420(&v11, (uint64_t)v14);
    uint64_t v13 = v5;
    *((void *)&v11 + 1) = swift_allocObject();
    sub_19EEC4154((uint64_t)v14, *((void *)&v11 + 1) + 16);
    *(void *)&long long v11 = v5;
    uint64_t v6 = sub_19EEAA240((uint64_t *)&v11);
    sub_19EEABFA4((uint64_t)&v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  }
  else
  {
    sub_19EEBD664((uint64_t)&v11, qword_1E946CC60);
    uint64_t v10 = v2[2];
    swift_bridgeObjectRetain();
    DependencyDictionary.remove(dependencyFor:)(v5);
    swift_beginAccess();
    uint64_t v7 = v2[4];
    *(void *)&long long v11 = v2[3];
    *((void *)&v11 + 1) = v7;
    swift_bridgeObjectRetain();
    sub_19F1DBEFC();
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    uint64_t v8 = v11;
    *(void *)&long long v11 = v10;
    return (*(uint64_t (**)(uint64_t, void, long long *))(v4 + 96))(v8, *((void *)&v11 + 1), &v11);
  }
  return v6;
}

unint64_t IntentDispatchOptions.jsonContext.getter@<X0>(unint64_t *a1@<X8>)
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  unint64_t v5 = v1;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_19EE97A4C(v3, (uint64_t *)&v5);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  unint64_t result = v5;
  if (!v5) {
    unint64_t result = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  }
  *a1 = result;
  return result;
}

uint64_t IntentDispatchOptions.withJSONContext(_:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  v4[4] = (uint64_t)&type metadata for JSONContext;
  v4[0] = (uint64_t)&type metadata for JSONContext;
  v4[1] = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_19EEAA240(v4);
  sub_19EEABFA4((uint64_t)v4);
  return v2;
}

uint64_t IntentDispatchOptions.timeout.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  uint64_t v8 = v1;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_19EF2A094(v3, (uint64_t)&v8);
  swift_bridgeObjectRelease();
  uint64_t result = swift_task_localValuePop();
  char v5 = v10;
  char v6 = v9;
  uint64_t v7 = v8;
  if (v10) {
    uint64_t v7 = 0;
  }
  *(void *)a1 = v7;
  *(unsigned char *)(a1 + 8) = (v5 | v6) & 1;
  return result;
}

uint64_t IntentDispatchOptions.withTimeout(_:)(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = &type metadata for IntentDispatchTimeout;
  char v6 = v2;
  v5[0] = (uint64_t)&type metadata for IntentDispatchTimeout;
  v5[1] = v1;
  uint64_t v3 = sub_19EEAA240(v5);
  sub_19EEABFA4((uint64_t)v5);
  return v3;
}

uint64_t IntentDispatchOptions.pageIntentInstrumentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F5F8);
  MEMORY[0x1F4188790](v4 - 8);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v10[1] = v2;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_19EF2A3EC(v7, (uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  uint64_t v8 = type metadata accessor for PageIntentInstrumentation();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8) != 1) {
    return sub_19EEDC5D4((uint64_t)v6, a1);
  }
  swift_storeEnumTagMultiPayload();
  return sub_19EEBD664((uint64_t)v6, &qword_1E946F5F8);
}

uint64_t IntentDispatchOptions.withPageIntentInstrumentation(_:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F5F8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EE958FC(a1, (uint64_t)v4);
  uint64_t v5 = type metadata accessor for PageIntentInstrumentation();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_19EEDD2F0((uint64_t)v4);
  sub_19EEBD664((uint64_t)v4, &qword_1E946F5F8);
  uint64_t v6 = sub_19EE2578C((uint64_t)&type metadata for IntentDispatchOptions.BadOrderingCanary);
  swift_release();
  return v6;
}

uint64_t IntentDispatchOptions.pageRenderMetrics.getter()
{
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_19EE17DDC(v0);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  return v1;
}

uint64_t IntentDispatchOptions.withInstrumentationForSecondaryPageData()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F5F8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v16[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PageIntentInstrumentation();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1E946FD30 != -1) {
    swift_once();
  }
  v16[0] = v0;
  type metadata accessor for BaseObjectGraph();
  swift_retain();
  swift_task_localValuePush();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_19EE17DDC(v8);
  swift_bridgeObjectRelease();
  swift_task_localValuePop();
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 32);
    uint64_t v11 = v10 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v10 + 16);
    uint64_t v12 = (os_unfair_lock_s *)(v10 + ((*(unsigned int *)(*(void *)v10 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v12);
    sub_19EE185A0(v11, (uint64_t)v7);
    os_unfair_lock_unlock(v12);
    swift_release();
    swift_storeEnumTagMultiPayload();
    sub_19EE958FC((uint64_t)v7, (uint64_t)v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    sub_19EEDD2F0((uint64_t)v3);
    sub_19EEBD664((uint64_t)v3, &qword_1E946F5F8);
    uint64_t v13 = sub_19EE2578C((uint64_t)&type metadata for IntentDispatchOptions.BadOrderingCanary);
    swift_release();
    swift_release();
    sub_19EE27C38((uint64_t)v7);
  }
  else
  {
    uint64_t v18 = &type metadata for IntentDispatchOptions.BadOrderingCanary;
    void v16[2] = 41;
    char v17 = 2;
    v16[0] = (uint64_t)&type metadata for IntentDispatchOptions.BadOrderingCanary;
    v16[1] = (uint64_t)"withInstrumentationForSecondaryPageData()";
    uint64_t v13 = sub_19EEAA240(v16);
    sub_19EEABFA4((uint64_t)v16);
  }
  return v13;
}

uint64_t IntentDispatchOptions.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t getEnumTagSinglePayload for IntentDispatchOptions.BadOrderingCanary(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IntentDispatchOptions.BadOrderingCanary(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

uint64_t _CodeByKind_KeyedBy.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*_CodeByKind_KeyedBy.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _CodeByKind_KeyedBy.description.getter()
{
  return 0;
}

uint64_t _CodeByKind_KeyedBy.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_19EEC4154(a1, (uint64_t)v15);
  type metadata accessor for CodeByKind();
  swift_getWitnessTable();
  uint64_t v10 = sub_19F1DBC4C();
  if (v6)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else
  {
    v14[1] = a5;
    MEMORY[0x1F4188790](v10);
    long long v14[2] = v11;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v16 = v14;
    MEMORY[0x1F4188790](KeyPath);
    swift_getAssociatedTypeWitness();
    a6 = sub_19F1DBBEC();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    swift_release();
  }
  return a6;
}

uint64_t sub_19F1B9FE0()
{
  return swift_getAtKeyPath();
}

uint64_t _CodeByKind_KeyedBy.encode(to:)()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F1BA140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, double))(v8 + 16))((char *)&v10 - v6, a1, v5);
  return CodeByKind.init(wrappedValue:)((uint64_t)v7, a2);
}

uint64_t sub_19F1BA23C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1BA140(a1, a2);
}

uint64_t sub_19F1BA260()
{
  return _CodeByKind_KeyedBy.description.getter();
}

uint64_t sub_19F1BA274@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _CodeByKind_KeyedBy.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a2[6]);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_19F1BA2B0()
{
  return _CodeByKind_KeyedBy.encode(to:)();
}

uint64_t _CodeByKind_KeyedBy<>.init(_partiallyFrom:)(uint64_t a1)
{
  sub_19EEC4154(a1, (uint64_t)v6);
  uint64_t v2 = type metadata accessor for CodeByKind();
  uint64_t WitnessTable = swift_getWitnessTable();
  Dictionary<>.init(_partiallyFrom:)(v6, v2, WitnessTable);
  swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_19F1DBBEC();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  swift_release();
  return v4;
}

uint64_t sub_19F1BA3FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _CodeByKind_KeyedBy<>.init(_partiallyFrom:)(a1);
  *a2 = result;
  return result;
}

uint64_t _CodeByKind_KeyedBy<>._partiallyEncode(to:)(void *a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v2 = type metadata accessor for CodeByKind();
  uint64_t v3 = sub_19F1DBBEC();
  uint64_t WitnessTable = swift_getWitnessTable();
  Dictionary<>._partiallyEncode(to:)(a1, v3, v2, WitnessTable);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F1BA524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, double))(v8 + 16))((char *)&v10 - v6, a1, v5);
  return CodeByKind.init(wrappedValue:)((uint64_t)v7, a2);
}

uint64_t sub_19F1BA624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1BA524(a1, a2);
}

uint64_t sub_19F1BA640(void *a1)
{
  return _CodeByKind_KeyedBy<>._partiallyEncode(to:)(a1);
}

uint64_t static _CodeByKind_KeyedBy<>.== infix(_:_:)()
{
  swift_getAssociatedTypeWitness();
  return sub_19F1DBC3C();
}

uint64_t sub_19F1BA6E0()
{
  return static _CodeByKind_KeyedBy<>.== infix(_:_:)() & 1;
}

uint64_t _CodeByKind_KeyedBy<>.hash(into:)()
{
  swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  sub_19F1DBC2C();
  return swift_bridgeObjectRelease();
}

uint64_t _CodeByKind_KeyedBy<>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1BA840()
{
  return _CodeByKind_KeyedBy<>.hashValue.getter();
}

uint64_t sub_19F1BA858()
{
  return _CodeByKind_KeyedBy<>.hash(into:)();
}

uint64_t sub_19F1BA890()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1BA8EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F1BA934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t type metadata accessor for _CodeByKind_KeyedBy()
{
  return swift_getGenericMetadata();
}

uint64_t sub_19F1BA954(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CAB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1BAD00();
  sub_19F1DD8FC();
  char v13 = 0;
  sub_19F1DD26C();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
    sub_19F18C350((unint64_t *)&qword_1E946CA98);
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_19F1BAB10()
{
  unint64_t result = sub_19EE8F204(MEMORY[0x1E4FBC860]);
  qword_1E94988B0 = 0xD000000000000011;
  *(void *)algn_1E94988B8 = 0x800000019F2761D0;
  qword_1E94988C0 = result;
  return result;
}

ValueMetadata *type metadata accessor for SentryRequest()
{
  return &type metadata for SentryRequest;
}

uint64_t sub_19F1BAB68()
{
  if (*v0) {
    return 0x73726564616568;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_19F1BAB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F1BB1A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F1BABC4(uint64_t a1)
{
  unint64_t v2 = sub_19F1BAD00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F1BAC00(uint64_t a1)
{
  unint64_t v2 = sub_19F1BAD00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_19F1BAC3C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_19F1BAD54(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_19F1BAC6C(void *a1)
{
  return sub_19F1BA954(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_19F1BAC8C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_19F1DD44C() & 1) == 0) {
    return 0;
  }
  return sub_19EF69C80(v2, v3);
}

unint64_t sub_19F1BAD00()
{
  unint64_t result = qword_1E946C9C0;
  if (!qword_1E946C9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9C0);
  }
  return result;
}

uint64_t sub_19F1BAD54(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476608);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1BAD00();
  sub_19F1DD8AC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    v9[31] = 0;
    uint64_t v7 = sub_19F1DD18C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391070);
    v9[15] = 1;
    sub_19F18C350(&qword_1E94762D0);
    swift_bridgeObjectRetain();
    sub_19F1DD1BC();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unsigned char *storeEnumTagSinglePayload for SentryRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1BB068);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SentryRequest.CodingKeys()
{
  return &type metadata for SentryRequest.CodingKeys;
}

unint64_t sub_19F1BB0A4()
{
  unint64_t result = qword_1E9476610;
  if (!qword_1E9476610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476610);
  }
  return result;
}

unint64_t sub_19F1BB0FC()
{
  unint64_t result = qword_1E946C9D0;
  if (!qword_1E946C9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9D0);
  }
  return result;
}

unint64_t sub_19F1BB154()
{
  unint64_t result = qword_1E946C9C8;
  if (!qword_1E946C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946C9C8);
  }
  return result;
}

uint64_t sub_19F1BB1A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726564616568 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

id FamilyInfoLookupBagContract.__allocating_init(_:)(uint64_t *a1)
{
  int v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *a1;
  *(void *)&v3[OBJC_IVAR____TtC9JetEngine27FamilyInfoLookupBagContract_backing] = v4;
  *(void *)&v3[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing] = v4;
  uint64_t v5 = (objc_class *)type metadata accessor for MescalBagContract();
  char v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = v4;
  v10.receiver = v6;
  v10.super_class = v5;
  swift_unknownObjectRetain_n();
  uint64_t v7 = v3;
  *(void *)&v7[OBJC_IVAR____TtC9JetEngine14URLBagContract_mescalContract] = objc_msgSendSuper2(&v10, sel_init);

  v9.receiver = v7;
  v9.super_class = (Class)type metadata accessor for URLBagContract();
  return objc_msgSendSuper2(&v9, sel_init);
}

id FamilyInfoLookupBagContract.init(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *(void *)&v1[OBJC_IVAR____TtC9JetEngine27FamilyInfoLookupBagContract_backing] = *a1;
  *(void *)&v1[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing] = v2;
  int v3 = (objc_class *)type metadata accessor for MescalBagContract();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = v2;
  v8.receiver = v4;
  v8.super_class = v3;
  swift_unknownObjectRetain_n();
  uint64_t v5 = v1;
  *(void *)&v5[OBJC_IVAR____TtC9JetEngine14URLBagContract_mescalContract] = objc_msgSendSuper2(&v8, sel_init);

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for URLBagContract();
  return objc_msgSendSuper2(&v7, sel_init);
}

id sub_19F1BB4AC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9JetEngine27FamilyInfoLookupBagContract_backing);
  uint64_t v2 = (void *)sub_19F1DBD4C();
  id v3 = objc_msgSend(v1, sel_URLForKey_, v2);

  return v3;
}

uint64_t sub_19F1BB520()
{
  return swift_unknownObjectRelease();
}

id FamilyInfoLookupBagContract.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FamilyInfoLookupBagContract();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for FamilyInfoLookupBagContract()
{
  return self;
}

uint64_t method lookup function for FamilyInfoLookupBagContract(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FamilyInfoLookupBagContract);
}

uint64_t dispatch thunk of FamilyInfoLookupBagContract.familyInfoURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xE0))();
}

uint64_t sub_19F1BB5E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_19F1DBA0C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19EEBDC10(0, (unint64_t *)&qword_1EB393140);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4FBCB50], v10);
  char v14 = (void *)sub_19F1DC8BC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  long long v15 = (void *)swift_allocObject();
  v15[2] = a3;
  void v15[3] = a4;
  v15[4] = a5;
  v15[5] = a1;
  v15[6] = a2;
  v21[0] = MEMORY[0x1E4FBC860];
  char v22 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9472C08);
  uint64_t v16 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + 16) = 0;
  *(void *)(v16 + 16) = v17;
  sub_19F02C988((uint64_t)v21, v16 + 24);
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = sub_19F02C958;
  void v18[3] = v15;
  void v18[4] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v19 = a2;
  swift_retain();
  swift_retain();
  OS_dispatch_queue.schedule(task:)((uint64_t)sub_19F02CA30, (uint64_t)v18);

  swift_release();
  swift_release();
  return v16;
}

uint64_t sub_19F1BB820@<X0>(void (*a1)(_OWORD *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_19EEC3ED8(v2, (uint64_t)v8, &qword_1E9476690);
  if (v10)
  {
    *(void *)a2 = *(void *)&v8[0];
    *(unsigned char *)(a2 + 40) = 1;
  }
  else
  {
    v6[0] = v8[0];
    v6[1] = v8[1];
    uint64_t v7 = v9;
    a1(v6);
    uint64_t result = sub_19EEC3418((uint64_t)v6);
    *(unsigned char *)(a2 + 40) = 0;
  }
  return result;
}

uint64_t sub_19F1BB8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v47 = a2;
  uint64_t v48 = a4;
  uint64_t v46 = a5;
  v51[4] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_19F1DB76C();
  MEMORY[0x1F4188790](v6 - 8);
  v42[1] = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_19F1DB78C();
  uint64_t v43 = *(void *)(v8 - 8);
  uint64_t v44 = v8;
  MEMORY[0x1F4188790](v8);
  v42[0] = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_19F1DB34C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  long long v49 = (char *)v42 - v18;
  uint64_t v19 = sub_19F1DB01C();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  char v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DB00C();
  sub_19F1DAFFC();
  swift_bridgeObjectRetain();
  MEMORY[0x19F3C5280](v47, a3);
  sub_19F1DAFBC();
  sub_19F1DAFAC();
  sub_19F1DAF4C();
  sub_19F1DAF6C();
  uint64_t v23 = v14;
  long long v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v25 = v13;
  if (v24(v12, 1, v13) == 1)
  {
    sub_19EEBD664((uint64_t)v12, (uint64_t *)&unk_1EB392E50);
    sub_19F1DB75C();
    sub_19EFAA108(MEMORY[0x1E4FBC860]);
    sub_19F1BD1D8((unint64_t *)&qword_1E9474DF0, MEMORY[0x1E4F27DE0]);
    uint64_t v26 = v42[0];
    uint64_t v27 = v44;
    sub_19F1DB17C();
    sub_19F1DB77C();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v26, v27);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  else
  {
    uint64_t v48 = v19;
    uint64_t v29 = v23;
    char v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    char v31 = v49;
    v30(v49, v12, v25);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v16, v31, v25);
    uint64_t v32 = v46;
    sub_19F1DAC9C();
    sub_19F1DAC2C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476698);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EAD0;
    *(void *)(inited + 32) = 0x73746E657665;
    *(void *)(inited + 40) = 0xE600000000000000;
    *(void *)(inited + 48) = sub_19F1BCDA0(v45);
    unint64_t v34 = sub_19EFB5878(inited);
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94766A0);
    v51[3] = v35;
    v51[0] = v34;
    sub_19F1DACCC();
    uint64_t v36 = self;
    id v50 = (id)*__swift_project_boxed_opaque_existential_1(v51, v35);
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_19F1DD62C();
    id v50 = 0;
    id v38 = objc_msgSend(v36, sel_dataWithJSONObject_options_error_, v37, 0, &v50);
    swift_unknownObjectRelease();
    id v39 = v50;
    if (v38)
    {
      sub_19F1DB40C();

      sub_19F1DACBC();
    }
    else
    {
      uint64_t v40 = v39;
      sub_19F1DB19C();

      swift_willThrow();
      uint64_t v41 = sub_19F1DACDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v32, v41);
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v49, v25);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v48);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v51);
  }
}

void sub_19F1BBF28(uint64_t a1, uint64_t a2, void (*a3)(void *), void (*a4)(void *), uint64_t a5, uint64_t a6, void *a7, uint64_t a8, void *a9)
{
  uint64_t v36 = a8;
  uint64_t v37 = a6;
  id v38 = a7;
  id v39 = a4;
  uint64_t v40 = a3;
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v10 = sub_19F1DABEC();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v11 = sub_19F1DABFC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_19F1DACDC();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v34 - v20;
  if (sub_19EE5698C())
  {
    char v22 = v39;
    sub_19F1BB8C8(v36, a5, v37, (uint64_t)v38, (uint64_t)v21);
    id v38 = a9;
    long long v24 = (void *)sub_19F1DAC5C();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    unint64_t v25 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v26 = (v17 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v28 + v25, v18, v15);
    uint64_t v29 = (void *)(v28 + v26);
    uint64_t v30 = v35;
    *uint64_t v29 = v34;
    v29[1] = v30;
    char v31 = (void (**)(void *))(v28 + v27);
    *char v31 = v40;
    v31[1] = v22;
    aBlock[4] = sub_19F1BD0AC;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_19EFA316C;
    aBlock[3] = &block_descriptor_40;
    uint64_t v32 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id v33 = objc_msgSend(v38, sel_dataTaskWithRequest_completionHandler_, v24, v32);
    _Block_release(v32);

    objc_msgSend(v33, sel_resume);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
  }
  else
  {
    sub_19F1DABCC();
    sub_19EFAA108(MEMORY[0x1E4FBC860]);
    sub_19F1BD1D8((unint64_t *)&qword_1E9472FE0, MEMORY[0x1E4F26C20]);
    sub_19F1DB17C();
    uint64_t v23 = (void *)sub_19F1DAB9C();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    v40(v23);
  }
}

uint64_t sub_19F1BC338(uint64_t a1, unint64_t a2, int a3, id a4, int a5, void (*a6)(_OWORD *), int a7, void (*a8)(void), uint64_t a9)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  if (a2 >> 60 != 15)
  {
    sub_19EEE0560(a1, a2);
    if (qword_1E946FBB8 != -1) {
      swift_once();
    }
    if (sub_19EE7C7FC(qword_1E9498B08, unk_1E9498B10, a1, a2))
    {
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C9E8]), sel_init);
      uint64_t v15 = &qword_1EB392CF0;
    }
    else
    {
      if (qword_1E946FBD0 != -1) {
        swift_once();
      }
      if ((sub_19EE7C7FC(qword_1E9498B18, unk_1E9498B20, a1, a2) & 1) == 0)
      {
        uint64_t v18 = self;
        uint64_t v19 = (void *)sub_19F1DB3EC();
        *(void *)&v26[0] = 0;
        id v20 = objc_msgSend(v18, sel_JSONObjectWithData_options_error_, v19, 4, v26);

        id v21 = *(id *)&v26[0];
        if (!v20)
        {
          char v22 = v21;
          uint64_t v23 = sub_19F1DB19C();

          swift_willThrow();
          id v11 = (id)sub_19EED5BFC(a1, a2);
          *(void *)&long long v29 = v23;
          char v32 = 1;
          goto LABEL_14;
        }
        sub_19F1DCBEC();
        swift_unknownObjectRelease();
        goto LABEL_13;
      }
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1C978]), sel_init);
      uint64_t v15 = (unint64_t *)&qword_1EB391C00;
    }
    uint64_t v30 = (ValueMetadata *)sub_19EEBDC10(0, v15);
    *(void *)&long long v29 = v14;
LABEL_13:
    sub_19EEBDC00(&v29, v33);
    uint64_t v30 = &type metadata for FoundationValue;
    char v31 = &off_1EF13D8F8;
    *(void *)&long long v29 = swift_allocObject();
    sub_19EEBDBA4((uint64_t)v33, v29 + 16);
    sub_19EED5BFC(a1, a2);
    id v11 = (id)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
    char v32 = 0;
    goto LABEL_14;
  }
  if (!a4)
  {
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
    return result;
  }
  *(void *)&long long v29 = a4;
  char v32 = 1;
  id v11 = a4;
LABEL_14:
  MEMORY[0x1F4188790](v11);
  sub_19F1BB820((void (*)(_OWORD *))sub_19F1BD184, (uint64_t)v33);
  sub_19EEBD664((uint64_t)&v29, &qword_1E9476690);
  sub_19EEC3ED8((uint64_t)v33, (uint64_t)v26, &qword_1E9476690);
  if (v28)
  {
    uint64_t v16 = *(void **)&v26[0];
    a8(*(void *)&v26[0]);
  }
  else
  {
    v24[0] = v26[0];
    v24[1] = v26[1];
    uint64_t v25 = v27;
    a6(v24);
    sub_19EEC3418((uint64_t)v24);
  }
  return sub_19EEBD664((uint64_t)v33, &qword_1E9476690);
}

uint64_t sub_19F1BC720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_19F1DB76C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v35 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_19F1DB78C();
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v9 - 8);
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a1;
  JSONObject.subscript.getter(27503, 0xE200000000000000, (uint64_t)v42);
  sub_19EEC3ED8((uint64_t)v42, (uint64_t)&v39, (uint64_t *)&unk_1E946FD20);
  uint64_t v12 = v40;
  if (v40)
  {
    uint64_t v13 = v41;
    __swift_project_boxed_opaque_existential_1(&v39, v40);
    char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 88))(v12, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
    sub_19EEC3418((uint64_t)v42);
    if (v14 != 2 && (v14 & 1) != 0) {
      return sub_19EEC355C(v37, a2);
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v39, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v42);
  }
  unint64_t v44 = MEMORY[0x1E4FBC868];
  uint64_t v16 = sub_19F1DBD7C();
  uint64_t v18 = v17;
  sub_19F1DACAC();
  uint64_t v19 = sub_19F1DB34C();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
  {
    sub_19EEBD664((uint64_t)v11, (uint64_t *)&unk_1EB392E50);
    sub_19EF6B168(v16, v18, v42);
    sub_19EEBD664((uint64_t)v42, &qword_1EB393260);
  }
  else
  {
    uint64_t v43 = v19;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v42);
    (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_2Tm, v11, v19);
    sub_19EEBDC00(v42, &v39);
    unint64_t v22 = v44;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = v22;
    unint64_t v44 = 0x8000000000000000;
    sub_19EE7DA20(&v39, v16, v18, isUniquelyReferenced_nonNull_native);
    unint64_t v44 = v38;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_19F1DBD7C();
  uint64_t v26 = v25;
  JSONObject.subscript.getter(0x726F727265, 0xE500000000000000, (uint64_t)v42);
  sub_19EEC3ED8((uint64_t)v42, (uint64_t)&v39, (uint64_t *)&unk_1E946FD20);
  uint64_t v27 = v40;
  if (!v40)
  {
    sub_19EEBD664((uint64_t)&v39, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v42);
    goto LABEL_13;
  }
  uint64_t v28 = v41;
  __swift_project_boxed_opaque_existential_1(&v39, v40);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
  uint64_t v31 = v30;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v39);
  sub_19EEC3418((uint64_t)v42);
  if (!v31)
  {
LABEL_13:
    sub_19EF6B168(v24, v26, v42);
    sub_19EEBD664((uint64_t)v42, &qword_1EB393260);
    goto LABEL_14;
  }
  uint64_t v40 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v39 = v29;
  *((void *)&v39 + 1) = v31;
  sub_19EEBDC00(&v39, v42);
  unint64_t v32 = v44;
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v38 = v32;
  unint64_t v44 = 0x8000000000000000;
  sub_19EE7DA20(v42, v24, v26, v33);
  unint64_t v44 = v38;
  swift_bridgeObjectRelease();
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v34 = v36;
  sub_19F1DB72C();
  sub_19F1BD1D8((unint64_t *)&qword_1E9474DF0, MEMORY[0x1E4F27DE0]);
  sub_19F1DB17C();
  sub_19F1DB77C();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v6);
  return swift_willThrow();
}

uint64_t sub_19F1BCC48()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1BCCAC()
{
  return sub_19F1DD73C();
}

uint64_t sub_19F1BCCE4()
{
  return sub_19F1DD78C();
}

BOOL sub_19F1BCD44(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return v2 == v3;
  }
  char v5 = sub_19F1DD44C();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_19F1BCDA0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E94766A8);
  uint64_t result = sub_19F1DD04C();
  int64_t v3 = 0;
  uint64_t v30 = (void *)result;
  uint64_t v31 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v27 = v5;
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v29 = result + 64;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v35 = v3;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v31 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_19EEC4154(*(void *)(v31 + 56) + 40 * i, (uint64_t)v32);
    uint64_t v19 = v33;
    uint64_t v20 = v34;
    __swift_project_boxed_opaque_existential_1(v32, v33);
    id v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 16);
    swift_bridgeObjectRetain();
    uint64_t v22 = v21(v19, v20);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    uint64_t result = (uint64_t)v30;
    *(void *)(v29 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v23 = (void *)(v30[6] + 16 * i);
    *uint64_t v23 = v17;
    v23[1] = v18;
    *(void *)(v30[7] + 8 * i) = v22;
    uint64_t v24 = v30[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    void v30[2] = v26;
    int64_t v3 = v35;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_24;
    }
    if (v12 >= v28) {
      return result;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v12);
    int64_t v14 = v3 + 1;
    if (!v13)
    {
      int64_t v14 = v3 + 2;
      if (v3 + 2 >= v28) {
        return result;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v3 + 3;
        if (v3 + 3 >= v28) {
          return result;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v13 - 1) & v13;
    int64_t v35 = v14;
  }
  uint64_t v15 = v3 + 4;
  if (v3 + 4 >= v28) {
    return result;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v3 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v28) {
      return result;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_19F1BCFE8()
{
  uint64_t v1 = sub_19F1DACDC();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, v6 + 16, v5);
}

uint64_t sub_19F1BD0AC(uint64_t a1, unint64_t a2, int a3, void *a4)
{
  uint64_t v9 = *(void *)(sub_19F1DACDC() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_19F1BC338(a1, a2, a3, a4, (int)v4 + (int)v10, *(void (**)(_OWORD *))(v4 + v11), *(void *)(v4 + v11 + 8), *(void (**)(void))(v4 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_19F1BD184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1BC720(a1, a2);
}

uint64_t sub_19F1BD1A0()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_19F1BD1D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19F1BD220()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F1BD268()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void *assignWithCopy for MetricsInspectorHTTPServer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for MetricsInspectorHTTPServer(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for MetricsInspectorHTTPServer()
{
  return &type metadata for MetricsInspectorHTTPServer;
}

unint64_t sub_19F1BD354()
{
  unint64_t result = qword_1E94766B0;
  if (!qword_1E94766B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94766B0);
  }
  return result;
}

uint64_t sub_19F1BD3A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946F890);
  uint64_t v1 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  uint64_t v3 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = 0;
  v6[4] = sub_19F1BD57C;
  void v6[5] = v1;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_19EF7D74C;
  v6[3] = &block_descriptor_41;
  uint64_t v4 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_createSnapshotWithCompletion_, v4);
  _Block_release(v4);
  return v1;
}

void sub_19F1BD4B4(void *a1, id a2, uint64_t a3)
{
  if (a1)
  {
    id v7 = a1;
    sub_19F1BD584(v7, a3);
    id v4 = v7;
LABEL_4:

    return;
  }
  if (a2)
  {
    id v6 = a2;
    sub_19F081D18(a2);
    id v4 = a2;
    goto LABEL_4;
  }
  sub_19F1DCFCC();
  __break(1u);
}

void sub_19F1BD57C(void *a1, void *a2)
{
  sub_19F1BD4B4(a1, a2, v2);
}

void sub_19F1BD584(void *a1, uint64_t a2)
{
  id v4 = (os_unfair_lock_s *)(*(void *)(a2 + 16) + 16);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  if (*(unsigned char *)(a2 + 32) == 3)
  {
    os_unfair_lock_unlock(v4);
  }
  else if (*(unsigned char *)(a2 + 32))
  {
    sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v5 = *(void **)(a2 + 24);
    *(void *)(a2 + 24) = a1;
    *(unsigned char *)(a2 + 32) = 1;
    sub_19F1BD7D4(v5, 0);
    id v15 = a1;
    sub_19F1BD824(v5, 0);
    os_unfair_lock_unlock(v4);
    uint64_t v6 = v5[2];
    if (v6)
    {
      uint64_t v7 = (uint64_t)(v5 + 4);
      do
      {
        sub_19F1BD874(v7, (uint64_t)v22);
        sub_19F1BD874((uint64_t)v22, (uint64_t)v19);
        uint64_t v8 = v19[0];
        if (v21)
        {
          **(void **)(*(void *)(v19[0] + 64) + 40) = v15;
          swift_unknownObjectRetain();
          swift_continuation_throwingResume();
        }
        else
        {
          uint64_t v9 = v19[1];
          swift_release();
          sub_19EEBB420(&v20, (uint64_t)v16);
          uint64_t v11 = v17;
          uint64_t v10 = v18;
          __swift_project_boxed_opaque_existential_1(v16, v17);
          int64_t v12 = (void *)swift_allocObject();
          v12[2] = v8;
          void v12[3] = v9;
          v12[4] = v15;
          unint64_t v13 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v10 + 8);
          id v14 = v15;
          swift_retain();
          v13(sub_19EECAE64, v12, v11, v10);
          swift_release();
          swift_release();
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        }
        sub_19F1BD8DC((uint64_t)v22);
        v7 += 80;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
  }
}

id sub_19F1BD7D4(id result, char a2)
{
  switch(a2)
  {
    case 0:
      unint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      unint64_t result = (id)swift_unknownObjectRetain();
      break;
    case 2:
    case 3:
      unint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

void sub_19F1BD824(id a1, char a2)
{
  switch(a2)
  {
    case 0:
      swift_bridgeObjectRelease();
      break;
    case 1:
      swift_unknownObjectRelease();
      break;
    case 2:
    case 3:

      break;
    default:
      return;
  }
}

uint64_t sub_19F1BD874(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D6A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_19F1BD8DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946D6A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_19F1BD93C()
{
  swift_release();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t static JetpackSignerError.== infix(_:_:)()
{
  return 1;
}

uint64_t JetpackSignerError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JetpackSignerError.hashValue.getter()
{
  return sub_19F1DD78C();
}

unint64_t sub_19F1BD9F8()
{
  unint64_t result = qword_1E94766B8;
  if (!qword_1E94766B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94766B8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JetpackSignerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x19F1BDAE8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for JetpackSignerError()
{
  return &type metadata for JetpackSignerError;
}

ValueMetadata *type metadata accessor for JetpackSigner()
{
  return &type metadata for JetpackSigner;
}

uint64_t sub_19F1BDB30@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  if (result >= 9)
  {
    unint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    *a2 = byte_19F2661EA[(int)result];
  }
  return result;
}

BOOL static JSTypedArray.ElementType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JSTypedArray.ElementType.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t JSTypedArray.ElementType.hashValue.getter()
{
  return sub_19F1DD78C();
}

JetEngine::JSTypedArray_optional __swiftcall JSTypedArray.init(_:)(JSValue a1)
{
  Class isa = a1.super.isa;
  int v3 = v1;
  id TypedArrayType = [(objc_class *)a1.super.isa context];
  if (TypedArrayType)
  {
    uint64_t v6 = TypedArrayType;
    uint64_t v7 = (const OpaqueJSContext *)objc_msgSend(TypedArrayType, sel_JSGlobalContextRef);

    id TypedArrayType = (id)JSValueGetTypedArrayType(v7, (JSValueRef)[(objc_class *)isa JSValueRef], 0);
    if (TypedArrayType == 9 || TypedArrayType == 10)
    {

      Class isa = 0;
    }
    *int v3 = isa;
  }
  else
  {
    __break(1u);
  }
  result.value.value.super.Class isa = (Class)TypedArrayType;
  result.is_nil = v5;
  return result;
}

JetEngine::JSTypedArray __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSTypedArray.init(count:elementType:in:)(Swift::Int count, JetEngine::JSTypedArray::ElementType elementType, JSContext in)
{
  Swift::Bool v5 = v3;
  v18[1] = *(JSValueRef *)MEMORY[0x1E4F143B8];
  uint64_t v6 = *(char *)elementType;
  v18[0] = 0;
  JSObjectRef TypedArray = JSObjectMakeTypedArray((JSContextRef)[(objc_class *)in.super.isa JSGlobalContextRef], (JSTypedArrayType)dword_19F266240[v6], count, v18);
  if (TypedArray)
  {
    result.value.super.Class isa = (Class)objc_msgSend(self, sel_valueWithJSValueRef_inContext_, TypedArray, in.super.isa);
    if (result.value.super.isa)
    {
      Class isa = result.value.super.isa;

      *Swift::Bool v5 = isa;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
  JSValueRef v10 = v18[0];
  sub_19EF600C0();
  swift_allocError();
  uint64_t v12 = v11;
  result.value.super.Class isa = (Class)objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v10, in.super.isa);
  if (!result.value.super.isa)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  Class v13 = result.value.super.isa;
  id v14 = (void (**)(const void *, Class, objc_class *))[(objc_class *)in.super.isa exceptionHandler];
  if (v14)
  {
    id v15 = v14;
    uint64_t v16 = v14[2];
    uint64_t v17 = v13;
    v16(v15, in.super.isa, v17);
    _Block_release(v15);
  }
  JSError.init(_:)(v13, v12);
  swift_willThrow();

  return result;
}

void JSTypedArray.init(bytesNoCopy:count:deallocator:elementType:in:)(void *a1@<X0>, size_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, void *a6@<X5>, void *a7@<X8>)
{
  v27[1] = *(JSValueRef *)MEMORY[0x1E4F143B8];
  uint64_t v13 = *a5;
  type metadata accessor for JSBytesDeallocatorHolder();
  id v14 = (void *)swift_allocObject();
  long long v14[2] = a3;
  void v14[3] = a4;
  v27[0] = 0;
  swift_retain();
  JSObjectRef TypedArrayWithBytesNoCopy = JSObjectMakeTypedArrayWithBytesNoCopy((JSContextRef)objc_msgSend(a6, sel_JSGlobalContextRef), (JSTypedArrayType)dword_19F266240[v13], a1, a2, (JSTypedArrayBytesDeallocator)sub_19F0D89F8, v14, v27);
  if (TypedArrayWithBytesNoCopy)
  {
    id v16 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, TypedArrayWithBytesNoCopy, a6);
    if (v16)
    {
      id v17 = v16;
      swift_release();

      *a7 = v17;
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
  swift_release();
  JSValueRef v18 = v27[0];
  sub_19EF600C0();
  swift_allocError();
  uint64_t v20 = v19;
  id v21 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v18, a6);
  if (!v21)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v22 = v21;
  uint64_t v23 = (void (**)(const void *, void *, id))objc_msgSend(a6, sel_exceptionHandler);
  if (v23)
  {
    uint64_t v24 = v23;
    BOOL v25 = v23[2];
    id v26 = v22;
    v25(v24, a6, v26);
    _Block_release(v24);
  }
  JSError.init(_:)(v22, v20);
  swift_willThrow();
  swift_release();
}

uint64_t JSTypedArray.init(data:elementType:in:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  char v6 = *a3;
  size_t v11 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_10:
        __break(1u);
        JUMPOUT(0x19F1BE1B8);
      }
      size_t v11 = HIDWORD(a1) - (int)a1;
LABEL_6:
      id v14 = (void *)swift_slowAlloc();
      sub_19F1DB46C();
      char v16 = v6;
      JSTypedArray.init(bytesNoCopy:count:deallocator:elementType:in:)(v14, v11, (uint64_t)sub_19F1764E4, 0, &v16, a4, &v17);
      uint64_t result = sub_19EEA072C(a1, a2);
      if (!v5) {
        *a5 = v17;
      }
      return result;
    case 2uLL:
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      size_t v11 = v12 - v13;
      if (!__OFSUB__(v12, v13)) {
        goto LABEL_6;
      }
      goto LABEL_10;
    case 3uLL:
      goto LABEL_6;
    default:
      size_t v11 = BYTE6(a2);
      goto LABEL_6;
  }
}

JetEngine::JSTypedArray __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> JSTypedArray.init(buffer:elementType:in:)(JetEngine::JSArrayBuffer buffer, JetEngine::JSTypedArray::ElementType elementType, JSContext in)
{
  uint64_t v5 = v3;
  v21[1] = *(JSValueRef *)MEMORY[0x1E4F143B8];
  char v6 = *(void **)buffer.value.super.isa;
  uint64_t v7 = *(char *)elementType;
  v21[0] = 0;
  uint64_t v8 = (const OpaqueJSContext *)[(objc_class *)in.super.isa JSGlobalContextRef];
  LODWORD(v7) = dword_19F266240[v7];
  uint64_t v9 = (OpaqueJSValue *)objc_msgSend(v6, sel_JSValueRef);

  JSObjectRef TypedArrayWithArrayBuffer = JSObjectMakeTypedArrayWithArrayBuffer(v8, (JSTypedArrayType)v7, v9, v21);
  if (TypedArrayWithArrayBuffer)
  {
    result.value.super.Class isa = (Class)objc_msgSend(self, sel_valueWithJSValueRef_inContext_, TypedArrayWithArrayBuffer, in.super.isa);
    if (result.value.super.isa)
    {
      Class isa = result.value.super.isa;

      *uint64_t v5 = isa;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
  JSValueRef v13 = v21[0];
  sub_19EF600C0();
  swift_allocError();
  uint64_t v15 = v14;
  result.value.super.Class isa = (Class)objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v13, in.super.isa);
  if (!result.value.super.isa)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  Class v16 = result.value.super.isa;
  uint64_t v17 = (void (**)(const void *, Class, objc_class *))[(objc_class *)in.super.isa exceptionHandler];
  if (v17)
  {
    JSValueRef v18 = v17;
    uint64_t v19 = v17[2];
    uint64_t v20 = v16;
    v19(v18, in.super.isa, v20);
    _Block_release(v18);
  }
  JSError.init(_:)(v16, v15);
  swift_willThrow();

  return result;
}

void JSTypedArray.init(buffer:range:elementType:in:)(id a1@<X4>, void **a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X2>, char *a5@<X3>, void *a6@<X8>)
{
  v29[1] = *(JSValueRef *)MEMORY[0x1E4F143B8];
  uint64_t v7 = *a5;
  uint64_t v8 = qword_19F2661F8[v7];
  size_t v9 = a3 * v8;
  if ((unsigned __int128)(a3 * (__int128)v8) >> 64 != (a3 * v8) >> 63)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v10 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  size_t v11 = v10 + 1;
  if (__OFADD__(v10, 1)) {
    goto LABEL_13;
  }
  JSValueRef v13 = *a2;
  v29[0] = 0;
  uint64_t v14 = (const OpaqueJSContext *)objc_msgSend(a1, sel_JSGlobalContextRef);
  JSTypedArrayType v15 = dword_19F266240[v7];
  Class v16 = (OpaqueJSValue *)objc_msgSend(v13, sel_JSValueRef);

  JSObjectRef TypedArrayWithArrayBufferAndOffset = JSObjectMakeTypedArrayWithArrayBufferAndOffset(v14, v15, v16, v9, v11, v29);
  if (TypedArrayWithArrayBufferAndOffset)
  {
    id v18 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, TypedArrayWithArrayBufferAndOffset, a1);
    if (v18)
    {
      id v19 = v18;

      *a6 = v19;
      return;
    }
    __break(1u);
    goto LABEL_15;
  }
  JSValueRef v20 = v29[0];
  sub_19EF600C0();
  swift_allocError();
  uint64_t v22 = v21;
  id v23 = objc_msgSend(self, sel_valueWithJSValueRef_inContext_, v20, a1);
  if (!v23)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v24 = v23;
  BOOL v25 = (void (**)(const void *, id, id))objc_msgSend(a1, sel_exceptionHandler);
  if (v25)
  {
    id v26 = v25;
    uint64_t v27 = v25[2];
    id v28 = v24;
    v27(v26, a1, v28);
    _Block_release(v26);
  }
  JSError.init(_:)(v24, v22);
  swift_willThrow();
}

id JSTypedArray.value.getter()
{
  return *v0;
}

id JSTypedArray.count.getter()
{
  id v1 = *v0;
  id result = objc_msgSend(*v0, sel_context);
  if (result)
  {
    int v3 = result;
    unsigned int v4 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

    uint64_t v5 = (OpaqueJSValue *)objc_msgSend(v1, sel_JSValueRef);
    return (id)JSObjectGetTypedArrayLength(v4, v5, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id JSTypedArray.elementType.getter@<X0>(unsigned char *a1@<X8>)
{
  int v3 = *v1;
  id result = objc_msgSend(v3, sel_context);
  if (result)
  {
    uint64_t v5 = result;
    char v6 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

    uint64_t TypedArrayType = JSValueGetTypedArrayType(v6, (JSValueRef)objc_msgSend(v3, sel_JSValueRef), 0);
    return (id)sub_19F1BDB30(TypedArrayType, a1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id JSTypedArray.data.getter()
{
  id v1 = *v0;
  id result = objc_msgSend(*v0, sel_context);
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v3 = result;
  unsigned int v4 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

  id result = JSObjectGetTypedArrayBytesPtr(v4, (JSObjectRef)objc_msgSend(v1, sel_JSValueRef), 0);
  if (result)
  {
    uint64_t v5 = result;
    id result = objc_msgSend(v1, sel_context);
    if (result)
    {
      char v6 = result;
      uint64_t v7 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

      size_t TypedArrayByteOffset = JSObjectGetTypedArrayByteOffset(v7, (JSObjectRef)objc_msgSend(v1, sel_JSValueRef), 0);
      id result = objc_msgSend(v1, sel_context);
      if (result)
      {
        size_t v9 = result;
        uint64_t v10 = (const OpaqueJSContext *)objc_msgSend(result, sel_JSGlobalContextRef);

        size_t TypedArrayByteLength = JSObjectGetTypedArrayByteLength(v10, (JSObjectRef)objc_msgSend(v1, sel_JSValueRef), 0);
        return (id)sub_19EE684CC(&v5[TypedArrayByteOffset], TypedArrayByteLength);
      }
      goto LABEL_9;
    }
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
  return result;
}

uint64_t static JSTypedArray.== infix(_:_:)()
{
  return sub_19F1DCA1C() & 1;
}

uint64_t JSTypedArray.description.getter()
{
  id v1 = objc_msgSend(*v0, sel_description);
  uint64_t v2 = sub_19F1DBD7C();

  return v2;
}

unint64_t sub_19F1BE8D4()
{
  unint64_t result = qword_1E94766C0;
  if (!qword_1E94766C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94766C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for JSTypedArray()
{
  return &type metadata for JSTypedArray;
}

uint64_t getEnumTagSinglePayload for JSTypedArray.ElementType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for JSTypedArray.ElementType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1BEA94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JSTypedArray.ElementType()
{
  return &type metadata for JSTypedArray.ElementType;
}

void *BagLanguageSource.init(bag:timeout:defaultLanguages:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = *result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3 & 1;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = a5;
  return result;
}

uint64_t sub_19F1BEAE4()
{
  return MEMORY[0x1F4188298](sub_19F1BEB00, 0, 0);
}

uint64_t sub_19F1BEB00()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1496, sub_19F1BEB80, v0 + 1712);
}

uint64_t sub_19F1BEB80()
{
  return MEMORY[0x1F4188298](sub_19F1BEB9C, 0, 0);
}

uint64_t sub_19F1BEB9C()
{
  uint64_t v1 = *(void *)(v0 + 1840);
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_19F1BEC2C()
{
  return MEMORY[0x1F4188298](sub_19F1BEC48, 0, 0);
}

uint64_t sub_19F1BEC48()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1496, sub_19F1BECC8, v0 + 1616);
}

uint64_t sub_19F1BECC8()
{
  return MEMORY[0x1F4188298](sub_19F1BECE4, 0, 0);
}

uint64_t sub_19F1BECE4()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F1BED64()
{
  uint64_t v1 = *(void **)(v0 + 1808);
  *(void *)(v0 + 1832) = v1;
  *(void *)(*(void *)(v0 + 1800) + 16) = 0;
  uint64_t v2 = swift_release();
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 1424))(v2);
  *(void *)(v0 + 1840) = v3;
  if (v3)
  {
    uint64_t v4 = v0 + 1440;

    uint64_t v5 = sub_19F1BEAE4;
  }
  else
  {
    uint64_t v4 = v0 + 1296;
    swift_willThrow();
    uint64_t v5 = sub_19F1BEC2C;
  }
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1480, v5, v4);
}

uint64_t sub_19F1BEE30()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 1816);
  *(void *)(v0 + 1832) = v1;
  *(void *)(*(void *)(v0 + 1800) + 16) = 0;
  uint64_t v2 = swift_release();
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 1424))(v2);
  *(void *)(v0 + 1840) = v3;
  if (v3)
  {
    uint64_t v4 = v0 + 1440;

    uint64_t v5 = sub_19F1BEAE4;
  }
  else
  {
    uint64_t v4 = v0 + 1296;
    swift_willThrow();
    uint64_t v5 = sub_19F1BEC2C;
  }
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1480, v5, v4);
}

uint64_t sub_19F1BEF08(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return MEMORY[0x1F4188298](sub_19EE2DE58, 0, 0);
}

uint64_t sub_19F1BEF2C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 153) = a4;
  *(void *)(v4 + 200) = a2;
  *(void *)(v4 + 208) = a3;
  *(void *)(v4 + 216) = *a1;
  return MEMORY[0x1F4188298](sub_19EE49F6C, 0, 0);
}

uint64_t sub_19F1BEF58()
{
  swift_release();
  swift_getErrorValue();
  char v1 = sub_19EEA3A88(v0[21]);
  uint64_t v2 = (void *)v0[30];
  uint64_t v3 = (void *)v0[28];
  if (v1)
  {

    uint64_t v4 = (uint64_t (*)(void, void))v0[1];
    return v4(0, 0);
  }
  else
  {
    swift_willThrow();

    unsigned int v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_19F1BF048(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return MEMORY[0x1F4188298](sub_19EE2DD34, 0, 0);
}

uint64_t BagLanguageSource.locale(forLanguage:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v18 = sub_19F1DB67C();
  uint64_t v1 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_19F1DB6DC();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unsigned int v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_19F1DB66C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  JSValueRef v13 = (char *)&v17 - v12;
  swift_bridgeObjectRetain();
  sub_19F1DB5BC();
  sub_19F1DB6BC();
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  sub_19F1DB5CC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  sub_19F1DBEFC();
  sub_19F1DB68C();
  uint64_t v14 = v18;
  sub_19F1DCF4C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v14);
  sub_19F1DB5BC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  JSTypedArrayType v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  sub_19EE476B4((uint64_t)v13, v20);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v7);
}

uint64_t assignWithCopy for BagLanguageSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BagLanguageSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_19F1BF41C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(&v3, AssociatedTypeWitness, AssociatedConformanceWitness);
  return v3;
}

uint64_t dispatch thunk of IntentImplementation.intentKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  JSValueRef v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 32) + **(int **)(a5 + 32));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_19EEB8A6C;
  return v13(a1, a2, a3, a4, a5);
}

id AllowedFieldValuesTreatmentAction.__allocating_init(field:configuration:)(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = 0;
  }
  id v4 = objc_allocWithZone(v2);
  uint64_t v5 = (void *)sub_19F1DBB1C();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithField_configuration_, v3, v5);

  return v6;
}

id AllowedFieldValuesTreatmentAction.init(field:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  strcpy((char *)v17, "allowedValues");
  HIWORD(v17[1]) = -4864;
  uint64_t v8 = v4;
  sub_19F1DCC8C();
  if (*(void *)(a3 + 16) && (unint64_t v9 = sub_19EE77500((uint64_t)v18), (v10 & 1) != 0))
  {
    sub_19EEBDBA4(*(void *)(a3 + 56) + 32 * v9, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_19EE7760C((uint64_t)v18);
  if (!*((void *)&v20 + 1))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19EEBD664((uint64_t)&v19, &qword_1EB393260);
LABEL_11:
    swift_deallocPartialClassInstance();
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476708);
  if ((swift_dynamicCast() & 1) == 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v11 = sub_19EFAB2AC(v17[0]);
  swift_bridgeObjectRelease();
  *(void *)&v8[OBJC_IVAR____TtC9JetEngine33AllowedFieldValuesTreatmentAction_allowList] = v11;

  if (a2)
  {
    uint64_t v12 = (void *)sub_19F1DBD4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v14 = (void *)sub_19F1DBB1C();
  swift_bridgeObjectRelease();
  v16.receiver = v8;
  v16.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v16, sel_initWithField_configuration_, v12, v14);

  if (v13) {
  return v13;
  }
}

uint64_t AllowedFieldValuesTreatmentAction.perform(_:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EEBCD00(a1, (uint64_t)v7);
  if (!v7[3])
  {
    sub_19EEBD664((uint64_t)v7, &qword_1EB393260);
    long long v8 = 0u;
    long long v9 = 0u;
    uint64_t v10 = 0;
    goto LABEL_8;
  }
  uint64_t v4 = MEMORY[0x1E4FBB960];
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v10 = 0;
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_8;
  }
  if (!*((void *)&v9 + 1))
  {
LABEL_8:
    uint64_t result = sub_19EEBD664((uint64_t)&v8, qword_1E9476718);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v11[0] = v8;
  v11[1] = v9;
  uint64_t v12 = v10;
  if (sub_19EF57724((uint64_t)v11, *(void *)(v2 + OBJC_IVAR____TtC9JetEngine33AllowedFieldValuesTreatmentAction_allowList)))
  {
    *(void *)(a2 + 24) = v4;
    uint64_t v5 = swift_allocObject();
    sub_19EE77E34((uint64_t)v11, v5 + 16);
    uint64_t result = sub_19EE7760C((uint64_t)v11);
    *(void *)a2 = v5;
  }
  else
  {
    uint64_t result = sub_19EE7760C((uint64_t)v11);
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0;
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
  }
  return result;
}

id AllowedFieldValuesTreatmentAction.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_19F1BFC34()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t type metadata accessor for AllowedFieldValuesTreatmentAction()
{
  return self;
}

uint64_t sub_19F1BFC94()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_19F1BFCCC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = (id)sub_19F1DB18C();
  objc_msgSend(v1, sel_finishWithError_, v2);
}

uint64_t sub_19F1BFD28()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_retain();
  sub_19EEAC6BC(&v18, v2);
  uint64_t v3 = (uint64_t)v18;
  uint64_t v4 = v19;
  if (qword_1E946DE10 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  char v5 = sub_19EEAC6C0(v3, v4, (uint64_t)v18);
  uint64_t v6 = swift_bridgeObjectRelease();
  if (v5)
  {
    sub_19F1DD95C();
    uint64_t v9 = sub_19EF26A38((uint64_t)v18);
    swift_bridgeObjectRelease();
    sub_19EF48E6C();
    uint64_t v10 = (void *)swift_allocError();
    uint64_t *v11 = v9;
    swift_willThrow();
    id v18 = v10;
    id v12 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
    if (swift_dynamicCast())
    {
      objc_super v16 = v17;
      sub_19F1DD6AC();
      swift_bridgeObjectRelease();
      int v15 = 0;
      uint64_t v14 = 55;
    }
    else
    {

      id v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_19F1DBEFC();
      uint64_t v17 = v10;
      sub_19F1DCF4C();
      int v15 = 0;
      uint64_t v14 = 57;
    }
    uint64_t result = sub_19F1DCFCC();
    __break(1u);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 16);
    MEMORY[0x1F4188790](v6);
    void v13[2] = v1;
    void v13[3] = v3;
    uint64_t v14 = v4;
    type metadata accessor for ThrowingDependencyCell.ObjectState();
    swift_retain();
    sub_19EEAC6FC((void (*)(uint64_t))sub_19F1C19B0, (uint64_t)v13, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_19F1C0034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_19F1C0084(a1, a2);
  return v4;
}

uint64_t sub_19F1C0084(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ThrowingDependencyCell.ObjectState();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (uint64_t *)((char *)&v11 - v7);
  *long long v8 = a1;
  v8[1] = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = sub_19EEAEA5C(v8, v5);
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)(v2 + 16) = v9;
  return v2;
}

uint64_t sub_19F1C0188@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v105 = a3;
  *((void *)&v105 + 1) = a4;
  uint64_t v7 = *a2;
  uint64_t v8 = sub_19F1DB97C();
  uint64_t v96 = *(void *)(v8 - 8);
  uint64_t v97 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v95 = &v82[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_19F1DB8AC();
  uint64_t v93 = *(void *)(v10 - 8);
  uint64_t v94 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  long long v92 = &v82[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void *)(v7 + 80);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v11);
  objc_super v16 = &v82[-v15];
  uint64_t v17 = sub_19F1DB85C();
  uint64_t v109 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  long long v101 = &v82[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v106 = &v82[-v21];
  MEMORY[0x1F4188790](v20);
  v107 = &v82[-v22];
  uint64_t v23 = type metadata accessor for ThrowingDependencyCell.ObjectState();
  MEMORY[0x1F4188790](v23);
  BOOL v25 = (uint64_t *)&v82[-v24];
  uint64_t v100 = v26;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v26 + 16))(&v82[-v24], a1, v23);
  uint64_t v102 = v23;
  if (swift_getEnumCaseMultiPayload() == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v14 + 32))(a5, v25, v13);
  }
  uint64_t v90 = *v25;
  uint64_t v98 = v25[1];
  uint64_t started = type metadata accessor for StartUpPerformanceEvent();
  uint64_t v104 = v17;
  if (v13 == started)
  {
    uint64_t v32 = 0;
    uint64_t v89 = 0;
  }
  else
  {
    type metadata accessor for BaseObjectGraph();
    uint64_t v29 = static BaseObjectGraph.current.getter();
    if (qword_1E946FD30 != -1) {
      swift_once();
    }
    *(void *)&long long v110 = v29;
    swift_retain();
    swift_task_localValuePush();
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = sub_19EEAD6E0(v30);
    swift_bridgeObjectRelease();
    swift_task_localValuePop();
    swift_release();
    if (v31)
    {
      swift_retain();
      uint64_t v32 = sub_19EEADB54(v13);
      uint64_t v89 = v31;
      swift_release();
      uint64_t v17 = v104;
      if (v32)
      {
        swift_retain();
        sub_19F1DB9AC();
        swift_release();
      }
    }
    else
    {
      uint64_t v32 = 0;
      uint64_t v89 = 0;
      uint64_t v17 = v104;
    }
  }
  uint64_t v103 = v32;
  uint64_t v86 = v14;
  if (qword_1E946E608 != -1) {
    swift_once();
  }
  uint64_t v91 = v13;
  unint64_t v99 = v16;
  uint64_t v33 = sub_19F1DB89C();
  uint64_t v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1E9498AC0);
  sub_19F1DB87C();
  swift_unknownObjectRetain();
  int64_t v35 = v107;
  sub_19F1DB81C();
  uint64_t v85 = v34;
  uint64_t v36 = sub_19F1DB87C();
  int v37 = sub_19F1DC98C();
  char v38 = sub_19F1DCA6C();
  uint64_t v87 = a5;
  if (v38)
  {
    uint64_t v84 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v109 + 16);
    unint64_t v39 = (v109 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    int v83 = v37;
    uint64_t v40 = v106;
    v84(v106, v35, v17);
    uint64_t v41 = swift_slowAlloc();
    uint64_t v88 = a1;
    uint64_t v42 = (uint8_t *)v41;
    uint64_t v43 = swift_slowAlloc();
    *(void *)&long long v110 = v43;
    *(_DWORD *)uint64_t v42 = 136315138;
    uint64_t v44 = v91;
    uint64_t v45 = sub_19F1DD98C();
    uint64_t v111 = sub_19EEAD23C(v45, v46, (uint64_t *)&v110);
    sub_19F1DCB3C();
    uint64_t v17 = v104;
    swift_bridgeObjectRelease();
    os_signpost_id_t v47 = sub_19F1DB83C();
    _os_signpost_emit_with_name_impl(&dword_19EE14000, v36, (os_signpost_type_t)v83, v47, "MakeLazyDependency", "object=%s", v42, 0xCu);
    swift_arrayDestroy();
    uint64_t v48 = v43;
    long long v49 = v108;
    MEMORY[0x19F3C9470](v48, -1, -1);
    id v50 = v42;
    a1 = v88;
    MEMORY[0x19F3C9470](v50, -1, -1);

    (*(void (**)(unsigned char *, uint64_t))(v109 + 8))(v40, v17);
    unint64_t v51 = v39;
    char v52 = v84;
  }
  else
  {

    long long v49 = v108;
    char v52 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v109 + 16);
    unint64_t v51 = (v109 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v40 = v106;
    uint64_t v44 = v91;
  }
  uint64_t v53 = v107;
  v52(v40, v107, v17);
  sub_19F1DB8EC();
  swift_allocObject();
  uint64_t v54 = sub_19F1DB8DC();
  long long v110 = v105;
  sub_19EEAE704(v90, v98, &v110);
  if (v49)
  {
    (*(void (**)(unsigned char *, uint64_t))(v109 + 8))(v53, v17);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v55 = v44;
    *((void *)&v105 + 1) = v51;
    char v56 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
    uint64_t v88 = a1;
    v56(a1, v102);
    uint64_t v57 = sub_19F1DB87C();
    uint64_t v58 = v101;
    sub_19F1DB8CC();
    os_signpost_type_t v59 = sub_19F1DC97C();
    if (sub_19F1DCA6C())
    {
      v108 = 0;
      swift_retain();
      char v60 = v92;
      sub_19F1DB8FC();
      *(void *)&long long v105 = v54;
      swift_release();
      uint64_t v62 = v93;
      uint64_t v61 = v94;
      if ((*(unsigned int (**)(unsigned char *, uint64_t))(v93 + 88))(v60, v94) == *MEMORY[0x1E4FBD340])
      {
        uint64_t v63 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v60, v61);
        uint64_t v63 = "";
      }
      uint64_t v65 = v106;
      uint64_t v66 = v58;
      uint64_t v67 = v58;
      uint64_t v68 = v104;
      v52(v106, v66, v104);
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v69 = 0;
      os_signpost_id_t v70 = sub_19F1DB83C();
      _os_signpost_emit_with_name_impl(&dword_19EE14000, v57, v59, v70, "MakeLazyDependency", v63, v69, 2u);
      MEMORY[0x19F3C9470](v69, -1, -1);

      uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v109 + 8);
      v64(v67, v68);
      v64(v65, v68);
      uint64_t v55 = v91;
    }
    else
    {

      uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v109 + 8);
      v64(v58, v104);
    }
    uint64_t v71 = v88;
    v72 = v99;
    if (v103)
    {
      uint64_t v73 = *MEMORY[0x1E4F38918];
      uint64_t v75 = v96;
      uint64_t v74 = v97;
      unint64_t v76 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v96 + 104);
      v108 = (void (*)(void, void))v64;
      uint64_t v77 = v99;
      uint64_t v78 = v88;
      uint64_t v79 = v95;
      v76(v95, v73, v97);
      swift_retain();
      sub_19F1DB9BC();
      swift_release();
      uint64_t v80 = v79;
      uint64_t v71 = v78;
      v72 = v77;
      uint64_t v64 = (void (*)(unsigned char *, uint64_t))v108;
      (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v80, v74);
    }
    uint64_t v81 = v86;
    if (v89)
    {
      *(void *)&long long v110 = swift_getDynamicType();
      swift_retain();
      StartUpPerformanceEvent.record(checkpoint:)((uint64_t *)&v110);
      swift_release();
      swift_release_n();
      swift_release();
      v64(v107, v104);
    }
    else
    {
      v64(v107, v104);
      swift_release();
      swift_release();
    }
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v81 + 16))(v71, v72, v55);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v81 + 32))(v87, v72, v55);
  }
  return swift_release();
}

uint64_t type metadata accessor for ThrowingDependencyCell()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_19F1C0C78(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_24:
    swift_retain();
    return v3;
  }
  unsigned int v9 = a2[v5];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v11 = v5;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_19;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_19:
        int v13 = (v12 | (v10 << (8 * v5))) + 2;
        unsigned int v9 = v12 + 2;
        if (v5 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 != 1)
  {
    uint64_t v14 = *((void *)a2 + 1);
    *uint64_t v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 0;
    goto LABEL_24;
  }
  (*(void (**)(void *))(v4 + 16))(a1);
  *((unsigned char *)v3 + v5) = 1;
  return v3;
}

uint64_t sub_19F1C0DF0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return swift_release();
  }
}

void *sub_19F1C0EF0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    uint64_t v11 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v11;
    swift_retain();
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_19F1C102C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 1;
    }
    else
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_19F1C1248(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_19F1C1380(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_19F1C1598(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_19F1C16CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x19F1C1894);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_19F1C18BC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

uint64_t type metadata accessor for ThrowingDependencyCell.ObjectState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F1C198C()
{
  return sub_19F1BFD28();
}

uint64_t sub_19F1C19B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19F1C0188(a1, *(uint64_t **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

void *RunLoopWorkerThread.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_allocObject();
  uint64_t v4[5] = 0;
  v4[6] = 0;
  _OWORD v4[2] = a1;
  v4[3] = a2;
  v4[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  v4[7] = MEMORY[0x1E4FBC860];
  return v4;
}

Swift::Void __swiftcall RunLoopWorkerThread.PendingTask.cancel()()
{
  uint64_t v0 = (__CFRunLoopTimer *)MEMORY[0x19F3C95C0]();
  if (v0)
  {
    uint64_t v1 = v0;
    CFRunLoopTimerInvalidate(v0);
  }
}

uint64_t sub_19F1C1A94()
{
  uint64_t result = sub_19F1DBD4C();
  qword_1E946FC98 = result;
  return result;
}

id static RunLoopWorkerThread.willStopNotification.getter()
{
  if (qword_1E946FB80 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1E946FC98;
  return v0;
}

void *RunLoopWorkerThread.init(name:)(uint64_t a1, uint64_t a2)
{
  v2[5] = 0;
  v2[6] = 0;
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E08]), sel_init);
  v2[7] = MEMORY[0x1E4FBC860];
  return v2;
}

uint64_t RunLoopWorkerThread.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_19F1C1BA0()
{
  uint64_t v1 = *(void **)(v0 + 32);
  objc_msgSend(v1, sel_lock);
  BOOL v2 = *(void *)(v0 + 40) != 0;
  objc_msgSend(v1, sel_unlock);
  return v2;
}

void sub_19F1C1BF0()
{
}

id sub_19F1C1BFC()
{
  uint64_t v1 = (void *)v0[4];
  objc_msgSend(v1, sel_lock);
  BOOL v2 = (void *)v0[5];
  if (v2)
  {
    uint64_t v3 = (void *)v0[6];
    if (v3)
    {
      uint64_t v4 = v3;
      int v5 = v2;
      CFRunLoopSourceInvalidate(v4);
      CFRunLoopStop(v5);
      uint64_t v6 = (void *)v0[6];
      v0[6] = 0;

      int v7 = (void *)v0[5];
      v0[5] = 0;
    }
  }
  swift_beginAccess();
  v0[7] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  return objc_msgSend(v1, sel_unlock);
}

void sub_19F1C1CCC(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_defaultCenter);
  id v3 = v2;
  if (qword_1E946FB80 != -1)
  {
    swift_once();
    id v2 = v3;
  }
  objc_msgSend(v2, sel_postNotificationName_object_, qword_1E946FC98, a1);
}

void sub_19F1C1D78(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_19F1C1DE4@<X0>(uint64_t (*a1)(id)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v32 = a4;
  uint64_t v6 = sub_19F1DCAAC();
  uint64_t v31 = *(void *)(v6 - 8);
  double v7 = MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v30 - v8;
  unsigned int v10 = *(void **)(v4 + 32);
  objc_msgSend(v10, sel_lock, v7);
  int v11 = CFRunLoopGetCurrent();
  int v12 = *(void **)(v4 + 40);
  if (!v11)
  {
    if (v12) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  unsigned int v13 = v11;
  if (!v12)
  {

    goto LABEL_8;
  }
  type metadata accessor for CFRunLoop(0);
  sub_19F1C27A4((unint64_t *)&unk_1EB392238, type metadata accessor for CFRunLoop);
  id v14 = v12;
  uint64_t v15 = v6;
  int v16 = v13;
  char v17 = sub_19F1DB7BC();

  uint64_t v6 = v15;
  if (v17)
  {
LABEL_6:
    id v18 = objc_msgSend(v10, sel_unlock);
    return v33(v18);
  }
LABEL_8:
  objc_msgSend(v10, sel_unlock);
  dispatch_semaphore_t v20 = dispatch_semaphore_create(0);
  uint64_t v21 = swift_allocBox();
  uint64_t v23 = v22;
  uint64_t v24 = *(void *)(a3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1, a3);
  BOOL v25 = (void *)swift_allocObject();
  JSValueRef v25[2] = a3;
  void v25[3] = v21;
  uint64_t v26 = v34;
  v25[4] = v33;
  v25[5] = v26;
  v25[6] = v20;
  swift_retain();
  swift_retain();
  uint64_t v27 = v20;
  uint64_t v28 = v6;
  uint64_t v29 = v27;
  sub_19EEC9E30((uint64_t)sub_19F1C25C4, (uint64_t)v25);
  swift_release();
  sub_19F1DC9AC();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v9, v23, v28);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v9, 1, a3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {

    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v32, v9, a3);
    return swift_release();
  }
  return result;
}

uint64_t sub_19F1C210C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_19F1DCAAC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unsigned int v10 = (char *)&v13 - v9;
  uint64_t v11 = swift_projectBox();
  a2();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(v10, 0, 1, a5);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v11, v10, v7);
  return sub_19F1DC9BC();
}

uint64_t sub_19F1C225C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Result();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - v10;
  int v12 = (void *)swift_allocObject();
  v12[2] = a3;
  void v12[3] = a1;
  v12[4] = a2;
  swift_retain();
  sub_19F1C1DE4((uint64_t (*)(id))sub_19F1C260C, (uint64_t)v12, v8, (uint64_t)v11);
  swift_release();
  Result.unwrap()(v8, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_19F1C23B0()
{
  return 0xD000000000000014;
}

id *RunLoopWorkerThread.deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RunLoopWorkerThread.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_19F1C24E8()
{
  return sub_19F1C23B0();
}

uint64_t sub_19F1C250C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F1C2544()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F1C257C()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F1C25C4()
{
  return sub_19F1C210C(*(void *)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

uint64_t sub_19F1C25D4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_19F1C260C@<X0>(uint64_t a1@<X8>)
{
  return Result.init(trying:)(*(void (**)(double))(v1 + 24), a1);
}

uint64_t method lookup function for RunLoopWorkerThread(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for RunLoopWorkerThread);
}

uint64_t dispatch thunk of RunLoopWorkerThread.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RunLoopWorkerThread.isRunning.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of RunLoopWorkerThread.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of RunLoopWorkerThread.start(qualityOfService:)(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of RunLoopWorkerThread.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of RunLoopWorkerThread.scheduleAfter(delay:execute:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of RunLoopWorkerThread.scheduleSync<A>(task:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of RunLoopWorkerThread.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

void sub_19F1C279C()
{
  sub_19F1C1CCC(v0);
}

uint64_t sub_19F1C27A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void EventTimeMetricsFieldProvider.category.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

id sub_19F1C2800(uint64_t a1)
{
  return EventTimeMetricsFieldProvider.addMetricsFields(into:using:)(a1);
}

ValueMetadata *type metadata accessor for EventTimeMetricsFieldProvider()
{
  return &type metadata for EventTimeMetricsFieldProvider;
}

uint64_t _Lazy_KeyedBy.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = a1;
  uint64_t v3 = sub_19F1DBC0C();
  uint64_t result = sub_19EF96A18((uint64_t)&v5, v3, &v6);
  *a2 = v6;
  return result;
}

uint64_t _Lazy_KeyedBy.wrappedValue.getter()
{
  sub_19F1DBC0C();
  type metadata accessor for LazyValueWrapper();
  swift_retain();
  sub_19EF96F20((uint64_t)&v1);
  swift_release();
  return v1;
}

uint64_t sub_19F1C2950@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for _Lazy_KeyedBy();
  uint64_t result = _Lazy_KeyedBy.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_19F1C29A0()
{
  type metadata accessor for _Lazy_KeyedBy();
  swift_bridgeObjectRetain();
  sub_19F1C34AC();
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_KeyedBy.wrappedValue.setter()
{
  sub_19F1C34AC();
  return swift_bridgeObjectRelease();
}

uint64_t (*_Lazy_KeyedBy.wrappedValue.modify(uint64_t *a1, uint64_t a2))(uint64_t a1, char a2)
{
  a1[1] = a2;
  a1[2] = v2;
  *a1 = _Lazy_KeyedBy.wrappedValue.getter();
  return sub_19F1C2A8C;
}

uint64_t sub_19F1C2A8C(uint64_t a1, char a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_19F1C34AC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_19F1C34AC();
  }
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_KeyedBy.description.getter()
{
  return 0;
}

uint64_t _Lazy_KeyedBy.encode(to:)(void *a1)
{
  uint64_t v13 = _Lazy_KeyedBy.wrappedValue.getter();
  uint64_t v2 = sub_19F1DBC0C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9474298);
  if (swift_dynamicCast())
  {
    sub_19EEBB420(v9, (uint64_t)v11);
    __swift_project_boxed_opaque_existential_1(v11, v12);
    sub_19F1DBC7C();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
  }
  else
  {
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_19EEBD664((uint64_t)v9, &qword_1E94742A0);
    uint64_t v8 = sub_19F1DCDFC();
    swift_allocError();
    uint64_t v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568);
    uint64_t v6 = _Lazy_KeyedBy.wrappedValue.getter();
    v5[3] = v2;
    *uint64_t v5 = v6;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8BC();
    v11[0] = 0;
    v11[1] = 0xE000000000000000;
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    *(void *)&v9[0] = 60;
    *((void *)&v9[0] + 1) = 0xE100000000000000;
    uint64_t v7 = _Lazy_KeyedBy.wrappedValue.getter();
    uint64_t v12 = v2;
    v11[0] = v7;
    runtimeType(of:)(v11);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void))(*(void *)(v8 - 8) + 104))(v5, *MEMORY[0x1E4FBBAA0]);
    return swift_willThrow();
  }
}

uint64_t sub_19F1C2DE0(void *a1)
{
  return _Lazy_KeyedBy.encode(to:)(a1);
}

uint64_t _Lazy_KeyedBy<>._partiallyEncode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _Lazy_KeyedBy.wrappedValue.getter();
  Dictionary<>._partiallyEncode(to:)(a1, v6, *(void *)(a2 + 24), a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F1C2E5C(void *a1, uint64_t a2, uint64_t a3)
{
  return _Lazy_KeyedBy<>._partiallyEncode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t _Lazy_KeyedBy<>.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a2;
  sub_19EEC355C(a1, (uint64_t)v13);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  long long v11 = v13[1];
  *(_OWORD *)(v10 + 32) = v13[0];
  *(_OWORD *)(v10 + 48) = v11;
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 72) = v9;
  sub_19F1DBC0C();
  sub_19EF96924((uint64_t)sub_19F1C350C, v10, (uint64_t *)v13);
  uint64_t result = sub_19EEC3418(a1);
  *a5 = *(void *)&v13[0];
  return result;
}

uint64_t sub_19F1C2F44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  JSONObject.dictionary.getter((uint64_t)&v21);
  if (*((void *)&v22 + 1))
  {
    v24[0] = v21;
    v24[1] = v22;
    uint64_t v25 = v23;
    sub_19EF5C3BC((uint64_t)v24, (uint64_t)&v21);
    v18[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v9 = Dictionary<>.init(deserializing:using:)((uint64_t)&v21, v18, a2, a3);
    if (v4)
    {
      swift_bridgeObjectRetain();
      sub_19F17A334(0xD000000000000027, 0x800000019F269EF0, a1, (uint64_t)&v21);
      swift_bridgeObjectRelease();
      sub_19EFE5A88((uint64_t)&v21, (uint64_t)v18);
      uint64_t v10 = v19;
      if (v19)
      {
        uint64_t v11 = v20;
        __swift_project_boxed_opaque_existential_1(v18, v19);
        uint64_t v12 = sub_19F1DBC0C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v12, v4, v10, v11);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
      }
      else
      {
        sub_19EEBD664((uint64_t)v18, qword_1E946D938);
      }
      swift_willThrow();
      sub_19EEBD664((uint64_t)&v21, qword_1E946D938);
      return sub_19EEC05FC((uint64_t)v24);
    }
    else
    {
      uint64_t v17 = v9;
      uint64_t result = sub_19EEC05FC((uint64_t)v24);
      *a4 = v17;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v21, &qword_1E946F740);
    uint64_t v13 = type metadata accessor for _Lazy_KeyedBy();
    sub_19EF5B580();
    swift_allocError();
    uint64_t v14 = MEMORY[0x1E4FBC860];
    *uint64_t v15 = v13;
    v15[1] = v14;
    v15[2] = 0;
    void v15[3] = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_19F1C3144@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return _Lazy_KeyedBy<>.init(deserializing:using:)(a1, a2, *(void *)(a3 + 24), *(void *)(a4 - 8), a5);
}

uint64_t _Lazy_KeyedBy<>.init(_partiallyDeserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v9 = *a2;
  sub_19EEC355C(a1, (uint64_t)v13);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  long long v11 = v13[1];
  *(_OWORD *)(v10 + 32) = v13[0];
  *(_OWORD *)(v10 + 48) = v11;
  *(void *)(v10 + 64) = v14;
  *(void *)(v10 + 72) = v9;
  sub_19F1DBC0C();
  sub_19EF96924((uint64_t)sub_19F1C3534, v10, (uint64_t *)v13);
  uint64_t result = sub_19EEC3418(a1);
  *a5 = *(void *)&v13[0];
  return result;
}

uint64_t sub_19F1C3234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_19EEC355C(a1, (uint64_t)v10);
  uint64_t v11 = a2;
  swift_bridgeObjectRetain();
  uint64_t result = Dictionary<>.init(_partiallyDeserializing:using:)((uint64_t)v10, &v11, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_19F1C32AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return _Lazy_KeyedBy<>.init(_partiallyDeserializing:using:)(a1, a2, *(void *)(a3 + 24), *(void *)(a4 - 8), a5);
}

uint64_t static _Lazy_KeyedBy<>.== infix(_:_:)()
{
  type metadata accessor for _Lazy_KeyedBy();
  _Lazy_KeyedBy.wrappedValue.getter();
  _Lazy_KeyedBy.wrappedValue.getter();
  char v0 = sub_19F1DBC3C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_19F1C3368()
{
  return static _Lazy_KeyedBy<>.== infix(_:_:)();
}

uint64_t _Lazy_KeyedBy<>.hash(into:)()
{
  _Lazy_KeyedBy.wrappedValue.getter();
  sub_19F1DBC2C();
  return swift_bridgeObjectRelease();
}

uint64_t _Lazy_KeyedBy<>.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1C3448()
{
  return _Lazy_KeyedBy<>.hashValue.getter();
}

uint64_t sub_19F1C3450()
{
  return _Lazy_KeyedBy<>.hash(into:)();
}

uint64_t sub_19F1C3458()
{
  return sub_19F1DD78C();
}

void sub_19F1C34AC()
{
}

uint64_t sub_19F1C350C@<X0>(uint64_t *a1@<X8>)
{
  return sub_19F1C2F44(v1[9], v1[2], v1[3], a1);
}

uint64_t sub_19F1C3534@<X0>(uint64_t *a1@<X8>)
{
  return sub_19F1C3234((uint64_t)(v1 + 4), v1[9], v1[2], v1[3], a1);
}

uint64_t type metadata accessor for _Lazy_KeyedBy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_19F1C3570()
{
  return swift_getWitnessTable();
}

uint64_t sub_19F1C35C0()
{
  return 24;
}

__n128 sub_19F1C35CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t MetricsLogger.Configuration.recorder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC4154(v1, a1);
}

uint64_t MetricsLogger.Configuration.recorder.setter(long long *a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(v1);
  return sub_19EEBB420(a1, v1);
}

uint64_t (*MetricsLogger.Configuration.recorder.modify())()
{
  return nullsub_1;
}

uint64_t MetricsLogger.Configuration.eventTopic.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MetricsLogger.Configuration.eventTopic.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 4sub_19EE4AC98(25, 0) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*MetricsLogger.Configuration.eventTopic.modify())()
{
  return nullsub_1;
}

double MetricsLogger.Configuration.samplingPercentage.getter()
{
  return *(double *)(v0 + 56);
}

void MetricsLogger.Configuration.samplingPercentage.setter(double a1)
{
  *(double *)(v1 + 56) = a1;
}

uint64_t (*MetricsLogger.Configuration.samplingPercentage.modify())()
{
  return nullsub_1;
}

double MetricsLogger.Configuration.samplingDuration.getter()
{
  return *(double *)(v0 + 64);
}

void MetricsLogger.Configuration.samplingDuration.setter(double a1)
{
  *(double *)(v1 + 64) = a1;
}

uint64_t (*MetricsLogger.Configuration.samplingDuration.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F1C3734()
{
  sub_19EE85BDC();
  uint64_t result = sub_19F1DCA0C();
  qword_1E94988F0 = result;
  return result;
}

uint64_t MetricsLogger.__allocating_init(loggerName:configuration:)(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_19EEC4154((uint64_t)a3, v6 + 32);
  uint64_t v7 = *((void *)a3 + 6);
  *(double *)(v6 + 72) = a3[5];
  *(void *)(v6 + 8sub_19EE4AC98(25, 0) = v7;
  double v8 = a3[7];
  double v9 = a3[8];
  swift_bridgeObjectRetain();
  sub_19EE58B88(6778732, 0xE300000000000000, (uint64_t)&v13, v8, v9);
  sub_19EEDF350((uint64_t)a3);
  uint64_t v10 = v14;
  uint64_t v11 = v15;
  *(_OWORD *)(v6 + 88) = v13;
  *(void *)(v6 + 104) = v10;
  *(void *)(v6 + 112) = v11;
  *(_OWORD *)(v6 + 12sub_19EE4AC98(25, 0) = v16;
  return v6;
}

Swift::Void __swiftcall MetricsLogger.log(contentsOf:withLevel:)(Swift::OpaquePointer contentsOf, JetEngine::LogMessageLevel withLevel)
{
  uint64_t v3 = v2;
  uint64_t v4 = (unsigned __int8 *)withLevel;
  uint64_t v118 = *MEMORY[0x1E4F143B8];
  uint64_t v100 = sub_19F1DB34C();
  uint64_t v6 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v97 = (char *)v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v99 = (char *)v88 - v9;
  uint64_t v10 = *v4;
  uint64_t v11 = *(void *)(v3 + 104);
  unint64_t v12 = *(void *)(v3 + 112);
  long long v114 = *(_OWORD *)(v3 + 88);
  uint64_t v115 = v11;
  unint64_t v116 = v12;
  long long v117 = *(_OWORD *)(v3 + 120);
  if (sub_19EF6F600())
  {
    unint64_t v13 = MEMORY[0x1E4FBB1A0];
    unint64_t v116 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v114 = 6778732;
    *((void *)&v114 + 1) = 0xE300000000000000;
    sub_19EEBDC00(&v114, &v112);
    uint64_t v14 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v111 = v14;
    sub_19EE7DA20(&v112, 0x707954746E657665, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
    uint64_t v16 = v111;
    swift_bridgeObjectRelease();
    if (qword_1E946D910 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_1E94988F0;
    unint64_t v116 = sub_19EE85BDC();
    *(void *)&long long v114 = v17;
    sub_19EEBDC00(&v114, &v112);
    id v18 = v17;
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v111 = v16;
    sub_19EE7DA20(&v112, 0x726556746E657665, 0xEC0000006E6F6973, v19);
    uint64_t v20 = v111;
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(v3 + 16);
    uint64_t v22 = *(void *)(v3 + 24);
    unint64_t v116 = v13;
    *(void *)&long long v114 = v21;
    *((void *)&v114 + 1) = v22;
    sub_19EEBDC00(&v114, &v112);
    swift_bridgeObjectRetain();
    char v23 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v111 = v20;
    sub_19EE7DA20(&v112, 0x614E726567676F6CLL, 0xEA0000000000656DLL, v23);
    uint64_t v24 = v111;
    swift_bridgeObjectRelease();
    unint64_t v25 = 0xE500000000000000;
    uint64_t v26 = 0x6775626564;
    switch(v10)
    {
      case 1:
        unint64_t v25 = 0xE400000000000000;
        uint64_t v26 = 1852989815;
        break;
      case 2:
        unint64_t v25 = 0xE400000000000000;
        uint64_t v26 = 1868983913;
        break;
      case 3:
        break;
      default:
        uint64_t v26 = 0x726F727265;
        break;
    }
    uint64_t v89 = (void *)v3;
    unint64_t v116 = v13;
    *(void *)&long long v114 = v26;
    *((void *)&v114 + 1) = v25;
    sub_19EEBDC00(&v114, &v112);
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v111 = v24;
    sub_19EE7DA20(&v112, 0x6C6576656CLL, 0xE500000000000000, v27);
    uint64_t v90 = v111;
    swift_bridgeObjectRelease();
    if (qword_1EB391C98 != -1) {
      swift_once();
    }
    uint64_t v28 = (unsigned char *)(qword_1EB391C90 + 16);
    uint64_t v29 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
    swift_retain();
    os_unfair_lock_lock(v29);
    sub_19EEC4E5C(v28, &v114);
    os_unfair_lock_unlock(v29);
    int v30 = v114;
    swift_release();
    if (v30 == 2) {
      int has_internal_content = os_variant_has_internal_content();
    }
    else {
      int has_internal_content = v30 & 1;
    }
    uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v32 = MEMORY[0x1E4FBC840];
    uint64_t v92 = *((void *)contentsOf._rawValue + 2);
    if (v92)
    {
      uint64_t v102 = 0;
      uint64_t v91 = (char *)contentsOf._rawValue + 32;
      uint64_t v33 = (long long *)((char *)&v114 + 8);
      uint64_t v94 = (void (**)(char *, char *, uint64_t))(v6 + 32);
      uint64_t v93 = (void (**)(char *, uint64_t))(v6 + 8);
      v88[1] = contentsOf._rawValue;
      swift_bridgeObjectRetain();
      uint64_t v34 = 0;
      uint64_t v98 = v32 + 8;
      uint64_t v35 = MEMORY[0x1E4FBC3B0];
      uint64_t v103 = (char *)&v114 + 8;
      long long v107 = xmmword_19F24EAD0;
      while (1)
      {
        uint64_t v36 = *(void *)&v91[8 * v34];
        uint64_t v106 = *(void *)(v36 + 16);
        if (v106) {
          break;
        }
LABEL_16:
        if (++v34 == v92)
        {
          swift_bridgeObjectRelease();
          goto LABEL_51;
        }
      }
      uint64_t v96 = v34;
      uint64_t v105 = v36 + 32;
      uint64_t v95 = v36;
      swift_bridgeObjectRetain();
      uint64_t v37 = 0;
      while (1)
      {
        sub_19F09CB18(v105 + 40 * v37, (uint64_t)&v112);
        sub_19EEBCD00((uint64_t)&v112, (uint64_t)&v114);
        if (!v116)
        {
          sub_19EEBD664((uint64_t)&v114, &qword_1EB393260);
          goto LABEL_27;
        }
        sub_19EEBDC00(&v114, &v111);
        sub_19F09CB18((uint64_t)&v112, (uint64_t)&v114);
        if (has_internal_content)
        {
          sub_19F09DE04((uint64_t)&v114);
        }
        else
        {
          int v38 = v117;
          sub_19F09DE04((uint64_t)&v114);
          if (v38)
          {
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
LABEL_27:
            sub_19EEBCD00((uint64_t)&v112, (uint64_t)&v114);
            if (v116)
            {
              sub_19EEBDC00(&v114, &v111);
              int v39 = v113;
              LOBYTE(v114) = 1;
              BYTE1(v114) = v113;
              sub_19EEBDBA4((uint64_t)&v111, (uint64_t)v33);
              if (v39)
              {
                if (v39 == 1)
                {
                  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
                  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
                  unint64_t v40 = 0xE90000000000005DLL;
                  uint64_t v41 = 0x657461766972705BLL;
                }
                else
                {
                  sub_19EEBDC00(v33, v110);
                  sub_19EEBDBA4((uint64_t)v110, (uint64_t)&v108);
                  uint64_t v53 = sub_19F1DBE0C();
                  long long v101 = v88;
                  MEMORY[0x1F4188790](v53);
                  uint64_t v54 = v102;
                  sub_19F09BA40(v55, v56, 1, (uint64_t)&v88[-8]);
                  uint64_t v102 = v54;
                  uint64_t v108 = 0;
                  unint64_t v109 = 0xE000000000000000;
                  MEMORY[0x19F3C6160](128);
                  uint64_t v57 = 0;
                  uint64_t v58 = MEMORY[0x1E4FBC358];
                  do
                  {
                    uint64_t v59 = v57 + 1;
                    char v60 = *((unsigned char *)&v88[-8] + v57);
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EB393160);
                    uint64_t v61 = swift_allocObject();
                    *(_OWORD *)(v61 + 16) = v107;
                    *(void *)(v61 + 56) = v58;
                    *(void *)(v61 + 64) = v35;
                    *(unsigned char *)(v61 + 32) = v60;
                    sub_19F1DBDBC();
                    sub_19F1DBEFC();
                    swift_bridgeObjectRelease();
                    uint64_t v57 = v59;
                  }
                  while (v59 != 64);
                  uint64_t v41 = v108;
                  unint64_t v40 = v109;
                  swift_bridgeObjectRelease();
                  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v110);
                  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
                  unint64_t v13 = MEMORY[0x1E4FBB1A0];
                }
                goto LABEL_46;
              }
              uint64_t v44 = v99;
              uint64_t v45 = v100;
              if (swift_dynamicCast())
              {
                unint64_t v46 = v97;
                (*v94)(v97, v44, v45);
                os_signpost_id_t v47 = (void *)sub_19F1DB25C();
                id v48 = (id)AMSLogableURL();

                uint64_t v41 = sub_19F1DBD7C();
                long long v49 = v33;
                unint64_t v40 = v50;

                unint64_t v51 = v46;
                unint64_t v13 = MEMORY[0x1E4FBB1A0];
                (*v93)(v51, v45);
                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
                uint64_t v52 = (uint64_t)v49;
                goto LABEL_44;
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
              if (swift_dynamicCast())
              {
                uint64_t v62 = v33;
                uint64_t v63 = *(void **)&v110[0];
                uint64_t v64 = (void *)sub_19F1DB18C();
                id v65 = (id)AMSLogableError();

                uint64_t v41 = sub_19F1DBD7C();
                unint64_t v40 = v66;

                unint64_t v13 = MEMORY[0x1E4FBB1A0];
                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
                uint64_t v52 = (uint64_t)v62;
LABEL_44:
                __swift_destroy_boxed_opaque_existential_1Tm(v52);
              }
              else
              {
                sub_19EEBDBA4((uint64_t)&v111, (uint64_t)v110);
                uint64_t v41 = sub_19F1DBE0C();
                unint64_t v40 = v67;
                __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
                sub_19EEBD664((uint64_t)&v114, &qword_1EB3931F0);
              }
            }
            else
            {
              sub_19EEBD664((uint64_t)&v114, &qword_1EB393260);
              unint64_t v40 = 0xE600000000000000;
              uint64_t v41 = 0x296C6C756E28;
            }
LABEL_46:
            unint64_t v116 = v13;
            *(void *)&long long v114 = v41;
            *((void *)&v114 + 1) = v40;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v31 = sub_19EEB2F60(0, v31[2] + 1, 1, v31);
            }
            uint64_t v33 = v103;
            unint64_t v69 = v31[2];
            unint64_t v68 = v31[3];
            if (v69 >= v68 >> 1) {
              uint64_t v31 = sub_19EEB2F60((void *)(v68 > 1), v69 + 1, 1, v31);
            }
            _OWORD v31[2] = v69 + 1;
            sub_19EEBDC00(&v114, &v31[4 * v69 + 4]);
            goto LABEL_20;
          }
        }
        sub_19EEBDBA4((uint64_t)&v111, (uint64_t)&v114);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_19EEB2F60(0, v31[2] + 1, 1, v31);
        }
        unint64_t v43 = v31[2];
        unint64_t v42 = v31[3];
        if (v43 >= v42 >> 1) {
          uint64_t v31 = sub_19EEB2F60((void *)(v42 > 1), v43 + 1, 1, v31);
        }
        _OWORD v31[2] = v43 + 1;
        sub_19EEBDC00(&v114, &v31[4 * v43 + 4]);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
LABEL_20:
        sub_19F09DE04((uint64_t)&v112);
        if (++v37 == v106)
        {
          swift_bridgeObjectRelease();
          uint64_t v34 = v96;
          goto LABEL_16;
        }
      }
    }
LABEL_51:
    unint64_t v70 = v31[2];
    if (v70)
    {
      uint64_t v71 = (uint64_t)(v31 + 4);
      sub_19EEBDBA4((uint64_t)(v31 + 4), (uint64_t)&v114);
      unint64_t v72 = MEMORY[0x1E4FBB1A0];
      if (swift_dynamicCast())
      {
        unint64_t v116 = v72;
        long long v114 = v112;
        sub_19EEBDC00(&v114, &v112);
        uint64_t v73 = v90;
        char v74 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v111 = v73;
        sub_19EE7DA20(&v112, 0x6567617373656DLL, 0xE700000000000000, v74);
        uint64_t v75 = v111;
        swift_bridgeObjectRelease();
        unint64_t v76 = v31[2];
        if (v76 < 2)
        {
          swift_bridgeObjectRelease();
          uint64_t v78 = v89;
          goto LABEL_64;
        }
        if (v76 < v70) {
          __break(1u);
        }
        unint64_t v77 = (2 * v70) | 1;
        uint64_t v78 = v89;
        swift_retain();
        sub_19F1C4638((uint64_t)v31, (uint64_t)(v31 + 4), 1, v77);
        uint64_t v80 = v79;
        swift_bridgeObjectRelease();
        swift_release();
        unint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
        *(void *)&long long v114 = v80;
        sub_19EEBDC00(&v114, &v112);
        char v81 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v111 = v75;
LABEL_63:
        sub_19EE7DA20(&v112, 0x746E656D75677261, 0xE900000000000073, v81);
        uint64_t v75 = v111;
        swift_bridgeObjectRelease();
LABEL_64:
        uint64_t v86 = v78[7];
        uint64_t v87 = v78[8];
        __swift_project_boxed_opaque_existential_1(v78 + 4, v86);
        *(void *)&long long v114 = v75;
        *((void *)&v114 + 1) = MEMORY[0x1E4FBC860];
        (*(void (**)(long long *, void, void, uint64_t, uint64_t))(v87 + 8))(&v114, v78[9], v78[10], v86, v87);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_19EEBDBA4(v71, (uint64_t)&v111);
        sub_19EEBDBA4((uint64_t)&v111, (uint64_t)v110);
        if (swift_dynamicCast()) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
        v71 += 32;
        if (!--v70)
        {
          swift_bridgeObjectRelease();
          goto LABEL_60;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_19EEBDC00(&v111, &v112);
      sub_19EEBDC00(&v112, &v114);
      sub_19EEBDBA4((uint64_t)&v114, (uint64_t)&v112);
      uint64_t v83 = v90;
      char v84 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v111 = v83;
      sub_19EE7DA20(&v112, 0x6567617373656DLL, 0xE700000000000000, v84);
      uint64_t v82 = v111;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v114);
    }
    else
    {
LABEL_60:
      uint64_t v82 = v90;
    }
    uint64_t v78 = v89;
    swift_retain();
    uint64_t v85 = sub_19F1C5178((uint64_t)v31);
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391078);
    *(void *)&long long v114 = v85;
    sub_19EEBDC00(&v114, &v112);
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v111 = v82;
    goto LABEL_63;
  }
}

uint64_t MetricsLogger.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_19F1C4614(Swift::OpaquePointer a1, JetEngine::LogMessageLevel a2)
{
}

void sub_19F1C4638(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v100 = (void (**)(char *, uint64_t))((char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v98 = (char *)&v89 - v11;
  uint64_t v101 = sub_19F1DB34C();
  uint64_t v12 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v95 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v94 = (char *)&v89 - v15;
  uint64_t v106 = a3;
  int64_t v107 = a4 >> 1;
  BOOL v16 = __OFSUB__(a4 >> 1, a3);
  uint64_t v17 = (a4 >> 1) - a3;
  if (v16) {
    goto LABEL_53;
  }
  uint64_t v113 = MEMORY[0x1E4FBC860];
  sub_19EED8CD4(0, v17 & ~(v17 >> 63), 0);
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v97 = a1;
    swift_unknownObjectRetain();
    uint64_t v18 = MEMORY[0x1E4FBC840];
    char v19 = &selRef_resume;
    uint64_t v20 = &unk_19F24E000;
    if (v17)
    {
      uint64_t v21 = self;
      uint64_t v22 = 0;
      unint64_t v99 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      uint64_t v96 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
      uint64_t v91 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
      uint64_t v92 = v12;
      uint64_t v90 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v93 = a2;
      uint64_t v23 = a2 + 32 * v106;
      *(void *)&long long v105 = v106 - v107;
      uint64_t v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 8);
      long long v102 = xmmword_19F24EAD0;
      uint64_t v104 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v21;
      while (1)
      {
        uint64_t v24 = v22 + 1;
        if (__OFADD__(v22, 1))
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (!((void)v105 + v22)) {
          goto LABEL_50;
        }
        if (v106 + v22 >= v107 || v22 >= v17) {
          goto LABEL_51;
        }
        uint64_t v25 = v17;
        uint64_t v26 = (void *)v21;
        sub_19EEBDBA4(v23, (uint64_t)&v109);
        long long v112 = v103;
        uint64_t v27 = swift_allocObject();
        uint64_t v28 = v27 + 16;
        *(void *)&long long v111 = v27;
        sub_19EEBDBA4((uint64_t)&v109, v27 + 16);
        sub_19EEBDBA4(v28, (uint64_t)v108);
        unsigned __int8 v29 = objc_msgSend(v26, sel_isValidJSONObject_, sub_19F1DD62C());
        swift_unknownObjectRelease();
        sub_19EEBDBA4((uint64_t)&v111, (uint64_t)v108);
        if (v29) {
          break;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = v102;
        sub_19EEBDBA4((uint64_t)v108, v30 + 32);
        uint64_t v31 = (void *)sub_19F1DC14C();
        swift_bridgeObjectRelease();
        unsigned __int8 v32 = objc_msgSend(v26, sel_isValidJSONObject_, v31);

        uint64_t v18 = MEMORY[0x1E4FBC840];
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
        if (v32) {
          goto LABEL_12;
        }
        sub_19EEBDBA4((uint64_t)&v109, (uint64_t)&v111);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
        uint64_t v17 = v25;
        if (swift_dynamicCast())
        {
          uint64_t v36 = (void *)v108[0];
          uint64_t v37 = (void *)sub_19F1DB18C();
          id v38 = (id)AMSLogableError();

          uint64_t v39 = sub_19F1DBD7C();
          uint64_t v41 = v40;

          uint64_t v18 = MEMORY[0x1E4FBC840];
          long long v112 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBB1A0];

          *(void *)&long long v111 = v39;
          *((void *)&v111 + 1) = v41;
        }
        else
        {
          sub_19EEBDBA4((uint64_t)&v109, (uint64_t)&v111);
          uint64_t v42 = (uint64_t)v100;
          uint64_t v43 = v101;
          int v44 = swift_dynamicCast();
          uint64_t v45 = *v99;
          if (!v44)
          {
            v45(v42, 1, 1, v43);
LABEL_25:
            sub_19EEBD664(v42, (uint64_t *)&unk_1EB392E50);
            sub_19EEBDBA4((uint64_t)&v109, (uint64_t)&v111);
            uint64_t v53 = sub_19F1DBE0C();
            long long v112 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBB1A0];
            *(void *)&long long v111 = v53;
            *((void *)&v111 + 1) = v54;
            goto LABEL_13;
          }
          v45(v42, 0, 1, v43);
          if ((*v96)(v42, 1, v43) == 1) {
            goto LABEL_25;
          }
          unint64_t v46 = v95;
          (*v91)(v95, v42, v43);
          os_signpost_id_t v47 = (void *)sub_19F1DB25C();
          id v48 = (id)AMSLogableURL();

          uint64_t v49 = sub_19F1DBD7C();
          uint64_t v51 = v50;

          long long v112 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBB1A0];
          *(void *)&long long v111 = v49;
          *((void *)&v111 + 1) = v51;
          uint64_t v52 = v46;
          uint64_t v18 = MEMORY[0x1E4FBC840];
          (*v90)(v52, v43);
        }
LABEL_13:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v109);
        uint64_t v33 = v113;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_19EED8CD4(0, *(void *)(v33 + 16) + 1, 1);
          uint64_t v33 = v113;
        }
        unint64_t v35 = *(void *)(v33 + 16);
        unint64_t v34 = *(void *)(v33 + 24);
        if (v35 >= v34 >> 1)
        {
          sub_19EED8CD4(v34 > 1, v35 + 1, 1);
          uint64_t v33 = v113;
        }
        *(void *)(v33 + 16) = v35 + 1;
        sub_19EEBDC00(&v111, (_OWORD *)(v33 + 32 * v35 + 32));
        ++v22;
        v23 += 32;
        uint64_t v21 = (uint64_t)v104;
        if (v24 == v17)
        {
          uint64_t v55 = v106 + v22;
          char v19 = &selRef_resume;
          a2 = v93;
          uint64_t v12 = v92;
          uint64_t v20 = (_OWORD *)&unk_19F24E000;
          goto LABEL_27;
        }
      }
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
LABEL_12:
      long long v112 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 8);
      *(void *)&long long v111 = swift_allocObject();
      sub_19EEBDBA4((uint64_t)&v109, v111 + 16);
      uint64_t v17 = v25;
      goto LABEL_13;
    }
    uint64_t v55 = v106;
LABEL_27:
    if (v55 == v107)
    {
LABEL_28:
      swift_unknownObjectRelease();
      return;
    }
    uint64_t v103 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    uint64_t v104 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    *(void *)&long long v102 = v12 + 32;
    uint64_t v100 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v56 = a2 + 32 * v55;
    uint64_t v57 = MEMORY[0x1E4FBC840] + 8;
    long long v105 = v20[173];
    uint64_t v58 = v55;
    while (1)
    {
      if (v55 < v106 || v58 >= v107) {
        goto LABEL_52;
      }
      sub_19EEBDBA4(v56, (uint64_t)&v111);
      uint64_t v110 = v57;
      uint64_t v59 = swift_allocObject();
      uint64_t v60 = v59 + 16;
      *(void *)&long long v109 = v59;
      sub_19EEBDBA4((uint64_t)&v111, v59 + 16);
      uint64_t v61 = self;
      sub_19EEBDBA4(v60, (uint64_t)v108);
      uint64_t v62 = v19;
      unsigned __int8 v63 = objc_msgSend(v61, v19[292], sub_19F1DD62C());
      swift_unknownObjectRelease();
      sub_19EEBDBA4((uint64_t)&v109, (uint64_t)v108);
      if (v63) {
        break;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
      uint64_t v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = v105;
      sub_19EEBDBA4((uint64_t)v108, v64 + 32);
      id v65 = (void *)sub_19F1DC14C();
      swift_bridgeObjectRelease();
      unsigned __int8 v66 = objc_msgSend(v61, (SEL)v62 + 2224, v65);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v109);
      char v19 = v62;
      if (v66) {
        goto LABEL_35;
      }
      sub_19EEBDBA4((uint64_t)&v111, (uint64_t)&v109);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
      if (swift_dynamicCast())
      {
        unint64_t v70 = (void *)v108[0];
        uint64_t v71 = (void *)sub_19F1DB18C();
        id v72 = (id)AMSLogableError();

        uint64_t v73 = sub_19F1DBD7C();
        uint64_t v75 = v74;

        char v19 = &selRef_resume;
        uint64_t v110 = MEMORY[0x1E4FBB1A0];

        *(void *)&long long v109 = v73;
        *((void *)&v109 + 1) = v75;
      }
      else
      {
        sub_19EEBDBA4((uint64_t)&v111, (uint64_t)&v109);
        uint64_t v76 = (uint64_t)v98;
        uint64_t v77 = v101;
        int v78 = swift_dynamicCast();
        uint64_t v79 = *v104;
        if (!v78)
        {
          v79(v76, 1, 1, v77);
LABEL_48:
          sub_19EEBD664(v76, (uint64_t *)&unk_1EB392E50);
          sub_19EEBDBA4((uint64_t)&v111, (uint64_t)&v109);
          uint64_t v87 = sub_19F1DBE0C();
          uint64_t v110 = MEMORY[0x1E4FBB1A0];
          *(void *)&long long v109 = v87;
          *((void *)&v109 + 1) = v88;
          goto LABEL_36;
        }
        v79(v76, 0, 1, v77);
        if ((*v103)(v76, 1, v77) == 1) {
          goto LABEL_48;
        }
        uint64_t v80 = v94;
        uint64_t v81 = v101;
        (*(void (**)(char *, uint64_t, uint64_t))v102)(v94, v76, v101);
        uint64_t v82 = (void *)sub_19F1DB25C();
        id v83 = (id)AMSLogableURL();

        uint64_t v84 = sub_19F1DBD7C();
        uint64_t v86 = v85;

        uint64_t v110 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v109 = v84;
        *((void *)&v109 + 1) = v86;
        char v19 = &selRef_resume;
        (*v100)(v80, v81);
      }
LABEL_36:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v111);
      uint64_t v67 = v113;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19EED8CD4(0, *(void *)(v67 + 16) + 1, 1);
        uint64_t v67 = v113;
      }
      unint64_t v69 = *(void *)(v67 + 16);
      unint64_t v68 = *(void *)(v67 + 24);
      if (v69 >= v68 >> 1)
      {
        sub_19EED8CD4(v68 > 1, v69 + 1, 1);
        uint64_t v67 = v113;
      }
      ++v58;
      *(void *)(v67 + 16) = v69 + 1;
      sub_19EEBDC00(&v109, (_OWORD *)(v67 + 32 * v69 + 32));
      v56 += 32;
      if (v107 == v58) {
        goto LABEL_28;
      }
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v108);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v109);
    char v19 = v62;
LABEL_35:
    uint64_t v110 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v109 = swift_allocObject();
    sub_19EEBDBA4((uint64_t)&v111, v109 + 16);
    goto LABEL_36;
  }
LABEL_54:
  __break(1u);
}

uint64_t sub_19F1C5178(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392E50);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v50 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_19F1DB34C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v56 = MEMORY[0x1E4FBC860];
  sub_19EED8CD4(0, v7, 0);
  uint64_t v48 = a1;
  if (v7)
  {
    uint64_t v51 = v4;
    uint64_t v8 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v9 = self;
    uint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    os_signpost_id_t v47 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    int v44 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
    uint64_t v10 = MEMORY[0x1E4FBC840];
    uint64_t v11 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v12 = &selRef_resume;
    long long v52 = xmmword_19F24EAD0;
    while (1)
    {
      uint64_t v55 = v11;
      uint64_t v13 = swift_allocObject();
      uint64_t v14 = v13 + 16;
      *(void *)&long long v54 = v13;
      sub_19EEBDBA4(v8, v13 + 16);
      sub_19EEBDBA4(v14, (uint64_t)v53);
      unsigned __int8 v15 = objc_msgSend(v9, v12[292], sub_19F1DD62C());
      swift_unknownObjectRelease();
      sub_19EEBDBA4((uint64_t)&v54, (uint64_t)v53);
      if (v15) {
        break;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D30);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = v52;
      sub_19EEBDBA4((uint64_t)v53, v16 + 32);
      uint64_t v17 = v10;
      uint64_t v18 = (void *)sub_19F1DC14C();
      swift_bridgeObjectRelease();
      unsigned __int8 v19 = objc_msgSend(v9, v12[292], v18);

      uint64_t v10 = v17;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
      if (v19) {
        goto LABEL_6;
      }
      sub_19EEBDBA4(v8, (uint64_t)&v54);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB391C20);
      if (swift_dynamicCast())
      {
        uint64_t v23 = (void *)v53[0];
        uint64_t v24 = (void *)sub_19F1DB18C();
        id v25 = (id)AMSLogableError();

        uint64_t v26 = sub_19F1DBD7C();
        uint64_t v28 = v27;

        uint64_t v10 = v17;
        uint64_t v55 = MEMORY[0x1E4FBB1A0];

        *(void *)&long long v54 = v26;
        *((void *)&v54 + 1) = v28;
      }
      else
      {
        sub_19EEBDBA4(v8, (uint64_t)&v54);
        uint64_t v29 = (uint64_t)v50;
        uint64_t v30 = v51;
        int v31 = swift_dynamicCast();
        unsigned __int8 v32 = *v49;
        if (!v31)
        {
          v32(v29, 1, 1, v30);
LABEL_19:
          sub_19EEBD664(v29, (uint64_t *)&unk_1EB392E50);
          sub_19EEBDBA4(v8, (uint64_t)&v54);
          uint64_t v40 = sub_19F1DBE0C();
          uint64_t v55 = MEMORY[0x1E4FBB1A0];
          *(void *)&long long v54 = v40;
          *((void *)&v54 + 1) = v41;
          goto LABEL_7;
        }
        v32(v29, 0, 1, v30);
        if ((*v47)(v29, 1, v30) == 1) {
          goto LABEL_19;
        }
        uint64_t v33 = v46;
        (*v45)(v46, v29, v51);
        unint64_t v34 = (void *)sub_19F1DB25C();
        id v35 = (id)AMSLogableURL();

        uint64_t v36 = sub_19F1DBD7C();
        uint64_t v38 = v37;

        uint64_t v55 = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v54 = v36;
        *((void *)&v54 + 1) = v38;
        uint64_t v39 = v33;
        uint64_t v10 = v17;
        (*v44)(v39, v51);
      }
LABEL_7:
      uint64_t v20 = v56;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_19EED8CD4(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v56;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_19EED8CD4(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v56;
      }
      *(void *)(v20 + 16) = v22 + 1;
      sub_19EEBDC00(&v54, (_OWORD *)(v20 + 32 * v22 + 32));
      v8 += 32;
      --v7;
      uint64_t v12 = &selRef_resume;
      if (!v7) {
        goto LABEL_21;
      }
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v54);
LABEL_6:
    uint64_t v55 = v10 + 8;
    *(void *)&long long v54 = swift_allocObject();
    sub_19EEBDBA4(v8, v54 + 16);
    goto LABEL_7;
  }
  uint64_t v20 = v56;
  swift_bridgeObjectRetain();
LABEL_21:
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t method lookup function for MetricsLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MetricsLogger);
}

uint64_t dispatch thunk of MetricsLogger.__allocating_init(loggerName:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t *assignWithCopy for MetricsLogger.Configuration(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

uint64_t assignWithTake for MetricsLogger.Configuration(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

uint64_t sub_19F1C57AC()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_19F1C57E4(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_19F1DCDBC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_19EFDD710(0x746E65726170, 0xE600000000000000, 1, a2);
  sub_19F13EE80(a1, v11, v28);
  if (v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *a1;
    unint64_t v13 = a1[1];
    unint64_t v14 = *(void *)(*a1 + 16);
    if (v13 == v14)
    {
      sub_19EFDD710(0x65756C6176, 0xE500000000000000, 1, a2);
      swift_bridgeObjectRelease();
      sub_19F1DCDAC();
      uint64_t v15 = sub_19F1DCDCC();
      swift_allocError();
      uint64_t v17 = v16;
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v16, v10, v7);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, *MEMORY[0x1E4FBBA78], v15);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      swift_bridgeObjectRelease();
    }
    else if (v13 >= v14)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = v28[1];
      uint64_t v29 = v28[0];
      unsigned __int8 v19 = (void *)(v12 + 32 * v13);
      uint64_t v20 = v19[4];
      uint64_t v21 = v19[5];
      uint64_t v22 = v19[7];
      uint64_t v27 = v19[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[1] = v13 + 1;
      uint64_t v23 = MEMORY[0x19F3C6140](v20, v21, v27, v22);
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *a3 = v29;
      a3[1] = v18;
      a3[2] = v23;
      a3[3] = v25;
    }
  }
}

Swift::Bool __swiftcall ShelfID.isChild(of:)(JetEngine::PageID of)
{
  if (*v1 == *(void *)of.value._countAndFlagsBits && v1[1] == *(void *)(of.value._countAndFlagsBits + 8)) {
    return 1;
  }
  else {
    return sub_19F1DD44C();
  }
}

uint64_t static ShelfID.forShelves(in:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = sub_19F1C66B0;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_19F1C5B24@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain();
  sub_19F1DD2EC();
  sub_19F1DBEFC();
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = a2;
  a4[1] = a3;
  a4[2] = 35;
  a4[3] = 0xE100000000000000;
  uint64_t v10 = v8 + 1;
  if (v8 == -1)
  {
    swift_bridgeObjectRetain();
    sub_19F1A6650((uint64_t)"JetEngine/ShelfID.swift", 23, 2, 50, a2, a3);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = 0;
  }
  *a1 = v10;
  return result;
}

JetEngine::ShelfID __swiftcall ShelfID.init(at:in:)(Swift::UInt64 at, JetEngine::PageID in)
{
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)in.value._countAndFlagsBits;
  uint64_t v5 = *(void *)(in.value._countAndFlagsBits + 8);
  sub_19F1DD2EC();
  sub_19F1DBEFC();
  uint64_t v6 = swift_bridgeObjectRelease();
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = 35;
  v3[3] = 0xE100000000000000;
  result.value._object = v9;
  result.value._uint64_t countAndFlagsBits = v8;
  result.parent.value._object = v7;
  result.parent.value._uint64_t countAndFlagsBits = v6;
  return result;
}

JetEngine::ShelfID __swiftcall ShelfID.init(randomIn:)(JetEngine::PageID randomIn)
{
  uint64_t countAndFlagsBits = (uint64_t *)randomIn.value._countAndFlagsBits;
  uint64_t v3 = v1;
  uint64_t v4 = sub_19F1DB5AC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *countAndFlagsBits;
  uint64_t v9 = countAndFlagsBits[1];
  sub_19F1DB59C();
  uint64_t v10 = sub_19F1DB58C();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20[4] = v10;
  v20[5] = v12;
  void v20[2] = 45;
  void v20[3] = 0xE100000000000000;
  v20[0] = 0;
  v20[1] = 0xE000000000000000;
  sub_19EEC4910();
  uint64_t v13 = sub_19F1DCB8C();
  uint64_t v15 = v14;
  uint64_t v16 = swift_bridgeObjectRelease();
  *uint64_t v3 = v8;
  v3[1] = v9;
  v3[2] = v13;
  v3[3] = v15;
  result.value._object = v19;
  result.value._uint64_t countAndFlagsBits = v18;
  result.parent.value._object = v17;
  result.parent.value._uint64_t countAndFlagsBits = v16;
  return result;
}

uint64_t ShelfID.init<A>(id:kind:in:)@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, void *a4@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  sub_19F1DC0CC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  *a4 = v7;
  a4[1] = v8;
  a4[2] = v10;
  a4[3] = v11;
  return result;
}

uint64_t ShelfID.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_19F1DCDBC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD88C();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(v32, v32[3]);
  uint64_t v9 = sub_19F1DD45C();
  unint64_t v11 = v10;
  uint64_t v33 = v6;
  uint64_t v26 = 45;
  unint64_t v27 = 0xE100000000000000;
  MEMORY[0x1F4188790](v9);
  *(&v23 - 2) = (uint64_t)&v26;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_19EEA0B44(0x7FFFFFFFFFFFFFFFLL, 1, sub_19EEA0FE8, (uint64_t)(&v23 - 4), v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v30 = v12;
  unint64_t v31 = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = (void *)sub_19F1DD86C();
  sub_19F1C57E4(&v30, v13, &v26);
  uint64_t v24 = v26;
  unint64_t v25 = v27;
  uint64_t v15 = v29;
  uint64_t v23 = v28;
  unint64_t v16 = v31;
  unint64_t v17 = *(void *)(v12 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v16 == v17)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    unint64_t v18 = v25;
    *a2 = v24;
    a2[1] = v18;
    a2[2] = v23;
    a2[3] = v15;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  if (v16 >= v17)
  {
    __break(1u);
  }
  else
  {
    unint64_t v31 = v16 + 1;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD86C();
    sub_19F1DCDAC();
    uint64_t v19 = sub_19F1DCDCC();
    swift_allocError();
    uint64_t v21 = v20;
    uint64_t v22 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v20, v8, v5);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x1E4FBBA78], v19);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ShelfID.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1DD8DC();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRetain();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_19F1DD4DC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
}

uint64_t ShelfID.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

Swift::Bool __swiftcall ShelfID.isParent(of:)(JetEngine::ComponentID *of)
{
  uint64_t countAndFlagsBits = of->parent.value._countAndFlagsBits;
  object = of->parent.value._object;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void **)(v1 + 24);
  BOOL v6 = of->parent.parent.value._countAndFlagsBits == *(void *)v1
    && of->parent.parent.value._object == *(void **)(v1 + 8);
  if (v6 || (char v7 = sub_19F1DD44C(), result = 0, (v7 & 1) != 0))
  {
    if (countAndFlagsBits == v4 && object == v5)
    {
      return 1;
    }
    else
    {
      return sub_19F1DD44C();
    }
  }
  return result;
}

uint64_t ShelfID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t ShelfID.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1C64FC()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1C6564()
{
  sub_19F1DBE9C();
  return sub_19F1DBE9C();
}

uint64_t sub_19F1C65B4()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1C6618@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ShelfID.init(from:)(a1, a2);
}

uint64_t sub_19F1C6630(void *a1)
{
  return ShelfID.encode(to:)(a1);
}

uint64_t sub_19F1C6648()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_19F1C6678()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_19F1C66B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_19F1C5B24(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_19F1C66BC()
{
  unint64_t result = qword_1E9476820;
  if (!qword_1E9476820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476820);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfID()
{
  return &type metadata for ShelfID;
}

unint64_t sub_19F1C6724()
{
  unint64_t result = qword_1E9476828;
  if (!qword_1E9476828)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9476830);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476828);
  }
  return result;
}

uint64_t static PipelinePhase<>.rateLimitOnFailure(on:withID:using:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  sub_19EE77E34(a2, (uint64_t)v14);
  type metadata accessor for PersistentPipelineBackoff();
  uint64_t v11 = swift_allocObject();
  long long v12 = v14[1];
  *(_OWORD *)(v11 + 16) = v14[0];
  *(_OWORD *)(v11 + 32) = v12;
  *(void *)(v11 + 48) = v15;
  *(void *)(v11 + 56) = a3;
  *(void *)(v11 + 64) = a4;
  swift_retain();
  static PipelinePhase<>.rateLimitOnFailure(on:using:)(a1, v11, (uint64_t)&off_1EF145828, a5, a6);
  return swift_release();
}

uint64_t type metadata accessor for PersistentPipelineBackoff()
{
  return self;
}

id sub_19F1C6854()
{
  id result = objc_msgSend(objc_allocWithZone((Class)JEUnfairLock), sel_init);
  qword_1EB391BB0 = (uint64_t)result;
  return result;
}

void *sub_19F1C6888()
{
  id result = (void *)sub_19EFB5884(MEMORY[0x1E4FBC860]);
  off_1EB391BB8 = result;
  return result;
}

uint64_t sub_19F1C68B0@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  if (qword_1E946FEA0 != -1) {
    swift_once();
  }
  uint64_t v4 = a1 + 16;
  swift_beginAccess();
  uint64_t v5 = off_1EB391BB8;
  if (*((void *)off_1EB391BB8 + 2) && (unint64_t v6 = sub_19EE77500(a1 + 16), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(v5[7] + 16 * v6 + 8);
    swift_endAccess();
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    swift_unknownObjectRetain();
    v10(ObjectType, v8);
  }
  else
  {
    uint64_t v12 = swift_endAccess();
    uint64_t v13 = (*(uint64_t (**)(uint64_t))(a1 + 56))(v12);
    uint64_t v15 = v14;
    swift_beginAccess();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = off_1EB391BB8;
    off_1EB391BB8 = (_UNKNOWN *)0x8000000000000000;
    sub_19EFBD010(v13, v15, v4, isUniquelyReferenced_nonNull_native);
    off_1EB391BB8 = v20;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v17 = swift_getObjectType();
    double v11 = (*(double (**)(uint64_t, uint64_t))(v15 + 8))(v17, v15);
  }
  double v18 = v11;
  uint64_t result = swift_unknownObjectRelease();
  *a2 = v18;
  return result;
}

uint64_t sub_19F1C6A6C()
{
  sub_19EE7760C(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

double sub_19F1C6AAC()
{
  if (qword_1E946FE98 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB391BB0;
  objc_msgSend((id)qword_1EB391BB0, sel_lock);
  sub_19F1C68B0(v0, &v3);
  objc_msgSend(v1, sel_unlock);
  return v3;
}

id sub_19F1C6B70()
{
  if (qword_1E946FE98 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_1EB391BB0;
  objc_msgSend((id)qword_1EB391BB0, sel_lock);
  if (qword_1E946FEA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = sub_19EF6BD78(v0 + 16);
  uint64_t v4 = v3;
  swift_endAccess();
  if (v2)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
    swift_unknownObjectRelease();
  }
  return objc_msgSend(v1, sel_unlock);
}

void static ImpressionsCalculator.Configuration.zero.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3F847AE147AE147BLL;
  *(void *)(a1 + 8) = 48;
  *(void *)(a1 + 16) = 0xE100000000000000;
  *(unsigned char *)(a1 + 24) = 1;
}

void static ImpressionsCalculator.Configuration.tenth.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FB999999999999ALL;
  *(void *)(a1 + 8) = 12337;
  *(void *)(a1 + 16) = 0xE200000000000000;
  *(unsigned char *)(a1 + 24) = 1;
}

void static ImpressionsCalculator.Configuration.quarter.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FD0000000000000;
  *(void *)(a1 + 8) = 13618;
  *(void *)(a1 + 16) = 0xE200000000000000;
  *(unsigned char *)(a1 + 24) = 1;
}

void static ImpressionsCalculator.Configuration.half.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FE0000000000000;
  *(void *)(a1 + 8) = 12341;
  *(void *)(a1 + 16) = 0xE200000000000000;
  *(unsigned char *)(a1 + 24) = 1;
}

void static ImpressionsCalculator.Configuration.threeQuarters.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FE8000000000000;
  *(void *)(a1 + 8) = 13623;
  *(void *)(a1 + 16) = 0xE200000000000000;
  *(unsigned char *)(a1 + 24) = 1;
}

void static ImpressionsCalculator.Configuration.full.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0x3FF0000000000000;
  *(void *)(a1 + 8) = 3158065;
  *(void *)(a1 + 16) = 0xE300000000000000;
  *(unsigned char *)(a1 + 24) = 1;
}

double ImpressionsCalculator.Configuration.impressionableThreshold.getter()
{
  return *(double *)v0;
}

uint64_t ImpressionsCalculator.Configuration.groupId.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImpressionsCalculator.Configuration.withImpressionableThreshold(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v3 = *(void *)(v2 + 16);
  char v5 = *(unsigned char *)(v2 + 24);
  *(double *)a1 = a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsCalculator.Configuration.withGroupId(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *(unsigned char *)(v3 + 24);
  *(void *)a3 = *(void *)v3;
  *(void *)(a3 + 8) = a1;
  *(void *)(a3 + 16) = a2;
  *(unsigned char *)(a3 + 24) = v4;
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsCalculator.Configuration.withOverrideVisibleThresholdForContainer(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2[1];
  uint64_t v3 = v2[2];
  *(void *)a2 = *v2;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t ImpressionsCalculator.__allocating_init(configuration:tracker:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v5 = *(double *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  memset(v18, 0, sizeof(v18));
  uint64_t v19 = 0;
  unint64_t v16 = &type metadata for SystemDateProvider;
  uint64_t v17 = &off_1EF140468;
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, (uint64_t)&type metadata for SystemDateProvider);
  double v11 = MEMORY[0x1F4188790](v10);
  (*(void (**)(double))(v12 + 16))(v11);
  uint64_t v13 = sub_19EE8B800(v6, v7, v8, (uint64_t)v18, a2, a3, v9, v5);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  return v13;
}

uint64_t ImpressionsCalculator.isVisible.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 256);
}

uint64_t sub_19F1C6F78(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v4 = sub_19F1DB57C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  uint64_t v8 = *a2;
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(v8 + 256);
  *(unsigned char *)(v8 + 256) = (_BYTE)a1;
  if (a1 != v10)
  {
    double v11 = sub_19EE88D2C();
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    sub_19F1DB56C();
    sub_19EE8B488((uint64_t)v7, v11, v13, v15, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void (*ImpressionsCalculator.isVisible.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  uint64_t v4 = sub_19F1DB57C();
  v3[4] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[5] = v5;
  v3[6] = malloc(*(void *)(v5 + 64));
  swift_beginAccess();
  *((unsigned char *)v3 + 56) = *(unsigned char *)(v1 + 256);
  return sub_19F1C717C;
}

void sub_19F1C717C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 24);
  int v3 = *(unsigned __int8 *)(*(void *)a1 + 56);
  int v4 = *(unsigned __int8 *)(v2 + 256);
  *(unsigned char *)(v2 + 256) = v3;
  if ((v3 ^ v4))
  {
    uint64_t v6 = v1[5];
    uint64_t v5 = v1[6];
    uint64_t v7 = v1[4];
    double v8 = sub_19EE88D2C();
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    sub_19F1DB56C();
    sub_19EE8B488(v5, v8, v10, v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  free((void *)v1[6]);
  free(v1);
}

double ImpressionsCalculator.viewBounds.getter()
{
  swift_beginAccess();
  return *(double *)(v0 + 264);
}

void (*ImpressionsCalculator.viewBounds.modify(void *a1))(void **a1, char a2)
{
  int v3 = malloc(0x68uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = sub_19F1DB57C();
  v3[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[8] = v5;
  v3[9] = malloc(*(void *)(v5 + 64));
  uint64_t v6 = sub_19F1DBA6C();
  v3[10] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[11] = v7;
  v3[12] = malloc(*(void *)(v7 + 64));
  swift_beginAccess();
  return sub_19F1C7394;
}

void sub_19F1C7394(void **a1, char a2)
{
  int v3 = *a1;
  swift_endAccess();
  uint64_t v4 = (uint64_t *)v3[12];
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = v3[10];
    uint64_t v6 = v3[11];
    sub_19EEA5F34();
    *uint64_t v4 = sub_19F1DC87C();
    (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E4FBCBF0], v5);
    char v7 = sub_19F1DBA8C();
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(v4, v5);
    if ((v7 & 1) == 0)
    {
      __break(1u);
      return;
    }
    uint64_t v8 = v3[6];
    swift_beginAccess();
    if (*(unsigned char *)(v8 + 256) == 1)
    {
      uint64_t v10 = v3[8];
      uint64_t v9 = v3[9];
      uint64_t v11 = v3[7];
      double v12 = sub_19EE88D2C();
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      sub_19F1DB56C();
      sub_19EE8B488(v9, v12, v14, v16, v18);
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    }
    uint64_t v4 = (uint64_t *)v3[12];
  }
  uint64_t v19 = (void *)v3[9];
  free(v4);
  free(v19);
  free(v3);
}

uint64_t sub_19F1C74F8(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 104);
  if (!v2) {
    return result;
  }
  uint64_t v3 = *(void *)(result + 88);
  uint64_t v4 = *(void *)(result + 96);
  uint64_t v25 = *(void *)(result + 120);
  uint64_t v26 = *(void *)(result + 80);
  uint64_t v28 = *(void *)(result + 128);
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v5 = result;
  uint64_t result = swift_release();
  if (v5 != v1) {
    return result;
  }
  swift_weakAssign();
  uint64_t result = swift_beginAccess();
  int64_t v6 = 0;
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v27 = v7 + 64;
  uint64_t v30 = v7;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v13 = v12 | (v6 << 6);
LABEL_25:
    double v17 = *(void **)(*(void *)(v30 + 56) + 8 * v13);
    uint64_t v19 = v17[9];
    uint64_t v18 = v17[10];
    uint64_t result = v17[11];
    uint64_t v21 = v17[14];
    uint64_t v20 = v17[15];
    if (result != v4 || v2 != v17[12])
    {
      uint64_t result = sub_19F1DD44C();
      if ((result & 1) == 0) {
        continue;
      }
    }
    if (v18)
    {
      if (v3)
      {
        if (v19 == v26 && v18 == v3) {
          goto LABEL_39;
        }
        uint64_t result = sub_19F1DD44C();
        if (result) {
          goto LABEL_39;
        }
      }
    }
    else if (!v3)
    {
LABEL_39:
      if (v20)
      {
        if (v28)
        {
          BOOL v24 = v21 == v25 && v20 == v28;
          if (v24 || (uint64_t result = sub_19F1DD44C(), (result & 1) != 0))
          {
LABEL_46:
            swift_bridgeObjectRetain();
            swift_retain();
            sub_19EE8BC00(0);
            swift_release();
            return swift_release();
          }
        }
      }
      else if (!v28)
      {
        goto LABEL_46;
      }
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v14 >= v29) {
    return result;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_24;
  }
  int64_t v6 = v14 + 1;
  if (v14 + 1 >= v29) {
    return result;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v6);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v6 = v14 + 2;
  if (v14 + 2 >= v29) {
    return result;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v6);
  if (v15)
  {
LABEL_24:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_25;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29) {
    return result;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
    int64_t v6 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v29) {
      return result;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t ImpressionsCalculator.copyElements(from:)(uint64_t a1)
{
  uint64_t v32 = sub_19F1DB57C();
  uint64_t v3 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 24) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v7 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  unint64_t v13 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (v11)
  {
    unint64_t v16 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v17 = v16 | (v15 << 6);
LABEL_20:
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + 8 * v17);
    swift_beginAccess();
    *(unsigned char *)(v21 + 161) = 1;
    uint64_t result = swift_beginAccess();
    uint64_t v22 = *(void *)(v21 + 168);
    if (v22)
    {
      uint64_t result = swift_beginAccess();
      int v23 = *(unsigned __int8 *)(v22 + 256);
      *(unsigned char *)(v22 + 256) = 0;
      if (v23 == 1)
      {
        swift_retain();
        swift_retain();
        double v24 = sub_19EE88D2C();
        CGFloat v26 = v25;
        CGFloat v28 = v27;
        CGFloat v30 = v29;
        sub_19F1DB56C();
        sub_19EE8B488((uint64_t)v5, v24, v26, v28, v30);
        (*v13)(v5, v32);
        swift_release();
        uint64_t result = swift_release();
      }
    }
  }
  int64_t v18 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v18 >= v12) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v8 + 8 * v18);
  ++v15;
  if (v19) {
    goto LABEL_19;
  }
  int64_t v15 = v18 + 1;
  if (v18 + 1 >= v12) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v8 + 8 * v15);
  if (v19) {
    goto LABEL_19;
  }
  int64_t v15 = v18 + 2;
  if (v18 + 2 >= v12) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v8 + 8 * v15);
  if (v19)
  {
LABEL_19:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_20;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v12) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v12) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v8 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_19;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t ImpressionsCalculator.removeElement(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_19F1DB57C();
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  long long v40 = *(_OWORD *)(a1 + 56);
  uint64_t v39 = *(void *)(a1 + 72);
  v53[0] = v8;
  v53[1] = v7;
  uint64_t v14 = v9;
  v53[2] = v9;
  v53[3] = v10;
  uint64_t v41 = v12;
  uint64_t v42 = v11;
  void v53[4] = v11;
  v53[5] = v12;
  v53[6] = v13;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_19EF6BE54(v53);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v15)
  {
    swift_beginAccess();
    uint64_t v38 = v15;
    uint64_t v17 = *(void *)(v15 + 168);
    if (v17)
    {
      swift_beginAccess();
      int v18 = *(unsigned __int8 *)(v17 + 256);
      *(unsigned char *)(v17 + 256) = 0;
      if (v18 == 1)
      {
        swift_retain();
        double v19 = sub_19EE88D2C();
        CGFloat v21 = v20;
        CGFloat v23 = v22;
        CGFloat v25 = v24;
        sub_19F1DB56C();
        sub_19EE8B488((uint64_t)v6, v19, v21, v23, v25);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v4);
        swift_release();
      }
    }
    uint64_t v37 = v4;
    uint64_t v35 = *(void *)(v2 + 72);
    uint64_t v26 = v35;
    uint64_t ObjectType = swift_getObjectType();
    v50[0] = v8;
    v50[1] = v7;
    v50[2] = v14;
    v50[3] = v10;
    v50[4] = v42;
    v50[5] = v41;
    v50[6] = v13;
    long long v51 = v40;
    uint64_t v52 = v39;
    sub_19F1DB56C();
    uint64_t v27 = *(void *)(v2 + 184);
    uint64_t v28 = *(void *)(v2 + 192);
    char v29 = *(unsigned char *)(v2 + 200);
    uint64_t v30 = *(void *)(v2 + 208);
    uint64_t v31 = *(void *)(v2 + 248);
    v44[0] = *(void *)(v2 + 176);
    v44[1] = v27;
    v44[2] = v28;
    char v45 = v29;
    uint64_t v46 = v30;
    long long v47 = *(_OWORD *)(v2 + 216);
    long long v48 = *(_OWORD *)(v2 + 232);
    uint64_t v49 = v31;
    uint64_t v32 = v43;
    uint64_t v33 = *(void (**)(void *, char *, void *, uint64_t, uint64_t))(v26 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v50, v6, v44, ObjectType, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v6, v37);
  }
  return result;
}

Swift::Void __swiftcall ImpressionsCalculator.removeAllElements()()
{
  uint64_t v37 = sub_19F1DB57C();
  uint64_t v1 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (void *)(v0 + 24);
  swift_beginAccess();
  uint64_t v34 = v0;
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v32 = v3 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  int64_t v33 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v35 = (void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v38 = v3;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = v36;
  while (1)
  {
    if (v7)
    {
      uint64_t v40 = (v7 - 1) & v7;
      int64_t v41 = v8;
      unint64_t v10 = __clz(__rbit64(v7)) | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v26 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v26 >= v33) {
      goto LABEL_21;
    }
    unint64_t v27 = *(void *)(v32 + 8 * v26);
    int64_t v28 = v8 + 1;
    if (!v27)
    {
      int64_t v28 = v8 + 2;
      if (v8 + 2 >= v33) {
        goto LABEL_21;
      }
      unint64_t v27 = *(void *)(v32 + 8 * v28);
      if (!v27)
      {
        int64_t v28 = v8 + 3;
        if (v8 + 3 >= v33) {
          goto LABEL_21;
        }
        unint64_t v27 = *(void *)(v32 + 8 * v28);
        if (!v27) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v40 = (v27 - 1) & v27;
    int64_t v41 = v28;
    unint64_t v10 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_5:
    uint64_t v11 = *(void *)(*(void *)(v38 + 56) + 8 * v10);
    uint64_t v12 = v34;
    uint64_t v13 = *(void *)(v34 + 72);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = *(void *)(v11 + 96);
    uint64_t v15 = *(void *)(v11 + 120);
    uint64_t v16 = *(void *)(v11 + 128);
    uint64_t v17 = *(void *)(v11 + 136);
    uint64_t v18 = *(void *)(v11 + 144);
    uint64_t v48 = *(void *)(v11 + 72);
    long long v49 = *(_OWORD *)(v11 + 80);
    uint64_t v50 = v14;
    long long v51 = *(_OWORD *)(v11 + 104);
    uint64_t v52 = v15;
    uint64_t v53 = v16;
    uint64_t v54 = v17;
    uint64_t v55 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_19F1DB56C();
    uint64_t v19 = *(void *)(v12 + 184);
    uint64_t v20 = *(void *)(v12 + 192);
    char v21 = *(unsigned char *)(v12 + 200);
    uint64_t v22 = *(void *)(v12 + 208);
    uint64_t v23 = *(void *)(v12 + 248);
    v42[0] = *(void *)(v12 + 176);
    v42[1] = v19;
    void v42[2] = v20;
    char v43 = v21;
    uint64_t v44 = v22;
    long long v45 = *(_OWORD *)(v12 + 216);
    long long v46 = *(_OWORD *)(v12 + 232);
    uint64_t v24 = v13;
    uint64_t v47 = v23;
    CGFloat v25 = *(void (**)(uint64_t *, char *, void *, uint64_t, uint64_t))(v13 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(&v48, v9, v42, ObjectType, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    (*v35)(v9, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v8 = v41;
    unint64_t v7 = v40;
  }
  uint64_t v29 = v8 + 4;
  if (v8 + 4 >= v33)
  {
LABEL_21:
    swift_release();
    *uint64_t v31 = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v27 = *(void *)(v32 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v8 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v33) {
      goto LABEL_21;
    }
    unint64_t v27 = *(void *)(v32 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
}

Swift::Void __swiftcall ImpressionsCalculator.changeImpressionableBounds(_:forElementWithID:)(__C::CGRect _, JetEngine::ImpressionMetrics::ID *forElementWithID)
{
  CGFloat height = _.size.height;
  CGFloat width = _.size.width;
  CGFloat y = _.origin.y;
  CGFloat x = _.origin.x;
  uint64_t v8 = sub_19F1DB57C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0) + 64;
  uint64_t v12 = sub_19F1DBA6C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0) + 64);
  Swift::String element = forElementWithID->element;
  v31[0] = forElementWithID->parent;
  v31[1] = element;
  _OWORD v31[2] = *(_OWORD *)&forElementWithID->index;
  object = forElementWithID->uniqueID.value._object;
  swift_beginAccess();
  uint64_t v17 = *(void *)(v2 + 24);
  if (!*(void *)(v17 + 16)) {
    goto LABEL_9;
  }
  sub_19EE89A74((uint64_t)v31);
  unint64_t v18 = sub_19EE88F80((uint64_t *)v31);
  if ((v19 & 1) == 0)
  {
    sub_19EE89AC0((uint64_t)v31);
LABEL_9:
    swift_endAccess();
    return;
  }
  uint64_t v20 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
  swift_endAccess();
  swift_retain();
  sub_19EE89AC0((uint64_t)v31);
  swift_beginAccess();
  uint64_t v21 = *(void *)(v20 + 168);
  if (!v21)
  {
LABEL_10:
    swift_release();
    return;
  }
  swift_beginAccess();
  *(CGFloat *)(v21 + 264) = x;
  *(CGFloat *)(v21 + 272) = y;
  *(CGFloat *)(v21 + 28sub_19EE4AC98(25, 0) = width;
  *(CGFloat *)(v21 + 288) = height;
  sub_19EEA5F34();
  swift_retain();
  *uint64_t v15 = sub_19F1DC87C();
  (*(void (**)(uint64_t *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E4FBCBF0], v12);
  char v22 = sub_19F1DBA8C();
  (*(void (**)(uint64_t *, uint64_t))(v13 + 8))(v15, v12);
  if (v22)
  {
    swift_beginAccess();
    if (*(unsigned char *)(v21 + 256) == 1)
    {
      double v23 = sub_19EE88D2C();
      CGFloat v25 = v24;
      CGFloat v27 = v26;
      CGFloat v29 = v28;
      sub_19F1DB56C();
      sub_19EE8B488((uint64_t)v11, v23, v25, v27, v29);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    swift_release();
    goto LABEL_10;
  }
  __break(1u);
}

Swift::Void __swiftcall ImpressionsCalculator.removeFromParent()()
{
  if (swift_weakLoadStrong())
  {
    sub_19F1C74F8(v0);
    swift_release();
  }
}

uint64_t *ImpressionsCalculator.deinit()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_19EE89208(v0[10], v0[11], v0[12], v0[13]);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 17));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ImpressionsCalculator.__deallocating_deinit()
{
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_19EE89208(v0[10], v0[11], v0[12], v0[13]);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v0 + 17));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t Unstable.ImpressionsCalculator.__allocating_init(impressionableThreshold:tracker:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3 = _s9JetEngine21ImpressionsCalculatorC23impressionableThreshold7trackerAC12CoreGraphics7CGFloatV_AA0C7Tracker_ptcfC_0(a1, a2, a3);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  return result;
}

uint64_t Unstable.ImpressionsCalculator.isVisible.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 256);
}

uint64_t sub_19F1C8738(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB57C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  uint64_t v8 = *(void *)(*(void *)a2 + 16);
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(v8 + 256);
  *(unsigned char *)(v8 + 256) = (_BYTE)a1;
  if (a1 != v10)
  {
    double v11 = sub_19EE88D2C();
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    sub_19F1DB56C();
    sub_19EE8B488((uint64_t)v7, v11, v13, v15, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t Unstable.ImpressionsCalculator.isVisible.setter(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = sub_19F1DB57C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t result = swift_beginAccess();
  int v10 = *(unsigned __int8 *)(v8 + 256);
  *(unsigned char *)(v8 + 256) = a1;
  if (v10 != v3)
  {
    double v11 = sub_19EE88D2C();
    CGFloat v13 = v12;
    CGFloat v15 = v14;
    CGFloat v17 = v16;
    sub_19F1DB56C();
    sub_19EE8B488((uint64_t)v7, v11, v13, v15, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void (*Unstable.ImpressionsCalculator.isVisible.modify(void *a1))(uint64_t a1)
{
  int v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = sub_19F1DB57C();
  v3[3] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[4] = v5;
  uint64_t v6 = malloc(*(void *)(v5 + 64));
  uint64_t v7 = *(void *)(v1 + 16);
  v3[5] = v6;
  v3[6] = v7;
  swift_beginAccess();
  *((unsigned char *)v3 + 56) = *(unsigned char *)(v7 + 256);
  return sub_19F1C8A78;
}

void sub_19F1C8A78(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void *)(*(void *)a1 + 48);
  int v3 = *(unsigned __int8 *)(*(void *)a1 + 56);
  int v4 = *(unsigned __int8 *)(v2 + 256);
  *(unsigned char *)(v2 + 256) = v3;
  if ((v3 ^ v4))
  {
    uint64_t v5 = v1[5];
    uint64_t v6 = v1[3];
    uint64_t v7 = v1[4];
    double v8 = sub_19EE88D2C();
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    sub_19F1DB56C();
    sub_19EE8B488(v5, v8, v10, v12, v14);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  free((void *)v1[5]);
  free(v1);
}

double Unstable.ImpressionsCalculator.viewBounds.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_beginAccess();
  return *(double *)(v1 + 264);
}

uint64_t Unstable.ImpressionsCalculator.viewBounds.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_19F1DB57C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  CGFloat v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = sub_19F1DBA6C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  double v16 = (uint64_t *)&v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = *(void *)(v4 + 16);
  swift_beginAccess();
  *(double *)(v17 + 264) = a1;
  *(double *)(v17 + 272) = a2;
  *(double *)(v17 + 28sub_19EE4AC98(25, 0) = a3;
  *(double *)(v17 + 288) = a4;
  sub_19EEA5F34();
  *double v16 = sub_19F1DC87C();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FBCBF0], v13);
  char v18 = sub_19F1DBA8C();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if (v18)
  {
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v17 + 256) == 1)
    {
      double v20 = sub_19EE88D2C();
      CGFloat v22 = v21;
      CGFloat v24 = v23;
      CGFloat v26 = v25;
      sub_19F1DB56C();
      sub_19EE8B488((uint64_t)v12, v20, v22, v24, v26);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*Unstable.ImpressionsCalculator.viewBounds.modify(void *a1))(_OWORD **a1, char a2)
{
  int v3 = malloc(0xA0uLL);
  *a1 = v3;
  uint64_t v4 = sub_19F1DB57C();
  v3[13] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[14] = v5;
  v3[15] = malloc(*(void *)(v5 + 64));
  uint64_t v6 = sub_19F1DBA6C();
  v3[16] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[17] = v7;
  double v8 = malloc(*(void *)(v7 + 64));
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = (_OWORD *)(v9 + 264);
  v3[18] = v8;
  v3[19] = v9;
  swift_beginAccess();
  long long v11 = v10[1];
  *(_OWORD *)int v3 = *v10;
  *((_OWORD *)v3 + 1) = v11;
  return sub_19F1C8EEC;
}

void sub_19F1C8EEC(_OWORD **a1, char a2)
{
  int v3 = *a1;
  uint64_t v4 = (uint64_t *)*((void *)*a1 + 18);
  uint64_t v5 = (_OWORD *)(*((void *)*a1 + 19) + 264);
  uint64_t v6 = *((void *)*a1 + 16);
  uint64_t v7 = *((void *)*a1 + 17);
  long long v8 = (*a1)[1];
  *uint64_t v5 = **a1;
  v5[1] = v8;
  sub_19EEA5F34();
  *uint64_t v4 = sub_19F1DC87C();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v4, *MEMORY[0x1E4FBCBF0], v6);
  char v9 = sub_19F1DBA8C();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v4, v6);
  if (a2)
  {
    if (v9) {
      goto LABEL_5;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  if ((v9 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_5:
  uint64_t v10 = v3[19];
  swift_beginAccess();
  if (*(unsigned char *)(v10 + 256) == 1)
  {
    uint64_t v12 = v3[14];
    uint64_t v11 = v3[15];
    uint64_t v13 = v3[13];
    double v14 = sub_19EE88D2C();
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;
    sub_19F1DB56C();
    sub_19EE8B488(v11, v14, v16, v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  double v21 = (void *)v3[15];
  free((void *)v3[18]);
  free(v21);
  free(v3);
}

uint64_t Unstable.ImpressionsCalculator.addElement(_:at:)(long long *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 6);
  uint64_t v8 = *((void *)a1 + 9);
  long long v10 = *a1;
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  long long v13 = a1[2];
  uint64_t v14 = v7;
  long long v15 = *(long long *)((char *)a1 + 56);
  uint64_t v16 = v8;
  return ImpressionsCalculator.addElement(_:at:position:)((uint64_t *)&v10, 0, 1, a2, a3, a4, a5);
}

uint64_t Unstable.ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)(long long *a1, int a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v6 = *((void *)a1 + 2);
  uint64_t v7 = *((void *)a1 + 3);
  uint64_t v8 = *((void *)a1 + 6);
  uint64_t v9 = *((void *)a1 + 9);
  long long v11 = *a1;
  uint64_t v12 = v6;
  uint64_t v13 = v7;
  long long v14 = a1[2];
  uint64_t v15 = v8;
  long long v16 = *(long long *)((char *)a1 + 56);
  uint64_t v17 = v9;
  return ImpressionsCalculator.increaseImpressionableFrame(forElement:by:isContainer:)((uint64_t *)&v11, a2, a3, a4, a5, a6);
}

uint64_t Unstable.ImpressionsCalculator.copyElements(from:)(uint64_t a1)
{
  return ImpressionsCalculator.copyElements(from:)(*(void *)(a1 + 16));
}

uint64_t Unstable.ImpressionsCalculator.removeElement(_:)(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  uint64_t v2 = *((void *)a1 + 3);
  uint64_t v3 = *((void *)a1 + 6);
  uint64_t v4 = *((void *)a1 + 9);
  long long v6 = *a1;
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  long long v9 = a1[2];
  uint64_t v10 = v3;
  long long v11 = *(long long *)((char *)a1 + 56);
  uint64_t v12 = v4;
  return ImpressionsCalculator.removeElement(_:)((uint64_t)&v6);
}

Swift::Void __swiftcall Unstable.ImpressionsCalculator.removeAllElements()()
{
}

uint64_t Unstable.ImpressionsCalculator.makeChildCalculator(for:)(long long *a1)
{
  return sub_19F1C9208(a1, (uint64_t (*)(long long *))ImpressionsCalculator.makeChildCalculator(for:));
}

uint64_t Unstable.ImpressionsCalculator.childCalculator(for:)(long long *a1)
{
  return sub_19F1C9208(a1, ImpressionsCalculator.childCalculator(for:));
}

uint64_t sub_19F1C9208(long long *a1, uint64_t (*a2)(long long *))
{
  uint64_t v2 = *((void *)a1 + 2);
  uint64_t v3 = *((void *)a1 + 3);
  uint64_t v4 = *((void *)a1 + 6);
  long long v7 = *a1;
  uint64_t v8 = v2;
  uint64_t v9 = v3;
  long long v10 = a1[2];
  uint64_t v11 = v4;
  uint64_t result = a2(&v7);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v6;
  }
  return result;
}

Swift::Void __swiftcall Unstable.ImpressionsCalculator.changeImpressionableBounds(_:forElementWithID:)(__C::CGRect _, JetEngine::ImpressionMetrics::ID *forElementWithID)
{
  uint64_t countAndFlagsBits = forElementWithID->element._countAndFlagsBits;
  object = forElementWithID->element._object;
  uint64_t v4 = forElementWithID->uniqueID.value._object;
  v5.parent = forElementWithID->parent;
  v5.element._uint64_t countAndFlagsBits = countAndFlagsBits;
  v5.element._object = object;
  *(_OWORD *)&v5.indeCGFloat x = *(_OWORD *)&forElementWithID->index;
  v5.uniqueID.value._object = v4;
  ImpressionsCalculator.changeImpressionableBounds(_:forElementWithID:)(_, &v5);
}

Swift::Void __swiftcall Unstable.ImpressionsCalculator.removeFromParent()()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (swift_weakLoadStrong())
  {
    sub_19F1C74F8(v1);
    swift_release();
  }
}

uint64_t Unstable.ImpressionsCalculator.deinit()
{
  swift_release();
  return v0;
}

uint64_t Unstable.ImpressionsCalculator.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_19F1C93A0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 256);
  return result;
}

__n128 sub_19F1C93EC@<Q0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1 + 264;
  swift_beginAccess();
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a2 = *(_OWORD *)v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_19F1C9438(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm_0(a1, a2, a3, a4, ImpressionsCalculator.viewBounds.setter);
}

uint64_t sub_19F1C9450@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16);
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 256);
  return result;
}

__n128 sub_19F1C94A0@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)a1 + 16) + 264;
  swift_beginAccess();
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a2 = *(_OWORD *)v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_19F1C94F0(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm_0(a1, a2, a3, a4, Unstable.ImpressionsCalculator.viewBounds.setter);
}

uint64_t keypath_set_2Tm_0(double *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(double, double, double, double))
{
  return a5(*a1, a1[1], a1[2], a1[3]);
}

uint64_t method lookup function for ImpressionsCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ImpressionsCalculator);
}

uint64_t initializeWithCopy for ImpressionsCalculator.Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImpressionsCalculator.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ImpressionsCalculator.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImpressionsCalculator.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImpressionsCalculator.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Unstable.ImpressionsCalculator()
{
  return self;
}

uint64_t method lookup function for Unstable.ImpressionsCalculator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for Unstable.ImpressionsCalculator);
}

void __swiftcall ImpressionsContext.init()(JetEngine::ImpressionsContext *__return_ptr retstr)
{
  retstr->groupId._uint64_t countAndFlagsBits = 0;
  retstr->groupId._object = (void *)0xE000000000000000;
  retstr->position.value = 0;
  retstr->position.is_nil = 1;
  retstr->parentContextID = 0u;
  retstr->uniqueImpressionID = 0u;
  retstr->uniqueParentID = 0u;
}

void __swiftcall ImpressionsContext.withPosition(_:)(JetEngine::ImpressionsContext *__return_ptr retstr, Swift::Int_optional a2)
{
  uint64_t v3 = *(void **)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 32);
  long long v5 = *(void **)(v2 + 72);
  retstr->groupId._uint64_t countAndFlagsBits = *(void *)v2;
  retstr->groupId._object = v3;
  retstr->position.value = a2.value;
  retstr->position.is_nil = a2.is_nil;
  retstr->parentContextID.value._uint64_t countAndFlagsBits = v4;
  *(_OWORD *)&retstr->parentContextID.value._object = *(_OWORD *)(v2 + 40);
  *(_OWORD *)&retstr->uniqueImpressionID.value._object = *(_OWORD *)(v2 + 56);
  retstr->uniqueParentID.value._object = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

void __swiftcall ImpressionsContext.withGroupId(_:)(JetEngine::ImpressionsContext *__return_ptr retstr, Swift::String a2)
{
  Swift::Int v3 = *(void *)(v2 + 16);
  char v4 = *(unsigned char *)(v2 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = *(void **)(v2 + 72);
  retstr->groupId = a2;
  retstr->position.value = v3;
  retstr->position.is_nil = v4;
  retstr->parentContextID.value._uint64_t countAndFlagsBits = v5;
  *(_OWORD *)&retstr->parentContextID.value._object = *(_OWORD *)(v2 + 40);
  *(_OWORD *)&retstr->uniqueImpressionID.value._object = *(_OWORD *)(v2 + 56);
  retstr->uniqueParentID.value._object = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

void __swiftcall ImpressionsContext.withParentContextID(_:)(JetEngine::ImpressionsContext *__return_ptr retstr, Swift::String_optional a2)
{
  Swift::Int v3 = *(void **)(v2 + 8);
  Swift::Int v4 = *(void *)(v2 + 16);
  char v5 = *(unsigned char *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 48);
  long long v7 = *(void **)(v2 + 72);
  retstr->groupId._uint64_t countAndFlagsBits = *(void *)v2;
  retstr->groupId._object = v3;
  retstr->position.value = v4;
  retstr->position.is_nil = v5;
  retstr->parentContextID = a2;
  retstr->uniqueImpressionID.value._uint64_t countAndFlagsBits = v6;
  *(_OWORD *)&retstr->uniqueImpressionID.value._object = *(_OWORD *)(v2 + 56);
  retstr->uniqueParentID.value._object = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

uint64_t ImpressionsContext.groupId.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImpressionsContext.position.getter()
{
  return *(void *)(v0 + 16);
}

void __swiftcall ImpressionsContext.withUniqueImpressionID(_:)(JetEngine::ImpressionsContext *__return_ptr retstr, Swift::String a2)
{
  Swift::Int v3 = *(void **)(v2 + 8);
  Swift::Int v4 = *(void *)(v2 + 16);
  char v5 = *(unsigned char *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  long long v7 = *(void **)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 64);
  uint64_t v8 = *(void **)(v2 + 72);
  retstr->groupId._uint64_t countAndFlagsBits = *(void *)v2;
  retstr->groupId._object = v3;
  retstr->position.value = v4;
  retstr->position.is_nil = v5;
  retstr->parentContextID.value._uint64_t countAndFlagsBits = v6;
  retstr->parentContextID.value._object = v7;
  retstr->uniqueImpressionID.value = a2;
  retstr->uniqueParentID.value._uint64_t countAndFlagsBits = v9;
  retstr->uniqueParentID.value._object = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

void __swiftcall ImpressionsContext.withUniqueImpressionParentID(_:)(JetEngine::ImpressionsContext *__return_ptr retstr, Swift::String_optional a2)
{
  Swift::Int v4 = *(void **)(v2 + 8);
  Swift::Int v5 = *(void *)(v2 + 16);
  char v6 = *(unsigned char *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  long long v7 = *(void **)(v2 + 40);
  uint64_t v9 = *(void **)(v2 + 56);
  uint64_t v12 = *(void *)(v2 + 48);
  if (a2.value._object)
  {
    object = a2.value._object;
    uint64_t countAndFlagsBits = a2.value._countAndFlagsBits;
  }
  else
  {
    uint64_t countAndFlagsBits = *(void *)(v2 + 64);
    object = *(void **)(v2 + 72);
  }
  retstr->groupId._uint64_t countAndFlagsBits = *(void *)v2;
  retstr->groupId._object = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  retstr->position.value = v5;
  retstr->position.is_nil = v6;
  retstr->parentContextID.value._uint64_t countAndFlagsBits = v8;
  retstr->parentContextID.value._object = v7;
  retstr->uniqueImpressionID.value._uint64_t countAndFlagsBits = v12;
  retstr->uniqueImpressionID.value._object = v9;
  retstr->uniqueParentID.value._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->uniqueParentID.value._object = object;
}

BOOL _s9JetEngine18ImpressionsContextV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v21 = *(void *)(a2 + 48);
  uint64_t v22 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a2 + 64);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a2 + 72);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_19F1DD44C(), BOOL result = 0, (v12 & 1) != 0))
  {
    if (v3)
    {
      if (!v8) {
        return 0;
      }
    }
    else
    {
      if (v2 == v7) {
        char v14 = v8;
      }
      else {
        char v14 = 1;
      }
      if (v14) {
        return 0;
      }
    }
    if (v5)
    {
      if (!v9) {
        return 0;
      }
      if (v4 != v10 || v5 != v9)
      {
        char v15 = sub_19F1DD44C();
        BOOL result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v6)
    {
      if (!v11) {
        return 0;
      }
      if (v22 != v21 || v6 != v11)
      {
        char v16 = sub_19F1DD44C();
        BOOL result = 0;
        if ((v16 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v20) {
      return v19 && (v18 == v17 && v20 == v19 || (sub_19F1DD44C() & 1) != 0);
    }
    return !v19;
  }
  return result;
}

uint64_t destroy for ImpressionsContext()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ImpressionsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImpressionsContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImpressionsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ImpressionsContext()
{
  return &type metadata for ImpressionsContext;
}

uint64_t sub_19F1C9DD8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  v3[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F1C9E70, 0, 0);
}

uint64_t sub_19F1C9E70()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19F1C9F4C;
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return sub_19F04E0F0(v6, v5, v4);
}

uint64_t sub_19F1C9F4C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  sub_19EEBD664(*(void *)(v4 + 40), qword_1EB3923B0);
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_19F0ED3C0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t MetricsIDService.idFields(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  uint64_t v5[4] = a3;
  uint64_t v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  v5[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F1CA160, 0, 0);
}

uint64_t sub_19F1CA160()
{
  uint64_t v1 = v0[7];
  uint64_t v11 = v0[5];
  uint64_t v2 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 16)
                                                                            + **(int **)(v11 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[8] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19F1CA298;
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v8 = v0[2];
  uint64_t v7 = v0[3];
  return v10(v8, v7, v4, v5, v6);
}

uint64_t sub_19F1CA298(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  sub_19EEBD664(*(void *)(v4 + 56), qword_1EB3923B0);
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_19F1CA410, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_19F1CA410()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_19F1CA474(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  *(void *)(v4 + 4sub_19EE4AC98(25, 0) = swift_task_alloc();
  *(unsigned char *)(v4 + 64) = *a3;
  return MEMORY[0x1F4188298](sub_19F1CA518, 0, 0);
}

uint64_t sub_19F1CA518()
{
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t))&aDcy[*(int *)aDcy];
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F1CA618;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  return v9(v7, v6, v1, v5);
}

uint64_t sub_19F1CA618(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 56) = v2;
  swift_task_dealloc();
  sub_19EEBD664(*(void *)(v6 + 40), qword_1EB3923B0);
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_19F0ED3C0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v8(a1, a2);
  }
}

uint64_t MetricsIDService.queryID(forTopic:withType:)(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 4sub_19EE4AC98(25, 0) = a5;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a4;
  *(void *)(v6 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  *(void *)(v6 + 56) = swift_task_alloc();
  *(unsigned char *)(v6 + 81) = *a3;
  return MEMORY[0x1F4188298](sub_19F1CA84C, 0, 0);
}

uint64_t sub_19F1CA84C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v11 = *(void *)(v0 + 40);
  *(unsigned char *)(v0 + 8sub_19EE4AC98(25, 0) = *(unsigned char *)(v0 + 81);
  uint64_t v2 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 32)
                                                                                     + **(int **)(v11 + 32));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_19F1CA99C;
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  return v10(v8, v7, v0 + 80, v4, v5, v6);
}

uint64_t sub_19F1CA99C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[9] = v2;
  swift_task_dealloc();
  if (v2)
  {
    sub_19EEBD664(v6[7], qword_1EB3923B0);
    return MEMORY[0x1F4188298](sub_19F1CA410, 0, 0);
  }
  else
  {
    sub_19EEBD664(v6[7], qword_1EB3923B0);
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v6[1];
    return v7(a1, a2);
  }
}

uint64_t sub_19F1CAB1C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  char v8 = *a3;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t))&aDcy[*(int *)aDcy];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19F1CC7D0;
  return v11(a1, a2, v8, a4);
}

uint64_t sub_19F1CABEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(unsigned char *)(v4 + 8sub_19EE4AC98(25, 0) = a3;
  char v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 64) = v8;
  *char v8 = v4;
  v8[1] = sub_19F1CAC9C;
  return sub_19F04E0F0(a1, a2, a4);
}

uint64_t sub_19F1CAC9C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_19F1CADD0, 0, 0);
  }
}

uint64_t sub_19F1CADD0()
{
  if (*(unsigned char *)(v0 + 80)) {
    uint64_t v1 = 0xE800000000000000;
  }
  else {
    uint64_t v1 = 0xE600000000000000;
  }
  if (!*(void *)(*(void *)(v0 + 72) + 16)
    || ((*(unsigned char *)(v0 + 80) & 1) != 0 ? (uint64_t v2 = 0x6449746E65696C63) : (uint64_t v2 = 0x644972657375),
        unint64_t v3 = sub_19EEBD400(v2, v1),
        (v4 & 1) == 0))
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_19EEBDBA4(*(void *)(*(void *)(v0 + 72) + 56) + 32 * v3, v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
LABEL_15:
    sub_19EEBD664(v0 + 16, &qword_1EB393260);
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v7(v5, v6);
  }
LABEL_16:
  sub_19F05003C();
  swift_allocError();
  *uint64_t v9 = 0;
  swift_willThrow();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_19F1CAF68(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(unsigned char *)(v4 + 8sub_19EE4AC98(25, 0) = a3;
  char v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 64) = v8;
  *char v8 = v4;
  v8[1] = sub_19F1CB018;
  return sub_19F12A254(a1, a2, a4);
}

uint64_t sub_19F1CB018(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_19F1CC7CC, 0, 0);
  }
}

uint64_t MetricsIDService.queryID(forTopic:withType:on:)(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 8sub_19EE4AC98(25, 0) = *a3;
  char v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 16) + **(int **)(a6 + 16));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 64) = v12;
  void *v12 = v6;
  v12[1] = sub_19F1CB270;
  return v14(a1, a2, a4, a5, a6);
}

uint64_t sub_19F1CB270(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_19F1CB3A4, 0, 0);
  }
}

uint64_t sub_19F1CB3A4()
{
  if (*(unsigned char *)(v0 + 80)) {
    uint64_t v1 = 0xE800000000000000;
  }
  else {
    uint64_t v1 = 0xE600000000000000;
  }
  if (!*(void *)(*(void *)(v0 + 72) + 16)
    || (!*(unsigned char *)(v0 + 80) ? (uint64_t v2 = 0x644972657375) : (uint64_t v2 = 0x6449746E65696C63),
        unint64_t v3 = sub_19EEBD400(v2, v1),
        (v4 & 1) == 0))
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_19EEBDBA4(*(void *)(*(void *)(v0 + 72) + 56) + 32 * v3, v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 40))
  {
LABEL_15:
    sub_19EEBD664(v0 + 16, &qword_1EB393260);
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v7(v5, v6);
  }
LABEL_16:
  sub_19F05003C();
  swift_allocError();
  *uint64_t v9 = 0;
  swift_willThrow();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_19F1CB53C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  v3[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_19F1CB5D4, 0, 0);
}

uint64_t sub_19F1CB5D4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_19F1CB6B0;
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return sub_19F12A254(v6, v5, v4);
}

uint64_t sub_19F1CB6B0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  sub_19EEBD664(*(void *)(v4 + 40), qword_1EB3923B0);
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_19F1CC7D4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_19F1CB828(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EB3923B0);
  *(void *)(v4 + 4sub_19EE4AC98(25, 0) = swift_task_alloc();
  *(unsigned char *)(v4 + 64) = *a3;
  return MEMORY[0x1F4188298](sub_19F1CB8CC, 0, 0);
}

uint64_t sub_19F1CB8CC()
{
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = sub_19F1DB57C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t))((char *)&dword_1E94768C8 + dword_1E94768C8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_19F1CB9CC;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  return v9(v7, v6, v1, v5);
}

uint64_t sub_19F1CB9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  *(void *)(*v3 + 56) = v2;
  swift_task_dealloc();
  sub_19EEBD664(*(void *)(v6 + 40), qword_1EB3923B0);
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_19F1CC7D4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
    return v8(a1, a2);
  }
}

uint64_t sub_19F1CBB58(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  char v8 = *a3;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, char, uint64_t))((char *)&dword_1E94768C8 + dword_1E94768C8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19F1CC7D0;
  return v11(a1, a2, v8, a4);
}

BOOL static MetricsIDServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MetricsIDServiceError.hash(into:)()
{
  return sub_19F1DD73C();
}

uint64_t MetricsIDServiceError.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1CBCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19EE19904;
  return MetricsIDService.idFields(forTopic:)(a1, a2, a3, a4);
}

uint64_t sub_19F1CBD70(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_19F1CC7D0;
  return MetricsIDService.queryID(forTopic:withType:)(a1, a2, a3, a4, a5);
}

uint64_t sub_19F1CBE34(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_19F0F46E8;
  return MetricsIDService.queryID(forTopic:withType:on:)(a1, a2, a3, a4, a5, a6);
}

unint64_t sub_19F1CBF0C()
{
  unint64_t result = qword_1E9476850;
  if (!qword_1E9476850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476850);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MetricsIDServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1CC02CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetricsIDServiceError()
{
  return &type metadata for MetricsIDServiceError;
}

uint64_t dispatch thunk of MetricsIDService.idFields(forTopic:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_19F1CC7D8;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of MetricsIDService.idFields(forTopic:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_19F01B558;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of MetricsIDService.queryID(forTopic:withType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_19F1CC7DC;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of MetricsIDService.queryID(forTopic:withType:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 32)
                                                                                     + **(int **)(a6 + 32));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_19F1CC4CC;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_19F1CC4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of MetricsIDService.resetID(forTopics:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_19EE17780;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of MetricsIDService.performMaintenance()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 48) + **(int **)(a2 + 48));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19EEB8A6C;
  return v7(a1, a2);
}

id static AccountProvider<>.appleServices.getter()
{
  id v0 = objc_msgSend(self, sel_ams_sharedAccountStore);
  return v0;
}

id ACAccountStore.activeAccount.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_ams_activeiTunesAccount);
  *a1 = result;
  return result;
}

uint64_t ACAccountStore.onActiveAccountChange.getter()
{
  uint64_t v0 = *(void *)(sub_19F1CC8A0() + 16);
  swift_retain();
  swift_release();
  sub_19F1CC994();
  return v0;
}

uint64_t sub_19F1CC8A0()
{
  swift_beginAccess();
  id v1 = objc_getAssociatedObject(v0, &off_1E94768E0);
  swift_endAccess();
  if (v1)
  {
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_19EE87718((uint64_t)v4, (uint64_t)v5);
  if (v5[3])
  {
    type metadata accessor for _ACAccountStoreObserver();
    if (swift_dynamicCast()) {
      return v3;
    }
  }
  else
  {
    sub_19EEBCB4C((uint64_t)v5);
  }
  objc_sync_enter(v0);
  sub_19F1CC9F0(v0, v5);
  objc_sync_exit(v0);
  return v5[0];
}

unint64_t sub_19F1CC994()
{
  unint64_t result = qword_1E946CEC0;
  if (!qword_1E946CEC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E946CCF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E946CEC0);
  }
  return result;
}

uint64_t sub_19F1CC9F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  swift_beginAccess();
  id v4 = objc_getAssociatedObject(a1, &off_1E94768E0);
  swift_endAccess();
  if (v4)
  {
    sub_19F1DCBEC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_19EE87718((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    type metadata accessor for _ACAccountStoreObserver();
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      uint64_t v6 = v10;
      goto LABEL_11;
    }
  }
  else
  {
    sub_19EEBCB4C((uint64_t)v12);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CCF8);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_19EE992B8(v7);
  if (qword_1E946FC20 != -1) {
    swift_once();
  }
  id v9 = objc_msgSend(self, sel_defaultCenter);
  type metadata accessor for _ACAccountStoreObserver();
  swift_allocObject();
  uint64_t v6 = (void *)sub_19F1CCC8C(v8, v9);
  swift_beginAccess();
  swift_retain();
  objc_setAssociatedObject(a1, &off_1E94768E0, v6, (void *)0x301);
  swift_endAccess();
  uint64_t result = swift_release();
LABEL_11:
  *a2 = v6;
  return result;
}

uint64_t sub_19F1CCBC4()
{
  uint64_t v0 = *(void *)(sub_19F1CC8A0() + 16);
  swift_retain();
  swift_release();
  sub_19F1CC994();
  return v0;
}

id static AccountProvider<>.appleServices(forMediaType:)(uint64_t a1)
{
  id v1 = objc_msgSend(self, sel_ams_sharedAccountStoreForMediaType_, a1);
  return v1;
}

id sub_19F1CCC5C()
{
  qword_1E946CEE8 = *MEMORY[0x1E4F178D8];
  return (id)qword_1E946CEE8;
}

id sub_19F1CCC74()
{
  qword_1E946CED0 = *MEMORY[0x1E4F4D9B8];
  return (id)qword_1E946CED0;
}

uint64_t sub_19F1CCC8C(uint64_t a1, void *a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  uint64_t v4 = qword_1E946CEF8;
  swift_retain();
  id v5 = a2;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  objc_msgSend(v5, sel_addObserver_selector_name_object_, v2, sel_accountStoreDidChange_, qword_1E946CEE8, 0);
  swift_release();
  uint64_t v6 = qword_1E946CEE0;
  swift_retain();
  if (v6 != -1) {
    swift_once();
  }
  objc_msgSend(v5, sel_addObserver_selector_name_object_, v2, sel_accountCookiesDidChange_, qword_1E946CED0, 0);
  swift_release();
  swift_release();

  return v2;
}

uint64_t sub_19F1CCDB4()
{
  objc_msgSend(*(id *)(v0 + 24), sel_removeObserver_, v0);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_19F1CCE18(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = sub_19F1DAEBC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DAE8C();
  swift_retain();
  sub_19EFCCC14(a4);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for _ACAccountStoreObserver()
{
  return self;
}

unint64_t sub_19F1CCF30()
{
  return 0xD000000000000017;
}

uint64_t sub_19F1CCF50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *v3;
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v4;
  return swift_bridgeObjectRetain();
}

void sub_19F1CCF6C()
{
}

void static IntentModel<>.kind.getter()
{
}

uint64_t sub_19F1CD028()
{
  return 0x6E694C7065654424;
}

uint64_t sub_19F1CD050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a3);
  return sub_19F1CD164(v3, (uint64_t)boxed_opaque_existential_2Tm);
}

BOOL static IntentModel._isContinuous.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (swift_conformsToProtocol2()) {
    uint64_t v1 = AssociatedTypeWitness;
  }
  else {
    uint64_t v1 = 0;
  }
  return v1 != 0;
}

unint64_t sub_19F1CD0E8()
{
  return 0xD000000000000010;
}

uint64_t dispatch thunk of static IntentModel.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IntentModel._canonicalized.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_19F1CD12C()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 73, 7);
}

uint64_t sub_19F1CD164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Models.DeepLinkIntent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static PipelinePhase<>.readContentsOfFile()@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = sub_19F1CD228;
  *(void *)(result + 24) = 0;
  *a1 = sub_19F0DE9AC;
  a1[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t sub_19F1CD228()
{
  uint64_t v0 = sub_19F1DB36C();
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946EFF0);
  uint64_t v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *(void *)(v3 + 16) = v4;
  *(void *)(v3 + 24) = v0;
  *(void *)(v3 + 32) = v2;
  *(unsigned char *)(v3 + 4sub_19EE4AC98(25, 0) = 1;
  return v3;
}

uint64_t sub_19F1CD2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)a1 + 88))();
  uint64_t v5 = sub_19F1CD390(a2, a3);
  swift_release();
  return v5;
}

uint64_t sub_19F1CD334()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t type metadata accessor for ReadFilePhase()
{
  return self;
}

uint64_t sub_19F1CD390(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = &type metadata for SyncTaskScheduler;
  uint64_t v14 = &protocol witness table for SyncTaskScheduler;
  __swift_instantiateConcreteTypeFromMangledName(qword_1E946EFF0);
  uint64_t v4 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392840);
  uint64_t v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  *(void *)(v4 + 16) = v5;
  *(void *)(v4 + 24) = v6;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 4sub_19EE4AC98(25, 0) = 0;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v11);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  void v7[3] = a2;
  void v7[4] = v4;
  sub_19EEBB420(v11, (uint64_t)(v7 + 5));
  v9[0] = sub_19F1CD534;
  v9[1] = v7;
  long long v9[2] = sub_19EF849B8;
  uint64_t v9[3] = v4;
  sub_19EEC4154((uint64_t)v12, (uint64_t)v10);
  unsigned char v10[40] = 0;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_19EF53B38((uint64_t)v9);
  sub_19F0C18B8((uint64_t)v9);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v4;
}

uint64_t sub_19F1CD4EC()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_19F1CD534(uint64_t a1)
{
  return sub_19F15FA08(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), v1 + 40);
}

uint64_t dispatch thunk of _IntentReplayDispatcherConfigurationProvider.enableIntentReplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of _IntentReplayDispatcherConfigurationProvider.memoryOnlyCaching.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of _IntentReplayDispatcherConfigurationProvider.cachingServerPort.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of _IntentReplayDispatcherConfigurationProvider.intentReplayIgnoreList.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of _IntentReplayDispatcherConfigurationProvider.replayableIntentsWithPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

unint64_t static JSRequestIntent.kind.getter()
{
  return 0xD000000000000010;
}

void sub_19F1CD5C4(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x800000019F2766F0;
}

uint64_t JSRequestIntent.init(_:timeout:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = __swift_project_boxed_opaque_existential_1(a1, v8);
  *(void *)(a4 + 24) = v8;
  *(void *)(a4 + 32) = *(void *)(v9 + 8);
  *(void *)(a4 + 4sub_19EE4AC98(25, 0) = *(void *)(v9 + 16);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)a4);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm, v10, v8);
  *(void *)(a4 + 48) = a2;
  *(unsigned char *)(a4 + 56) = a3 & 1;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t assignWithCopy for JSRequestIntent(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_2((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_2(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for JSRequestIntent(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for JSRequestIntent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for JSRequestIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 4sub_19EE4AC98(25, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_19F1CD9F0(char *a1, char *a2)
{
  return sub_19F039914(*a1, *a2);
}

uint64_t sub_19F1CD9FC()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1CDA70()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F1CDAD0()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1CDB40@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_19F1CDBA0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 25705;
  if (!*v1) {
    uint64_t v2 = 0x646E696B24;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE200000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19F1CDBD0()
{
  if (*v0) {
    return 25705;
  }
  else {
    return 0x646E696B24;
  }
}

uint64_t sub_19F1CDBFC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_19F1CDC60(uint64_t a1)
{
  unint64_t v2 = sub_19F1CE14C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F1CDC9C(uint64_t a1)
{
  unint64_t v2 = sub_19F1CE14C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.Menu.Child.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476900);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  double v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_19F1CE14C();
  sub_19F1DD8AC();
  if (v2)
  {
    uint64_t v12 = (uint64_t)v23;
  }
  else
  {
    uint64_t v22 = v6;
    LOBYTE(v25) = 0;
    uint64_t v10 = sub_19F1DD18C();
    uint64_t v14 = v10;
    uint64_t v15 = v11;
    BOOL v16 = v10 == 1835365481 && v11 == 0xE400000000000000;
    if (v16 || (sub_19F1DD44C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = v22;
      uint64_t v12 = (uint64_t)v23;
      sub_19EEC4154((uint64_t)v23, (uint64_t)v24);
      Models.Menu.Item.init(from:)(v24, (uint64_t)&v25);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v5);
      char v27 = 0;
    }
    else
    {
      BOOL v18 = v14 == 0x756E656D627573 && v15 == 0xE700000000000000;
      if (v18 || (sub_19F1DD44C() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v19 = v22;
        uint64_t v12 = (uint64_t)v23;
        sub_19EEC4154((uint64_t)v23, (uint64_t)v24);
        Models.Menu.init(from:)(v24, &v25);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
        char v27 = 1;
      }
      else
      {
        if (v14 == 0x6574616C706D6574 && v15 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
          uint64_t v12 = (uint64_t)v23;
        }
        else
        {
          char v21 = sub_19F1DD44C();
          uint64_t v12 = (uint64_t)v23;
          if ((v21 & 1) == 0)
          {
            LOBYTE(v24[0]) = 0;
            unint64_t v25 = 0;
            unint64_t v26 = 0xE000000000000000;
            sub_19F1DCCEC();
            swift_bridgeObjectRelease();
            unint64_t v25 = 0x20646E696B24;
            unint64_t v26 = 0xE600000000000000;
            sub_19F1DBEFC();
            swift_bridgeObjectRelease();
            sub_19F1DBEFC();
            sub_19F1DCDCC();
            swift_allocError();
            sub_19F1CE1A0();
            sub_19F1DCD9C();
            swift_bridgeObjectRelease();
            swift_willThrow();
            (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
            return __swift_destroy_boxed_opaque_existential_1Tm(v12);
          }
          swift_bridgeObjectRelease();
        }
        v28[191] = 1;
        sub_19F1CE1FC();
        sub_19F1DD1BC();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v5);
        unint64_t v25 = v24[0];
        unint64_t v26 = v24[1];
        char v27 = 2;
      }
    }
    sub_19F1801A4((uint64_t)&v25, (uint64_t)v28);
    sub_19F1801A4((uint64_t)v28, a2);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v12);
}

unint64_t sub_19F1CE14C()
{
  unint64_t result = qword_1E9476908;
  if (!qword_1E9476908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476908);
  }
  return result;
}

unint64_t sub_19F1CE1A0()
{
  unint64_t result = qword_1E9476910;
  if (!qword_1E9476910)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1E9476900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476910);
  }
  return result;
}

unint64_t sub_19F1CE1FC()
{
  unint64_t result = qword_1E9476918;
  if (!qword_1E9476918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476918);
  }
  return result;
}

uint64_t Models.Menu.Item.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476920);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  unsigned __int8 v63 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  unint64_t v9 = sub_19F1D02DC();
  sub_19F1DD8AC();
  if (v2)
  {
    uint64_t v20 = (uint64_t)v63;
  }
  else
  {
    id v43 = (id)v9;
    uint64_t v44 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476930);
    LOBYTE(v61[0]) = 1;
    sub_19F1D036C(&qword_1E9476938, &qword_1E9476930, (void (*)(void))sub_19F1D0330);
    sub_19F1DD17C();
    uint64_t v10 = v46;
    if (*((void *)&v46 + 1) == 1) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = v46;
    }
    if (*((void *)&v46 + 1) == 1) {
      uint64_t v12 = 0;
    }
    else {
      uint64_t v12 = *((void *)&v46 + 1);
    }
    LOBYTE(v46) = 0;
    uint64_t v13 = sub_19F1DD18C();
    *((void *)&v40 + 1) = v12;
    uint64_t v41 = v10;
    uint64_t v39 = v13;
    *(void *)&long long v40 = v11;
    uint64_t v42 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476950);
    v60[0] = 2;
    sub_19F1D036C(&qword_1E9476958, &qword_1E9476950, (void (*)(void))sub_19F1D03D8);
    sub_19F1DD17C();
    uint64_t v15 = v63;
    if ((void)v46 == 1)
    {
      sub_19EEBD664((uint64_t)&v46, &qword_1E9476970);
      memset(v61, 0, sizeof(v61));
      uint64_t v62 = 0;
    }
    else
    {
      sub_19EEC3ED8((uint64_t)&v46, (uint64_t)v61, &qword_1E94757B0);
      sub_19EEBD664((uint64_t)&v46, &qword_1E9476950);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476978);
    v60[0] = 4;
    sub_19F1D036C(&qword_1E9476980, &qword_1E9476978, (void (*)(void))sub_19F1D0468);
    sub_19F1DD17C();
    if (v46 == 3) {
      int v16 = 2;
    }
    else {
      int v16 = v46;
    }
    uint64_t v17 = v15[3];
    uint64_t v38 = v15[4];
    __swift_project_boxed_opaque_existential_1(v15, v17);
    uint64_t v18 = sub_19F1DD89C();
    sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v18);
    uint64_t v38 = v19;
    swift_bridgeObjectRelease();
    LOBYTE(v46) = 3;
    decodeActionModel<A, B>(using:container:forKey:)((uint64_t)v60);
    uint64_t v22 = *((void *)&v40 + 1);
    if (!*((void *)&v40 + 1)) {
      *(void *)&long long v40 = _s9JetEngine6ModelsO4MenuV2IDVAGycfC_0();
    }
    *((void *)&v40 + 1) = v22;
    sub_19EEC3ED8((uint64_t)v61, (uint64_t)&v46, &qword_1E94757B0);
    id v23 = (id)v46;
    HIDWORD(v37) = v16;
    if ((void)v46)
    {
      uint64_t v41 = *((void *)&v46 + 1);
      char v24 = v47;
      v58[0] = *(_DWORD *)((char *)&v47 + 1);
      *(_DWORD *)((char *)v58 + 3) = DWORD1(v47);
      id v43 = (id)*((void *)&v47 + 1);
      uint64_t v25 = *((void *)&v48 + 1);
      uint64_t v26 = v48;
      long long v56 = v49;
      char v27 = (ValueMetadata *)*((void *)&v50 + 1);
      uint64_t v57 = v50;
      double v28 = (_UNKNOWN **)v51;
    }
    else
    {
      CGFloat v29 = (void *)*MEMORY[0x1E4F4DAF0];
      uint64_t v30 = (void *)*MEMORY[0x1E4F4DAD8];
      char v59 = 1;
      id v23 = v29;
      id v43 = v30;
      sub_19EEBD664((uint64_t)&v46, &qword_1E94757B0);
      uint64_t v41 = 0;
      uint64_t v25 = 0;
      char v27 = &_s12_EmptySourceVN;
      double v28 = &off_1EC30E250;
      uint64_t v26 = 0;
      char v24 = v59;
    }
    sub_19EEC3ED8((uint64_t)v60, (uint64_t)v55, qword_1E946D0B8);
    *((void *)&v53[2] + 1) = 0;
    *(_OWORD *)((char *)&v53[1] + 8) = 0u;
    *(_OWORD *)((char *)v53 + 8) = 0u;
    char v54 = 2;
    long long v46 = v40;
    *(void *)&long long v47 = v39;
    *((void *)&v47 + 1) = v42;
    *(void *)&long long v48 = v23;
    *((void *)&v48 + 1) = v41;
    LOBYTE(v49) = v24;
    *(_DWORD *)((char *)&v49 + 1) = v58[0];
    DWORD1(v49) = *(_DWORD *)((char *)v58 + 3);
    *((void *)&v49 + 1) = v43;
    *(void *)&long long v50 = v26;
    *((void *)&v50 + 1) = v25;
    long long v51 = v56;
    *(void *)&long long v52 = v57;
    *((void *)&v52 + 1) = v27;
    *(void *)&v53[0] = v28;
    sub_19F1D13C0((uint64_t)v55, (uint64_t)v53 + 8);
    uint64_t v31 = (_OWORD *)v45;
    *(unsigned char *)(v45 + 16sub_19EE4AC98(25, 0) = BYTE4(v37);
    long long v32 = v53[2];
    v31[8] = v53[1];
    v31[9] = v32;
    long long v33 = v51;
    v31[4] = v50;
    v31[5] = v33;
    long long v34 = v53[0];
    v31[6] = v52;
    v31[7] = v34;
    long long v35 = v47;
    *uint64_t v31 = v46;
    v31[1] = v35;
    long long v36 = v49;
    _OWORD v31[2] = v48;
    _OWORD v31[3] = v36;
    sub_19EEBD664((uint64_t)v60, qword_1E946D0B8);
    sub_19EEBD664((uint64_t)v61, &qword_1E94757B0);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v4);
    uint64_t v20 = (uint64_t)v63;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(v20);
}

uint64_t Models.Menu.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94769A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1D1428();
  sub_19F1DD8AC();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476930);
    LOBYTE(v42[0]) = 0;
    sub_19F1D036C(&qword_1E9476938, &qword_1E9476930, (void (*)(void))sub_19F1D0330);
    sub_19F1DD17C();
    uint64_t v38 = a2;
    long long v9 = v51[0];
    if (*((void *)&v51[0] + 1) == 1) {
      unint64_t v10 = 0;
    }
    else {
      unint64_t v10 = *(void *)&v51[0];
    }
    unint64_t v36 = v10;
    if (*((void *)&v51[0] + 1) == 1) {
      unint64_t v11 = 0;
    }
    else {
      unint64_t v11 = *((void *)&v51[0] + 1);
    }
    unint64_t v37 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475150);
    LOBYTE(v42[0]) = 1;
    sub_19F1D036C((unint64_t *)&qword_1E94751A8, &qword_1E9475150, (void (*)(void))sub_19F1D147C);
    sub_19F1DD17C();
    long long v35 = v9;
    long long v12 = v51[0];
    if (*((void *)&v51[0] + 1) == 1) {
      unint64_t v13 = 0;
    }
    else {
      unint64_t v13 = *((void *)&v51[0] + 1);
    }
    unint64_t v34 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476950);
    LOBYTE(v39) = 2;
    sub_19F1D036C(&qword_1E9476958, &qword_1E9476950, (void (*)(void))sub_19F1D03D8);
    sub_19F1DD17C();
    if (v42[0] == 1)
    {
      sub_19EEBD664((uint64_t)v42, &qword_1E9476970);
      memset(v51, 0, sizeof(v51));
      uint64_t v52 = 0;
    }
    else
    {
      sub_19EEC3ED8((uint64_t)v42, (uint64_t)v51, &qword_1E94757B0);
      sub_19EEBD664((uint64_t)v42, &qword_1E9476950);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E94769B0);
    LOBYTE(v39) = 3;
    sub_19F1D036C(&qword_1E94769B8, &qword_1E94769B0, (void (*)(void))sub_19F1D14E8);
    sub_19F1DD1BC();
    *((void *)&v35 + 1) = v42[0];
    unint64_t v15 = v37;
    if (v37)
    {
      unint64_t v16 = v36;
    }
    else
    {
      unint64_t v16 = _s9JetEngine6ModelsO4MenuV2IDVAGycfC_0();
      unint64_t v15 = v17;
    }
    unint64_t v18 = 0xE000000000000000;
    if (v34) {
      unint64_t v18 = v34;
    }
    unint64_t v37 = v18;
    if (v34) {
      BOOL v19 = *((void *)&v12 + 1) == 1;
    }
    else {
      BOOL v19 = 1;
    }
    if (v19) {
      unint64_t v20 = 0;
    }
    else {
      unint64_t v20 = v12;
    }
    unint64_t v36 = v20;
    sub_19EEC3ED8((uint64_t)v51, (uint64_t)v42, &qword_1E94757B0);
    if (v42[0])
    {
      sub_19EEBD664((uint64_t)v51, &qword_1E94757B0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      id v21 = (id)v42[0];
      unint64_t v22 = v42[1];
      char v23 = v43;
      v41[0] = *(_DWORD *)v44;
      *(_DWORD *)((char *)v41 + 3) = *(_DWORD *)&v44[3];
      id v24 = v45;
      long long v25 = v46;
      long long v39 = v47;
      uint64_t v26 = v49;
      unint64_t v40 = v48;
      char v27 = v50;
    }
    else
    {
      double v28 = (void *)*MEMORY[0x1E4F4DAF0];
      CGFloat v29 = (void *)*MEMORY[0x1E4F4DAD8];
      char v53 = 1;
      id v21 = v28;
      id v24 = v29;
      sub_19EEBD664((uint64_t)v51, &qword_1E94757B0);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_19EEBD664((uint64_t)v42, &qword_1E94757B0);
      unint64_t v22 = 0;
      long long v25 = 0uLL;
      uint64_t v26 = &_s12_EmptySourceVN;
      char v27 = &off_1EC30E250;
      char v23 = v53;
    }
    uint64_t v30 = v38;
    *uint64_t v38 = v16;
    v30[1] = v15;
    unint64_t v31 = v37;
    void v30[2] = v36;
    void v30[3] = v31;
    v30[4] = (unint64_t)v21;
    v30[5] = v22;
    *((unsigned char *)v30 + 48) = v23;
    *(_DWORD *)((char *)v30 + 49) = v41[0];
    *((_DWORD *)v30 + 13) = *(_DWORD *)((char *)v41 + 3);
    v30[7] = (unint64_t)v24;
    long long v32 = v39;
    *((_OWORD *)v30 + 4) = v25;
    *((_OWORD *)v30 + 5) = v32;
    v30[12] = v40;
    v30[13] = (unint64_t)v26;
    unint64_t v33 = *((void *)&v35 + 1);
    v30[14] = (unint64_t)v27;
    v30[15] = v33;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t Models.Menu.Child.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94769D0);
  uint64_t v37 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1CE14C();
  sub_19F1DD8FC();
  sub_19F1D1578(v1, (uint64_t)&v25);
  if (!v36)
  {
    long long v21 = v33;
    long long v22 = v34;
    char v23 = v35;
    long long v17 = v29;
    long long v18 = v30;
    long long v19 = v31;
    long long v20 = v32;
    long long v13 = v25;
    long long v14 = v26;
    long long v15 = v27;
    long long v16 = v28;
    char v24 = 0;
    uint64_t v7 = v12;
    sub_19F1DD26C();
    if (!v7) {
      Models.Menu.Item.encode(to:)(a1);
    }
    sub_19F1D1634((uint64_t)&v13);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v5, v3);
  }
  if (v36 == 1)
  {
    long long v17 = v29;
    long long v18 = v30;
    long long v19 = v31;
    long long v20 = v32;
    long long v13 = v25;
    long long v14 = v26;
    long long v15 = v27;
    long long v16 = v28;
    char v24 = 0;
    uint64_t v6 = v12;
    sub_19F1DD26C();
    if (!v6) {
      Models.Menu.encode(to:)(a1);
    }
    sub_19F1D1604((uint64_t)&v13);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v5, v3);
  }
  long long v9 = v25;
  LOBYTE(v13) = 0;
  uint64_t v10 = v12;
  sub_19F1DD26C();
  if (!v10)
  {
    long long v13 = v9;
    char v24 = 1;
    sub_19F1D15B0();
    sub_19F1DD2AC();
  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v3);
  return swift_bridgeObjectRelease();
}

uint64_t Models.Menu.Item.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94769E0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1D02DC();
  sub_19F1DD8FC();
  uint64_t v7 = v1[1];
  uint64_t v13 = *v1;
  uint64_t v14 = v7;
  char v15 = 1;
  sub_19F1D15B0();
  uint64_t v8 = v12;
  sub_19F1DD2AC();
  if (!v8)
  {
    LOBYTE(v13) = 0;
    sub_19F1DD26C();
    LOBYTE(v13) = 2;
    sub_19F140640();
    sub_19F1DD2AC();
    uint64_t v12 = v1;
    LOBYTE(v13) = *((unsigned char *)v1 + 160);
    char v15 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476990);
    sub_19F1D036C(&qword_1E94769E8, &qword_1E9476990, (void (*)(void))sub_19F1D1664);
    sub_19F1DD2AC();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v10 = sub_19F1DD8EC();
    sub_19F0D720C(0xD000000000000023, 0x800000019F26A630, v10);
    swift_bridgeObjectRelease();
    LOBYTE(v13) = 3;
    encodeActionModel<A, B>(_:using:container:forKey:)((uint64_t)(v12 + 15));
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Models.Menu.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E94769F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_19F1D1428();
  sub_19F1DD8FC();
  uint64_t v9 = v3[1];
  uint64_t v13 = *v3;
  uint64_t v14 = v9;
  char v12 = 0;
  sub_19F1D15B0();
  sub_19F1DD2AC();
  if (!v2)
  {
    LOBYTE(v13) = 1;
    sub_19F1DD26C();
    LOBYTE(v13) = 2;
    sub_19F140640();
    sub_19F1DD2AC();
    uint64_t v13 = v3[15];
    char v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9475278);
    sub_19F1D036C(&qword_1E9476A00, &qword_1E9475278, (void (*)(void))sub_19F1D16B8);
    sub_19F1DD2AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Models.Menu.Child.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x646E696B24, 0xE500000000000000, (uint64_t)v23);
  sub_19EEC3ED8((uint64_t)v23, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v26;
  if (!v26)
  {
    sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v23);
    goto LABEL_12;
  }
  uint64_t v8 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  uint64_t v11 = v10;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
  sub_19EEC3418((uint64_t)v23);
  if (!v11)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v14 = xmmword_19F25CA80;
    unint64_t v15 = 0x20000001EF14ADA8uLL;
    goto LABEL_13;
  }
  BOOL v12 = v9 == 1835365481 && v11 == 0xE400000000000000;
  if (v12 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_19EEC355C(a1, (uint64_t)v25);
    uint64_t v22 = v6;
    Models.Menu.Item.init(deserializing:using:)((uint64_t)v25, &v22, (uint64_t)v23);
    uint64_t result = sub_19EEC3418(a1);
    if (!v3)
    {
      char v24 = 0;
      return sub_19F1801A4((uint64_t)v23, a3);
    }
    return result;
  }
  BOOL v17 = v9 == 0x756E656D627573 && v11 == 0xE700000000000000;
  if (!v17 && (sub_19F1DD44C() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (v9 == 0x6574616C706D6574 && v11 == 0xE800000000000000 || (sub_19F1DD44C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      JSONObject.subscript.getter(25705, 0xE200000000000000, (uint64_t)v25);
      uint64_t v18 = sub_19F105060();
      if (!v3)
      {
        uint64_t v20 = v18;
        uint64_t v21 = v19;
        sub_19EEC3418(a1);
        sub_19EEC3418((uint64_t)v25);
        v23[0] = v20;
        v23[1] = v21;
        char v24 = 2;
        return sub_19F1801A4((uint64_t)v23, a3);
      }
      sub_19EEC3418(a1);
      long long v16 = v25;
      return sub_19EEC3418((uint64_t)v16);
    }
    sub_19EF5B580();
    swift_allocError();
    *(void *)uint64_t v14 = v9;
    *(void *)(v14 + 8) = v11;
    unint64_t v15 = 0x80000001EF14ADA8;
LABEL_13:
    *(void *)(v14 + 16) = v15;
    *(void *)(v14 + 24) = 0;
    swift_willThrow();
    long long v16 = (void *)a1;
    return sub_19EEC3418((uint64_t)v16);
  }
  swift_bridgeObjectRelease();
  sub_19EEC355C(a1, (uint64_t)v25);
  uint64_t v22 = v6;
  Models.Menu.init(deserializing:using:)((uint64_t)v25, &v22, (uint64_t)v23);
  uint64_t result = sub_19EEC3418(a1);
  if (!v3)
  {
    char v24 = 1;
    return sub_19F1801A4((uint64_t)v23, a3);
  }
  return result;
}

uint64_t Models.Menu.Item.init(deserializing:using:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)&v32);
  sub_19EEC3ED8((uint64_t)&v32, (uint64_t)&v45, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = *((void *)&v46 + 1);
  if (!*((void *)&v46 + 1))
  {
    sub_19EEBD664((uint64_t)&v45, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)&v32);
    goto LABEL_7;
  }
  uint64_t v8 = v47;
  __swift_project_boxed_opaque_existential_1(&v45, *((uint64_t *)&v46 + 1));
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  uint64_t v11 = v10;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v45);
  sub_19EEC3418((uint64_t)&v32);
  if (!v11)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    sub_19EF5B580();
    swift_allocError();
    *(_OWORD *)uint64_t v17 = xmmword_19F264A20;
    *(void *)(v17 + 16) = 0x20000001EF14AC20uLL;
    *(void *)(v17 + 24) = 0;
    swift_willThrow();
    return sub_19EEC3418(a1);
  }
  JSONObject.subscript.getter(25705, 0xE200000000000000, (uint64_t)&v32);
  sub_19EEC3ED8((uint64_t)&v32, (uint64_t)&v45, (uint64_t *)&unk_1E946FD20);
  uint64_t v12 = *((void *)&v46 + 1);
  if (*((void *)&v46 + 1))
  {
    uint64_t v13 = v47;
    __swift_project_boxed_opaque_existential_1(&v45, *((uint64_t *)&v46 + 1));
    unint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
    uint64_t v16 = v15;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v45);
    if (v16) {
      goto LABEL_11;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)&v45, (uint64_t *)&unk_1E946FD20);
  }
  unint64_t v14 = _s9JetEngine6ModelsO4MenuV2IDVAGycfC_0();
  uint64_t v16 = v19;
LABEL_11:
  sub_19EEC3418((uint64_t)&v32);
  JSONObject.subscript.getter(1852793705, 0xE400000000000000, (uint64_t)&v32);
  v44[0] = sub_19EEBF898(MEMORY[0x1E4FBC860]);
  MediaArtwork.init(deserializing:using:)((uint64_t)&v32, v44, (uint64_t)&v45);
  if (!v3)
  {
    JSONObject.subscript.getter(0x6E6F69746361, 0xE600000000000000, (uint64_t)&v32);
    v41[0] = v6;
    static AnyActionTypes.tryToMakeInstance(byDeserializing:using:)((uint64_t)&v32, v41, (uint64_t)v44);
    sub_19EEC3418((uint64_t)&v32);
    swift_bridgeObjectRelease();
    JSONObject.subscript.getter(1701605234, 0xE400000000000000, (uint64_t)&v32);
    sub_19EEC3ED8((uint64_t)&v32, (uint64_t)v41, (uint64_t *)&unk_1E946FD20);
    uint64_t v20 = v42;
    uint64_t v51 = v9;
    if (v42)
    {
      uint64_t v21 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
      uint64_t v23 = v22;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      if (v23)
      {
        uint64_t v24 = sub_19F1DD0FC();
        swift_bridgeObjectRelease();
        if (v24 == 1) {
          char v25 = 1;
        }
        else {
          char v25 = 2;
        }
        if (v24) {
          char v26 = v25;
        }
        else {
          char v26 = 0;
        }
        goto LABEL_23;
      }
    }
    else
    {
      sub_19EEBD664((uint64_t)v41, (uint64_t *)&unk_1E946FD20);
    }
    char v26 = 2;
LABEL_23:
    sub_19EEC3418((uint64_t)&v32);
    memset(&v39[8], 0, 40);
    char v40 = 2;
    *(void *)&long long v32 = v14;
    *((void *)&v32 + 1) = v16;
    *(void *)&long long v33 = v51;
    *((void *)&v33 + 1) = v11;
    long long v36 = v47;
    long long v37 = v48;
    long long v38 = v49;
    *(void *)long long v39 = v50;
    long long v34 = v45;
    long long v35 = v46;
    sub_19F1D13C0((uint64_t)v44, (uint64_t)&v39[8]);
    *(unsigned char *)(a3 + 16sub_19EE4AC98(25, 0) = v26;
    long long v27 = *(_OWORD *)&v39[32];
    *(_OWORD *)(a3 + 128) = *(_OWORD *)&v39[16];
    *(_OWORD *)(a3 + 144) = v27;
    long long v28 = v37;
    *(_OWORD *)(a3 + 64) = v36;
    *(_OWORD *)(a3 + 8sub_19EE4AC98(25, 0) = v28;
    long long v29 = *(_OWORD *)v39;
    *(_OWORD *)(a3 + 96) = v38;
    *(_OWORD *)(a3 + 112) = v29;
    long long v30 = v33;
    *(_OWORD *)a3 = v32;
    *(_OWORD *)(a3 + 16) = v30;
    long long v31 = v35;
    *(_OWORD *)(a3 + 32) = v34;
    *(_OWORD *)(a3 + 48) = v31;
    return sub_19EEC3418(a1);
  }
  sub_19EEC3418(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

double Models.Menu.init(deserializing:using:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *a2;
  JSONObject.subscript.getter(25705, 0xE200000000000000, (uint64_t)v23);
  sub_19EEC3ED8((uint64_t)v23, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
  uint64_t v7 = v26;
  if (v26)
  {
    uint64_t v8 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    unint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
    uint64_t v11 = v10;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    if (v11) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
  }
  unint64_t v9 = _s9JetEngine6ModelsO4MenuV2IDVAGycfC_0();
  uint64_t v11 = v12;
LABEL_6:
  sub_19EEC3418((uint64_t)v23);
  JSONObject.subscript.getter(0x656C746974, 0xE500000000000000, (uint64_t)v23);
  sub_19EEC3ED8((uint64_t)v23, (uint64_t)v25, (uint64_t *)&unk_1E946FD20);
  uint64_t v13 = v26;
  if (v26)
  {
    uint64_t v14 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
    unint64_t v17 = v16;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v25);
    sub_19EEC3418((uint64_t)v23);
    if (v17) {
      goto LABEL_11;
    }
  }
  else
  {
    sub_19EEBD664((uint64_t)v25, (uint64_t *)&unk_1E946FD20);
    sub_19EEC3418((uint64_t)v23);
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = 0;
  unint64_t v17 = 0xE000000000000000;
LABEL_11:
  JSONObject.subscript.getter(1852793705, 0xE400000000000000, (uint64_t)v25);
  uint64_t v28 = v6;
  swift_bridgeObjectRetain();
  MediaArtwork.init(deserializing:using:)((uint64_t)v25, &v28, (uint64_t)v23);
  if (v3)
  {
    sub_19EEC3418(a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    JSONObject.subscript.getter(0x6E6572646C696863, 0xE800000000000000, (uint64_t)v25);
    uint64_t v19 = sub_19F122C68((uint64_t)v25, v6);
    sub_19EEC3418(a1);
    *(void *)a3 = v9;
    *(void *)(a3 + 8) = v11;
    *(void *)(a3 + 16) = v15;
    *(void *)(a3 + 24) = v17;
    long long v20 = v23[3];
    *(_OWORD *)(a3 + 64) = v23[2];
    *(_OWORD *)(a3 + 8sub_19EE4AC98(25, 0) = v20;
    *(_OWORD *)(a3 + 96) = v23[4];
    uint64_t v21 = v24;
    double result = *(double *)v23;
    long long v22 = v23[1];
    *(_OWORD *)(a3 + 32) = v23[0];
    *(_OWORD *)(a3 + 48) = v22;
    *(void *)(a3 + 112) = v21;
    *(void *)(a3 + 12sub_19EE4AC98(25, 0) = v19;
  }
  return result;
}

uint64_t Models.Menu.Child.id.getter()
{
  sub_19F1D1578(v0, (uint64_t)&v14);
  if (v25)
  {
    if (v25 == 1)
    {
      long long v7 = v18;
      long long v8 = v19;
      long long v9 = v20;
      long long v10 = v21;
      long long v3 = v14;
      long long v4 = v15;
      long long v5 = v16;
      long long v6 = v17;
      uint64_t v1 = v14;
      swift_bridgeObjectRetain();
      sub_19F1D1604((uint64_t)&v3);
    }
    else
    {
      return v14;
    }
  }
  else
  {
    long long v11 = v22;
    long long v12 = v23;
    char v13 = v24;
    long long v7 = v18;
    long long v8 = v19;
    long long v9 = v20;
    long long v10 = v21;
    long long v3 = v14;
    long long v4 = v15;
    long long v5 = v16;
    long long v6 = v17;
    uint64_t v1 = v14;
    swift_bridgeObjectRetain();
    sub_19F1D1634((uint64_t)&v3);
  }
  return v1;
}

uint64_t sub_19F1D022C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Models.Menu.Child.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_19F1D0254@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.Menu.Child.init(from:)(a1, a2);
}

uint64_t sub_19F1D026C(void *a1)
{
  return Models.Menu.Child.encode(to:)(a1);
}

uint64_t sub_19F1D0284@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.Menu.Child.init(deserializing:using:)(a1, a2, a3);
}

id sub_19F1D029C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)_JEAtomicCounter), sel_initWithInitialValue_, 0);
  qword_1E94768F8 = (uint64_t)result;
  return result;
}

unint64_t sub_19F1D02DC()
{
  unint64_t result = qword_1E9476928;
  if (!qword_1E9476928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476928);
  }
  return result;
}

uint64_t sub_19F1D0330()
{
  return sub_19F1D036C(&qword_1E9476940, &qword_1E9476948, (void (*)(void))sub_19F1CE1FC);
}

uint64_t sub_19F1D036C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_19F1D03D8()
{
  return sub_19F1D036C(&qword_1E9476960, &qword_1E94757B0, (void (*)(void))sub_19F1D0414);
}

unint64_t sub_19F1D0414()
{
  unint64_t result = qword_1E9476968;
  if (!qword_1E9476968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476968);
  }
  return result;
}

uint64_t sub_19F1D0468()
{
  return sub_19F1D036C(&qword_1E9476988, &qword_1E9476990, (void (*)(void))sub_19F1D04A4);
}

unint64_t sub_19F1D04A4()
{
  unint64_t result = qword_1E9476998;
  if (!qword_1E9476998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476998);
  }
  return result;
}

uint64_t Models.Menu.ID.rawValue.getter(uint64_t a1)
{
  return a1;
}

unint64_t static Models.Menu.ID.separator.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_19F1D0548()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F1D05A8()
{
  return sub_19F1DC0EC();
}

uint64_t Models.Menu.Item.init(id:title:icon:action:role:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  char v9 = *a7;
  *(_OWORD *)(a8 + 136) = 0u;
  *(void *)(a8 + 152) = 0;
  *(_OWORD *)(a8 + 12sub_19EE4AC98(25, 0) = 0u;
  *(unsigned char *)(a8 + 16sub_19EE4AC98(25, 0) = 2;
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  long long v10 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a8 + 64) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a8 + 8sub_19EE4AC98(25, 0) = v10;
  *(_OWORD *)(a8 + 96) = *(_OWORD *)(a5 + 64);
  *(void *)(a8 + 112) = *(void *)(a5 + 80);
  long long v11 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a8 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(a8 + 48) = v11;
  uint64_t result = sub_19F1D13C0(a6, a8 + 120);
  *(unsigned char *)(a8 + 16sub_19EE4AC98(25, 0) = v9;
  return result;
}

uint64_t sub_19F1D066C()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 25705;
      break;
    case 2:
      uint64_t result = 1852793705;
      break;
    case 3:
      uint64_t result = 0x6E6F69746361;
      break;
    case 4:
      uint64_t result = 1701605234;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F1D06F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_19F1D2F14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_19F1D071C(uint64_t a1)
{
  unint64_t v2 = sub_19F1D02DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F1D0758(uint64_t a1)
{
  unint64_t v2 = sub_19F1D02DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.Menu.Item.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.Menu.Item.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Models.Menu.Item.id.modify())()
{
  return nullsub_1;
}

uint64_t Models.Menu.Item.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.Menu.Item.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Models.Menu.Item.title.modify())()
{
  return nullsub_1;
}

uint64_t Models.Menu.Item.icon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19F0D09CC(v1 + 32, a1);
}

uint64_t Models.Menu.Item.icon.setter(uint64_t a1)
{
  return sub_19F192DC0(a1, v1 + 32);
}

uint64_t (*Models.Menu.Item.icon.modify())()
{
  return nullsub_1;
}

uint64_t Models.Menu.Item.action.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EEC3ED8(v1 + 120, a1, qword_1E946D0B8);
}

uint64_t Models.Menu.Item.action.setter(uint64_t a1)
{
  return sub_19F1D13C0(a1, v1 + 120);
}

uint64_t (*Models.Menu.Item.action.modify())()
{
  return nullsub_1;
}

void Models.Menu.Item.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 160);
}

unsigned char *Models.Menu.Item.role.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16sub_19EE4AC98(25, 0) = *result;
  return result;
}

uint64_t (*Models.Menu.Item.role.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F1D0960@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Models.Menu.Item.init(from:)(a1, a2);
}

uint64_t sub_19F1D0978(void *a1)
{
  return Models.Menu.Item.encode(to:)(a1);
}

uint64_t sub_19F1D0990@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.Menu.Item.init(deserializing:using:)(a1, a2, a3);
}

uint64_t Models.Menu.ItemRole.init(rawValue:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_19F1DD0FC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t Models.Menu.ItemRole.rawValue.getter()
{
  if (*v0) {
    return 0x7463757274736564;
  }
  else {
    return 0x6C65636E6163;
  }
}

uint64_t sub_19F1D0A4C(char *a1, char *a2)
{
  return sub_19F039868(*a1, *a2);
}

uint64_t sub_19F1D0A58()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1D0AE0()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F1D0B54()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1D0BD8@<X0>(char *a1@<X8>)
{
  return Models.Menu.ItemRole.init(rawValue:)(a1);
}

void sub_19F1D0BE4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6C65636E6163;
  if (*v1) {
    uint64_t v2 = 0x7463757274736564;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xEB00000000657669;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_19F1D0C28()
{
  return sub_19F1DC12C();
}

uint64_t sub_19F1D0C88()
{
  return sub_19F1DC0EC();
}

__n128 Models.Menu.init(id:title:icon:children:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  long long v7 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a7 + 64) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a7 + 8sub_19EE4AC98(25, 0) = v7;
  *(_OWORD *)(a7 + 96) = *(_OWORD *)(a5 + 64);
  uint64_t v8 = *(void *)(a5 + 80);
  __n128 result = *(__n128 *)a5;
  long long v10 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a7 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(a7 + 48) = v10;
  *(void *)(a7 + 112) = v8;
  *(void *)(a7 + 12sub_19EE4AC98(25, 0) = a6;
  return result;
}

uint64_t sub_19F1D0D04(char *a1, char *a2)
{
  return sub_19F0399AC(*a1, *a2);
}

uint64_t sub_19F1D0D10()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1D0DD4()
{
  sub_19F1DBE9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_19F1D0E80()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1D0F40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F1D2EC8();
  *a1 = result;
  return result;
}

void sub_19F1D0F70(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE200000000000000;
  uint64_t v3 = 25705;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x656C746974;
      goto LABEL_3;
    case 2:
      *a1 = 1852793705;
      a1[1] = 0xE400000000000000;
      break;
    case 3:
      *a1 = 0x6E6572646C696863;
      a1[1] = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_19F1D0FF4()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746974;
      break;
    case 2:
      uint64_t result = 1852793705;
      break;
    case 3:
      uint64_t result = 0x6E6572646C696863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19F1D106C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_19F1D2EC8();
  *a1 = result;
  return result;
}

uint64_t sub_19F1D1094(uint64_t a1)
{
  unint64_t v2 = sub_19F1D1428();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_19F1D10D0(uint64_t a1)
{
  unint64_t v2 = sub_19F1D1428();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t Models.Menu.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.Menu.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Models.Menu.id.modify())()
{
  return nullsub_1;
}

uint64_t Models.Menu.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Models.Menu.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Models.Menu.title.modify())()
{
  return nullsub_1;
}

uint64_t Models.Menu.icon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19F0D09CC(v1 + 32, a1);
}

uint64_t Models.Menu.icon.setter(uint64_t a1)
{
  return sub_19F192DC0(a1, v1 + 32);
}

uint64_t (*Models.Menu.icon.modify())()
{
  return nullsub_1;
}

uint64_t Models.Menu.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Models.Menu.children.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 12sub_19EE4AC98(25, 0) = a1;
  return result;
}

uint64_t (*Models.Menu.children.modify())()
{
  return nullsub_1;
}

uint64_t sub_19F1D12A4@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return Models.Menu.init(from:)(a1, a2);
}

uint64_t sub_19F1D12BC(void *a1)
{
  return Models.Menu.encode(to:)(a1);
}

double sub_19F1D12D4@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return Models.Menu.init(deserializing:using:)(a1, a2, a3);
}

unint64_t _s9JetEngine6ModelsO4MenuV2IDVAGycfC_0()
{
  if (qword_1E9470268 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_1E94768F8, sel_increment);
  sub_19F1DD2EC();
  sub_19F1DBEFC();
  swift_bridgeObjectRelease();
  return 0xD00000000000001ALL;
}

uint64_t sub_19F1D13C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1E946D0B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_19F1D1428()
{
  unint64_t result = qword_1E94769A8;
  if (!qword_1E94769A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94769A8);
  }
  return result;
}

unint64_t sub_19F1D147C()
{
  unint64_t result = qword_1E94751B0;
  if (!qword_1E94751B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EB392310);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94751B0);
  }
  return result;
}

uint64_t sub_19F1D14E8()
{
  return sub_19F1D036C(&qword_1E94769C0, &qword_1E9475278, (void (*)(void))sub_19F1D1524);
}

unint64_t sub_19F1D1524()
{
  unint64_t result = qword_1E94769C8;
  if (!qword_1E94769C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94769C8);
  }
  return result;
}

uint64_t sub_19F1D1578(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_19F1D15B0()
{
  unint64_t result = qword_1E94769D8;
  if (!qword_1E94769D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94769D8);
  }
  return result;
}

uint64_t sub_19F1D1604(uint64_t a1)
{
  return a1;
}

uint64_t sub_19F1D1634(uint64_t a1)
{
  return a1;
}

unint64_t sub_19F1D1664()
{
  unint64_t result = qword_1E94769F0;
  if (!qword_1E94769F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E94769F0);
  }
  return result;
}

unint64_t sub_19F1D16B8()
{
  unint64_t result = qword_1E9476A08;
  if (!qword_1E9476A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A08);
  }
  return result;
}

unint64_t sub_19F1D1710()
{
  unint64_t result = qword_1E9476A10;
  if (!qword_1E9476A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A10);
  }
  return result;
}

unint64_t sub_19F1D1768()
{
  unint64_t result = qword_1E9476A18;
  if (!qword_1E9476A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A18);
  }
  return result;
}

unint64_t sub_19F1D17C0()
{
  unint64_t result = qword_1E9476A20;
  if (!qword_1E9476A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A20);
  }
  return result;
}

uint64_t _s4MenuVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  return swift_bridgeObjectRelease();
}

uint64_t _s4MenuVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  long long v7 = *(void **)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v9 = a2 + 80;
  long long v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v10;
  uint64_t v11 = v10;
  long long v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v7;
  id v14 = v8;
  v12(a1 + 80, v9, v11);
  *(void *)(a1 + 12sub_19EE4AC98(25, 0) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s4MenuVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v7;
  uint64_t v8 = *(void **)(a2 + 56);
  uint64_t v9 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v8;
  id v10 = v8;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  *(void *)(a1 + 12sub_19EE4AC98(25, 0) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s4MenuVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_19EE4AC98(25, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 12sub_19EE4AC98(25, 0) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Models.Menu()
{
  return &type metadata for Models.Menu;
}

uint64_t _s4MenuV5ChildOwxx(uint64_t a1)
{
  unsigned int v2 = *(unsigned __int8 *)(a1 + 161);
  if (v2 >= 3) {
    unsigned int v2 = *(_DWORD *)a1 + 3;
  }
  if (v2 == 2) {
    goto LABEL_6;
  }
  if (v2 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
LABEL_6:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  if (*(void *)(a1 + 144))
  {
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 120);
  }
  return result;
}

uint64_t _s4MenuV5ChildOwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 161);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a2 + 3;
  }
  if (v4 == 2)
  {
    uint64_t v16 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v16;
    char v15 = 2;
    goto LABEL_7;
  }
  if (v4 == 1)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    long long v8 = *(void **)(a2 + 32);
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v7;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    uint64_t v9 = *(void **)(a2 + 56);
    *(void *)(a1 + 56) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 104) = v10;
    uint64_t v11 = v10;
    long long v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v8;
    id v14 = v9;
    v12(a1 + 80, a2 + 80, v11);
    *(void *)(a1 + 12sub_19EE4AC98(25, 0) = *(void *)(a2 + 120);
    char v15 = 1;
LABEL_7:
    *(unsigned char *)(a1 + 161) = v15;
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v17 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v17;
  uint64_t v18 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v18;
  long long v20 = *(void **)(a2 + 32);
  uint64_t v19 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v20;
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v19;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v21 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v21;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v22 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v22;
  uint64_t v23 = v22;
  char v24 = **(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v25 = v20;
  id v26 = v21;
  v24(a1 + 80, a2 + 80, v23);
  uint64_t v27 = (_OWORD *)(a1 + 120);
  uint64_t v28 = (_OWORD *)(a2 + 120);
  uint64_t v29 = *(void *)(a2 + 144);
  if (v29)
  {
    uint64_t v30 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v29;
    *(void *)(a1 + 152) = v30;
    (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
  }
  else
  {
    long long v31 = *(_OWORD *)(a2 + 136);
    *uint64_t v27 = *v28;
    *(_OWORD *)(a1 + 136) = v31;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
  }
  *(_WORD *)(a1 + 16sub_19EE4AC98(25, 0) = *(unsigned __int8 *)(a2 + 160);
  return a1;
}

uint64_t _s4MenuV5ChildOwca(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 161);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  if (v4 != 2)
  {
    if (v4 != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
      if (*(void *)(a1 + 144)) {
        __swift_destroy_boxed_opaque_existential_1Tm(a1 + 120);
      }
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  }
  swift_bridgeObjectRelease();
LABEL_10:
  unsigned int v5 = *(unsigned __int8 *)(a2 + 161);
  if (v5 >= 3) {
    unsigned int v5 = *(_DWORD *)a2 + 3;
  }
  if (v5 == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    char v13 = 2;
    goto LABEL_16;
  }
  if (v5 == 1)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    uint64_t v6 = *(void **)(a2 + 32);
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v7;
    long long v8 = *(void **)(a2 + 56);
    *(void *)(a1 + 56) = v8;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    uint64_t v9 = *(void *)(a2 + 104);
    *(void *)(a1 + 104) = v9;
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    long long v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = v6;
    id v12 = v8;
    v10(a1 + 80, a2 + 80, v9);
    *(void *)(a1 + 12sub_19EE4AC98(25, 0) = *(void *)(a2 + 120);
    char v13 = 1;
LABEL_16:
    *(unsigned char *)(a1 + 161) = v13;
    swift_bridgeObjectRetain();
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  id v14 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v14;
  uint64_t v15 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v15;
  uint64_t v16 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v17 = *(void *)(a2 + 104);
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v19 = v14;
  id v20 = v16;
  v18(a1 + 80, a2 + 80, v17);
  long long v21 = (_OWORD *)(a1 + 120);
  long long v22 = (long long *)(a2 + 120);
  uint64_t v23 = *(void *)(a2 + 144);
  if (v23)
  {
    *(void *)(a1 + 144) = v23;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    (**(void (***)(_OWORD *, long long *))(v23 - 8))(v21, v22);
  }
  else
  {
    long long v24 = *v22;
    long long v25 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *long long v21 = v24;
    *(_OWORD *)(a1 + 136) = v25;
  }
  *(_WORD *)(a1 + 16sub_19EE4AC98(25, 0) = *(unsigned __int8 *)(a2 + 160);
  return a1;
}

__n128 __swift_memcpy162_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 8sub_19EE4AC98(25, 0) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_WORD *)(a1 + 16sub_19EE4AC98(25, 0) = *((_WORD *)a2 + 80);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s4MenuV5ChildOwta(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return a1;
  }
  unsigned int v4 = *(unsigned __int8 *)(a1 + 161);
  if (v4 >= 3) {
    unsigned int v4 = *(_DWORD *)a1 + 3;
  }
  if (v4 != 2)
  {
    if (v4 != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
      if (*(void *)(a1 + 144)) {
        __swift_destroy_boxed_opaque_existential_1Tm(a1 + 120);
      }
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  }
  swift_bridgeObjectRelease();
LABEL_10:
  unsigned int v5 = *(unsigned __int8 *)(a2 + 161);
  if (v5 >= 3) {
    unsigned int v5 = *(_DWORD *)a2 + 3;
  }
  if (v5 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else if (v5 == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 8sub_19EE4AC98(25, 0) = v6;
    long long v7 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v7;
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
  }
  else
  {
    LOBYTE(v5) = 0;
    *(unsigned char *)(a1 + 16sub_19EE4AC98(25, 0) = *(unsigned char *)(a2 + 160);
    long long v10 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v10;
    long long v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 8sub_19EE4AC98(25, 0) = v11;
    long long v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    long long v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
  }
  *(unsigned char *)(a1 + 161) = v5;
  return a1;
}

uint64_t _s4MenuV5ChildOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 162)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 161);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s4MenuV5ChildOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_WORD *)(result + 16sub_19EE4AC98(25, 0) = 0;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 8sub_19EE4AC98(25, 0) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 162) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 162) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 161) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19F1D2348(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 161);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_19F1D2364(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(unsigned char *)(result + 16sub_19EE4AC98(25, 0) = 0;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 8sub_19EE4AC98(25, 0) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 161) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Models.Menu.Child()
{
  return &type metadata for Models.Menu.Child;
}

ValueMetadata *type metadata accessor for Models.Menu.ID()
{
  return &type metadata for Models.Menu.ID;
}

uint64_t _s4MenuV4ItemVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  if (*(void *)(a1 + 144))
  {
    return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 120);
  }
  return result;
}

uint64_t _s4MenuV4ItemVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  long long v7 = *(void **)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v9 = a2 + 80;
  long long v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v10;
  uint64_t v11 = v10;
  long long v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v7;
  id v14 = v8;
  v12(a1 + 80, v9, v11);
  uint64_t v15 = (_OWORD *)(a1 + 120);
  uint64_t v16 = (_OWORD *)(a2 + 120);
  uint64_t v17 = *(void *)(a2 + 144);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = v17;
    *(void *)(a1 + 152) = v18;
    (**(void (***)(_OWORD *, _OWORD *))(v17 - 8))(v15, v16);
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 136);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 136) = v19;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
  }
  *(unsigned char *)(a1 + 16sub_19EE4AC98(25, 0) = *(unsigned char *)(a2 + 160);
  return a1;
}

uint64_t _s4MenuV4ItemVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = v7;
  long long v8 = *(void **)(a2 + 56);
  uint64_t v9 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v8;
  id v10 = v8;

  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  uint64_t v11 = *(void *)(a2 + 144);
  if (!*(void *)(a1 + 144))
  {
    if (v11)
    {
      *(void *)(a1 + 144) = v11;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 120, a2 + 120);
      goto LABEL_8;
    }
LABEL_7:
    long long v12 = *(_OWORD *)(a2 + 120);
    long long v13 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(_OWORD *)(a1 + 12sub_19EE4AC98(25, 0) = v12;
    *(_OWORD *)(a1 + 136) = v13;
    goto LABEL_8;
  }
  if (!v11)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 120);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 120), (uint64_t *)(a2 + 120));
LABEL_8:
  *(unsigned char *)(a1 + 16sub_19EE4AC98(25, 0) = *(unsigned char *)(a2 + 160);
  return a1;
}

__n128 __swift_memcpy161_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 8sub_19EE4AC98(25, 0) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(unsigned char *)(a1 + 16sub_19EE4AC98(25, 0) = *((unsigned char *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s4MenuV4ItemVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  *(void *)(a1 + 4sub_19EE4AC98(25, 0) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 80);
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_19EE4AC98(25, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  if (*(void *)(a1 + 144)) {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 120);
  }
  long long v9 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 12sub_19EE4AC98(25, 0) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v9;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 16sub_19EE4AC98(25, 0) = *(unsigned char *)(a2 + 160);
  return a1;
}

uint64_t _s4MenuV4ItemVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 161)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4MenuV4ItemVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12sub_19EE4AC98(25, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_19EE4AC98(25, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 16sub_19EE4AC98(25, 0) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 161) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 161) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Models.Menu.Item()
{
  return &type metadata for Models.Menu.Item;
}

ValueMetadata *type metadata accessor for Models.Menu.ItemRole()
{
  return &type metadata for Models.Menu.ItemRole;
}

unsigned char *_s4MenuV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1D2970);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4MenuV10CodingKeysOMa()
{
  return &_s4MenuV10CodingKeysON;
}

unsigned char *_s4MenuV4ItemV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1D2A74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4MenuV4ItemV10CodingKeysOMa()
{
  return &_s4MenuV4ItemV10CodingKeysON;
}

unsigned char *_s4MenuV8ItemRoleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x19F1D2B78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4MenuV5ChildO10CodingKeysOMa()
{
  return &_s4MenuV5ChildO10CodingKeysON;
}

unint64_t sub_19F1D2BB4()
{
  unint64_t result = qword_1E9476A28;
  if (!qword_1E9476A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A28);
  }
  return result;
}

unint64_t sub_19F1D2C0C()
{
  unint64_t result = qword_1E9476A30;
  if (!qword_1E9476A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A30);
  }
  return result;
}

unint64_t sub_19F1D2C64()
{
  unint64_t result = qword_1E9476A38;
  if (!qword_1E9476A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A38);
  }
  return result;
}

unint64_t sub_19F1D2CBC()
{
  unint64_t result = qword_1E9476A40;
  if (!qword_1E9476A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A40);
  }
  return result;
}

unint64_t sub_19F1D2D14()
{
  unint64_t result = qword_1E9476A48;
  if (!qword_1E9476A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A48);
  }
  return result;
}

unint64_t sub_19F1D2D6C()
{
  unint64_t result = qword_1E9476A50;
  if (!qword_1E9476A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A50);
  }
  return result;
}

unint64_t sub_19F1D2DC4()
{
  unint64_t result = qword_1E9476A58;
  if (!qword_1E9476A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A58);
  }
  return result;
}

unint64_t sub_19F1D2E1C()
{
  unint64_t result = qword_1E9476A60;
  if (!qword_1E9476A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A60);
  }
  return result;
}

unint64_t sub_19F1D2E74()
{
  unint64_t result = qword_1E9476A68;
  if (!qword_1E9476A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A68);
  }
  return result;
}

uint64_t sub_19F1D2EC8()
{
  unint64_t v0 = sub_19F1DD0FC();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_19F1D2F14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852793705 && a2 == 0xE400000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000 || (sub_19F1DD44C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_19F1DD44C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_19F1D30EC()
{
  unint64_t result = qword_1E9476A70;
  if (!qword_1E9476A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A70);
  }
  return result;
}

unint64_t sub_19F1D3140()
{
  unint64_t result = qword_1E9476A78;
  if (!qword_1E9476A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1E9476A78);
  }
  return result;
}

unint64_t PackageEncryptionError.errorDescription.getter()
{
  int v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 4);
  if (!*((unsigned char *)v0 + 4))
  {
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD00000000000001BLL;
    goto LABEL_10;
  }
  if (v2 == 1)
  {
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD00000000000001ELL;
LABEL_10:
    sub_19F1DD2EC();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    return v4;
  }
  if (v2 != 2)
  {
LABEL_7:
    unint64_t v4 = 0;
    sub_19F1DCCEC();
    sub_19F1DBEFC();
    sub_19F1DCF4C();
    return v4;
  }
  if (v1)
  {
    if (v1 == 1) {
      return 0xD000000000000030;
    }
    goto LABEL_7;
  }
  return 0xD000000000000016;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for PackageEncryptionError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PackageEncryptionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19F1D33CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 1u) {
    return *(unsigned __int8 *)(a1 + 4);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_19F1D33E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_DWORD *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PackageEncryptionError()
{
  return &type metadata for PackageEncryptionError;
}

uint64_t WritableStateLens.init<A>(contentsOf:in:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v9 = *a1;
  a4[3] = type metadata accessor for StateStoreHandle();
  a4[4] = (uint64_t)&off_1EF13F2F0;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a4);
  return sub_19F0310C4(&v9, a2, a3, boxed_opaque_existential_2Tm);
}

void *WritableStateLens.init(get:set:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  a5[3] = &type metadata for DelegatingStateStoreHandle;
  a5[4] = &off_1EF145F00;
  unint64_t result = (void *)swift_allocObject();
  *a5 = result;
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

uint64_t sub_19F1D3500()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t WritableStateLens<A>.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  long long v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v3[3];
  uint64_t v10 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v5, a3, v9, v10);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t WritableStateLens<A>.currentValue.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v6 + 8))(*(void *)(a1 + 16), a2, v5, v6);
}

uint64_t WritableStateLens<A>.updateValue(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_19EEC4154(v4, (uint64_t)v16);
  uint64_t v9 = v17;
  uint64_t v10 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v12[2] = *(void *)(a3 + 16);
  void v12[3] = a4;
  uint64_t v13 = v4;
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  (*(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v10 + 16))(sub_19F1D39FC, v12, v9, v10);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
}

uint64_t sub_19F1D37A0(void *a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  v29[1] = a3;
  uint64_t v30 = a2;
  uint64_t v8 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v29 - v12;
  uint64_t v14 = type metadata accessor for WritableStateLens();
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8);
  uint64_t v18 = *(void *)(v14 + 16);
  v29[0] = a5;
  v17(v18, a5, v15, v16);
  long long v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v19(v10, v13, a4);
  uint64_t v20 = v32;
  v30(v10);
  if (v20 || (sub_19F1DBD3C() & 1) != 0)
  {
    long long v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v10, a4);
    return ((uint64_t (*)(char *, uint64_t))v21)(v13, a4);
  }
  else
  {
    uint64_t v23 = a1[3];
    uint64_t v32 = a1[4];
    long long v24 = a1;
    uint64_t v25 = v23;
    __swift_project_boxed_opaque_existential_1(v24, v23);
    uint64_t v26 = *(void *)(v29[0] + 8);
    _OWORD v31[3] = a4;
    v31[4] = v26;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v31);
    v19((char *)boxed_opaque_existential_2Tm, v10, a4);
    (*(void (**)(uint64_t *, uint64_t))(v32 + 24))(v31, v25);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
    v28(v10, a4);
    v28(v13, a4);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  }
}

uint64_t sub_19F1D39FC()
{
  return sub_19F1D37A0(*(void **)(v0 + 32), *(void (**)(char *))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t WritableStateLens.init(_:)@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19EEBB420(a1, a2);
}

uint64_t type metadata accessor for WritableStateLens()
{
  return __swift_instantiateGenericMetadata();
}

__n128 CodeAnyHashable.init(wrappedValue:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  return result;
}

uint64_t CodeAnyHashable.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_19EE77E34(v1, a1);
}

uint64_t CodeAnyHashable.wrappedValue.setter(uint64_t a1)
{
  return sub_19F1D3A70(a1, v1);
}

uint64_t sub_19F1D3A70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t (*CodeAnyHashable.wrappedValue.modify())()
{
  return nullsub_1;
}

double CodeAnyHashable.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x1F4188790](a1);
  sub_19EEC4154(v5, (uint64_t)v8);
  sub_19F1DC59C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
  }
  else
  {
    sub_19F1DCC8C();
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    double result = *(double *)&v9;
    long long v7 = v10;
    *(_OWORD *)a2 = v9;
    *(_OWORD *)(a2 + 16) = v7;
    *(void *)(a2 + 32) = v11;
  }
  return result;
}

uint64_t CodeAnyHashable.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_19F1DCAAC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v20 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_19F1DCC6C();
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if (v13)
  {
    v14(v8, 0, 1, v4);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    sub_19F1DBC7C();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v4);
  }
  else
  {
    v14(v8, 1, 1, v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v16 = sub_19F1DCDFC();
    swift_allocError();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E9471568);
    _OWORD v18[3] = MEMORY[0x1E4FBB960];
    uint64_t v19 = swift_allocObject();
    *uint64_t v18 = v19;
    sub_19EE77E34(v2, v19 + 16);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_19F1DD8BC();
    v20[0] = 0;
    v20[1] = 0xE000000000000000;
    sub_19F1DCCEC();
    swift_bridgeObjectRelease();
    strcpy((char *)v20, "Value is not <");
    HIBYTE(v20[1]) = -18;
    sub_19F1DD98C();
    sub_19F1DBEFC();
    swift_bridgeObjectRelease();
    sub_19F1DBEFC();
    sub_19F1DCDAC();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x1E4FBBAA0], v16);
    return swift_willThrow();
  }
}

uint64_t sub_19F1D3F50()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t CodeAnyHashable.hashValue.getter()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1D3FD8()
{
  return sub_19F1DD78C();
}

uint64_t sub_19F1D4014()
{
  return swift_getWitnessTable();
}

double sub_19F1D4030@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CodeAnyHashable.init(from:)(a1, a2);
}

uint64_t sub_19F1D4054(void *a1, uint64_t a2)
{
  return CodeAnyHashable.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for CodeAnyHashable()
{
  return swift_getGenericMetadata();
}

id URLBagContract.init(_:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *(void *)&v1[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing] = *a1;
  long long v3 = (objc_class *)type metadata accessor for MescalBagContract();
  uint64_t v4 = (char *)objc_allocWithZone(v3);
  *(void *)&v4[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = v2;
  v8.receiver = v4;
  v8.super_class = v3;
  uint64_t v5 = v1;
  swift_unknownObjectRetain();
  *(void *)&v5[OBJC_IVAR____TtC9JetEngine14URLBagContract_mescalContract] = objc_msgSendSuper2(&v8, sel_init);

  v7.receiver = v5;
  v7.super_class = (Class)type metadata accessor for URLBagContract();
  return objc_msgSendSuper2(&v7, sel_init);
}

uint64_t type metadata accessor for URLBagContract()
{
  return self;
}

id sub_19F1D4150()
{
  return sub_19F1D4314(0x6C72752D64697567, 0xEF78656765722F73, (SEL *)&selRef_arrayForKey_);
}

id sub_19F1D417C()
{
  return sub_19F1D4314(0xD000000000000011, 0x800000019F276860, (SEL *)&selRef_arrayForKey_);
}

id sub_19F1D41A0()
{
  return sub_19F1D4314(0xD000000000000018, 0x800000019F276880, (SEL *)&selRef_stringForKey_);
}

id sub_19F1D41C4()
{
  return sub_19F1D4314(0x4464657473757274, 0xEE00736E69616D6FLL, (SEL *)&selRef_arrayForKey_);
}

uint64_t sub_19F1D41F0()
{
  return swift_unknownObjectRetain();
}

id sub_19F1D41F8()
{
  return sub_19F1D4314(0xD000000000000015, 0x800000019F2768A0, (SEL *)&selRef_doubleForKey_);
}

id sub_19F1D421C()
{
  return sub_19F1D4314(0xD00000000000001ALL, 0x800000019F2768C0, (SEL *)&selRef_integerForKey_);
}

id sub_19F1D4240()
{
  return sub_19F1D4314(0xD000000000000015, 0x800000019F2768E0, (SEL *)&selRef_doubleForKey_);
}

id sub_19F1D4264()
{
  return sub_19F1D4314(0xD00000000000001ALL, 0x800000019F276900, (SEL *)&selRef_integerForKey_);
}

id sub_19F1D4288()
{
  return sub_19F1D4314(0xD000000000000014, 0x800000019F276920, (SEL *)&selRef_arrayForKey_);
}

id sub_19F1D42AC()
{
  return sub_19F1D4314(0xD000000000000017, 0x800000019F276940, (SEL *)&selRef_integerForKey_);
}

id sub_19F1D42D0()
{
  return sub_19F1D4314(0xD000000000000012, 0x800000019F276960, (SEL *)&selRef_URLForKey_);
}

id sub_19F1D42F4()
{
  return sub_19F1D4314(0x7363697274656DLL, 0xE700000000000000, (SEL *)&selRef_dictionaryForKey_);
}

id sub_19F1D4314(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC9JetEngine14URLBagContract_backing);
  uint64_t v6 = (void *)sub_19F1DBD4C();
  id v7 = objc_msgSend(v5, *a3, v6);

  return v7;
}

id URLBagContract.__allocating_init(_:)(uint64_t *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = *a1;
  *(void *)&v3[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing] = v4;
  uint64_t v5 = (objc_class *)type metadata accessor for MescalBagContract();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC9JetEngine17MescalBagContract_backing] = v4;
  v10.receiver = v6;
  v10.super_class = v5;
  id v7 = v3;
  swift_unknownObjectRetain();
  *(void *)&v7[OBJC_IVAR____TtC9JetEngine14URLBagContract_mescalContract] = objc_msgSendSuper2(&v10, sel_init);

  v9.receiver = v7;
  v9.super_class = v1;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t URLBagContract.mescalContract.getter()
{
  return swift_unknownObjectRetain();
}

id sub_19F1D4630(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *(void **)&a1[OBJC_IVAR____TtC9JetEngine14URLBagContract_backing];
  id v7 = a1;
  objc_super v8 = (void *)sub_19F1DBD4C();
  id v9 = objc_msgSend(v6, *a5, v8);

  return v9;
}

id URLBagContract.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void URLBagContract.init()()
{
}

id URLBagContract.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for URLBagContract();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for URLBagContract(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for URLBagContract);
}

uint64_t dispatch thunk of URLBagContract.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of URLBagContract.guidRegexes.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of URLBagContract.guidSchemes.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of URLBagContract.storefrontSuffix.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of URLBagContract.trustedDomains.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of URLBagContract.metricsContract.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of URLBagContract.tlsSamplingPercentage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of URLBagContract.tlsSamplingSessionDuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of URLBagContract.tfoSamplingPercentage.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of URLBagContract.tfoSamplingSessionDuration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of URLBagContract.apsEnabledPatterns.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of URLBagContract.apsSamplingPercent.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of URLBagContract.metricsURL.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of URLBagContract.metricsDictionary.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of LocalizerFormattingStringsDataSource.formattingString(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_19F1D4ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)v2;
  unint64_t v6 = *(void *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result)
  {
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t result = (uint64_t)sub_19F16BABC(v5);
  uint64_t v5 = (void *)result;
  if ((v6 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v6 >= v5[2])
  {
LABEL_10:
    __break(1u);
    return result;
  }
  objc_super v8 = &v5[2 * v6];
  uint64_t result = swift_bridgeObjectRelease();
  v8[4] = a1;
  v8[5] = a2;
  *(void *)uint64_t v2 = v5;
  if (v5[2] == v6 + 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = v6 + 1;
  }
  *(void *)(v2 + 8) = v9;
  return result;
}

uint64_t sub_19F1D4B58(uint64_t *a1, uint64_t a2)
{
  return sub_19F1D4B70(a1, a2);
}

uint64_t sub_19F1D4B70(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((result & 1) == 0)
  {
    uint64_t result = sub_19EFF6470(0, *(void *)(v4 + 16) + 1, 1);
    uint64_t v4 = *a1;
  }
  unint64_t v7 = *(void *)(v4 + 16);
  unint64_t v6 = *(void *)(v4 + 24);
  if (v7 >= v6 >> 1)
  {
    uint64_t result = sub_19EFF6470(v6 > 1, v7 + 1, 1);
    uint64_t v4 = *a1;
  }
  *(void *)(v4 + 16) = v7 + 1;
  *(void *)(v4 + 8 * v7 + 32) = a2;
  *a1 = v4;
  return result;
}

uint64_t sub_19F1D4C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  sub_19EEC4154(a1, (uint64_t)v14);
  swift_unknownObjectWeakInit();
  sub_19EEBB420(v14, (uint64_t)v11);
  swift_unknownObjectWeakAssign();
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  sub_19EEBDC4C((uint64_t)v11, (uint64_t)v15, &qword_1E9476B90);
  sub_19EEC3ED8((uint64_t)v15, (uint64_t)v11, &qword_1E9476B90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476B98);
  uint64_t v8 = swift_allocObject();
  sub_19EEBDC4C((uint64_t)v11, v8 + 16, &qword_1E9476B90);
  uint64_t v9 = *(void *)(v4 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  sub_19F1D5D60((uint64_t *)(v9 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
  swift_release();
  *a4 = v8;
  return sub_19EEBD664((uint64_t)v15, &qword_1E9476B90);
}

uint64_t sub_19F1D4D48(uint64_t a1)
{
  v20[5] = *MEMORY[0x1E4F143B8];
  sub_19F1D5450(a1, (uint64_t)&v18);
  if (!v19) {
    return sub_19EEBD664((uint64_t)&v18, &qword_1E94742A0);
  }
  sub_19EEBB420(&v18, (uint64_t)v20);
  __swift_project_boxed_opaque_existential_1(v20, v20[3]);
  uint64_t v1 = sub_19F1DADAC();
  unint64_t v4 = v2;
  uint64_t v5 = v1;
  switch(v2 >> 62)
  {
    case 1uLL:
      if (v1 >> 32 < (int)v1) {
        __break(1u);
      }
      swift_retain();
      uint64_t v8 = sub_19F1D59B4((int)v5, v5 >> 32, v4 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_19F1D5D28);
      uint64_t v10 = v9;
      sub_19EEA072C(v5, v4);
      if (v10) {
        goto LABEL_18;
      }
      goto LABEL_10;
    case 2uLL:
      uint64_t v11 = *(void *)(v1 + 16);
      uint64_t v12 = *(void *)(v1 + 24);
      swift_retain();
      swift_retain();
      uint64_t v8 = sub_19F1D59B4(v11, v12, v4 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_19F1D5D28);
      uint64_t v10 = v13;
      swift_release();
      swift_release();
      if (v10) {
        goto LABEL_18;
      }
LABEL_10:
      uint64_t v16 = v5;
      unint64_t v17 = v4;
      sub_19EEA0784(v5, v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476BA0);
      if (swift_dynamicCast())
      {
        sub_19EEBB420(v14, (uint64_t)&v18);
        __swift_project_boxed_opaque_existential_1(&v18, v19);
        if (sub_19F1DD0AC())
        {
          __swift_project_boxed_opaque_existential_1(&v18, v19);
          sub_19F1DD09C();
          sub_19EEA072C(v5, v4);
          uint64_t v10 = *((void *)&v14[0] + 1);
          uint64_t v8 = *(void *)&v14[0];
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
          goto LABEL_19;
        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
      }
      else
      {
        uint64_t v15 = 0;
        memset(v14, 0, sizeof(v14));
        sub_19EEBD664((uint64_t)v14, &qword_1E9476BA8);
      }
      uint64_t v6 = sub_19F1D5A64(v5, v4);
LABEL_17:
      uint64_t v8 = v6;
      uint64_t v10 = v7;
LABEL_18:
      sub_19EEA072C(v5, v4);
LABEL_19:
      swift_beginAccess();
      sub_19F1D4ABC(v8, v10);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
      break;
    case 3uLL:
      *(void *)((char *)v14 + 6) = 0;
      *(void *)&v14[0] = 0;
      sub_19F1D5D28((uint64_t *)&v18);
      sub_19EEA072C(v5, v4);
      uint64_t v10 = *((void *)&v18 + 1);
      uint64_t v8 = v18;
      goto LABEL_19;
    default:
      *(void *)&long long v18 = v1;
      WORD4(v18) = v2;
      BYTE10(v18) = BYTE2(v2);
      BYTE11(v18) = BYTE3(v2);
      BYTE12(v18) = BYTE4(v2);
      BYTE13(v18) = BYTE5(v2);
      uint64_t v6 = sub_19F1DBE7C();
      goto LABEL_17;
  }
  return result;
}

uint64_t sub_19F1D5450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_19EEC4154(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E9476BB0);
  if (swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
    uint64_t v4 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 32) = 0x646E696B24;
    *(void *)(inited + 4sub_19EE4AC98(25, 0) = 0xE500000000000000;
    strcpy((char *)(inited + 48), "metricsEvent");
    *(unsigned char *)(inited + 61) = 0;
    *(_WORD *)(inited + 62) = -5120;
    *(void *)(inited + 72) = v4;
    *(void *)(inited + 8sub_19EE4AC98(25, 0) = 1635017060;
    *(void *)(inited + 88) = 0xE400000000000000;
    id v5 = objc_msgSend(v11, sel_dictionaryForPosting);
    uint64_t v6 = sub_19F1DBB3C();

    *(void *)(inited + 12sub_19EE4AC98(25, 0) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390A60);
    *(void *)(inited + 96) = v6;
    unint64_t v7 = sub_19EEBF898(inited);
    *(void *)(a2 + 24) = &type metadata for JSONObject;
    *(void *)(a2 + 32) = sub_19EFAA85C();
    uint64_t v8 = (void *)swift_allocObject();
    v8[5] = &type metadata for FoundationValue;
    v8[6] = &off_1EF13D8F8;
    uint64_t v9 = swift_allocObject();
    _OWORD v8[2] = v9;
    *(void *)(v9 + 4sub_19EE4AC98(25, 0) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    *(void *)(v9 + 16) = v7;
  }
  else
  {
    uint64_t v8 = 0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 8) = 0u;
  }
  *(void *)a2 = v8;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
}

uint64_t sub_19F1D562C()
{
  id v1 = _s9JetEngine19RunLoopWorkerThreadC7currentACSgvgZ_0();
  swift_release();
  if (!v1) {
    sub_19F1A122C("JetEngine/JSDebugObject.swift", 29, 2, 73);
  }
  unint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC9JetEngine13JSDebugObject_newPoints);
  swift_beginAccess();
  unint64_t v3 = v2[1];
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_19F0BA7E0(v4, v3);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *unint64_t v2 = sub_19EE6A624(0, 0, *(void *)(*v2 + 16));
  v2[1] = 0;
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_19F1D5760()
{
  id v1 = _s9JetEngine19RunLoopWorkerThreadC7currentACSgvgZ_0();
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = OBJC_IVAR____TtC9JetEngine13JSDebugObject_isDebugPointsEnabled;
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9JetEngine13JSDebugObject_isDebugPointsEnabled))
    {
      return swift_release();
    }
    else
    {
      if (qword_1E9470200 != -1) {
        swift_once();
      }
      v5[3] = type metadata accessor for RunLoopWorkerThread();
      void v5[4] = &protocol witness table for RunLoopWorkerThread;
      v5[0] = v2;
      swift_retain();
      swift_retain();
      sub_19F1D4C1C((uint64_t)v5, (uint64_t)sub_19F1D58BC, 0, &v6);
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
      *(unsigned char *)(v0 + v3) = 1;
    }
  }
  else
  {
    return sub_19F1A122C("JetEngine/JSDebugObject.swift", 29, 2, 83);
  }
  return result;
}

uint64_t (*sub_19F1D58BC(void *a1))(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  id v2 = a1;
  return sub_19F1D5DB4;
}

uint64_t sub_19F1D59B4(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_19F1DB04C();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_19F1DB07C();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_19F1DB06C();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_19F1D5B18(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

uint64_t sub_19F1D5A64(uint64_t a1, unint64_t a2)
{
  sub_19EEA0784(a1, a2);
  sub_19F1D5B6C(a1, a2);
  sub_19EEA072C(a1, a2);
  uint64_t v4 = sub_19F1DBE7C();
  swift_release();
  return v4;
}

uint64_t sub_19F1D5ADC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_19F1DBE7C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_19F1D5B18(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

void *sub_19F1D5B6C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_19F1DB44C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3927C0);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          _OWORD v8[2] = v9;
          void v8[3] = 2 * v12 - 64;
        }
        sub_19EEA0784(a1, a2);
        uint64_t v13 = sub_19F1DB3AC();
        sub_19EEA072C(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x19F1D5D18);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_19F1D5D28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_19F1DBE7C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_19F1D5D60(uint64_t *a1)
{
  return sub_19F1D4B70(a1, v1);
}

uint64_t sub_19F1D5D7C()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_19F1D5DB4(uint64_t a1)
{
  return sub_19F1D4D48(a1);
}

uint64_t sub_19F1D5DD8()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_19F1D5E18()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t dispatch thunk of LocalizedStringsDataSource.fetchLanguages()(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_19F01B558;
  return v7(a1, a2);
}

uint64_t dispatch thunk of LocalizedStringsDataSource.fetchStrings(withLanguage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_19EEB8A6C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_19F1D6060(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  uint64_t v30 = MEMORY[0x1E4FBC860];
  sub_19EFF6450(0, v1, 0);
  uint64_t v2 = v30;
  uint64_t result = sub_19EF7E550(v3);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v3 + 64;
  uint64_t v24 = v3 + 80;
  int64_t v25 = v1;
  int v26 = v5;
  uint64_t v27 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(v3 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v28 = v7;
    size_t v12 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v29 = *v12;
    uint64_t v14 = *(void *)(*(void *)(v3 + 56) + 8 * v6);
    uint64_t v15 = v3;
    unint64_t v17 = *(void *)(v30 + 16);
    unint64_t v16 = *(void *)(v30 + 24);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v17 >= v16 >> 1) {
      uint64_t result = sub_19EFF6450(v16 > 1, v17 + 1, 1);
    }
    *(void *)(v30 + 16) = v17 + 1;
    long long v18 = (void *)(v30 + 24 * v17);
    void v18[4] = v29;
    v18[5] = v13;
    v18[6] = v14;
    int64_t v9 = 1 << *(unsigned char *)(v15 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = v27;
    uint64_t v19 = *(void *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    uint64_t v3 = v15;
    int v5 = v26;
    if (*(_DWORD *)(v15 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      int64_t v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v25;
    }
    else
    {
      unint64_t v21 = v11 + 1;
      unint64_t v22 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v25;
      if (v11 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            unint64_t v23 = *(void *)(v24 + 8 * v11++);
            if (v23)
            {
              unint64_t v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v28 + 1;
    uint64_t v6 = v9;
    if (v28 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_19F1D6294(double a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6, char *a7, uint64_t a8, int a9)
{
  return sub_19F1D865C(a4, a5, a6, a7, a8, a9, a1);
}

uint64_t sub_19F1D62B0(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  id v5 = objc_msgSend(self, sel_serverTimeFromTimeInterval_, a2);
  id v29 = objc_msgSend(v5, sel_unsignedLongLongValue);

  uint64_t v6 = v3[9];
  swift_beginAccess();
  uint64_t v7 = v3[4];
  uint64_t v8 = v3[5];
  uint64_t v32 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v31 = v7;
  *((void *)&v31 + 1) = v8;
  sub_19EEBDC00(&v31, v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v30, 25705, 0xE200000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v10 = v6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  size_t v12 = sub_19F1D7234(v11, a1);
  swift_bridgeObjectRelease();
  uint64_t v13 = v12[2];
  if (v13)
  {
    uint64_t v28 = v6;
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v16 = v12[v14 + 4];
      uint64_t v17 = *(void *)(v16 + 16);
      swift_bridgeObjectRetain();
      if (v17
        && (unint64_t v18 = sub_19EEBD400(100, 0xE100000000000000), (v19 & 1) != 0)
        && (sub_19EEBDBA4(*(void *)(v16 + 56) + 32 * v18, (uint64_t)&v31), (swift_dynamicCast() & 1) != 0)
        && *(void *)&v30[0] >= (unint64_t)v29
        && *(void *)(v16 + 16)
        && (unint64_t v20 = sub_19EEBD400(115, 0xE100000000000000), (v21 & 1) != 0))
      {
        sub_19EEBDBA4(*(void *)(v16 + 56) + 32 * v20, (uint64_t)&v31);
        char v22 = swift_dynamicCast();
        if ((v22 & 1) == 0) {
          *(void *)&v30[0] = 0;
        }
        BYTE8(v30[0]) = v22 ^ 1;
      }
      else
      {
        *(void *)&v30[0] = 0;
        BYTE8(v30[0]) = 1;
      }
      swift_bridgeObjectRelease();
      if ((BYTE8(v30[0]) & 1) == 0)
      {
        uint64_t v23 = *(void *)&v30[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v15 = sub_19F09D164(0, v15[2] + 1, 1, v15);
        }
        unint64_t v25 = v15[2];
        unint64_t v24 = v15[3];
        if (v25 >= v24 >> 1) {
          uint64_t v15 = sub_19F09D164((void *)(v24 > 1), v25 + 1, 1, v15);
        }
        v15[2] = v25 + 1;
        v15[v25 + 4] = v23;
      }
      ++v14;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    uint64_t v10 = v28;
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  if (v15[2])
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907D0);
    *(void *)&long long v31 = v15;
    sub_19EEBDC00(&v31, v30);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v30, 0x6973736572706D69, 0xEF73656D69546E6FLL, v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v10;
}

uint64_t sub_19F1D6628(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v2 + 72);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v34 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v33 = v7;
  *((void *)&v33 + 1) = v8;
  sub_19EEBDC00(&v33, v32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v32, 25705, 0xE200000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_19F1D7234(v10, a1);
  swift_bridgeObjectRelease();
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1E946E818);
  *(void *)&long long v33 = v11;
  sub_19EEBDC00(&v33, v32);
  swift_bridgeObjectRetain();
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_19EE7DA20(v32, 0x6E49646577656976, 0xEA00000000006F66, v12);
  uint64_t v13 = v6;
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_serverTimeFromTimeInterval_, a2);
  id v15 = objc_msgSend(v14, sel_unsignedLongLongValue);

  uint64_t v16 = v11[2];
  if (v16)
  {
    uint64_t v31 = v13;
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v19 = v11[v17 + 4];
      uint64_t v20 = *(void *)(v19 + 16);
      swift_bridgeObjectRetain();
      if (v20
        && (unint64_t v21 = sub_19EEBD400(100, 0xE100000000000000), (v22 & 1) != 0)
        && (sub_19EEBDBA4(*(void *)(v19 + 56) + 32 * v21, (uint64_t)&v33), (swift_dynamicCast() & 1) != 0)
        && (unint64_t)v15 < *(void *)&v32[0]
        && *(void *)(v19 + 16)
        && (unint64_t v23 = sub_19EEBD400(115, 0xE100000000000000), (v24 & 1) != 0))
      {
        sub_19EEBDBA4(*(void *)(v19 + 56) + 32 * v23, (uint64_t)&v33);
        char v25 = swift_dynamicCast();
        if ((v25 & 1) == 0) {
          *(void *)&v32[0] = 0;
        }
        BYTE8(v32[0]) = v25 ^ 1;
      }
      else
      {
        *(void *)&v32[0] = 0;
        BYTE8(v32[0]) = 1;
      }
      swift_bridgeObjectRelease();
      if ((BYTE8(v32[0]) & 1) == 0)
      {
        uint64_t v26 = *(void *)&v32[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v18 = sub_19F09D164(0, v18[2] + 1, 1, v18);
        }
        unint64_t v28 = v18[2];
        unint64_t v27 = v18[3];
        if (v28 >= v27 >> 1) {
          unint64_t v18 = sub_19F09D164((void *)(v27 > 1), v28 + 1, 1, v18);
        }
        JSValueRef v18[2] = v28 + 1;
        v18[v28 + 4] = v26;
      }
      ++v17;
    }
    while (v16 != v17);
    swift_bridgeObjectRelease();
    uint64_t v13 = v31;
  }
  else
  {
    unint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  if (v18[2])
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB3907D0);
    *(void *)&long long v33 = v18;
    sub_19EEBDC00(&v33, v32);
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v32, 0x6973736572706D69, 0xEF73656D69546E6FLL, v29);
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t static ImpressionsTracking.serializeImpressions(on:from:within:in:on:)(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 *a4, uint64_t a5, double a6)
{
  unsigned __int8 v7 = *a4;
  return _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(a1, a2, a3, &v7, a5, MEMORY[0x1E4FBC860], a6);
}

uint64_t sub_19F1D6A28(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD70);
  uint64_t result = sub_19F1DD04C();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v29 = a3;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v9 = a3 + 64;
  uint64_t v8 = v10;
  uint64_t v11 = 1 << *(unsigned char *)(v9 - 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v8;
  uint64_t v25 = v9;
  int64_t v26 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v27 = result + 64;
  if ((v12 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v7 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v29 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v31 = *(void *)(*(void *)(v29 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v30, &v31);
    uint64_t result = swift_bridgeObjectRelease();
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (uint64_t)v6;
    }
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    char v22 = (void *)(v6[6] + 16 * i);
    *char v22 = v20;
    v22[1] = v21;
    *(void *)(v6[7] + 8 * i) = v30;
    uint64_t v23 = v6[2];
    BOOL v16 = __OFADD__(v23, 1);
    uint64_t v24 = v23 + 1;
    if (v16)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    _OWORD v6[2] = v24;
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v16 = __OFADD__(v7++, 1);
    if (v16) {
      goto LABEL_27;
    }
    if (v7 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v7);
    if (!v17) {
      break;
    }
LABEL_15:
    unint64_t v13 = (v17 - 1) & v17;
  }
  int64_t v18 = v7 + 1;
  if (v7 + 1 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 2;
  if (v7 + 2 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  int64_t v18 = v7 + 3;
  if (v7 + 3 >= v26) {
    return (uint64_t)v6;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17)
  {
LABEL_14:
    int64_t v7 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v26) {
      return (uint64_t)v6;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_19F1D6C6C(unint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_19EFAAF98(a2);
  swift_bridgeObjectRelease();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v6 = (void *)sub_19EFB493C(MEMORY[0x1E4FBC860]);
  unint64_t v7 = sub_19EFB4A98(v5);
  if (a1 >> 62) {
    goto LABEL_44;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_19F1DD03C())
  {
    if (v8 < 1)
    {
      __break(1u);
LABEL_48:
      uint64_t result = sub_19F1DD65C();
      __break(1u);
      return result;
    }
    long long v46 = v6;
    uint64_t v9 = 0;
    uint64_t v6 = (void *)(a1 & 0xC000000000000001);
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v11 = 1;
    uint64_t v42 = v4;
    uint64_t v43 = (void *)a1;
    unint64_t v44 = a1 & 0xC000000000000001;
    uint64_t v45 = v8;
    while (1)
    {
      if (v6)
      {
        uint64_t v13 = MEMORY[0x19F3C7060](v9, a1);
      }
      else
      {
        uint64_t v13 = *(void *)(a1 + 8 * v9 + 32);
        swift_retain();
      }
      swift_beginAccess();
      long long v14 = *(_OWORD *)(v13 + 32);
      v49[0] = *(_OWORD *)(v13 + 16);
      v49[1] = v14;
      v49[2] = *(_OWORD *)(v13 + 48);
      uint64_t v50 = *(void *)(v13 + 64);
      sub_19EE89A74((uint64_t)v49);
      char v15 = sub_19EF572E0((uint64_t *)v49, v4);
      sub_19EE89AC0((uint64_t)v49);
      if (v15) {
        break;
      }
      swift_retain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_19F09D27C(0, v10[2] + 1, 1, v10);
      }
      unint64_t v17 = v10[2];
      unint64_t v16 = v10[3];
      if (v17 >= v16 >> 1) {
        uint64_t v10 = sub_19F09D27C((void *)(v16 > 1), v17 + 1, 1, v10);
      }
      void v10[2] = v17 + 1;
      int64_t v18 = &v10[2 * v17];
      void v18[4] = v13;
      v18[5] = v11;
      uint64_t v19 = *(void *)(v13 + 112);
      if (v19)
      {
        uint64_t v20 = *(void *)(v13 + 104);
        swift_retain();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v48 = v46;
        sub_19EFBBEBC(v13, v11, v20, v19, isUniquelyReferenced_nonNull_native);
        long long v46 = v48;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v7 + 16))
      {
        uint64_t v23 = *(void *)(v13 + 32);
        uint64_t v22 = *(void *)(v13 + 40);
        swift_bridgeObjectRetain();
        unint64_t v24 = sub_19EEBD400(v23, v22);
        uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
        if (v25)
        {
          uint64_t v6 = *(void **)(*(void *)(v7 + 56) + 8 * v24);
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
      }
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_19F09D27C(0, v6[2] + 1, 1, v6);
      }
      unint64_t v27 = v6[2];
      unint64_t v26 = v6[3];
      long long v47 = v10;
      if (v27 >= v26 >> 1) {
        uint64_t v6 = sub_19F09D27C((void *)(v26 > 1), v27 + 1, 1, v6);
      }
      _OWORD v6[2] = v27 + 1;
      unint64_t v28 = &v6[2 * v27];
      void v28[4] = v13;
      void v28[5] = v11;
      uint64_t v29 = *(void *)(v13 + 32);
      uint64_t v4 = *(void *)(v13 + 40);
      swift_bridgeObjectRetain();
      a1 = v7;
      unint64_t v7 = swift_isUniquelyReferenced_nonNull_native();
      long long v48 = (void *)a1;
      unint64_t v31 = sub_19EEBD400(v29, v4);
      uint64_t v32 = *(void *)(a1 + 16);
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_41;
      }
      char v35 = v30;
      if (*(void *)(a1 + 24) >= v34)
      {
        if (v7)
        {
          unint64_t v7 = (unint64_t)v48;
          if ((v30 & 1) == 0) {
            goto LABEL_35;
          }
        }
        else
        {
          a1 = (unint64_t)&v48;
          sub_19EFBD730();
          unint64_t v7 = (unint64_t)v48;
          if ((v35 & 1) == 0) {
            goto LABEL_35;
          }
        }
      }
      else
      {
        sub_19EFB7C34(v34, v7);
        a1 = (unint64_t)v48;
        unint64_t v36 = sub_19EEBD400(v29, v4);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_48;
        }
        unint64_t v31 = v36;
        unint64_t v7 = (unint64_t)v48;
        if ((v35 & 1) == 0)
        {
LABEL_35:
          *(void *)(v7 + 8 * (v31 >> 6) + 64) |= 1 << v31;
          long long v38 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v31);
          *long long v38 = v29;
          v38[1] = v4;
          *(void *)(*(void *)(v7 + 56) + 8 * v31) = v6;
          uint64_t v39 = *(void *)(v7 + 16);
          BOOL v12 = __OFADD__(v39, 1);
          uint64_t v40 = v39 + 1;
          if (v12) {
            goto LABEL_43;
          }
          *(void *)(v7 + 16) = v40;
          swift_bridgeObjectRetain();
          goto LABEL_37;
        }
      }
      *(void *)(*(void *)(v7 + 56) + 8 * v31) = v6;
      swift_bridgeObjectRelease();
LABEL_37:
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL v12 = __OFADD__(v11++, 1);
      uint64_t v6 = (void *)v44;
      uint64_t v8 = v45;
      uint64_t v10 = v47;
      if (v12) {
        goto LABEL_42;
      }
      uint64_t v4 = v42;
      a1 = (unint64_t)v43;
LABEL_6:
      if (v8 == ++v9)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v10;
      }
    }
    swift_release();
    BOOL v12 = __OFADD__(v11++, 1);
    if (!v12) {
      goto LABEL_6;
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

unint64_t sub_19F1D7130(double a1, double a2)
{
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_serverTimeFromTimeInterval_, a1);
  uint64_t v6 = objc_msgSend(v5, sel_unsignedLongLongValue);

  id v7 = objc_msgSend(v4, sel_serverTimeFromTimeInterval_, a2);
  uint64_t v8 = objc_msgSend(v7, sel_unsignedLongLongValue);

  if (v8 >= v6) {
    int64_t v9 = v8 - v6;
  }
  else {
    int64_t v9 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_19F24EB80;
  *(void *)(inited + 32) = 115;
  *(void *)(inited + 4sub_19EE4AC98(25, 0) = 0xE100000000000000;
  uint64_t v11 = MEMORY[0x1E4FBC538];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 8sub_19EE4AC98(25, 0) = 100;
  *(void *)(inited + 12sub_19EE4AC98(25, 0) = v11;
  *(void *)(inited + 88) = 0xE100000000000000;
  *(void *)(inited + 96) = v9;
  return sub_19EEBF898(inited);
}

void *sub_19F1D7234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_19F1DB57C();
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  char v37 = v8;
  uint64_t v38 = a2;
  uint64_t v39 = v6;
  uint64_t v40 = v5;
  swift_bridgeObjectRetain();
  double v10 = 0.0;
  uint64_t v11 = a1 + 56;
  BOOL v12 = (void *)MEMORY[0x1E4FBC860];
  double v13 = 0.0;
  char v14 = 1;
  long long v41 = xmmword_19F24EB80;
  char v15 = 1;
  do
  {
    double v16 = *(double *)(v11 - 16);
    if (*(unsigned char *)(v11 - 24))
    {
      if ((v15 & 1) == 0) {
        double v10 = *(double *)(v11 - 16);
      }
      v14 &= v15;
    }
    else
    {
      if (v15)
      {
        char v15 = 0;
        double v13 = *(double *)(v11 - 16);
        goto LABEL_6;
      }
      if (v14) {
        goto LABEL_13;
      }
      if (v16 - v10 < 0.0166666667)
      {
        double v10 = 0.0;
LABEL_13:
        char v15 = 0;
        char v14 = 1;
        goto LABEL_6;
      }
      if (v10 - v13 <= 0.0166666667)
      {
        double v10 = 0.0;
        char v15 = 0;
        char v14 = 1;
        double v13 = *(double *)(v11 - 16);
      }
      else
      {
        unint64_t v17 = self;
        swift_bridgeObjectRetain();
        id v18 = objc_msgSend(v17, sel_serverTimeFromTimeInterval_, v13);
        uint64_t v19 = objc_msgSend(v18, sel_unsignedLongLongValue);

        id v20 = objc_msgSend(v17, sel_serverTimeFromTimeInterval_, v10);
        uint64_t v21 = objc_msgSend(v20, sel_unsignedLongLongValue);

        if (v21 >= v19) {
          int64_t v22 = v21 - v19;
        }
        else {
          int64_t v22 = 0;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392D20);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v41;
        *(void *)(inited + 32) = 115;
        *(void *)(inited + 4sub_19EE4AC98(25, 0) = 0xE100000000000000;
        *(void *)(inited + 48) = v19;
        uint64_t v24 = MEMORY[0x1E4FBC538];
        *(void *)(inited + 72) = MEMORY[0x1E4FBC538];
        *(void *)(inited + 8sub_19EE4AC98(25, 0) = 100;
        *(void *)(inited + 12sub_19EE4AC98(25, 0) = v24;
        *(void *)(inited + 88) = 0xE100000000000000;
        *(void *)(inited + 96) = v22;
        unint64_t v25 = sub_19EEBF898(inited);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          BOOL v12 = sub_19F09D040(0, v12[2] + 1, 1, v12);
        }
        unint64_t v27 = v12[2];
        unint64_t v26 = v12[3];
        if (v27 >= v26 >> 1) {
          BOOL v12 = sub_19F09D040((void *)(v26 > 1), v27 + 1, 1, v12);
        }
        v12[2] = v27 + 1;
        v12[v27 + 4] = v25;
        swift_bridgeObjectRelease();
        double v10 = 0.0;
        char v15 = 0;
        char v14 = 1;
        double v13 = v16;
      }
    }
LABEL_6:
    v11 += 32;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    uint64_t v28 = v39;
    uint64_t v29 = v37;
    uint64_t v30 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v37, v38, v40);
    if (v14)
    {
      sub_19F1DB52C();
      double v32 = v31;
    }
    else
    {
      double v32 = v10;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
    unint64_t v33 = sub_19F1D7130(v13, v32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v12 = sub_19F09D040(0, v12[2] + 1, 1, v12);
    }
    unint64_t v35 = v12[2];
    unint64_t v34 = v12[3];
    if (v35 >= v34 >> 1) {
      BOOL v12 = sub_19F09D040((void *)(v34 > 1), v35 + 1, 1, v12);
    }
    v12[2] = v35 + 1;
    v12[v35 + 4] = v33;
  }
  return v12;
}

uint64_t sub_19F1D764C(uint64_t a1)
{
  int64_t v1 = (void *)MEMORY[0x1E4FBC868];
  double v31 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (uint64_t)v1;
  }
  for (unint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
  {
    char v5 = *((unsigned char *)i - 24);
    uint64_t v6 = *(i - 2);
    uint64_t v8 = *(i - 1);
    uint64_t v7 = *i;
    swift_bridgeObjectRetain_n();
    unint64_t v10 = sub_19EEBD400(v8, v7);
    uint64_t v11 = v1[2];
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      break;
    }
    char v14 = v9;
    if (v1[3] < v13)
    {
      sub_19EFB7C28(v13, 1);
      int64_t v1 = v31;
      unint64_t v15 = sub_19EEBD400(v8, v7);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_19;
      }
      unint64_t v10 = v15;
    }
    if (v14)
    {
      char v30 = v5;
      swift_bridgeObjectRelease();
      uint64_t v17 = v1[7];
      id v18 = *(void **)(v17 + 8 * v10);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v17 + 8 * v1sub_19EE4AC98(25, 0) = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        id v18 = sub_19EE8A2B4(0, v18[2] + 1, 1, v18);
        *(void *)(v17 + 8 * v1sub_19EE4AC98(25, 0) = v18;
      }
      unint64_t v21 = v18[2];
      unint64_t v20 = v18[3];
      unint64_t v22 = v21 + 1;
      if (v21 >= v20 >> 1)
      {
        uint64_t v23 = sub_19EE8A2B4((void *)(v20 > 1), v21 + 1, 1, v18);
        unint64_t v22 = v21 + 1;
        id v18 = v23;
        *(void *)(v17 + 8 * v1sub_19EE4AC98(25, 0) = v23;
      }
      JSValueRef v18[2] = v22;
      uint64_t v4 = &v18[4 * v21];
      *((unsigned char *)v4 + 32) = v30;
      uint64_t v4[5] = v6;
      v4[6] = v8;
      v4[7] = v7;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EB390878);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_19F24EAD0;
      *(unsigned char *)(v24 + 32) = v5;
      *(void *)(v24 + 4sub_19EE4AC98(25, 0) = v6;
      *(void *)(v24 + 48) = v8;
      *(void *)(v24 + 56) = v7;
      v1[(v10 >> 6) + 8] |= 1 << v10;
      unint64_t v25 = (uint64_t *)(v1[6] + 16 * v10);
      *unint64_t v25 = v8;
      v25[1] = v7;
      *(void *)(v1[7] + 8 * v1sub_19EE4AC98(25, 0) = v24;
      uint64_t v26 = v1[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27) {
        goto LABEL_18;
      }
      void v1[2] = v28;
    }
    if (!--v2) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_19F1DD65C();
  __break(1u);
  return result;
}

uint64_t sub_19F1D788C(uint64_t result, char a2, void *a3)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v6 = (void *)swift_bridgeObjectRetain();
    uint64_t v8 = v6[4];
    uint64_t v7 = v6[5];
    unint64_t v44 = v6;
    uint64_t v9 = v6[6];
    unint64_t v10 = (void *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_19EEBD400(v8, v7);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    char v16 = v11;
    if (v10[3] < v15)
    {
      sub_19EFB7C28(v15, a2 & 1);
      unint64_t v17 = sub_19EEBD400(v8, v7);
      if ((v16 & 1) != (v18 & 1))
      {
LABEL_27:
        uint64_t result = sub_19F1DD65C();
        __break(1u);
        return result;
      }
      unint64_t v12 = v17;
      uint64_t v19 = (void *)*a3;
      if ((v16 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      uint64_t v45 = *(void *)(v19[7] + 8 * v12);
      swift_bridgeObjectRetain();
      sub_19EF5DAF4(v9);
      swift_bridgeObjectRelease();
      uint64_t v20 = v19[7];
      swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v12) = v45;
      uint64_t v21 = v3 - 1;
      if (v3 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      for (unint64_t i = v44 + 9; ; i += 3)
      {
        uint64_t v30 = *(i - 2);
        uint64_t v29 = *(i - 1);
        uint64_t v31 = *i;
        double v32 = (void *)*a3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v33 = sub_19EEBD400(v30, v29);
        uint64_t v35 = v32[2];
        BOOL v36 = (v34 & 1) == 0;
        BOOL v24 = __OFADD__(v35, v36);
        uint64_t v37 = v35 + v36;
        if (v24) {
          break;
        }
        char v38 = v34;
        if (v32[3] < v37)
        {
          sub_19EFB7C28(v37, 1);
          unint64_t v33 = sub_19EEBD400(v30, v29);
          if ((v38 & 1) != (v39 & 1)) {
            goto LABEL_27;
          }
        }
        uint64_t v40 = (void *)*a3;
        if (v38)
        {
          uint64_t v27 = 8 * v33;
          uint64_t v46 = *(void *)(v40[7] + 8 * v33);
          swift_bridgeObjectRetain();
          sub_19EF5DAF4(v31);
          swift_bridgeObjectRelease();
          uint64_t v28 = v40[7];
          swift_bridgeObjectRelease();
          *(void *)(v28 + v27) = v46;
        }
        else
        {
          v40[(v33 >> 6) + 8] |= 1 << v33;
          long long v41 = (uint64_t *)(v40[6] + 16 * v33);
          *long long v41 = v30;
          v41[1] = v29;
          *(void *)(v40[7] + 8 * v33) = v31;
          uint64_t v42 = v40[2];
          BOOL v24 = __OFADD__(v42, 1);
          uint64_t v43 = v42 + 1;
          if (v24) {
            goto LABEL_26;
          }
          v40[2] = v43;
        }
        if (!--v21) {
          return swift_bridgeObjectRelease();
        }
      }
      goto LABEL_25;
    }
    if (a2)
    {
      uint64_t v19 = (void *)*a3;
      if (v11) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_19EFBD724();
      uint64_t v19 = (void *)*a3;
      if (v16) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v19[(v12 >> 6) + 8] |= 1 << v12;
    unint64_t v22 = (uint64_t *)(v19[6] + 16 * v12);
    *unint64_t v22 = v8;
    v22[1] = v7;
    *(void *)(v19[7] + 8 * v12) = v9;
    uint64_t v23 = v19[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    _OWORD v19[2] = v25;
    uint64_t v21 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_19F1D7B68(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 72);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v23 = v5;
  *((void *)&v23 + 1) = v6;
  sub_19EEBDC00(&v23, v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = v4;
  sub_19EE7DA20(v22, 25705, 0xE200000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v8 = v4;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_19F1D764C(v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_19F1D6060(v10);
  swift_bridgeObjectRelease();
  if (*(void *)(v11 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD68);
    uint64_t v12 = sub_19F1DD06C();
  }
  else
  {
    uint64_t v12 = MEMORY[0x1E4FBC868];
  }
  *(void *)&long long v23 = v12;
  sub_19F1D788C(v11, 1, &v23);
  uint64_t v13 = swift_bridgeObjectRelease();
  uint64_t v14 = v23;
  MEMORY[0x1F4188790](v13);
  _OWORD v19[2] = v2;
  void v19[3] = a1;
  uint64_t v15 = sub_19F1D6A28((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19F1DAA20, (uint64_t)v19, v14);
  swift_release();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1E946CD30);
  *(void *)&long long v23 = v15;
  sub_19EEBDC00(&v23, v22);
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = v8;
  sub_19EE7DA20(v22, 0xD000000000000012, 0x800000019F276CF0, v16);
  uint64_t v17 = v20;
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_19F1D7D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result = _s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0();
  if (result)
  {
    uint64_t v9 = *a4;
    if (*(void *)(*a4 + 16)
      && (unint64_t v10 = sub_19EEBD400(0x6775626564, 0xE500000000000000), (v11 & 1) != 0)
      && (sub_19EEBDBA4(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v17),
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0),
          swift_dynamicCast()))
    {
      unint64_t v12 = v15;
    }
    else
    {
      unint64_t v12 = sub_19EEBF898(MEMORY[0x1E4FBC860]);
    }
    sub_19EEBCD00(a3, (uint64_t)&v15);
    if (v16)
    {
      sub_19EEBDC00(&v15, &v17);
    }
    else
    {
      id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA98]), sel_init);
      unint64_t v18 = sub_19F0D0CEC();
      *(void *)&long long v17 = v13;
      sub_19EEBCB4C((uint64_t)&v15);
    }
    sub_19EEBDC00(&v17, &v15);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(&v15, a1, a2, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB392CD0);
    *(void *)&long long v17 = v12;
    return sub_19EE7D94C((uint64_t)&v17, 0x6775626564, 0xE500000000000000);
  }
  return result;
}

uint64_t sub_19F1D7F24(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = result + 40;
    uint64_t v30 = -(uint64_t)v4;
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v26 = result + 40;
    unint64_t v27 = *(void *)(result + 16);
    while (1)
    {
      uint64_t v28 = v7;
      if (v5 <= v4) {
        unint64_t v8 = v4;
      }
      else {
        unint64_t v8 = v5;
      }
      uint64_t v31 = -(uint64_t)v8;
      for (unint64_t i = (uint64_t *)(v6 + 16 * v5++); ; i += 2)
      {
        if (v31 + v5 == 1)
        {
          __break(1u);
          return result;
        }
        unint64_t v10 = (void *)*(i - 1);
        uint64_t v29 = *i;
        uint64_t result = swift_beginAccess();
        uint64_t v11 = v10[2];
        uint64_t v12 = v10[3];
        uint64_t v14 = v10[4];
        uint64_t v13 = v10[5];
        uint64_t v15 = v10[7];
        uint64_t v16 = v10[8];
        if (v14 != a2 || v13 != a3)
        {
          uint64_t result = sub_19F1DD44C();
          if ((result & 1) == 0) {
            goto LABEL_7;
          }
        }
        if (v14 != a4[2] || v13 != a4[3])
        {
          uint64_t result = sub_19F1DD44C();
          if ((result & 1) == 0) {
            goto LABEL_35;
          }
        }
        uint64_t v19 = a4[1];
        if (v12)
        {
          if (!v19) {
            goto LABEL_36;
          }
          if (v11 != *a4 || v12 != v19)
          {
            uint64_t result = sub_19F1DD44C();
            if ((result & 1) == 0) {
              goto LABEL_36;
            }
          }
        }
        else if (v19)
        {
          goto LABEL_41;
        }
        uint64_t v21 = a4[6];
        if (v16) {
          break;
        }
        if (v21) {
          goto LABEL_35;
        }
LABEL_7:
        ++v5;
        if (v30 + v5 == 1) {
          return v28;
        }
      }
      if (v21)
      {
        if (v15 == a4[5] && v16 == v21) {
          goto LABEL_7;
        }
        uint64_t result = sub_19F1DD44C();
        if (result) {
          goto LABEL_7;
        }
      }
LABEL_35:
      if (!v12) {
        goto LABEL_41;
      }
LABEL_36:
      if (v14 == v11 && v12 == v13) {
        goto LABEL_7;
      }
      uint64_t result = sub_19F1DD44C();
      if (result) {
        goto LABEL_7;
      }
LABEL_41:
      swift_retain();
      uint64_t v7 = v28;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_19EFF6430(0, *(void *)(v28 + 16) + 1, 1);
        uint64_t v7 = v28;
      }
      unint64_t v24 = *(void *)(v7 + 16);
      unint64_t v23 = *(void *)(v7 + 24);
      if (v24 >= v23 >> 1)
      {
        uint64_t result = sub_19EFF6430(v23 > 1, v24 + 1, 1);
        uint64_t v7 = v28;
      }
      *(void *)(v7 + 16) = v24 + 1;
      uint64_t v25 = v7 + 16 * v24;
      *(void *)(v25 + 32) = v10;
      *(void *)(v25 + 4sub_19EE4AC98(25, 0) = v29;
      uint64_t v6 = v26;
      unint64_t v4 = v27;
      if (!(v30 + v5)) {
        return v7;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_19F1D81B4(unsigned char *a1, uint64_t a2, void *a3, double a4)
{
  if (*a1)
  {
    if (*a1 == 1)
    {
      uint64_t v5 = sub_19F1D6628(a2, a4);
      if (!v5) {
        return v5;
      }
    }
    else
    {
      uint64_t v5 = sub_19F1D7B68(a2);
      if (!v5) {
        return v5;
      }
    }
  }
  else
  {
    uint64_t v5 = sub_19F1D62B0(a2, a4);
    if (!v5) {
      return v5;
    }
  }
  uint64_t v12 = v5;
  if (_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0())
  {
    swift_beginAccess();
    uint64_t v6 = a3[3];
    if (v6)
    {
      uint64_t v7 = a3[2];
      *((void *)&v11 + 1) = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v10 = v7;
      *((void *)&v10 + 1) = v6;
    }
    else
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    swift_bridgeObjectRetain();
    sub_19F1D7D88(0x6449746E65726170, 0xE800000000000000, (uint64_t)&v10, &v12);
    sub_19EEBCB4C((uint64_t)&v10);
    uint64_t v8 = a3[6];
    if (v8 == -1)
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    else
    {
      *((void *)&v11 + 1) = MEMORY[0x1E4FBB550];
      *(void *)&long long v10 = v8;
    }
    sub_19F1D7D88(0xD000000000000015, 0x800000019F276CD0, (uint64_t)&v10, &v12);
    sub_19EEBCB4C((uint64_t)&v10);
    return v12;
  }
  return v5;
}

uint64_t sub_19F1D82F4(uint64_t a1, void *a2)
{
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v2 = 0;
    uint64_t v20 = a2[4];
    uint64_t v3 = a2[6];
    uint64_t v14 = a2[8];
    uint64_t v15 = a2[3];
    unint64_t v4 = (uint64_t *)(a1 + 48);
    uint64_t v17 = a2[9];
    uint64_t v18 = a2[5];
    uint64_t v19 = v3;
    while (1)
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      uint64_t v8 = v4[1];
      uint64_t v7 = v4[2];
      uint64_t v10 = v4[4];
      uint64_t v9 = v4[5];
      if (!v3)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        sub_19EE89208(v6, v5, v8, v7);
        sub_19EE89208(0, 0, 0, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 != v18 || v3 != v7)
      {
        uint64_t v3 = v19;
        if ((sub_19F1DD44C() & 1) == 0) {
          break;
        }
      }
      if (v5)
      {
        if (!v20) {
          break;
        }
        if (v6 != v15 || v5 != v20)
        {
          uint64_t v3 = v19;
          if ((sub_19F1DD44C() & 1) == 0) {
            break;
          }
        }
      }
      else if (v20)
      {
        break;
      }
      char v12 = (v9 | v17) == 0;
      if (v9 && v17)
      {
        if (v10 == v14 && v9 == v17)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_19EE89208(v15, v20, v18, v19);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          return v2;
        }
        char v12 = sub_19F1DD44C();
      }
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_19EE89208(v15, v20, v18, v19);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if (v12) {
        return v2;
      }
LABEL_5:
      v4 += 8;
      ++v2;
      uint64_t v3 = v19;
      if (v16 == v2) {
        return 0;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_19EE89208(v15, v20, v18, v3);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_5;
  }
  return 0;
}

uint64_t sub_19F1D865C(unint64_t a1, unint64_t a2, uint64_t a3, char *a4, uint64_t a5, int a6, double a7)
{
  char v89 = *a4;
  uint64_t v11 = sub_19F1D6C6C(a1, MEMORY[0x1E4FBC860]);
  uint64_t v91 = v12;
  uint64_t v92 = v13;
  if (a2 >> 62) {
    goto LABEL_94;
  }
  uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v14)
  {
LABEL_95:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_96;
  }
LABEL_3:
  unint64_t v15 = 0;
  uint64_t v16 = 0;
  unint64_t v100 = a2 & 0xC000000000000001;
  uint64_t v97 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v94 = (uint64_t *)(v11 + 40);
  unint64_t v95 = a2;
  uint64_t v96 = a3;
  uint64_t v98 = v11;
  uint64_t v99 = v14;
  int v93 = a6;
  do
  {
    if (v100)
    {
      uint64_t v18 = MEMORY[0x19F3C7060](v15, a2);
      BOOL v19 = __OFADD__(v15, 1);
      unint64_t v20 = v15 + 1;
      if (v19) {
        goto LABEL_92;
      }
    }
    else
    {
      if (v15 >= *(void *)(v97 + 16)) {
        goto LABEL_93;
      }
      uint64_t v18 = swift_retain();
      BOOL v19 = __OFADD__(v15, 1);
      unint64_t v20 = v15 + 1;
      if (v19)
      {
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_19F1DD03C();
        if (!v14) {
          goto LABEL_95;
        }
        goto LABEL_3;
      }
    }
    unint64_t v101 = v20;
    long long v102 = v17;
    uint64_t v21 = *(void *)(v18 + 104);
    uint64_t v108 = (void *)v18;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v21 + 20));
    sub_19EEC4E5C((unsigned char *)(v21 + 16), &v113);
    uint64_t v103 = v16;
    os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 20));
    swift_release();
    if ((_BYTE)v113) {
      goto LABEL_41;
    }
    uint64_t v22 = *(void *)(v11 + 16);
    if (!v22) {
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    unint64_t v23 = v94;
    while (1)
    {
      uint64_t v25 = (void *)*(v23 - 1);
      uint64_t v24 = *v23;
      swift_beginAccess();
      uint64_t v26 = v25[2];
      uint64_t v27 = v25[4];
      uint64_t v28 = v25[5];
      uint64_t v29 = v108[6];
      if (!v29)
      {
        uint64_t v38 = v25[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_19EE89208(v26, v38, v27, v28);
        sub_19EE89208(0, 0, 0, 0);
        goto LABEL_17;
      }
      uint64_t v104 = v24;
      uint64_t v105 = v25[7];
      uint64_t v107 = v25[8];
      uint64_t v30 = v108[9];
      uint64_t v106 = v108[8];
      uint64_t v31 = v108[5];
      uint64_t v109 = v108[3];
      uint64_t v110 = v108[4];
      uint64_t v32 = v25[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v33 = v32;
      if (v27 != v31 || v29 != v28)
      {
        char v35 = sub_19F1DD44C();
        uint64_t v33 = v32;
        if ((v35 & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v33) {
        break;
      }
      if (!v110) {
        goto LABEL_31;
      }
LABEL_16:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19EE89208(v109, v110, v31, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_17:
      v23 += 2;
      swift_release();
      if (!--v22)
      {
        uint64_t v11 = v98;
        swift_bridgeObjectRelease();
        a2 = v95;
        a3 = v96;
        a6 = v93;
LABEL_40:
        uint64_t v14 = v99;
LABEL_41:
        uint64_t v39 = MEMORY[0x1E4FBC868];
        uint64_t v17 = v102;
        if ((a6 & 1) == 0) {
          goto LABEL_42;
        }
        swift_release();
        uint64_t v16 = v103;
        goto LABEL_5;
      }
    }
    if (!v110) {
      goto LABEL_16;
    }
    BOOL v36 = v26 == v109 && v33 == v110;
    if (!v36 && (sub_19F1DD44C() & 1) == 0) {
      goto LABEL_16;
    }
LABEL_31:
    char v37 = v30 == 0;
    if (!v107) {
      goto LABEL_37;
    }
    if (!v30) {
      goto LABEL_16;
    }
    if (v105 != v106 || v107 != v30)
    {
      char v37 = sub_19F1DD44C();
LABEL_37:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_19EE89208(v109, v110, v31, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v37) {
        goto LABEL_79;
      }
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_19EE89208(v109, v110, v31, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_79:
    a6 = v93;
    uint64_t v11 = v98;
    swift_bridgeObjectRelease();
    LOBYTE(v113) = v89;
    uint64_t v77 = sub_19F1D81B4(&v113, a5, v25, a7);
    a2 = v95;
    a3 = v96;
    if (!v77)
    {
      swift_release();
      goto LABEL_40;
    }
    uint64_t v39 = v77;
    *((void *)&v114 + 1) = MEMORY[0x1E4FBB550];
    *(void *)&long long v113 = v104;
    sub_19EEBDC00(&v113, v111);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v111, 0x6973736572706D69, 0xEC00000064496E6FLL, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    if (v25[3])
    {
      uint64_t v79 = sub_19F1D9334((uint64_t)v25, v104, v92);
      uint64_t v17 = v102;
      if ((v80 & 1) == 0) {
        goto LABEL_82;
      }
LABEL_90:
      swift_release();
    }
    else
    {
      uint64_t v79 = sub_19F1D9D80(v25, v104, v91);
      uint64_t v17 = v102;
      if (v86) {
        goto LABEL_90;
      }
LABEL_82:
      *((void *)&v114 + 1) = MEMORY[0x1E4FBB550];
      *(void *)&long long v113 = v79;
      sub_19EEBDC00(&v113, v111);
      char v81 = swift_isUniquelyReferenced_nonNull_native();
      sub_19EE7DA20(v111, 0xD000000000000012, 0x800000019F276C30, v81);
      swift_release();
      swift_bridgeObjectRelease();
    }
LABEL_42:
    uint64_t v40 = v108[13];
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v40 + 20));
    uint64_t v16 = v103;
    sub_19EEC4E5C((unsigned char *)(v40 + 16), &v112);
    os_unfair_lock_unlock((os_unfair_lock_t)(v40 + 20));
    swift_release();
    unint64_t v41 = 0xE600000000000000;
    uint64_t v42 = 0x747265736E69;
    switch(v112)
    {
      case 1:
        unint64_t v41 = 0xE400000000000000;
        uint64_t v42 = 1702260589;
        break;
      case 2:
        uint64_t v42 = 0x6574656C6564;
        break;
      case 3:
        uint64_t v42 = 0;
        unint64_t v41 = 0xE000000000000000;
        break;
      default:
        break;
    }
    *((void *)&v114 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v113 = v42;
    *((void *)&v113 + 1) = v41;
    sub_19EEBDC00(&v113, v111);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v111, 0x795465676E616863, 0xEA00000000006570, v43);
    swift_bridgeObjectRelease();
    unint64_t v44 = v108;
    uint64_t v45 = v108[2];
    *((void *)&v114 + 1) = MEMORY[0x1E4FBB3D0];
    *(void *)&long long v113 = v45;
    sub_19EEBDC00(&v113, v111);
    char v46 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v111, 0x695465676E616863, 0xEA0000000000656DLL, v46);
    uint64_t v47 = v39;
    swift_bridgeObjectRelease();
    uint64_t v48 = 0;
    if (!v108[6])
    {
      uint64_t v49 = 0;
      if (*(void *)(a3 + 16)) {
        goto LABEL_50;
      }
LABEL_55:
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    uint64_t v49 = 0;
    if (v108[4])
    {
      uint64_t v48 = v108[3];
      uint64_t v49 = swift_bridgeObjectRetain();
    }
    if (!*(void *)(a3 + 16)) {
      goto LABEL_55;
    }
LABEL_50:
    unint64_t v50 = sub_19EFB6C18(v48, v49);
    if ((v51 & 1) == 0) {
      goto LABEL_55;
    }
    uint64_t v52 = *(void *)(*(void *)(a3 + 56) + 8 * v50);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_retain();
    unint64_t v53 = sub_19F1D82F4(v52, v108);
    char v55 = v54;
    swift_release();
    if (v55)
    {
      swift_bridgeObjectRelease();
      uint64_t v11 = v98;
      goto LABEL_56;
    }
    uint64_t v56 = v108[13];
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v56 + 20));
    sub_19EEC4E5C((unsigned char *)(v56 + 16), &v113);
    os_unfair_lock_unlock((os_unfair_lock_t)(v56 + 20));
    swift_release();
    if ((_BYTE)v113)
    {
      swift_bridgeObjectRelease();
      a3 = v96;
      goto LABEL_88;
    }
    if ((v53 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      swift_bridgeObjectRelease();
      __break(1u);
      JUMPOUT(0x19F1D9324);
    }
    if (v53 >= *(void *)(v52 + 16)) {
      goto LABEL_98;
    }
    uint64_t v69 = v52 + 32;
    *(void *)&long long v113 = *(void *)(v52 + 32 + (v53 << 6));
    uint64_t v70 = sub_19F1DD2EC();
    *((void *)&v114 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v113 = v70;
    *((void *)&v113 + 1) = v71;
    sub_19EEBDC00(&v113, v111);
    char v72 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v111, 0x6973736572706D69, 0xEF7865646E496E6FLL, v72);
    swift_bridgeObjectRelease();
    if (!v53)
    {
      a3 = v96;
      goto LABEL_85;
    }
    a3 = v96;
    if (v53 - 1 >= *(void *)(v52 + 16)) {
      goto LABEL_99;
    }
    unint64_t v73 = v69 + ((v53 - 1) << 6);
    uint64_t v74 = *(void *)(v73 + 24);
    uint64_t v75 = *(void *)(v73 + 32);
    *((void *)&v114 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v113 = v74;
    *((void *)&v113 + 1) = v75;
    sub_19EEBDC00(&v113, v111);
    swift_bridgeObjectRetain();
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v111, 0xD000000000000010, 0x800000019F276C10, v76);
    swift_bridgeObjectRelease();
LABEL_85:
    if (v53 + 1 < *(void *)(v52 + 16))
    {
      unint64_t v82 = v69 + ((v53 + 1) << 6);
      uint64_t v83 = *(void *)(v82 + 24);
      uint64_t v84 = *(void *)(v82 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *((void *)&v114 + 1) = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v113 = v83;
      *((void *)&v113 + 1) = v84;
      sub_19EEBDC00(&v113, v111);
      char v85 = swift_isUniquelyReferenced_nonNull_native();
      sub_19EE7DA20(v111, 0xD000000000000011, 0x800000019F276BF0, v85);
    }
    swift_bridgeObjectRelease();
LABEL_88:
    uint64_t v11 = v98;
    uint64_t v16 = v103;
    unint64_t v44 = v108;
LABEL_56:
    uint64_t v57 = v44[14];
    if (v57)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v58 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v113 = v47;
      sub_19EEBCFC4(v57, (uint64_t)sub_19EEBD6C0, 0, v58, (uint64_t)&v113);
      uint64_t v59 = v113;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v59 = v47;
    }
    uint64_t v60 = v44[6];
    uint64_t v14 = v99;
    if (v60)
    {
      uint64_t v61 = v44[5];
      *((void *)&v114 + 1) = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v113 = v61;
      *((void *)&v113 + 1) = v60;
      sub_19EEBDC00(&v113, v111);
      swift_bridgeObjectRetain();
      char v62 = swift_isUniquelyReferenced_nonNull_native();
      sub_19EE7DA20(v111, 25705, 0xE200000000000000, v62);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v63 = sub_19EEBD400(25705, 0xE200000000000000);
      char v65 = v64;
      swift_bridgeObjectRelease();
      if (v65)
      {
        char v66 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&long long v113 = v59;
        if ((v66 & 1) == 0)
        {
          sub_19EE7DBE0();
          uint64_t v59 = v113;
        }
        swift_bridgeObjectRelease();
        sub_19EEBDC00((_OWORD *)(*(void *)(v59 + 56) + 32 * v63), v111);
        sub_19EF6BF40(v63, v59);
        swift_bridgeObjectRelease();
        sub_19EEBDC00(v111, &v113);
      }
      else
      {
        long long v113 = 0u;
        long long v114 = 0u;
      }
      sub_19EEBCB4C((uint64_t)&v113);
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v17 = sub_19F09D040(0, v17[2] + 1, 1, v17);
    }
    unint64_t v68 = v17[2];
    unint64_t v67 = v17[3];
    if (v68 >= v67 >> 1) {
      uint64_t v17 = sub_19F09D040((void *)(v67 > 1), v68 + 1, 1, v17);
    }
    uint64_t v17[2] = v68 + 1;
    v17[v68 + 4] = v59;
    swift_release();
LABEL_5:
    unint64_t v15 = v101;
  }
  while (v101 != v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_96:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v87 = sub_19EFA5354((uint64_t)v17);
  swift_bridgeObjectRelease();
  return v87;
}

uint64_t sub_19F1D9334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  unint64_t v6 = *(void *)(a1 + 24);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 64);
  v104[0] = v7;
  v104[1] = v6;
  uint64_t v89 = a2;
  uint64_t v90 = v8;
  v104[2] = v8;
  v104[3] = v9;
  long long v105 = *(_OWORD *)(a1 + 48);
  uint64_t v106 = v10;
  uint64_t v11 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  if (!v11)
  {
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t v14 = MEMORY[0x1E4FBC860];
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_19EEBD400(v7, v6);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v14 = *(void *)(*(void *)(a3 + 56) + 8 * v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_19F1D7F24(v14, v7, v6, v104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t v16 = *(void *)(v15 + 16);
  if (v16 < 2)
  {
    uint64_t v18 = v15;
    if (v16) {
      goto LABEL_48;
    }
    goto LABEL_50;
  }
  uint64_t v85 = v7;
  char v86 = v9;
  unint64_t v87 = v6;
  swift_retain();
  unint64_t v6 = 0;
  uint64_t v17 = v15 + 40;
  uint64_t v7 = -(uint64_t)v16;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  do
  {
    if (v6 <= v16) {
      unint64_t v19 = v16;
    }
    else {
      unint64_t v19 = v6;
    }
    uint64_t v20 = -(uint64_t)v19;
    uint64_t v9 = (void *)(v17 + 16 * v6++);
    while (1)
    {
      if (v20 + v6 == 1)
      {
        __break(1u);
        goto LABEL_67;
      }
      uint64_t v22 = *(v9 - 1);
      uint64_t v21 = *v9;
      uint64_t v23 = *(void *)(a1 + 96);
      uint64_t v24 = *(void *)(v22 + 96);
      if (v23) {
        break;
      }
      if (!v24) {
        goto LABEL_24;
      }
LABEL_15:
      ++v6;
      v9 += 2;
      if (v6 - v16 == 1) {
        goto LABEL_32;
      }
    }
    if (!v24) {
      goto LABEL_15;
    }
    BOOL v25 = *(void *)(a1 + 88) == *(void *)(v22 + 88) && v23 == v24;
    if (!v25 && (sub_19F1DD44C() & 1) == 0) {
      goto LABEL_15;
    }
LABEL_24:
    swift_retain();
    v101[0] = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_19EFF6430(0, *(void *)(v18 + 16) + 1, 1);
      uint64_t v18 = v101[0];
    }
    uint64_t v26 = v18;
    unint64_t v27 = *(void *)(v18 + 16);
    unint64_t v28 = *(void *)(v26 + 24);
    if (v27 >= v28 >> 1)
    {
      sub_19EFF6430(v28 > 1, v27 + 1, 1);
      uint64_t v26 = v101[0];
    }
    *(void *)(v26 + 16) = v27 + 1;
    unint64_t v29 = v26 + 16 * v27;
    *(void *)(v29 + 32) = v22;
    *(void *)(v29 + 4sub_19EE4AC98(25, 0) = v21;
    uint64_t v18 = v26;
    uint64_t v17 = v15 + 40;
  }
  while (v6 != v16);
LABEL_32:
  swift_bridgeObjectRelease();
  swift_release();
  unint64_t v30 = *(void *)(v18 + 16);
  if (v30 < 2)
  {
    uint64_t v9 = v86;
    unint64_t v6 = v87;
    uint64_t v7 = v85;
    if (v30) {
      goto LABEL_48;
    }
    goto LABEL_50;
  }
  unint64_t v6 = v87;
  if (qword_1E946FC40 != -1) {
    swift_once();
  }
  sub_19F1DD95C();
  uint64_t v32 = v102;
  uint64_t v31 = v103;
  __swift_project_boxed_opaque_existential_1(v101, v102);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_19F24EAD0;
  unint64_t v100 = sub_19EEC3F3C(0, 70, 0, MEMORY[0x1E4FBC860]);
  v34._object = (void *)0x800000019F276C90;
  v34._uint64_t countAndFlagsBits = 0xD000000000000031;
  LogMessage.StringInterpolation.appendLiteral(_:)(v34);
  uint64_t v99 = MEMORY[0x1E4FBB550];
  uint64_t v97 = v89;
  sub_19EEBCD00((uint64_t)&v97, (uint64_t)v93);
  long long v91 = 0u;
  long long v92 = 0u;
  sub_19EEC3E70((uint64_t)v93, (uint64_t)&v91);
  char v96 = 0;
  long long v94 = v91;
  long long v95 = v92;
  char v35 = v100;
  uint64_t v9 = v86;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v35 = sub_19EEC3F3C(0, v35[2] + 1, 1, v35);
  }
  unint64_t v37 = v35[2];
  unint64_t v36 = v35[3];
  if (v37 >= v36 >> 1) {
    char v35 = sub_19EEC3F3C((void *)(v36 > 1), v37 + 1, 1, v35);
  }
  _OWORD v35[2] = v37 + 1;
  uint64_t v38 = &v35[5 * v37];
  long long v39 = v94;
  long long v40 = v95;
  *((unsigned char *)v38 + 64) = v96;
  *((_OWORD *)v38 + 2) = v39;
  *((_OWORD *)v38 + 3) = v40;
  unint64_t v100 = v35;
  sub_19EEBCB4C((uint64_t)&v97);
  v41._uint64_t countAndFlagsBits = 0x203A6469202CLL;
  v41._object = (void *)0xE600000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v41);
  uint64_t v42 = MEMORY[0x1E4FBB1A0];
  uint64_t v99 = MEMORY[0x1E4FBB1A0];
  uint64_t v97 = v90;
  uint64_t v98 = v86;
  sub_19EEBCD00((uint64_t)&v97, (uint64_t)v93);
  long long v91 = 0u;
  long long v92 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v93, (uint64_t)&v91);
  char v96 = 0;
  long long v94 = v91;
  long long v95 = v92;
  char v43 = v100;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v43 = sub_19EEC3F3C(0, v43[2] + 1, 1, v43);
  }
  unint64_t v45 = v43[2];
  unint64_t v44 = v43[3];
  if (v45 >= v44 >> 1) {
    char v43 = sub_19EEC3F3C((void *)(v44 > 1), v45 + 1, 1, v43);
  }
  _OWORD v43[2] = v45 + 1;
  char v46 = &v43[5 * v45];
  long long v47 = v94;
  long long v48 = v95;
  *((unsigned char *)v46 + 64) = v96;
  *((_OWORD *)v46 + 2) = v47;
  *((_OWORD *)v46 + 3) = v48;
  unint64_t v100 = v43;
  sub_19EEBCB4C((uint64_t)&v97);
  v49._uint64_t countAndFlagsBits = 0x746E65726170202CLL;
  v49._object = (void *)0xEC000000203A6449;
  LogMessage.StringInterpolation.appendLiteral(_:)(v49);
  uint64_t v99 = v42;
  uint64_t v7 = v85;
  uint64_t v97 = v85;
  uint64_t v98 = (void *)v87;
  sub_19EEBCD00((uint64_t)&v97, (uint64_t)v93);
  long long v91 = 0u;
  long long v92 = 0u;
  swift_bridgeObjectRetain();
  sub_19EEC3E70((uint64_t)v93, (uint64_t)&v91);
  char v96 = 0;
  long long v94 = v91;
  long long v95 = v92;
  unint64_t v50 = v100;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v50 = sub_19EEC3F3C(0, v50[2] + 1, 1, v50);
  }
  unint64_t v52 = v50[2];
  unint64_t v51 = v50[3];
  if (v52 >= v51 >> 1) {
    unint64_t v50 = sub_19EEC3F3C((void *)(v51 > 1), v52 + 1, 1, v50);
  }
  v50[2] = v52 + 1;
  unint64_t v53 = &v50[5 * v52];
  long long v54 = v94;
  long long v55 = v95;
  *((unsigned char *)v53 + 64) = v96;
  *((_OWORD *)v53 + 2) = v54;
  *((_OWORD *)v53 + 3) = v55;
  unint64_t v100 = v50;
  sub_19EEBCB4C((uint64_t)&v97);
  v56._uint64_t countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  LogMessage.StringInterpolation.appendLiteral(_:)(v56);
  *(void *)(v33 + 32) = v100;
  Logger.error(_:)(v33, v32, v31);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v101);
  if (!*(void *)(v18 + 16))
  {
LABEL_50:
    swift_bridgeObjectRelease();
    if (qword_1E946FC40 != -1) {
LABEL_67:
    }
      swift_once();
    sub_19F1DD95C();
    uint64_t v58 = v102;
    uint64_t v88 = v103;
    __swift_project_boxed_opaque_existential_1(v101, v102);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = xmmword_19F24EAD0;
    unint64_t v100 = sub_19EEC3F3C(0, 74, 0, MEMORY[0x1E4FBC860]);
    v60._uint64_t countAndFlagsBits = 0xD000000000000035;
    v60._object = (void *)0x800000019F276C50;
    LogMessage.StringInterpolation.appendLiteral(_:)(v60);
    uint64_t v99 = MEMORY[0x1E4FBB550];
    uint64_t v97 = v89;
    sub_19EEBCD00((uint64_t)&v97, (uint64_t)v93);
    long long v91 = 0u;
    long long v92 = 0u;
    sub_19EEC3E70((uint64_t)v93, (uint64_t)&v91);
    char v96 = 0;
    long long v94 = v91;
    long long v95 = v92;
    uint64_t v61 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v61 = sub_19EEC3F3C(0, v61[2] + 1, 1, v61);
    }
    unint64_t v63 = v61[2];
    unint64_t v62 = v61[3];
    uint64_t v64 = v7;
    if (v63 >= v62 >> 1) {
      uint64_t v61 = sub_19EEC3F3C((void *)(v62 > 1), v63 + 1, 1, v61);
    }
    v61[2] = v63 + 1;
    char v65 = &v61[5 * v63];
    long long v66 = v94;
    long long v67 = v95;
    *((unsigned char *)v65 + 64) = v96;
    *((_OWORD *)v65 + 2) = v66;
    *((_OWORD *)v65 + 3) = v67;
    unint64_t v100 = v61;
    sub_19EEBCB4C((uint64_t)&v97);
    v68._uint64_t countAndFlagsBits = 0x203A6469202CLL;
    v68._object = (void *)0xE600000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v68);
    uint64_t v69 = MEMORY[0x1E4FBB1A0];
    uint64_t v99 = MEMORY[0x1E4FBB1A0];
    uint64_t v97 = v90;
    uint64_t v98 = v9;
    sub_19EEBCD00((uint64_t)&v97, (uint64_t)v93);
    long long v91 = 0u;
    long long v92 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v93, (uint64_t)&v91);
    char v96 = 0;
    long long v94 = v91;
    long long v95 = v92;
    uint64_t v70 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v70 = sub_19EEC3F3C(0, v70[2] + 1, 1, v70);
    }
    unint64_t v72 = v70[2];
    unint64_t v71 = v70[3];
    if (v72 >= v71 >> 1) {
      uint64_t v70 = sub_19EEC3F3C((void *)(v71 > 1), v72 + 1, 1, v70);
    }
    v70[2] = v72 + 1;
    unint64_t v73 = &v70[5 * v72];
    long long v74 = v94;
    long long v75 = v95;
    *((unsigned char *)v73 + 64) = v96;
    *((_OWORD *)v73 + 2) = v74;
    *((_OWORD *)v73 + 3) = v75;
    unint64_t v100 = v70;
    sub_19EEBCB4C((uint64_t)&v97);
    v76._uint64_t countAndFlagsBits = 0x746E65726170202CLL;
    v76._object = (void *)0xEC000000203A6449;
    LogMessage.StringInterpolation.appendLiteral(_:)(v76);
    uint64_t v99 = v69;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v97 = v64;
    uint64_t v98 = (void *)v6;
    sub_19EEBCD00((uint64_t)&v97, (uint64_t)v93);
    long long v91 = 0u;
    long long v92 = 0u;
    sub_19EEC3E70((uint64_t)v93, (uint64_t)&v91);
    char v96 = 0;
    long long v94 = v91;
    long long v95 = v92;
    uint64_t v77 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v77 = sub_19EEC3F3C(0, v77[2] + 1, 1, v77);
    }
    unint64_t v79 = v77[2];
    unint64_t v78 = v77[3];
    if (v79 >= v78 >> 1) {
      uint64_t v77 = sub_19EEC3F3C((void *)(v78 > 1), v79 + 1, 1, v77);
    }
    v77[2] = v79 + 1;
    char v80 = &v77[5 * v79];
    long long v81 = v94;
    long long v82 = v95;
    *((unsigned char *)v80 + 64) = v96;
    *((_OWORD *)v80 + 2) = v81;
    *((_OWORD *)v80 + 3) = v82;
    unint64_t v100 = v77;
    sub_19EEBCB4C((uint64_t)&v97);
    v83._uint64_t countAndFlagsBits = 0;
    v83._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v83);
    *(void *)(v59 + 32) = v100;
    Logger.error(_:)(v59, v58, v88);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v101);
    return 0;
  }
LABEL_48:
  uint64_t v57 = *(void *)(v18 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v57;
}

uint64_t sub_19F1D9D80(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  if (a1[3]) {
    return 0;
  }
  uint64_t v6 = a1[16];
  if (!v6) {
    return 0;
  }
  if (!*(void *)(a3 + 16))
  {
LABEL_7:
    if (qword_1E946FC40 != -1) {
      swift_once();
    }
    sub_19F1DD95C();
    uint64_t v11 = v46;
    uint64_t v12 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EB393150);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_19F24EAD0;
    unint64_t v44 = sub_19EEC3F3C(0, 61, 0, MEMORY[0x1E4FBC860]);
    v14._object = (void *)0x800000019F276C50;
    v14._uint64_t countAndFlagsBits = 0xD000000000000035;
    LogMessage.StringInterpolation.appendLiteral(_:)(v14);
    uint64_t v43 = MEMORY[0x1E4FBB550];
    v42[0] = a2;
    sub_19EEBCD00((uint64_t)v42, (uint64_t)v38);
    long long v36 = 0u;
    long long v37 = 0u;
    sub_19EEC3E70((uint64_t)v38, (uint64_t)&v36);
    char v41 = 0;
    long long v39 = v36;
    long long v40 = v37;
    uint64_t v15 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v15 = sub_19EEC3F3C(0, v15[2] + 1, 1, v15);
    }
    unint64_t v16 = v15[2];
    unint64_t v17 = v15[3];
    unint64_t v18 = v16 + 1;
    if (v16 >= v17 >> 1)
    {
      uint64_t v33 = v15;
      unint64_t v34 = v15[2];
      char v35 = sub_19EEC3F3C((void *)(v17 > 1), v16 + 1, 1, v33);
      unint64_t v16 = v34;
      uint64_t v15 = v35;
    }
    v15[2] = v18;
    unint64_t v19 = &v15[5 * v16];
    long long v20 = v39;
    long long v21 = v40;
    *((unsigned char *)v19 + 64) = v41;
    *((_OWORD *)v19 + 2) = v20;
    *((_OWORD *)v19 + 3) = v21;
    unint64_t v44 = v15;
    sub_19EEBCB4C((uint64_t)v42);
    v22._uint64_t countAndFlagsBits = 0x203A6469202CLL;
    v22._object = (void *)0xE600000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v23 = a1[4];
    uint64_t v24 = a1[5];
    uint64_t v43 = MEMORY[0x1E4FBB1A0];
    v42[0] = v23;
    v42[1] = v24;
    sub_19EEBCD00((uint64_t)v42, (uint64_t)v38);
    long long v36 = 0u;
    long long v37 = 0u;
    swift_bridgeObjectRetain();
    sub_19EEC3E70((uint64_t)v38, (uint64_t)&v36);
    char v41 = 0;
    long long v39 = v36;
    long long v40 = v37;
    BOOL v25 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v25 = sub_19EEC3F3C(0, v25[2] + 1, 1, v25);
    }
    unint64_t v27 = v25[2];
    unint64_t v26 = v25[3];
    if (v27 >= v26 >> 1) {
      BOOL v25 = sub_19EEC3F3C((void *)(v26 > 1), v27 + 1, 1, v25);
    }
    JSValueRef v25[2] = v27 + 1;
    unint64_t v28 = &v25[5 * v27];
    long long v29 = v39;
    long long v30 = v40;
    *((unsigned char *)v28 + 64) = v41;
    *((_OWORD *)v28 + 2) = v29;
    *((_OWORD *)v28 + 3) = v30;
    unint64_t v44 = v25;
    sub_19EEBCB4C((uint64_t)v42);
    v31._uint64_t countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    LogMessage.StringInterpolation.appendLiteral(_:)(v31);
    *(void *)(v13 + 32) = v44;
    Logger.error(_:)(v13, v11, v12);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    return 0;
  }
  uint64_t v7 = a1[15];
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_19EEBD400(v7, v6);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(*(void *)(a3 + 56) + 16 * v8 + 8);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t _s9JetEngine19ImpressionsTrackingO09serializeC02on4from6within2inAE9excludingSayypGSS_SayAC17AppearanceJournalCGSdAA0C13TrackerFormatO10Foundation4DateVSayAA17ImpressionMetricsV2IDVGtFZ_0(uint64_t a1, uint64_t a2, unint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, double a7)
{
  *((void *)&v47 + 1) = a2;
  *(void *)&long long v47 = a1;
  int v8 = *a4;
  uint64_t v11 = sub_19F1D6C6C(a3, a6);
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v14 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_51;
  }
  uint64_t v45 = v10;
  uint64_t v44 = v9;
  swift_bridgeObjectRetain();
  uint64_t v13 = (uint64_t *)(v11 + 40);
  Swift::String v14 = (void *)MEMORY[0x1E4FBC860];
  int v46 = v8;
  do
  {
    uint64_t v16 = *(v13 - 1);
    uint64_t v15 = *v13;
    if (v8)
    {
      if (v8 == 1)
      {
        swift_retain();
        uint64_t v17 = sub_19F1D6628(a5, a7);
        if (!v17) {
          goto LABEL_3;
        }
      }
      else
      {
        swift_retain();
        uint64_t v17 = sub_19F1D7B68(a5);
        if (!v17)
        {
LABEL_3:
          swift_release();
          goto LABEL_4;
        }
      }
    }
    else
    {
      swift_retain();
      uint64_t v17 = sub_19F1D62B0(a5, a7);
      if (!v17) {
        goto LABEL_3;
      }
    }
    *(void *)&v49[0] = v17;
    if (qword_1EB391C98 != -1) {
      swift_once();
    }
    unint64_t v18 = (unsigned char *)(qword_1EB391C90 + 16);
    unint64_t v19 = (os_unfair_lock_s *)(qword_1EB391C90 + 20);
    swift_retain();
    os_unfair_lock_lock(v19);
    sub_19EEC4E5C(v18, &v50);
    os_unfair_lock_unlock(v19);
    int v20 = v50;
    swift_release();
    if (v20 == 2)
    {
      if ((os_variant_has_internal_content() & 1) == 0) {
        goto LABEL_30;
      }
    }
    else if ((v20 & 1) == 0)
    {
      goto LABEL_30;
    }
    if (qword_1EB392A90 != -1) {
      swift_once();
    }
    if (qword_1E946F428 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_1E946F4C8;
    uint64_t v22 = unk_1E946F4D0;
    swift_bridgeObjectRetain();
    char v23 = sub_19EE56B20(v21, v22);
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_beginAccess();
      uint64_t v24 = *(void *)(v16 + 24);
      if (v24)
      {
        uint64_t v25 = *(void *)(v16 + 16);
        *((void *)&v51 + 1) = MEMORY[0x1E4FBB1A0];
        *(void *)&long long v50 = v25;
        *((void *)&v50 + 1) = v24;
      }
      else
      {
        long long v50 = 0u;
        long long v51 = 0u;
      }
      swift_bridgeObjectRetain();
      sub_19F1D7D88(0x6449746E65726170, 0xE800000000000000, (uint64_t)&v50, (uint64_t *)v49);
      sub_19EEBCB4C((uint64_t)&v50);
      uint64_t v26 = *(void *)(v16 + 48);
      if (v26 == -1)
      {
        long long v50 = 0u;
        long long v51 = 0u;
      }
      else
      {
        *((void *)&v51 + 1) = MEMORY[0x1E4FBB550];
        *(void *)&long long v50 = v26;
      }
      sub_19F1D7D88(0xD000000000000015, 0x800000019F276CD0, (uint64_t)&v50, (uint64_t *)v49);
      sub_19EEBCB4C((uint64_t)&v50);
      uint64_t v17 = *(void *)&v49[0];
    }
LABEL_30:
    *((void *)&v51 + 1) = MEMORY[0x1E4FBB1A0];
    long long v50 = v47;
    sub_19EEBDC00(&v50, v49);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v52 = v17;
    sub_19EE7DA20(v49, 0xD000000000000012, 0x800000019F276D10, isUniquelyReferenced_nonNull_native);
    uint64_t v28 = v52;
    swift_bridgeObjectRelease();
    *((void *)&v51 + 1) = MEMORY[0x1E4FBB550];
    *(void *)&long long v50 = v15;
    sub_19EEBDC00(&v50, v49);
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v49, 0x6973736572706D69, 0xEC00000064496E6FLL, v29);
    uint64_t v52 = v28;
    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(v16 + 144) & 1) == 0)
    {
      uint64_t v30 = *(void *)(v16 + 136);
      if (_s9JetEngine19ImpressionsTrackingO14isDebugEnabledSbvgZ_0())
      {
        *((void *)&v51 + 1) = MEMORY[0x1E4FBB550];
        *(void *)&long long v50 = v30;
        sub_19F1D7D88(0xD000000000000015, 0x800000019F276D30, (uint64_t)&v50, &v52);
        sub_19EEBCB4C((uint64_t)&v50);
        uint64_t v28 = v52;
      }
      if (*(void *)(v28 + 16) && (unint64_t v31 = sub_19EEBD400(0x6973736572706D69, 0xEF7865646E496E6FLL), (v32 & 1) != 0))
      {
        sub_19EEBDBA4(*(void *)(v28 + 56) + 32 * v31, (uint64_t)&v50);
        sub_19EEBCB4C((uint64_t)&v50);
      }
      else
      {
        long long v50 = 0u;
        long long v51 = 0u;
        sub_19EEBCB4C((uint64_t)&v50);
        swift_beginAccess();
        if (*(void *)(v16 + 48) == -1 && (*(unsigned char *)(v16 + 144) & 1) == 0)
        {
          uint64_t v33 = *(void *)(v16 + 136);
          *((void *)&v51 + 1) = MEMORY[0x1E4FBB550];
          *(void *)&long long v50 = v33;
          sub_19EEBDC00(&v50, v49);
          char v34 = swift_isUniquelyReferenced_nonNull_native();
          sub_19EE7DA20(v49, 0x6973736572706D69, 0xEF7865646E496E6FLL, v34);
          uint64_t v52 = v28;
          swift_bridgeObjectRelease();
        }
      }
    }
    swift_beginAccess();
    if (*(void *)(v16 + 24))
    {
      uint64_t v35 = sub_19F1D9334(v16, v15, v45);
      if (v36) {
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v35 = sub_19F1D9D80((void *)v16, v15, v44);
      if (v39)
      {
LABEL_43:
        uint64_t v37 = v52;
        goto LABEL_44;
      }
    }
    *((void *)&v51 + 1) = MEMORY[0x1E4FBB550];
    *(void *)&long long v50 = v35;
    sub_19EEBDC00(&v50, v49);
    uint64_t v37 = v52;
    char v38 = swift_isUniquelyReferenced_nonNull_native();
    sub_19EE7DA20(v49, 0xD000000000000012, 0x800000019F276C30, v38);
    uint64_t v52 = v37;
    swift_bridgeObjectRelease();
LABEL_44:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v14 = sub_19F09D040(0, v14[2] + 1, 1, v14);
    }
    unint64_t v41 = v14[2];
    unint64_t v40 = v14[3];
    if (v41 >= v40 >> 1) {
      Swift::String v14 = sub_19F09D040((void *)(v40 > 1), v41 + 1, 1, v14);
    }
    long long v14[2] = v41 + 1;
    v14[v41 + 4] = v37;
    swift_release();
    swift_bridgeObjectRelease();
    int v8 = v46;
LABEL_4:
    v13 += 2;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_51:
  uint64_t v42 = sub_19EFA5354((uint64_t)v14);
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t _s12ItemPositionVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s12ItemPositionVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4sub_19EE4AC98(25, 0) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s12ItemPositionVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12ItemPositionVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 4sub_19EE4AC98(25, 0) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12ItemPositionVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12ItemPositionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 4sub_19EE4AC98(25, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionsTracking.ItemPosition()
{
  return &type metadata for ImpressionsTracking.ItemPosition;
}

void *sub_19F1DAA20@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_19F1D7234(*a1, *(void *)(v2 + 24));
  *a2 = result;
  return result;
}

void JEPluralCategoryForNumber_cold_1(void *a1)
{
  uint64_t v4 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = [a1 localeIdentifier];
  int v2 = 138412290;
  uint64_t v3 = v1;
  _os_log_fault_impl(&dword_19EE14000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Could not determine plural category for locale: %@", (uint8_t *)&v2, 0xCu);
}

void InitializeProcessLaunchTimeInterval_cold_1(int a1)
{
  uint64_t v3 = *MEMORY[0x1E4F143B8];
  int v1 = 136446210;
  int v2 = strerror(a1);
  _os_log_fault_impl(&dword_19EE14000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Could not get process launch time, reason: %{public}s", (uint8_t *)&v1, 0xCu);
}

void __getMTStandardIDServiceClass_block_invoke_cold_1()
{
}

uint64_t sub_19F1DAB9C()
{
  return MEMORY[0x1F40E2D28]();
}

uint64_t sub_19F1DABAC()
{
  return MEMORY[0x1F40E2D80]();
}

uint64_t sub_19F1DABBC()
{
  return MEMORY[0x1F40E2D88]();
}

uint64_t sub_19F1DABCC()
{
  return MEMORY[0x1F40E2D98]();
}

uint64_t sub_19F1DABDC()
{
  return MEMORY[0x1F40E2DC8]();
}

uint64_t sub_19F1DABEC()
{
  return MEMORY[0x1F40E2DF0]();
}

uint64_t sub_19F1DABFC()
{
  return MEMORY[0x1F40E2E08]();
}

uint64_t sub_19F1DAC0C()
{
  return MEMORY[0x1F40E2E28]();
}

uint64_t sub_19F1DAC1C()
{
  return MEMORY[0x1F40E2E50]();
}

uint64_t sub_19F1DAC2C()
{
  return MEMORY[0x1F40E2E68]();
}

uint64_t sub_19F1DAC3C()
{
  return MEMORY[0x1F40E2E70]();
}

uint64_t sub_19F1DAC4C()
{
  return MEMORY[0x1F40E2E88]();
}

uint64_t sub_19F1DAC5C()
{
  return MEMORY[0x1F40E2EA8]();
}

uint64_t sub_19F1DAC6C()
{
  return MEMORY[0x1F40E2EC0]();
}

uint64_t sub_19F1DAC7C()
{
  return MEMORY[0x1F40E2ED0]();
}

uint64_t sub_19F1DAC8C()
{
  return MEMORY[0x1F40E2ED8]();
}

uint64_t sub_19F1DAC9C()
{
  return MEMORY[0x1F40E2EE8]();
}

uint64_t sub_19F1DACAC()
{
  return MEMORY[0x1F40E2F00]();
}

uint64_t sub_19F1DACBC()
{
  return MEMORY[0x1F40E2F40]();
}

uint64_t sub_19F1DACCC()
{
  return MEMORY[0x1F40E2F50]();
}

uint64_t sub_19F1DACDC()
{
  return MEMORY[0x1F40E2F60]();
}

uint64_t sub_19F1DACEC()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_19F1DACFC()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_19F1DAD0C()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_19F1DAD1C()
{
  return MEMORY[0x1F40E3080]();
}

uint64_t sub_19F1DAD2C()
{
  return MEMORY[0x1F40E30A8]();
}

uint64_t sub_19F1DAD3C()
{
  return MEMORY[0x1F40E30C0]();
}

uint64_t sub_19F1DAD4C()
{
  return MEMORY[0x1F40E30E0]();
}

uint64_t sub_19F1DAD5C()
{
  return MEMORY[0x1F40E30F0]();
}

uint64_t sub_19F1DAD6C()
{
  return MEMORY[0x1F40E30F8]();
}

uint64_t sub_19F1DAD7C()
{
  return MEMORY[0x1F40E3108]();
}

uint64_t sub_19F1DAD8C()
{
  return MEMORY[0x1F40E3110]();
}

uint64_t sub_19F1DAD9C()
{
  return MEMORY[0x1F40E3118]();
}

uint64_t sub_19F1DADAC()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_19F1DADBC()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_19F1DADCC()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_19F1DADDC()
{
  return MEMORY[0x1F40E31C8]();
}

uint64_t sub_19F1DADEC()
{
  return MEMORY[0x1F40E31D0]();
}

uint64_t sub_19F1DADFC()
{
  return MEMORY[0x1F40E3250]();
}

uint64_t sub_19F1DAE0C()
{
  return MEMORY[0x1F40E32E8]();
}

uint64_t sub_19F1DAE1C()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_19F1DAE2C()
{
  return MEMORY[0x1F40E3400]();
}

uint64_t sub_19F1DAE3C()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_19F1DAE4C()
{
  return MEMORY[0x1F40E34B0]();
}

uint64_t sub_19F1DAE5C()
{
  return MEMORY[0x1F40E34E8]();
}

uint64_t sub_19F1DAE6C()
{
  return MEMORY[0x1F40E3518]();
}

uint64_t sub_19F1DAE7C()
{
  return MEMORY[0x1F40E3530]();
}

uint64_t sub_19F1DAE8C()
{
  return MEMORY[0x1F40E3550]();
}

uint64_t sub_19F1DAE9C()
{
  return MEMORY[0x1F40E3578]();
}

uint64_t sub_19F1DAEAC()
{
  return MEMORY[0x1F40E3590]();
}

uint64_t sub_19F1DAEBC()
{
  return MEMORY[0x1F40E35A8]();
}

uint64_t sub_19F1DAECC()
{
  return MEMORY[0x1F40E35B0]();
}

uint64_t sub_19F1DAEDC()
{
  return MEMORY[0x1F40E35C0]();
}

uint64_t sub_19F1DAEEC()
{
  return MEMORY[0x1F40E35C8]();
}

uint64_t sub_19F1DAEFC()
{
  return MEMORY[0x1F40E35D8]();
}

uint64_t sub_19F1DAF0C()
{
  return MEMORY[0x1F40E35E8]();
}

uint64_t sub_19F1DAF1C()
{
  return MEMORY[0x1F40E3600]();
}

uint64_t sub_19F1DAF2C()
{
  return MEMORY[0x1F40E3620]();
}

uint64_t sub_19F1DAF3C()
{
  return MEMORY[0x1F40E3668]();
}

uint64_t sub_19F1DAF4C()
{
  return MEMORY[0x1F40E3670]();
}

uint64_t sub_19F1DAF5C()
{
  return MEMORY[0x1F40E36C8]();
}

uint64_t sub_19F1DAF6C()
{
  return MEMORY[0x1F40E36D8]();
}

uint64_t sub_19F1DAF7C()
{
  return MEMORY[0x1F40E36E8]();
}

uint64_t sub_19F1DAF8C()
{
  return MEMORY[0x1F40E36F8]();
}

uint64_t sub_19F1DAF9C()
{
  return MEMORY[0x1F40E3708]();
}

uint64_t sub_19F1DAFAC()
{
  return MEMORY[0x1F40E3718]();
}

uint64_t sub_19F1DAFBC()
{
  return MEMORY[0x1F40E3728]();
}

uint64_t sub_19F1DAFCC()
{
  return MEMORY[0x1F40E3740]();
}

uint64_t sub_19F1DAFDC()
{
  return MEMORY[0x1F40E3748]();
}

uint64_t sub_19F1DAFEC()
{
  return MEMORY[0x1F40E3750]();
}

uint64_t sub_19F1DAFFC()
{
  return MEMORY[0x1F40E3760]();
}

uint64_t sub_19F1DB00C()
{
  return MEMORY[0x1F40E37A8]();
}

uint64_t sub_19F1DB01C()
{
  return MEMORY[0x1F40E37B8]();
}

uint64_t sub_19F1DB02C()
{
  return MEMORY[0x1F40E37C0]();
}

uint64_t sub_19F1DB03C()
{
  return MEMORY[0x1F40E37D0]();
}

uint64_t sub_19F1DB04C()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_19F1DB05C()
{
  return MEMORY[0x1F40E37F0]();
}

uint64_t sub_19F1DB06C()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_19F1DB07C()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_19F1DB08C()
{
  return MEMORY[0x1F40E3830]();
}

uint64_t sub_19F1DB09C()
{
  return MEMORY[0x1F40E3868]();
}

uint64_t sub_19F1DB0AC()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_19F1DB0BC()
{
  return MEMORY[0x1F40E3948]();
}

uint64_t sub_19F1DB0CC()
{
  return MEMORY[0x1F40E3970]();
}

uint64_t sub_19F1DB0DC()
{
  return MEMORY[0x1F40E3988]();
}

uint64_t sub_19F1DB0EC()
{
  return MEMORY[0x1F40E39B0]();
}

uint64_t sub_19F1DB0FC()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_19F1DB10C()
{
  return MEMORY[0x1F40E3A90]();
}

uint64_t sub_19F1DB11C()
{
  return MEMORY[0x1F40E3A98]();
}

uint64_t sub_19F1DB12C()
{
  return MEMORY[0x1F40E3AB0]();
}

uint64_t sub_19F1DB13C()
{
  return MEMORY[0x1F40E3AC0]();
}

uint64_t sub_19F1DB14C()
{
  return MEMORY[0x1F40E41E0]();
}

uint64_t sub_19F1DB15C()
{
  return MEMORY[0x1F40E4210]();
}

uint64_t sub_19F1DB16C()
{
  return MEMORY[0x1F40E4220]();
}

uint64_t sub_19F1DB17C()
{
  return MEMORY[0x1F40E44F8]();
}

uint64_t sub_19F1DB18C()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_19F1DB19C()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_19F1DB1AC()
{
  return MEMORY[0x1F40E46B8]();
}

uint64_t sub_19F1DB1BC()
{
  return MEMORY[0x1F40E46D0]();
}

uint64_t sub_19F1DB1CC()
{
  return MEMORY[0x1F40E4898]();
}

uint64_t sub_19F1DB1DC()
{
  return MEMORY[0x1F40E48B0]();
}

uint64_t sub_19F1DB1EC()
{
  return MEMORY[0x1F40E48B8]();
}

uint64_t sub_19F1DB1FC()
{
  return MEMORY[0x1F40E48C8]();
}

uint64_t sub_19F1DB20C()
{
  return MEMORY[0x1F40E48D8]();
}

uint64_t sub_19F1DB21C()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_19F1DB22C()
{
  return MEMORY[0x1F40E4908]();
}

uint64_t sub_19F1DB23C()
{
  return MEMORY[0x1F40E4938]();
}

uint64_t sub_19F1DB24C()
{
  return MEMORY[0x1F40E4970]();
}

uint64_t sub_19F1DB25C()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_19F1DB26C()
{
  return MEMORY[0x1F40E49E8]();
}

uint64_t sub_19F1DB27C()
{
  return MEMORY[0x1F40E4A10]();
}

uint64_t sub_19F1DB28C()
{
  return MEMORY[0x1F40E4A28]();
}

uint64_t sub_19F1DB29C()
{
  return MEMORY[0x1F40E4A50]();
}

uint64_t sub_19F1DB2AC()
{
  return MEMORY[0x1F40E4A58]();
}

uint64_t sub_19F1DB2BC()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_19F1DB2CC()
{
  return MEMORY[0x1F40E4AA8]();
}

uint64_t sub_19F1DB2DC()
{
  return MEMORY[0x1F40E4AC0]();
}

uint64_t sub_19F1DB2EC()
{
  return MEMORY[0x1F40E4B00]();
}

uint64_t sub_19F1DB2FC()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_19F1DB30C()
{
  return MEMORY[0x1F40E4B30]();
}

uint64_t sub_19F1DB31C()
{
  return MEMORY[0x1F40E4B48]();
}

uint64_t sub_19F1DB32C()
{
  return MEMORY[0x1F40E4B58]();
}

uint64_t sub_19F1DB33C()
{
  return MEMORY[0x1F40E4B68]();
}

uint64_t sub_19F1DB34C()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_19F1DB35C()
{
  return MEMORY[0x1F40E4BC8]();
}

uint64_t sub_19F1DB36C()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_19F1DB37C()
{
  return MEMORY[0x1F40E4BF0]();
}

uint64_t sub_19F1DB38C()
{
  return MEMORY[0x1F40E4C00]();
}

uint64_t sub_19F1DB39C()
{
  return MEMORY[0x1F40E4C08]();
}

uint64_t sub_19F1DB3AC()
{
  return MEMORY[0x1F40E4C58]();
}

uint64_t sub_19F1DB3BC()
{
  return MEMORY[0x1F40E4C80]();
}

uint64_t sub_19F1DB3CC()
{
  return MEMORY[0x1F40E4CD8]();
}

uint64_t sub_19F1DB3DC()
{
  return MEMORY[0x1F40E4D30]();
}

uint64_t sub_19F1DB3EC()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_19F1DB3FC()
{
  return MEMORY[0x1F40E4D58]();
}

uint64_t sub_19F1DB40C()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_19F1DB41C()
{
  return MEMORY[0x1F40E4E10]();
}

uint64_t sub_19F1DB42C()
{
  return MEMORY[0x1F40E4E30]();
}

uint64_t sub_19F1DB43C()
{
  return MEMORY[0x1F40E4E48]();
}

uint64_t sub_19F1DB44C()
{
  return MEMORY[0x1F40E4E60]();
}

uint64_t sub_19F1DB45C()
{
  return MEMORY[0x1F40E4E78]();
}

uint64_t sub_19F1DB46C()
{
  return MEMORY[0x1F40E4E98]();
}

uint64_t sub_19F1DB47C()
{
  return MEMORY[0x1F40E4EC8]();
}

uint64_t sub_19F1DB48C()
{
  return MEMORY[0x1F40E4ED0]();
}

uint64_t sub_19F1DB49C()
{
  return MEMORY[0x1F40E4EE0]();
}

uint64_t sub_19F1DB4AC()
{
  return MEMORY[0x1F40E50A8]();
}

uint64_t sub_19F1DB4BC()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_19F1DB4CC()
{
  return MEMORY[0x1F40E5158]();
}

uint64_t sub_19F1DB4DC()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_19F1DB4EC()
{
  return MEMORY[0x1F40E51A8]();
}

uint64_t sub_19F1DB4FC()
{
  return MEMORY[0x1F40E51C0]();
}

uint64_t sub_19F1DB50C()
{
  return MEMORY[0x1F40E51D0]();
}

uint64_t sub_19F1DB51C()
{
  return MEMORY[0x1F40E52A0]();
}

uint64_t sub_19F1DB52C()
{
  return MEMORY[0x1F40E52B0]();
}

uint64_t sub_19F1DB53C()
{
  return MEMORY[0x1F40E52C0]();
}

uint64_t sub_19F1DB54C()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_19F1DB55C()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_19F1DB56C()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_19F1DB57C()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_19F1DB58C()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_19F1DB59C()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_19F1DB5AC()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_19F1DB5BC()
{
  return MEMORY[0x1F40E5500]();
}

uint64_t sub_19F1DB5CC()
{
  return MEMORY[0x1F40E5510]();
}

uint64_t sub_19F1DB5DC()
{
  return MEMORY[0x1F40E5540]();
}

uint64_t sub_19F1DB5EC()
{
  return MEMORY[0x1F40E5578]();
}

uint64_t sub_19F1DB5FC()
{
  return MEMORY[0x1F40E5638]();
}

uint64_t sub_19F1DB60C()
{
  return MEMORY[0x1F40E5648]();
}

uint64_t sub_19F1DB61C()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_19F1DB62C()
{
  return MEMORY[0x1F40E57F8]();
}

uint64_t sub_19F1DB63C()
{
  return MEMORY[0x1F40E5840]();
}

uint64_t sub_19F1DB64C()
{
  return MEMORY[0x1F40E5850]();
}

uint64_t sub_19F1DB65C()
{
  return MEMORY[0x1F40E5868]();
}

uint64_t sub_19F1DB66C()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_19F1DB67C()
{
  return MEMORY[0x1F40E58A8]();
}

uint64_t sub_19F1DB68C()
{
  return MEMORY[0x1F40E58C0]();
}

uint64_t sub_19F1DB69C()
{
  return MEMORY[0x1F40E5960]();
}

uint64_t sub_19F1DB6AC()
{
  return MEMORY[0x1F40E59E0]();
}

uint64_t sub_19F1DB6BC()
{
  return MEMORY[0x1F40E5AB8]();
}

uint64_t sub_19F1DB6CC()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_19F1DB6DC()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_19F1DB6EC()
{
  return MEMORY[0x1F40E5D08]();
}

uint64_t sub_19F1DB6FC()
{
  return MEMORY[0x1F40E5D60]();
}

uint64_t sub_19F1DB70C()
{
  return MEMORY[0x1F40E5D70]();
}

uint64_t sub_19F1DB71C()
{
  return MEMORY[0x1F40E5D98]();
}

uint64_t sub_19F1DB72C()
{
  return MEMORY[0x1F40E5DB0]();
}

uint64_t sub_19F1DB73C()
{
  return MEMORY[0x1F40E5DD8]();
}

uint64_t sub_19F1DB74C()
{
  return MEMORY[0x1F40E5DE8]();
}

uint64_t sub_19F1DB75C()
{
  return MEMORY[0x1F40E5DF8]();
}

uint64_t sub_19F1DB76C()
{
  return MEMORY[0x1F40E5E28]();
}

uint64_t sub_19F1DB77C()
{
  return MEMORY[0x1F40E5E38]();
}

uint64_t sub_19F1DB78C()
{
  return MEMORY[0x1F40E5E48]();
}

uint64_t sub_19F1DB79C()
{
  return MEMORY[0x1F40E5EC0]();
}

uint64_t sub_19F1DB7AC()
{
  return MEMORY[0x1F40E5EF0]();
}

uint64_t sub_19F1DB7BC()
{
  return MEMORY[0x1F4186958]();
}

uint64_t sub_19F1DB7CC()
{
  return MEMORY[0x1F4186968]();
}

uint64_t sub_19F1DB7DC()
{
  return MEMORY[0x1F4186978]();
}

uint64_t sub_19F1DB7EC()
{
  return MEMORY[0x1F41884F0]();
}

uint64_t sub_19F1DB7FC()
{
  return MEMORY[0x1F4188500]();
}

uint64_t sub_19F1DB80C()
{
  return MEMORY[0x1F4188510]();
}

uint64_t sub_19F1DB81C()
{
  return MEMORY[0x1F4188560]();
}

uint64_t sub_19F1DB82C()
{
  return MEMORY[0x1F4188568]();
}

uint64_t sub_19F1DB83C()
{
  return MEMORY[0x1F4188570]();
}

uint64_t sub_19F1DB84C()
{
  return MEMORY[0x1F4188578]();
}

uint64_t sub_19F1DB85C()
{
  return MEMORY[0x1F4188580]();
}

uint64_t sub_19F1DB86C()
{
  return MEMORY[0x1F4188588]();
}

uint64_t sub_19F1DB87C()
{
  return MEMORY[0x1F41885B0]();
}

uint64_t sub_19F1DB88C()
{
  return MEMORY[0x1F41885B8]();
}

uint64_t sub_19F1DB89C()
{
  return MEMORY[0x1F41885D0]();
}

uint64_t sub_19F1DB8AC()
{
  return MEMORY[0x1F41885E0]();
}

uint64_t sub_19F1DB8BC()
{
  return MEMORY[0x1F4188648]();
}

uint64_t sub_19F1DB8CC()
{
  return MEMORY[0x1F4188650]();
}

uint64_t sub_19F1DB8DC()
{
  return MEMORY[0x1F4188658]();
}

uint64_t sub_19F1DB8EC()
{
  return MEMORY[0x1F4188660]();
}

uint64_t sub_19F1DB8FC()
{
  return MEMORY[0x1F4188668]();
}

uint64_t sub_19F1DB90C()
{
  return MEMORY[0x1F4188490]();
}

uint64_t sub_19F1DB91C()
{
  return MEMORY[0x1F4186B80]();
}

uint64_t sub_19F1DB92C()
{
  return MEMORY[0x1F41884A8]();
}

uint64_t sub_19F1DB93C()
{
  return MEMORY[0x1F4186BE8]();
}

uint64_t sub_19F1DB94C()
{
  return MEMORY[0x1F4186C18]();
}

uint64_t sub_19F1DB95C()
{
  return MEMORY[0x1F4186C20]();
}

uint64_t sub_19F1DB96C()
{
  return MEMORY[0x1F40F1EA0]();
}

uint64_t sub_19F1DB97C()
{
  return MEMORY[0x1F40F1EA8]();
}

uint64_t sub_19F1DB98C()
{
  return MEMORY[0x1F40F1EB0]();
}

uint64_t sub_19F1DB99C()
{
  return MEMORY[0x1F40F1EC0]();
}

uint64_t sub_19F1DB9AC()
{
  return MEMORY[0x1F40F1ED0]();
}

uint64_t sub_19F1DB9BC()
{
  return MEMORY[0x1F40F1ED8]();
}

uint64_t sub_19F1DB9CC()
{
  return MEMORY[0x1F40F1EE0]();
}

uint64_t sub_19F1DB9DC()
{
  return MEMORY[0x1F4186C60]();
}

uint64_t sub_19F1DB9EC()
{
  return MEMORY[0x1F4186C98]();
}

uint64_t sub_19F1DB9FC()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_19F1DBA0C()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_19F1DBA1C()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_19F1DBA2C()
{
  return MEMORY[0x1F4186D08]();
}

uint64_t sub_19F1DBA3C()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_19F1DBA4C()
{
  return MEMORY[0x1F4186E28]();
}

uint64_t sub_19F1DBA5C()
{
  return MEMORY[0x1F4186E60]();
}

uint64_t sub_19F1DBA6C()
{
  return MEMORY[0x1F4186EF8]();
}

uint64_t sub_19F1DBA7C()
{
  return MEMORY[0x1F4186F18]();
}

uint64_t sub_19F1DBA8C()
{
  return MEMORY[0x1F4186F40]();
}

uint64_t sub_19F1DBA9C()
{
  return MEMORY[0x1F40DFF38]();
}

uint64_t sub_19F1DBAAC()
{
  return MEMORY[0x1F40DFF40]();
}

uint64_t sub_19F1DBABC()
{
  return MEMORY[0x1F40DFF58]();
}

uint64_t sub_19F1DBACC()
{
  return MEMORY[0x1F40DFF70]();
}

uint64_t sub_19F1DBADC()
{
  return MEMORY[0x1F40E04A8]();
}

uint64_t sub_19F1DBAEC()
{
  return MEMORY[0x1F4183270]();
}

uint64_t sub_19F1DBAFC()
{
  return MEMORY[0x1F4183280]();
}

uint64_t sub_19F1DBB0C()
{
  return MEMORY[0x1F4183288]();
}

uint64_t sub_19F1DBB1C()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_19F1DBB2C()
{
  return MEMORY[0x1F40E6018]();
}

uint64_t sub_19F1DBB3C()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_19F1DBB4C()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_19F1DBB5C()
{
  return MEMORY[0x1F4183320]();
}

uint64_t sub_19F1DBB6C()
{
  return MEMORY[0x1F4183328]();
}

uint64_t sub_19F1DBB7C()
{
  return MEMORY[0x1F4183338]();
}

uint64_t sub_19F1DBB8C()
{
  return MEMORY[0x1F4183340]();
}

uint64_t sub_19F1DBB9C()
{
  return MEMORY[0x1F4183348]();
}

uint64_t sub_19F1DBBAC()
{
  return MEMORY[0x1F4183358]();
}

uint64_t sub_19F1DBBBC()
{
  return MEMORY[0x1F4183398]();
}

uint64_t sub_19F1DBBCC()
{
  return MEMORY[0x1F41833D0]();
}

uint64_t sub_19F1DBBDC()
{
  return MEMORY[0x1F4183440]();
}

uint64_t sub_19F1DBBEC()
{
  return MEMORY[0x1F4183498]();
}

uint64_t sub_19F1DBBFC()
{
  return MEMORY[0x1F41834A0]();
}

uint64_t sub_19F1DBC0C()
{
  return MEMORY[0x1F41834A8]();
}

uint64_t sub_19F1DBC1C()
{
  return MEMORY[0x1F41834C8]();
}

uint64_t sub_19F1DBC2C()
{
  return MEMORY[0x1F41834D0]();
}

uint64_t sub_19F1DBC3C()
{
  return MEMORY[0x1F41834E0]();
}

uint64_t sub_19F1DBC4C()
{
  return MEMORY[0x1F41834E8]();
}

uint64_t sub_19F1DBC5C()
{
  return MEMORY[0x1F41834F8]();
}

uint64_t sub_19F1DBC6C()
{
  return MEMORY[0x1F4183500]();
}

uint64_t sub_19F1DBC7C()
{
  return MEMORY[0x1F4183510]();
}

uint64_t sub_19F1DBC8C()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_19F1DBC9C()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_19F1DBCAC()
{
  return MEMORY[0x1F41883E8]();
}

uint64_t sub_19F1DBCBC()
{
  return MEMORY[0x1F41836E0]();
}

uint64_t sub_19F1DBCCC()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_19F1DBCDC()
{
  return MEMORY[0x1F4183740]();
}

uint64_t sub_19F1DBCEC()
{
  return MEMORY[0x1F4183750]();
}

uint64_t sub_19F1DBCFC()
{
  return MEMORY[0x1F4183758]();
}

uint64_t sub_19F1DBD0C()
{
  return MEMORY[0x1F4183760]();
}

uint64_t sub_19F1DBD1C()
{
  return MEMORY[0x1F4183768]();
}

uint64_t sub_19F1DBD2C()
{
  return MEMORY[0x1F4183820]();
}

uint64_t sub_19F1DBD3C()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_19F1DBD4C()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_19F1DBD5C()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_19F1DBD6C()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_19F1DBD7C()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_19F1DBD8C()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_19F1DBD9C()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_19F1DBDAC()
{
  return MEMORY[0x1F40E6200]();
}

uint64_t sub_19F1DBDBC()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_19F1DBDCC()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_19F1DBDDC()
{
  return MEMORY[0x1F40E6290]();
}

uint64_t sub_19F1DBDEC()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_19F1DBDFC()
{
  return MEMORY[0x1F40E62E8]();
}

uint64_t sub_19F1DBE0C()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_19F1DBE1C()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_19F1DBE2C()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_19F1DBE3C()
{
  return MEMORY[0x1F41838B8]();
}

uint64_t sub_19F1DBE4C()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_19F1DBE5C()
{
  return MEMORY[0x1F41838E8]();
}

uint64_t sub_19F1DBE6C()
{
  return MEMORY[0x1F4183908]();
}

uint64_t sub_19F1DBE7C()
{
  return MEMORY[0x1F4183950]();
}

uint64_t sub_19F1DBE8C()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_19F1DBE9C()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_19F1DBEAC()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_19F1DBEBC()
{
  return MEMORY[0x1F41839F8]();
}

uint64_t sub_19F1DBECC()
{
  return MEMORY[0x1F4183A00]();
}

uint64_t sub_19F1DBEDC()
{
  return MEMORY[0x1F4183A08]();
}

uint64_t sub_19F1DBEEC()
{
  return MEMORY[0x1F4183A28]();
}

uint64_t sub_19F1DBEFC()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_19F1DBF0C()
{
  return MEMORY[0x1F4183A58]();
}

uint64_t sub_19F1DBF1C()
{
  return MEMORY[0x1F4183A60]();
}

uint64_t sub_19F1DBF2C()
{
  return MEMORY[0x1F4183A68]();
}

uint64_t sub_19F1DBF3C()
{
  return MEMORY[0x1F4183A78]();
}

uint64_t sub_19F1DBF4C()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_19F1DBF5C()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_19F1DBF6C()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_19F1DBF8C()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_19F1DBF9C()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_19F1DBFAC()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_19F1DBFBC()
{
  return MEMORY[0x1F4183B38]();
}

uint64_t sub_19F1DBFCC()
{
  return MEMORY[0x1F4183B40]();
}

uint64_t sub_19F1DBFDC()
{
  return MEMORY[0x1F4183B50]();
}

uint64_t sub_19F1DBFEC()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_19F1DBFFC()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_19F1DC00C()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_19F1DC01C()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_19F1DC02C()
{
  return MEMORY[0x1F4183BC0]();
}

uint64_t sub_19F1DC03C()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_19F1DC04C()
{
  return MEMORY[0x1F4183BF0]();
}

uint64_t sub_19F1DC05C()
{
  return MEMORY[0x1F4183BF8]();
}

uint64_t sub_19F1DC06C()
{
  return MEMORY[0x1F4183C18]();
}

uint64_t sub_19F1DC07C()
{
  return MEMORY[0x1F4183C38]();
}

uint64_t sub_19F1DC08C()
{
  return MEMORY[0x1F4183C60]();
}

uint64_t sub_19F1DC09C()
{
  return MEMORY[0x1F4183CD8]();
}

uint64_t sub_19F1DC0AC()
{
  return MEMORY[0x1F4183CF0]();
}

uint64_t sub_19F1DC0BC()
{
  return MEMORY[0x1F4183D20]();
}

uint64_t sub_19F1DC0CC()
{
  return MEMORY[0x1F4183D70]();
}

uint64_t sub_19F1DC0DC()
{
  return MEMORY[0x1F4183D78]();
}

uint64_t sub_19F1DC0EC()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_19F1DC12C()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_19F1DC13C()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_19F1DC14C()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_19F1DC15C()
{
  return MEMORY[0x1F40E6360]();
}

uint64_t sub_19F1DC16C()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_19F1DC17C()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_19F1DC18C()
{
  return MEMORY[0x1F4183EA0]();
}

uint64_t sub_19F1DC19C()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t sub_19F1DC1AC()
{
  return MEMORY[0x1F4183EB8]();
}

uint64_t sub_19F1DC1BC()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_19F1DC1CC()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_19F1DC1DC()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_19F1DC1EC()
{
  return MEMORY[0x1F4183F10]();
}

uint64_t sub_19F1DC1FC()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t sub_19F1DC20C()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_19F1DC21C()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_19F1DC22C()
{
  return MEMORY[0x1F4183F58]();
}

uint64_t sub_19F1DC23C()
{
  return MEMORY[0x1F4183F60]();
}

uint64_t sub_19F1DC24C()
{
  return MEMORY[0x1F4183F70]();
}

uint64_t sub_19F1DC25C()
{
  return MEMORY[0x1F4183F78]();
}

uint64_t sub_19F1DC26C()
{
  return MEMORY[0x1F4183F98]();
}

uint64_t sub_19F1DC27C()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_19F1DC28C()
{
  return MEMORY[0x1F4183FB0]();
}

uint64_t sub_19F1DC29C()
{
  return MEMORY[0x1F4183FB8]();
}

uint64_t sub_19F1DC2AC()
{
  return MEMORY[0x1F4183FC8]();
}

uint64_t sub_19F1DC2BC()
{
  return MEMORY[0x1F4183FD0]();
}

uint64_t sub_19F1DC2CC()
{
  return MEMORY[0x1F4183FD8]();
}

uint64_t sub_19F1DC2DC()
{
  return MEMORY[0x1F4183FF0]();
}

uint64_t sub_19F1DC2EC()
{
  return MEMORY[0x1F40E6388]();
}

uint64_t sub_19F1DC2FC()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_19F1DC30C()
{
  return MEMORY[0x1F4187C18]();
}

uint64_t sub_19F1DC36C()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_19F1DC37C()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_19F1DC38C()
{
  return MEMORY[0x1F4187D10]();
}

uint64_t sub_19F1DC39C()
{
  return MEMORY[0x1F4187D18]();
}

uint64_t sub_19F1DC3AC()
{
  return MEMORY[0x1F4187D20]();
}

uint64_t sub_19F1DC3BC()
{
  return MEMORY[0x1F4187D38]();
}

uint64_t sub_19F1DC3CC()
{
  return MEMORY[0x1F4187D48]();
}

uint64_t sub_19F1DC3DC()
{
  return MEMORY[0x1F4187D50]();
}

uint64_t sub_19F1DC3FC()
{
  return MEMORY[0x1F4187D68]();
}

uint64_t sub_19F1DC40C()
{
  return MEMORY[0x1F4187D70]();
}

uint64_t sub_19F1DC41C()
{
  return MEMORY[0x1F4187D78]();
}

uint64_t sub_19F1DC43C()
{
  return MEMORY[0x1F4187D98]();
}

uint64_t sub_19F1DC45C()
{
  return MEMORY[0x1F4187DD8]();
}

uint64_t sub_19F1DC46C()
{
  return MEMORY[0x1F4187E10]();
}

uint64_t sub_19F1DC48C()
{
  return MEMORY[0x1F4187E28]();
}

uint64_t sub_19F1DC4AC()
{
  return MEMORY[0x1F4187E68]();
}

uint64_t sub_19F1DC4BC()
{
  return MEMORY[0x1F4187EA0]();
}

uint64_t sub_19F1DC4CC()
{
  return MEMORY[0x1F4187EB0]();
}

uint64_t sub_19F1DC4DC()
{
  return MEMORY[0x1F4187EB8]();
}

uint64_t sub_19F1DC4EC()
{
  return MEMORY[0x1F4187EC0]();
}

uint64_t sub_19F1DC4FC()
{
  return MEMORY[0x1F4187EC8]();
}

uint64_t sub_19F1DC50C()
{
  return MEMORY[0x1F4187ED0]();
}

uint64_t sub_19F1DC53C()
{
  return MEMORY[0x1F4187EE8]();
}

uint64_t sub_19F1DC54C()
{
  return MEMORY[0x1F4187EF8]();
}

uint64_t sub_19F1DC55C()
{
  return MEMORY[0x1F4187F00]();
}

uint64_t sub_19F1DC56C()
{
  return MEMORY[0x1F40E63C8]();
}

uint64_t sub_19F1DC57C()
{
  return MEMORY[0x1F4184008]();
}

uint64_t sub_19F1DC58C()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_19F1DC59C()
{
  return MEMORY[0x1F4184090]();
}

uint64_t sub_19F1DC5AC()
{
  return MEMORY[0x1F40E63F0]();
}

uint64_t sub_19F1DC5BC()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_19F1DC5CC()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_19F1DC5DC()
{
  return MEMORY[0x1F41841A8]();
}

uint64_t sub_19F1DC5EC()
{
  return MEMORY[0x1F41841C0]();
}

uint64_t sub_19F1DC5FC()
{
  return MEMORY[0x1F41841F0]();
}

uint64_t sub_19F1DC60C()
{
  return MEMORY[0x1F4184230]();
}

uint64_t sub_19F1DC61C()
{
  return MEMORY[0x1F4184250]();
}

uint64_t sub_19F1DC62C()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_19F1DC63C()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_19F1DC64C()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_19F1DC66C()
{
  return MEMORY[0x1F4184390]();
}

uint64_t sub_19F1DC67C()
{
  return MEMORY[0x1F4184398]();
}

uint64_t sub_19F1DC68C()
{
  return MEMORY[0x1F41843A0]();
}

uint64_t sub_19F1DC69C()
{
  return MEMORY[0x1F41843A8]();
}

uint64_t sub_19F1DC6AC()
{
  return MEMORY[0x1F41843D0]();
}

uint64_t sub_19F1DC6BC()
{
  return MEMORY[0x1F41843D8]();
}

uint64_t sub_19F1DC6CC()
{
  return MEMORY[0x1F4184410]();
}

uint64_t sub_19F1DC6DC()
{
  return MEMORY[0x1F4184418]();
}

uint64_t sub_19F1DC6EC()
{
  return MEMORY[0x1F4184430]();
}

uint64_t sub_19F1DC6FC()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_19F1DC70C()
{
  return MEMORY[0x1F41844A0]();
}

uint64_t sub_19F1DC71C()
{
  return MEMORY[0x1F4184568]();
}

uint64_t sub_19F1DC72C()
{
  return MEMORY[0x1F4184580]();
}

uint64_t sub_19F1DC73C()
{
  return MEMORY[0x1F40E64D8]();
}

uint64_t sub_19F1DC74C()
{
  return MEMORY[0x1F41845B0]();
}

uint64_t sub_19F1DC75C()
{
  return MEMORY[0x1F40D9658]();
}

uint64_t sub_19F1DC76C()
{
  return MEMORY[0x1F40E6520]();
}

uint64_t sub_19F1DC77C()
{
  return MEMORY[0x1F40E6528]();
}

uint64_t sub_19F1DC78C()
{
  return MEMORY[0x1F40E6548]();
}

uint64_t sub_19F1DC79C()
{
  return MEMORY[0x1F40E6560]();
}

uint64_t sub_19F1DC7AC()
{
  return MEMORY[0x1F40E6598]();
}

uint64_t sub_19F1DC7BC()
{
  return MEMORY[0x1F41886D0]();
}

uint64_t sub_19F1DC7CC()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_19F1DC7DC()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_19F1DC7EC()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_19F1DC7FC()
{
  return MEMORY[0x1F40F27B8]();
}

uint64_t sub_19F1DC80C()
{
  return MEMORY[0x1F4186FA0]();
}

uint64_t sub_19F1DC81C()
{
  return MEMORY[0x1F4186FB0]();
}

uint64_t sub_19F1DC82C()
{
  return MEMORY[0x1F4186FC0]();
}

uint64_t sub_19F1DC83C()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_19F1DC84C()
{
  return MEMORY[0x1F4186FF0]();
}

uint64_t sub_19F1DC85C()
{
  return MEMORY[0x1F4187098]();
}

uint64_t sub_19F1DC86C()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_19F1DC87C()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_19F1DC88C()
{
  return MEMORY[0x1F41870D8]();
}

uint64_t sub_19F1DC89C()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_19F1DC8AC()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_19F1DC8BC()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_19F1DC8CC()
{
  return MEMORY[0x1F4187130]();
}

uint64_t sub_19F1DC8DC()
{
  return MEMORY[0x1F4187168]();
}

uint64_t sub_19F1DC8EC()
{
  return MEMORY[0x1F4187198]();
}

uint64_t sub_19F1DC8FC()
{
  return MEMORY[0x1F41871A0]();
}

uint64_t sub_19F1DC90C()
{
  return MEMORY[0x1F41871A8]();
}

uint64_t sub_19F1DC91C()
{
  return MEMORY[0x1F41871B0]();
}

uint64_t sub_19F1DC92C()
{
  return MEMORY[0x1F41871D0]();
}

uint64_t sub_19F1DC93C()
{
  return MEMORY[0x1F4187218]();
}

uint64_t sub_19F1DC94C()
{
  return MEMORY[0x1F4187230]();
}

uint64_t sub_19F1DC95C()
{
  return MEMORY[0x1F4187240]();
}

uint64_t sub_19F1DC96C()
{
  return MEMORY[0x1F4187248]();
}

uint64_t sub_19F1DC97C()
{
  return MEMORY[0x1F4188708]();
}

uint64_t sub_19F1DC98C()
{
  return MEMORY[0x1F4188710]();
}

uint64_t sub_19F1DC99C()
{
  return MEMORY[0x1F4188718]();
}

uint64_t sub_19F1DC9AC()
{
  return MEMORY[0x1F4187278]();
}

uint64_t sub_19F1DC9BC()
{
  return MEMORY[0x1F4187288]();
}

uint64_t sub_19F1DC9CC()
{
  return MEMORY[0x1F41872D0]();
}

uint64_t sub_19F1DC9DC()
{
  return MEMORY[0x1F41872F8]();
}

uint64_t sub_19F1DC9EC()
{
  return MEMORY[0x1F40E6840]();
}

uint64_t sub_19F1DC9FC()
{
  return MEMORY[0x1F40E6848]();
}

uint64_t sub_19F1DCA0C()
{
  return MEMORY[0x1F40E68E8]();
}

uint64_t sub_19F1DCA1C()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_19F1DCA2C()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_19F1DCA3C()
{
  return MEMORY[0x1F40E6928]();
}

uint64_t sub_19F1DCA4C()
{
  return MEMORY[0x1F40E6978]();
}

uint64_t sub_19F1DCA5C()
{
  return MEMORY[0x1F40E69C0]();
}

uint64_t sub_19F1DCA6C()
{
  return MEMORY[0x1F4188720]();
}

uint64_t sub_19F1DCA7C()
{
  return MEMORY[0x1F4188728]();
}

uint64_t sub_19F1DCA8C()
{
  return MEMORY[0x1F4188758]();
}

uint64_t sub_19F1DCA9C()
{
  return MEMORY[0x1F4184638]();
}

uint64_t sub_19F1DCAAC()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_19F1DCABC()
{
  return MEMORY[0x1F4184648]();
}

uint64_t sub_19F1DCACC()
{
  return MEMORY[0x1F4184650]();
}

uint64_t sub_19F1DCADC()
{
  return MEMORY[0x1F4184660]();
}

uint64_t sub_19F1DCAEC()
{
  return MEMORY[0x1F4184730]();
}

uint64_t sub_19F1DCAFC()
{
  return MEMORY[0x1F4184770]();
}

uint64_t sub_19F1DCB0C()
{
  return MEMORY[0x1F4184788]();
}

uint64_t sub_19F1DCB1C()
{
  return MEMORY[0x1F4184790]();
}

uint64_t sub_19F1DCB2C()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_19F1DCB3C()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_19F1DCB4C()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_19F1DCB5C()
{
  return MEMORY[0x1F40E6BB0]();
}

uint64_t sub_19F1DCB6C()
{
  return MEMORY[0x1F40E6C30]();
}

uint64_t sub_19F1DCB7C()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_19F1DCB8C()
{
  return MEMORY[0x1F40E6C80]();
}

uint64_t sub_19F1DCB9C()
{
  return MEMORY[0x1F40E6C98]();
}

uint64_t sub_19F1DCBAC()
{
  return MEMORY[0x1F40E6CB8]();
}

uint64_t sub_19F1DCBBC()
{
  return MEMORY[0x1F40E6D48]();
}

uint64_t sub_19F1DCBCC()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_19F1DCBDC()
{
  return MEMORY[0x1F4184958]();
}

uint64_t sub_19F1DCBEC()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_19F1DCBFC()
{
  return MEMORY[0x1F4184A78]();
}

uint64_t sub_19F1DCC1C()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_19F1DCC2C()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_19F1DCC3C()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_19F1DCC4C()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_19F1DCC5C()
{
  return MEMORY[0x1F4184C20]();
}

uint64_t sub_19F1DCC6C()
{
  return MEMORY[0x1F4184C28]();
}

uint64_t _s9JetEngine15CodeAnyHashableV4hash4intoys6HasherVz_tF_0()
{
  return MEMORY[0x1F4184C30]();
}

uint64_t sub_19F1DCC8C()
{
  return MEMORY[0x1F4184C38]();
}

uint64_t sub_19F1DCCAC()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_19F1DCCBC()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_19F1DCCCC()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_19F1DCCDC()
{
  return MEMORY[0x1F4184CC0]();
}

uint64_t sub_19F1DCCEC()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_19F1DCCFC()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_19F1DCD0C()
{
  return MEMORY[0x1F4184D08]();
}

uint64_t sub_19F1DCD1C()
{
  return MEMORY[0x1F4184D18]();
}

uint64_t sub_19F1DCD2C()
{
  return MEMORY[0x1F4184D20]();
}

uint64_t sub_19F1DCD3C()
{
  return MEMORY[0x1F4184D48]();
}

uint64_t sub_19F1DCD4C()
{
  return MEMORY[0x1F4184D50]();
}

uint64_t sub_19F1DCD5C()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t sub_19F1DCD6C()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_19F1DCD7C()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_19F1DCD8C()
{
  return MEMORY[0x1F4184DB0]();
}

uint64_t sub_19F1DCD9C()
{
  return MEMORY[0x1F4184DC0]();
}

uint64_t sub_19F1DCDAC()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_19F1DCDBC()
{
  return MEMORY[0x1F4184DE8]();
}

uint64_t sub_19F1DCDCC()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_19F1DCDDC()
{
  return MEMORY[0x1F4184DF8]();
}

uint64_t sub_19F1DCDEC()
{
  return MEMORY[0x1F4184E10]();
}

uint64_t sub_19F1DCDFC()
{
  return MEMORY[0x1F4184E18]();
}

uint64_t sub_19F1DCE0C()
{
  return MEMORY[0x1F4184E28]();
}

uint64_t sub_19F1DCE1C()
{
  return MEMORY[0x1F4184E38]();
}

uint64_t sub_19F1DCE2C()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_19F1DCE3C()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_19F1DCE4C()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_19F1DCE5C()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_19F1DCE6C()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_19F1DCE7C()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_19F1DCE8C()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_19F1DCE9C()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_19F1DCEAC()
{
  return MEMORY[0x1F4184F50]();
}

uint64_t sub_19F1DCEBC()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_19F1DCECC()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_19F1DCEDC()
{
  return MEMORY[0x1F4184F78]();
}

uint64_t sub_19F1DCEEC()
{
  return MEMORY[0x1F4187F70]();
}

uint64_t sub_19F1DCEFC()
{
  return MEMORY[0x1F4187F78]();
}

uint64_t sub_19F1DCF0C()
{
  return MEMORY[0x1F4187F80]();
}

uint64_t sub_19F1DCF1C()
{
  return MEMORY[0x1F4184F98]();
}

uint64_t sub_19F1DCF2C()
{
  return MEMORY[0x1F4184FC0]();
}

uint64_t sub_19F1DCF3C()
{
  return MEMORY[0x1F4184FF8]();
}

uint64_t sub_19F1DCF4C()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_19F1DCF5C()
{
  return MEMORY[0x1F4185068]();
}

uint64_t sub_19F1DCF6C()
{
  return MEMORY[0x1F41850B0]();
}

uint64_t sub_19F1DCF7C()
{
  return MEMORY[0x1F41850B8]();
}

uint64_t sub_19F1DCF8C()
{
  return MEMORY[0x1F41850C0]();
}

uint64_t sub_19F1DCF9C()
{
  return MEMORY[0x1F4185178]();
}

uint64_t sub_19F1DCFAC()
{
  return MEMORY[0x1F41851A8]();
}

uint64_t sub_19F1DCFBC()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_19F1DCFCC()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_19F1DCFDC()
{
  return MEMORY[0x1F41852B8]();
}

uint64_t sub_19F1DCFEC()
{
  return MEMORY[0x1F41852E8]();
}

uint64_t sub_19F1DCFFC()
{
  return MEMORY[0x1F41852F0]();
}

uint64_t sub_19F1DD00C()
{
  return MEMORY[0x1F41852F8]();
}

uint64_t sub_19F1DD01C()
{
  return MEMORY[0x1F4185300]();
}

uint64_t sub_19F1DD02C()
{
  return MEMORY[0x1F4185320]();
}

uint64_t sub_19F1DD03C()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_19F1DD04C()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_19F1DD05C()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_19F1DD06C()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_19F1DD07C()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_19F1DD08C()
{
  return MEMORY[0x1F41853A8]();
}

uint64_t sub_19F1DD09C()
{
  return MEMORY[0x1F41853B0]();
}

uint64_t sub_19F1DD0AC()
{
  return MEMORY[0x1F41853B8]();
}

uint64_t sub_19F1DD0BC()
{
  return MEMORY[0x1F4185408]();
}

uint64_t sub_19F1DD0CC()
{
  return MEMORY[0x1F4185410]();
}

uint64_t sub_19F1DD0DC()
{
  return MEMORY[0x1F4185450]();
}

uint64_t sub_19F1DD0EC()
{
  return MEMORY[0x1F41854C0]();
}

uint64_t sub_19F1DD0FC()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_19F1DD11C()
{
  return MEMORY[0x1F41854E8]();
}

uint64_t sub_19F1DD12C()
{
  return MEMORY[0x1F41854F0]();
}

uint64_t sub_19F1DD13C()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_19F1DD14C()
{
  return MEMORY[0x1F4185500]();
}

uint64_t sub_19F1DD15C()
{
  return MEMORY[0x1F4185508]();
}

uint64_t sub_19F1DD16C()
{
  return MEMORY[0x1F4185518]();
}

uint64_t sub_19F1DD17C()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_19F1DD18C()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_19F1DD19C()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_19F1DD1AC()
{
  return MEMORY[0x1F4185588]();
}

uint64_t sub_19F1DD1BC()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_19F1DD1CC()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_19F1DD1DC()
{
  return MEMORY[0x1F41855E8]();
}

uint64_t sub_19F1DD1EC()
{
  return MEMORY[0x1F41855F0]();
}

uint64_t sub_19F1DD1FC()
{
  return MEMORY[0x1F41855F8]();
}

uint64_t sub_19F1DD20C()
{
  return MEMORY[0x1F4185618]();
}

uint64_t sub_19F1DD21C()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_19F1DD22C()
{
  return MEMORY[0x1F4185630]();
}

uint64_t sub_19F1DD23C()
{
  return MEMORY[0x1F4185638]();
}

uint64_t sub_19F1DD24C()
{
  return MEMORY[0x1F4185648]();
}

uint64_t sub_19F1DD25C()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_19F1DD26C()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_19F1DD27C()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_19F1DD28C()
{
  return MEMORY[0x1F41856A0]();
}

uint64_t sub_19F1DD29C()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_19F1DD2AC()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_19F1DD2BC()
{
  return MEMORY[0x1F4185710]();
}

uint64_t sub_19F1DD2CC()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_19F1DD2DC()
{
  return MEMORY[0x1F4185748]();
}

uint64_t sub_19F1DD2EC()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_19F1DD2FC()
{
  return MEMORY[0x1F4185760]();
}

uint64_t sub_19F1DD30C()
{
  return MEMORY[0x1F4185768]();
}

uint64_t sub_19F1DD31C()
{
  return MEMORY[0x1F41857B8]();
}

uint64_t sub_19F1DD32C()
{
  return MEMORY[0x1F41857F0]();
}

uint64_t sub_19F1DD33C()
{
  return MEMORY[0x1F4185818]();
}

uint64_t sub_19F1DD34C()
{
  return MEMORY[0x1F4185828]();
}

uint64_t sub_19F1DD35C()
{
  return MEMORY[0x1F4185830]();
}

uint64_t sub_19F1DD36C()
{
  return MEMORY[0x1F4185838]();
}

uint64_t sub_19F1DD37C()
{
  return MEMORY[0x1F4185840]();
}

uint64_t sub_19F1DD38C()
{
  return MEMORY[0x1F4185848]();
}

uint64_t sub_19F1DD39C()
{
  return MEMORY[0x1F4185850]();
}

uint64_t sub_19F1DD3AC()
{
  return MEMORY[0x1F4185858]();
}

uint64_t sub_19F1DD3BC()
{
  return MEMORY[0x1F4185860]();
}

uint64_t sub_19F1DD3CC()
{
  return MEMORY[0x1F4185868]();
}

uint64_t sub_19F1DD3DC()
{
  return MEMORY[0x1F4185870]();
}

uint64_t sub_19F1DD3EC()
{
  return MEMORY[0x1F41858D8]();
}

uint64_t sub_19F1DD3FC()
{
  return MEMORY[0x1F41859A8]();
}

uint64_t sub_19F1DD40C()
{
  return MEMORY[0x1F41859E8]();
}

uint64_t sub_19F1DD41C()
{
  return MEMORY[0x1F41859F0]();
}

uint64_t sub_19F1DD42C()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_19F1DD43C()
{
  return MEMORY[0x1F4185A38]();
}

uint64_t sub_19F1DD44C()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_19F1DD45C()
{
  return MEMORY[0x1F4185A58]();
}

uint64_t sub_19F1DD46C()
{
  return MEMORY[0x1F4185A60]();
}

uint64_t sub_19F1DD47C()
{
  return MEMORY[0x1F4185A68]();
}

uint64_t sub_19F1DD48C()
{
  return MEMORY[0x1F4185A78]();
}

uint64_t sub_19F1DD49C()
{
  return MEMORY[0x1F4185A88]();
}

uint64_t sub_19F1DD4AC()
{
  return MEMORY[0x1F4185AC0]();
}

uint64_t sub_19F1DD4BC()
{
  return MEMORY[0x1F4185AC8]();
}

uint64_t sub_19F1DD4CC()
{
  return MEMORY[0x1F4185AD0]();
}

uint64_t sub_19F1DD4DC()
{
  return MEMORY[0x1F4185AF0]();
}

uint64_t sub_19F1DD4EC()
{
  return MEMORY[0x1F4185AF8]();
}

uint64_t sub_19F1DD4FC()
{
  return MEMORY[0x1F4185B00]();
}

uint64_t sub_19F1DD50C()
{
  return MEMORY[0x1F4185B10]();
}

uint64_t sub_19F1DD51C()
{
  return MEMORY[0x1F4185B20]();
}

uint64_t sub_19F1DD52C()
{
  return MEMORY[0x1F4185B68]();
}

uint64_t sub_19F1DD53C()
{
  return MEMORY[0x1F4185B98]();
}

uint64_t sub_19F1DD55C()
{
  return MEMORY[0x1F4185BE8]();
}

uint64_t sub_19F1DD56C()
{
  return MEMORY[0x1F4185BF0]();
}

uint64_t sub_19F1DD57C()
{
  return MEMORY[0x1F4185BF8]();
}

uint64_t sub_19F1DD58C()
{
  return MEMORY[0x1F4185C00]();
}

uint64_t sub_19F1DD59C()
{
  return MEMORY[0x1F4185C08]();
}

uint64_t sub_19F1DD5AC()
{
  return MEMORY[0x1F4185C10]();
}

uint64_t sub_19F1DD5BC()
{
  return MEMORY[0x1F4185C18]();
}

uint64_t sub_19F1DD5CC()
{
  return MEMORY[0x1F4185C20]();
}

uint64_t sub_19F1DD5DC()
{
  return MEMORY[0x1F4185C28]();
}

uint64_t sub_19F1DD5EC()
{
  return MEMORY[0x1F4185C30]();
}

uint64_t sub_19F1DD5FC()
{
  return MEMORY[0x1F4185CF8]();
}

uint64_t sub_19F1DD60C()
{
  return MEMORY[0x1F4185D10]();
}

uint64_t sub_19F1DD61C()
{
  return MEMORY[0x1F4185D38]();
}

uint64_t sub_19F1DD62C()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_19F1DD63C()
{
  return MEMORY[0x1F4185DD0]();
}

uint64_t sub_19F1DD64C()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_19F1DD65C()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_19F1DD66C()
{
  return MEMORY[0x1F4188170]();
}

uint64_t sub_19F1DD6AC()
{
  return MEMORY[0x1F40E6E30]();
}

uint64_t sub_19F1DD6BC()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_19F1DD6CC()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_19F1DD6DC()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_19F1DD6EC()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_19F1DD6FC()
{
  return MEMORY[0x1F4185E90]();
}

uint64_t sub_19F1DD70C()
{
  return MEMORY[0x1F4185E98]();
}

uint64_t sub_19F1DD71C()
{
  return MEMORY[0x1F4185EA8]();
}

uint64_t sub_19F1DD72C()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_19F1DD73C()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_19F1DD74C()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_19F1DD75C()
{
  return MEMORY[0x1F4185EE0]();
}

uint64_t sub_19F1DD76C()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_19F1DD77C()
{
  return MEMORY[0x1F4185EF0]();
}

uint64_t sub_19F1DD78C()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_19F1DD79C()
{
  return MEMORY[0x1F4185F00]();
}

uint64_t sub_19F1DD7AC()
{
  return MEMORY[0x1F4185F10]();
}

uint64_t sub_19F1DD7BC()
{
  return MEMORY[0x1F4185F20]();
}

uint64_t sub_19F1DD7CC()
{
  return MEMORY[0x1F4185F28]();
}

uint64_t sub_19F1DD7DC()
{
  return MEMORY[0x1F4185F30]();
}

uint64_t sub_19F1DD7EC()
{
  return MEMORY[0x1F4185F40]();
}

uint64_t sub_19F1DD7FC()
{
  return MEMORY[0x1F4185F48]();
}

uint64_t sub_19F1DD80C()
{
  return MEMORY[0x1F4185F68]();
}

uint64_t sub_19F1DD82C()
{
  return MEMORY[0x1F40E6EB0]();
}

uint64_t sub_19F1DD83C()
{
  return MEMORY[0x1F40E6EB8]();
}

uint64_t sub_19F1DD84C()
{
  return MEMORY[0x1F40E6EC0]();
}

uint64_t sub_19F1DD86C()
{
  return MEMORY[0x1F4185FA8]();
}

uint64_t sub_19F1DD87C()
{
  return MEMORY[0x1F4185FB0]();
}

uint64_t sub_19F1DD88C()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t sub_19F1DD89C()
{
  return MEMORY[0x1F4185FC0]();
}

uint64_t sub_19F1DD8AC()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_19F1DD8BC()
{
  return MEMORY[0x1F4185FD0]();
}

uint64_t sub_19F1DD8CC()
{
  return MEMORY[0x1F4185FD8]();
}

uint64_t sub_19F1DD8DC()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_19F1DD8EC()
{
  return MEMORY[0x1F4185FE8]();
}

uint64_t sub_19F1DD8FC()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_19F1DD90C()
{
  return MEMORY[0x1F4186288]();
}

uint64_t sub_19F1DD91C()
{
  return MEMORY[0x1F4186290]();
}

uint64_t sub_19F1DD94C()
{
  return MEMORY[0x1F4188198]();
}

uint64_t sub_19F1DD95C()
{
  return MEMORY[0x1F41881A8]();
}

uint64_t sub_19F1DD96C()
{
  return MEMORY[0x1F41881B0]();
}

uint64_t sub_19F1DD98C()
{
  return MEMORY[0x1F4186318]();
}

uint64_t AMSErrorIsEqual()
{
  return MEMORY[0x1F410A920]();
}

uint64_t AMSLogableError()
{
  return MEMORY[0x1F410A948]();
}

uint64_t AMSLogableURL()
{
  return MEMORY[0x1F410A950]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1F41138A0]();
}

CCCryptorStatus CCCryptorCreateWithMode(CCOperation op, CCMode mode, CCAlgorithm alg, CCPadding padding, const void *iv, const void *key, size_t keyLength, const void *tweak, size_t tweakLength, int numRounds, CCModeOptions options, CCCryptorRef *cryptorRef)
{
  return MEMORY[0x1F40C94C0](*(void *)&op, *(void *)&mode, *(void *)&alg, *(void *)&padding, iv, key, keyLength, tweak);
}

CCCryptorStatus CCCryptorFinal(CCCryptorRef cryptorRef, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return MEMORY[0x1F40C94C8](cryptorRef, dataOut, dataOutAvailable, dataOutMoved);
}

uint64_t CCCryptorGCMFinalize()
{
  return MEMORY[0x1F40C94F0]();
}

uint64_t CCCryptorGCMSetIV()
{
  return MEMORY[0x1F40C9510]();
}

size_t CCCryptorGetOutputLength(CCCryptorRef cryptorRef, size_t inputLength, BOOL final)
{
  return MEMORY[0x1F40C9520](cryptorRef, inputLength, final);
}

CCCryptorStatus CCCryptorRelease(CCCryptorRef cryptorRef)
{
  return MEMORY[0x1F40C9528](cryptorRef);
}

CCCryptorStatus CCCryptorUpdate(CCCryptorRef cryptorRef, const void *dataIn, size_t dataInLength, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return MEMORY[0x1F40C9538](cryptorRef, dataIn, dataInLength, dataOut, dataOutAvailable, dataOutMoved);
}

unsigned __int8 *__cdecl CC_SHA1(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return (unsigned __int8 *)MEMORY[0x1F40C9730](data, *(void *)&len, md);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9778](md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return MEMORY[0x1F40C9780](c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return MEMORY[0x1F40C9788](c, data, *(void *)&len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x1F40D70A8]();
  return result;
}

CFStringRef CFBundleGetIdentifier(CFBundleRef bundle)
{
  return (CFStringRef)MEMORY[0x1F40D7568](bundle);
}

CFBundleRef CFBundleGetMainBundle(void)
{
  return (CFBundleRef)MEMORY[0x1F40D7598]();
}

CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale)
{
  return (CFLocaleIdentifier)MEMORY[0x1F40D7C20](locale);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1F40D7E90](applicationID);
}

Boolean CFPreferencesAppValueIsForced(CFStringRef key, CFStringRef applicationID)
{
  return MEMORY[0x1F40D7E98](key, applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7EA0](key, applicationID);
}

void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
{
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

void CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1F40D80B0]();
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return MEMORY[0x1F40D8128](mode, returnAfterSourceHandled, seconds);
}

CFRunLoopSourceRef CFRunLoopSourceCreate(CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context)
{
  return (CFRunLoopSourceRef)MEMORY[0x1F40D8140](allocator, order, context);
}

void CFRunLoopSourceInvalidate(CFRunLoopSourceRef source)
{
}

void CFRunLoopSourceSignal(CFRunLoopSourceRef source)
{
}

void CFRunLoopStop(CFRunLoopRef rl)
{
}

CFRunLoopTimerRef CFRunLoopTimerCreateWithHandler(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, void *block)
{
  return (CFRunLoopTimerRef)MEMORY[0x1F40D8188](allocator, flags, order, block, fireDate, interval);
}

void CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer)
{
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return MEMORY[0x1F40D8510](theString, buffer, bufferSize, *(void *)&encoding);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1F40D97D0](retstr, sx, sy);
}

CGColorRef CGColorCreateCopyByMatchingToColorSpace(CGColorSpaceRef a1, CGColorRenderingIntent intent, CGColorRef color, CFDictionaryRef options)
{
  return (CGColorRef)MEMORY[0x1F40D9980](a1, *(void *)&intent, color, options);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  MEMORY[0x1F40D99F0](color);
  return result;
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D99F8](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

CGColorSpaceModel CGColorSpaceGetModel(CGColorSpaceRef space)
{
  return MEMORY[0x1F40D9BE0](space);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x1F40DB228]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x1F40DB268]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x1F40DB270]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x1F40DB298]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x1F40DB2A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  MEMORY[0x1F40DB310]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.CGFloat height = v5;
  result.size.CGFloat width = v4;
  result.origin.CGFloat y = v3;
  result.origin.CGFloat x = v2;
  return result;
}

CGSize CGSizeApplyAffineTransform(CGSize size, CGAffineTransform *t)
{
  MEMORY[0x1F40DB4C0](t, (__n128)size, *(__n128 *)&size.height);
  result.CGFloat height = v3;
  result.CGFloat width = v2;
  return result;
}

JSContextGroupRef JSContextGetGroup(JSContextRef ctx)
{
  return (JSContextGroupRef)MEMORY[0x1F40E9BE8](ctx);
}

JSValueRef JSEvaluateScript(JSContextRef ctx, JSStringRef script, JSObjectRef thisObject, JSStringRef sourceURL, int startingLineNumber, JSValueRef *exception)
{
  return (JSValueRef)MEMORY[0x1F40E9BF8](ctx, script, thisObject, sourceURL, *(void *)&startingLineNumber, exception);
}

void JSGarbageCollect(JSContextRef ctx)
{
}

JSPropertyNameArrayRef JSObjectCopyPropertyNames(JSContextRef ctx, JSObjectRef object)
{
  return (JSPropertyNameArrayRef)MEMORY[0x1F40E9C38](ctx, object);
}

size_t JSObjectGetArrayBufferByteLength(JSContextRef ctx, JSObjectRef object, JSValueRef *exception)
{
  return MEMORY[0x1F40E9C48](ctx, object, exception);
}

void *__cdecl JSObjectGetArrayBufferBytesPtr(JSContextRef ctx, JSObjectRef object, JSValueRef *exception)
{
  return (void *)MEMORY[0x1F40E9C50](ctx, object, exception);
}

size_t JSObjectGetTypedArrayByteLength(JSContextRef ctx, JSObjectRef object, JSValueRef *exception)
{
  return MEMORY[0x1F40E9C80](ctx, object, exception);
}

size_t JSObjectGetTypedArrayByteOffset(JSContextRef ctx, JSObjectRef object, JSValueRef *exception)
{
  return MEMORY[0x1F40E9C88](ctx, object, exception);
}

void *__cdecl JSObjectGetTypedArrayBytesPtr(JSContextRef ctx, JSObjectRef object, JSValueRef *exception)
{
  return (void *)MEMORY[0x1F40E9C90](ctx, object, exception);
}

size_t JSObjectGetTypedArrayLength(JSContextRef ctx, JSObjectRef object, JSValueRef *exception)
{
  return MEMORY[0x1F40E9C98](ctx, object, exception);
}

BOOL JSObjectIsConstructor(JSContextRef ctx, JSObjectRef object)
{
  return MEMORY[0x1F40E9CA8](ctx, object);
}

BOOL JSObjectIsFunction(JSContextRef ctx, JSObjectRef object)
{
  return MEMORY[0x1F40E9CB0](ctx, object);
}

JSObjectRef JSObjectMakeArrayBufferWithBytesNoCopy(JSContextRef ctx, void *bytes, size_t byteLength, JSTypedArrayBytesDeallocator bytesDeallocator, void *deallocatorContext, JSValueRef *exception)
{
  return (JSObjectRef)MEMORY[0x1F40E9CC8](ctx, bytes, byteLength, bytesDeallocator, deallocatorContext, exception);
}

JSObjectRef JSObjectMakeTypedArray(JSContextRef ctx, JSTypedArrayType arrayType, size_t length, JSValueRef *exception)
{
  return (JSObjectRef)MEMORY[0x1F40E9CF0](ctx, *(void *)&arrayType, length, exception);
}

JSObjectRef JSObjectMakeTypedArrayWithArrayBuffer(JSContextRef ctx, JSTypedArrayType arrayType, JSObjectRef buffer, JSValueRef *exception)
{
  return (JSObjectRef)MEMORY[0x1F40E9CF8](ctx, *(void *)&arrayType, buffer, exception);
}

JSObjectRef JSObjectMakeTypedArrayWithArrayBufferAndOffset(JSContextRef ctx, JSTypedArrayType arrayType, JSObjectRef buffer, size_t byteOffset, size_t length, JSValueRef *exception)
{
  return (JSObjectRef)MEMORY[0x1F40E9D00](ctx, *(void *)&arrayType, buffer, byteOffset, length, exception);
}

JSObjectRef JSObjectMakeTypedArrayWithBytesNoCopy(JSContextRef ctx, JSTypedArrayType arrayType, void *bytes, size_t byteLength, JSTypedArrayBytesDeallocator bytesDeallocator, void *deallocatorContext, JSValueRef *exception)
{
  return (JSObjectRef)MEMORY[0x1F40E9D08](ctx, *(void *)&arrayType, bytes, byteLength, bytesDeallocator, deallocatorContext, exception);
}

size_t JSPropertyNameArrayGetCount(JSPropertyNameArrayRef array)
{
  return MEMORY[0x1F40E9D30](array);
}

JSStringRef JSPropertyNameArrayGetNameAtIndex(JSPropertyNameArrayRef array, size_t index)
{
  return (JSStringRef)MEMORY[0x1F40E9D38](array, index);
}

void JSPropertyNameArrayRelease(JSPropertyNameArrayRef array)
{
}

uint64_t JSRemoteInspectorSetLogToSystemConsole()
{
  return MEMORY[0x1F40E9D68]();
}

CFStringRef JSStringCopyCFString(CFAllocatorRef alloc, JSStringRef string)
{
  return (CFStringRef)MEMORY[0x1F40E9D88](alloc, string);
}

JSStringRef JSStringCreateWithUTF8CString(const char *string)
{
  return (JSStringRef)MEMORY[0x1F40E9DA0](string);
}

const JSChar *__cdecl JSStringGetCharactersPtr(JSStringRef string)
{
  return (const JSChar *)MEMORY[0x1F40E9DA8](string);
}

size_t JSStringGetLength(JSStringRef string)
{
  return MEMORY[0x1F40E9DB0](string);
}

void JSStringRelease(JSStringRef string)
{
}

JSStringRef JSStringRetain(JSStringRef string)
{
  return (JSStringRef)MEMORY[0x1F40E9DD8](string);
}

JSStringRef JSValueCreateJSONString(JSContextRef ctx, JSValueRef value, unsigned int indent, JSValueRef *exception)
{
  return (JSStringRef)MEMORY[0x1F40E9DE0](ctx, value, *(void *)&indent, exception);
}

JSType JSValueGetType(JSContextRef ctx, JSValueRef value)
{
  return MEMORY[0x1F40E9DE8](ctx, value);
}

JSTypedArrayType JSValueGetTypedArrayType(JSContextRef ctx, JSValueRef value, JSValueRef *exception)
{
  return MEMORY[0x1F40E9DF0](ctx, value, exception);
}

BOOL JSValueIsObject(JSContextRef ctx, JSValueRef value)
{
  return MEMORY[0x1F40E9E20](ctx, value);
}

JSValueRef JSValueMakeFromJSONString(JSContextRef ctx, JSStringRef string)
{
  return (JSValueRef)MEMORY[0x1F40E9E48](ctx, string);
}

JSObjectRef JSValueToObject(JSContextRef ctx, JSValueRef value, JSValueRef *exception)
{
  return (JSObjectRef)MEMORY[0x1F40E9E88](ctx, value, exception);
}

JSStringRef JSValueToStringCopy(JSContextRef ctx, JSValueRef value, JSValueRef *exception)
{
  return (JSStringRef)MEMORY[0x1F40E9E90](ctx, value, exception);
}

uint64_t JSWeakCreate()
{
  return MEMORY[0x1F40E9EA0]();
}

uint64_t JSWeakGetObject()
{
  return MEMORY[0x1F40E9EA8]();
}

uint64_t JSWeakRelease()
{
  return MEMORY[0x1F40E9ED0]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1F417CDE0]();
}

uint64_t MGGetFloat32Answer()
{
  return MEMORY[0x1F417CE10]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x1F417CE28]();
}

uint64_t MGGetStringAnswer()
{
  return MEMORY[0x1F417CE38]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1F40E7010](aClassName);
}

void NSLog(NSString *format, ...)
{
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1F40E72C8]();
}

SecCertificateRef SecCertificateCreateWithData(CFAllocatorRef allocator, CFDataRef data)
{
  return (SecCertificateRef)MEMORY[0x1F40F6B80](allocator, data);
}

Boolean SecKeyIsAlgorithmSupported(SecKeyRef key, SecKeyOperationType operation, SecKeyAlgorithm algorithm)
{
  return MEMORY[0x1F40F6F60](key, operation, algorithm);
}

Boolean SecKeyVerifySignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef signedData, CFDataRef signature, CFErrorRef *error)
{
  return MEMORY[0x1F40F6F80](key, algorithm, signedData, signature, error);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return MEMORY[0x1F40F70F0](rnd, count, bytes);
}

SecKeyRef SecTrustCopyKey(SecTrustRef trust)
{
  return (SecKeyRef)MEMORY[0x1F40F71B8](trust);
}

OSStatus SecTrustCreateWithCertificates(CFTypeRef certificates, CFTypeRef policies, SecTrustRef *trust)
{
  return MEMORY[0x1F40F71E0](certificates, policies, trust);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFRunLoopSetPerCalloutAutoreleasepoolEnabled()
{
  return MEMORY[0x1F40D90C0]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

double __exp10(double a1)
{
  MEMORY[0x1F40C9B90](a1);
  return result;
}

uint64_t __memset_chk()
{
  return MEMORY[0x1F40C9C38]();
}

{
  return MEMORY[0x1F41813D0]();
}

{
  return MEMORY[0x1F41813F0]();
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1F4186398]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1F40CA1E8]();
}

uint64_t archive_entry_pathname()
{
  return MEMORY[0x1F417E000]();
}

uint64_t archive_entry_set_pathname()
{
  return MEMORY[0x1F417E040]();
}

uint64_t archive_entry_sourcepath()
{
  return MEMORY[0x1F417E068]();
}

uint64_t archive_error_string()
{
  return MEMORY[0x1F417E080]();
}

uint64_t archive_read_close()
{
  return MEMORY[0x1F417E098]();
}

uint64_t archive_read_data_block()
{
  return MEMORY[0x1F417E0A8]();
}

uint64_t archive_read_disk_descend()
{
  return MEMORY[0x1F417E0C8]();
}

uint64_t archive_read_disk_new()
{
  return MEMORY[0x1F417E0D8]();
}

uint64_t archive_read_disk_open()
{
  return MEMORY[0x1F417E0E0]();
}

uint64_t archive_read_free()
{
  return MEMORY[0x1F417E110]();
}

uint64_t archive_read_new()
{
  return MEMORY[0x1F417E118]();
}

uint64_t archive_read_next_header()
{
  return MEMORY[0x1F417E120]();
}

uint64_t archive_read_open()
{
  return MEMORY[0x1F417E130]();
}

uint64_t archive_read_support_format_all()
{
  return MEMORY[0x1F417E180]();
}

uint64_t archive_write_add_filter_none()
{
  return MEMORY[0x1F417E1C8]();
}

uint64_t archive_write_close()
{
  return MEMORY[0x1F417E1D0]();
}

uint64_t archive_write_data()
{
  return MEMORY[0x1F417E1D8]();
}

uint64_t archive_write_data_block()
{
  return MEMORY[0x1F417E1E0]();
}

uint64_t archive_write_disk_new()
{
  return MEMORY[0x1F417E1E8]();
}

uint64_t archive_write_disk_set_options()
{
  return MEMORY[0x1F417E1F0]();
}

uint64_t archive_write_free()
{
  return MEMORY[0x1F417E208]();
}

uint64_t archive_write_header()
{
  return MEMORY[0x1F417E210]();
}

uint64_t archive_write_new()
{
  return MEMORY[0x1F417E218]();
}

uint64_t archive_write_open()
{
  return MEMORY[0x1F417E220]();
}

uint64_t archive_write_set_format_ustar()
{
  return MEMORY[0x1F417E258]();
}

void bzero(void *a1, size_t a2)
{
}

int chdir(const char *a1)
{
  return MEMORY[0x1F40CB390](a1);
}

int chmod(const char *a1, mode_t a2)
{
  return MEMORY[0x1F40CB3A0](a1, a2);
}

void clearerr(FILE *a1)
{
}

int clock_gettime(clockid_t __clock_id, timespec *__tp)
{
  return MEMORY[0x1F40CB3D0](*(void *)&__clock_id, __tp);
}

int close(int a1)
{
  return MEMORY[0x1F40CB3F8](*(void *)&a1);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBAC0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1F40CBDB0]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1F40CBDB8](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1F40CBDC8](__handle, __symbol);
}

void exit(int a1)
{
}

long double exp2(long double __x)
{
  MEMORY[0x1F40CBFE8](__x);
  return result;
}

int fclose(FILE *a1)
{
  return MEMORY[0x1F40CC050](a1);
}

int ferror(FILE *a1)
{
  return MEMORY[0x1F40CC0A0](a1);
}

int fgetc(FILE *a1)
{
  return MEMORY[0x1F40CC0E8](a1);
}

long double fmod(long double __x, long double __y)
{
  MEMORY[0x1F40CC1A0](__x, __y);
  return result;
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x1F40CC1C0](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1F40CC200](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x1F40CC290](a1, a2, *(void *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x1F40CC2E0](a1);
}

char *__cdecl getcwd(char *a1, size_t a2)
{
  return (char *)MEMORY[0x1F40CC398](a1, a2);
}

ssize_t getline(char **__linep, size_t *__linecapp, FILE *__stream)
{
  return MEMORY[0x1F40CC428](__linep, __linecapp, __stream);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1F40CC700]();
}

long double log2(long double __x)
{
  MEMORY[0x1F40CC8A8](__x);
  return result;
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x1F40CCA60](info);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB90](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD20](__b, *(void *)&__c, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1F40CD040](*(void *)&token, state64);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

uint64_t nw_path_create_default_evaluator()
{
  return MEMORY[0x1F40F3850]();
}

uint64_t nw_path_evaluator_copy_path()
{
  return MEMORY[0x1F40F3880]();
}

nw_path_status_t nw_path_get_status(nw_path_t path)
{
  return MEMORY[0x1F40F3938](path);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1F4181718](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x1F40CD5F0](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_unfair_recursive_lock_lock_with_options()
{
  return MEMORY[0x1F40CD610]();
}

uint64_t os_unfair_recursive_lock_unlock()
{
  return MEMORY[0x1F40CD628]();
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1F40CD648]();
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return MEMORY[0x1F40CDC50](*(void *)&a1, a2, a3);
}

void *__cdecl reallocf(void *__ptr, size_t __size)
{
  return (void *)MEMORY[0x1F40CDC88](__ptr, __size);
}

uint64_t rootless_check_datavault_flag()
{
  return MEMORY[0x1F40CDD98]();
}

uint64_t rootless_convert_to_datavault()
{
  return MEMORY[0x1F40CDDA8]();
}

uint64_t rootless_mkdir_datavault()
{
  return MEMORY[0x1F40CDDB0]();
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1F4181F90](a1, *(void *)&a2, a3, *(void *)&n, a5);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return MEMORY[0x1F4181FB0](a1, *(void *)&a2, *(void *)&a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x1F4181FC0](a1, *(void *)&a2);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x1F4181FC8](a1);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x1F4181FE8](a1, *(void *)&a2, a3, *(void *)&a4, a5);
}

int sqlite3_close_v2(sqlite3 *a1)
{
  return MEMORY[0x1F4182068](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x1F4182070](a1, *(void *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1F4182078](a1, *(void *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1F4182088](pStmt);
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x1F41820A0](a1, *(void *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x1F41820B0](a1, *(void *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x1F41820C8](a1, *(void *)&iCol);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x1F41821D8](pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x1F4182280](filename, ppDb, *(void *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x1F4182290](db, zSql, *(void *)&nByte, ppStmt, pzTail);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x1F41823B0](a1);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1F40CE188](*(void *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1F41863F0]();
}

uint64_t swift_allocateMetadataPack()
{
  return MEMORY[0x1F4186400]();
}

uint64_t swift_allocateWitnessTablePack()
{
  return MEMORY[0x1F4186408]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x1F41881C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1F4186478]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1F4188200]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1F4188208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1F41864A0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1F41864D0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1F41864F0]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x1F4186508]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1F4186568]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1F4186580]();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return MEMORY[0x1F4186598]();
}

uint64_t swift_getExtendedExistentialTypeMetadata_unique()
{
  return MEMORY[0x1F41865A0]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x1F41865C0]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1F41865F0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassFromObject()
{
  return MEMORY[0x1F4186600]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1F4186630]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1F4186638]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1F4186688]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1F41866C0]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return MEMORY[0x1F41866F0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1F4186730]();
}

uint64_t swift_readAtKeyPath()
{
  return MEMORY[0x1F4186738]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setAtReferenceWritableKeyPath()
{
  return MEMORY[0x1F4186780]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1F41867B0]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_task_localValuePop()
{
  return MEMORY[0x1F4188280]();
}

uint64_t swift_task_localValuePush()
{
  return MEMORY[0x1F4188288]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1F41867E8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x1F4186848]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x1F4186850]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x1F4186870]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x1F4186878]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1F41868A0]();
}

uint64_t swift_weakCopyAssign()
{
  return MEMORY[0x1F41868A8]();
}

uint64_t swift_weakCopyInit()
{
  return MEMORY[0x1F41868B0]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_weakTakeAssign()
{
  return MEMORY[0x1F41868D0]();
}

uint64_t swift_weakTakeInit()
{
  return MEMORY[0x1F41868D8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

uint64_t ucnv_close()
{
  return MEMORY[0x1F417FC30]();
}

uint64_t ucnv_fromUChars()
{
  return MEMORY[0x1F417FC58]();
}

uint64_t ucnv_getMaxCharSize()
{
  return MEMORY[0x1F417FC98]();
}

uint64_t ucnv_open()
{
  return MEMORY[0x1F417FCB8]();
}

int ungetc(int a1, FILE *a2)
{
  return MEMORY[0x1F40CE5D0](*(void *)&a1, a2);
}

uint64_t unum_close()
{
  return MEMORY[0x1F4180290]();
}

uint64_t unum_formatInt64()
{
  return MEMORY[0x1F41802B8]();
}

uint64_t unum_open()
{
  return MEMORY[0x1F41802F0]();
}

uint64_t unum_setAttribute()
{
  return MEMORY[0x1F4180320]();
}

uint64_t uplrules_close()
{
  return MEMORY[0x1F4180410]();
}

uint64_t uplrules_open()
{
  return MEMORY[0x1F4180420]();
}

uint64_t uplrules_select()
{
  return MEMORY[0x1F4180430]();
}