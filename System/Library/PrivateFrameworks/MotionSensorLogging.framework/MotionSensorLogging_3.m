uint64_t CMMsl::KappaCrashResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  __int16 v6;
  float v7;
  uint64_t vars8;

  v3 = this;
  v4 = (uint64_t *)(this + 280);
  v5 = *(void *)(this + 280);
  if (v5)
  {
    this = PB::Writer::writeVarInt(a2);
    v5 = *v4;
    v6 = *((_WORD *)v4 + 4);
    if ((*v4 & 0x2000000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  v6 = *(_WORD *)(this + 288);
  if ((v5 & 0x2000000000000) != 0)
  {
LABEL_5:
    this = PB::Writer::write(a2, *(float *)(v3 + 208));
    v5 = *v4;
    v6 = *((_WORD *)v4 + 4);
  }
LABEL_6:
  if ((v6 & 0x100) != 0)
  {
    this = PB::Writer::write(a2);
    v5 = *v4;
    v6 = *((_WORD *)v4 + 4);
    if ((v6 & 0x80) == 0)
    {
LABEL_8:
      if ((v6 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_84;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_85;
  }
LABEL_84:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 4) == 0)
  {
LABEL_10:
    if ((v6 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_86;
  }
LABEL_85:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 2) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_87;
  }
LABEL_86:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000) == 0)
  {
LABEL_12:
    if ((v6 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_88;
  }
LABEL_87:
  this = PB::Writer::writeVarInt(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 1) == 0)
  {
LABEL_13:
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_89;
  }
LABEL_88:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x10) == 0)
  {
LABEL_14:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_90;
  }
LABEL_89:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_91;
  }
LABEL_90:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_92;
  }
LABEL_91:
  this = PB::Writer::write(a2, *(float *)(v3 + 76));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_93;
  }
LABEL_92:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_94;
  }
LABEL_93:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_95;
  }
LABEL_94:
  this = PB::Writer::write(a2, *(float *)(v3 + 140));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_96;
  }
LABEL_95:
  this = PB::Writer::write(a2, *(float *)(v3 + 212));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000) == 0)
  {
LABEL_21:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_97;
  }
LABEL_96:
  this = PB::Writer::write(a2, *(float *)(v3 + 104));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_98;
  }
LABEL_97:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_99;
  }
LABEL_98:
  this = PB::Writer::write(a2, *(float *)(v3 + 144));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_100;
  }
LABEL_99:
  this = PB::Writer::write(a2, *(float *)(v3 + 216));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_101;
  }
LABEL_100:
  this = PB::Writer::write(a2, *(float *)(v3 + 108));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_102;
  }
LABEL_101:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_103;
  }
LABEL_102:
  this = PB::Writer::write(a2, *(float *)(v3 + 148));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_104;
  }
LABEL_103:
  this = PB::Writer::write(a2, *(float *)(v3 + 220));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_105;
  }
LABEL_104:
  this = PB::Writer::write(a2, *(float *)(v3 + 236));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_106;
  }
LABEL_105:
  this = PB::Writer::write(a2, *(float *)(v3 + 232));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40) == 0) {
      goto LABEL_32;
    }
    goto LABEL_107;
  }
LABEL_106:
  this = PB::Writer::write(a2, *(float *)(v3 + 240));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40) == 0)
  {
LABEL_32:
    if ((v5 & 2) == 0) {
      goto LABEL_33;
    }
    goto LABEL_108;
  }
LABEL_107:
  this = PB::Writer::write(a2, *(float *)(v3 + 36));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 2) == 0)
  {
LABEL_33:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_109;
  }
LABEL_108:
  this = PB::Writer::write(a2, *(float *)(v3 + 16));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000) == 0)
  {
LABEL_34:
    if ((v6 & 0x800) == 0) {
      goto LABEL_35;
    }
    goto LABEL_110;
  }
LABEL_109:
  this = PB::Writer::write(a2, *(float *)(v3 + 72));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x800) == 0)
  {
LABEL_35:
    if ((v6 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_111;
  }
LABEL_110:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 8) == 0)
  {
LABEL_36:
    if ((v5 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_112;
  }
LABEL_111:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80) == 0)
  {
LABEL_37:
    if ((v5 & 0x400) == 0) {
      goto LABEL_38;
    }
    goto LABEL_113;
  }
LABEL_112:
  this = PB::Writer::write(a2, *(float *)(v3 + 40));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400) == 0)
  {
LABEL_38:
    if ((v5 & 0x200) == 0) {
      goto LABEL_39;
    }
    goto LABEL_114;
  }
LABEL_113:
  this = PB::Writer::write(a2, *(float *)(v3 + 52));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200) == 0)
  {
LABEL_39:
    if ((v5 & 0x100) == 0) {
      goto LABEL_40;
    }
    goto LABEL_115;
  }
LABEL_114:
  this = PB::Writer::write(a2, *(float *)(v3 + 48));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100) == 0)
  {
LABEL_40:
    if ((v5 & 4) == 0) {
      goto LABEL_41;
    }
    goto LABEL_116;
  }
LABEL_115:
  this = PB::Writer::write(a2, *(float *)(v3 + 44));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 4) == 0)
  {
LABEL_41:
    if ((v5 & 0x20) == 0) {
      goto LABEL_42;
    }
    goto LABEL_117;
  }
LABEL_116:
  this = PB::Writer::write(a2, *(float *)(v3 + 20));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20) == 0)
  {
LABEL_42:
    if ((v5 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_118;
  }
LABEL_117:
  this = PB::Writer::write(a2, *(float *)(v3 + 32));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10) == 0)
  {
LABEL_43:
    if ((v5 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_119;
  }
LABEL_118:
  this = PB::Writer::write(a2, *(float *)(v3 + 28));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 8) == 0)
  {
LABEL_44:
    if ((v5 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_120;
  }
LABEL_119:
  this = PB::Writer::write(a2, *(float *)(v3 + 24));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800) == 0)
  {
LABEL_45:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_121;
  }
LABEL_120:
  this = PB::Writer::write(a2, *(float *)(v3 + 56));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000) == 0)
  {
LABEL_46:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_122;
  }
LABEL_121:
  this = PB::Writer::write(a2, *(float *)(v3 + 68));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000) == 0)
  {
LABEL_47:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_123;
  }
LABEL_122:
  this = PB::Writer::write(a2, *(float *)(v3 + 64));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000) == 0)
  {
LABEL_48:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_124;
  }
LABEL_123:
  this = PB::Writer::write(a2, *(float *)(v3 + 60));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_49:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_125;
  }
LABEL_124:
  this = PB::Writer::write(a2, *(float *)(v3 + 112));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_50:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_126;
  }
LABEL_125:
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_51:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_127;
  }
LABEL_126:
  this = PB::Writer::write(a2, *(float *)(v3 + 152));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_52:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_128;
  }
LABEL_127:
  this = PB::Writer::write(a2, *(float *)(v3 + 224));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_53:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_129;
  }
LABEL_128:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_54:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_130;
  }
LABEL_129:
  this = PB::Writer::write(a2, *(float *)(v3 + 136));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_55:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_131;
  }
LABEL_130:
  this = PB::Writer::write(a2, *(float *)(v3 + 156));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x40) == 0) {
      goto LABEL_57;
    }
    goto LABEL_132;
  }
LABEL_131:
  this = PB::Writer::write(a2, *(float *)(v3 + 228));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x40) == 0)
  {
LABEL_57:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_133;
  }
LABEL_132:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_134;
  }
LABEL_133:
  this = PB::Writer::write(a2, *(float *)(v3 + 252));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x200) == 0) {
      goto LABEL_60;
    }
    goto LABEL_135;
  }
LABEL_134:
  this = PB::Writer::write(a2, *(float *)(v3 + 244));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((v6 & 0x200) == 0)
  {
LABEL_60:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_136;
  }
LABEL_135:
  this = PB::Writer::write(a2);
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_137;
  }
LABEL_136:
  this = PB::Writer::write(a2, *(float *)(v3 + 160));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_62:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_138;
  }
LABEL_137:
  this = PB::Writer::write(a2, *(float *)(v3 + 164));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_63:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_139;
  }
LABEL_138:
  this = PB::Writer::write(a2, *(float *)(v3 + 168));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_140;
  }
LABEL_139:
  this = PB::Writer::write(a2, *(float *)(v3 + 176));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_141;
  }
LABEL_140:
  this = PB::Writer::write(a2, *(float *)(v3 + 172));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_66:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_142;
  }
LABEL_141:
  this = PB::Writer::write(a2, *(float *)(v3 + 180));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_67:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_143;
  }
LABEL_142:
  this = PB::Writer::write(a2, *(float *)(v3 + 184));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_144;
  }
LABEL_143:
  this = PB::Writer::write(a2, *(float *)(v3 + 188));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_145;
  }
LABEL_144:
  this = PB::Writer::write(a2, *(float *)(v3 + 192));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_146;
  }
LABEL_145:
  this = PB::Writer::write(a2, *(float *)(v3 + 200));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_147;
  }
LABEL_146:
  this = PB::Writer::write(a2, *(float *)(v3 + 196));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_148;
  }
LABEL_147:
  this = PB::Writer::write(a2, *(float *)(v3 + 204));
  v5 = *v4;
  v6 = *((_WORD *)v4 + 4);
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x400) == 0) {
      goto LABEL_74;
    }
    goto LABEL_149;
  }
LABEL_148:
  this = PB::Writer::writeVarInt(a2);
  v5 = *v4;
  if ((v4[1] & 0x400) == 0)
  {
LABEL_74:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_150;
  }
LABEL_149:
  this = PB::Writer::write(a2);
  v5 = *v4;
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_151;
  }
LABEL_150:
  this = PB::Writer::write(a2, *(float *)(v3 + 260));
  v5 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
LABEL_151:
  this = PB::Writer::write(a2, *(float *)(v3 + 264));
  v5 = *v4;
  if ((*v4 & 0x2000000000000000) != 0)
  {
LABEL_77:
    this = PB::Writer::write(a2, *(float *)(v3 + 256));
    v5 = *v4;
  }
LABEL_78:
  if ((v5 & 0x80000) == 0)
  {
    if ((v5 & 0x100000) == 0) {
      goto LABEL_80;
    }
LABEL_154:
    this = PB::Writer::write(a2, *(float *)(v3 + 92));
    if ((*v4 & 0x200000) == 0) {
      return this;
    }
    goto LABEL_155;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  v5 = *v4;
  if ((*v4 & 0x100000) != 0) {
    goto LABEL_154;
  }
LABEL_80:
  if ((v5 & 0x200000) == 0) {
    return this;
  }
LABEL_155:
  v7 = *(float *)(v3 + 96);
  return PB::Writer::write(a2, v7);
}

uint64_t CMMsl::KappaCrashResult::hash_value(CMMsl::KappaCrashResult *this)
{
  __int16 v1 = *((_WORD *)this + 144);
  uint64_t v2 = *((void *)this + 35);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x2000000000000) != 0) {
      goto LABEL_3;
    }
LABEL_203:
    uint64_t v179 = 0;
    if ((*((_WORD *)this + 144) & 0x100) != 0) {
      goto LABEL_6;
    }
    goto LABEL_204;
  }
  uint64_t v3 = *((void *)this + 1);
  if ((v2 & 0x2000000000000) == 0) {
    goto LABEL_203;
  }
LABEL_3:
  float v4 = *((float *)this + 52);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  uint64_t v179 = v5;
  if ((*((_WORD *)this + 144) & 0x100) != 0)
  {
LABEL_6:
    uint64_t v178 = *((unsigned __int8 *)this + 276);
    if ((v1 & 0x80) != 0) {
      goto LABEL_7;
    }
    goto LABEL_205;
  }
LABEL_204:
  uint64_t v178 = 0;
  if ((v1 & 0x80) != 0)
  {
LABEL_7:
    uint64_t v177 = *((unsigned __int8 *)this + 275);
    if ((v1 & 0x20) != 0) {
      goto LABEL_8;
    }
    goto LABEL_206;
  }
LABEL_205:
  uint64_t v177 = 0;
  if ((v1 & 0x20) != 0)
  {
LABEL_8:
    uint64_t v176 = *((unsigned __int8 *)this + 273);
    if ((v1 & 4) != 0) {
      goto LABEL_9;
    }
    goto LABEL_207;
  }
LABEL_206:
  uint64_t v176 = 0;
  if ((v1 & 4) != 0)
  {
LABEL_9:
    uint64_t v175 = *((unsigned __int8 *)this + 270);
    if ((v1 & 2) != 0) {
      goto LABEL_10;
    }
    goto LABEL_208;
  }
LABEL_207:
  uint64_t v175 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_10:
    uint64_t v174 = *((unsigned __int8 *)this + 269);
    if ((v2 & 0x40000) != 0) {
      goto LABEL_11;
    }
    goto LABEL_209;
  }
LABEL_208:
  uint64_t v174 = 0;
  if ((v2 & 0x40000) != 0)
  {
LABEL_11:
    uint64_t v173 = *((int *)this + 21);
    if (v1) {
      goto LABEL_12;
    }
    goto LABEL_210;
  }
LABEL_209:
  uint64_t v173 = 0;
  if (v1)
  {
LABEL_12:
    uint64_t v172 = *((unsigned __int8 *)this + 268);
    if ((v1 & 0x10) != 0) {
      goto LABEL_13;
    }
    goto LABEL_211;
  }
LABEL_210:
  uint64_t v172 = 0;
  if ((v1 & 0x10) != 0)
  {
LABEL_13:
    uint64_t v171 = *((unsigned __int8 *)this + 272);
    if ((v2 & 0x20000) != 0) {
      goto LABEL_14;
    }
LABEL_212:
    uint64_t v170 = 0;
    if ((v2 & 0x10000) != 0) {
      goto LABEL_17;
    }
LABEL_213:
    uint64_t v169 = 0;
    if ((v2 & 0x400000) != 0) {
      goto LABEL_20;
    }
LABEL_214:
    uint64_t v168 = 0;
    if ((v2 & 0x8000000) != 0) {
      goto LABEL_23;
    }
LABEL_215:
    uint64_t v167 = 0;
    if ((v2 & 0x100000000) != 0) {
      goto LABEL_26;
    }
LABEL_216:
    uint64_t v166 = 0;
    if ((v2 & 0x4000000000000) != 0) {
      goto LABEL_29;
    }
LABEL_217:
    uint64_t v165 = 0;
    if ((v2 & 0x800000) != 0) {
      goto LABEL_32;
    }
LABEL_218:
    uint64_t v164 = 0;
    if ((v2 & 0x10000000) != 0) {
      goto LABEL_35;
    }
LABEL_219:
    uint64_t v163 = 0;
    if ((v2 & 0x200000000) != 0) {
      goto LABEL_38;
    }
LABEL_220:
    uint64_t v162 = 0;
    if ((v2 & 0x8000000000000) != 0) {
      goto LABEL_41;
    }
LABEL_221:
    uint64_t v161 = 0;
    if ((v2 & 0x1000000) != 0) {
      goto LABEL_44;
    }
LABEL_222:
    uint64_t v160 = 0;
    if ((v2 & 0x20000000) != 0) {
      goto LABEL_47;
    }
LABEL_223:
    uint64_t v159 = 0;
    if ((v2 & 0x400000000) != 0) {
      goto LABEL_50;
    }
LABEL_224:
    uint64_t v158 = 0;
    if ((v2 & 0x10000000000000) != 0) {
      goto LABEL_53;
    }
LABEL_225:
    uint64_t v157 = 0;
    if ((v2 & 0x80000) != 0) {
      goto LABEL_56;
    }
LABEL_226:
    uint64_t v156 = 0;
    if ((v2 & 0x100000) != 0) {
      goto LABEL_59;
    }
LABEL_227:
    uint64_t v155 = 0;
    if ((v2 & 0x200000) != 0) {
      goto LABEL_62;
    }
LABEL_228:
    uint64_t v154 = 0;
    if ((v2 & 0x100000000000000) != 0) {
      goto LABEL_65;
    }
LABEL_229:
    uint64_t v153 = 0;
    if ((v2 & 0x80000000000000) != 0) {
      goto LABEL_68;
    }
LABEL_230:
    uint64_t v152 = 0;
    if ((v2 & 0x200000000000000) != 0) {
      goto LABEL_71;
    }
LABEL_231:
    uint64_t v151 = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_74;
    }
LABEL_232:
    uint64_t v150 = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_77;
    }
LABEL_233:
    uint64_t v149 = 0;
    if ((v2 & 0x8000) != 0) {
      goto LABEL_80;
    }
LABEL_234:
    uint64_t v148 = 0;
    if ((*((_WORD *)this + 144) & 0x800) != 0) {
      goto LABEL_83;
    }
    goto LABEL_235;
  }
LABEL_211:
  uint64_t v171 = 0;
  if ((v2 & 0x20000) == 0) {
    goto LABEL_212;
  }
LABEL_14:
  float v6 = *((float *)this + 20);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  uint64_t v170 = v7;
  if ((v2 & 0x10000) == 0) {
    goto LABEL_213;
  }
LABEL_17:
  float v8 = *((float *)this + 19);
  uint64_t v9 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v9 = 0;
  }
  uint64_t v169 = v9;
  if ((v2 & 0x400000) == 0) {
    goto LABEL_214;
  }
LABEL_20:
  float v10 = *((float *)this + 25);
  uint64_t v11 = LODWORD(v10);
  if (v10 == 0.0) {
    uint64_t v11 = 0;
  }
  uint64_t v168 = v11;
  if ((v2 & 0x8000000) == 0) {
    goto LABEL_215;
  }
LABEL_23:
  float v12 = *((float *)this + 30);
  uint64_t v13 = LODWORD(v12);
  if (v12 == 0.0) {
    uint64_t v13 = 0;
  }
  uint64_t v167 = v13;
  if ((v2 & 0x100000000) == 0) {
    goto LABEL_216;
  }
LABEL_26:
  float v14 = *((float *)this + 35);
  uint64_t v15 = LODWORD(v14);
  if (v14 == 0.0) {
    uint64_t v15 = 0;
  }
  uint64_t v166 = v15;
  if ((v2 & 0x4000000000000) == 0) {
    goto LABEL_217;
  }
LABEL_29:
  float v16 = *((float *)this + 53);
  uint64_t v17 = LODWORD(v16);
  if (v16 == 0.0) {
    uint64_t v17 = 0;
  }
  uint64_t v165 = v17;
  if ((v2 & 0x800000) == 0) {
    goto LABEL_218;
  }
LABEL_32:
  float v18 = *((float *)this + 26);
  uint64_t v19 = LODWORD(v18);
  if (v18 == 0.0) {
    uint64_t v19 = 0;
  }
  uint64_t v164 = v19;
  if ((v2 & 0x10000000) == 0) {
    goto LABEL_219;
  }
LABEL_35:
  float v20 = *((float *)this + 31);
  uint64_t v21 = LODWORD(v20);
  if (v20 == 0.0) {
    uint64_t v21 = 0;
  }
  uint64_t v163 = v21;
  if ((v2 & 0x200000000) == 0) {
    goto LABEL_220;
  }
LABEL_38:
  float v22 = *((float *)this + 36);
  uint64_t v23 = LODWORD(v22);
  if (v22 == 0.0) {
    uint64_t v23 = 0;
  }
  uint64_t v162 = v23;
  if ((v2 & 0x8000000000000) == 0) {
    goto LABEL_221;
  }
LABEL_41:
  float v24 = *((float *)this + 54);
  uint64_t v25 = LODWORD(v24);
  if (v24 == 0.0) {
    uint64_t v25 = 0;
  }
  uint64_t v161 = v25;
  if ((v2 & 0x1000000) == 0) {
    goto LABEL_222;
  }
LABEL_44:
  float v26 = *((float *)this + 27);
  uint64_t v27 = LODWORD(v26);
  if (v26 == 0.0) {
    uint64_t v27 = 0;
  }
  uint64_t v160 = v27;
  if ((v2 & 0x20000000) == 0) {
    goto LABEL_223;
  }
LABEL_47:
  float v28 = *((float *)this + 32);
  uint64_t v29 = LODWORD(v28);
  if (v28 == 0.0) {
    uint64_t v29 = 0;
  }
  uint64_t v159 = v29;
  if ((v2 & 0x400000000) == 0) {
    goto LABEL_224;
  }
LABEL_50:
  float v30 = *((float *)this + 37);
  uint64_t v31 = LODWORD(v30);
  if (v30 == 0.0) {
    uint64_t v31 = 0;
  }
  uint64_t v158 = v31;
  if ((v2 & 0x10000000000000) == 0) {
    goto LABEL_225;
  }
LABEL_53:
  float v32 = *((float *)this + 55);
  uint64_t v33 = LODWORD(v32);
  if (v32 == 0.0) {
    uint64_t v33 = 0;
  }
  uint64_t v157 = v33;
  if ((v2 & 0x80000) == 0) {
    goto LABEL_226;
  }
LABEL_56:
  float v34 = *((float *)this + 22);
  uint64_t v35 = LODWORD(v34);
  if (v34 == 0.0) {
    uint64_t v35 = 0;
  }
  uint64_t v156 = v35;
  if ((v2 & 0x100000) == 0) {
    goto LABEL_227;
  }
LABEL_59:
  float v36 = *((float *)this + 23);
  uint64_t v37 = LODWORD(v36);
  if (v36 == 0.0) {
    uint64_t v37 = 0;
  }
  uint64_t v155 = v37;
  if ((v2 & 0x200000) == 0) {
    goto LABEL_228;
  }
LABEL_62:
  float v38 = *((float *)this + 24);
  uint64_t v39 = LODWORD(v38);
  if (v38 == 0.0) {
    uint64_t v39 = 0;
  }
  uint64_t v154 = v39;
  if ((v2 & 0x100000000000000) == 0) {
    goto LABEL_229;
  }
LABEL_65:
  float v40 = *((float *)this + 59);
  uint64_t v41 = LODWORD(v40);
  if (v40 == 0.0) {
    uint64_t v41 = 0;
  }
  uint64_t v153 = v41;
  if ((v2 & 0x80000000000000) == 0) {
    goto LABEL_230;
  }
LABEL_68:
  float v42 = *((float *)this + 58);
  uint64_t v43 = LODWORD(v42);
  if (v42 == 0.0) {
    uint64_t v43 = 0;
  }
  uint64_t v152 = v43;
  if ((v2 & 0x200000000000000) == 0) {
    goto LABEL_231;
  }
LABEL_71:
  float v44 = *((float *)this + 60);
  uint64_t v45 = LODWORD(v44);
  if (v44 == 0.0) {
    uint64_t v45 = 0;
  }
  uint64_t v151 = v45;
  if ((v2 & 0x40) == 0) {
    goto LABEL_232;
  }
LABEL_74:
  float v46 = *((float *)this + 9);
  uint64_t v47 = LODWORD(v46);
  if (v46 == 0.0) {
    uint64_t v47 = 0;
  }
  uint64_t v150 = v47;
  if ((v2 & 2) == 0) {
    goto LABEL_233;
  }
LABEL_77:
  float v48 = *((float *)this + 4);
  uint64_t v49 = LODWORD(v48);
  if (v48 == 0.0) {
    uint64_t v49 = 0;
  }
  uint64_t v149 = v49;
  if ((v2 & 0x8000) == 0) {
    goto LABEL_234;
  }
LABEL_80:
  float v50 = *((float *)this + 18);
  uint64_t v51 = LODWORD(v50);
  if (v50 == 0.0) {
    uint64_t v51 = 0;
  }
  uint64_t v148 = v51;
  if ((*((_WORD *)this + 144) & 0x800) != 0)
  {
LABEL_83:
    uint64_t v147 = *((unsigned __int8 *)this + 279);
    if ((v1 & 8) != 0) {
      goto LABEL_84;
    }
    goto LABEL_236;
  }
LABEL_235:
  uint64_t v147 = 0;
  if ((v1 & 8) != 0)
  {
LABEL_84:
    uint64_t v146 = *((unsigned __int8 *)this + 271);
    if ((v2 & 0x80) != 0) {
      goto LABEL_85;
    }
LABEL_237:
    uint64_t v145 = 0;
    if ((v2 & 0x400) != 0) {
      goto LABEL_88;
    }
LABEL_238:
    uint64_t v144 = 0;
    if ((v2 & 0x200) != 0) {
      goto LABEL_91;
    }
LABEL_239:
    uint64_t v143 = 0;
    if ((v2 & 0x100) != 0) {
      goto LABEL_94;
    }
LABEL_240:
    uint64_t v142 = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_97;
    }
LABEL_241:
    uint64_t v141 = 0;
    if ((v2 & 0x20) != 0) {
      goto LABEL_100;
    }
LABEL_242:
    uint64_t v140 = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_103;
    }
LABEL_243:
    uint64_t v139 = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_106;
    }
LABEL_244:
    uint64_t v138 = 0;
    if ((v2 & 0x800) != 0) {
      goto LABEL_109;
    }
LABEL_245:
    uint64_t v137 = 0;
    if ((v2 & 0x4000) != 0) {
      goto LABEL_112;
    }
LABEL_246:
    uint64_t v136 = 0;
    if ((v2 & 0x2000) != 0) {
      goto LABEL_115;
    }
LABEL_247:
    uint64_t v135 = 0;
    if ((v2 & 0x1000) != 0) {
      goto LABEL_118;
    }
LABEL_248:
    uint64_t v134 = 0;
    if ((v2 & 0x2000000) != 0) {
      goto LABEL_121;
    }
LABEL_249:
    uint64_t v133 = 0;
    if ((v2 & 0x40000000) != 0) {
      goto LABEL_124;
    }
LABEL_250:
    uint64_t v132 = 0;
    if ((v2 & 0x800000000) != 0) {
      goto LABEL_127;
    }
LABEL_251:
    uint64_t v131 = 0;
    if ((v2 & 0x20000000000000) != 0) {
      goto LABEL_130;
    }
LABEL_252:
    uint64_t v83 = 0;
    if ((v2 & 0x4000000) != 0) {
      goto LABEL_134;
    }
LABEL_253:
    uint64_t v85 = 0;
    if ((v2 & 0x80000000) != 0) {
      goto LABEL_138;
    }
LABEL_254:
    uint64_t v87 = 0;
    if ((v2 & 0x1000000000) != 0) {
      goto LABEL_141;
    }
LABEL_255:
    uint64_t v89 = 0;
    if ((v2 & 0x40000000000000) != 0) {
      goto LABEL_144;
    }
LABEL_256:
    uint64_t v91 = 0;
    if ((v1 & 0x40) != 0) {
      goto LABEL_147;
    }
    goto LABEL_257;
  }
LABEL_236:
  uint64_t v146 = 0;
  if ((v2 & 0x80) == 0) {
    goto LABEL_237;
  }
LABEL_85:
  float v52 = *((float *)this + 10);
  uint64_t v53 = LODWORD(v52);
  if (v52 == 0.0) {
    uint64_t v53 = 0;
  }
  uint64_t v145 = v53;
  if ((v2 & 0x400) == 0) {
    goto LABEL_238;
  }
LABEL_88:
  float v54 = *((float *)this + 13);
  uint64_t v55 = LODWORD(v54);
  if (v54 == 0.0) {
    uint64_t v55 = 0;
  }
  uint64_t v144 = v55;
  if ((v2 & 0x200) == 0) {
    goto LABEL_239;
  }
LABEL_91:
  float v56 = *((float *)this + 12);
  uint64_t v57 = LODWORD(v56);
  if (v56 == 0.0) {
    uint64_t v57 = 0;
  }
  uint64_t v143 = v57;
  if ((v2 & 0x100) == 0) {
    goto LABEL_240;
  }
LABEL_94:
  float v58 = *((float *)this + 11);
  uint64_t v59 = LODWORD(v58);
  if (v58 == 0.0) {
    uint64_t v59 = 0;
  }
  uint64_t v142 = v59;
  if ((v2 & 4) == 0) {
    goto LABEL_241;
  }
LABEL_97:
  float v60 = *((float *)this + 5);
  uint64_t v61 = LODWORD(v60);
  if (v60 == 0.0) {
    uint64_t v61 = 0;
  }
  uint64_t v141 = v61;
  if ((v2 & 0x20) == 0) {
    goto LABEL_242;
  }
LABEL_100:
  float v62 = *((float *)this + 8);
  uint64_t v63 = LODWORD(v62);
  if (v62 == 0.0) {
    uint64_t v63 = 0;
  }
  uint64_t v140 = v63;
  if ((v2 & 0x10) == 0) {
    goto LABEL_243;
  }
LABEL_103:
  float v64 = *((float *)this + 7);
  uint64_t v65 = LODWORD(v64);
  if (v64 == 0.0) {
    uint64_t v65 = 0;
  }
  uint64_t v139 = v65;
  if ((v2 & 8) == 0) {
    goto LABEL_244;
  }
LABEL_106:
  float v66 = *((float *)this + 6);
  uint64_t v67 = LODWORD(v66);
  if (v66 == 0.0) {
    uint64_t v67 = 0;
  }
  uint64_t v138 = v67;
  if ((v2 & 0x800) == 0) {
    goto LABEL_245;
  }
LABEL_109:
  float v68 = *((float *)this + 14);
  uint64_t v69 = LODWORD(v68);
  if (v68 == 0.0) {
    uint64_t v69 = 0;
  }
  uint64_t v137 = v69;
  if ((v2 & 0x4000) == 0) {
    goto LABEL_246;
  }
LABEL_112:
  float v70 = *((float *)this + 17);
  uint64_t v71 = LODWORD(v70);
  if (v70 == 0.0) {
    uint64_t v71 = 0;
  }
  uint64_t v136 = v71;
  if ((v2 & 0x2000) == 0) {
    goto LABEL_247;
  }
LABEL_115:
  float v72 = *((float *)this + 16);
  uint64_t v73 = LODWORD(v72);
  if (v72 == 0.0) {
    uint64_t v73 = 0;
  }
  uint64_t v135 = v73;
  if ((v2 & 0x1000) == 0) {
    goto LABEL_248;
  }
LABEL_118:
  float v74 = *((float *)this + 15);
  uint64_t v75 = LODWORD(v74);
  if (v74 == 0.0) {
    uint64_t v75 = 0;
  }
  uint64_t v134 = v75;
  if ((v2 & 0x2000000) == 0) {
    goto LABEL_249;
  }
LABEL_121:
  float v76 = *((float *)this + 28);
  uint64_t v77 = LODWORD(v76);
  if (v76 == 0.0) {
    uint64_t v77 = 0;
  }
  uint64_t v133 = v77;
  if ((v2 & 0x40000000) == 0) {
    goto LABEL_250;
  }
LABEL_124:
  float v78 = *((float *)this + 33);
  uint64_t v79 = LODWORD(v78);
  if (v78 == 0.0) {
    uint64_t v79 = 0;
  }
  uint64_t v132 = v79;
  if ((v2 & 0x800000000) == 0) {
    goto LABEL_251;
  }
LABEL_127:
  float v80 = *((float *)this + 38);
  uint64_t v81 = LODWORD(v80);
  if (v80 == 0.0) {
    uint64_t v81 = 0;
  }
  uint64_t v131 = v81;
  if ((v2 & 0x20000000000000) == 0) {
    goto LABEL_252;
  }
LABEL_130:
  float v82 = *((float *)this + 56);
  if (v82 == 0.0) {
    uint64_t v83 = 0;
  }
  else {
    uint64_t v83 = LODWORD(v82);
  }
  if ((v2 & 0x4000000) == 0) {
    goto LABEL_253;
  }
LABEL_134:
  float v84 = *((float *)this + 29);
  if (v84 == 0.0) {
    uint64_t v85 = 0;
  }
  else {
    uint64_t v85 = LODWORD(v84);
  }
  if ((v2 & 0x80000000) == 0) {
    goto LABEL_254;
  }
LABEL_138:
  float v86 = *((float *)this + 34);
  uint64_t v87 = LODWORD(v86);
  if (v86 == 0.0) {
    uint64_t v87 = 0;
  }
  if ((v2 & 0x1000000000) == 0) {
    goto LABEL_255;
  }
LABEL_141:
  float v88 = *((float *)this + 39);
  uint64_t v89 = LODWORD(v88);
  if (v88 == 0.0) {
    uint64_t v89 = 0;
  }
  if ((v2 & 0x40000000000000) == 0) {
    goto LABEL_256;
  }
LABEL_144:
  float v90 = *((float *)this + 57);
  uint64_t v91 = LODWORD(v90);
  if (v90 == 0.0) {
    uint64_t v91 = 0;
  }
  if ((v1 & 0x40) != 0)
  {
LABEL_147:
    uint64_t v92 = *((unsigned __int8 *)this + 274);
    if ((v2 & 0x1000000000000000) != 0) {
      goto LABEL_148;
    }
LABEL_258:
    uint64_t v94 = 0;
    if ((v2 & 0x400000000000000) != 0) {
      goto LABEL_151;
    }
LABEL_259:
    uint64_t v96 = 0;
    if ((*((_WORD *)this + 144) & 0x200) != 0) {
      goto LABEL_154;
    }
    goto LABEL_260;
  }
LABEL_257:
  uint64_t v92 = 0;
  if ((v2 & 0x1000000000000000) == 0) {
    goto LABEL_258;
  }
LABEL_148:
  float v93 = *((float *)this + 63);
  uint64_t v94 = LODWORD(v93);
  if (v93 == 0.0) {
    uint64_t v94 = 0;
  }
  if ((v2 & 0x400000000000000) == 0) {
    goto LABEL_259;
  }
LABEL_151:
  float v95 = *((float *)this + 61);
  uint64_t v96 = LODWORD(v95);
  if (v95 == 0.0) {
    uint64_t v96 = 0;
  }
  if ((*((_WORD *)this + 144) & 0x200) != 0)
  {
LABEL_154:
    uint64_t v97 = *((unsigned __int8 *)this + 277);
    if ((v2 & 0x2000000000) != 0) {
      goto LABEL_155;
    }
LABEL_261:
    uint64_t v99 = 0;
    if ((v2 & 0x4000000000) != 0) {
      goto LABEL_158;
    }
LABEL_262:
    uint64_t v101 = 0;
    if ((v2 & 0x8000000000) != 0) {
      goto LABEL_161;
    }
LABEL_263:
    uint64_t v103 = 0;
    if ((v2 & 0x20000000000) != 0) {
      goto LABEL_164;
    }
LABEL_264:
    uint64_t v105 = 0;
    if ((v2 & 0x10000000000) != 0) {
      goto LABEL_167;
    }
LABEL_265:
    uint64_t v107 = 0;
    if ((v2 & 0x40000000000) != 0) {
      goto LABEL_170;
    }
LABEL_266:
    uint64_t v109 = 0;
    if ((v2 & 0x80000000000) != 0) {
      goto LABEL_173;
    }
LABEL_267:
    uint64_t v111 = 0;
    if ((v2 & 0x100000000000) != 0) {
      goto LABEL_176;
    }
LABEL_268:
    uint64_t v113 = 0;
    if ((v2 & 0x200000000000) != 0) {
      goto LABEL_179;
    }
LABEL_269:
    uint64_t v115 = 0;
    if ((v2 & 0x800000000000) != 0) {
      goto LABEL_182;
    }
LABEL_270:
    uint64_t v117 = 0;
    if ((v2 & 0x400000000000) != 0) {
      goto LABEL_185;
    }
LABEL_271:
    uint64_t v119 = 0;
    if ((v2 & 0x1000000000000) != 0) {
      goto LABEL_188;
    }
LABEL_272:
    uint64_t v121 = 0;
    if ((v2 & 0x800000000000000) != 0) {
      goto LABEL_191;
    }
    goto LABEL_273;
  }
LABEL_260:
  uint64_t v97 = 0;
  if ((v2 & 0x2000000000) == 0) {
    goto LABEL_261;
  }
LABEL_155:
  float v98 = *((float *)this + 40);
  uint64_t v99 = LODWORD(v98);
  if (v98 == 0.0) {
    uint64_t v99 = 0;
  }
  if ((v2 & 0x4000000000) == 0) {
    goto LABEL_262;
  }
LABEL_158:
  float v100 = *((float *)this + 41);
  uint64_t v101 = LODWORD(v100);
  if (v100 == 0.0) {
    uint64_t v101 = 0;
  }
  if ((v2 & 0x8000000000) == 0) {
    goto LABEL_263;
  }
LABEL_161:
  float v102 = *((float *)this + 42);
  uint64_t v103 = LODWORD(v102);
  if (v102 == 0.0) {
    uint64_t v103 = 0;
  }
  if ((v2 & 0x20000000000) == 0) {
    goto LABEL_264;
  }
LABEL_164:
  float v104 = *((float *)this + 44);
  uint64_t v105 = LODWORD(v104);
  if (v104 == 0.0) {
    uint64_t v105 = 0;
  }
  if ((v2 & 0x10000000000) == 0) {
    goto LABEL_265;
  }
LABEL_167:
  float v106 = *((float *)this + 43);
  uint64_t v107 = LODWORD(v106);
  if (v106 == 0.0) {
    uint64_t v107 = 0;
  }
  if ((v2 & 0x40000000000) == 0) {
    goto LABEL_266;
  }
LABEL_170:
  float v108 = *((float *)this + 45);
  uint64_t v109 = LODWORD(v108);
  if (v108 == 0.0) {
    uint64_t v109 = 0;
  }
  if ((v2 & 0x80000000000) == 0) {
    goto LABEL_267;
  }
LABEL_173:
  float v110 = *((float *)this + 46);
  uint64_t v111 = LODWORD(v110);
  if (v110 == 0.0) {
    uint64_t v111 = 0;
  }
  if ((v2 & 0x100000000000) == 0) {
    goto LABEL_268;
  }
LABEL_176:
  float v112 = *((float *)this + 47);
  uint64_t v113 = LODWORD(v112);
  if (v112 == 0.0) {
    uint64_t v113 = 0;
  }
  if ((v2 & 0x200000000000) == 0) {
    goto LABEL_269;
  }
LABEL_179:
  float v114 = *((float *)this + 48);
  uint64_t v115 = LODWORD(v114);
  if (v114 == 0.0) {
    uint64_t v115 = 0;
  }
  if ((v2 & 0x800000000000) == 0) {
    goto LABEL_270;
  }
LABEL_182:
  float v116 = *((float *)this + 50);
  uint64_t v117 = LODWORD(v116);
  if (v116 == 0.0) {
    uint64_t v117 = 0;
  }
  if ((v2 & 0x400000000000) == 0) {
    goto LABEL_271;
  }
LABEL_185:
  float v118 = *((float *)this + 49);
  uint64_t v119 = LODWORD(v118);
  if (v118 == 0.0) {
    uint64_t v119 = 0;
  }
  if ((v2 & 0x1000000000000) == 0) {
    goto LABEL_272;
  }
LABEL_188:
  float v120 = *((float *)this + 51);
  uint64_t v121 = LODWORD(v120);
  if (v120 == 0.0) {
    uint64_t v121 = 0;
  }
  if ((v2 & 0x800000000000000) != 0)
  {
LABEL_191:
    uint64_t v122 = *((int *)this + 62);
    if ((*((_WORD *)this + 144) & 0x400) != 0) {
      goto LABEL_192;
    }
    goto LABEL_274;
  }
LABEL_273:
  uint64_t v122 = 0;
  if ((*((_WORD *)this + 144) & 0x400) != 0)
  {
LABEL_192:
    uint64_t v123 = *((unsigned __int8 *)this + 278);
    if ((v2 & 0x4000000000000000) != 0) {
      goto LABEL_193;
    }
LABEL_275:
    uint64_t v125 = 0;
    if (v2 < 0) {
      goto LABEL_196;
    }
    goto LABEL_276;
  }
LABEL_274:
  uint64_t v123 = 0;
  if ((v2 & 0x4000000000000000) == 0) {
    goto LABEL_275;
  }
LABEL_193:
  float v124 = *((float *)this + 65);
  uint64_t v125 = LODWORD(v124);
  if (v124 == 0.0) {
    uint64_t v125 = 0;
  }
  if (v2 < 0)
  {
LABEL_196:
    float v126 = *((float *)this + 66);
    uint64_t v127 = LODWORD(v126);
    if (v126 == 0.0) {
      uint64_t v127 = 0;
    }
    if ((v2 & 0x2000000000000000) != 0) {
      goto LABEL_199;
    }
LABEL_277:
    uint64_t v129 = 0;
    return v179 ^ v3 ^ v178 ^ v177 ^ v176 ^ v175 ^ v174 ^ v173 ^ v172 ^ v171 ^ v170 ^ v169 ^ v168 ^ v167 ^ v166 ^ v165 ^ v164 ^ v163 ^ v162 ^ v161 ^ v160 ^ v159 ^ v158 ^ v157 ^ v156 ^ v155 ^ v154 ^ v153 ^ v152 ^ v151 ^ v150 ^ v149 ^ v148 ^ v147 ^ v146 ^ v145 ^ v144 ^ v143 ^ v142 ^ v141 ^ v140 ^ v139 ^ v138 ^ v137 ^ v136 ^ v135 ^ v134 ^ v133 ^ v132 ^ v131 ^ v83 ^ v85 ^ v87 ^ v89 ^ v91 ^ v92 ^ v94 ^ v96 ^ v97 ^ v99 ^ v101 ^ v103 ^ v105 ^ v107 ^ v109 ^ v111 ^ v113 ^ v115 ^ v117 ^ v119 ^ v121 ^ v122 ^ v123 ^ v125 ^ v127 ^ v129;
  }
LABEL_276:
  uint64_t v127 = 0;
  if ((v2 & 0x2000000000000000) == 0) {
    goto LABEL_277;
  }
LABEL_199:
  float v128 = *((float *)this + 64);
  uint64_t v129 = LODWORD(v128);
  if (v128 == 0.0) {
    uint64_t v129 = 0;
  }
  return v179 ^ v3 ^ v178 ^ v177 ^ v176 ^ v175 ^ v174 ^ v173 ^ v172 ^ v171 ^ v170 ^ v169 ^ v168 ^ v167 ^ v166 ^ v165 ^ v164 ^ v163 ^ v162 ^ v161 ^ v160 ^ v159 ^ v158 ^ v157 ^ v156 ^ v155 ^ v154 ^ v153 ^ v152 ^ v151 ^ v150 ^ v149 ^ v148 ^ v147 ^ v146 ^ v145 ^ v144 ^ v143 ^ v142 ^ v141 ^ v140 ^ v139 ^ v138 ^ v137 ^ v136 ^ v135 ^ v134 ^ v133 ^ v132 ^ v131 ^ v83 ^ v85 ^ v87 ^ v89 ^ v91 ^ v92 ^ v94 ^ v96 ^ v97 ^ v99 ^ v101 ^ v103 ^ v105 ^ v107 ^ v109 ^ v111 ^ v113 ^ v115 ^ v117 ^ v119 ^ v121 ^ v122 ^ v123 ^ v125 ^ v127 ^ v129;
}

void CMMsl::KappaDirectionOfTravel::~KappaDirectionOfTravel(CMMsl::KappaDirectionOfTravel *this)
{
  *(void *)this = &unk_270642830;
  uint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::KappaDirectionOfTravel::~KappaDirectionOfTravel(this);
  JUMPOUT(0x25A2B2850);
}

CMMsl::KappaDirectionOfTravel *CMMsl::KappaDirectionOfTravel::KappaDirectionOfTravel(CMMsl::KappaDirectionOfTravel *this, const CMMsl::KappaDirectionOfTravel *a2)
{
  *(void *)this = &unk_270642830;
  *(_OWORD *)((char *)this + 8) = 0u;
  float v4 = (void *)((char *)this + 8);
  *((_DWORD *)this + 36) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 8) != 0)
  {
    uint64_t v7 = *((void *)a2 + 10);
    int v6 = 8;
    *((_DWORD *)this + 36) = 8;
    *((void *)this + 10) = v7;
    int v5 = *((_DWORD *)a2 + 36);
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = 0;
  if ((v5 & 0x20) != 0)
  {
LABEL_5:
    int v8 = *((_DWORD *)a2 + 23);
    v6 |= 0x20u;
    *((_DWORD *)this + 36) = v6;
    *((_DWORD *)this + 23) = v8;
    int v5 = *((_DWORD *)a2 + 36);
  }
LABEL_6:
  if ((v5 & 0x40) != 0)
  {
    int v11 = *((_DWORD *)a2 + 24);
    v6 |= 0x40u;
    *((_DWORD *)this + 36) = v6;
    *((_DWORD *)this + 24) = v11;
    int v5 = *((_DWORD *)a2 + 36);
    if ((v5 & 0x80) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  int v12 = *((_DWORD *)a2 + 25);
  v6 |= 0x80u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 25) = v12;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v13 = *((_DWORD *)a2 + 22);
  v6 |= 0x10u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 22) = v13;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v14 = *((_DWORD *)a2 + 28);
  v6 |= 0x400u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 28) = v14;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v15 = *((_DWORD *)a2 + 29);
  v6 |= 0x800u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 29) = v15;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x1000) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v16 = *((_DWORD *)a2 + 30);
  v6 |= 0x1000u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 30) = v16;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v17 = *((_DWORD *)a2 + 27);
  v6 |= 0x200u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 27) = v17;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v18 = *((_DWORD *)a2 + 26);
  v6 |= 0x100u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 26) = v18;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x4000) == 0)
  {
LABEL_15:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v19 = *((_DWORD *)a2 + 32);
  v6 |= 0x4000u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 32) = v19;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x8000) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v20 = *((_DWORD *)a2 + 33);
  v6 |= 0x8000u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 33) = v20;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x10000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v21 = *((_DWORD *)a2 + 34);
  v6 |= 0x10000u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 34) = v21;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x2000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v22 = *((_DWORD *)a2 + 31);
  v6 |= 0x2000u;
  *((_DWORD *)this + 36) = v6;
  *((_DWORD *)this + 31) = v22;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 4) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  v6 |= 0x20000u;
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)this + 36) = v6;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 4) == 0)
  {
LABEL_20:
    if ((v5 & 1) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v23 = *((void *)a2 + 9);
  v6 |= 4u;
  *((_DWORD *)this + 36) = v6;
  *((void *)this + 9) = v23;
  int v5 = *((_DWORD *)a2 + 36);
  if ((v5 & 1) == 0)
  {
LABEL_21:
    if ((v5 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_40:
  uint64_t v24 = *((void *)a2 + 7);
  v6 |= 1u;
  *((_DWORD *)this + 36) = v6;
  *((void *)this + 7) = v24;
  if ((*((_DWORD *)a2 + 36) & 2) != 0)
  {
LABEL_22:
    uint64_t v9 = *((void *)a2 + 8);
    *((_DWORD *)this + 36) = v6 | 2;
    *((void *)this + 8) = v9;
  }
LABEL_23:
  if (this != a2)
  {
    sub_2572C75B4((void *)this + 4, *((char **)a2 + 4), *((char **)a2 + 5), (uint64_t)(*((void *)a2 + 5) - *((void *)a2 + 4)) >> 2);
    sub_2572C75B4(v4, *((char **)a2 + 1), *((char **)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 2);
  }
  return this;
}

CMMsl *CMMsl::KappaDirectionOfTravel::operator=(CMMsl *a1, const CMMsl::KappaDirectionOfTravel *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaDirectionOfTravel::KappaDirectionOfTravel((CMMsl::KappaDirectionOfTravel *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaDirectionOfTravel *)v5, v3);
    CMMsl::KappaDirectionOfTravel::~KappaDirectionOfTravel((CMMsl::KappaDirectionOfTravel *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaDirectionOfTravel *a2, CMMsl::KappaDirectionOfTravel *a3)
{
  int v3 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v3;
  uint64_t v4 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v4;
  LODWORD(v4) = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v4;
  LODWORD(v4) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v4;
  uint64_t v5 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v5;
  uint64_t v6 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v6;
  uint64_t v7 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v7;
  uint64_t v9 = *((void *)this + 6);
  uint64_t v8 = *((void *)this + 7);
  uint64_t v10 = *((void *)a2 + 7);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)this + 7) = v10;
  *((void *)a2 + 7) = v8;
  uint64_t v11 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  int v12 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v12;
  int v13 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v13;
  int v14 = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v14;
  int v15 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v15;
  int v16 = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v16;
  int v17 = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v17;
  int v18 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v18;
  int v19 = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v19;
  int v20 = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v20;
  int v21 = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v21;
  int v22 = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v22;
  float result = *((float *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((float *)a2 + 31) = result;
  *((void *)a2 + 8) = v11;
  *((void *)a2 + 6) = v9;
  uint64_t v24 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v24;
  uint64_t v25 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v25;
  uint64_t v26 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v26;
  return result;
}

uint64_t CMMsl::KappaDirectionOfTravel::KappaDirectionOfTravel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642830;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a2 + 144) = 0;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  sub_2572C7560(a1 + 32, (__n128 *)(a2 + 32));
  sub_2572C7560(a1 + 8, (__n128 *)(a2 + 8));
  return a1;
}

CMMsl *CMMsl::KappaDirectionOfTravel::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaDirectionOfTravel::KappaDirectionOfTravel((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaDirectionOfTravel *)v5, v3);
    CMMsl::KappaDirectionOfTravel::~KappaDirectionOfTravel((CMMsl::KappaDirectionOfTravel *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaDirectionOfTravel::formatText(CMMsl::KappaDirectionOfTravel *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = *((_DWORD *)this + 36);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(a2, "combinedUnc", *((float *)this + 22));
    int v5 = *((_DWORD *)this + 36);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_31;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "combinedX", *((float *)this + 23));
  int v5 = *((_DWORD *)this + 36);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_31:
  PB::TextFormatter::format(a2, "combinedY", *((float *)this + 24));
  if ((*((_DWORD *)this + 36) & 0x80) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(a2, "combinedZ", *((float *)this + 25));
LABEL_6:
  uint64_t v6 = (float *)*((void *)this + 1);
  uint64_t v7 = (float *)*((void *)this + 2);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(a2, "inerAccelApproachMx", v8);
  }
  int v9 = *((_DWORD *)this + 36);
  if ((v9 & 0x100) != 0)
  {
    PB::TextFormatter::format(a2, "inerAccelCount");
    int v9 = *((_DWORD *)this + 36);
    if ((v9 & 0x200) == 0)
    {
LABEL_10:
      if ((v9 & 0x400) == 0) {
        goto LABEL_11;
      }
      goto LABEL_35;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_10;
  }
  PB::TextFormatter::format(a2, "inertialApproachUnc", *((float *)this + 27));
  int v9 = *((_DWORD *)this + 36);
  if ((v9 & 0x400) == 0)
  {
LABEL_11:
    if ((v9 & 0x800) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(a2, "inertialApproachX", *((float *)this + 28));
  int v9 = *((_DWORD *)this + 36);
  if ((v9 & 0x800) == 0)
  {
LABEL_12:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(a2, "inertialApproachY", *((float *)this + 29));
  int v9 = *((_DWORD *)this + 36);
  if ((v9 & 0x1000) == 0)
  {
LABEL_13:
    if ((v9 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(a2, "inertialApproachZ", *((float *)this + 30));
  int v9 = *((_DWORD *)this + 36);
  if ((v9 & 1) == 0)
  {
LABEL_14:
    if ((v9 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(a2, "previousTimeAccel");
  int v9 = *((_DWORD *)this + 36);
  if ((v9 & 2) == 0)
  {
LABEL_15:
    if ((v9 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_39:
  PB::TextFormatter::format(a2, "previousTimeSag");
  if ((*((_DWORD *)this + 36) & 4) != 0) {
LABEL_16:
  }
    PB::TextFormatter::format(a2, "previousTimestamp");
LABEL_17:
  uint64_t v10 = (float *)*((void *)this + 4);
  uint64_t v11 = (float *)*((void *)this + 5);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(a2, "sagittalApproachMx", v12);
  }
  int v13 = *((_DWORD *)this + 36);
  if ((v13 & 0x2000) != 0)
  {
    PB::TextFormatter::format(a2, "sagittalApproachUnc", *((float *)this + 31));
    int v13 = *((_DWORD *)this + 36);
    if ((v13 & 0x4000) == 0)
    {
LABEL_21:
      if ((v13 & 0x8000) == 0) {
        goto LABEL_22;
      }
      goto LABEL_43;
    }
  }
  else if ((v13 & 0x4000) == 0)
  {
    goto LABEL_21;
  }
  PB::TextFormatter::format(a2, "sagittalApproachX", *((float *)this + 32));
  int v13 = *((_DWORD *)this + 36);
  if ((v13 & 0x8000) == 0)
  {
LABEL_22:
    if ((v13 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(a2, "sagittalApproachY", *((float *)this + 33));
  int v13 = *((_DWORD *)this + 36);
  if ((v13 & 0x10000) == 0)
  {
LABEL_23:
    if ((v13 & 0x20000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(a2, "sagittalApproachZ", *((float *)this + 34));
  int v13 = *((_DWORD *)this + 36);
  if ((v13 & 0x20000) == 0)
  {
LABEL_24:
    if ((v13 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_45:
  PB::TextFormatter::format(a2, "sagittalCount");
  if ((*((_DWORD *)this + 36) & 8) != 0) {
LABEL_25:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_26:
  return MEMORY[0x270F587F0](a2);
}

BOOL CMMsl::KappaDirectionOfTravel::readFrom(CMMsl::KappaDirectionOfTravel *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 <= 0xFFFFFFFFFFFFFFF5 && v2 + 10 <= v3)
    {
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_21:
      int v19 = v11 & 7;
      if (v19 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *((_DWORD *)this + 36) |= 8u;
          unint64_t v20 = *((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
          uint64_t v22 = *(void *)a2;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)a2 + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_221;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_155:
            uint64_t v25 = 0;
            goto LABEL_221;
          }
          char v108 = 0;
          unsigned int v109 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              uint64_t v25 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v110 = v20 + 1;
              char v111 = *(unsigned char *)(v22 + v20);
              *((void *)a2 + 1) = v110;
              v25 |= (unint64_t)(v111 & 0x7F) << v108;
              if (v111 < 0)
              {
                v108 += 7;
                unint64_t v20 = v110;
                BOOL v14 = v109++ > 8;
                if (v14) {
                  goto LABEL_155;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v25 = 0;
              }
            }
            break;
          }
LABEL_221:
          *((void *)this + 10) = v25;
          goto LABEL_256;
        case 2u:
          *((_DWORD *)this + 36) |= 0x20u;
          unint64_t v28 = *((void *)a2 + 1);
          if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 23) = *(_DWORD *)(*(void *)a2 + v28);
          goto LABEL_255;
        case 3u:
          *((_DWORD *)this + 36) |= 0x40u;
          unint64_t v29 = *((void *)a2 + 1);
          if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 24) = *(_DWORD *)(*(void *)a2 + v29);
          goto LABEL_255;
        case 4u:
          *((_DWORD *)this + 36) |= 0x80u;
          unint64_t v30 = *((void *)a2 + 1);
          if (v30 > 0xFFFFFFFFFFFFFFFBLL || v30 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v30);
          goto LABEL_255;
        case 5u:
          *((_DWORD *)this + 36) |= 0x10u;
          unint64_t v31 = *((void *)a2 + 1);
          if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 22) = *(_DWORD *)(*(void *)a2 + v31);
          goto LABEL_255;
        case 6u:
          *((_DWORD *)this + 36) |= 0x400u;
          unint64_t v32 = *((void *)a2 + 1);
          if (v32 > 0xFFFFFFFFFFFFFFFBLL || v32 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 28) = *(_DWORD *)(*(void *)a2 + v32);
          goto LABEL_255;
        case 7u:
          *((_DWORD *)this + 36) |= 0x800u;
          unint64_t v33 = *((void *)a2 + 1);
          if (v33 > 0xFFFFFFFFFFFFFFFBLL || v33 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 29) = *(_DWORD *)(*(void *)a2 + v33);
          goto LABEL_255;
        case 8u:
          *((_DWORD *)this + 36) |= 0x1000u;
          unint64_t v34 = *((void *)a2 + 1);
          if (v34 > 0xFFFFFFFFFFFFFFFBLL || v34 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v34);
          goto LABEL_255;
        case 9u:
          *((_DWORD *)this + 36) |= 0x200u;
          unint64_t v35 = *((void *)a2 + 1);
          if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 27) = *(_DWORD *)(*(void *)a2 + v35);
          goto LABEL_255;
        case 0xAu:
          *((_DWORD *)this + 36) |= 0x100u;
          unint64_t v36 = *((void *)a2 + 1);
          unint64_t v37 = *((void *)a2 + 2);
          uint64_t v38 = *(void *)a2;
          if (v36 <= 0xFFFFFFFFFFFFFFF5 && v36 + 10 <= v37)
          {
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v42 = v36 + 1;
              *((void *)a2 + 1) = v36 + 1;
              char v43 = *(unsigned char *)(v38 + v36);
              v41 |= (unint64_t)(v43 & 0x7F) << v39;
              if ((v43 & 0x80) == 0) {
                goto LABEL_224;
              }
              v39 += 7;
              unint64_t v36 = v42;
              BOOL v14 = v40++ > 8;
            }
            while (!v14);
LABEL_162:
            LODWORD(v41) = 0;
            goto LABEL_224;
          }
          char v112 = 0;
          unsigned int v113 = 0;
          uint64_t v41 = 0;
          if (v37 <= v36) {
            unint64_t v37 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v37 == v36)
            {
              LODWORD(v41) = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v114 = v36 + 1;
              char v115 = *(unsigned char *)(v38 + v36);
              *((void *)a2 + 1) = v114;
              v41 |= (unint64_t)(v115 & 0x7F) << v112;
              if (v115 < 0)
              {
                v112 += 7;
                unint64_t v36 = v114;
                BOOL v14 = v113++ > 8;
                if (v14) {
                  goto LABEL_162;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v41) = 0;
              }
            }
            break;
          }
LABEL_224:
          *((_DWORD *)this + 26) = v41;
          goto LABEL_256;
        case 0xBu:
          *((_DWORD *)this + 36) |= 0x4000u;
          unint64_t v44 = *((void *)a2 + 1);
          if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v44);
          goto LABEL_255;
        case 0xCu:
          *((_DWORD *)this + 36) |= 0x8000u;
          unint64_t v45 = *((void *)a2 + 1);
          if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v45);
          goto LABEL_255;
        case 0xDu:
          *((_DWORD *)this + 36) |= 0x10000u;
          unint64_t v46 = *((void *)a2 + 1);
          if (v46 > 0xFFFFFFFFFFFFFFFBLL || v46 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 34) = *(_DWORD *)(*(void *)a2 + v46);
          goto LABEL_255;
        case 0xEu:
          *((_DWORD *)this + 36) |= 0x2000u;
          unint64_t v47 = *((void *)a2 + 1);
          if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)a2 + 2)) {
            goto LABEL_253;
          }
          *((_DWORD *)this + 31) = *(_DWORD *)(*(void *)a2 + v47);
          goto LABEL_255;
        case 0xFu:
          *((_DWORD *)this + 36) |= 0x20000u;
          unint64_t v48 = *((void *)a2 + 1);
          unint64_t v49 = *((void *)a2 + 2);
          uint64_t v50 = *(void *)a2;
          if (v48 <= 0xFFFFFFFFFFFFFFF5 && v48 + 10 <= v49)
          {
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v53 = 0;
            do
            {
              unint64_t v54 = v48 + 1;
              *((void *)a2 + 1) = v48 + 1;
              char v55 = *(unsigned char *)(v50 + v48);
              v53 |= (unint64_t)(v55 & 0x7F) << v51;
              if ((v55 & 0x80) == 0) {
                goto LABEL_227;
              }
              v51 += 7;
              unint64_t v48 = v54;
              BOOL v14 = v52++ > 8;
            }
            while (!v14);
LABEL_169:
            LODWORD(v53) = 0;
            goto LABEL_227;
          }
          char v116 = 0;
          unsigned int v117 = 0;
          uint64_t v53 = 0;
          if (v49 <= v48) {
            unint64_t v49 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v49 == v48)
            {
              LODWORD(v53) = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v118 = v48 + 1;
              char v119 = *(unsigned char *)(v50 + v48);
              *((void *)a2 + 1) = v118;
              v53 |= (unint64_t)(v119 & 0x7F) << v116;
              if (v119 < 0)
              {
                v116 += 7;
                unint64_t v48 = v118;
                BOOL v14 = v117++ > 8;
                if (v14) {
                  goto LABEL_169;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v53) = 0;
              }
            }
            break;
          }
LABEL_227:
          *((_DWORD *)this + 35) = v53;
          goto LABEL_256;
        case 0x10u:
          *((_DWORD *)this + 36) |= 4u;
          unint64_t v56 = *((void *)a2 + 1);
          unint64_t v57 = *((void *)a2 + 2);
          uint64_t v58 = *(void *)a2;
          if (v56 <= 0xFFFFFFFFFFFFFFF5 && v56 + 10 <= v57)
          {
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            do
            {
              unint64_t v62 = v56 + 1;
              *((void *)a2 + 1) = v56 + 1;
              char v63 = *(unsigned char *)(v58 + v56);
              v61 |= (unint64_t)(v63 & 0x7F) << v59;
              if ((v63 & 0x80) == 0) {
                goto LABEL_230;
              }
              v59 += 7;
              unint64_t v56 = v62;
              BOOL v14 = v60++ > 8;
            }
            while (!v14);
LABEL_176:
            uint64_t v61 = 0;
            goto LABEL_230;
          }
          char v120 = 0;
          unsigned int v121 = 0;
          uint64_t v61 = 0;
          if (v57 <= v56) {
            unint64_t v57 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v57 == v56)
            {
              uint64_t v61 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v122 = v56 + 1;
              char v123 = *(unsigned char *)(v58 + v56);
              *((void *)a2 + 1) = v122;
              v61 |= (unint64_t)(v123 & 0x7F) << v120;
              if (v123 < 0)
              {
                v120 += 7;
                unint64_t v56 = v122;
                BOOL v14 = v121++ > 8;
                if (v14) {
                  goto LABEL_176;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v61 = 0;
              }
            }
            break;
          }
LABEL_230:
          *((void *)this + 9) = v61;
          goto LABEL_256;
        case 0x11u:
          *((_DWORD *)this + 36) |= 1u;
          unint64_t v64 = *((void *)a2 + 1);
          unint64_t v65 = *((void *)a2 + 2);
          uint64_t v66 = *(void *)a2;
          if (v64 <= 0xFFFFFFFFFFFFFFF5 && v64 + 10 <= v65)
          {
            char v67 = 0;
            unsigned int v68 = 0;
            uint64_t v69 = 0;
            do
            {
              unint64_t v70 = v64 + 1;
              *((void *)a2 + 1) = v64 + 1;
              char v71 = *(unsigned char *)(v66 + v64);
              v69 |= (unint64_t)(v71 & 0x7F) << v67;
              if ((v71 & 0x80) == 0) {
                goto LABEL_233;
              }
              v67 += 7;
              unint64_t v64 = v70;
              BOOL v14 = v68++ > 8;
            }
            while (!v14);
LABEL_183:
            uint64_t v69 = 0;
            goto LABEL_233;
          }
          char v124 = 0;
          unsigned int v125 = 0;
          uint64_t v69 = 0;
          if (v65 <= v64) {
            unint64_t v65 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v65 == v64)
            {
              uint64_t v69 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v126 = v64 + 1;
              char v127 = *(unsigned char *)(v66 + v64);
              *((void *)a2 + 1) = v126;
              v69 |= (unint64_t)(v127 & 0x7F) << v124;
              if (v127 < 0)
              {
                v124 += 7;
                unint64_t v64 = v126;
                BOOL v14 = v125++ > 8;
                if (v14) {
                  goto LABEL_183;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v69 = 0;
              }
            }
            break;
          }
LABEL_233:
          *((void *)this + 7) = v69;
          goto LABEL_256;
        case 0x12u:
          *((_DWORD *)this + 36) |= 2u;
          unint64_t v72 = *((void *)a2 + 1);
          unint64_t v73 = *((void *)a2 + 2);
          uint64_t v74 = *(void *)a2;
          if (v72 <= 0xFFFFFFFFFFFFFFF5 && v72 + 10 <= v73)
          {
            char v75 = 0;
            unsigned int v76 = 0;
            uint64_t v77 = 0;
            do
            {
              unint64_t v78 = v72 + 1;
              *((void *)a2 + 1) = v72 + 1;
              char v79 = *(unsigned char *)(v74 + v72);
              v77 |= (unint64_t)(v79 & 0x7F) << v75;
              if ((v79 & 0x80) == 0) {
                goto LABEL_236;
              }
              v75 += 7;
              unint64_t v72 = v78;
              BOOL v14 = v76++ > 8;
            }
            while (!v14);
LABEL_190:
            uint64_t v77 = 0;
            goto LABEL_236;
          }
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v77 = 0;
          if (v73 <= v72) {
            unint64_t v73 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v73 == v72)
            {
              uint64_t v77 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v130 = v72 + 1;
              char v131 = *(unsigned char *)(v74 + v72);
              *((void *)a2 + 1) = v130;
              v77 |= (unint64_t)(v131 & 0x7F) << v128;
              if (v131 < 0)
              {
                v128 += 7;
                unint64_t v72 = v130;
                BOOL v14 = v129++ > 8;
                if (v14) {
                  goto LABEL_190;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v77 = 0;
              }
            }
            break;
          }
LABEL_236:
          *((void *)this + 8) = v77;
          goto LABEL_256;
        case 0x13u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v80 = *((void *)a2 + 1);
            unint64_t v81 = *((void *)a2 + 2);
            while (v80 < v81 && !*((unsigned char *)a2 + 24))
            {
              uint64_t v83 = (char *)*((void *)this + 5);
              unint64_t v82 = *((void *)this + 6);
              if ((unint64_t)v83 >= v82)
              {
                uint64_t v85 = (char *)*((void *)this + 4);
                uint64_t v86 = (v83 - v85) >> 2;
                unint64_t v87 = v86 + 1;
                if ((unint64_t)(v86 + 1) >> 62) {
                  goto LABEL_265;
                }
                uint64_t v88 = v82 - (void)v85;
                if (v88 >> 1 > v87) {
                  unint64_t v87 = v88 >> 1;
                }
                if ((unint64_t)v88 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v89 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v89 = v87;
                }
                if (v89)
                {
                  unint64_t v89 = (unint64_t)sub_2572C76F0(v89);
                  uint64_t v85 = (char *)*((void *)this + 4);
                  uint64_t v83 = (char *)*((void *)this + 5);
                }
                else
                {
                  uint64_t v90 = 0;
                }
                uint64_t v91 = (_DWORD *)(v89 + 4 * v86);
                *uint64_t v91 = 0;
                float v84 = v91 + 1;
                while (v83 != v85)
                {
                  int v92 = *((_DWORD *)v83 - 1);
                  v83 -= 4;
                  *--uint64_t v91 = v92;
                }
                *((void *)this + 4) = v91;
                *((void *)this + 5) = v84;
                *((void *)this + 6) = v89 + 4 * v90;
                if (v85) {
                  operator delete(v85);
                }
              }
              else
              {
                *(_DWORD *)uint64_t v83 = 0;
                float v84 = v83 + 4;
              }
              *((void *)this + 5) = v84;
              unint64_t v93 = *((void *)a2 + 1);
              if (v93 > 0xFFFFFFFFFFFFFFFBLL || v93 + 4 > *((void *)a2 + 2)) {
                goto LABEL_195;
              }
              *(v84 - 1) = *(_DWORD *)(*(void *)a2 + v93);
              unint64_t v81 = *((void *)a2 + 2);
              unint64_t v80 = *((void *)a2 + 1) + 4;
              *((void *)a2 + 1) = v80;
            }
            goto LABEL_196;
          }
          uint64_t v133 = (char *)*((void *)this + 5);
          unint64_t v132 = *((void *)this + 6);
          if ((unint64_t)v133 >= v132)
          {
            uint64_t v137 = (char *)*((void *)this + 4);
            uint64_t v138 = (v133 - v137) >> 2;
            unint64_t v139 = v138 + 1;
            if ((unint64_t)(v138 + 1) >> 62) {
              goto LABEL_265;
            }
            uint64_t v140 = v132 - (void)v137;
            if (v140 >> 1 > v139) {
              unint64_t v139 = v140 >> 1;
            }
            if ((unint64_t)v140 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v141 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v141 = v139;
            }
            if (v141)
            {
              unint64_t v141 = (unint64_t)sub_2572C76F0(v141);
              uint64_t v137 = (char *)*((void *)this + 4);
              uint64_t v133 = (char *)*((void *)this + 5);
            }
            else
            {
              uint64_t v142 = 0;
            }
            uint64_t v149 = (_DWORD *)(v141 + 4 * v138);
            *uint64_t v149 = 0;
            uint64_t v134 = v149 + 1;
            while (v133 != v137)
            {
              int v150 = *((_DWORD *)v133 - 1);
              v133 -= 4;
              *--uint64_t v149 = v150;
            }
            *((void *)this + 4) = v149;
            *((void *)this + 5) = v134;
            *((void *)this + 6) = v141 + 4 * v142;
            if (v137) {
              operator delete(v137);
            }
          }
          else
          {
            *(_DWORD *)uint64_t v133 = 0;
            uint64_t v134 = v133 + 4;
          }
          *((void *)this + 5) = v134;
          goto LABEL_251;
        case 0x14u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v94 = *((void *)a2 + 1);
            unint64_t v95 = *((void *)a2 + 2);
            while (v94 < v95 && !*((unsigned char *)a2 + 24))
            {
              uint64_t v97 = (char *)*((void *)this + 2);
              unint64_t v96 = *((void *)this + 3);
              if ((unint64_t)v97 >= v96)
              {
                uint64_t v99 = (char *)*((void *)this + 1);
                uint64_t v100 = (v97 - v99) >> 2;
                unint64_t v101 = v100 + 1;
                if ((unint64_t)(v100 + 1) >> 62) {
                  goto LABEL_265;
                }
                uint64_t v102 = v96 - (void)v99;
                if (v102 >> 1 > v101) {
                  unint64_t v101 = v102 >> 1;
                }
                if ((unint64_t)v102 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v103 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v103 = v101;
                }
                if (v103)
                {
                  unint64_t v103 = (unint64_t)sub_2572C76F0(v103);
                  uint64_t v99 = (char *)*((void *)this + 1);
                  uint64_t v97 = (char *)*((void *)this + 2);
                }
                else
                {
                  uint64_t v104 = 0;
                }
                uint64_t v105 = (_DWORD *)(v103 + 4 * v100);
                *uint64_t v105 = 0;
                float v98 = v105 + 1;
                while (v97 != v99)
                {
                  int v106 = *((_DWORD *)v97 - 1);
                  v97 -= 4;
                  *--uint64_t v105 = v106;
                }
                *((void *)this + 1) = v105;
                *((void *)this + 2) = v98;
                *((void *)this + 3) = v103 + 4 * v104;
                if (v99) {
                  operator delete(v99);
                }
              }
              else
              {
                *(_DWORD *)uint64_t v97 = 0;
                float v98 = v97 + 4;
              }
              *((void *)this + 2) = v98;
              unint64_t v107 = *((void *)a2 + 1);
              if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)a2 + 2))
              {
LABEL_195:
                *((unsigned char *)a2 + 24) = 1;
                break;
              }
              *(v98 - 1) = *(_DWORD *)(*(void *)a2 + v107);
              unint64_t v95 = *((void *)a2 + 2);
              unint64_t v94 = *((void *)a2 + 1) + 4;
              *((void *)a2 + 1) = v94;
            }
LABEL_196:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v136 = (char *)*((void *)this + 2);
            unint64_t v135 = *((void *)this + 3);
            if ((unint64_t)v136 >= v135)
            {
              uint64_t v143 = (char *)*((void *)this + 1);
              uint64_t v144 = (v136 - v143) >> 2;
              unint64_t v145 = v144 + 1;
              if ((unint64_t)(v144 + 1) >> 62) {
LABEL_265:
              }
                sub_2570AFD0C();
              uint64_t v146 = v135 - (void)v143;
              if (v146 >> 1 > v145) {
                unint64_t v145 = v146 >> 1;
              }
              if ((unint64_t)v146 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v147 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v147 = v145;
              }
              if (v147)
              {
                unint64_t v147 = (unint64_t)sub_2572C76F0(v147);
                uint64_t v143 = (char *)*((void *)this + 1);
                uint64_t v136 = (char *)*((void *)this + 2);
              }
              else
              {
                uint64_t v148 = 0;
              }
              uint64_t v151 = (_DWORD *)(v147 + 4 * v144);
              *uint64_t v151 = 0;
              uint64_t v134 = v151 + 1;
              while (v136 != v143)
              {
                int v152 = *((_DWORD *)v136 - 1);
                v136 -= 4;
                *--uint64_t v151 = v152;
              }
              *((void *)this + 1) = v151;
              *((void *)this + 2) = v134;
              *((void *)this + 3) = v147 + 4 * v148;
              if (v143) {
                operator delete(v143);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v136 = 0;
              uint64_t v134 = v136 + 4;
            }
            *((void *)this + 2) = v134;
LABEL_251:
            unint64_t v153 = *((void *)a2 + 1);
            if (v153 <= 0xFFFFFFFFFFFFFFFBLL && v153 + 4 <= *((void *)a2 + 2))
            {
              *(v134 - 1) = *(_DWORD *)(*(void *)a2 + v153);
LABEL_255:
              *((void *)a2 + 1) += 4;
            }
            else
            {
LABEL_253:
              *((unsigned char *)a2 + 24) = 1;
            }
          }
          break;
        default:
          goto LABEL_19;
      }
      goto LABEL_256;
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    do
    {
      if (v3 == v2)
      {
        int v4 = 1;
        *((unsigned char *)a2 + 24) = 1;
        return v4 == 0;
      }
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_21;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
    }
    while (!v14);
LABEL_19:
    if ((PB::Reader::skip(a2) & 1) == 0) {
      return 0;
    }
LABEL_256:
    unint64_t v2 = *((void *)a2 + 1);
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
}

uint64_t CMMsl::KappaDirectionOfTravel::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 144);
  if ((v4 & 8) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    int v4 = *(_DWORD *)(v3 + 144);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = PB::Writer::write(a2, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x400) == 0)
  {
LABEL_7:
    if ((v4 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = PB::Writer::write(a2, *(float *)(v3 + 112));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x800) == 0)
  {
LABEL_8:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x1000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = PB::Writer::write(a2, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x8000) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x10000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = PB::Writer::write(a2, *(float *)(v3 + 136));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 144);
  if ((v4 & 4) == 0)
  {
LABEL_17:
    if ((v4 & 1) == 0) {
      goto LABEL_18;
    }
LABEL_43:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_DWORD *)(v3 + 144) & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_42:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 144);
  if (v4) {
    goto LABEL_43;
  }
LABEL_18:
  if ((v4 & 2) != 0) {
LABEL_19:
  }
    this = PB::Writer::writeVarInt(a2);
LABEL_20:
  int v5 = *(float **)(v3 + 32);
  uint64_t v6 = *(float **)(v3 + 40);
  while (v5 != v6)
  {
    float v7 = *v5++;
    this = PB::Writer::write(a2, v7);
  }
  char v9 = *(float **)(v3 + 8);
  uint64_t v8 = *(float **)(v3 + 16);
  while (v9 != v8)
  {
    float v10 = *v9++;
    this = PB::Writer::write(a2, v10);
  }
  return this;
}

uint64_t CMMsl::KappaDirectionOfTravel::hash_value(CMMsl::KappaDirectionOfTravel *this)
{
  int v2 = *((_DWORD *)this + 36);
  if ((v2 & 8) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x20) != 0) {
      goto LABEL_3;
    }
LABEL_45:
    uint64_t v5 = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_6;
    }
LABEL_46:
    uint64_t v7 = 0;
    if ((v2 & 0x80) != 0) {
      goto LABEL_9;
    }
LABEL_47:
    uint64_t v9 = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_12;
    }
LABEL_48:
    uint64_t v11 = 0;
    if ((v2 & 0x400) != 0) {
      goto LABEL_15;
    }
LABEL_49:
    uint64_t v13 = 0;
    if ((v2 & 0x800) != 0) {
      goto LABEL_18;
    }
LABEL_50:
    uint64_t v15 = 0;
    if ((v2 & 0x1000) != 0) {
      goto LABEL_21;
    }
LABEL_51:
    uint64_t v17 = 0;
    if ((v2 & 0x200) != 0) {
      goto LABEL_24;
    }
LABEL_52:
    uint64_t v19 = 0;
    if ((v2 & 0x100) != 0) {
      goto LABEL_27;
    }
    goto LABEL_53;
  }
  uint64_t v3 = *((void *)this + 10);
  if ((v2 & 0x20) == 0) {
    goto LABEL_45;
  }
LABEL_3:
  float v4 = *((float *)this + 23);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_46;
  }
LABEL_6:
  float v6 = *((float *)this + 24);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  if ((v2 & 0x80) == 0) {
    goto LABEL_47;
  }
LABEL_9:
  float v8 = *((float *)this + 25);
  uint64_t v9 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v9 = 0;
  }
  if ((v2 & 0x10) == 0) {
    goto LABEL_48;
  }
LABEL_12:
  float v10 = *((float *)this + 22);
  uint64_t v11 = LODWORD(v10);
  if (v10 == 0.0) {
    uint64_t v11 = 0;
  }
  if ((v2 & 0x400) == 0) {
    goto LABEL_49;
  }
LABEL_15:
  float v12 = *((float *)this + 28);
  uint64_t v13 = LODWORD(v12);
  if (v12 == 0.0) {
    uint64_t v13 = 0;
  }
  if ((v2 & 0x800) == 0) {
    goto LABEL_50;
  }
LABEL_18:
  float v14 = *((float *)this + 29);
  uint64_t v15 = LODWORD(v14);
  if (v14 == 0.0) {
    uint64_t v15 = 0;
  }
  if ((v2 & 0x1000) == 0) {
    goto LABEL_51;
  }
LABEL_21:
  float v16 = *((float *)this + 30);
  uint64_t v17 = LODWORD(v16);
  if (v16 == 0.0) {
    uint64_t v17 = 0;
  }
  if ((v2 & 0x200) == 0) {
    goto LABEL_52;
  }
LABEL_24:
  float v18 = *((float *)this + 27);
  uint64_t v19 = LODWORD(v18);
  if (v18 == 0.0) {
    uint64_t v19 = 0;
  }
  if ((v2 & 0x100) != 0)
  {
LABEL_27:
    uint64_t v20 = *((unsigned int *)this + 26);
    if ((v2 & 0x4000) != 0) {
      goto LABEL_28;
    }
LABEL_54:
    uint64_t v22 = 0;
    if ((v2 & 0x8000) != 0) {
      goto LABEL_31;
    }
LABEL_55:
    uint64_t v24 = 0;
    if ((v2 & 0x10000) != 0) {
      goto LABEL_34;
    }
LABEL_56:
    uint64_t v26 = 0;
    if ((v2 & 0x2000) != 0) {
      goto LABEL_37;
    }
LABEL_57:
    uint64_t v28 = 0;
    if ((v2 & 0x20000) != 0) {
      goto LABEL_40;
    }
    goto LABEL_58;
  }
LABEL_53:
  uint64_t v20 = 0;
  if ((v2 & 0x4000) == 0) {
    goto LABEL_54;
  }
LABEL_28:
  float v21 = *((float *)this + 32);
  uint64_t v22 = LODWORD(v21);
  if (v21 == 0.0) {
    uint64_t v22 = 0;
  }
  if ((v2 & 0x8000) == 0) {
    goto LABEL_55;
  }
LABEL_31:
  float v23 = *((float *)this + 33);
  uint64_t v24 = LODWORD(v23);
  if (v23 == 0.0) {
    uint64_t v24 = 0;
  }
  if ((v2 & 0x10000) == 0) {
    goto LABEL_56;
  }
LABEL_34:
  float v25 = *((float *)this + 34);
  uint64_t v26 = LODWORD(v25);
  if (v25 == 0.0) {
    uint64_t v26 = 0;
  }
  if ((v2 & 0x2000) == 0) {
    goto LABEL_57;
  }
LABEL_37:
  float v27 = *((float *)this + 31);
  uint64_t v28 = LODWORD(v27);
  if (v27 == 0.0) {
    uint64_t v28 = 0;
  }
  if ((v2 & 0x20000) != 0)
  {
LABEL_40:
    uint64_t v29 = *((unsigned int *)this + 35);
    if ((v2 & 4) != 0) {
      goto LABEL_41;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t v29 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_41:
    uint64_t v30 = *((void *)this + 9);
    if (v2) {
      goto LABEL_42;
    }
LABEL_60:
    uint64_t v31 = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_43;
    }
LABEL_61:
    uint64_t v32 = 0;
    goto LABEL_62;
  }
LABEL_59:
  uint64_t v30 = 0;
  if ((v2 & 1) == 0) {
    goto LABEL_60;
  }
LABEL_42:
  uint64_t v31 = *((void *)this + 7);
  if ((v2 & 2) == 0) {
    goto LABEL_61;
  }
LABEL_43:
  uint64_t v32 = *((void *)this + 8);
LABEL_62:
  uint64_t v33 = v5 ^ v3 ^ v7 ^ v9 ^ v11 ^ v13 ^ v15 ^ v17 ^ v19 ^ v20 ^ v22 ^ v24 ^ v26 ^ v28 ^ v29 ^ v30 ^ v31 ^ v32 ^ PBHashBytes();
  return v33 ^ PBHashBytes();
}

void CMMsl::KappaGpsResult::~KappaGpsResult(CMMsl::KappaGpsResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaGpsResult::KappaGpsResult(uint64_t this, const CMMsl::KappaGpsResult *a2)
{
  *(void *)this = &unk_270642868;
  *(_DWORD *)(this + 132) = 0;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x4000000) != 0)
  {
    char v4 = *((unsigned char *)a2 + 126);
    int v3 = 0x4000000;
    *(_DWORD *)(this + 132) = 0x4000000;
    *(unsigned char *)(this + 126) = v4;
    int v2 = *((_DWORD *)a2 + 33);
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x8000000) != 0)
  {
LABEL_5:
    char v5 = *((unsigned char *)a2 + 127);
    v3 |= 0x8000000u;
    *(_DWORD *)(this + 132) = v3;
    *(unsigned char *)(this + 127) = v5;
    int v2 = *((_DWORD *)a2 + 33);
  }
LABEL_6:
  if ((v2 & 0x80000) != 0)
  {
    int v6 = *((_DWORD *)a2 + 26);
    v3 |= 0x80000u;
    *(_DWORD *)(this + 132) = v3;
    *(_DWORD *)(this + 104) = v6;
    int v2 = *((_DWORD *)a2 + 33);
    if ((v2 & 0x800000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 0x800000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 30);
  v3 |= 0x800000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 120) = v7;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v8 = *((_DWORD *)a2 + 27);
  v3 |= 0x100000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 108) = v8;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x20000) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v9 = *((_DWORD *)a2 + 24);
  v3 |= 0x20000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 96) = v9;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x10000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v10 = *((_DWORD *)a2 + 23);
  v3 |= 0x10000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 92) = v10;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v11 = *((_DWORD *)a2 + 15);
  v3 |= 0x100u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 60) = v11;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v12 = *((_DWORD *)a2 + 14);
  v3 |= 0x80u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 56) = v12;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v13 = *((_DWORD *)a2 + 13);
  v3 |= 0x40u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 52) = v13;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v14 = *((_DWORD *)a2 + 12);
  v3 |= 0x20u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 48) = v14;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v15 = *((_DWORD *)a2 + 18);
  v3 |= 0x800u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 72) = v15;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x4000) == 0)
  {
LABEL_17:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v16 = *((_DWORD *)a2 + 21);
  v3 |= 0x4000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 84) = v16;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x200000) == 0)
  {
LABEL_18:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v17 = *((_DWORD *)a2 + 28);
  v3 |= 0x200000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 112) = v17;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x40000) == 0)
  {
LABEL_19:
    if ((v2 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v18 = *((_DWORD *)a2 + 25);
  v3 |= 0x40000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 100) = v18;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 8) == 0)
  {
LABEL_20:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v19 = *((void *)a2 + 4);
  v3 |= 8u;
  *(_DWORD *)(this + 132) = v3;
  *(void *)(this + 32) = v19;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_21:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_49;
  }
LABEL_48:
  char v20 = *((unsigned char *)a2 + 124);
  v3 |= 0x1000000u;
  *(_DWORD *)(this + 132) = v3;
  *(unsigned char *)(this + 124) = v20;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x8000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v21 = *((_DWORD *)a2 + 22);
  v3 |= 0x8000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 88) = v21;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x10) == 0)
  {
LABEL_23:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_51;
  }
LABEL_50:
  uint64_t v22 = *((void *)a2 + 5);
  v3 |= 0x10u;
  *(_DWORD *)(this + 132) = v3;
  *(void *)(this + 40) = v22;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x400000) == 0)
  {
LABEL_24:
    if ((v2 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v23 = *((_DWORD *)a2 + 29);
  v3 |= 0x400000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 116) = v23;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 4) == 0)
  {
LABEL_25:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v24 = *((void *)a2 + 3);
  v3 |= 4u;
  *(_DWORD *)(this + 132) = v3;
  *(void *)(this + 24) = v24;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x2000) == 0)
  {
LABEL_26:
    if ((v2 & 2) == 0) {
      goto LABEL_27;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v25 = *((_DWORD *)a2 + 20);
  v3 |= 0x2000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 80) = v25;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 2) == 0)
  {
LABEL_27:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v26 = *((void *)a2 + 2);
  v3 |= 2u;
  *(_DWORD *)(this + 132) = v3;
  *(void *)(this + 16) = v26;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x1000) == 0)
  {
LABEL_28:
    if ((v2 & 1) == 0) {
      goto LABEL_29;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v27 = *((_DWORD *)a2 + 19);
  v3 |= 0x1000u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 76) = v27;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 1) == 0)
  {
LABEL_29:
    if ((v2 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v28 = *((void *)a2 + 1);
  v3 |= 1u;
  *(_DWORD *)(this + 132) = v3;
  *(void *)(this + 8) = v28;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x200) == 0)
  {
LABEL_30:
    if ((v2 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v29 = *((_DWORD *)a2 + 16);
  v3 |= 0x200u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 64) = v29;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x400) == 0)
  {
LABEL_31:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v30 = *((_DWORD *)a2 + 17);
  v3 |= 0x400u;
  *(_DWORD *)(this + 132) = v3;
  *(_DWORD *)(this + 68) = v30;
  int v2 = *((_DWORD *)a2 + 33);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x2000000) == 0) {
      return this;
    }
LABEL_60:
    char v32 = *((unsigned char *)a2 + 125);
    *(_DWORD *)(this + 132) = v3 | 0x2000000;
    *(unsigned char *)(this + 125) = v32;
    return this;
  }
LABEL_59:
  char v31 = *((unsigned char *)a2 + 128);
  v3 |= 0x10000000u;
  *(_DWORD *)(this + 132) = v3;
  *(unsigned char *)(this + 128) = v31;
  if ((*((_DWORD *)a2 + 33) & 0x2000000) != 0) {
    goto LABEL_60;
  }
  return this;
}

CMMsl *CMMsl::KappaGpsResult::operator=(CMMsl *a1, const CMMsl::KappaGpsResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaGpsResult::KappaGpsResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaGpsResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaGpsResult *a2, CMMsl::KappaGpsResult *a3)
{
  int v3 = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 126);
  *((unsigned char *)this + 126) = *((unsigned char *)a2 + 126);
  *((unsigned char *)a2 + 126) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 127);
  *((unsigned char *)this + 127) = *((unsigned char *)a2 + 127);
  *((unsigned char *)a2 + 127) = v3;
  int v4 = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v4;
  int v5 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v5;
  int v6 = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v6;
  int v7 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v7;
  int v8 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v8;
  int v9 = *((_DWORD *)this + 15);
  *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = v9;
  int v10 = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v10;
  int v11 = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v11;
  int v12 = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v12;
  int v13 = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v13;
  int v14 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v14;
  int v15 = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v15;
  int v16 = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v16;
  uint64_t v17 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v17;
  LOBYTE(v17) = *((unsigned char *)this + 124);
  *((unsigned char *)this + 124) = *((unsigned char *)a2 + 124);
  *((unsigned char *)a2 + 124) = v17;
  LODWORD(v17) = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v17;
  uint64_t v18 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v18;
  int v19 = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v19;
  uint64_t v20 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v20;
  int v21 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v21;
  uint64_t v22 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v22;
  int v23 = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v23;
  uint64_t v24 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v24;
  int v25 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v25;
  float result = *((float *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((float *)a2 + 17) = result;
  LOBYTE(v24) = *((unsigned char *)this + 128);
  *((unsigned char *)this + 128) = *((unsigned char *)a2 + 128);
  *((unsigned char *)a2 + 128) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 125);
  *((unsigned char *)this + 125) = *((unsigned char *)a2 + 125);
  *((unsigned char *)a2 + 125) = v24;
  return result;
}

float CMMsl::KappaGpsResult::KappaGpsResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642868;
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a2 + 132) = 0;
  *(unsigned char *)(a1 + 126) = *(unsigned char *)(a2 + 126);
  *(unsigned char *)(a1 + 127) = *(unsigned char *)(a2 + 127);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  float result = *(float *)(a2 + 68);
  *(float *)(a1 + 68) = result;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 125) = *(unsigned char *)(a2 + 125);
  return result;
}

CMMsl *CMMsl::KappaGpsResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaGpsResult::KappaGpsResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaGpsResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaGpsResult::formatText(CMMsl::KappaGpsResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(a2, "configSuddenTransitionDurationThreshold", *((float *)this + 12));
    int v5 = *((_DWORD *)this + 33);
    if ((v5 & 0x40) == 0)
    {
LABEL_3:
      if ((v5 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v5 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "configTransitionEndSpeedThreshold", *((float *)this + 13));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x80) == 0)
  {
LABEL_4:
    if ((v5 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(a2, "configTransitionStartSpeedThreshold", *((float *)this + 14));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x100) == 0)
  {
LABEL_5:
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(a2, "deltaTriggerTime");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x200) == 0)
  {
LABEL_6:
    if ((v5 & 0x400) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(a2, "gpsSpeedMetersPerSecond", *((float *)this + 16));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x400) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(a2, "gpsSpeedMilesPerHour", *((float *)this + 17));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 1) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(a2, "gpsTimestamp");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(a2, "highSpeedMetersPerSecondThreshold", *((float *)this + 18));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(a2, "isGPSDetected");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(a2, "isGPSDetectedDebug");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(a2, "isSuddenTransitionDetected");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(a2, "isTransitionDetected");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(a2, "lastDetectedTransitionSpeedEnd", *((float *)this + 19));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(a2, "lastDetectedTransitionSpeedStart", *((float *)this + 20));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 2) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(a2, "lastDetectedTransitionTimeEnd");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 4) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(a2, "lastDetectedTransitionTimeStart");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(a2, "loggedAtEpoch");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x4000) == 0)
  {
LABEL_19:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(a2, "lowSpeedMetersPerSecondThresold", *((float *)this + 21));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x8000) == 0)
  {
LABEL_20:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(a2, "state");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x10000) == 0)
  {
LABEL_21:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(a2, "streamEndSpeed", *((float *)this + 23));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v5 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(a2, "streamStartSpeed", *((float *)this + 24));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 8) == 0)
  {
LABEL_23:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(a2, "timestamp");
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x40000) == 0)
  {
LABEL_24:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(a2, "transitionBaseDuration", *((float *)this + 25));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x80000) == 0)
  {
LABEL_25:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(a2, "transitionDuration", *((float *)this + 26));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x100000) == 0)
  {
LABEL_26:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(a2, "transitionEndSpeed", *((float *)this + 27));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x200000) == 0)
  {
LABEL_27:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(a2, "transitionEpsilonDuration", *((float *)this + 28));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x400000) == 0)
  {
LABEL_28:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(a2, "transitionSpeedStart", *((float *)this + 29));
  int v5 = *((_DWORD *)this + 33);
  if ((v5 & 0x800000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_61:
  PB::TextFormatter::format(a2, "transitionStartSpeed", *((float *)this + 30));
  if ((*((_DWORD *)this + 33) & 0x10) != 0) {
LABEL_30:
  }
    PB::TextFormatter::format(a2, "transitionTimeStart");
LABEL_31:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaGpsResult::readFrom(CMMsl::KappaGpsResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_198;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    unint64_t v20 = v11 >> 3;
    if ((int)(v11 >> 3) > 200)
    {
      switch((int)v20)
      {
        case 201:
          *((_DWORD *)this + 33) |= 8u;
          unint64_t v23 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v24 = *(void *)a2;
          if (v23 > 0xFFFFFFFFFFFFFFF5 || v23 + 10 > v2)
          {
            char v73 = 0;
            unsigned int v74 = 0;
            uint64_t v27 = 0;
            if (v2 <= v23) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v23)
              {
                uint64_t v27 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_207;
              }
              unint64_t v75 = v23++;
              char v76 = *(unsigned char *)(v24 + v75);
              *((void *)a2 + 1) = v23;
              v27 |= (unint64_t)(v76 & 0x7F) << v73;
              if ((v76 & 0x80) == 0) {
                break;
              }
              v73 += 7;
              BOOL v14 = v74++ > 8;
              if (v14)
              {
                uint64_t v27 = 0;
LABEL_206:
                unint64_t v2 = v75 + 1;
                goto LABEL_207;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v27 = 0;
            }
            goto LABEL_206;
          }
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          do
          {
            unint64_t v2 = v23 + 1;
            *((void *)a2 + 1) = v23 + 1;
            char v28 = *(unsigned char *)(v24 + v23);
            v27 |= (unint64_t)(v28 & 0x7F) << v25;
            if ((v28 & 0x80) == 0) {
              goto LABEL_207;
            }
            v25 += 7;
            unint64_t v23 = v2;
            BOOL v14 = v26++ > 8;
          }
          while (!v14);
          uint64_t v27 = 0;
LABEL_207:
          *((void *)this + 4) = v27;
          break;
        case 202:
          *((_DWORD *)this + 33) |= 0x1000000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 >= *((void *)a2 + 2))
          {
            BOOL v44 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v43 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v44 = v43 != 0;
          }
          *((unsigned char *)this + 124) = v44;
          break;
        case 203:
          *((_DWORD *)this + 33) |= 0x8000u;
          unint64_t v45 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v46 = *(void *)a2;
          if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
          {
            char v85 = 0;
            unsigned int v86 = 0;
            uint64_t v49 = 0;
            if (v2 <= v45) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v45)
              {
                LODWORD(v49) = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_222;
              }
              unint64_t v87 = v45++;
              char v88 = *(unsigned char *)(v46 + v87);
              *((void *)a2 + 1) = v45;
              v49 |= (unint64_t)(v88 & 0x7F) << v85;
              if ((v88 & 0x80) == 0) {
                break;
              }
              v85 += 7;
              BOOL v14 = v86++ > 8;
              if (v14)
              {
                LODWORD(v49) = 0;
LABEL_221:
                unint64_t v2 = v87 + 1;
                goto LABEL_222;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v49) = 0;
            }
            goto LABEL_221;
          }
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v49 = 0;
          do
          {
            unint64_t v2 = v45 + 1;
            *((void *)a2 + 1) = v45 + 1;
            char v50 = *(unsigned char *)(v46 + v45);
            v49 |= (unint64_t)(v50 & 0x7F) << v47;
            if ((v50 & 0x80) == 0) {
              goto LABEL_222;
            }
            v47 += 7;
            unint64_t v45 = v2;
            BOOL v14 = v48++ > 8;
          }
          while (!v14);
          LODWORD(v49) = 0;
LABEL_222:
          *((_DWORD *)this + 22) = v49;
          break;
        case 204:
          *((_DWORD *)this + 33) |= 0x10u;
          unint64_t v51 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v52 = *(void *)a2;
          if (v51 > 0xFFFFFFFFFFFFFFF5 || v51 + 10 > v2)
          {
            char v89 = 0;
            unsigned int v90 = 0;
            uint64_t v55 = 0;
            if (v2 <= v51) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v51)
              {
                uint64_t v55 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_227;
              }
              unint64_t v91 = v51++;
              char v92 = *(unsigned char *)(v52 + v91);
              *((void *)a2 + 1) = v51;
              v55 |= (unint64_t)(v92 & 0x7F) << v89;
              if ((v92 & 0x80) == 0) {
                break;
              }
              v89 += 7;
              BOOL v14 = v90++ > 8;
              if (v14)
              {
                uint64_t v55 = 0;
LABEL_226:
                unint64_t v2 = v91 + 1;
                goto LABEL_227;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v55 = 0;
            }
            goto LABEL_226;
          }
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          do
          {
            unint64_t v2 = v51 + 1;
            *((void *)a2 + 1) = v51 + 1;
            char v56 = *(unsigned char *)(v52 + v51);
            v55 |= (unint64_t)(v56 & 0x7F) << v53;
            if ((v56 & 0x80) == 0) {
              goto LABEL_227;
            }
            v53 += 7;
            unint64_t v51 = v2;
            BOOL v14 = v54++ > 8;
          }
          while (!v14);
          uint64_t v55 = 0;
LABEL_227:
          *((void *)this + 5) = v55;
          break;
        case 205:
          *((_DWORD *)this + 33) |= 0x400000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 29) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 206:
          *((_DWORD *)this + 33) |= 4u;
          unint64_t v57 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v58 = *(void *)a2;
          if (v57 > 0xFFFFFFFFFFFFFFF5 || v57 + 10 > v2)
          {
            char v93 = 0;
            unsigned int v94 = 0;
            uint64_t v61 = 0;
            if (v2 <= v57) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v57)
              {
                uint64_t v61 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_232;
              }
              unint64_t v95 = v57++;
              char v96 = *(unsigned char *)(v58 + v95);
              *((void *)a2 + 1) = v57;
              v61 |= (unint64_t)(v96 & 0x7F) << v93;
              if ((v96 & 0x80) == 0) {
                break;
              }
              v93 += 7;
              BOOL v14 = v94++ > 8;
              if (v14)
              {
                uint64_t v61 = 0;
LABEL_231:
                unint64_t v2 = v95 + 1;
                goto LABEL_232;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v61 = 0;
            }
            goto LABEL_231;
          }
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v61 = 0;
          do
          {
            unint64_t v2 = v57 + 1;
            *((void *)a2 + 1) = v57 + 1;
            char v62 = *(unsigned char *)(v58 + v57);
            v61 |= (unint64_t)(v62 & 0x7F) << v59;
            if ((v62 & 0x80) == 0) {
              goto LABEL_232;
            }
            v59 += 7;
            unint64_t v57 = v2;
            BOOL v14 = v60++ > 8;
          }
          while (!v14);
          uint64_t v61 = 0;
LABEL_232:
          *((void *)this + 3) = v61;
          break;
        case 207:
          *((_DWORD *)this + 33) |= 0x2000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 208:
          *((_DWORD *)this + 33) |= 2u;
          unint64_t v63 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v64 = *(void *)a2;
          if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
          {
            char v97 = 0;
            unsigned int v98 = 0;
            uint64_t v67 = 0;
            if (v2 <= v63) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v63)
              {
                uint64_t v67 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_237;
              }
              unint64_t v99 = v63++;
              char v100 = *(unsigned char *)(v64 + v99);
              *((void *)a2 + 1) = v63;
              v67 |= (unint64_t)(v100 & 0x7F) << v97;
              if ((v100 & 0x80) == 0) {
                break;
              }
              v97 += 7;
              BOOL v14 = v98++ > 8;
              if (v14)
              {
                uint64_t v67 = 0;
LABEL_236:
                unint64_t v2 = v99 + 1;
                goto LABEL_237;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v67 = 0;
            }
            goto LABEL_236;
          }
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v67 = 0;
          do
          {
            unint64_t v2 = v63 + 1;
            *((void *)a2 + 1) = v63 + 1;
            char v68 = *(unsigned char *)(v64 + v63);
            v67 |= (unint64_t)(v68 & 0x7F) << v65;
            if ((v68 & 0x80) == 0) {
              goto LABEL_237;
            }
            v65 += 7;
            unint64_t v63 = v2;
            BOOL v14 = v66++ > 8;
          }
          while (!v14);
          uint64_t v67 = 0;
LABEL_237:
          *((void *)this + 2) = v67;
          break;
        case 209:
          *((_DWORD *)this + 33) |= 0x1000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2))
          {
LABEL_136:
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            *((_DWORD *)this + 19) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_197:
            unint64_t v2 = *((void *)a2 + 1) + 4;
            *((void *)a2 + 1) = v2;
          }
          break;
        default:
          switch((int)v20)
          {
            case 301:
              *((_DWORD *)this + 33) |= 1u;
              unint64_t v29 = *((void *)a2 + 1);
              unint64_t v2 = *((void *)a2 + 2);
              uint64_t v30 = *(void *)a2;
              if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v2)
              {
                char v77 = 0;
                unsigned int v78 = 0;
                uint64_t v33 = 0;
                if (v2 <= v29) {
                  unint64_t v2 = *((void *)a2 + 1);
                }
                while (1)
                {
                  if (v2 == v29)
                  {
                    uint64_t v33 = 0;
                    *((unsigned char *)a2 + 24) = 1;
                    goto LABEL_212;
                  }
                  unint64_t v79 = v29++;
                  char v80 = *(unsigned char *)(v30 + v79);
                  *((void *)a2 + 1) = v29;
                  v33 |= (unint64_t)(v80 & 0x7F) << v77;
                  if ((v80 & 0x80) == 0) {
                    break;
                  }
                  v77 += 7;
                  BOOL v14 = v78++ > 8;
                  if (v14)
                  {
                    uint64_t v33 = 0;
LABEL_211:
                    unint64_t v2 = v79 + 1;
                    goto LABEL_212;
                  }
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v33 = 0;
                }
                goto LABEL_211;
              }
              char v31 = 0;
              unsigned int v32 = 0;
              uint64_t v33 = 0;
              do
              {
                unint64_t v2 = v29 + 1;
                *((void *)a2 + 1) = v29 + 1;
                char v34 = *(unsigned char *)(v30 + v29);
                v33 |= (unint64_t)(v34 & 0x7F) << v31;
                if ((v34 & 0x80) == 0) {
                  goto LABEL_212;
                }
                v31 += 7;
                unint64_t v29 = v2;
                BOOL v14 = v32++ > 8;
              }
              while (!v14);
              uint64_t v33 = 0;
LABEL_212:
              *((void *)this + 1) = v33;
              break;
            case 302:
              *((_DWORD *)this + 33) |= 0x200u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_136;
              }
              *((_DWORD *)this + 16) = *(_DWORD *)(*(void *)a2 + v2);
              goto LABEL_197;
            case 303:
              *((_DWORD *)this + 33) |= 0x400u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_136;
              }
              *((_DWORD *)this + 17) = *(_DWORD *)(*(void *)a2 + v2);
              goto LABEL_197;
            case 304:
              *((_DWORD *)this + 33) |= 0x10000000u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 >= *((void *)a2 + 2))
              {
                BOOL v70 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                int v69 = *(unsigned __int8 *)(*(void *)a2 + v2++);
                *((void *)a2 + 1) = v2;
                BOOL v70 = v69 != 0;
              }
              *((unsigned char *)this + 128) = v70;
              goto LABEL_198;
            case 305:
              *((_DWORD *)this + 33) |= 0x2000000u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 >= *((void *)a2 + 2))
              {
                BOOL v72 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                int v71 = *(unsigned __int8 *)(*(void *)a2 + v2++);
                *((void *)a2 + 1) = v2;
                BOOL v72 = v71 != 0;
              }
              *((unsigned char *)this + 125) = v72;
              goto LABEL_198;
            default:
              goto LABEL_19;
          }
          break;
      }
    }
    else
    {
      switch((int)v20)
      {
        case 1:
          *((_DWORD *)this + 33) |= 0x4000000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 >= *((void *)a2 + 2))
          {
            BOOL v22 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v21 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v22 = v21 != 0;
          }
          *((unsigned char *)this + 126) = v22;
          break;
        case 2:
          *((_DWORD *)this + 33) |= 0x8000000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 >= *((void *)a2 + 2))
          {
            BOOL v36 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v35 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v36 = v35 != 0;
          }
          *((unsigned char *)this + 127) = v36;
          break;
        case 3:
          *((_DWORD *)this + 33) |= 0x80000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 26) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 4:
          *((_DWORD *)this + 33) |= 0x800000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 5:
          *((_DWORD *)this + 33) |= 0x100000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 27) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 6:
          *((_DWORD *)this + 33) |= 0x20000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 24) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 7:
          *((_DWORD *)this + 33) |= 0x10000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 23) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 8:
          *((_DWORD *)this + 33) |= 0x100u;
          unint64_t v37 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v38 = *(void *)a2;
          if (v37 > 0xFFFFFFFFFFFFFFF5 || v37 + 10 > v2)
          {
            char v81 = 0;
            unsigned int v82 = 0;
            uint64_t v41 = 0;
            if (v2 <= v37) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v37)
              {
                LODWORD(v41) = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_217;
              }
              unint64_t v83 = v37++;
              char v84 = *(unsigned char *)(v38 + v83);
              *((void *)a2 + 1) = v37;
              v41 |= (unint64_t)(v84 & 0x7F) << v81;
              if ((v84 & 0x80) == 0) {
                break;
              }
              v81 += 7;
              BOOL v14 = v82++ > 8;
              if (v14)
              {
                LODWORD(v41) = 0;
LABEL_216:
                unint64_t v2 = v83 + 1;
                goto LABEL_217;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v41) = 0;
            }
            goto LABEL_216;
          }
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v41 = 0;
          do
          {
            unint64_t v2 = v37 + 1;
            *((void *)a2 + 1) = v37 + 1;
            char v42 = *(unsigned char *)(v38 + v37);
            v41 |= (unint64_t)(v42 & 0x7F) << v39;
            if ((v42 & 0x80) == 0) {
              goto LABEL_217;
            }
            v39 += 7;
            unint64_t v37 = v2;
            BOOL v14 = v40++ > 8;
          }
          while (!v14);
          LODWORD(v41) = 0;
LABEL_217:
          *((_DWORD *)this + 15) = v41;
          break;
        case 9:
          *((_DWORD *)this + 33) |= 0x80u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 14) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 10:
          *((_DWORD *)this + 33) |= 0x40u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 13) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        case 11:
          *((_DWORD *)this + 33) |= 0x20u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_136;
          }
          *((_DWORD *)this + 12) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_197;
        default:
          switch((int)v20)
          {
            case 'e':
              *((_DWORD *)this + 33) |= 0x800u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_136;
              }
              *((_DWORD *)this + 18) = *(_DWORD *)(*(void *)a2 + v2);
              break;
            case 'f':
              *((_DWORD *)this + 33) |= 0x4000u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_136;
              }
              *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v2);
              break;
            case 'g':
              *((_DWORD *)this + 33) |= 0x200000u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_136;
              }
              *((_DWORD *)this + 28) = *(_DWORD *)(*(void *)a2 + v2);
              break;
            case 'h':
              *((_DWORD *)this + 33) |= 0x40000u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_136;
              }
              *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v2);
              break;
            default:
              goto LABEL_19;
          }
          goto LABEL_197;
      }
    }
LABEL_198:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaGpsResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 132);
  if ((v4 & 0x4000000) != 0)
  {
    this = PB::Writer::write(a2);
    int v4 = *(_DWORD *)(v3 + 132);
    if ((v4 & 0x8000000) == 0)
    {
LABEL_3:
      if ((v4 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 0x8000000) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x80000) == 0)
  {
LABEL_4:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = PB::Writer::write(a2, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x800000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = PB::Writer::write(a2, *(float *)(v3 + 108));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x20000) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = PB::Writer::write(a2, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = PB::Writer::write(a2, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = PB::Writer::write(a2, *(float *)(v3 + 56));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x40) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = PB::Writer::write(a2, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = PB::Writer::write(a2, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = PB::Writer::write(a2, *(float *)(v3 + 72));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x4000) == 0)
  {
LABEL_14:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x200000) == 0)
  {
LABEL_15:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = PB::Writer::write(a2, *(float *)(v3 + 112));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x40000) == 0)
  {
LABEL_16:
    if ((v4 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 8) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x8000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10) == 0)
  {
LABEL_20:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x400000) == 0)
  {
LABEL_21:
    if ((v4 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 4) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 2) == 0)
  {
LABEL_24:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x1000) == 0)
  {
LABEL_25:
    if ((v4 & 1) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = PB::Writer::write(a2, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 1) == 0)
  {
LABEL_26:
    if ((v4 & 0x200) == 0) {
      goto LABEL_27;
    }
    goto LABEL_56;
  }
LABEL_55:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x200) == 0)
  {
LABEL_27:
    if ((v4 & 0x400) == 0) {
      goto LABEL_28;
    }
    goto LABEL_57;
  }
LABEL_56:
  this = PB::Writer::write(a2, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x400) == 0)
  {
LABEL_28:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_29;
    }
LABEL_58:
    this = PB::Writer::write(a2);
    if ((*(_DWORD *)(v3 + 132) & 0x2000000) == 0) {
      return this;
    }
    goto LABEL_59;
  }
LABEL_57:
  this = PB::Writer::write(a2, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 132);
  if ((v4 & 0x10000000) != 0) {
    goto LABEL_58;
  }
LABEL_29:
  if ((v4 & 0x2000000) == 0) {
    return this;
  }
LABEL_59:
  return PB::Writer::write(a2);
}

uint64_t CMMsl::KappaGpsResult::hash_value(CMMsl::KappaGpsResult *this)
{
  int v1 = *((_DWORD *)this + 33);
  if ((v1 & 0x4000000) != 0)
  {
    uint64_t v48 = *((unsigned __int8 *)this + 126);
    if ((v1 & 0x8000000) != 0)
    {
LABEL_3:
      uint64_t v2 = *((unsigned __int8 *)this + 127);
      if ((v1 & 0x80000) != 0) {
        goto LABEL_4;
      }
LABEL_84:
      uint64_t v4 = 0;
      if ((v1 & 0x800000) != 0) {
        goto LABEL_8;
      }
LABEL_85:
      uint64_t v6 = 0;
      if ((v1 & 0x100000) != 0) {
        goto LABEL_12;
      }
LABEL_86:
      uint64_t v8 = 0;
      if ((v1 & 0x20000) != 0) {
        goto LABEL_16;
      }
LABEL_87:
      uint64_t v10 = 0;
      if ((v1 & 0x10000) != 0) {
        goto LABEL_20;
      }
LABEL_88:
      uint64_t v12 = 0;
      if ((v1 & 0x100) != 0) {
        goto LABEL_24;
      }
      goto LABEL_89;
    }
  }
  else
  {
    uint64_t v48 = 0;
    if ((v1 & 0x8000000) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  if ((v1 & 0x80000) == 0) {
    goto LABEL_84;
  }
LABEL_4:
  float v3 = *((float *)this + 26);
  if (v3 == 0.0) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = LODWORD(v3);
  }
  if ((v1 & 0x800000) == 0) {
    goto LABEL_85;
  }
LABEL_8:
  float v5 = *((float *)this + 30);
  if (v5 == 0.0) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = LODWORD(v5);
  }
  if ((v1 & 0x100000) == 0) {
    goto LABEL_86;
  }
LABEL_12:
  float v7 = *((float *)this + 27);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  else {
    uint64_t v8 = LODWORD(v7);
  }
  if ((v1 & 0x20000) == 0) {
    goto LABEL_87;
  }
LABEL_16:
  float v9 = *((float *)this + 24);
  if (v9 == 0.0) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = LODWORD(v9);
  }
  if ((v1 & 0x10000) == 0) {
    goto LABEL_88;
  }
LABEL_20:
  float v11 = *((float *)this + 23);
  if (v11 == 0.0) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = LODWORD(v11);
  }
  if ((v1 & 0x100) != 0)
  {
LABEL_24:
    uint64_t v13 = *((int *)this + 15);
    if ((v1 & 0x80) != 0) {
      goto LABEL_25;
    }
LABEL_90:
    uint64_t v15 = 0;
    if ((v1 & 0x40) != 0) {
      goto LABEL_29;
    }
LABEL_91:
    uint64_t v17 = 0;
    if ((v1 & 0x20) != 0) {
      goto LABEL_33;
    }
LABEL_92:
    uint64_t v19 = 0;
    if ((v1 & 0x800) != 0) {
      goto LABEL_37;
    }
LABEL_93:
    uint64_t v21 = 0;
    if ((v1 & 0x4000) != 0) {
      goto LABEL_41;
    }
LABEL_94:
    uint64_t v23 = 0;
    if ((v1 & 0x200000) != 0) {
      goto LABEL_45;
    }
LABEL_95:
    uint64_t v25 = 0;
    if ((v1 & 0x40000) != 0) {
      goto LABEL_49;
    }
LABEL_96:
    uint64_t v27 = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_53;
    }
    goto LABEL_97;
  }
LABEL_89:
  uint64_t v13 = 0;
  if ((v1 & 0x80) == 0) {
    goto LABEL_90;
  }
LABEL_25:
  float v14 = *((float *)this + 14);
  if (v14 == 0.0) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = LODWORD(v14);
  }
  if ((v1 & 0x40) == 0) {
    goto LABEL_91;
  }
LABEL_29:
  float v16 = *((float *)this + 13);
  if (v16 == 0.0) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = LODWORD(v16);
  }
  if ((v1 & 0x20) == 0) {
    goto LABEL_92;
  }
LABEL_33:
  float v18 = *((float *)this + 12);
  if (v18 == 0.0) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = LODWORD(v18);
  }
  if ((v1 & 0x800) == 0) {
    goto LABEL_93;
  }
LABEL_37:
  float v20 = *((float *)this + 18);
  if (v20 == 0.0) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = LODWORD(v20);
  }
  if ((v1 & 0x4000) == 0) {
    goto LABEL_94;
  }
LABEL_41:
  float v22 = *((float *)this + 21);
  if (v22 == 0.0) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = LODWORD(v22);
  }
  if ((v1 & 0x200000) == 0) {
    goto LABEL_95;
  }
LABEL_45:
  float v24 = *((float *)this + 28);
  if (v24 == 0.0) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = LODWORD(v24);
  }
  if ((v1 & 0x40000) == 0) {
    goto LABEL_96;
  }
LABEL_49:
  float v26 = *((float *)this + 25);
  if (v26 == 0.0) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = LODWORD(v26);
  }
  if ((v1 & 8) != 0)
  {
LABEL_53:
    uint64_t v28 = *((void *)this + 4);
    if ((v1 & 0x1000000) != 0) {
      goto LABEL_54;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t v28 = 0;
  if ((v1 & 0x1000000) != 0)
  {
LABEL_54:
    uint64_t v29 = *((unsigned __int8 *)this + 124);
    if ((v1 & 0x8000) != 0) {
      goto LABEL_55;
    }
    goto LABEL_99;
  }
LABEL_98:
  uint64_t v29 = 0;
  if ((v1 & 0x8000) != 0)
  {
LABEL_55:
    uint64_t v30 = *((int *)this + 22);
    if ((v1 & 0x10) != 0) {
      goto LABEL_56;
    }
    goto LABEL_100;
  }
LABEL_99:
  uint64_t v30 = 0;
  if ((v1 & 0x10) != 0)
  {
LABEL_56:
    uint64_t v31 = *((void *)this + 5);
    if ((v1 & 0x400000) != 0) {
      goto LABEL_57;
    }
LABEL_101:
    uint64_t v33 = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_61;
    }
    goto LABEL_102;
  }
LABEL_100:
  uint64_t v31 = 0;
  if ((v1 & 0x400000) == 0) {
    goto LABEL_101;
  }
LABEL_57:
  float v32 = *((float *)this + 29);
  if (v32 == 0.0) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = LODWORD(v32);
  }
  if ((v1 & 4) != 0)
  {
LABEL_61:
    uint64_t v34 = *((void *)this + 3);
    if ((v1 & 0x2000) != 0) {
      goto LABEL_62;
    }
LABEL_103:
    uint64_t v36 = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_66;
    }
    goto LABEL_104;
  }
LABEL_102:
  uint64_t v34 = 0;
  if ((v1 & 0x2000) == 0) {
    goto LABEL_103;
  }
LABEL_62:
  float v35 = *((float *)this + 20);
  if (v35 == 0.0) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = LODWORD(v35);
  }
  if ((v1 & 2) != 0)
  {
LABEL_66:
    uint64_t v37 = *((void *)this + 2);
    if ((v1 & 0x1000) != 0) {
      goto LABEL_67;
    }
LABEL_105:
    uint64_t v39 = 0;
    if (v1) {
      goto LABEL_71;
    }
    goto LABEL_106;
  }
LABEL_104:
  uint64_t v37 = 0;
  if ((v1 & 0x1000) == 0) {
    goto LABEL_105;
  }
LABEL_67:
  float v38 = *((float *)this + 19);
  if (v38 == 0.0) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = LODWORD(v38);
  }
  if (v1)
  {
LABEL_71:
    uint64_t v40 = *((void *)this + 1);
    if ((v1 & 0x200) != 0) {
      goto LABEL_72;
    }
LABEL_107:
    uint64_t v42 = 0;
    if ((v1 & 0x400) != 0) {
      goto LABEL_76;
    }
LABEL_108:
    uint64_t v44 = 0;
    if ((v1 & 0x10000000) != 0) {
      goto LABEL_80;
    }
LABEL_109:
    uint64_t v45 = 0;
    if ((v1 & 0x2000000) != 0) {
      goto LABEL_81;
    }
LABEL_110:
    uint64_t v46 = 0;
    return v2 ^ v48 ^ v4 ^ v6 ^ v8 ^ v10 ^ v12 ^ v13 ^ v15 ^ v17 ^ v19 ^ v21 ^ v23 ^ v25 ^ v27 ^ v28 ^ v29 ^ v30 ^ v31 ^ v33 ^ v34 ^ v36 ^ v37 ^ v39 ^ v40 ^ v42 ^ v44 ^ v45 ^ v46;
  }
LABEL_106:
  uint64_t v40 = 0;
  if ((v1 & 0x200) == 0) {
    goto LABEL_107;
  }
LABEL_72:
  float v41 = *((float *)this + 16);
  if (v41 == 0.0) {
    uint64_t v42 = 0;
  }
  else {
    uint64_t v42 = LODWORD(v41);
  }
  if ((v1 & 0x400) == 0) {
    goto LABEL_108;
  }
LABEL_76:
  float v43 = *((float *)this + 17);
  if (v43 == 0.0) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = LODWORD(v43);
  }
  if ((v1 & 0x10000000) == 0) {
    goto LABEL_109;
  }
LABEL_80:
  uint64_t v45 = *((unsigned __int8 *)this + 128);
  if ((v1 & 0x2000000) == 0) {
    goto LABEL_110;
  }
LABEL_81:
  uint64_t v46 = *((unsigned __int8 *)this + 125);
  return v2 ^ v48 ^ v4 ^ v6 ^ v8 ^ v10 ^ v12 ^ v13 ^ v15 ^ v17 ^ v19 ^ v21 ^ v23 ^ v25 ^ v27 ^ v28 ^ v29 ^ v30 ^ v31 ^ v33 ^ v34 ^ v36 ^ v37 ^ v39 ^ v40 ^ v42 ^ v44 ^ v45 ^ v46;
}

void CMMsl::KappaGravityAutocorrelationResult::~KappaGravityAutocorrelationResult(CMMsl::KappaGravityAutocorrelationResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaGravityAutocorrelationResult::KappaGravityAutocorrelationResult(uint64_t this, const CMMsl::KappaGravityAutocorrelationResult *a2)
{
  *(void *)this = &unk_2706428A0;
  *(_DWORD *)(this + 64) = 0;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x40) != 0)
  {
    int v4 = *((_DWORD *)a2 + 11);
    __int16 v3 = 64;
    *(_WORD *)(this + 64) = 64;
    *(_DWORD *)(this + 44) = v4;
    __int16 v2 = *((_WORD *)a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 9);
    v3 |= 0x10u;
    *(_WORD *)(this + 64) = v3;
    *(_DWORD *)(this + 36) = v5;
    __int16 v2 = *((_WORD *)a2 + 32);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    int v6 = *((_DWORD *)a2 + 10);
    v3 |= 0x20u;
    *(_WORD *)(this + 64) = v3;
    *(_DWORD *)(this + 40) = v6;
    __int16 v2 = *((_WORD *)a2 + 32);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 8);
  v3 |= 8u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 32) = v7;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v8 = *((void *)a2 + 3);
  v3 |= 4u;
  *(_WORD *)(this + 64) = v3;
  *(void *)(this + 24) = v8;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x800) == 0)
  {
LABEL_10:
    if ((v2 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v9 = *((unsigned char *)a2 + 61);
  v3 |= 0x800u;
  *(_WORD *)(this + 64) = v3;
  *(unsigned char *)(this + 61) = v9;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x400) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v10 = *((unsigned char *)a2 + 60);
  v3 |= 0x400u;
  *(_WORD *)(this + 64) = v3;
  *(unsigned char *)(this + 60) = v10;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v11 = *((void *)a2 + 1);
  v3 |= 1u;
  *(_WORD *)(this + 64) = v3;
  *(void *)(this + 8) = v11;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 2) == 0)
  {
LABEL_13:
    if ((v2 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v12 = *((void *)a2 + 2);
  v3 |= 2u;
  *(_WORD *)(this + 64) = v3;
  *(void *)(this + 16) = v12;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x200) == 0)
  {
LABEL_14:
    if ((v2 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *((_DWORD *)a2 + 14);
  v3 |= 0x200u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 56) = v13;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x100) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      return this;
    }
LABEL_26:
    int v15 = *((_DWORD *)a2 + 12);
    *(_WORD *)(this + 64) = v3 | 0x80;
    *(_DWORD *)(this + 48) = v15;
    return this;
  }
LABEL_25:
  int v14 = *((_DWORD *)a2 + 13);
  v3 |= 0x100u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 52) = v14;
  if ((*((_WORD *)a2 + 32) & 0x80) != 0) {
    goto LABEL_26;
  }
  return this;
}

CMMsl *CMMsl::KappaGravityAutocorrelationResult::operator=(CMMsl *a1, const CMMsl::KappaGravityAutocorrelationResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaGravityAutocorrelationResult::KappaGravityAutocorrelationResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaGravityAutocorrelationResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaGravityAutocorrelationResult *a2, CMMsl::KappaGravityAutocorrelationResult *a3)
{
  int v3 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v3;
  int v4 = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v4;
  int v5 = *((_DWORD *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((_DWORD *)a2 + 9) = v5;
  int v6 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v6;
  int v7 = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v7;
  uint64_t v8 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 61);
  *((unsigned char *)this + 61) = *((unsigned char *)a2 + 61);
  *((unsigned char *)a2 + 61) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 60);
  *((unsigned char *)this + 60) = *((unsigned char *)a2 + 60);
  *((unsigned char *)a2 + 60) = v8;
  uint64_t v9 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v9;
  uint64_t v10 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v10;
  LODWORD(v10) = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v10;
  float result = *((float *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((float *)a2 + 13) = result;
  LODWORD(v10) = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v10;
  return result;
}

float CMMsl::KappaGravityAutocorrelationResult::KappaGravityAutocorrelationResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_2706428A0;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a2 + 64) = 0;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  float result = *(float *)(a2 + 52);
  *(float *)(a1 + 52) = result;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return result;
}

CMMsl *CMMsl::KappaGravityAutocorrelationResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaGravityAutocorrelationResult::KappaGravityAutocorrelationResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaGravityAutocorrelationResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaGravityAutocorrelationResult::formatText(CMMsl::KappaGravityAutocorrelationResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(a2, "autocorrelationRangeValCriticalThreshold", *((float *)this + 8));
    __int16 v5 = *((_WORD *)this + 32);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "autocorrelationRangeValThreshold", *((float *)this + 9));
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(a2, "autocorrelationTimeVariationCriticalThreshold");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(a2, "autocorrelationTimeVariationThreshold");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 1) == 0)
  {
LABEL_6:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(a2, "epochFirstTimestamp");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 2) == 0)
  {
LABEL_7:
    if ((v5 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(a2, "isCriticalFP");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(a2, "isPeriodic");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x80) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(a2, "numDmSamplesEpoch");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(a2, "rangeVal", *((float *)this + 13));
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x200) == 0)
  {
LABEL_12:
    if ((v5 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(a2, "timeVariation");
  if ((*((_WORD *)this + 32) & 4) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_14:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaGravityAutocorrelationResult::readFrom(CMMsl::KappaGravityAutocorrelationResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_26:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v11 >> 3;
      if ((int)(v11 >> 3) > 202)
      {
        switch((int)v21)
        {
          case 301:
            *((_WORD *)this + 32) |= 1u;
            unint64_t v28 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v29 = *(void *)a2;
            if (v28 > 0xFFFFFFFFFFFFFFF5 || v28 + 10 > v2)
            {
              char v72 = 0;
              unsigned int v73 = 0;
              uint64_t v32 = 0;
              if (v2 <= v28) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v28)
                {
                  uint64_t v32 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_159;
                }
                unint64_t v74 = v28++;
                char v75 = *(unsigned char *)(v29 + v74);
                *((void *)a2 + 1) = v28;
                v32 |= (unint64_t)(v75 & 0x7F) << v72;
                if ((v75 & 0x80) == 0) {
                  break;
                }
                v72 += 7;
                BOOL v14 = v73++ > 8;
                if (v14)
                {
                  uint64_t v32 = 0;
LABEL_158:
                  unint64_t v2 = v74 + 1;
                  goto LABEL_159;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v32 = 0;
              }
              goto LABEL_158;
            }
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v2 = v28 + 1;
              *((void *)a2 + 1) = v28 + 1;
              char v33 = *(unsigned char *)(v29 + v28);
              v32 |= (unint64_t)(v33 & 0x7F) << v30;
              if ((v33 & 0x80) == 0) {
                goto LABEL_159;
              }
              v30 += 7;
              unint64_t v28 = v2;
              BOOL v14 = v31++ > 8;
            }
            while (!v14);
            uint64_t v32 = 0;
LABEL_159:
            *((void *)this + 1) = v32;
            break;
          case 302:
            *((_WORD *)this + 32) |= 2u;
            unint64_t v44 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v45 = *(void *)a2;
            if (v44 > 0xFFFFFFFFFFFFFFF5 || v44 + 10 > v2)
            {
              char v80 = 0;
              unsigned int v81 = 0;
              uint64_t v48 = 0;
              if (v2 <= v44) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v44)
                {
                  uint64_t v48 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_169;
                }
                unint64_t v82 = v44++;
                char v83 = *(unsigned char *)(v45 + v82);
                *((void *)a2 + 1) = v44;
                v48 |= (unint64_t)(v83 & 0x7F) << v80;
                if ((v83 & 0x80) == 0) {
                  break;
                }
                v80 += 7;
                BOOL v14 = v81++ > 8;
                if (v14)
                {
                  uint64_t v48 = 0;
LABEL_168:
                  unint64_t v2 = v82 + 1;
                  goto LABEL_169;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v48 = 0;
              }
              goto LABEL_168;
            }
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            do
            {
              unint64_t v2 = v44 + 1;
              *((void *)a2 + 1) = v44 + 1;
              char v49 = *(unsigned char *)(v45 + v44);
              v48 |= (unint64_t)(v49 & 0x7F) << v46;
              if ((v49 & 0x80) == 0) {
                goto LABEL_169;
              }
              v46 += 7;
              unint64_t v44 = v2;
              BOOL v14 = v47++ > 8;
            }
            while (!v14);
            uint64_t v48 = 0;
LABEL_169:
            *((void *)this + 2) = v48;
            break;
          case 303:
            *((_WORD *)this + 32) |= 0x200u;
            unint64_t v50 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v51 = *(void *)a2;
            if (v50 > 0xFFFFFFFFFFFFFFF5 || v50 + 10 > v2)
            {
              char v84 = 0;
              unsigned int v85 = 0;
              uint64_t v54 = 0;
              if (v2 <= v50) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v50)
                {
                  LODWORD(v54) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_174;
                }
                unint64_t v86 = v50++;
                char v87 = *(unsigned char *)(v51 + v86);
                *((void *)a2 + 1) = v50;
                v54 |= (unint64_t)(v87 & 0x7F) << v84;
                if ((v87 & 0x80) == 0) {
                  break;
                }
                v84 += 7;
                BOOL v14 = v85++ > 8;
                if (v14)
                {
                  LODWORD(v54) = 0;
LABEL_173:
                  unint64_t v2 = v86 + 1;
                  goto LABEL_174;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v54) = 0;
              }
              goto LABEL_173;
            }
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v54 = 0;
            do
            {
              unint64_t v2 = v50 + 1;
              *((void *)a2 + 1) = v50 + 1;
              char v55 = *(unsigned char *)(v51 + v50);
              v54 |= (unint64_t)(v55 & 0x7F) << v52;
              if ((v55 & 0x80) == 0) {
                goto LABEL_174;
              }
              v52 += 7;
              unint64_t v50 = v2;
              BOOL v14 = v53++ > 8;
            }
            while (!v14);
            LODWORD(v54) = 0;
LABEL_174:
            *((_DWORD *)this + 14) = v54;
            break;
          case 304:
            *((_WORD *)this + 32) |= 0x100u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
            {
              *((_DWORD *)this + 13) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_149:
              unint64_t v2 = *((void *)a2 + 1) + 4;
              *((void *)a2 + 1) = v2;
            }
            else
            {
LABEL_80:
              *((unsigned char *)a2 + 24) = 1;
            }
            break;
          case 305:
            *((_WORD *)this + 32) |= 0x80u;
            unint64_t v56 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v57 = *(void *)a2;
            if (v56 > 0xFFFFFFFFFFFFFFF5 || v56 + 10 > v2)
            {
              char v88 = 0;
              unsigned int v89 = 0;
              uint64_t v60 = 0;
              if (v2 <= v56) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v56)
                {
                  LODWORD(v60) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_179;
                }
                unint64_t v90 = v56++;
                char v91 = *(unsigned char *)(v57 + v90);
                *((void *)a2 + 1) = v56;
                v60 |= (unint64_t)(v91 & 0x7F) << v88;
                if ((v91 & 0x80) == 0) {
                  break;
                }
                v88 += 7;
                BOOL v14 = v89++ > 8;
                if (v14)
                {
                  LODWORD(v60) = 0;
LABEL_178:
                  unint64_t v2 = v90 + 1;
                  goto LABEL_179;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v60) = 0;
              }
              goto LABEL_178;
            }
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v60 = 0;
            do
            {
              unint64_t v2 = v56 + 1;
              *((void *)a2 + 1) = v56 + 1;
              char v61 = *(unsigned char *)(v57 + v56);
              v60 |= (unint64_t)(v61 & 0x7F) << v58;
              if ((v61 & 0x80) == 0) {
                goto LABEL_179;
              }
              v58 += 7;
              unint64_t v56 = v2;
              BOOL v14 = v59++ > 8;
            }
            while (!v14);
            LODWORD(v60) = 0;
LABEL_179:
            *((_DWORD *)this + 12) = v60;
            break;
          default:
            if (v21 != 203) {
              goto LABEL_19;
            }
            *((_WORD *)this + 32) |= 0x400u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v37 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v36 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v37 = v36 != 0;
            }
            *((unsigned char *)this + 60) = v37;
            break;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 'e':
            *((_WORD *)this + 32) |= 0x40u;
            unint64_t v22 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v23 = *(void *)a2;
            if (v22 > 0xFFFFFFFFFFFFFFF5 || v22 + 10 > v2)
            {
              char v68 = 0;
              unsigned int v69 = 0;
              uint64_t v26 = 0;
              if (v2 <= v22) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v22)
                {
                  LODWORD(v26) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_154;
                }
                unint64_t v70 = v22++;
                char v71 = *(unsigned char *)(v23 + v70);
                *((void *)a2 + 1) = v22;
                v26 |= (unint64_t)(v71 & 0x7F) << v68;
                if ((v71 & 0x80) == 0) {
                  break;
                }
                v68 += 7;
                BOOL v14 = v69++ > 8;
                if (v14)
                {
                  LODWORD(v26) = 0;
LABEL_153:
                  unint64_t v2 = v70 + 1;
                  goto LABEL_154;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v26) = 0;
              }
              goto LABEL_153;
            }
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            do
            {
              unint64_t v2 = v22 + 1;
              *((void *)a2 + 1) = v22 + 1;
              char v27 = *(unsigned char *)(v23 + v22);
              v26 |= (unint64_t)(v27 & 0x7F) << v24;
              if ((v27 & 0x80) == 0) {
                goto LABEL_154;
              }
              v24 += 7;
              unint64_t v22 = v2;
              BOOL v14 = v25++ > 8;
            }
            while (!v14);
            LODWORD(v26) = 0;
LABEL_154:
            *((_DWORD *)this + 11) = v26;
            break;
          case 'f':
            *((_WORD *)this + 32) |= 0x10u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
              goto LABEL_80;
            }
            *((_DWORD *)this + 9) = *(_DWORD *)(*(void *)a2 + v2);
            goto LABEL_149;
          case 'g':
            *((_WORD *)this + 32) |= 0x20u;
            unint64_t v38 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v39 = *(void *)a2;
            if (v38 > 0xFFFFFFFFFFFFFFF5 || v38 + 10 > v2)
            {
              char v76 = 0;
              unsigned int v77 = 0;
              uint64_t v42 = 0;
              if (v2 <= v38) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v38)
                {
                  LODWORD(v42) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_164;
                }
                unint64_t v78 = v38++;
                char v79 = *(unsigned char *)(v39 + v78);
                *((void *)a2 + 1) = v38;
                v42 |= (unint64_t)(v79 & 0x7F) << v76;
                if ((v79 & 0x80) == 0) {
                  break;
                }
                v76 += 7;
                BOOL v14 = v77++ > 8;
                if (v14)
                {
                  LODWORD(v42) = 0;
LABEL_163:
                  unint64_t v2 = v78 + 1;
                  goto LABEL_164;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v42) = 0;
              }
              goto LABEL_163;
            }
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v42 = 0;
            do
            {
              unint64_t v2 = v38 + 1;
              *((void *)a2 + 1) = v38 + 1;
              char v43 = *(unsigned char *)(v39 + v38);
              v42 |= (unint64_t)(v43 & 0x7F) << v40;
              if ((v43 & 0x80) == 0) {
                goto LABEL_164;
              }
              v40 += 7;
              unint64_t v38 = v2;
              BOOL v14 = v41++ > 8;
            }
            while (!v14);
            LODWORD(v42) = 0;
LABEL_164:
            *((_DWORD *)this + 10) = v42;
            break;
          case 'h':
            *((_WORD *)this + 32) |= 8u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
              goto LABEL_80;
            }
            *((_DWORD *)this + 8) = *(_DWORD *)(*(void *)a2 + v2);
            goto LABEL_149;
          default:
            if (v21 == 201)
            {
              *((_WORD *)this + 32) |= 4u;
              unint64_t v62 = *((void *)a2 + 1);
              unint64_t v2 = *((void *)a2 + 2);
              uint64_t v63 = *(void *)a2;
              if (v62 > 0xFFFFFFFFFFFFFFF5 || v62 + 10 > v2)
              {
                char v92 = 0;
                unsigned int v93 = 0;
                uint64_t v66 = 0;
                if (v2 <= v62) {
                  unint64_t v2 = *((void *)a2 + 1);
                }
                while (1)
                {
                  if (v2 == v62)
                  {
                    uint64_t v66 = 0;
                    *((unsigned char *)a2 + 24) = 1;
                    goto LABEL_184;
                  }
                  unint64_t v94 = v62++;
                  char v95 = *(unsigned char *)(v63 + v94);
                  *((void *)a2 + 1) = v62;
                  v66 |= (unint64_t)(v95 & 0x7F) << v92;
                  if ((v95 & 0x80) == 0) {
                    break;
                  }
                  v92 += 7;
                  BOOL v14 = v93++ > 8;
                  if (v14)
                  {
                    uint64_t v66 = 0;
                    goto LABEL_183;
                  }
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v66 = 0;
                }
LABEL_183:
                unint64_t v2 = v94 + 1;
              }
              else
              {
                char v64 = 0;
                unsigned int v65 = 0;
                uint64_t v66 = 0;
                while (1)
                {
                  unint64_t v2 = v62 + 1;
                  *((void *)a2 + 1) = v62 + 1;
                  char v67 = *(unsigned char *)(v63 + v62);
                  v66 |= (unint64_t)(v67 & 0x7F) << v64;
                  if ((v67 & 0x80) == 0) {
                    break;
                  }
                  v64 += 7;
                  unint64_t v62 = v2;
                  BOOL v14 = v65++ > 8;
                  if (v14)
                  {
                    uint64_t v66 = 0;
                    break;
                  }
                }
              }
LABEL_184:
              *((void *)this + 3) = v66;
            }
            else if (v21 == 202)
            {
              *((_WORD *)this + 32) |= 0x800u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 >= *((void *)a2 + 2))
              {
                BOOL v35 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                int v34 = *(unsigned __int8 *)(*(void *)a2 + v2++);
                *((void *)a2 + 1) = v2;
                BOOL v35 = v34 != 0;
              }
              *((unsigned char *)this + 61) = v35;
            }
            else
            {
LABEL_19:
              uint64_t result = PB::Reader::skip(a2);
              if (!result) {
                return result;
              }
              unint64_t v2 = *((void *)a2 + 1);
            }
            break;
        }
      }
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_26;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KappaGravityAutocorrelationResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 64);
  if ((v4 & 0x40) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = PB::Writer::write(a2, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x800) == 0)
  {
LABEL_7:
    if ((v4 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x200) == 0)
  {
LABEL_11:
    if ((v4 & 0x100) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    this = PB::Writer::write(a2, *(float *)(v3 + 52));
    if ((*(_WORD *)(v3 + 64) & 0x80) == 0) {
      return this;
    }
    goto LABEL_25;
  }
LABEL_23:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 0x80) == 0) {
    return this;
  }
LABEL_25:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaGravityAutocorrelationResult::hash_value(CMMsl::KappaGravityAutocorrelationResult *this)
{
  __int16 v1 = *((_WORD *)this + 32);
  if ((v1 & 0x40) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 0x10) != 0) {
      goto LABEL_3;
    }
LABEL_21:
    uint64_t v4 = 0;
    if ((v1 & 0x20) != 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
  uint64_t v2 = *((int *)this + 11);
  if ((v1 & 0x10) == 0) {
    goto LABEL_21;
  }
LABEL_3:
  float v3 = *((float *)this + 9);
  uint64_t v4 = LODWORD(v3);
  if (v3 == 0.0) {
    uint64_t v4 = 0;
  }
  if ((v1 & 0x20) != 0)
  {
LABEL_6:
    uint64_t v5 = *((int *)this + 10);
    if ((v1 & 8) != 0) {
      goto LABEL_7;
    }
LABEL_23:
    uint64_t v7 = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_22:
  uint64_t v5 = 0;
  if ((v1 & 8) == 0) {
    goto LABEL_23;
  }
LABEL_7:
  float v6 = *((float *)this + 8);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  if ((v1 & 4) != 0)
  {
LABEL_10:
    uint64_t v8 = *((void *)this + 3);
    if ((*((_WORD *)this + 32) & 0x800) != 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v8 = 0;
  if ((*((_WORD *)this + 32) & 0x800) != 0)
  {
LABEL_11:
    uint64_t v9 = *((unsigned __int8 *)this + 61);
    if ((*((_WORD *)this + 32) & 0x400) != 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v9 = 0;
  if ((*((_WORD *)this + 32) & 0x400) != 0)
  {
LABEL_12:
    uint64_t v10 = *((unsigned __int8 *)this + 60);
    if (v1) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v10 = 0;
  if (v1)
  {
LABEL_13:
    uint64_t v11 = *((void *)this + 1);
    if ((v1 & 2) != 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v11 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_14:
    uint64_t v12 = *((void *)this + 2);
    if ((*((_WORD *)this + 32) & 0x200) != 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v12 = 0;
  if ((*((_WORD *)this + 32) & 0x200) != 0)
  {
LABEL_15:
    uint64_t v13 = *((int *)this + 14);
    if ((*((_WORD *)this + 32) & 0x100) != 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v13 = 0;
  if ((*((_WORD *)this + 32) & 0x100) != 0)
  {
LABEL_16:
    float v14 = *((float *)this + 13);
    uint64_t v15 = LODWORD(v14);
    if (v14 == 0.0) {
      uint64_t v15 = 0;
    }
    if ((v1 & 0x80) != 0) {
      goto LABEL_19;
    }
LABEL_31:
    uint64_t v16 = 0;
    return v4 ^ v2 ^ v5 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v15 ^ v16;
  }
LABEL_30:
  uint64_t v15 = 0;
  if ((v1 & 0x80) == 0) {
    goto LABEL_31;
  }
LABEL_19:
  uint64_t v16 = *((int *)this + 12);
  return v4 ^ v2 ^ v5 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v15 ^ v16;
}

void CMMsl::KappaHighSpeedCrashResult::~KappaHighSpeedCrashResult(CMMsl::KappaHighSpeedCrashResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaHighSpeedCrashResult::KappaHighSpeedCrashResult(uint64_t this, const CMMsl::KappaHighSpeedCrashResult *a2)
{
  *(void *)this = &unk_2706428D8;
  *(_DWORD *)(this + 68) = 0;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 4) != 0)
  {
    int v4 = *((_DWORD *)a2 + 5);
    int v3 = 4;
    *(_DWORD *)(this + 68) = 4;
    *(_DWORD *)(this + 20) = v4;
    int v2 = *((_DWORD *)a2 + 17);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 4);
    v3 |= 2u;
    *(_DWORD *)(this + 68) = v3;
    *(_DWORD *)(this + 16) = v5;
    int v2 = *((_DWORD *)a2 + 17);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    int v6 = *((_DWORD *)a2 + 6);
    v3 |= 8u;
    *(_DWORD *)(this + 68) = v3;
    *(_DWORD *)(this + 24) = v6;
    int v2 = *((_DWORD *)a2 + 17);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 0x800) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *((void *)a2 + 1);
  v3 |= 1u;
  *(_DWORD *)(this + 68) = v3;
  *(void *)(this + 8) = v7;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x800) == 0)
  {
LABEL_9:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  char v8 = *((unsigned char *)a2 + 56);
  v3 |= 0x800u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 56) = v8;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x1000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v9 = *((unsigned char *)a2 + 57);
  v3 |= 0x1000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 57) = v9;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v10 = *((unsigned char *)a2 + 58);
  v3 |= 0x2000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 58) = v10;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x100000) == 0)
  {
LABEL_12:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v11 = *((unsigned char *)a2 + 65);
  v3 |= 0x100000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 65) = v11;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x40000) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  char v12 = *((unsigned char *)a2 + 63);
  v3 |= 0x40000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 63) = v12;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  char v13 = *((unsigned char *)a2 + 60);
  v3 |= 0x8000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 60) = v13;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x4000) == 0)
  {
LABEL_15:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  char v14 = *((unsigned char *)a2 + 59);
  v3 |= 0x4000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 59) = v14;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x80000) == 0)
  {
LABEL_16:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v15 = *((unsigned char *)a2 + 64);
  v3 |= 0x80000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 64) = v15;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x10000) == 0)
  {
LABEL_17:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  char v16 = *((unsigned char *)a2 + 61);
  v3 |= 0x10000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 61) = v16;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x20000) == 0)
  {
LABEL_18:
    if ((v2 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v17 = *((unsigned char *)a2 + 62);
  v3 |= 0x20000u;
  *(_DWORD *)(this + 68) = v3;
  *(unsigned char *)(this + 62) = v17;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x400) == 0)
  {
LABEL_19:
    if ((v2 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v18 = *((_DWORD *)a2 + 13);
  v3 |= 0x400u;
  *(_DWORD *)(this + 68) = v3;
  *(_DWORD *)(this + 52) = v18;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x100) == 0)
  {
LABEL_20:
    if ((v2 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v19 = *((_DWORD *)a2 + 11);
  v3 |= 0x100u;
  *(_DWORD *)(this + 68) = v3;
  *(_DWORD *)(this + 44) = v19;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x20) == 0)
  {
LABEL_21:
    if ((v2 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v20 = *((_DWORD *)a2 + 8);
  v3 |= 0x20u;
  *(_DWORD *)(this + 68) = v3;
  *(_DWORD *)(this + 32) = v20;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x10) == 0)
  {
LABEL_22:
    if ((v2 & 0x200) == 0) {
      goto LABEL_23;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v21 = *((_DWORD *)a2 + 7);
  v3 |= 0x10u;
  *(_DWORD *)(this + 68) = v3;
  *(_DWORD *)(this + 28) = v21;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x200) == 0)
  {
LABEL_23:
    if ((v2 & 0x40) == 0) {
      goto LABEL_24;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v22 = *((_DWORD *)a2 + 12);
  v3 |= 0x200u;
  *(_DWORD *)(this + 68) = v3;
  *(_DWORD *)(this + 48) = v22;
  int v2 = *((_DWORD *)a2 + 17);
  if ((v2 & 0x40) == 0)
  {
LABEL_24:
    if ((v2 & 0x80) == 0) {
      return this;
    }
LABEL_44:
    int v24 = *((_DWORD *)a2 + 10);
    *(_DWORD *)(this + 68) = v3 | 0x80;
    *(_DWORD *)(this + 40) = v24;
    return this;
  }
LABEL_43:
  int v23 = *((_DWORD *)a2 + 9);
  v3 |= 0x40u;
  *(_DWORD *)(this + 68) = v3;
  *(_DWORD *)(this + 36) = v23;
  if ((*((_DWORD *)a2 + 17) & 0x80) != 0) {
    goto LABEL_44;
  }
  return this;
}

CMMsl *CMMsl::KappaHighSpeedCrashResult::operator=(CMMsl *a1, const CMMsl::KappaHighSpeedCrashResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaHighSpeedCrashResult::KappaHighSpeedCrashResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaHighSpeedCrashResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaHighSpeedCrashResult *a2, CMMsl::KappaHighSpeedCrashResult *a3)
{
  int v3 = *((_DWORD *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((_DWORD *)a2 + 17) = v3;
  int v4 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v4;
  int v5 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v5;
  float result = *((float *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((float *)a2 + 6) = result;
  uint64_t v7 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 56);
  *((unsigned char *)this + 56) = *((unsigned char *)a2 + 56);
  *((unsigned char *)a2 + 56) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 57);
  *((unsigned char *)this + 57) = *((unsigned char *)a2 + 57);
  *((unsigned char *)a2 + 57) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 58);
  *((unsigned char *)this + 58) = *((unsigned char *)a2 + 58);
  *((unsigned char *)a2 + 58) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 65);
  *((unsigned char *)this + 65) = *((unsigned char *)a2 + 65);
  *((unsigned char *)a2 + 65) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 63);
  *((unsigned char *)this + 63) = *((unsigned char *)a2 + 63);
  *((unsigned char *)a2 + 63) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 60);
  *((unsigned char *)this + 60) = *((unsigned char *)a2 + 60);
  *((unsigned char *)a2 + 60) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 59);
  *((unsigned char *)this + 59) = *((unsigned char *)a2 + 59);
  *((unsigned char *)a2 + 59) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 64);
  *((unsigned char *)this + 64) = *((unsigned char *)a2 + 64);
  *((unsigned char *)a2 + 64) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 61);
  *((unsigned char *)this + 61) = *((unsigned char *)a2 + 61);
  *((unsigned char *)a2 + 61) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 62);
  *((unsigned char *)this + 62) = *((unsigned char *)a2 + 62);
  *((unsigned char *)a2 + 62) = v7;
  LODWORD(v7) = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v7;
  LODWORD(v7) = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v7;
  LODWORD(v7) = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v7;
  LODWORD(v7) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v7;
  LODWORD(v7) = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v7;
  LODWORD(v7) = *((_DWORD *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((_DWORD *)a2 + 9) = v7;
  LODWORD(v7) = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v7;
  return result;
}

float CMMsl::KappaHighSpeedCrashResult::KappaHighSpeedCrashResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_2706428D8;
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a2 + 68) = 0;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  float result = *(float *)(a2 + 24);
  *(float *)(a1 + 24) = result;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 63) = *(unsigned char *)(a2 + 63);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  *(unsigned char *)(a1 + 62) = *(unsigned char *)(a2 + 62);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return result;
}

CMMsl *CMMsl::KappaHighSpeedCrashResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaHighSpeedCrashResult::KappaHighSpeedCrashResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaHighSpeedCrashResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaHighSpeedCrashResult::formatText(CMMsl::KappaHighSpeedCrashResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x800) != 0)
  {
    PB::TextFormatter::format(a2, "crashDetectorDecision");
    int v5 = *((_DWORD *)this + 17);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "detectorPostTriggerTimeOffsetWindow", *((float *)this + 4));
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(a2, "detectorPreTriggerTimeOffsetWindow", *((float *)this + 5));
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x1000) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(a2, "earlyCrashDetectorDecision");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(a2, "epochLatchingCount", *((float *)this + 6));
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x2000) == 0)
  {
LABEL_7:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(a2, "hasAudioInEpoch");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x4000) == 0)
  {
LABEL_8:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(a2, "isAudio");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x8000) == 0)
  {
LABEL_9:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(a2, "isBaro");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x10000) == 0)
  {
LABEL_10:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(a2, "isDescalationDecided");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x20000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(a2, "isDescalationRequired");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x40000) == 0)
  {
LABEL_12:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(a2, "isFreeFall");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x80000) == 0)
  {
LABEL_13:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(a2, "isGPS");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x100000) == 0)
  {
LABEL_14:
    if ((v5 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(a2, "isPulse");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x10) == 0)
  {
LABEL_15:
    if ((v5 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(a2, "latchedIsAudio");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x20) == 0)
  {
LABEL_16:
    if ((v5 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(a2, "latchedIsBaro");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x40) == 0)
  {
LABEL_17:
    if ((v5 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(a2, "latchedIsDescalationDecided");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x80) == 0)
  {
LABEL_18:
    if ((v5 & 0x100) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(a2, "latchedIsDescalationRequired");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x100) == 0)
  {
LABEL_19:
    if ((v5 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(a2, "latchedIsFreeFall");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x200) == 0)
  {
LABEL_20:
    if ((v5 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(a2, "latchedIsGPS");
  int v5 = *((_DWORD *)this + 17);
  if ((v5 & 0x400) == 0)
  {
LABEL_21:
    if ((v5 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_45:
  PB::TextFormatter::format(a2, "latchedIsPulse");
  if (*((_DWORD *)this + 17)) {
LABEL_22:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_23:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaHighSpeedCrashResult::readFrom(CMMsl::KappaHighSpeedCrashResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  for (int i = *((unsigned __int8 *)a2 + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)a2 + 24))
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_26;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
      int i = 1;
      *((unsigned char *)a2 + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_26:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v21 = v11 >> 3;
    if ((int)(v11 >> 3) > 200)
    {
      if ((v11 >> 3) <= 0xC8)
      {
        switch((int)v21)
        {
          case 301:
            *((_DWORD *)this + 17) |= 0x100000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v29 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v28 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v29 = v28 != 0;
            }
            *((unsigned char *)this + 65) = v29;
            break;
          case 302:
            *((_DWORD *)this + 17) |= 0x40000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v79 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v78 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v79 = v78 != 0;
            }
            *((unsigned char *)this + 63) = v79;
            break;
          case 303:
            *((_DWORD *)this + 17) |= 0x8000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v81 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v80 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v81 = v80 != 0;
            }
            *((unsigned char *)this + 60) = v81;
            break;
          case 304:
            *((_DWORD *)this + 17) |= 0x4000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v83 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v82 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v83 = v82 != 0;
            }
            *((unsigned char *)this + 59) = v83;
            break;
          case 305:
            *((_DWORD *)this + 17) |= 0x80000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v85 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v84 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v85 = v84 != 0;
            }
            *((unsigned char *)this + 64) = v85;
            break;
          case 306:
            *((_DWORD *)this + 17) |= 0x10000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v87 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v86 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v87 = v86 != 0;
            }
            *((unsigned char *)this + 61) = v87;
            break;
          case 307:
            *((_DWORD *)this + 17) |= 0x20000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v89 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v88 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v89 = v88 != 0;
            }
            *((unsigned char *)this + 62) = v89;
            break;
          default:
            JUMPOUT(0);
        }
      }
      else
      {
        switch((int)v21)
        {
          case 401:
            *((_DWORD *)this + 17) |= 0x400u;
            unint64_t v22 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v23 = *(void *)a2;
            if (v22 > 0xFFFFFFFFFFFFFFF5 || v22 + 10 > v2)
            {
              char v94 = 0;
              unsigned int v95 = 0;
              uint64_t v26 = 0;
              if (v2 <= v22) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v22)
                {
                  LODWORD(v26) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_211;
                }
                unint64_t v96 = v22++;
                char v97 = *(unsigned char *)(v23 + v96);
                *((void *)a2 + 1) = v22;
                v26 |= (unint64_t)(v97 & 0x7F) << v94;
                if ((v97 & 0x80) == 0) {
                  break;
                }
                v94 += 7;
                BOOL v14 = v95++ > 8;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  goto LABEL_210;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v26) = 0;
              }
LABEL_210:
              unint64_t v2 = v96 + 1;
            }
            else
            {
              char v24 = 0;
              unsigned int v25 = 0;
              uint64_t v26 = 0;
              while (1)
              {
                unint64_t v2 = v22 + 1;
                *((void *)a2 + 1) = v22 + 1;
                char v27 = *(unsigned char *)(v23 + v22);
                v26 |= (unint64_t)(v27 & 0x7F) << v24;
                if ((v27 & 0x80) == 0) {
                  break;
                }
                v24 += 7;
                unint64_t v22 = v2;
                BOOL v14 = v25++ > 8;
                if (v14)
                {
                  LODWORD(v26) = 0;
                  break;
                }
              }
            }
LABEL_211:
            *((_DWORD *)this + 13) = v26;
            break;
          case 402:
            *((_DWORD *)this + 17) |= 0x100u;
            unint64_t v42 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v43 = *(void *)a2;
            if (v42 > 0xFFFFFFFFFFFFFFF5 || v42 + 10 > v2)
            {
              char v98 = 0;
              unsigned int v99 = 0;
              uint64_t v46 = 0;
              if (v2 <= v42) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v42)
                {
                  LODWORD(v46) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_216;
                }
                unint64_t v100 = v42++;
                char v101 = *(unsigned char *)(v43 + v100);
                *((void *)a2 + 1) = v42;
                v46 |= (unint64_t)(v101 & 0x7F) << v98;
                if ((v101 & 0x80) == 0) {
                  break;
                }
                v98 += 7;
                BOOL v14 = v99++ > 8;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_215;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v46) = 0;
              }
LABEL_215:
              unint64_t v2 = v100 + 1;
            }
            else
            {
              char v44 = 0;
              unsigned int v45 = 0;
              uint64_t v46 = 0;
              while (1)
              {
                unint64_t v2 = v42 + 1;
                *((void *)a2 + 1) = v42 + 1;
                char v47 = *(unsigned char *)(v43 + v42);
                v46 |= (unint64_t)(v47 & 0x7F) << v44;
                if ((v47 & 0x80) == 0) {
                  break;
                }
                v44 += 7;
                unint64_t v42 = v2;
                BOOL v14 = v45++ > 8;
                if (v14)
                {
                  LODWORD(v46) = 0;
                  break;
                }
              }
            }
LABEL_216:
            *((_DWORD *)this + 11) = v46;
            break;
          case 403:
            *((_DWORD *)this + 17) |= 0x20u;
            unint64_t v48 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v49 = *(void *)a2;
            if (v48 > 0xFFFFFFFFFFFFFFF5 || v48 + 10 > v2)
            {
              char v102 = 0;
              unsigned int v103 = 0;
              uint64_t v52 = 0;
              if (v2 <= v48) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v48)
                {
                  LODWORD(v52) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_221;
                }
                unint64_t v104 = v48++;
                char v105 = *(unsigned char *)(v49 + v104);
                *((void *)a2 + 1) = v48;
                v52 |= (unint64_t)(v105 & 0x7F) << v102;
                if ((v105 & 0x80) == 0) {
                  break;
                }
                v102 += 7;
                BOOL v14 = v103++ > 8;
                if (v14)
                {
                  LODWORD(v52) = 0;
                  goto LABEL_220;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v52) = 0;
              }
LABEL_220:
              unint64_t v2 = v104 + 1;
            }
            else
            {
              char v50 = 0;
              unsigned int v51 = 0;
              uint64_t v52 = 0;
              while (1)
              {
                unint64_t v2 = v48 + 1;
                *((void *)a2 + 1) = v48 + 1;
                char v53 = *(unsigned char *)(v49 + v48);
                v52 |= (unint64_t)(v53 & 0x7F) << v50;
                if ((v53 & 0x80) == 0) {
                  break;
                }
                v50 += 7;
                unint64_t v48 = v2;
                BOOL v14 = v51++ > 8;
                if (v14)
                {
                  LODWORD(v52) = 0;
                  break;
                }
              }
            }
LABEL_221:
            *((_DWORD *)this + 8) = v52;
            break;
          case 404:
            *((_DWORD *)this + 17) |= 0x10u;
            unint64_t v54 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v55 = *(void *)a2;
            if (v54 > 0xFFFFFFFFFFFFFFF5 || v54 + 10 > v2)
            {
              char v106 = 0;
              unsigned int v107 = 0;
              uint64_t v58 = 0;
              if (v2 <= v54) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v54)
                {
                  LODWORD(v58) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_226;
                }
                unint64_t v108 = v54++;
                char v109 = *(unsigned char *)(v55 + v108);
                *((void *)a2 + 1) = v54;
                v58 |= (unint64_t)(v109 & 0x7F) << v106;
                if ((v109 & 0x80) == 0) {
                  break;
                }
                v106 += 7;
                BOOL v14 = v107++ > 8;
                if (v14)
                {
                  LODWORD(v58) = 0;
                  goto LABEL_225;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v58) = 0;
              }
LABEL_225:
              unint64_t v2 = v108 + 1;
            }
            else
            {
              char v56 = 0;
              unsigned int v57 = 0;
              uint64_t v58 = 0;
              while (1)
              {
                unint64_t v2 = v54 + 1;
                *((void *)a2 + 1) = v54 + 1;
                char v59 = *(unsigned char *)(v55 + v54);
                v58 |= (unint64_t)(v59 & 0x7F) << v56;
                if ((v59 & 0x80) == 0) {
                  break;
                }
                v56 += 7;
                unint64_t v54 = v2;
                BOOL v14 = v57++ > 8;
                if (v14)
                {
                  LODWORD(v58) = 0;
                  break;
                }
              }
            }
LABEL_226:
            *((_DWORD *)this + 7) = v58;
            break;
          case 405:
            *((_DWORD *)this + 17) |= 0x200u;
            unint64_t v60 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v61 = *(void *)a2;
            if (v60 > 0xFFFFFFFFFFFFFFF5 || v60 + 10 > v2)
            {
              char v110 = 0;
              unsigned int v111 = 0;
              uint64_t v64 = 0;
              if (v2 <= v60) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v60)
                {
                  LODWORD(v64) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_231;
                }
                unint64_t v112 = v60++;
                char v113 = *(unsigned char *)(v61 + v112);
                *((void *)a2 + 1) = v60;
                v64 |= (unint64_t)(v113 & 0x7F) << v110;
                if ((v113 & 0x80) == 0) {
                  break;
                }
                v110 += 7;
                BOOL v14 = v111++ > 8;
                if (v14)
                {
                  LODWORD(v64) = 0;
                  goto LABEL_230;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v64) = 0;
              }
LABEL_230:
              unint64_t v2 = v112 + 1;
            }
            else
            {
              char v62 = 0;
              unsigned int v63 = 0;
              uint64_t v64 = 0;
              while (1)
              {
                unint64_t v2 = v60 + 1;
                *((void *)a2 + 1) = v60 + 1;
                char v65 = *(unsigned char *)(v61 + v60);
                v64 |= (unint64_t)(v65 & 0x7F) << v62;
                if ((v65 & 0x80) == 0) {
                  break;
                }
                v62 += 7;
                unint64_t v60 = v2;
                BOOL v14 = v63++ > 8;
                if (v14)
                {
                  LODWORD(v64) = 0;
                  break;
                }
              }
            }
LABEL_231:
            *((_DWORD *)this + 12) = v64;
            break;
          case 406:
            *((_DWORD *)this + 17) |= 0x40u;
            unint64_t v66 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v67 = *(void *)a2;
            if (v66 > 0xFFFFFFFFFFFFFFF5 || v66 + 10 > v2)
            {
              char v114 = 0;
              unsigned int v115 = 0;
              uint64_t v70 = 0;
              if (v2 <= v66) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v66)
                {
                  LODWORD(v70) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_236;
                }
                unint64_t v116 = v66++;
                char v117 = *(unsigned char *)(v67 + v116);
                *((void *)a2 + 1) = v66;
                v70 |= (unint64_t)(v117 & 0x7F) << v114;
                if ((v117 & 0x80) == 0) {
                  break;
                }
                v114 += 7;
                BOOL v14 = v115++ > 8;
                if (v14)
                {
                  LODWORD(v70) = 0;
                  goto LABEL_235;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v70) = 0;
              }
LABEL_235:
              unint64_t v2 = v116 + 1;
            }
            else
            {
              char v68 = 0;
              unsigned int v69 = 0;
              uint64_t v70 = 0;
              while (1)
              {
                unint64_t v2 = v66 + 1;
                *((void *)a2 + 1) = v66 + 1;
                char v71 = *(unsigned char *)(v67 + v66);
                v70 |= (unint64_t)(v71 & 0x7F) << v68;
                if ((v71 & 0x80) == 0) {
                  break;
                }
                v68 += 7;
                unint64_t v66 = v2;
                BOOL v14 = v69++ > 8;
                if (v14)
                {
                  LODWORD(v70) = 0;
                  break;
                }
              }
            }
LABEL_236:
            *((_DWORD *)this + 9) = v70;
            break;
          case 407:
            *((_DWORD *)this + 17) |= 0x80u;
            unint64_t v72 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v73 = *(void *)a2;
            if (v72 > 0xFFFFFFFFFFFFFFF5 || v72 + 10 > v2)
            {
              char v118 = 0;
              unsigned int v119 = 0;
              uint64_t v76 = 0;
              if (v2 <= v72) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v72)
                {
                  LODWORD(v76) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_241;
                }
                unint64_t v120 = v72++;
                char v121 = *(unsigned char *)(v73 + v120);
                *((void *)a2 + 1) = v72;
                v76 |= (unint64_t)(v121 & 0x7F) << v118;
                if ((v121 & 0x80) == 0) {
                  break;
                }
                v118 += 7;
                BOOL v14 = v119++ > 8;
                if (v14)
                {
                  LODWORD(v76) = 0;
                  goto LABEL_240;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v76) = 0;
              }
LABEL_240:
              unint64_t v2 = v120 + 1;
            }
            else
            {
              char v74 = 0;
              unsigned int v75 = 0;
              uint64_t v76 = 0;
              while (1)
              {
                unint64_t v2 = v72 + 1;
                *((void *)a2 + 1) = v72 + 1;
                char v77 = *(unsigned char *)(v73 + v72);
                v76 |= (unint64_t)(v77 & 0x7F) << v74;
                if ((v77 & 0x80) == 0) {
                  break;
                }
                v74 += 7;
                unint64_t v72 = v2;
                BOOL v14 = v75++ > 8;
                if (v14)
                {
                  LODWORD(v76) = 0;
                  break;
                }
              }
            }
LABEL_241:
            *((_DWORD *)this + 10) = v76;
            break;
          default:
            if (v21 != 201) {
              goto LABEL_19;
            }
            *((_DWORD *)this + 17) |= 0x2000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v33 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v32 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v33 = v32 != 0;
            }
            *((unsigned char *)this + 58) = v33;
            break;
        }
      }
      goto LABEL_21;
    }
    if ((int)v21 > 100)
    {
      switch(v21)
      {
        case 'e':
          *((_DWORD *)this + 17) |= 1u;
          unint64_t v34 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v35 = *(void *)a2;
          if (v34 > 0xFFFFFFFFFFFFFFF5 || v34 + 10 > v2)
          {
            char v90 = 0;
            unsigned int v91 = 0;
            uint64_t v38 = 0;
            if (v2 <= v34) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v34)
              {
                uint64_t v38 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_206;
              }
              unint64_t v92 = v34++;
              char v93 = *(unsigned char *)(v35 + v92);
              *((void *)a2 + 1) = v34;
              v38 |= (unint64_t)(v93 & 0x7F) << v90;
              if ((v93 & 0x80) == 0) {
                break;
              }
              v90 += 7;
              BOOL v14 = v91++ > 8;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_205;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v38 = 0;
            }
LABEL_205:
            unint64_t v2 = v92 + 1;
          }
          else
          {
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            while (1)
            {
              unint64_t v2 = v34 + 1;
              *((void *)a2 + 1) = v34 + 1;
              char v39 = *(unsigned char *)(v35 + v34);
              v38 |= (unint64_t)(v39 & 0x7F) << v36;
              if ((v39 & 0x80) == 0) {
                break;
              }
              v36 += 7;
              unint64_t v34 = v2;
              BOOL v14 = v37++ > 8;
              if (v14)
              {
                uint64_t v38 = 0;
                break;
              }
            }
          }
LABEL_206:
          *((void *)this + 1) = v38;
          break;
        case 'f':
          *((_DWORD *)this + 17) |= 0x800u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 >= *((void *)a2 + 2))
          {
            BOOL v41 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v40 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v41 = v40 != 0;
          }
          *((unsigned char *)this + 56) = v41;
          break;
        case 'g':
          *((_DWORD *)this + 17) |= 0x1000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 >= *((void *)a2 + 2))
          {
            BOOL v31 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v30 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v31 = v30 != 0;
          }
          *((unsigned char *)this + 57) = v31;
          break;
        default:
LABEL_19:
          uint64_t result = PB::Reader::skip(a2);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)a2 + 1);
          break;
      }
    }
    else
    {
      switch(v21)
      {
        case 1:
          *((_DWORD *)this + 17) |= 4u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
          {
            *((_DWORD *)this + 5) = *(_DWORD *)(*(void *)a2 + v2);
            goto LABEL_201;
          }
          break;
        case 2:
          *((_DWORD *)this + 17) |= 2u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
          {
            *((_DWORD *)this + 4) = *(_DWORD *)(*(void *)a2 + v2);
            goto LABEL_201;
          }
          break;
        case 3:
          *((_DWORD *)this + 17) |= 8u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
          {
            *((_DWORD *)this + 6) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_201:
            unint64_t v2 = *((void *)a2 + 1) + 4;
            *((void *)a2 + 1) = v2;
            goto LABEL_21;
          }
          break;
        default:
          goto LABEL_19;
      }
      *((unsigned char *)a2 + 24) = 1;
    }
LABEL_21:
    unint64_t v3 = *((void *)a2 + 2);
  }
  return i == 0;
}

uint64_t CMMsl::KappaHighSpeedCrashResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 68);
  if ((v4 & 4) != 0)
  {
    this = PB::Writer::write(a2, *(float *)(this + 20));
    int v4 = *(_DWORD *)(v3 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 16));
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = PB::Writer::write(a2, *(float *)(v3 + 24));
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 1) == 0)
  {
LABEL_5:
    if ((v4 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x800) == 0)
  {
LABEL_6:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x1000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x100000) == 0)
  {
LABEL_9:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x40000) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x4000) == 0)
  {
LABEL_12:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x80000) == 0)
  {
LABEL_13:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x10000) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x20000) == 0)
  {
LABEL_15:
    if ((v4 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x100) == 0)
  {
LABEL_17:
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x20) == 0)
  {
LABEL_18:
    if ((v4 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x10) == 0)
  {
LABEL_19:
    if ((v4 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x200) == 0)
  {
LABEL_20:
    if ((v4 & 0x40) == 0) {
      goto LABEL_21;
    }
LABEL_42:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_DWORD *)(v3 + 68) & 0x80) == 0) {
      return this;
    }
    goto LABEL_43;
  }
LABEL_41:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 68);
  if ((v4 & 0x40) != 0) {
    goto LABEL_42;
  }
LABEL_21:
  if ((v4 & 0x80) == 0) {
    return this;
  }
LABEL_43:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaHighSpeedCrashResult::hash_value(CMMsl::KappaHighSpeedCrashResult *this)
{
  int v1 = *((_DWORD *)this + 17);
  if ((v1 & 4) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_3;
    }
LABEL_30:
    uint64_t v4 = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_6;
    }
LABEL_31:
    uint64_t v6 = 0;
    if (v1) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
  float v25 = *((float *)this + 5);
  uint64_t v2 = LODWORD(v25);
  if (v25 == 0.0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_30;
  }
LABEL_3:
  float v3 = *((float *)this + 4);
  uint64_t v4 = LODWORD(v3);
  if (v3 == 0.0) {
    uint64_t v4 = 0;
  }
  if ((v1 & 8) == 0) {
    goto LABEL_31;
  }
LABEL_6:
  float v5 = *((float *)this + 6);
  uint64_t v6 = LODWORD(v5);
  if (v5 == 0.0) {
    uint64_t v6 = 0;
  }
  if (v1)
  {
LABEL_9:
    uint64_t v7 = *((void *)this + 1);
    if ((v1 & 0x800) != 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v7 = 0;
  if ((v1 & 0x800) != 0)
  {
LABEL_10:
    uint64_t v8 = *((unsigned __int8 *)this + 56);
    if ((v1 & 0x1000) != 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v8 = 0;
  if ((v1 & 0x1000) != 0)
  {
LABEL_11:
    uint64_t v9 = *((unsigned __int8 *)this + 57);
    if ((v1 & 0x2000) != 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v9 = 0;
  if ((v1 & 0x2000) != 0)
  {
LABEL_12:
    uint64_t v10 = *((unsigned __int8 *)this + 58);
    if ((v1 & 0x100000) != 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v10 = 0;
  if ((v1 & 0x100000) != 0)
  {
LABEL_13:
    uint64_t v11 = *((unsigned __int8 *)this + 65);
    if ((v1 & 0x40000) != 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v11 = 0;
  if ((v1 & 0x40000) != 0)
  {
LABEL_14:
    uint64_t v12 = *((unsigned __int8 *)this + 63);
    if ((v1 & 0x8000) != 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v12 = 0;
  if ((v1 & 0x8000) != 0)
  {
LABEL_15:
    uint64_t v13 = *((unsigned __int8 *)this + 60);
    if ((v1 & 0x4000) != 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v13 = 0;
  if ((v1 & 0x4000) != 0)
  {
LABEL_16:
    uint64_t v14 = *((unsigned __int8 *)this + 59);
    if ((v1 & 0x80000) != 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v14 = 0;
  if ((v1 & 0x80000) != 0)
  {
LABEL_17:
    uint64_t v15 = *((unsigned __int8 *)this + 64);
    if ((v1 & 0x10000) != 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v15 = 0;
  if ((v1 & 0x10000) != 0)
  {
LABEL_18:
    uint64_t v16 = *((unsigned __int8 *)this + 61);
    if ((v1 & 0x20000) != 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v16 = 0;
  if ((v1 & 0x20000) != 0)
  {
LABEL_19:
    uint64_t v17 = *((unsigned __int8 *)this + 62);
    if ((v1 & 0x400) != 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v17 = 0;
  if ((v1 & 0x400) != 0)
  {
LABEL_20:
    uint64_t v18 = *((unsigned int *)this + 13);
    if ((v1 & 0x100) != 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v18 = 0;
  if ((v1 & 0x100) != 0)
  {
LABEL_21:
    uint64_t v19 = *((unsigned int *)this + 11);
    if ((v1 & 0x20) != 0) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v19 = 0;
  if ((v1 & 0x20) != 0)
  {
LABEL_22:
    uint64_t v20 = *((unsigned int *)this + 8);
    if ((v1 & 0x10) != 0) {
      goto LABEL_23;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v20 = 0;
  if ((v1 & 0x10) != 0)
  {
LABEL_23:
    uint64_t v21 = *((unsigned int *)this + 7);
    if ((v1 & 0x200) != 0) {
      goto LABEL_24;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v21 = 0;
  if ((v1 & 0x200) != 0)
  {
LABEL_24:
    uint64_t v22 = *((unsigned int *)this + 12);
    if ((v1 & 0x40) != 0) {
      goto LABEL_25;
    }
LABEL_48:
    uint64_t v23 = 0;
    if ((v1 & 0x80) != 0) {
      goto LABEL_26;
    }
LABEL_49:
    uint64_t v24 = 0;
    return v4 ^ v2 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v19 ^ v20 ^ v21 ^ v22 ^ v23 ^ v24;
  }
LABEL_47:
  uint64_t v22 = 0;
  if ((v1 & 0x40) == 0) {
    goto LABEL_48;
  }
LABEL_25:
  uint64_t v23 = *((unsigned int *)this + 9);
  if ((v1 & 0x80) == 0) {
    goto LABEL_49;
  }
LABEL_26:
  uint64_t v24 = *((unsigned int *)this + 10);
  return v4 ^ v2 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v19 ^ v20 ^ v21 ^ v22 ^ v23 ^ v24;
}

void CMMsl::KappaLackOfMotionResult::~KappaLackOfMotionResult(CMMsl::KappaLackOfMotionResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaLackOfMotionResult::KappaLackOfMotionResult(uint64_t this, const CMMsl::KappaLackOfMotionResult *a2)
{
  *(void *)this = &unk_270642910;
  *(_DWORD *)(this + 92) = 0;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x200) != 0)
  {
    int v4 = *((_DWORD *)a2 + 15);
    int v3 = 512;
    *(_DWORD *)(this + 92) = 512;
    *(_DWORD *)(this + 60) = v4;
    int v2 = *((_DWORD *)a2 + 23);
    if ((v2 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 0x4000) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 20);
    v3 |= 0x4000u;
    *(_DWORD *)(this + 92) = v3;
    *(_DWORD *)(this + 80) = v5;
    int v2 = *((_DWORD *)a2 + 23);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *((_DWORD *)a2 + 16);
    v3 |= 0x400u;
    *(_DWORD *)(this + 92) = v3;
    *(_DWORD *)(this + 64) = v6;
    int v2 = *((_DWORD *)a2 + 23);
    if ((v2 & 0x8000) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x8000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 21);
  v3 |= 0x8000u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 84) = v7;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v8 = *((void *)a2 + 3);
  v3 |= 4u;
  *(_DWORD *)(this + 92) = v3;
  *(void *)(this + 24) = v8;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 8) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v9 = *((void *)a2 + 4);
  v3 |= 8u;
  *(_DWORD *)(this + 92) = v3;
  *(void *)(this + 32) = v9;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v10 = *((_DWORD *)a2 + 19);
  v3 |= 0x2000u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 76) = v10;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *((_DWORD *)a2 + 14);
  v3 |= 0x100u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 56) = v11;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x40000) == 0)
  {
LABEL_13:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  char v12 = *((unsigned char *)a2 + 90);
  v3 |= 0x40000u;
  *(_DWORD *)(this + 92) = v3;
  *(unsigned char *)(this + 90) = v12;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x20000) == 0)
  {
LABEL_14:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v13 = *((unsigned char *)a2 + 89);
  v3 |= 0x20000u;
  *(_DWORD *)(this + 92) = v3;
  *(unsigned char *)(this + 89) = v13;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x1000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v14 = *((_DWORD *)a2 + 18);
  v3 |= 0x1000u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 72) = v14;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v15 = *((_DWORD *)a2 + 17);
  v3 |= 0x800u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 68) = v15;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 2) == 0)
  {
LABEL_17:
    if ((v2 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v16 = *((void *)a2 + 2);
  v3 |= 2u;
  *(_DWORD *)(this + 92) = v3;
  *(void *)(this + 16) = v16;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 1) == 0)
  {
LABEL_18:
    if ((v2 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v17 = *((void *)a2 + 1);
  v3 |= 1u;
  *(_DWORD *)(this + 92) = v3;
  *(void *)(this + 8) = v17;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x10) == 0)
  {
LABEL_19:
    if ((v2 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v18 = *((_DWORD *)a2 + 10);
  v3 |= 0x10u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 40) = v18;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x40) == 0)
  {
LABEL_20:
    if ((v2 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v19 = *((_DWORD *)a2 + 12);
  v3 |= 0x40u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 48) = v19;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x80) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v20 = *((_DWORD *)a2 + 13);
  v3 |= 0x80u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 52) = v20;
  int v2 = *((_DWORD *)a2 + 23);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000) == 0) {
      return this;
    }
LABEL_40:
    char v22 = *((unsigned char *)a2 + 88);
    *(_DWORD *)(this + 92) = v3 | 0x10000;
    *(unsigned char *)(this + 88) = v22;
    return this;
  }
LABEL_39:
  int v21 = *((_DWORD *)a2 + 11);
  v3 |= 0x20u;
  *(_DWORD *)(this + 92) = v3;
  *(_DWORD *)(this + 44) = v21;
  if ((*((_DWORD *)a2 + 23) & 0x10000) != 0) {
    goto LABEL_40;
  }
  return this;
}

CMMsl *CMMsl::KappaLackOfMotionResult::operator=(CMMsl *a1, const CMMsl::KappaLackOfMotionResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaLackOfMotionResult::KappaLackOfMotionResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaLackOfMotionResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaLackOfMotionResult *a2, CMMsl::KappaLackOfMotionResult *a3)
{
  int v3 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v3;
  int v4 = *((_DWORD *)this + 15);
  *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = v4;
  int v5 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v5;
  int v6 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v6;
  int v7 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v7;
  uint64_t v8 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v8;
  uint64_t v9 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v9;
  LODWORD(v9) = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v9;
  LODWORD(v9) = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v9;
  LOBYTE(v9) = *((unsigned char *)this + 90);
  *((unsigned char *)this + 90) = *((unsigned char *)a2 + 90);
  *((unsigned char *)a2 + 90) = v9;
  LOBYTE(v9) = *((unsigned char *)this + 89);
  *((unsigned char *)this + 89) = *((unsigned char *)a2 + 89);
  *((unsigned char *)a2 + 89) = v9;
  LODWORD(v9) = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v9;
  LODWORD(v9) = *((_DWORD *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((_DWORD *)a2 + 17) = v9;
  uint64_t v10 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v10;
  uint64_t v11 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v11;
  int v12 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v12;
  int v13 = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v13;
  int v14 = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v14;
  float result = *((float *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((float *)a2 + 11) = result;
  LOBYTE(v11) = *((unsigned char *)this + 88);
  *((unsigned char *)this + 88) = *((unsigned char *)a2 + 88);
  *((unsigned char *)a2 + 88) = v11;
  return result;
}

float CMMsl::KappaLackOfMotionResult::KappaLackOfMotionResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642910;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a2 + 92) = 0;
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  float result = *(float *)(a2 + 44);
  *(float *)(a1 + 44) = result;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return result;
}

CMMsl *CMMsl::KappaLackOfMotionResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaLackOfMotionResult::KappaLackOfMotionResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaLackOfMotionResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaLackOfMotionResult::formatText(CMMsl::KappaLackOfMotionResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = *((_DWORD *)this + 23);
  if (v5)
  {
    PB::TextFormatter::format(a2, "gpsDeltaTimestamp");
    int v5 = *((_DWORD *)this + 23);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "gpsDeltaTimestampSeconds", *((float *)this + 10));
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(a2, "gpsIsRealSample", *((float *)this + 11));
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x40) == 0)
  {
LABEL_5:
    if ((v5 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(a2, "gpsSpeedMetersPerSecond", *((float *)this + 12));
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x80) == 0)
  {
LABEL_6:
    if ((v5 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(a2, "gpsSpeedMilesPerHour", *((float *)this + 13));
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 2) == 0)
  {
LABEL_7:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(a2, "gpsTimestamp");
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x10000) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(a2, "loggedAtEpoch");
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x100) == 0)
  {
LABEL_9:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(a2, "movingGpsCount");
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x20000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(a2, "movingGpsCountResetRequired");
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(a2, "movingSpeedMetersPerSecondThreshold", *((float *)this + 15));
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(a2, "movingSpeedMetersPerSecondThresholdFromSydneyB", *((float *)this + 16));
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(a2, "numLowOrFakeSamplesInHistory");
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(a2, "numSamplesInHistory");
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(a2, "staticGpsCount");
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x40000) == 0)
  {
LABEL_16:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(a2, "staticGpsCountResetRequired");
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x4000) == 0)
  {
LABEL_17:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(a2, "staticSpeedMetersPerSecondThreshold", *((float *)this + 20));
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x8000) == 0)
  {
LABEL_18:
    if ((v5 & 4) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(a2, "staticSpeedMetersPerSecondThresholdFromSydneyB", *((float *)this + 21));
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 4) == 0)
  {
LABEL_19:
    if ((v5 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_41:
  PB::TextFormatter::format(a2, "timestamp");
  if ((*((_DWORD *)this + 23) & 8) != 0) {
LABEL_20:
  }
    PB::TextFormatter::format(a2, "triggerTimestamp");
LABEL_21:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaLackOfMotionResult::readFrom(CMMsl::KappaLackOfMotionResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_216;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    unint64_t v20 = v11 >> 3;
    if ((v11 & 7) <= 4)
    {
      switch((v11 >> 3))
      {
        case 'e':
          *((_DWORD *)this + 23) |= 4u;
          unint64_t v27 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v28 = *(void *)a2;
          if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
          {
            char v79 = 0;
            unsigned int v80 = 0;
            uint64_t v31 = 0;
            if (v2 <= v27) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v27)
              {
                uint64_t v31 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_185;
              }
              unint64_t v81 = v27++;
              char v82 = *(unsigned char *)(v28 + v81);
              *((void *)a2 + 1) = v27;
              v31 |= (unint64_t)(v82 & 0x7F) << v79;
              if ((v82 & 0x80) == 0) {
                break;
              }
              v79 += 7;
              BOOL v14 = v80++ > 8;
              if (v14)
              {
                uint64_t v31 = 0;
LABEL_184:
                unint64_t v2 = v81 + 1;
                goto LABEL_185;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v31 = 0;
            }
            goto LABEL_184;
          }
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          do
          {
            unint64_t v2 = v27 + 1;
            *((void *)a2 + 1) = v27 + 1;
            char v32 = *(unsigned char *)(v28 + v27);
            v31 |= (unint64_t)(v32 & 0x7F) << v29;
            if ((v32 & 0x80) == 0) {
              goto LABEL_185;
            }
            v29 += 7;
            unint64_t v27 = v2;
            BOOL v14 = v30++ > 8;
          }
          while (!v14);
          uint64_t v31 = 0;
LABEL_185:
          *((void *)this + 3) = v31;
          break;
        case 'f':
          *((_DWORD *)this + 23) |= 8u;
          unint64_t v41 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v42 = *(void *)a2;
          if (v41 > 0xFFFFFFFFFFFFFFF5 || v41 + 10 > v2)
          {
            char v87 = 0;
            unsigned int v88 = 0;
            uint64_t v45 = 0;
            if (v2 <= v41) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v41)
              {
                uint64_t v45 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_195;
              }
              unint64_t v89 = v41++;
              char v90 = *(unsigned char *)(v42 + v89);
              *((void *)a2 + 1) = v41;
              v45 |= (unint64_t)(v90 & 0x7F) << v87;
              if ((v90 & 0x80) == 0) {
                break;
              }
              v87 += 7;
              BOOL v14 = v88++ > 8;
              if (v14)
              {
                uint64_t v45 = 0;
LABEL_194:
                unint64_t v2 = v89 + 1;
                goto LABEL_195;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v45 = 0;
            }
            goto LABEL_194;
          }
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v45 = 0;
          do
          {
            unint64_t v2 = v41 + 1;
            *((void *)a2 + 1) = v41 + 1;
            char v46 = *(unsigned char *)(v42 + v41);
            v45 |= (unint64_t)(v46 & 0x7F) << v43;
            if ((v46 & 0x80) == 0) {
              goto LABEL_195;
            }
            v43 += 7;
            unint64_t v41 = v2;
            BOOL v14 = v44++ > 8;
          }
          while (!v14);
          uint64_t v45 = 0;
LABEL_195:
          *((void *)this + 4) = v45;
          break;
        case 'g':
          *((_DWORD *)this + 23) |= 0x2000u;
          unint64_t v47 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v48 = *(void *)a2;
          if (v47 > 0xFFFFFFFFFFFFFFF5 || v47 + 10 > v2)
          {
            char v91 = 0;
            unsigned int v92 = 0;
            uint64_t v51 = 0;
            if (v2 <= v47) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v47)
              {
                LODWORD(v51) = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_200;
              }
              unint64_t v93 = v47++;
              char v94 = *(unsigned char *)(v48 + v93);
              *((void *)a2 + 1) = v47;
              v51 |= (unint64_t)(v94 & 0x7F) << v91;
              if ((v94 & 0x80) == 0) {
                break;
              }
              v91 += 7;
              BOOL v14 = v92++ > 8;
              if (v14)
              {
                LODWORD(v51) = 0;
LABEL_199:
                unint64_t v2 = v93 + 1;
                goto LABEL_200;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v51) = 0;
            }
            goto LABEL_199;
          }
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v51 = 0;
          do
          {
            unint64_t v2 = v47 + 1;
            *((void *)a2 + 1) = v47 + 1;
            char v52 = *(unsigned char *)(v48 + v47);
            v51 |= (unint64_t)(v52 & 0x7F) << v49;
            if ((v52 & 0x80) == 0) {
              goto LABEL_200;
            }
            v49 += 7;
            unint64_t v47 = v2;
            BOOL v14 = v50++ > 8;
          }
          while (!v14);
          LODWORD(v51) = 0;
LABEL_200:
          *((_DWORD *)this + 19) = v51;
          break;
        case 'h':
          *((_DWORD *)this + 23) |= 0x100u;
          unint64_t v53 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v54 = *(void *)a2;
          if (v53 > 0xFFFFFFFFFFFFFFF5 || v53 + 10 > v2)
          {
            char v95 = 0;
            unsigned int v96 = 0;
            uint64_t v57 = 0;
            if (v2 <= v53) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v53)
              {
                LODWORD(v57) = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_205;
              }
              unint64_t v97 = v53++;
              char v98 = *(unsigned char *)(v54 + v97);
              *((void *)a2 + 1) = v53;
              v57 |= (unint64_t)(v98 & 0x7F) << v95;
              if ((v98 & 0x80) == 0) {
                break;
              }
              v95 += 7;
              BOOL v14 = v96++ > 8;
              if (v14)
              {
                LODWORD(v57) = 0;
LABEL_204:
                unint64_t v2 = v97 + 1;
                goto LABEL_205;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v57) = 0;
            }
            goto LABEL_204;
          }
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v57 = 0;
          do
          {
            unint64_t v2 = v53 + 1;
            *((void *)a2 + 1) = v53 + 1;
            char v58 = *(unsigned char *)(v54 + v53);
            v57 |= (unint64_t)(v58 & 0x7F) << v55;
            if ((v58 & 0x80) == 0) {
              goto LABEL_205;
            }
            v55 += 7;
            unint64_t v53 = v2;
            BOOL v14 = v56++ > 8;
          }
          while (!v14);
          LODWORD(v57) = 0;
LABEL_205:
          *((_DWORD *)this + 14) = v57;
          break;
        case 'i':
          *((_DWORD *)this + 23) |= 0x40000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 >= *((void *)a2 + 2))
          {
            BOOL v60 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v59 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v60 = v59 != 0;
          }
          *((unsigned char *)this + 90) = v60;
          break;
        case 'j':
          *((_DWORD *)this + 23) |= 0x20000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 >= *((void *)a2 + 2))
          {
            BOOL v62 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v61 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v62 = v61 != 0;
          }
          *((unsigned char *)this + 89) = v62;
          break;
        case 'k':
          *((_DWORD *)this + 23) |= 0x1000u;
          unint64_t v63 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v64 = *(void *)a2;
          if (v63 > 0xFFFFFFFFFFFFFFF5 || v63 + 10 > v2)
          {
            char v99 = 0;
            unsigned int v100 = 0;
            uint64_t v67 = 0;
            if (v2 <= v63) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v63)
              {
                LODWORD(v67) = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_210;
              }
              unint64_t v101 = v63++;
              char v102 = *(unsigned char *)(v64 + v101);
              *((void *)a2 + 1) = v63;
              v67 |= (unint64_t)(v102 & 0x7F) << v99;
              if ((v102 & 0x80) == 0) {
                break;
              }
              v99 += 7;
              BOOL v14 = v100++ > 8;
              if (v14)
              {
                LODWORD(v67) = 0;
LABEL_209:
                unint64_t v2 = v101 + 1;
                goto LABEL_210;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v67) = 0;
            }
            goto LABEL_209;
          }
          char v65 = 0;
          unsigned int v66 = 0;
          uint64_t v67 = 0;
          do
          {
            unint64_t v2 = v63 + 1;
            *((void *)a2 + 1) = v63 + 1;
            char v68 = *(unsigned char *)(v64 + v63);
            v67 |= (unint64_t)(v68 & 0x7F) << v65;
            if ((v68 & 0x80) == 0) {
              goto LABEL_210;
            }
            v65 += 7;
            unint64_t v63 = v2;
            BOOL v14 = v66++ > 8;
          }
          while (!v14);
          LODWORD(v67) = 0;
LABEL_210:
          *((_DWORD *)this + 18) = v67;
          break;
        case 'l':
          *((_DWORD *)this + 23) |= 0x800u;
          unint64_t v69 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v70 = *(void *)a2;
          if (v69 > 0xFFFFFFFFFFFFFFF5 || v69 + 10 > v2)
          {
            char v103 = 0;
            unsigned int v104 = 0;
            uint64_t v73 = 0;
            if (v2 <= v69) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v69)
              {
                LODWORD(v73) = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_215;
              }
              unint64_t v105 = v69++;
              char v106 = *(unsigned char *)(v70 + v105);
              *((void *)a2 + 1) = v69;
              v73 |= (unint64_t)(v106 & 0x7F) << v103;
              if ((v106 & 0x80) == 0) {
                break;
              }
              v103 += 7;
              BOOL v14 = v104++ > 8;
              if (v14)
              {
                LODWORD(v73) = 0;
LABEL_214:
                unint64_t v2 = v105 + 1;
                goto LABEL_215;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v73) = 0;
            }
            goto LABEL_214;
          }
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v73 = 0;
          do
          {
            unint64_t v2 = v69 + 1;
            *((void *)a2 + 1) = v69 + 1;
            char v74 = *(unsigned char *)(v70 + v69);
            v73 |= (unint64_t)(v74 & 0x7F) << v71;
            if ((v74 & 0x80) == 0) {
              goto LABEL_215;
            }
            v71 += 7;
            unint64_t v69 = v2;
            BOOL v14 = v72++ > 8;
          }
          while (!v14);
          LODWORD(v73) = 0;
LABEL_215:
          *((_DWORD *)this + 17) = v73;
          break;
        default:
          JUMPOUT(0);
      }
    }
    else
    {
      switch((int)v20)
      {
        case 201:
          *((_DWORD *)this + 23) |= 2u;
          unint64_t v21 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v22 = *(void *)a2;
          if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
          {
            char v75 = 0;
            unsigned int v76 = 0;
            uint64_t v25 = 0;
            if (v2 <= v21) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v21)
              {
                uint64_t v25 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_180;
              }
              unint64_t v77 = v21++;
              char v78 = *(unsigned char *)(v22 + v77);
              *((void *)a2 + 1) = v21;
              v25 |= (unint64_t)(v78 & 0x7F) << v75;
              if ((v78 & 0x80) == 0) {
                break;
              }
              v75 += 7;
              BOOL v14 = v76++ > 8;
              if (v14)
              {
                uint64_t v25 = 0;
LABEL_179:
                unint64_t v2 = v77 + 1;
                goto LABEL_180;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v25 = 0;
            }
            goto LABEL_179;
          }
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          do
          {
            unint64_t v2 = v21 + 1;
            *((void *)a2 + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              goto LABEL_180;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
          }
          while (!v14);
          uint64_t v25 = 0;
LABEL_180:
          *((void *)this + 2) = v25;
          break;
        case 202:
          *((_DWORD *)this + 23) |= 1u;
          unint64_t v33 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v34 = *(void *)a2;
          if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
          {
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v37 = 0;
            if (v2 <= v33) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v33)
              {
                uint64_t v37 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_190;
              }
              unint64_t v85 = v33++;
              char v86 = *(unsigned char *)(v34 + v85);
              *((void *)a2 + 1) = v33;
              v37 |= (unint64_t)(v86 & 0x7F) << v83;
              if ((v86 & 0x80) == 0) {
                break;
              }
              v83 += 7;
              BOOL v14 = v84++ > 8;
              if (v14)
              {
                uint64_t v37 = 0;
LABEL_189:
                unint64_t v2 = v85 + 1;
                goto LABEL_190;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v37 = 0;
            }
            goto LABEL_189;
          }
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          do
          {
            unint64_t v2 = v33 + 1;
            *((void *)a2 + 1) = v33 + 1;
            char v38 = *(unsigned char *)(v34 + v33);
            v37 |= (unint64_t)(v38 & 0x7F) << v35;
            if ((v38 & 0x80) == 0) {
              goto LABEL_190;
            }
            v35 += 7;
            unint64_t v33 = v2;
            BOOL v14 = v36++ > 8;
          }
          while (!v14);
          uint64_t v37 = 0;
LABEL_190:
          *((void *)this + 1) = v37;
          break;
        case 203:
          *((_DWORD *)this + 23) |= 0x10u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_111;
          }
          *((_DWORD *)this + 10) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_175;
        case 204:
          *((_DWORD *)this + 23) |= 0x40u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_111;
          }
          *((_DWORD *)this + 12) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_175;
        case 205:
          *((_DWORD *)this + 23) |= 0x80u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
            goto LABEL_111;
          }
          *((_DWORD *)this + 13) = *(_DWORD *)(*(void *)a2 + v2);
          goto LABEL_175;
        case 206:
          *((_DWORD *)this + 23) |= 0x20u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2))
          {
LABEL_111:
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            *((_DWORD *)this + 11) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_175:
            unint64_t v2 = *((void *)a2 + 1) + 4;
            *((void *)a2 + 1) = v2;
          }
          break;
        case 207:
          *((_DWORD *)this + 23) |= 0x10000u;
          unint64_t v2 = *((void *)a2 + 1);
          if (v2 >= *((void *)a2 + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v39 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v40 = v39 != 0;
          }
          *((unsigned char *)this + 88) = v40;
          break;
        default:
          switch((int)v20)
          {
            case 1:
              *((_DWORD *)this + 23) |= 0x200u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_111;
              }
              *((_DWORD *)this + 15) = *(_DWORD *)(*(void *)a2 + v2);
              break;
            case 2:
              *((_DWORD *)this + 23) |= 0x4000u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_111;
              }
              *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v2);
              break;
            case 3:
              *((_DWORD *)this + 23) |= 0x400u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_111;
              }
              *((_DWORD *)this + 16) = *(_DWORD *)(*(void *)a2 + v2);
              break;
            case 4:
              *((_DWORD *)this + 23) |= 0x8000u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_111;
              }
              *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v2);
              break;
            default:
              goto LABEL_19;
          }
          goto LABEL_175;
      }
    }
LABEL_216:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaLackOfMotionResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 92);
  if ((v4 & 0x200) != 0)
  {
    this = PB::Writer::write(a2, *(float *)(this + 60));
    int v4 = *(_DWORD *)(v3 + 92);
    if ((v4 & 0x4000) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 0x4000) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = PB::Writer::write(a2, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x8000) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 4) == 0)
  {
LABEL_6:
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 8) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x40000) == 0)
  {
LABEL_10:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x20000) == 0)
  {
LABEL_11:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x1000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 1) == 0)
  {
LABEL_15:
    if ((v4 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x10) == 0)
  {
LABEL_16:
    if ((v4 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = PB::Writer::write(a2, *(float *)(v3 + 40));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x40) == 0)
  {
LABEL_17:
    if ((v4 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = PB::Writer::write(a2, *(float *)(v3 + 48));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x80) == 0)
  {
LABEL_18:
    if ((v4 & 0x20) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    this = PB::Writer::write(a2, *(float *)(v3 + 44));
    if ((*(_DWORD *)(v3 + 92) & 0x10000) == 0) {
      return this;
    }
    goto LABEL_39;
  }
LABEL_37:
  this = PB::Writer::write(a2, *(float *)(v3 + 52));
  int v4 = *(_DWORD *)(v3 + 92);
  if ((v4 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v4 & 0x10000) == 0) {
    return this;
  }
LABEL_39:
  return PB::Writer::write(a2);
}

uint64_t CMMsl::KappaLackOfMotionResult::hash_value(CMMsl::KappaLackOfMotionResult *this)
{
  int v1 = *((_DWORD *)this + 23);
  if ((v1 & 0x200) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 0x4000) != 0) {
      goto LABEL_3;
    }
LABEL_38:
    uint64_t v4 = 0;
    if ((v1 & 0x400) != 0) {
      goto LABEL_6;
    }
LABEL_39:
    uint64_t v6 = 0;
    if ((v1 & 0x8000) != 0) {
      goto LABEL_9;
    }
LABEL_40:
    uint64_t v8 = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
  float v28 = *((float *)this + 15);
  uint64_t v2 = LODWORD(v28);
  if (v28 == 0.0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 0x4000) == 0) {
    goto LABEL_38;
  }
LABEL_3:
  float v3 = *((float *)this + 20);
  uint64_t v4 = LODWORD(v3);
  if (v3 == 0.0) {
    uint64_t v4 = 0;
  }
  if ((v1 & 0x400) == 0) {
    goto LABEL_39;
  }
LABEL_6:
  float v5 = *((float *)this + 16);
  uint64_t v6 = LODWORD(v5);
  if (v5 == 0.0) {
    uint64_t v6 = 0;
  }
  if ((v1 & 0x8000) == 0) {
    goto LABEL_40;
  }
LABEL_9:
  float v7 = *((float *)this + 21);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  if ((v1 & 4) != 0)
  {
LABEL_12:
    uint64_t v9 = *((void *)this + 3);
    if ((v1 & 8) != 0) {
      goto LABEL_13;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v9 = 0;
  if ((v1 & 8) != 0)
  {
LABEL_13:
    uint64_t v10 = *((void *)this + 4);
    if ((v1 & 0x2000) != 0) {
      goto LABEL_14;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v10 = 0;
  if ((v1 & 0x2000) != 0)
  {
LABEL_14:
    uint64_t v11 = *((int *)this + 19);
    if ((v1 & 0x100) != 0) {
      goto LABEL_15;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v11 = 0;
  if ((v1 & 0x100) != 0)
  {
LABEL_15:
    uint64_t v12 = *((int *)this + 14);
    if ((v1 & 0x40000) != 0) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v12 = 0;
  if ((v1 & 0x40000) != 0)
  {
LABEL_16:
    uint64_t v13 = *((unsigned __int8 *)this + 90);
    if ((v1 & 0x20000) != 0) {
      goto LABEL_17;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v13 = 0;
  if ((v1 & 0x20000) != 0)
  {
LABEL_17:
    uint64_t v14 = *((unsigned __int8 *)this + 89);
    if ((v1 & 0x1000) != 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v14 = 0;
  if ((v1 & 0x1000) != 0)
  {
LABEL_18:
    uint64_t v15 = *((int *)this + 18);
    if ((v1 & 0x800) != 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v15 = 0;
  if ((v1 & 0x800) != 0)
  {
LABEL_19:
    uint64_t v16 = *((int *)this + 17);
    if ((v1 & 2) != 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v16 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_20:
    uint64_t v17 = *((void *)this + 2);
    if (v1) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v17 = 0;
  if (v1)
  {
LABEL_21:
    uint64_t v18 = *((void *)this + 1);
    if ((v1 & 0x10) != 0) {
      goto LABEL_22;
    }
LABEL_51:
    uint64_t v20 = 0;
    if ((v1 & 0x40) != 0) {
      goto LABEL_25;
    }
LABEL_52:
    uint64_t v22 = 0;
    if ((v1 & 0x80) != 0) {
      goto LABEL_28;
    }
LABEL_53:
    uint64_t v24 = 0;
    if ((v1 & 0x20) != 0) {
      goto LABEL_31;
    }
    goto LABEL_54;
  }
LABEL_50:
  uint64_t v18 = 0;
  if ((v1 & 0x10) == 0) {
    goto LABEL_51;
  }
LABEL_22:
  float v19 = *((float *)this + 10);
  uint64_t v20 = LODWORD(v19);
  if (v19 == 0.0) {
    uint64_t v20 = 0;
  }
  if ((v1 & 0x40) == 0) {
    goto LABEL_52;
  }
LABEL_25:
  float v21 = *((float *)this + 12);
  uint64_t v22 = LODWORD(v21);
  if (v21 == 0.0) {
    uint64_t v22 = 0;
  }
  if ((v1 & 0x80) == 0) {
    goto LABEL_53;
  }
LABEL_28:
  float v23 = *((float *)this + 13);
  uint64_t v24 = LODWORD(v23);
  if (v23 == 0.0) {
    uint64_t v24 = 0;
  }
  if ((v1 & 0x20) != 0)
  {
LABEL_31:
    float v25 = *((float *)this + 11);
    uint64_t v26 = LODWORD(v25);
    if (v25 == 0.0) {
      uint64_t v26 = 0;
    }
    if ((v1 & 0x10000) != 0) {
      goto LABEL_34;
    }
LABEL_55:
    uint64_t v27 = 0;
    return v4 ^ v2 ^ v6 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v20 ^ v22 ^ v24 ^ v26 ^ v27;
  }
LABEL_54:
  uint64_t v26 = 0;
  if ((v1 & 0x10000) == 0) {
    goto LABEL_55;
  }
LABEL_34:
  uint64_t v27 = *((unsigned __int8 *)this + 88);
  return v4 ^ v2 ^ v6 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v20 ^ v22 ^ v24 ^ v26 ^ v27;
}

void CMMsl::KappaLocalAudioResult::~KappaLocalAudioResult(CMMsl::KappaLocalAudioResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::KappaLocalAudioResult::KappaLocalAudioResult(CMMsl::KappaLocalAudioResult *this, const CMMsl::KappaLocalAudioResult *a2)
{
  *(void *)this = &unk_270642948;
  *(void *)((char *)this + 172) = 0;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x20000000) != 0)
  {
    float result = *((float *)a2 + 35);
    uint64_t v3 = 0x20000000;
    *(void *)((char *)this + 172) = 0x20000000;
    *((float *)this + 35) = result;
    uint64_t v2 = *(void *)((char *)a2 + 172);
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x8000000) != 0)
  {
LABEL_5:
    float result = *((float *)a2 + 33);
    v3 |= 0x8000000uLL;
    *(void *)((char *)this + 172) = v3;
    *((float *)this + 33) = result;
    uint64_t v2 = *(void *)((char *)a2 + 172);
  }
LABEL_6:
  if ((v2 & 0x2000000) != 0)
  {
    float result = *((float *)a2 + 31);
    v3 |= 0x2000000uLL;
    *(void *)((char *)this + 172) = v3;
    *((float *)this + 31) = result;
    uint64_t v2 = *(void *)((char *)a2 + 172);
    if ((v2 & 0x80000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_53;
    }
  }
  else if ((v2 & 0x80000000) == 0)
  {
    goto LABEL_8;
  }
  float result = *((float *)a2 + 37);
  v3 |= 0x80000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 37) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x100000) == 0)
  {
LABEL_9:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v5 = *((_DWORD *)a2 + 26);
  v3 |= 0x100000uLL;
  *(void *)((char *)this + 172) = v3;
  *((_DWORD *)this + 26) = v5;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x80000) == 0)
  {
LABEL_10:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v6 = *((_DWORD *)a2 + 25);
  v3 |= 0x80000uLL;
  *(void *)((char *)this + 172) = v3;
  *((_DWORD *)this + 25) = v6;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x800000) == 0)
  {
LABEL_11:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_56;
  }
LABEL_55:
  float result = *((float *)a2 + 29);
  v3 |= 0x800000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 29) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_57;
  }
LABEL_56:
  float result = *((float *)a2 + 36);
  v3 |= 0x40000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 36) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_58;
  }
LABEL_57:
  float result = *((float *)a2 + 34);
  v3 |= 0x10000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 34) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_59;
  }
LABEL_58:
  float result = *((float *)a2 + 32);
  v3 |= 0x4000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 32) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_60;
  }
LABEL_59:
  float result = *((float *)a2 + 38);
  v3 |= 0x100000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 38) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x200000) == 0)
  {
LABEL_16:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v7 = *((_DWORD *)a2 + 27);
  v3 |= 0x200000uLL;
  *(void *)((char *)this + 172) = v3;
  *((_DWORD *)this + 27) = v7;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x400000) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v8 = *((_DWORD *)a2 + 28);
  v3 |= 0x400000uLL;
  *(void *)((char *)this + 172) = v3;
  *((_DWORD *)this + 28) = v8;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_63;
  }
LABEL_62:
  char v9 = *((unsigned char *)a2 + 165);
  v3 |= 0x40000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 165) = v9;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x10000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_64;
  }
LABEL_63:
  float result = *((float *)a2 + 22);
  v3 |= 0x10000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 22) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x4000) == 0)
  {
LABEL_20:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_65;
  }
LABEL_64:
  float result = *((float *)a2 + 20);
  v3 |= 0x4000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 20) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x1000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_66;
  }
LABEL_65:
  float result = *((float *)a2 + 18);
  v3 |= 0x1000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 18) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x20000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_67;
  }
LABEL_66:
  float result = *((float *)a2 + 23);
  v3 |= 0x20000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 23) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_68;
  }
LABEL_67:
  char v10 = *((unsigned char *)a2 + 163);
  v3 |= 0x10000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 163) = v10;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x100000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_69;
  }
LABEL_68:
  char v11 = *((unsigned char *)a2 + 156);
  v3 |= 0x200000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 156) = v11;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_25:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_70;
  }
LABEL_69:
  char v12 = *((unsigned char *)a2 + 167);
  v3 |= 0x100000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 167) = v12;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_26:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_71;
  }
LABEL_70:
  char v13 = *((unsigned char *)a2 + 158);
  v3 |= 0x800000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 158) = v13;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_72;
  }
LABEL_71:
  char v14 = *((unsigned char *)a2 + 161);
  v3 |= 0x4000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 161) = v14;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_73;
  }
LABEL_72:
  char v15 = *((unsigned char *)a2 + 166);
  v3 |= 0x80000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 166) = v15;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x8000) == 0)
  {
LABEL_29:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_74;
  }
LABEL_73:
  float result = *((float *)a2 + 21);
  v3 |= 0x8000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 21) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x2000) == 0)
  {
LABEL_30:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_75;
  }
LABEL_74:
  float result = *((float *)a2 + 19);
  v3 |= 0x2000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 19) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x40000) == 0)
  {
LABEL_31:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_76;
  }
LABEL_75:
  float result = *((float *)a2 + 24);
  v3 |= 0x40000uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 24) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_77;
  }
LABEL_76:
  char v16 = *((unsigned char *)a2 + 164);
  v3 |= 0x20000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 164) = v16;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x200000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_78;
  }
LABEL_77:
  char v17 = *((unsigned char *)a2 + 157);
  v3 |= 0x400000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 157) = v17;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x200000000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_79;
  }
LABEL_78:
  char v18 = *((unsigned char *)a2 + 168);
  v3 |= 0x200000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 168) = v18;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_80;
  }
LABEL_79:
  char v19 = *((unsigned char *)a2 + 159);
  v3 |= 0x1000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 159) = v19;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_36:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_81;
  }
LABEL_80:
  char v20 = *((unsigned char *)a2 + 162);
  v3 |= 0x8000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 162) = v20;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_37:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_82;
  }
LABEL_81:
  char v21 = *((unsigned char *)a2 + 160);
  v3 |= 0x2000000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((unsigned char *)this + 160) = v21;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_38:
    if ((v2 & 4) == 0) {
      goto LABEL_39;
    }
    goto LABEL_83;
  }
LABEL_82:
  int v22 = *((_DWORD *)a2 + 30);
  v3 |= 0x1000000uLL;
  *(void *)((char *)this + 172) = v3;
  *((_DWORD *)this + 30) = v22;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 4) == 0)
  {
LABEL_39:
    if ((v2 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_84;
  }
LABEL_83:
  uint64_t v23 = *((void *)a2 + 3);
  v3 |= 4uLL;
  *(void *)((char *)this + 172) = v3;
  *((void *)this + 3) = v23;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 8) == 0)
  {
LABEL_40:
    if ((v2 & 0x10) == 0) {
      goto LABEL_41;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t v24 = *((void *)a2 + 4);
  v3 |= 8uLL;
  *(void *)((char *)this + 172) = v3;
  *((void *)this + 4) = v24;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x10) == 0)
  {
LABEL_41:
    if ((v2 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_86;
  }
LABEL_85:
  float result = *((float *)a2 + 10);
  v3 |= 0x10uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 10) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x80) == 0)
  {
LABEL_42:
    if ((v2 & 0x100) == 0) {
      goto LABEL_43;
    }
    goto LABEL_87;
  }
LABEL_86:
  float result = *((float *)a2 + 13);
  v3 |= 0x80uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 13) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x100) == 0)
  {
LABEL_43:
    if ((v2 & 0x800) == 0) {
      goto LABEL_44;
    }
    goto LABEL_88;
  }
LABEL_87:
  float result = *((float *)a2 + 14);
  v3 |= 0x100uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 14) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x800) == 0)
  {
LABEL_44:
    if ((v2 & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_89;
  }
LABEL_88:
  float result = *((float *)a2 + 17);
  v3 |= 0x800uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 17) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 1) == 0)
  {
LABEL_45:
    if ((v2 & 2) == 0) {
      goto LABEL_46;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v25 = *((void *)a2 + 1);
  v3 |= 1uLL;
  *(void *)((char *)this + 172) = v3;
  *((void *)this + 1) = v25;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 2) == 0)
  {
LABEL_46:
    if ((v2 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t v26 = *((void *)a2 + 2);
  v3 |= 2uLL;
  *(void *)((char *)this + 172) = v3;
  *((void *)this + 2) = v26;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x20) == 0)
  {
LABEL_47:
    if ((v2 & 0x40) == 0) {
      goto LABEL_48;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *((float *)a2 + 11);
  v3 |= 0x20uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 11) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x40) == 0)
  {
LABEL_48:
    if ((v2 & 0x200) == 0) {
      goto LABEL_49;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *((float *)a2 + 12);
  v3 |= 0x40uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 12) = result;
  uint64_t v2 = *(void *)((char *)a2 + 172);
  if ((v2 & 0x200) == 0)
  {
LABEL_49:
    if ((v2 & 0x400) == 0) {
      return result;
    }
LABEL_94:
    float result = *((float *)a2 + 16);
    *(void *)((char *)this + 172) = v3 | 0x400;
    *((float *)this + 16) = result;
    return result;
  }
LABEL_93:
  float result = *((float *)a2 + 15);
  v3 |= 0x200uLL;
  *(void *)((char *)this + 172) = v3;
  *((float *)this + 15) = result;
  if ((*(void *)((unsigned char *)a2 + 172) & 0x400) != 0) {
    goto LABEL_94;
  }
  return result;
}

CMMsl *CMMsl::KappaLocalAudioResult::operator=(CMMsl *a1, const CMMsl::KappaLocalAudioResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaLocalAudioResult::KappaLocalAudioResult((CMMsl::KappaLocalAudioResult *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaLocalAudioResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaLocalAudioResult *a2, CMMsl::KappaLocalAudioResult *a3)
{
  uint64_t v3 = *(void *)((char *)this + 172);
  *(void *)((char *)this + 172) = *(void *)((char *)a2 + 172);
  *(void *)((char *)a2 + 172) = v3;
  int v4 = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v4;
  int v5 = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v5;
  int v6 = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v6;
  int v7 = *((_DWORD *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((_DWORD *)a2 + 37) = v7;
  LODWORD(v3) = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v3;
  LODWORD(v3) = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v3;
  int v8 = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v8;
  int v9 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v9;
  int v10 = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v10;
  int v11 = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v11;
  int v12 = *((_DWORD *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((_DWORD *)a2 + 38) = v12;
  LODWORD(v3) = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v3;
  LODWORD(v3) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 165);
  *((unsigned char *)this + 165) = *((unsigned char *)a2 + 165);
  *((unsigned char *)a2 + 165) = v3;
  int v13 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v13;
  int v14 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v14;
  int v15 = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v15;
  int v16 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v16;
  LOBYTE(v3) = *((unsigned char *)this + 163);
  *((unsigned char *)this + 163) = *((unsigned char *)a2 + 163);
  *((unsigned char *)a2 + 163) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 156);
  *((unsigned char *)this + 156) = *((unsigned char *)a2 + 156);
  *((unsigned char *)a2 + 156) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 167);
  *((unsigned char *)this + 167) = *((unsigned char *)a2 + 167);
  *((unsigned char *)a2 + 167) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 158);
  *((unsigned char *)this + 158) = *((unsigned char *)a2 + 158);
  *((unsigned char *)a2 + 158) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 161);
  *((unsigned char *)this + 161) = *((unsigned char *)a2 + 161);
  *((unsigned char *)a2 + 161) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 166);
  *((unsigned char *)this + 166) = *((unsigned char *)a2 + 166);
  *((unsigned char *)a2 + 166) = v3;
  int v17 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v17;
  int v18 = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v18;
  int v19 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v19;
  LOBYTE(v3) = *((unsigned char *)this + 164);
  *((unsigned char *)this + 164) = *((unsigned char *)a2 + 164);
  *((unsigned char *)a2 + 164) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 157);
  *((unsigned char *)this + 157) = *((unsigned char *)a2 + 157);
  *((unsigned char *)a2 + 157) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 168);
  *((unsigned char *)this + 168) = *((unsigned char *)a2 + 168);
  *((unsigned char *)a2 + 168) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 159);
  *((unsigned char *)this + 159) = *((unsigned char *)a2 + 159);
  *((unsigned char *)a2 + 159) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 162);
  *((unsigned char *)this + 162) = *((unsigned char *)a2 + 162);
  *((unsigned char *)a2 + 162) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 160);
  *((unsigned char *)this + 160) = *((unsigned char *)a2 + 160);
  *((unsigned char *)a2 + 160) = v3;
  LODWORD(v3) = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v3;
  uint64_t v20 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v20;
  uint64_t v21 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v21;
  int v22 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v22;
  int v23 = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v23;
  int v24 = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v24;
  int v25 = *((_DWORD *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((_DWORD *)a2 + 17) = v25;
  uint64_t v26 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v26;
  uint64_t v27 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v27;
  int v28 = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v28;
  int v29 = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v29;
  int v30 = *((_DWORD *)this + 15);
  *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = v30;
  float result = *((float *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((float *)a2 + 16) = result;
  return result;
}

float CMMsl::KappaLocalAudioResult::KappaLocalAudioResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642948;
  *(void *)(a1 + 172) = *(void *)(a2 + 172);
  *(void *)(a2 + 172) = 0;
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 165) = *(unsigned char *)(a2 + 165);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(unsigned char *)(a1 + 167) = *(unsigned char *)(a2 + 167);
  *(unsigned char *)(a1 + 158) = *(unsigned char *)(a2 + 158);
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  *(unsigned char *)(a1 + 166) = *(unsigned char *)(a2 + 166);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 159) = *(unsigned char *)(a2 + 159);
  *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  float result = *(float *)(a2 + 64);
  *(float *)(a1 + 64) = result;
  return result;
}

CMMsl *CMMsl::KappaLocalAudioResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaLocalAudioResult::KappaLocalAudioResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaLocalAudioResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaLocalAudioResult::formatText(CMMsl::KappaLocalAudioResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(a2, "chaosAtMaxEnergy", *((float *)this + 10));
    uint64_t v5 = *(void *)((char *)this + 172);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_53;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "chaosAtMaxEnergyRollover", *((float *)this + 11));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(a2, "chaosAtMaxEnergyRolloverTimestamp", *((float *)this + 12));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x80) == 0)
  {
LABEL_5:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(a2, "chaosAtMaxEnergyTimestamp", *((float *)this + 13));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_6:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(a2, "chaosMet");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_7:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(a2, "chaosMetRollover");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_8:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(a2, "chaosOrSaturationMet");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(a2, "chaosOrSaturationMetRollover");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(a2, "didProcess");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMet");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMetRollover");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x100) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(a2, "energyAtMaxChaos", *((float *)this + 14));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x200) == 0)
  {
LABEL_14:
    if ((v5 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(a2, "energyAtMaxChaosRollover", *((float *)this + 15));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x400) == 0)
  {
LABEL_15:
    if ((v5 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(a2, "energyAtMaxChaosRolloverTimestamp", *((float *)this + 16));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x800) == 0)
  {
LABEL_16:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(a2, "energyAtMaxChaosTimestamp", *((float *)this + 17));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(a2, "energyMet");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_18:
    if ((v5 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(a2, "energyMetRollover");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 1) == 0)
  {
LABEL_19:
    if ((v5 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(a2, "epochFirstTimestamp");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 2) == 0)
  {
LABEL_20:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x1000) == 0)
  {
LABEL_21:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(a2, "maxChaos", *((float *)this + 18));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x2000) == 0)
  {
LABEL_22:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(a2, "maxChaosRollover", *((float *)this + 19));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x4000) == 0)
  {
LABEL_23:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(a2, "maxEnergy", *((float *)this + 20));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x8000) == 0)
  {
LABEL_24:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(a2, "maxEnergyRollover", *((float *)this + 21));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x10000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(a2, "maxRMS", *((float *)this + 22));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x20000) == 0)
  {
LABEL_26:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(a2, "maxSaturation", *((float *)this + 23));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x40000) == 0)
  {
LABEL_27:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(a2, "maxSaturationRollover", *((float *)this + 24));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x80000) == 0)
  {
LABEL_28:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(a2, "parameterRollingEnergyWindowSize");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x100000) == 0)
  {
LABEL_29:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(a2, "parameterRollingPercentileWindowSize");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x200000) == 0)
  {
LABEL_30:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(a2, "parameterRolloverRollingEnergyWindowSize");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x400000) == 0)
  {
LABEL_31:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(a2, "parameterRolloverRollingPercentileWindowSize");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x800000) == 0)
  {
LABEL_32:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(a2, "parameterSaturationY", *((float *)this + 29));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(a2, "passThru");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(a2, "passThruRollover");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(a2, "rmsSampleCount");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(a2, "saturationMet");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x200000000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(a2, "saturationMetRollover");
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(a2, "thresholdChaos", *((float *)this + 31));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(a2, "thresholdChaosRollover", *((float *)this + 32));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(a2, "thresholdEnergy", *((float *)this + 33));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(a2, "thresholdEnergyRollover", *((float *)this + 34));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_42:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(a2, "thresholdMaxRMS", *((float *)this + 35));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_43:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(a2, "thresholdMaxRMSRollover", *((float *)this + 36));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(a2, "thresholdSaturationTime", *((float *)this + 37));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_45:
    if ((v5 & 4) == 0) {
      goto LABEL_46;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(a2, "thresholdSaturationTimeRollover", *((float *)this + 38));
  uint64_t v5 = *(void *)((char *)this + 172);
  if ((v5 & 4) == 0)
  {
LABEL_46:
    if ((v5 & 8) == 0) {
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_95:
  PB::TextFormatter::format(a2, "timestamp");
  if ((*(void *)((unsigned char *)this + 172) & 8) != 0) {
LABEL_47:
  }
    PB::TextFormatter::format(a2, "triggerTimestamp");
LABEL_48:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaLocalAudioResult::readFrom(CMMsl::KappaLocalAudioResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
      break;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4)
    {
      int v4 = 0;
      return v4 == 0;
    }
    if ((v11 & 7) <= 4)
    {
      switch((v11 >> 3))
      {
        case 'e':
          *(void *)((char *)this + 172) |= 0x40000000000uLL;
          unint64_t v21 = *((void *)a2 + 1);
          if (v21 >= *((void *)a2 + 2))
          {
            BOOL v24 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v22 = v21 + 1;
            int v23 = *(unsigned __int8 *)(*(void *)a2 + v21);
            *((void *)a2 + 1) = v22;
            BOOL v24 = v23 != 0;
          }
          *((unsigned char *)this + 165) = v24;
          break;
        case 'f':
          *(void *)((char *)this + 172) |= 0x10000uLL;
          unint64_t v65 = *((void *)a2 + 1);
          if (v65 > 0xFFFFFFFFFFFFFFFBLL || v65 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 22) = *(_DWORD *)(*(void *)a2 + v65);
          goto LABEL_178;
        case 'g':
          *(void *)((char *)this + 172) |= 0x4000uLL;
          unint64_t v66 = *((void *)a2 + 1);
          if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v66);
          goto LABEL_178;
        case 'h':
          *(void *)((char *)this + 172) |= 0x1000uLL;
          unint64_t v67 = *((void *)a2 + 1);
          if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 18) = *(_DWORD *)(*(void *)a2 + v67);
          goto LABEL_178;
        case 'i':
          *(void *)((char *)this + 172) |= 0x20000uLL;
          unint64_t v68 = *((void *)a2 + 1);
          if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 23) = *(_DWORD *)(*(void *)a2 + v68);
          goto LABEL_178;
        case 'j':
          *(void *)((char *)this + 172) |= 0x10000000000uLL;
          unint64_t v69 = *((void *)a2 + 1);
          if (v69 >= *((void *)a2 + 2))
          {
            BOOL v72 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v70 = v69 + 1;
            int v71 = *(unsigned __int8 *)(*(void *)a2 + v69);
            *((void *)a2 + 1) = v70;
            BOOL v72 = v71 != 0;
          }
          *((unsigned char *)this + 163) = v72;
          break;
        case 'k':
          *(void *)((char *)this + 172) |= 0x200000000uLL;
          unint64_t v73 = *((void *)a2 + 1);
          if (v73 >= *((void *)a2 + 2))
          {
            BOOL v76 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v74 = v73 + 1;
            int v75 = *(unsigned __int8 *)(*(void *)a2 + v73);
            *((void *)a2 + 1) = v74;
            BOOL v76 = v75 != 0;
          }
          *((unsigned char *)this + 156) = v76;
          break;
        case 'l':
          *(void *)((char *)this + 172) |= 0x100000000000uLL;
          unint64_t v77 = *((void *)a2 + 1);
          if (v77 >= *((void *)a2 + 2))
          {
            BOOL v80 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v78 = v77 + 1;
            int v79 = *(unsigned __int8 *)(*(void *)a2 + v77);
            *((void *)a2 + 1) = v78;
            BOOL v80 = v79 != 0;
          }
          *((unsigned char *)this + 167) = v80;
          break;
        case 'm':
          *(void *)((char *)this + 172) |= 0x800000000uLL;
          unint64_t v81 = *((void *)a2 + 1);
          if (v81 >= *((void *)a2 + 2))
          {
            BOOL v84 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v82 = v81 + 1;
            int v83 = *(unsigned __int8 *)(*(void *)a2 + v81);
            *((void *)a2 + 1) = v82;
            BOOL v84 = v83 != 0;
          }
          *((unsigned char *)this + 158) = v84;
          break;
        case 'n':
          *(void *)((char *)this + 172) |= 0x4000000000uLL;
          unint64_t v85 = *((void *)a2 + 1);
          if (v85 >= *((void *)a2 + 2))
          {
            BOOL v88 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v86 = v85 + 1;
            int v87 = *(unsigned __int8 *)(*(void *)a2 + v85);
            *((void *)a2 + 1) = v86;
            BOOL v88 = v87 != 0;
          }
          *((unsigned char *)this + 161) = v88;
          break;
        case 'o':
          *(void *)((char *)this + 172) |= 0x80000000000uLL;
          unint64_t v89 = *((void *)a2 + 1);
          if (v89 >= *((void *)a2 + 2))
          {
            BOOL v92 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v90 = v89 + 1;
            int v91 = *(unsigned __int8 *)(*(void *)a2 + v89);
            *((void *)a2 + 1) = v90;
            BOOL v92 = v91 != 0;
          }
          *((unsigned char *)this + 166) = v92;
          break;
        case 'p':
          *(void *)((char *)this + 172) |= 0x8000uLL;
          unint64_t v93 = *((void *)a2 + 1);
          if (v93 > 0xFFFFFFFFFFFFFFFBLL || v93 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v93);
          goto LABEL_178;
        case 'q':
          *(void *)((char *)this + 172) |= 0x2000uLL;
          unint64_t v94 = *((void *)a2 + 1);
          if (v94 > 0xFFFFFFFFFFFFFFFBLL || v94 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 19) = *(_DWORD *)(*(void *)a2 + v94);
          goto LABEL_178;
        case 'r':
          *(void *)((char *)this + 172) |= 0x40000uLL;
          unint64_t v95 = *((void *)a2 + 1);
          if (v95 > 0xFFFFFFFFFFFFFFFBLL || v95 + 4 > *((void *)a2 + 2))
          {
LABEL_125:
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            *((_DWORD *)this + 24) = *(_DWORD *)(*(void *)a2 + v95);
LABEL_178:
            *((void *)a2 + 1) += 4;
          }
          break;
        case 's':
          *(void *)((char *)this + 172) |= 0x20000000000uLL;
          unint64_t v96 = *((void *)a2 + 1);
          if (v96 >= *((void *)a2 + 2))
          {
            BOOL v99 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v97 = v96 + 1;
            int v98 = *(unsigned __int8 *)(*(void *)a2 + v96);
            *((void *)a2 + 1) = v97;
            BOOL v99 = v98 != 0;
          }
          *((unsigned char *)this + 164) = v99;
          break;
        case 't':
          *(void *)((char *)this + 172) |= 0x400000000uLL;
          unint64_t v100 = *((void *)a2 + 1);
          if (v100 >= *((void *)a2 + 2))
          {
            BOOL v103 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v101 = v100 + 1;
            int v102 = *(unsigned __int8 *)(*(void *)a2 + v100);
            *((void *)a2 + 1) = v101;
            BOOL v103 = v102 != 0;
          }
          *((unsigned char *)this + 157) = v103;
          break;
        case 'u':
          *(void *)((char *)this + 172) |= 0x200000000000uLL;
          unint64_t v104 = *((void *)a2 + 1);
          if (v104 >= *((void *)a2 + 2))
          {
            BOOL v107 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v105 = v104 + 1;
            int v106 = *(unsigned __int8 *)(*(void *)a2 + v104);
            *((void *)a2 + 1) = v105;
            BOOL v107 = v106 != 0;
          }
          *((unsigned char *)this + 168) = v107;
          break;
        case 'v':
          *(void *)((char *)this + 172) |= 0x1000000000uLL;
          unint64_t v108 = *((void *)a2 + 1);
          if (v108 >= *((void *)a2 + 2))
          {
            BOOL v111 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v109 = v108 + 1;
            int v110 = *(unsigned __int8 *)(*(void *)a2 + v108);
            *((void *)a2 + 1) = v109;
            BOOL v111 = v110 != 0;
          }
          *((unsigned char *)this + 159) = v111;
          break;
        case 'w':
          *(void *)((char *)this + 172) |= 0x8000000000uLL;
          unint64_t v112 = *((void *)a2 + 1);
          if (v112 >= *((void *)a2 + 2))
          {
            BOOL v115 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v113 = v112 + 1;
            int v114 = *(unsigned __int8 *)(*(void *)a2 + v112);
            *((void *)a2 + 1) = v113;
            BOOL v115 = v114 != 0;
          }
          *((unsigned char *)this + 162) = v115;
          break;
        default:
          JUMPOUT(0);
      }
    }
    else
    {
      switch((v11 >> 3))
      {
        case 1u:
          *(void *)((char *)this + 172) |= 0x20000000uLL;
          unint64_t v20 = *((void *)a2 + 1);
          if (v20 > 0xFFFFFFFFFFFFFFFBLL || v20 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 35) = *(_DWORD *)(*(void *)a2 + v20);
          goto LABEL_178;
        case 2u:
          *(void *)((char *)this + 172) |= 0x8000000uLL;
          unint64_t v25 = *((void *)a2 + 1);
          if (v25 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v25);
          goto LABEL_178;
        case 3u:
          *(void *)((char *)this + 172) |= 0x2000000uLL;
          unint64_t v26 = *((void *)a2 + 1);
          if (v26 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 31) = *(_DWORD *)(*(void *)a2 + v26);
          goto LABEL_178;
        case 4u:
          *(void *)((char *)this + 172) |= 0x80000000uLL;
          unint64_t v27 = *((void *)a2 + 1);
          if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 37) = *(_DWORD *)(*(void *)a2 + v27);
          goto LABEL_178;
        case 5u:
          *(void *)((char *)this + 172) |= 0x100000uLL;
          unint64_t v28 = *((void *)a2 + 1);
          unint64_t v29 = *((void *)a2 + 2);
          uint64_t v30 = *(void *)a2;
          if (v28 <= 0xFFFFFFFFFFFFFFF5 && v28 + 10 <= v29)
          {
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            do
            {
              unint64_t v34 = v28 + 1;
              *((void *)a2 + 1) = v28 + 1;
              char v35 = *(unsigned char *)(v30 + v28);
              v33 |= (unint64_t)(v35 & 0x7F) << v31;
              if ((v35 & 0x80) == 0) {
                goto LABEL_187;
              }
              v31 += 7;
              unint64_t v28 = v34;
              BOOL v14 = v32++ > 8;
            }
            while (!v14);
LABEL_134:
            LODWORD(v33) = 0;
            goto LABEL_187;
          }
          char v116 = 0;
          unsigned int v117 = 0;
          uint64_t v33 = 0;
          if (v29 <= v28) {
            unint64_t v29 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v29 == v28)
            {
              LODWORD(v33) = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v118 = v28 + 1;
              char v119 = *(unsigned char *)(v30 + v28);
              *((void *)a2 + 1) = v118;
              v33 |= (unint64_t)(v119 & 0x7F) << v116;
              if (v119 < 0)
              {
                v116 += 7;
                unint64_t v28 = v118;
                BOOL v14 = v117++ > 8;
                if (v14) {
                  goto LABEL_134;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v33) = 0;
              }
            }
            break;
          }
LABEL_187:
          *((_DWORD *)this + 26) = v33;
          goto LABEL_179;
        case 6u:
          *(void *)((char *)this + 172) |= 0x80000uLL;
          unint64_t v36 = *((void *)a2 + 1);
          unint64_t v37 = *((void *)a2 + 2);
          uint64_t v38 = *(void *)a2;
          if (v36 <= 0xFFFFFFFFFFFFFFF5 && v36 + 10 <= v37)
          {
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            do
            {
              unint64_t v42 = v36 + 1;
              *((void *)a2 + 1) = v36 + 1;
              char v43 = *(unsigned char *)(v38 + v36);
              v41 |= (unint64_t)(v43 & 0x7F) << v39;
              if ((v43 & 0x80) == 0) {
                goto LABEL_191;
              }
              v39 += 7;
              unint64_t v36 = v42;
              BOOL v14 = v40++ > 8;
            }
            while (!v14);
LABEL_141:
            LODWORD(v41) = 0;
            goto LABEL_191;
          }
          char v120 = 0;
          unsigned int v121 = 0;
          uint64_t v41 = 0;
          if (v37 <= v36) {
            unint64_t v37 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v37 == v36)
            {
              LODWORD(v41) = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v122 = v36 + 1;
              char v123 = *(unsigned char *)(v38 + v36);
              *((void *)a2 + 1) = v122;
              v41 |= (unint64_t)(v123 & 0x7F) << v120;
              if (v123 < 0)
              {
                v120 += 7;
                unint64_t v36 = v122;
                BOOL v14 = v121++ > 8;
                if (v14) {
                  goto LABEL_141;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v41) = 0;
              }
            }
            break;
          }
LABEL_191:
          *((_DWORD *)this + 25) = v41;
          goto LABEL_179;
        case 7u:
          *(void *)((char *)this + 172) |= 0x800000uLL;
          unint64_t v44 = *((void *)a2 + 1);
          if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 29) = *(_DWORD *)(*(void *)a2 + v44);
          goto LABEL_178;
        case 8u:
          *(void *)((char *)this + 172) |= 0x40000000uLL;
          unint64_t v45 = *((void *)a2 + 1);
          if (v45 > 0xFFFFFFFFFFFFFFFBLL || v45 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 36) = *(_DWORD *)(*(void *)a2 + v45);
          goto LABEL_178;
        case 9u:
          *(void *)((char *)this + 172) |= 0x10000000uLL;
          unint64_t v46 = *((void *)a2 + 1);
          if (v46 > 0xFFFFFFFFFFFFFFFBLL || v46 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 34) = *(_DWORD *)(*(void *)a2 + v46);
          goto LABEL_178;
        case 0xAu:
          *(void *)((char *)this + 172) |= 0x4000000uLL;
          unint64_t v47 = *((void *)a2 + 1);
          if (v47 > 0xFFFFFFFFFFFFFFFBLL || v47 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v47);
          goto LABEL_178;
        case 0xBu:
          *(void *)((char *)this + 172) |= 0x100000000uLL;
          unint64_t v48 = *((void *)a2 + 1);
          if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > *((void *)a2 + 2)) {
            goto LABEL_125;
          }
          *((_DWORD *)this + 38) = *(_DWORD *)(*(void *)a2 + v48);
          goto LABEL_178;
        case 0xCu:
          *(void *)((char *)this + 172) |= 0x200000uLL;
          unint64_t v49 = *((void *)a2 + 1);
          unint64_t v50 = *((void *)a2 + 2);
          uint64_t v51 = *(void *)a2;
          if (v49 <= 0xFFFFFFFFFFFFFFF5 && v49 + 10 <= v50)
          {
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v54 = 0;
            do
            {
              unint64_t v55 = v49 + 1;
              *((void *)a2 + 1) = v49 + 1;
              char v56 = *(unsigned char *)(v51 + v49);
              v54 |= (unint64_t)(v56 & 0x7F) << v52;
              if ((v56 & 0x80) == 0) {
                goto LABEL_195;
              }
              v52 += 7;
              unint64_t v49 = v55;
              BOOL v14 = v53++ > 8;
            }
            while (!v14);
LABEL_148:
            LODWORD(v54) = 0;
            goto LABEL_195;
          }
          char v124 = 0;
          unsigned int v125 = 0;
          uint64_t v54 = 0;
          if (v50 <= v49) {
            unint64_t v50 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v50 == v49)
            {
              LODWORD(v54) = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v126 = v49 + 1;
              char v127 = *(unsigned char *)(v51 + v49);
              *((void *)a2 + 1) = v126;
              v54 |= (unint64_t)(v127 & 0x7F) << v124;
              if (v127 < 0)
              {
                v124 += 7;
                unint64_t v49 = v126;
                BOOL v14 = v125++ > 8;
                if (v14) {
                  goto LABEL_148;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v54) = 0;
              }
            }
            break;
          }
LABEL_195:
          *((_DWORD *)this + 27) = v54;
          goto LABEL_179;
        case 0xDu:
          *(void *)((char *)this + 172) |= 0x400000uLL;
          unint64_t v57 = *((void *)a2 + 1);
          unint64_t v58 = *((void *)a2 + 2);
          uint64_t v59 = *(void *)a2;
          if (v57 <= 0xFFFFFFFFFFFFFFF5 && v57 + 10 <= v58)
          {
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            do
            {
              unint64_t v63 = v57 + 1;
              *((void *)a2 + 1) = v57 + 1;
              char v64 = *(unsigned char *)(v59 + v57);
              v62 |= (unint64_t)(v64 & 0x7F) << v60;
              if ((v64 & 0x80) == 0) {
                goto LABEL_199;
              }
              v60 += 7;
              unint64_t v57 = v63;
              BOOL v14 = v61++ > 8;
            }
            while (!v14);
LABEL_155:
            LODWORD(v62) = 0;
            goto LABEL_199;
          }
          char v128 = 0;
          unsigned int v129 = 0;
          uint64_t v62 = 0;
          if (v58 <= v57) {
            unint64_t v58 = *((void *)a2 + 1);
          }
          break;
        default:
          goto LABEL_19;
      }
      while (1)
      {
        if (v58 == v57)
        {
          LODWORD(v62) = 0;
          *((unsigned char *)a2 + 24) = 1;
          goto LABEL_199;
        }
        unint64_t v130 = v57 + 1;
        char v131 = *(unsigned char *)(v59 + v57);
        *((void *)a2 + 1) = v130;
        v62 |= (unint64_t)(v131 & 0x7F) << v128;
        if ((v131 & 0x80) == 0) {
          break;
        }
        v128 += 7;
        unint64_t v57 = v130;
        BOOL v14 = v129++ > 8;
        if (v14) {
          goto LABEL_155;
        }
      }
      if (*((unsigned char *)a2 + 24)) {
        LODWORD(v62) = 0;
      }
LABEL_199:
      *((_DWORD *)this + 28) = v62;
    }
LABEL_179:
    unint64_t v2 = *((void *)a2 + 1);
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  char v15 = 0;
  unsigned int v16 = 0;
  unint64_t v11 = 0;
  if (v2 > v3) {
    unint64_t v3 = v2;
  }
  do
  {
    if (v3 == v2)
    {
      int v4 = 1;
      *((unsigned char *)a2 + 24) = 1;
      return v4 == 0;
    }
    unint64_t v17 = v2 + 1;
    char v18 = *(unsigned char *)(v8 + v2);
    *((void *)a2 + 1) = v17;
    v11 |= (unint64_t)(v18 & 0x7F) << v15;
    if ((v18 & 0x80) == 0) {
      goto LABEL_21;
    }
    v15 += 7;
    unint64_t v2 = v17;
    BOOL v14 = v16++ > 8;
  }
  while (!v14);
LABEL_19:
  uint64_t result = PB::Reader::skip(a2);
  if (result) {
    goto LABEL_179;
  }
  return result;
}

uint64_t CMMsl::KappaLocalAudioResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *(void *)(this + 172);
  if ((v4 & 0x20000000) != 0)
  {
    this = PB::Writer::write(a2, *(float *)(this + 140));
    uint64_t v4 = *(void *)(v3 + 172);
    if ((v4 & 0x8000000) == 0)
    {
LABEL_3:
      if ((v4 & 0x2000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_50;
    }
  }
  else if ((v4 & 0x8000000) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_4:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = PB::Writer::write(a2, *(float *)(v3 + 148));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000) == 0)
  {
LABEL_6:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000) == 0)
  {
LABEL_7:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800000) == 0)
  {
LABEL_8:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_56;
  }
LABEL_55:
  this = PB::Writer::write(a2, *(float *)(v3 + 144));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_57;
  }
LABEL_56:
  this = PB::Writer::write(a2, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_58;
  }
LABEL_57:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_59;
  }
LABEL_58:
  this = PB::Writer::write(a2, *(float *)(v3 + 152));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000) == 0)
  {
LABEL_13:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_60;
  }
LABEL_59:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x400000) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_61;
  }
LABEL_60:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_62;
  }
LABEL_61:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_63;
  }
LABEL_62:
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_64;
  }
LABEL_63:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_65;
  }
LABEL_64:
  this = PB::Writer::write(a2, *(float *)(v3 + 72));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_66;
  }
LABEL_65:
  this = PB::Writer::write(a2, *(float *)(v3 + 92));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_67;
  }
LABEL_66:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_68;
  }
LABEL_67:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_22:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_69;
  }
LABEL_68:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_70;
  }
LABEL_69:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_71;
  }
LABEL_70:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_72;
  }
LABEL_71:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x8000) == 0)
  {
LABEL_26:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_73;
  }
LABEL_72:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000) == 0)
  {
LABEL_27:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_74;
  }
LABEL_73:
  this = PB::Writer::write(a2, *(float *)(v3 + 76));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40000) == 0)
  {
LABEL_28:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_75;
  }
LABEL_74:
  this = PB::Writer::write(a2, *(float *)(v3 + 96));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_76;
  }
LABEL_75:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_77;
  }
LABEL_76:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_78;
  }
LABEL_77:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_79;
  }
LABEL_78:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_33:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_80;
  }
LABEL_79:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_81;
  }
LABEL_80:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v4 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_82;
  }
LABEL_81:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 4) == 0)
  {
LABEL_36:
    if ((v4 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_83;
  }
LABEL_82:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 8) == 0)
  {
LABEL_37:
    if ((v4 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_84;
  }
LABEL_83:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x10) == 0)
  {
LABEL_38:
    if ((v4 & 0x80) == 0) {
      goto LABEL_39;
    }
    goto LABEL_85;
  }
LABEL_84:
  this = PB::Writer::write(a2, *(float *)(v3 + 40));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x80) == 0)
  {
LABEL_39:
    if ((v4 & 0x100) == 0) {
      goto LABEL_40;
    }
    goto LABEL_86;
  }
LABEL_85:
  this = PB::Writer::write(a2, *(float *)(v3 + 52));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x100) == 0)
  {
LABEL_40:
    if ((v4 & 0x800) == 0) {
      goto LABEL_41;
    }
    goto LABEL_87;
  }
LABEL_86:
  this = PB::Writer::write(a2, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x800) == 0)
  {
LABEL_41:
    if ((v4 & 1) == 0) {
      goto LABEL_42;
    }
    goto LABEL_88;
  }
LABEL_87:
  this = PB::Writer::write(a2, *(float *)(v3 + 68));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 1) == 0)
  {
LABEL_42:
    if ((v4 & 2) == 0) {
      goto LABEL_43;
    }
    goto LABEL_89;
  }
LABEL_88:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 2) == 0)
  {
LABEL_43:
    if ((v4 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_90;
  }
LABEL_89:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x20) == 0)
  {
LABEL_44:
    if ((v4 & 0x40) == 0) {
      goto LABEL_45;
    }
    goto LABEL_91;
  }
LABEL_90:
  this = PB::Writer::write(a2, *(float *)(v3 + 44));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x40) == 0)
  {
LABEL_45:
    if ((v4 & 0x200) == 0) {
      goto LABEL_46;
    }
LABEL_92:
    this = PB::Writer::write(a2, *(float *)(v3 + 60));
    if ((*(void *)(v3 + 172) & 0x400) == 0) {
      return this;
    }
    goto LABEL_93;
  }
LABEL_91:
  this = PB::Writer::write(a2, *(float *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 172);
  if ((v4 & 0x200) != 0) {
    goto LABEL_92;
  }
LABEL_46:
  if ((v4 & 0x400) == 0) {
    return this;
  }
LABEL_93:
  float v5 = *(float *)(v3 + 64);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::KappaLocalAudioResult::hash_value(CMMsl::KappaLocalAudioResult *this)
{
  uint64_t v1 = *(void *)((char *)this + 172);
  if ((v1 & 0x20000000) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 0x8000000) != 0) {
      goto LABEL_3;
    }
LABEL_101:
    uint64_t v84 = 0;
    if ((v1 & 0x2000000) != 0) {
      goto LABEL_6;
    }
LABEL_102:
    uint64_t v83 = 0;
    if ((v1 & 0x80000000) != 0) {
      goto LABEL_9;
    }
LABEL_103:
    uint64_t v82 = 0;
    if ((v1 & 0x100000) != 0) {
      goto LABEL_12;
    }
    goto LABEL_104;
  }
  float v64 = *((float *)this + 35);
  if (v64 == 0.0) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = LODWORD(v64);
  }
  if ((v1 & 0x8000000) == 0) {
    goto LABEL_101;
  }
LABEL_3:
  float v3 = *((float *)this + 33);
  uint64_t v4 = LODWORD(v3);
  if (v3 == 0.0) {
    uint64_t v4 = 0;
  }
  uint64_t v84 = v4;
  if ((v1 & 0x2000000) == 0) {
    goto LABEL_102;
  }
LABEL_6:
  float v5 = *((float *)this + 31);
  uint64_t v6 = LODWORD(v5);
  if (v5 == 0.0) {
    uint64_t v6 = 0;
  }
  uint64_t v83 = v6;
  if ((v1 & 0x80000000) == 0) {
    goto LABEL_103;
  }
LABEL_9:
  float v7 = *((float *)this + 37);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  uint64_t v82 = v8;
  if ((v1 & 0x100000) != 0)
  {
LABEL_12:
    uint64_t v81 = *((int *)this + 26);
    if ((v1 & 0x80000) != 0) {
      goto LABEL_13;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t v81 = 0;
  if ((v1 & 0x80000) != 0)
  {
LABEL_13:
    uint64_t v80 = *((int *)this + 25);
    if ((v1 & 0x800000) != 0) {
      goto LABEL_14;
    }
LABEL_106:
    uint64_t v79 = 0;
    if ((v1 & 0x40000000) != 0) {
      goto LABEL_17;
    }
LABEL_107:
    uint64_t v78 = 0;
    if ((v1 & 0x10000000) != 0) {
      goto LABEL_20;
    }
LABEL_108:
    uint64_t v77 = 0;
    if ((v1 & 0x4000000) != 0) {
      goto LABEL_23;
    }
LABEL_109:
    uint64_t v76 = 0;
    if ((v1 & 0x100000000) != 0) {
      goto LABEL_26;
    }
LABEL_110:
    uint64_t v75 = 0;
    if ((v1 & 0x200000) != 0) {
      goto LABEL_29;
    }
    goto LABEL_111;
  }
LABEL_105:
  uint64_t v80 = 0;
  if ((v1 & 0x800000) == 0) {
    goto LABEL_106;
  }
LABEL_14:
  float v9 = *((float *)this + 29);
  uint64_t v10 = LODWORD(v9);
  if (v9 == 0.0) {
    uint64_t v10 = 0;
  }
  uint64_t v79 = v10;
  if ((v1 & 0x40000000) == 0) {
    goto LABEL_107;
  }
LABEL_17:
  float v11 = *((float *)this + 36);
  uint64_t v12 = LODWORD(v11);
  if (v11 == 0.0) {
    uint64_t v12 = 0;
  }
  uint64_t v78 = v12;
  if ((v1 & 0x10000000) == 0) {
    goto LABEL_108;
  }
LABEL_20:
  float v13 = *((float *)this + 34);
  uint64_t v14 = LODWORD(v13);
  if (v13 == 0.0) {
    uint64_t v14 = 0;
  }
  uint64_t v77 = v14;
  if ((v1 & 0x4000000) == 0) {
    goto LABEL_109;
  }
LABEL_23:
  float v15 = *((float *)this + 32);
  uint64_t v16 = LODWORD(v15);
  if (v15 == 0.0) {
    uint64_t v16 = 0;
  }
  uint64_t v76 = v16;
  if ((v1 & 0x100000000) == 0) {
    goto LABEL_110;
  }
LABEL_26:
  float v17 = *((float *)this + 38);
  uint64_t v18 = LODWORD(v17);
  if (v17 == 0.0) {
    uint64_t v18 = 0;
  }
  uint64_t v75 = v18;
  if ((v1 & 0x200000) != 0)
  {
LABEL_29:
    uint64_t v74 = *((int *)this + 27);
    if ((v1 & 0x400000) != 0) {
      goto LABEL_30;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t v74 = 0;
  if ((v1 & 0x400000) != 0)
  {
LABEL_30:
    uint64_t v73 = *((int *)this + 28);
    if ((v1 & 0x40000000000) != 0) {
      goto LABEL_31;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t v73 = 0;
  if ((v1 & 0x40000000000) != 0)
  {
LABEL_31:
    uint64_t v72 = *((unsigned __int8 *)this + 165);
    if ((v1 & 0x10000) != 0) {
      goto LABEL_32;
    }
LABEL_114:
    uint64_t v71 = 0;
    if ((v1 & 0x4000) != 0) {
      goto LABEL_35;
    }
LABEL_115:
    uint64_t v70 = 0;
    if ((v1 & 0x1000) != 0) {
      goto LABEL_38;
    }
LABEL_116:
    uint64_t v69 = 0;
    if ((v1 & 0x20000) != 0) {
      goto LABEL_41;
    }
LABEL_117:
    uint64_t v68 = 0;
    if ((v1 & 0x10000000000) != 0) {
      goto LABEL_44;
    }
    goto LABEL_118;
  }
LABEL_113:
  uint64_t v72 = 0;
  if ((v1 & 0x10000) == 0) {
    goto LABEL_114;
  }
LABEL_32:
  float v19 = *((float *)this + 22);
  uint64_t v20 = LODWORD(v19);
  if (v19 == 0.0) {
    uint64_t v20 = 0;
  }
  uint64_t v71 = v20;
  if ((v1 & 0x4000) == 0) {
    goto LABEL_115;
  }
LABEL_35:
  float v21 = *((float *)this + 20);
  uint64_t v22 = LODWORD(v21);
  if (v21 == 0.0) {
    uint64_t v22 = 0;
  }
  uint64_t v70 = v22;
  if ((v1 & 0x1000) == 0) {
    goto LABEL_116;
  }
LABEL_38:
  float v23 = *((float *)this + 18);
  uint64_t v24 = LODWORD(v23);
  if (v23 == 0.0) {
    uint64_t v24 = 0;
  }
  uint64_t v69 = v24;
  if ((v1 & 0x20000) == 0) {
    goto LABEL_117;
  }
LABEL_41:
  float v25 = *((float *)this + 23);
  uint64_t v26 = LODWORD(v25);
  if (v25 == 0.0) {
    uint64_t v26 = 0;
  }
  uint64_t v68 = v26;
  if ((v1 & 0x10000000000) != 0)
  {
LABEL_44:
    uint64_t v67 = *((unsigned __int8 *)this + 163);
    if ((v1 & 0x200000000) != 0) {
      goto LABEL_45;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t v67 = 0;
  if ((v1 & 0x200000000) != 0)
  {
LABEL_45:
    uint64_t v66 = *((unsigned __int8 *)this + 156);
    if ((v1 & 0x100000000000) != 0) {
      goto LABEL_46;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t v66 = 0;
  if ((v1 & 0x100000000000) != 0)
  {
LABEL_46:
    uint64_t v27 = *((unsigned __int8 *)this + 167);
    if ((v1 & 0x800000000) != 0) {
      goto LABEL_47;
    }
    goto LABEL_121;
  }
LABEL_120:
  uint64_t v27 = 0;
  if ((v1 & 0x800000000) != 0)
  {
LABEL_47:
    uint64_t v28 = *((unsigned __int8 *)this + 158);
    if ((v1 & 0x4000000000) != 0) {
      goto LABEL_48;
    }
    goto LABEL_122;
  }
LABEL_121:
  uint64_t v28 = 0;
  if ((v1 & 0x4000000000) != 0)
  {
LABEL_48:
    uint64_t v29 = *((unsigned __int8 *)this + 161);
    if ((v1 & 0x80000000000) != 0) {
      goto LABEL_49;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t v29 = 0;
  if ((v1 & 0x80000000000) != 0)
  {
LABEL_49:
    uint64_t v30 = *((unsigned __int8 *)this + 166);
    if ((v1 & 0x8000) != 0) {
      goto LABEL_50;
    }
LABEL_124:
    uint64_t v32 = 0;
    if ((v1 & 0x2000) != 0) {
      goto LABEL_54;
    }
LABEL_125:
    uint64_t v34 = 0;
    if ((v1 & 0x40000) != 0) {
      goto LABEL_58;
    }
LABEL_126:
    uint64_t v36 = 0;
    if ((v1 & 0x20000000000) != 0) {
      goto LABEL_62;
    }
    goto LABEL_127;
  }
LABEL_123:
  uint64_t v30 = 0;
  if ((v1 & 0x8000) == 0) {
    goto LABEL_124;
  }
LABEL_50:
  float v31 = *((float *)this + 21);
  if (v31 == 0.0) {
    uint64_t v32 = 0;
  }
  else {
    uint64_t v32 = LODWORD(v31);
  }
  if ((v1 & 0x2000) == 0) {
    goto LABEL_125;
  }
LABEL_54:
  float v33 = *((float *)this + 19);
  if (v33 == 0.0) {
    uint64_t v34 = 0;
  }
  else {
    uint64_t v34 = LODWORD(v33);
  }
  if ((v1 & 0x40000) == 0) {
    goto LABEL_126;
  }
LABEL_58:
  float v35 = *((float *)this + 24);
  if (v35 == 0.0) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = LODWORD(v35);
  }
  if ((v1 & 0x20000000000) != 0)
  {
LABEL_62:
    uint64_t v37 = *((unsigned __int8 *)this + 164);
    if ((v1 & 0x400000000) != 0) {
      goto LABEL_63;
    }
    goto LABEL_128;
  }
LABEL_127:
  uint64_t v37 = 0;
  if ((v1 & 0x400000000) != 0)
  {
LABEL_63:
    uint64_t v38 = *((unsigned __int8 *)this + 157);
    if ((v1 & 0x200000000000) != 0) {
      goto LABEL_64;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t v38 = 0;
  if ((v1 & 0x200000000000) != 0)
  {
LABEL_64:
    uint64_t v39 = *((unsigned __int8 *)this + 168);
    if ((v1 & 0x1000000000) != 0) {
      goto LABEL_65;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v39 = 0;
  if ((v1 & 0x1000000000) != 0)
  {
LABEL_65:
    uint64_t v40 = *((unsigned __int8 *)this + 159);
    if ((v1 & 0x8000000000) != 0) {
      goto LABEL_66;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t v40 = 0;
  if ((v1 & 0x8000000000) != 0)
  {
LABEL_66:
    uint64_t v41 = *((unsigned __int8 *)this + 162);
    if ((v1 & 0x2000000000) != 0) {
      goto LABEL_67;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t v41 = 0;
  if ((v1 & 0x2000000000) != 0)
  {
LABEL_67:
    uint64_t v42 = *((unsigned __int8 *)this + 160);
    if ((v1 & 0x1000000) != 0) {
      goto LABEL_68;
    }
    goto LABEL_133;
  }
LABEL_132:
  uint64_t v42 = 0;
  if ((v1 & 0x1000000) != 0)
  {
LABEL_68:
    uint64_t v43 = *((int *)this + 30);
    if ((v1 & 4) != 0) {
      goto LABEL_69;
    }
    goto LABEL_134;
  }
LABEL_133:
  uint64_t v43 = 0;
  if ((v1 & 4) != 0)
  {
LABEL_69:
    uint64_t v44 = *((void *)this + 3);
    if ((v1 & 8) != 0) {
      goto LABEL_70;
    }
    goto LABEL_135;
  }
LABEL_134:
  uint64_t v44 = 0;
  if ((v1 & 8) != 0)
  {
LABEL_70:
    uint64_t v45 = *((void *)this + 4);
    if ((v1 & 0x10) != 0) {
      goto LABEL_71;
    }
LABEL_136:
    uint64_t v47 = 0;
    if ((v1 & 0x80) != 0) {
      goto LABEL_74;
    }
LABEL_137:
    uint64_t v49 = 0;
    if ((v1 & 0x100) != 0) {
      goto LABEL_77;
    }
LABEL_138:
    uint64_t v51 = 0;
    if ((v1 & 0x800) != 0) {
      goto LABEL_80;
    }
LABEL_139:
    uint64_t v53 = 0;
    if (v1) {
      goto LABEL_83;
    }
    goto LABEL_140;
  }
LABEL_135:
  uint64_t v45 = 0;
  if ((v1 & 0x10) == 0) {
    goto LABEL_136;
  }
LABEL_71:
  float v46 = *((float *)this + 10);
  uint64_t v47 = LODWORD(v46);
  if (v46 == 0.0) {
    uint64_t v47 = 0;
  }
  if ((v1 & 0x80) == 0) {
    goto LABEL_137;
  }
LABEL_74:
  float v48 = *((float *)this + 13);
  uint64_t v49 = LODWORD(v48);
  if (v48 == 0.0) {
    uint64_t v49 = 0;
  }
  if ((v1 & 0x100) == 0) {
    goto LABEL_138;
  }
LABEL_77:
  float v50 = *((float *)this + 14);
  uint64_t v51 = LODWORD(v50);
  if (v50 == 0.0) {
    uint64_t v51 = 0;
  }
  if ((v1 & 0x800) == 0) {
    goto LABEL_139;
  }
LABEL_80:
  float v52 = *((float *)this + 17);
  uint64_t v53 = LODWORD(v52);
  if (v52 == 0.0) {
    uint64_t v53 = 0;
  }
  if (v1)
  {
LABEL_83:
    uint64_t v54 = *((void *)this + 1);
    if ((v1 & 2) != 0) {
      goto LABEL_84;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t v54 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_84:
    uint64_t v55 = *((void *)this + 2);
    if ((v1 & 0x20) != 0) {
      goto LABEL_85;
    }
LABEL_142:
    uint64_t v57 = 0;
    if ((v1 & 0x40) != 0) {
      goto LABEL_88;
    }
LABEL_143:
    uint64_t v59 = 0;
    if ((v1 & 0x200) != 0) {
      goto LABEL_91;
    }
    goto LABEL_144;
  }
LABEL_141:
  uint64_t v55 = 0;
  if ((v1 & 0x20) == 0) {
    goto LABEL_142;
  }
LABEL_85:
  float v56 = *((float *)this + 11);
  uint64_t v57 = LODWORD(v56);
  if (v56 == 0.0) {
    uint64_t v57 = 0;
  }
  if ((v1 & 0x40) == 0) {
    goto LABEL_143;
  }
LABEL_88:
  float v58 = *((float *)this + 12);
  uint64_t v59 = LODWORD(v58);
  if (v58 == 0.0) {
    uint64_t v59 = 0;
  }
  if ((v1 & 0x200) != 0)
  {
LABEL_91:
    float v60 = *((float *)this + 15);
    uint64_t v61 = LODWORD(v60);
    if (v60 == 0.0) {
      uint64_t v61 = 0;
    }
    if ((v1 & 0x400) != 0) {
      goto LABEL_94;
    }
LABEL_145:
    uint64_t v63 = 0;
    return v84 ^ v2 ^ v83 ^ v82 ^ v81 ^ v80 ^ v79 ^ v78 ^ v77 ^ v76 ^ v75 ^ v74 ^ v73 ^ v72 ^ v71 ^ v70 ^ v69 ^ v68 ^ v67 ^ v66 ^ v27 ^ v28 ^ v29 ^ v30 ^ v32 ^ v34 ^ v36 ^ v37 ^ v38 ^ v39 ^ v40 ^ v41 ^ v42 ^ v43 ^ v44 ^ v45 ^ v47 ^ v49 ^ v51 ^ v53 ^ v54 ^ v55 ^ v57 ^ v59 ^ v61 ^ v63;
  }
LABEL_144:
  uint64_t v61 = 0;
  if ((v1 & 0x400) == 0) {
    goto LABEL_145;
  }
LABEL_94:
  float v62 = *((float *)this + 16);
  uint64_t v63 = LODWORD(v62);
  if (v62 == 0.0) {
    uint64_t v63 = 0;
  }
  return v84 ^ v2 ^ v83 ^ v82 ^ v81 ^ v80 ^ v79 ^ v78 ^ v77 ^ v76 ^ v75 ^ v74 ^ v73 ^ v72 ^ v71 ^ v70 ^ v69 ^ v68 ^ v67 ^ v66 ^ v27 ^ v28 ^ v29 ^ v30 ^ v32 ^ v34 ^ v36 ^ v37 ^ v38 ^ v39 ^ v40 ^ v41 ^ v42 ^ v43 ^ v44 ^ v45 ^ v47 ^ v49 ^ v51 ^ v53 ^ v54 ^ v55 ^ v57 ^ v59 ^ v61 ^ v63;
}

void CMMsl::KappaMildImpactResult::~KappaMildImpactResult(CMMsl::KappaMildImpactResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaMildImpactResult::KappaMildImpactResult(uint64_t this, const CMMsl::KappaMildImpactResult *a2)
{
  *(void *)this = &unk_270642980;
  *(_DWORD *)(this + 28) = 0;
  char v2 = *((unsigned char *)a2 + 28);
  if (v2)
  {
    int v4 = *((_DWORD *)a2 + 2);
    char v3 = 1;
    *(unsigned char *)(this + 28) = 1;
    *(_DWORD *)(this + 8) = v4;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 5);
    v3 |= 8u;
    *(unsigned char *)(this + 28) = v3;
    *(_DWORD *)(this + 20) = v5;
    char v2 = *((unsigned char *)a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *((_DWORD *)a2 + 6);
    v3 |= 0x10u;
    *(unsigned char *)(this + 28) = v3;
    *(_DWORD *)(this + 24) = v6;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return this;
      }
LABEL_12:
      int v8 = *((_DWORD *)a2 + 4);
      *(unsigned char *)(this + 28) = v3 | 4;
      *(_DWORD *)(this + 16) = v8;
      return this;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 3);
  v3 |= 2u;
  *(unsigned char *)(this + 28) = v3;
  *(_DWORD *)(this + 12) = v7;
  if ((*((unsigned char *)a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return this;
}

uint64_t CMMsl::KappaMildImpactResult::operator=(uint64_t a1, const CMMsl::KappaMildImpactResult *a2)
{
  if ((const CMMsl::KappaMildImpactResult *)a1 != a2)
  {
    CMMsl::KappaMildImpactResult::KappaMildImpactResult((uint64_t)&v8, a2);
    int v3 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v11;
    int v11 = v3;
    uint64_t v4 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v12;
    uint64_t v12 = v4;
    uint64_t v5 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v9;
    uint64_t v9 = v5;
    int v6 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v10;
    int v10 = v6;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaMildImpactResult *a2, CMMsl::KappaMildImpactResult *a3)
{
  int v3 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v3;
  int v4 = *((_DWORD *)this + 2);
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)a2 + 2) = v4;
  int v5 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v5;
  int v6 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v6;
  float result = *((float *)this + 3);
  *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
  *((float *)a2 + 3) = result;
  int v8 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v8;
  return result;
}

float CMMsl::KappaMildImpactResult::KappaMildImpactResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642980;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  float result = *(float *)(a2 + 12);
  *(float *)(a1 + 12) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642980;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  float result = *(float *)(a2 + 12);
  *(float *)(a1 + 12) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KappaMildImpactResult::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v10[0] = &unk_270642980;
    int v3 = *(_DWORD *)(a2 + 20);
    int v4 = *(_DWORD *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a2 + 28) = 0;
    int v12 = *(_DWORD *)(a1 + 20);
    uint64_t v13 = *(void *)(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 8) = v7;
    v10[1] = v6;
    int v8 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v4;
    int v11 = v8;
    PB::Base::~Base((PB::Base *)v10);
  }
  return a1;
}

uint64_t CMMsl::KappaMildImpactResult::formatText(CMMsl::KappaMildImpactResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 28);
  if (v5)
  {
    PB::TextFormatter::format(a2, "configThreshold1", *((float *)this + 2));
    char v5 = *((unsigned char *)this + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*((unsigned char *)this + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "debugX", *((float *)this + 3));
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(a2, "debugY");
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "outputA", *((float *)this + 5));
  if ((*((unsigned char *)this + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(a2, "outputB");
LABEL_7:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaMildImpactResult::readFrom(CMMsl::KappaMildImpactResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_72;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 0x186A0u:
        *((unsigned char *)this + 28) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 2) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_61;
      case 0x186A1u:
        *((unsigned char *)this + 28) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 5) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_61;
      case 0x186A2u:
        *((unsigned char *)this + 28) |= 0x10u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_66;
            }
            unint64_t v34 = v20++;
            char v35 = *(unsigned char *)(v21 + v34);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v35 & 0x7F) << v32;
            if ((v35 & 0x80) == 0) {
              break;
            }
            v32 += 7;
            BOOL v14 = v33++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
LABEL_65:
              unint64_t v2 = v34 + 1;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v24) = 0;
          }
          goto LABEL_65;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_66;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        LODWORD(v24) = 0;
LABEL_66:
        *((_DWORD *)this + 6) = v24;
        break;
      case 0x186A3u:
        *((unsigned char *)this + 28) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 3) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_61:
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_38:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 0x186A4u:
        *((unsigned char *)this + 28) |= 4u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v27 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_71;
            }
            unint64_t v38 = v26++;
            char v39 = *(unsigned char *)(v27 + v38);
            *((void *)a2 + 1) = v26;
            v30 |= (unint64_t)(v39 & 0x7F) << v36;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v36 += 7;
            BOOL v14 = v37++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
LABEL_70:
              unint64_t v2 = v38 + 1;
              goto LABEL_71;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v30) = 0;
          }
          goto LABEL_70;
        }
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        do
        {
          unint64_t v2 = v26 + 1;
          *((void *)a2 + 1) = v26 + 1;
          char v31 = *(unsigned char *)(v27 + v26);
          v30 |= (unint64_t)(v31 & 0x7F) << v28;
          if ((v31 & 0x80) == 0) {
            goto LABEL_71;
          }
          v28 += 7;
          unint64_t v26 = v2;
          BOOL v14 = v29++ > 8;
        }
        while (!v14);
        LODWORD(v30) = 0;
LABEL_71:
        *((_DWORD *)this + 4) = v30;
        break;
      default:
        goto LABEL_19;
    }
LABEL_72:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaMildImpactResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 28);
  if (v4)
  {
    this = PB::Writer::write(a2, *(float *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = PB::Writer::write(a2, *(float *)(v3 + 12));
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return this;
  }
LABEL_11:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaMildImpactResult::hash_value(CMMsl::KappaMildImpactResult *this)
{
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    uint64_t v1 = 0;
    if ((*((unsigned char *)this + 28) & 8) != 0) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 28) & 0x10) != 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  float v8 = *((float *)this + 2);
  uint64_t v1 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v1 = 0;
  }
  if ((*((unsigned char *)this + 28) & 8) == 0) {
    goto LABEL_14;
  }
LABEL_3:
  float v2 = *((float *)this + 5);
  uint64_t v3 = LODWORD(v2);
  if (v2 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((unsigned char *)this + 28) & 0x10) != 0)
  {
LABEL_6:
    uint64_t v4 = *((int *)this + 6);
    if ((*((unsigned char *)this + 28) & 2) != 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v4 = 0;
  if ((*((unsigned char *)this + 28) & 2) != 0)
  {
LABEL_7:
    float v5 = *((float *)this + 3);
    uint64_t v6 = LODWORD(v5);
    if (v5 == 0.0) {
      uint64_t v6 = 0;
    }
    if ((*((unsigned char *)this + 28) & 4) != 0) {
      goto LABEL_10;
    }
LABEL_17:
    uint64_t v7 = 0;
    return v3 ^ v1 ^ v4 ^ v6 ^ v7;
  }
LABEL_16:
  uint64_t v6 = 0;
  if ((*((unsigned char *)this + 28) & 4) == 0) {
    goto LABEL_17;
  }
LABEL_10:
  uint64_t v7 = *((int *)this + 4);
  return v3 ^ v1 ^ v4 ^ v6 ^ v7;
}

void CMMsl::KappaPeakDetectorMapMagTimestamps::~KappaPeakDetectorMapMagTimestamps(CMMsl::KappaPeakDetectorMapMagTimestamps *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaPeakDetectorMapMagTimestamps::KappaPeakDetectorMapMagTimestamps(uint64_t this, const CMMsl::KappaPeakDetectorMapMagTimestamps *a2)
{
  *(void *)this = &unk_2706429B8;
  *(_DWORD *)(this + 44) = 0;
  char v2 = *((unsigned char *)a2 + 44);
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *((void *)a2 + 4);
    char v3 = 8;
    *(unsigned char *)(this + 44) = 8;
    *(void *)(this + 32) = v4;
    char v2 = *((unsigned char *)a2 + 44);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*((unsigned char *)a2 + 44))
  {
LABEL_5:
    uint64_t v5 = *((void *)a2 + 1);
    v3 |= 1u;
    *(unsigned char *)(this + 44) = v3;
    *(void *)(this + 8) = v5;
    char v2 = *((unsigned char *)a2 + 44);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v6 = *((void *)a2 + 2);
    v3 |= 2u;
    *(unsigned char *)(this + 44) = v3;
    *(void *)(this + 16) = v6;
    char v2 = *((unsigned char *)a2 + 44);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return this;
      }
LABEL_12:
      uint64_t v8 = *((void *)a2 + 3);
      *(unsigned char *)(this + 44) = v3 | 4;
      *(void *)(this + 24) = v8;
      return this;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 10);
  v3 |= 0x10u;
  *(unsigned char *)(this + 44) = v3;
  *(_DWORD *)(this + 40) = v7;
  if ((*((unsigned char *)a2 + 44) & 4) != 0) {
    goto LABEL_12;
  }
  return this;
}

uint64_t CMMsl::KappaPeakDetectorMapMagTimestamps::operator=(uint64_t a1, const CMMsl::KappaPeakDetectorMapMagTimestamps *a2)
{
  if ((const CMMsl::KappaPeakDetectorMapMagTimestamps *)a1 != a2)
  {
    CMMsl::KappaPeakDetectorMapMagTimestamps::KappaPeakDetectorMapMagTimestamps((uint64_t)&v8, a2);
    int v3 = *(_DWORD *)(a1 + 44);
    *(_DWORD *)(a1 + 44) = v12;
    int v12 = v3;
    long long v4 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v9;
    long long v9 = v4;
    int v5 = *(_DWORD *)(a1 + 40);
    *(_DWORD *)(a1 + 40) = v11;
    int v11 = v5;
    long long v6 = *(_OWORD *)(a1 + 24);
    *(_OWORD *)(a1 + 24) = v10;
    long long v10 = v6;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaPeakDetectorMapMagTimestamps *a2, CMMsl::KappaPeakDetectorMapMagTimestamps *a3)
{
  int v3 = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v3;
  uint64_t v4 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v4;
  uint64_t v5 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v5;
  uint64_t v6 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v6;
  float result = *((float *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((float *)a2 + 10) = result;
  uint64_t v8 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v8;
  return result;
}

float CMMsl::KappaPeakDetectorMapMagTimestamps::KappaPeakDetectorMapMagTimestamps(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_2706429B8;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  float result = *(float *)(a2 + 40);
  *(float *)(a1 + 40) = result;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return result;
}

{
  float result;

  *(void *)a1 = &unk_2706429B8;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  float result = *(float *)(a2 + 40);
  *(float *)(a1 + 40) = result;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return result;
}

uint64_t CMMsl::KappaPeakDetectorMapMagTimestamps::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    long long v10 = &unk_2706429B8;
    int v3 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a2 + 44) = 0;
    int v4 = *(_DWORD *)(a2 + 40);
    int v14 = *(_DWORD *)(a1 + 44);
    long long v5 = *(_OWORD *)(a2 + 8);
    long long v11 = *(_OWORD *)(a1 + 8);
    int v6 = *(_DWORD *)(a1 + 40);
    *(_DWORD *)(a1 + 40) = v4;
    int v13 = v6;
    long long v7 = *(_OWORD *)(a1 + 24);
    long long v8 = *(_OWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 44) = v3;
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v8;
    long long v12 = v7;
    PB::Base::~Base((PB::Base *)&v10);
  }
  return a1;
}

uint64_t CMMsl::KappaPeakDetectorMapMagTimestamps::formatText(CMMsl::KappaPeakDetectorMapMagTimestamps *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 44);
  if (v5)
  {
    PB::TextFormatter::format(a2, "epochFirstTimestamp");
    char v5 = *((unsigned char *)this + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*((unsigned char *)this + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  char v5 = *((unsigned char *)this + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(a2, "maxNormTimestamp");
  char v5 = *((unsigned char *)this + 44);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "maxNormValue", *((float *)this + 10));
  if ((*((unsigned char *)this + 44) & 8) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_7:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaPeakDetectorMapMagTimestamps::readFrom(CMMsl::KappaPeakDetectorMapMagTimestamps *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_26;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_21;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_26:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 44) |= 8u;
        unint64_t v21 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v22 = *(void *)a2;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_92;
            }
            unint64_t v47 = v21++;
            char v48 = *(unsigned char *)(v22 + v47);
            *((void *)a2 + 1) = v21;
            v25 |= (unint64_t)(v48 & 0x7F) << v45;
            if ((v48 & 0x80) == 0) {
              break;
            }
            v45 += 7;
            BOOL v14 = v46++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
LABEL_91:
              unint64_t v2 = v47 + 1;
              goto LABEL_92;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v25 = 0;
          }
          goto LABEL_91;
        }
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        do
        {
          unint64_t v2 = v21 + 1;
          *((void *)a2 + 1) = v21 + 1;
          char v26 = *(unsigned char *)(v22 + v21);
          v25 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            goto LABEL_92;
          }
          v23 += 7;
          unint64_t v21 = v2;
          BOOL v14 = v24++ > 8;
        }
        while (!v14);
        uint64_t v25 = 0;
LABEL_92:
        *((void *)this + 4) = v25;
        break;
      case 2u:
        *((unsigned char *)this + 44) |= 1u;
        unint64_t v27 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v28 = *(void *)a2;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              uint64_t v31 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_97;
            }
            unint64_t v51 = v27++;
            char v52 = *(unsigned char *)(v28 + v51);
            *((void *)a2 + 1) = v27;
            v31 |= (unint64_t)(v52 & 0x7F) << v49;
            if ((v52 & 0x80) == 0) {
              break;
            }
            v49 += 7;
            BOOL v14 = v50++ > 8;
            if (v14)
            {
              uint64_t v31 = 0;
LABEL_96:
              unint64_t v2 = v51 + 1;
              goto LABEL_97;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v31 = 0;
          }
          goto LABEL_96;
        }
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        do
        {
          unint64_t v2 = v27 + 1;
          *((void *)a2 + 1) = v27 + 1;
          char v32 = *(unsigned char *)(v28 + v27);
          v31 |= (unint64_t)(v32 & 0x7F) << v29;
          if ((v32 & 0x80) == 0) {
            goto LABEL_97;
          }
          v29 += 7;
          unint64_t v27 = v2;
          BOOL v14 = v30++ > 8;
        }
        while (!v14);
        uint64_t v31 = 0;
LABEL_97:
        *((void *)this + 1) = v31;
        break;
      case 3u:
        *((unsigned char *)this + 44) |= 2u;
        unint64_t v33 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v34 = *(void *)a2;
        if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v37 = 0;
          if (v2 <= v33) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v33)
            {
              uint64_t v37 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_102;
            }
            unint64_t v55 = v33++;
            char v56 = *(unsigned char *)(v34 + v55);
            *((void *)a2 + 1) = v33;
            v37 |= (unint64_t)(v56 & 0x7F) << v53;
            if ((v56 & 0x80) == 0) {
              break;
            }
            v53 += 7;
            BOOL v14 = v54++ > 8;
            if (v14)
            {
              uint64_t v37 = 0;
LABEL_101:
              unint64_t v2 = v55 + 1;
              goto LABEL_102;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v37 = 0;
          }
          goto LABEL_101;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        do
        {
          unint64_t v2 = v33 + 1;
          *((void *)a2 + 1) = v33 + 1;
          char v38 = *(unsigned char *)(v34 + v33);
          v37 |= (unint64_t)(v38 & 0x7F) << v35;
          if ((v38 & 0x80) == 0) {
            goto LABEL_102;
          }
          v35 += 7;
          unint64_t v33 = v2;
          BOOL v14 = v36++ > 8;
        }
        while (!v14);
        uint64_t v37 = 0;
LABEL_102:
        *((void *)this + 2) = v37;
        break;
      case 4u:
        *((unsigned char *)this + 44) |= 0x10u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 10) = *(_DWORD *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 5u:
        *((unsigned char *)this + 44) |= 4u;
        unint64_t v39 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v40 = *(void *)a2;
        if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
        {
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v43 = 0;
          if (v2 <= v39) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v39)
            {
              uint64_t v43 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_107;
            }
            unint64_t v59 = v39++;
            char v60 = *(unsigned char *)(v40 + v59);
            *((void *)a2 + 1) = v39;
            v43 |= (unint64_t)(v60 & 0x7F) << v57;
            if ((v60 & 0x80) == 0) {
              break;
            }
            v57 += 7;
            BOOL v14 = v58++ > 8;
            if (v14)
            {
              uint64_t v43 = 0;
LABEL_106:
              unint64_t v2 = v59 + 1;
              goto LABEL_107;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v43 = 0;
          }
          goto LABEL_106;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        do
        {
          unint64_t v2 = v39 + 1;
          *((void *)a2 + 1) = v39 + 1;
          char v44 = *(unsigned char *)(v40 + v39);
          v43 |= (unint64_t)(v44 & 0x7F) << v41;
          if ((v44 & 0x80) == 0) {
            goto LABEL_107;
          }
          v41 += 7;
          unint64_t v39 = v2;
          BOOL v14 = v42++ > 8;
        }
        while (!v14);
        uint64_t v43 = 0;
LABEL_107:
        *((void *)this + 3) = v43;
        break;
      default:
        goto LABEL_19;
    }
LABEL_21:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaPeakDetectorMapMagTimestamps::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 44);
  if ((v4 & 8) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 44) & 1) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = PB::Writer::write(a2, *(float *)(v3 + 40));
    if ((*(unsigned char *)(v3 + 44) & 4) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return this;
  }
LABEL_11:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaPeakDetectorMapMagTimestamps::hash_value(CMMsl::KappaPeakDetectorMapMagTimestamps *this)
{
  if ((*((unsigned char *)this + 44) & 8) != 0)
  {
    uint64_t v1 = *((void *)this + 4);
    if (*((unsigned char *)this + 44))
    {
LABEL_3:
      uint64_t v2 = *((void *)this + 1);
      if ((*((unsigned char *)this + 44) & 2) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v1 = 0;
    if (*((unsigned char *)this + 44)) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  if ((*((unsigned char *)this + 44) & 2) != 0)
  {
LABEL_4:
    uint64_t v3 = *((void *)this + 2);
    if ((*((unsigned char *)this + 44) & 0x10) != 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 44) & 0x10) != 0)
  {
LABEL_5:
    float v4 = *((float *)this + 10);
    uint64_t v5 = LODWORD(v4);
    if (v4 == 0.0) {
      uint64_t v5 = 0;
    }
    if ((*((unsigned char *)this + 44) & 4) != 0) {
      goto LABEL_8;
    }
LABEL_13:
    uint64_t v6 = 0;
    return v2 ^ v1 ^ v3 ^ v5 ^ v6;
  }
LABEL_12:
  uint64_t v5 = 0;
  if ((*((unsigned char *)this + 44) & 4) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v6 = *((void *)this + 3);
  return v2 ^ v1 ^ v3 ^ v5 ^ v6;
}

void CMMsl::KappaPeakDetectorMapResult::~KappaPeakDetectorMapResult(CMMsl::KappaPeakDetectorMapResult *this)
{
  *(void *)this = &unk_2706429F0;
  uint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    *((void *)this + 5) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 1);
  if (v3)
  {
    *((void *)this + 2) = v3;
    operator delete(v3);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::KappaPeakDetectorMapResult::~KappaPeakDetectorMapResult(this);
  JUMPOUT(0x25A2B2850);
}

CMMsl::KappaPeakDetectorMapResult *CMMsl::KappaPeakDetectorMapResult::KappaPeakDetectorMapResult(CMMsl::KappaPeakDetectorMapResult *this, const CMMsl::KappaPeakDetectorMapResult *a2)
{
  *(void *)this = &unk_2706429F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  float v4 = (void *)((char *)this + 8);
  *((_DWORD *)this + 38) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x80) != 0)
  {
    int v7 = *((_DWORD *)a2 + 28);
    int v6 = 128;
    *((_DWORD *)this + 38) = 128;
    *((_DWORD *)this + 28) = v7;
    int v5 = *((_DWORD *)a2 + 38);
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = 0;
  if ((v5 & 8) != 0)
  {
LABEL_5:
    uint64_t v8 = *((void *)a2 + 10);
    v6 |= 8u;
    *((_DWORD *)this + 38) = v6;
    *((void *)this + 10) = v8;
    int v5 = *((_DWORD *)a2 + 38);
  }
LABEL_6:
  if ((v5 & 0x800) != 0)
  {
    int v13 = *((_DWORD *)a2 + 32);
    v6 |= 0x800u;
    *((_DWORD *)this + 38) = v6;
    *((_DWORD *)this + 32) = v13;
    int v5 = *((_DWORD *)a2 + 38);
    if ((v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v5 & 0x4000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v14 = *((void *)a2 + 11);
  v6 |= 0x10u;
  *((_DWORD *)this + 38) = v6;
  *((void *)this + 11) = v14;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x4000) == 0)
  {
LABEL_9:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v15 = *((_DWORD *)a2 + 35);
  v6 |= 0x4000u;
  *((_DWORD *)this + 38) = v6;
  *((_DWORD *)this + 35) = v15;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x8000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v16 = *((_DWORD *)a2 + 36);
  v6 |= 0x8000u;
  *((_DWORD *)this + 38) = v6;
  *((_DWORD *)this + 36) = v16;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v17 = *((_DWORD *)a2 + 30);
  v6 |= 0x200u;
  *((_DWORD *)this + 38) = v6;
  *((_DWORD *)this + 30) = v17;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v18 = *((_DWORD *)a2 + 31);
  v6 |= 0x400u;
  *((_DWORD *)this + 38) = v6;
  *((_DWORD *)this + 31) = v18;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x20) == 0)
  {
LABEL_13:
    if ((v5 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v19 = *((void *)a2 + 12);
  v6 |= 0x20u;
  *((_DWORD *)this + 38) = v6;
  *((void *)this + 12) = v19;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x100) == 0)
  {
LABEL_14:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v20 = *((_DWORD *)a2 + 29);
  v6 |= 0x100u;
  *((_DWORD *)this + 38) = v6;
  *((_DWORD *)this + 29) = v20;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x10000) == 0)
  {
LABEL_15:
    if ((v5 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v21 = *((unsigned char *)a2 + 148);
  v6 |= 0x10000u;
  *((_DWORD *)this + 38) = v6;
  *((unsigned char *)this + 148) = v21;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x40) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v22 = *((void *)a2 + 13);
  v6 |= 0x40u;
  *((_DWORD *)this + 38) = v6;
  *((void *)this + 13) = v22;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 0x1000) == 0)
  {
LABEL_17:
    if ((v5 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v23 = *((_DWORD *)a2 + 33);
  v6 |= 0x1000u;
  *((_DWORD *)this + 38) = v6;
  *((_DWORD *)this + 33) = v23;
  int v5 = *((_DWORD *)a2 + 38);
  if ((v5 & 4) == 0)
  {
LABEL_18:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_38:
  uint64_t v24 = *((void *)a2 + 9);
  v6 |= 4u;
  *((_DWORD *)this + 38) = v6;
  *((void *)this + 9) = v24;
  if ((*((_DWORD *)a2 + 38) & 0x2000) != 0)
  {
LABEL_19:
    int v9 = *((_DWORD *)a2 + 34);
    *((_DWORD *)this + 38) = v6 | 0x2000;
    *((_DWORD *)this + 34) = v9;
  }
LABEL_20:
  if (this != a2)
  {
    sub_2572C73EC(v4, *((char **)a2 + 1), *((char **)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
    sub_2572C75B4((void *)this + 4, *((char **)a2 + 4), *((char **)a2 + 5), (uint64_t)(*((void *)a2 + 5) - *((void *)a2 + 4)) >> 2);
  }
  int v10 = *((_DWORD *)a2 + 38);
  if ((v10 & 1) == 0)
  {
    if ((v10 & 2) == 0) {
      goto LABEL_24;
    }
LABEL_41:
    uint64_t v26 = *((void *)a2 + 8);
    *((_DWORD *)this + 38) |= 2u;
    *((void *)this + 8) = v26;
    if ((*((_DWORD *)a2 + 38) & 0x20000) == 0) {
      return this;
    }
    goto LABEL_25;
  }
  uint64_t v25 = *((void *)a2 + 7);
  *((_DWORD *)this + 38) |= 1u;
  *((void *)this + 7) = v25;
  int v10 = *((_DWORD *)a2 + 38);
  if ((v10 & 2) != 0) {
    goto LABEL_41;
  }
LABEL_24:
  if ((v10 & 0x20000) != 0)
  {
LABEL_25:
    char v11 = *((unsigned char *)a2 + 149);
    *((_DWORD *)this + 38) |= 0x20000u;
    *((unsigned char *)this + 149) = v11;
  }
  return this;
}

CMMsl *CMMsl::KappaPeakDetectorMapResult::operator=(CMMsl *a1, const CMMsl::KappaPeakDetectorMapResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaPeakDetectorMapResult::KappaPeakDetectorMapResult((CMMsl::KappaPeakDetectorMapResult *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaPeakDetectorMapResult *)v5, v3);
    CMMsl::KappaPeakDetectorMapResult::~KappaPeakDetectorMapResult((CMMsl::KappaPeakDetectorMapResult *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaPeakDetectorMapResult *a2, CMMsl::KappaPeakDetectorMapResult *a3)
{
  int v3 = *((_DWORD *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((_DWORD *)a2 + 38) = v3;
  uint64_t v4 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v4;
  LODWORD(v4) = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v4;
  uint64_t v5 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v5;
  uint64_t v6 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 148);
  *((unsigned char *)this + 148) = *((unsigned char *)a2 + 148);
  *((unsigned char *)a2 + 148) = v6;
  uint64_t v7 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v7;
  LODWORD(v7) = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v7;
  uint64_t v8 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v8;
  uint64_t v9 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v9;
  uint64_t v10 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v10;
  uint64_t v11 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v11;
  uint64_t v12 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v12;
  uint64_t v13 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v13;
  uint64_t v14 = *((void *)this + 6);
  uint64_t v15 = *((void *)this + 7);
  uint64_t v16 = *((void *)a2 + 7);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)this + 7) = v16;
  int v17 = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v17;
  int v18 = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v18;
  int v19 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v19;
  int v20 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v20;
  int v21 = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v21;
  int v22 = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v22;
  float result = *((float *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((float *)a2 + 34) = result;
  *((void *)a2 + 6) = v14;
  *((void *)a2 + 7) = v15;
  uint64_t v24 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 149);
  *((unsigned char *)this + 149) = *((unsigned char *)a2 + 149);
  *((unsigned char *)a2 + 149) = v24;
  return result;
}

uint64_t CMMsl::KappaPeakDetectorMapResult::KappaPeakDetectorMapResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_2706429F0;
  uint64_t v4 = a1 + 32;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a2 + 152) = 0;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  sub_2572C7560(a1 + 8, (__n128 *)(a2 + 8));
  sub_2572C7560(v4, (__n128 *)(a2 + 32));
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 149) = *(unsigned char *)(a2 + 149);
  return a1;
}

CMMsl *CMMsl::KappaPeakDetectorMapResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaPeakDetectorMapResult::KappaPeakDetectorMapResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaPeakDetectorMapResult *)v5, v3);
    CMMsl::KappaPeakDetectorMapResult::~KappaPeakDetectorMapResult((CMMsl::KappaPeakDetectorMapResult *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaPeakDetectorMapResult::formatText(CMMsl::KappaPeakDetectorMapResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  if ((*((unsigned char *)this + 152) & 0x80) != 0) {
    PB::TextFormatter::format(a2, "accelPeakThreshold", *((float *)this + 28));
  }
  uint64_t v5 = *((void *)this + 1);
  uint64_t v6 = *((void *)this + 2);
  while (v5 != v6)
  {
    v5 += 8;
    PB::TextFormatter::format(a2, "allMaxNormTimestamps");
  }
  uint64_t v7 = (float *)*((void *)this + 4);
  uint64_t v8 = (float *)*((void *)this + 5);
  while (v7 != v8)
  {
    float v9 = *v7++;
    PB::TextFormatter::format(a2, "allMaxNormValues", v9);
  }
  int v10 = *((_DWORD *)this + 38);
  if (v10)
  {
    PB::TextFormatter::format(a2, "epochFirstTimestamp");
    int v10 = *((_DWORD *)this + 38);
    if ((v10 & 2) == 0)
    {
LABEL_9:
      if ((v10 & 0x10000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_30;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x10000) == 0)
  {
LABEL_10:
    if ((v10 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(a2, "isMAPDetected");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x100) == 0)
  {
LABEL_11:
    if ((v10 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(a2, "magnitudePercentileThreshold", *((float *)this + 29));
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x200) == 0)
  {
LABEL_12:
    if ((v10 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(a2, "magnitudePeriodicityLowerPercentile", *((float *)this + 30));
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x400) == 0)
  {
LABEL_13:
    if ((v10 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(a2, "magnitudePeriodicityUpperPercentile", *((float *)this + 31));
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x800) == 0)
  {
LABEL_14:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(a2, "minNumPeaks");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x1000) == 0)
  {
LABEL_15:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(a2, "numPeaks");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x2000) == 0)
  {
LABEL_16:
    if ((v10 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(a2, "peakMagnitudePercentileDiff", *((float *)this + 34));
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x20000) == 0)
  {
LABEL_17:
    if ((v10 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(a2, "peakSeparation");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 4) == 0)
  {
LABEL_18:
    if ((v10 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(a2, "peakTimeDeltaPercentileDiff");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 8) == 0)
  {
LABEL_19:
    if ((v10 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(a2, "peakToPeakMinimumSeparation");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x10) == 0)
  {
LABEL_20:
    if ((v10 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(a2, "peakToPeakSeparationThreshold");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x20) == 0)
  {
LABEL_21:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(a2, "timePercentileDiffThreshold");
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x4000) == 0)
  {
LABEL_22:
    if ((v10 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(a2, "timePeriodicityLowerPercentile", *((float *)this + 35));
  int v10 = *((_DWORD *)this + 38);
  if ((v10 & 0x8000) == 0)
  {
LABEL_23:
    if ((v10 & 0x40) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_43:
  PB::TextFormatter::format(a2, "timePeriodicityUpperPercentile", *((float *)this + 36));
  if ((*((_DWORD *)this + 38) & 0x40) != 0) {
LABEL_24:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_25:
  return MEMORY[0x270F587F0](a2);
}

BOOL CMMsl::KappaPeakDetectorMapResult::readFrom(CMMsl::KappaPeakDetectorMapResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v16 = v2 + 1;
        char v17 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v16;
        v11 |= (unint64_t)(v17 & 0x7F) << v14;
        if ((v17 & 0x80) == 0) {
          goto LABEL_21;
        }
        v14 += 7;
        unint64_t v2 = v16;
        BOOL v97 = v15++ > 8;
        if (v97) {
          goto LABEL_19;
        }
      }
      int v4 = 1;
      *((unsigned char *)a2 + 24) = 1;
      return v4 == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v97 = v10++ > 8;
      if (v97) {
        goto LABEL_19;
      }
    }
LABEL_21:
    int v18 = v11 & 7;
    if (v18 == 4)
    {
      int v4 = 0;
      return v4 == 0;
    }
    unint64_t v19 = v11 >> 3;
    if ((int)(v11 >> 3) > 100) {
      break;
    }
    switch((int)v19)
    {
      case 1:
        *((_DWORD *)this + 38) |= 0x80u;
        unint64_t v20 = *((void *)a2 + 1);
        if (v20 > 0xFFFFFFFFFFFFFFFBLL || v20 + 4 > *((void *)a2 + 2)) {
          goto LABEL_340;
        }
        *((_DWORD *)this + 28) = *(_DWORD *)(*(void *)a2 + v20);
        goto LABEL_342;
      case 2:
        *((_DWORD *)this + 38) |= 8u;
        unint64_t v37 = *((void *)a2 + 1);
        unint64_t v38 = *((void *)a2 + 2);
        uint64_t v39 = *(void *)a2;
        if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
        {
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          do
          {
            unint64_t v43 = v37 + 1;
            *((void *)a2 + 1) = v37 + 1;
            char v44 = *(unsigned char *)(v39 + v37);
            v42 |= (unint64_t)(v44 & 0x7F) << v40;
            if ((v44 & 0x80) == 0) {
              goto LABEL_289;
            }
            v40 += 7;
            unint64_t v37 = v43;
            BOOL v97 = v41++ > 8;
          }
          while (!v97);
LABEL_204:
          uint64_t v42 = 0;
          goto LABEL_289;
        }
        char v154 = 0;
        unsigned int v155 = 0;
        uint64_t v42 = 0;
        if (v38 <= v37) {
          unint64_t v38 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v38 == v37)
          {
            uint64_t v42 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v156 = v37 + 1;
            char v157 = *(unsigned char *)(v39 + v37);
            *((void *)a2 + 1) = v156;
            v42 |= (unint64_t)(v157 & 0x7F) << v154;
            if (v157 < 0)
            {
              v154 += 7;
              unint64_t v37 = v156;
              BOOL v97 = v155++ > 8;
              if (v97) {
                goto LABEL_204;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v42 = 0;
            }
          }
          break;
        }
LABEL_289:
        *((void *)this + 10) = v42;
        goto LABEL_347;
      case 3:
        *((_DWORD *)this + 38) |= 0x800u;
        unint64_t v45 = *((void *)a2 + 1);
        unint64_t v46 = *((void *)a2 + 2);
        uint64_t v47 = *(void *)a2;
        if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
        {
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          do
          {
            unint64_t v51 = v45 + 1;
            *((void *)a2 + 1) = v45 + 1;
            char v52 = *(unsigned char *)(v47 + v45);
            v50 |= (unint64_t)(v52 & 0x7F) << v48;
            if ((v52 & 0x80) == 0) {
              goto LABEL_292;
            }
            v48 += 7;
            unint64_t v45 = v51;
            BOOL v97 = v49++ > 8;
          }
          while (!v97);
LABEL_211:
          LODWORD(v50) = 0;
          goto LABEL_292;
        }
        char v158 = 0;
        unsigned int v159 = 0;
        uint64_t v50 = 0;
        if (v46 <= v45) {
          unint64_t v46 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v46 == v45)
          {
            LODWORD(v50) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v160 = v45 + 1;
            char v161 = *(unsigned char *)(v47 + v45);
            *((void *)a2 + 1) = v160;
            v50 |= (unint64_t)(v161 & 0x7F) << v158;
            if (v161 < 0)
            {
              v158 += 7;
              unint64_t v45 = v160;
              BOOL v97 = v159++ > 8;
              if (v97) {
                goto LABEL_211;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v50) = 0;
            }
          }
          break;
        }
LABEL_292:
        *((_DWORD *)this + 32) = v50;
        goto LABEL_347;
      case 4:
        *((_DWORD *)this + 38) |= 0x10u;
        unint64_t v53 = *((void *)a2 + 1);
        unint64_t v54 = *((void *)a2 + 2);
        uint64_t v55 = *(void *)a2;
        if (v53 <= 0xFFFFFFFFFFFFFFF5 && v53 + 10 <= v54)
        {
          char v56 = 0;
          unsigned int v57 = 0;
          uint64_t v58 = 0;
          do
          {
            unint64_t v59 = v53 + 1;
            *((void *)a2 + 1) = v53 + 1;
            char v60 = *(unsigned char *)(v55 + v53);
            v58 |= (unint64_t)(v60 & 0x7F) << v56;
            if ((v60 & 0x80) == 0) {
              goto LABEL_295;
            }
            v56 += 7;
            unint64_t v53 = v59;
            BOOL v97 = v57++ > 8;
          }
          while (!v97);
LABEL_218:
          uint64_t v58 = 0;
          goto LABEL_295;
        }
        char v162 = 0;
        unsigned int v163 = 0;
        uint64_t v58 = 0;
        if (v54 <= v53) {
          unint64_t v54 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v54 == v53)
          {
            uint64_t v58 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v164 = v53 + 1;
            char v165 = *(unsigned char *)(v55 + v53);
            *((void *)a2 + 1) = v164;
            v58 |= (unint64_t)(v165 & 0x7F) << v162;
            if (v165 < 0)
            {
              v162 += 7;
              unint64_t v53 = v164;
              BOOL v97 = v163++ > 8;
              if (v97) {
                goto LABEL_218;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v58 = 0;
            }
          }
          break;
        }
LABEL_295:
        *((void *)this + 11) = v58;
        goto LABEL_347;
      case 5:
        *((_DWORD *)this + 38) |= 0x4000u;
        unint64_t v61 = *((void *)a2 + 1);
        if (v61 > 0xFFFFFFFFFFFFFFFBLL || v61 + 4 > *((void *)a2 + 2)) {
          goto LABEL_340;
        }
        *((_DWORD *)this + 35) = *(_DWORD *)(*(void *)a2 + v61);
        goto LABEL_342;
      case 6:
        *((_DWORD *)this + 38) |= 0x8000u;
        unint64_t v62 = *((void *)a2 + 1);
        if (v62 > 0xFFFFFFFFFFFFFFFBLL || v62 + 4 > *((void *)a2 + 2)) {
          goto LABEL_340;
        }
        *((_DWORD *)this + 36) = *(_DWORD *)(*(void *)a2 + v62);
        goto LABEL_342;
      case 7:
        *((_DWORD *)this + 38) |= 0x200u;
        unint64_t v63 = *((void *)a2 + 1);
        if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)a2 + 2)) {
          goto LABEL_340;
        }
        *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v63);
        goto LABEL_342;
      case 8:
        *((_DWORD *)this + 38) |= 0x400u;
        unint64_t v64 = *((void *)a2 + 1);
        if (v64 > 0xFFFFFFFFFFFFFFFBLL || v64 + 4 > *((void *)a2 + 2)) {
          goto LABEL_340;
        }
        *((_DWORD *)this + 31) = *(_DWORD *)(*(void *)a2 + v64);
        goto LABEL_342;
      case 9:
        *((_DWORD *)this + 38) |= 0x20u;
        unint64_t v65 = *((void *)a2 + 1);
        unint64_t v66 = *((void *)a2 + 2);
        uint64_t v67 = *(void *)a2;
        if (v65 <= 0xFFFFFFFFFFFFFFF5 && v65 + 10 <= v66)
        {
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          do
          {
            unint64_t v71 = v65 + 1;
            *((void *)a2 + 1) = v65 + 1;
            char v72 = *(unsigned char *)(v67 + v65);
            v70 |= (unint64_t)(v72 & 0x7F) << v68;
            if ((v72 & 0x80) == 0) {
              goto LABEL_298;
            }
            v68 += 7;
            unint64_t v65 = v71;
            BOOL v97 = v69++ > 8;
          }
          while (!v97);
LABEL_225:
          uint64_t v70 = 0;
          goto LABEL_298;
        }
        char v166 = 0;
        unsigned int v167 = 0;
        uint64_t v70 = 0;
        if (v66 <= v65) {
          unint64_t v66 = *((void *)a2 + 1);
        }
        break;
      case 10:
        *((_DWORD *)this + 38) |= 0x100u;
        unint64_t v73 = *((void *)a2 + 1);
        if (v73 > 0xFFFFFFFFFFFFFFFBLL || v73 + 4 > *((void *)a2 + 2)) {
          goto LABEL_340;
        }
        *((_DWORD *)this + 29) = *(_DWORD *)(*(void *)a2 + v73);
        goto LABEL_342;
      default:
        goto LABEL_19;
    }
    while (1)
    {
      if (v66 == v65)
      {
        uint64_t v70 = 0;
        *((unsigned char *)a2 + 24) = 1;
        goto LABEL_298;
      }
      unint64_t v168 = v65 + 1;
      char v169 = *(unsigned char *)(v67 + v65);
      *((void *)a2 + 1) = v168;
      v70 |= (unint64_t)(v169 & 0x7F) << v166;
      if ((v169 & 0x80) == 0) {
        break;
      }
      v166 += 7;
      unint64_t v65 = v168;
      BOOL v97 = v167++ > 8;
      if (v97) {
        goto LABEL_225;
      }
    }
    if (*((unsigned char *)a2 + 24)) {
      uint64_t v70 = 0;
    }
LABEL_298:
    *((void *)this + 12) = v70;
LABEL_347:
    unint64_t v2 = *((void *)a2 + 1);
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  switch((int)v19)
  {
    case 201:
      *((_DWORD *)this + 38) |= 0x1000u;
      unint64_t v21 = *((void *)a2 + 1);
      unint64_t v22 = *((void *)a2 + 2);
      uint64_t v23 = *(void *)a2;
      if (v21 <= 0xFFFFFFFFFFFFFFF5 && v21 + 10 <= v22)
      {
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        do
        {
          unint64_t v27 = v21 + 1;
          *((void *)a2 + 1) = v21 + 1;
          char v28 = *(unsigned char *)(v23 + v21);
          v26 |= (unint64_t)(v28 & 0x7F) << v24;
          if ((v28 & 0x80) == 0) {
            goto LABEL_283;
          }
          v24 += 7;
          unint64_t v21 = v27;
          BOOL v97 = v25++ > 8;
        }
        while (!v97);
LABEL_190:
        LODWORD(v26) = 0;
        goto LABEL_283;
      }
      char v146 = 0;
      unsigned int v147 = 0;
      uint64_t v26 = 0;
      if (v22 <= v21) {
        unint64_t v22 = *((void *)a2 + 1);
      }
      while (2)
      {
        if (v22 == v21)
        {
          LODWORD(v26) = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v148 = v21 + 1;
          char v149 = *(unsigned char *)(v23 + v21);
          *((void *)a2 + 1) = v148;
          v26 |= (unint64_t)(v149 & 0x7F) << v146;
          if (v149 < 0)
          {
            v146 += 7;
            unint64_t v21 = v148;
            BOOL v97 = v147++ > 8;
            if (v97) {
              goto LABEL_190;
            }
            continue;
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v26) = 0;
          }
        }
        break;
      }
LABEL_283:
      *((_DWORD *)this + 33) = v26;
      goto LABEL_347;
    case 202:
      *((_DWORD *)this + 38) |= 4u;
      unint64_t v74 = *((void *)a2 + 1);
      unint64_t v75 = *((void *)a2 + 2);
      uint64_t v76 = *(void *)a2;
      if (v74 <= 0xFFFFFFFFFFFFFFF5 && v74 + 10 <= v75)
      {
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v79 = 0;
        do
        {
          unint64_t v80 = v74 + 1;
          *((void *)a2 + 1) = v74 + 1;
          char v81 = *(unsigned char *)(v76 + v74);
          v79 |= (unint64_t)(v81 & 0x7F) << v77;
          if ((v81 & 0x80) == 0) {
            goto LABEL_301;
          }
          v77 += 7;
          unint64_t v74 = v80;
          BOOL v97 = v78++ > 8;
        }
        while (!v97);
LABEL_232:
        uint64_t v79 = 0;
        goto LABEL_301;
      }
      char v170 = 0;
      unsigned int v171 = 0;
      uint64_t v79 = 0;
      if (v75 <= v74) {
        unint64_t v75 = *((void *)a2 + 1);
      }
      while (2)
      {
        if (v75 == v74)
        {
          uint64_t v79 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v172 = v74 + 1;
          char v173 = *(unsigned char *)(v76 + v74);
          *((void *)a2 + 1) = v172;
          v79 |= (unint64_t)(v173 & 0x7F) << v170;
          if (v173 < 0)
          {
            v170 += 7;
            unint64_t v74 = v172;
            BOOL v97 = v171++ > 8;
            if (v97) {
              goto LABEL_232;
            }
            continue;
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v79 = 0;
          }
        }
        break;
      }
LABEL_301:
      *((void *)this + 9) = v79;
      goto LABEL_347;
    case 203:
      *((_DWORD *)this + 38) |= 0x2000u;
      unint64_t v82 = *((void *)a2 + 1);
      if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)a2 + 2)) {
        goto LABEL_340;
      }
      *((_DWORD *)this + 34) = *(_DWORD *)(*(void *)a2 + v82);
      goto LABEL_342;
    case 204:
      if (v18 != 2)
      {
        uint64_t v175 = (char *)*((void *)this + 2);
        unint64_t v174 = *((void *)this + 3);
        if ((unint64_t)v175 >= v174)
        {
          v188 = (char *)*((void *)this + 1);
          uint64_t v189 = (v175 - v188) >> 3;
          unint64_t v190 = v189 + 1;
          if ((unint64_t)(v189 + 1) >> 61) {
LABEL_357:
          }
            sub_2570AFD0C();
          uint64_t v191 = v174 - (void)v188;
          if (v191 >> 2 > v190) {
            unint64_t v190 = v191 >> 2;
          }
          if ((unint64_t)v191 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v192 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v192 = v190;
          }
          if (v192)
          {
            unint64_t v192 = (unint64_t)sub_2572C7528(v192);
            v188 = (char *)*((void *)this + 1);
            uint64_t v175 = (char *)*((void *)this + 2);
          }
          else
          {
            uint64_t v193 = 0;
          }
          v200 = (void *)(v192 + 8 * v189);
          void *v200 = 0;
          uint64_t v176 = v200 + 1;
          while (v175 != v188)
          {
            uint64_t v201 = *((void *)v175 - 1);
            v175 -= 8;
            *--v200 = v201;
          }
          *((void *)this + 1) = v200;
          *((void *)this + 2) = v176;
          *((void *)this + 3) = v192 + 8 * v193;
          if (v188) {
            operator delete(v188);
          }
        }
        else
        {
          *(void *)uint64_t v175 = 0;
          uint64_t v176 = v175 + 8;
        }
        *((void *)this + 2) = v176;
        unint64_t v202 = *((void *)a2 + 1);
        unint64_t v203 = *((void *)a2 + 2);
        uint64_t v204 = *(void *)a2;
        char v205 = 0;
        unsigned int v206 = 0;
        if (v202 > 0xFFFFFFFFFFFFFFF5 || v202 + 10 > v203)
        {
          uint64_t v210 = 0;
          if (v203 <= v202) {
            unint64_t v203 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v203 == v202)
            {
              uint64_t v210 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_346;
            }
            unint64_t v208 = v202 + 1;
            char v209 = *(unsigned char *)(v204 + v202);
            *((void *)a2 + 1) = v208;
            v210 |= (unint64_t)(v209 & 0x7F) << v205;
            if ((v209 & 0x80) == 0) {
              break;
            }
            v205 += 7;
            unint64_t v202 = v208;
            BOOL v97 = v206++ > 8;
            if (v97)
            {
LABEL_331:
              uint64_t v210 = 0;
              goto LABEL_346;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v210 = 0;
          }
        }
        else
        {
          uint64_t v210 = 0;
          while (1)
          {
            unint64_t v211 = v202 + 1;
            *((void *)a2 + 1) = v202 + 1;
            char v212 = *(unsigned char *)(v204 + v202);
            v210 |= (unint64_t)(v212 & 0x7F) << v205;
            if ((v212 & 0x80) == 0) {
              break;
            }
            v205 += 7;
            unint64_t v202 = v211;
            BOOL v97 = v206++ > 8;
            if (v97) {
              goto LABEL_331;
            }
          }
        }
LABEL_346:
        *(v176 - 1) = v210;
        goto LABEL_347;
      }
      if (PB::Reader::placeMark()) {
        return 0;
      }
      if (*((void *)a2 + 1) < *((void *)a2 + 2) && !*((unsigned char *)a2 + 24))
      {
        uint64_t v83 = (char *)*((void *)this + 2);
        do
        {
          unint64_t v84 = *((void *)this + 3);
          if ((unint64_t)v83 >= v84)
          {
            unint64_t v85 = (char *)*((void *)this + 1);
            uint64_t v86 = (v83 - v85) >> 3;
            unint64_t v87 = v86 + 1;
            if ((unint64_t)(v86 + 1) >> 61) {
              goto LABEL_357;
            }
            uint64_t v88 = v84 - (void)v85;
            if (v88 >> 2 > v87) {
              unint64_t v87 = v88 >> 2;
            }
            if ((unint64_t)v88 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v89 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v89 = v87;
            }
            if (v89)
            {
              unint64_t v89 = (unint64_t)sub_2572C7528(v89);
              unint64_t v85 = (char *)*((void *)this + 1);
              uint64_t v83 = (char *)*((void *)this + 2);
            }
            else
            {
              uint64_t v90 = 0;
            }
            int v91 = (void *)(v89 + 8 * v86);
            *int v91 = 0;
            BOOL v92 = (char *)(v91 + 1);
            while (v83 != v85)
            {
              uint64_t v93 = *((void *)v83 - 1);
              v83 -= 8;
              *--int v91 = v93;
            }
            *((void *)this + 1) = v91;
            *((void *)this + 2) = v92;
            *((void *)this + 3) = v89 + 8 * v90;
            if (v85) {
              operator delete(v85);
            }
            uint64_t v83 = v92;
          }
          else
          {
            *(void *)uint64_t v83 = 0;
            v83 += 8;
          }
          *((void *)this + 2) = v83;
          unint64_t v95 = *((void *)a2 + 1);
          unint64_t v94 = *((void *)a2 + 2);
          uint64_t v96 = *(void *)a2;
          BOOL v97 = v95 > 0xFFFFFFFFFFFFFFF5 || v95 + 10 > v94;
          if (!v97)
          {
            char v103 = 0;
            unsigned int v104 = 0;
            uint64_t v105 = 0;
            while (1)
            {
              unint64_t v106 = v95 + 1;
              *((void *)a2 + 1) = v95 + 1;
              char v107 = *(unsigned char *)(v96 + v95);
              v105 |= (unint64_t)(v107 & 0x7F) << v103;
              if ((v107 & 0x80) == 0) {
                goto LABEL_139;
              }
              v103 += 7;
              unint64_t v95 = v106;
              BOOL v97 = v104++ > 8;
              if (v97)
              {
                uint64_t v105 = 0;
                goto LABEL_139;
              }
            }
          }
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v105 = 0;
          if (v94 <= v95) {
            uint64_t v100 = *((void *)a2 + 1);
          }
          else {
            uint64_t v100 = *((void *)a2 + 2);
          }
          while (1)
          {
            if (v100 == v95)
            {
              *((unsigned char *)a2 + 24) = 1;
              *((void *)v83 - 1) = 0;
              goto LABEL_309;
            }
            unint64_t v101 = v95++;
            char v102 = *(unsigned char *)(v96 + v101);
            *((void *)a2 + 1) = v95;
            v105 |= (unint64_t)(v102 & 0x7F) << v98;
            if ((v102 & 0x80) == 0) {
              break;
            }
            v98 += 7;
            BOOL v97 = v99++ > 8;
            if (v97)
            {
              uint64_t v105 = 0;
              goto LABEL_138;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v105 = 0;
          }
LABEL_138:
          unint64_t v106 = v101 + 1;
LABEL_139:
          *((void *)v83 - 1) = v105;
        }
        while (v106 < v94 && !*((unsigned char *)a2 + 24));
      }
      goto LABEL_309;
    case 205:
      if (v18 != 2)
      {
        uint64_t v178 = (char *)*((void *)this + 5);
        unint64_t v177 = *((void *)this + 6);
        if ((unint64_t)v178 >= v177)
        {
          v194 = (char *)*((void *)this + 4);
          uint64_t v195 = (v178 - v194) >> 2;
          unint64_t v196 = v195 + 1;
          if ((unint64_t)(v195 + 1) >> 62) {
LABEL_356:
          }
            sub_2570AFD0C();
          uint64_t v197 = v177 - (void)v194;
          if (v197 >> 1 > v196) {
            unint64_t v196 = v197 >> 1;
          }
          if ((unint64_t)v197 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v198 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v198 = v196;
          }
          if (v198)
          {
            unint64_t v198 = (unint64_t)sub_2572C76F0(v198);
            v194 = (char *)*((void *)this + 4);
            uint64_t v178 = (char *)*((void *)this + 5);
          }
          else
          {
            uint64_t v199 = 0;
          }
          v213 = (_DWORD *)(v198 + 4 * v195);
          _DWORD *v213 = 0;
          uint64_t v179 = v213 + 1;
          while (v178 != v194)
          {
            int v214 = *((_DWORD *)v178 - 1);
            v178 -= 4;
            *--v213 = v214;
          }
          *((void *)this + 4) = v213;
          *((void *)this + 5) = v179;
          *((void *)this + 6) = v198 + 4 * v199;
          if (v194) {
            operator delete(v194);
          }
        }
        else
        {
          *(_DWORD *)uint64_t v178 = 0;
          uint64_t v179 = v178 + 4;
        }
        *((void *)this + 5) = v179;
        unint64_t v215 = *((void *)a2 + 1);
        if (v215 <= 0xFFFFFFFFFFFFFFFBLL && v215 + 4 <= *((void *)a2 + 2))
        {
          *(v179 - 1) = *(_DWORD *)(*(void *)a2 + v215);
LABEL_342:
          *((void *)a2 + 1) += 4;
        }
        else
        {
LABEL_340:
          *((unsigned char *)a2 + 24) = 1;
        }
        goto LABEL_347;
      }
      if ((PB::Reader::placeMark() & 1) == 0)
      {
        unint64_t v108 = *((void *)a2 + 1);
        unint64_t v109 = *((void *)a2 + 2);
        while (v108 < v109 && !*((unsigned char *)a2 + 24))
        {
          BOOL v111 = (char *)*((void *)this + 5);
          unint64_t v110 = *((void *)this + 6);
          if ((unint64_t)v111 >= v110)
          {
            unint64_t v113 = (char *)*((void *)this + 4);
            uint64_t v114 = (v111 - v113) >> 2;
            unint64_t v115 = v114 + 1;
            if ((unint64_t)(v114 + 1) >> 62) {
              goto LABEL_356;
            }
            uint64_t v116 = v110 - (void)v113;
            if (v116 >> 1 > v115) {
              unint64_t v115 = v116 >> 1;
            }
            if ((unint64_t)v116 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v117 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v117 = v115;
            }
            if (v117)
            {
              unint64_t v117 = (unint64_t)sub_2572C76F0(v117);
              unint64_t v113 = (char *)*((void *)this + 4);
              BOOL v111 = (char *)*((void *)this + 5);
            }
            else
            {
              uint64_t v118 = 0;
            }
            char v119 = (_DWORD *)(v117 + 4 * v114);
            *char v119 = 0;
            unint64_t v112 = v119 + 1;
            while (v111 != v113)
            {
              int v120 = *((_DWORD *)v111 - 1);
              v111 -= 4;
              *--char v119 = v120;
            }
            *((void *)this + 4) = v119;
            *((void *)this + 5) = v112;
            *((void *)this + 6) = v117 + 4 * v118;
            if (v113) {
              operator delete(v113);
            }
          }
          else
          {
            *(_DWORD *)BOOL v111 = 0;
            unint64_t v112 = v111 + 4;
          }
          *((void *)this + 5) = v112;
          unint64_t v121 = *((void *)a2 + 1);
          if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)a2 + 2))
          {
            *((unsigned char *)a2 + 24) = 1;
            break;
          }
          *(v112 - 1) = *(_DWORD *)(*(void *)a2 + v121);
          unint64_t v109 = *((void *)a2 + 2);
          unint64_t v108 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v108;
        }
LABEL_309:
        PB::Reader::recallMark();
        goto LABEL_347;
      }
      return 0;
    case 206:
      *((_DWORD *)this + 38) |= 1u;
      unint64_t v122 = *((void *)a2 + 1);
      unint64_t v123 = *((void *)a2 + 2);
      uint64_t v124 = *(void *)a2;
      if (v122 <= 0xFFFFFFFFFFFFFFF5 && v122 + 10 <= v123)
      {
        char v125 = 0;
        unsigned int v126 = 0;
        uint64_t v127 = 0;
        do
        {
          unint64_t v128 = v122 + 1;
          *((void *)a2 + 1) = v122 + 1;
          char v129 = *(unsigned char *)(v124 + v122);
          v127 |= (unint64_t)(v129 & 0x7F) << v125;
          if ((v129 & 0x80) == 0) {
            goto LABEL_304;
          }
          v125 += 7;
          unint64_t v122 = v128;
          BOOL v97 = v126++ > 8;
        }
        while (!v97);
LABEL_243:
        uint64_t v127 = 0;
        goto LABEL_304;
      }
      char v180 = 0;
      unsigned int v181 = 0;
      uint64_t v127 = 0;
      if (v123 <= v122) {
        unint64_t v123 = *((void *)a2 + 1);
      }
      while (2)
      {
        if (v123 == v122)
        {
          uint64_t v127 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v182 = v122 + 1;
          char v183 = *(unsigned char *)(v124 + v122);
          *((void *)a2 + 1) = v182;
          v127 |= (unint64_t)(v183 & 0x7F) << v180;
          if (v183 < 0)
          {
            v180 += 7;
            unint64_t v122 = v182;
            BOOL v97 = v181++ > 8;
            if (v97) {
              goto LABEL_243;
            }
            continue;
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v127 = 0;
          }
        }
        break;
      }
LABEL_304:
      *((void *)this + 7) = v127;
      goto LABEL_347;
    case 207:
      *((_DWORD *)this + 38) |= 2u;
      unint64_t v130 = *((void *)a2 + 1);
      unint64_t v131 = *((void *)a2 + 2);
      uint64_t v132 = *(void *)a2;
      if (v130 <= 0xFFFFFFFFFFFFFFF5 && v130 + 10 <= v131)
      {
        char v133 = 0;
        unsigned int v134 = 0;
        uint64_t v135 = 0;
        do
        {
          unint64_t v136 = v130 + 1;
          *((void *)a2 + 1) = v130 + 1;
          char v137 = *(unsigned char *)(v132 + v130);
          v135 |= (unint64_t)(v137 & 0x7F) << v133;
          if ((v137 & 0x80) == 0) {
            goto LABEL_307;
          }
          v133 += 7;
          unint64_t v130 = v136;
          BOOL v97 = v134++ > 8;
        }
        while (!v97);
LABEL_250:
        uint64_t v135 = 0;
        goto LABEL_307;
      }
      char v184 = 0;
      unsigned int v185 = 0;
      uint64_t v135 = 0;
      if (v131 <= v130) {
        unint64_t v131 = *((void *)a2 + 1);
      }
      while (2)
      {
        if (v131 == v130)
        {
          uint64_t v135 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v186 = v130 + 1;
          char v187 = *(unsigned char *)(v132 + v130);
          *((void *)a2 + 1) = v186;
          v135 |= (unint64_t)(v187 & 0x7F) << v184;
          if (v187 < 0)
          {
            v184 += 7;
            unint64_t v130 = v186;
            BOOL v97 = v185++ > 8;
            if (v97) {
              goto LABEL_250;
            }
            continue;
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v135 = 0;
          }
        }
        break;
      }
LABEL_307:
      *((void *)this + 8) = v135;
      goto LABEL_347;
    case 208:
      *((_DWORD *)this + 38) |= 0x20000u;
      unint64_t v138 = *((void *)a2 + 1);
      if (v138 >= *((void *)a2 + 2))
      {
        BOOL v141 = 0;
        *((unsigned char *)a2 + 24) = 1;
      }
      else
      {
        unint64_t v139 = v138 + 1;
        int v140 = *(unsigned __int8 *)(*(void *)a2 + v138);
        *((void *)a2 + 1) = v139;
        BOOL v141 = v140 != 0;
      }
      *((unsigned char *)this + 149) = v141;
      goto LABEL_347;
    default:
      if (v19 == 101)
      {
        *((_DWORD *)this + 38) |= 0x10000u;
        unint64_t v142 = *((void *)a2 + 1);
        if (v142 >= *((void *)a2 + 2))
        {
          BOOL v145 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v143 = v142 + 1;
          int v144 = *(unsigned __int8 *)(*(void *)a2 + v142);
          *((void *)a2 + 1) = v143;
          BOOL v145 = v144 != 0;
        }
        *((unsigned char *)this + 148) = v145;
      }
      else if (v19 == 102)
      {
        *((_DWORD *)this + 38) |= 0x40u;
        unint64_t v29 = *((void *)a2 + 1);
        unint64_t v30 = *((void *)a2 + 2);
        uint64_t v31 = *(void *)a2;
        if (v29 > 0xFFFFFFFFFFFFFFF5 || v29 + 10 > v30)
        {
          char v150 = 0;
          unsigned int v151 = 0;
          uint64_t v34 = 0;
          if (v30 <= v29) {
            unint64_t v30 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v30 == v29)
            {
              uint64_t v34 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_286;
            }
            unint64_t v152 = v29 + 1;
            char v153 = *(unsigned char *)(v31 + v29);
            *((void *)a2 + 1) = v152;
            v34 |= (unint64_t)(v153 & 0x7F) << v150;
            if ((v153 & 0x80) == 0) {
              break;
            }
            v150 += 7;
            unint64_t v29 = v152;
            BOOL v97 = v151++ > 8;
            if (v97)
            {
LABEL_197:
              uint64_t v34 = 0;
              goto LABEL_286;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v34 = 0;
          }
        }
        else
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v34 = 0;
          while (1)
          {
            unint64_t v35 = v29 + 1;
            *((void *)a2 + 1) = v29 + 1;
            char v36 = *(unsigned char *)(v31 + v29);
            v34 |= (unint64_t)(v36 & 0x7F) << v32;
            if ((v36 & 0x80) == 0) {
              break;
            }
            v32 += 7;
            unint64_t v29 = v35;
            BOOL v97 = v33++ > 8;
            if (v97) {
              goto LABEL_197;
            }
          }
        }
LABEL_286:
        *((void *)this + 13) = v34;
      }
      else
      {
LABEL_19:
        if ((PB::Reader::skip(a2) & 1) == 0) {
          return 0;
        }
      }
      goto LABEL_347;
  }
}

uint64_t CMMsl::KappaPeakDetectorMapResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 152);
  if ((v4 & 0x80) != 0)
  {
    this = PB::Writer::write(a2, *(float *)(this + 112));
    int v4 = *(_DWORD *)(v3 + 152);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x800) == 0) {
        goto LABEL_4;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x800) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10) == 0)
  {
LABEL_5:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x4000) == 0)
  {
LABEL_6:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = PB::Writer::write(a2, *(float *)(v3 + 140));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x8000) == 0)
  {
LABEL_7:
    if ((v4 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = PB::Writer::write(a2, *(float *)(v3 + 144));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x200) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x100) == 0)
  {
LABEL_11:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x10000) == 0)
  {
LABEL_12:
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x40) == 0)
  {
LABEL_13:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 0x1000) == 0)
  {
LABEL_14:
    if ((v4 & 4) == 0) {
      goto LABEL_15;
    }
LABEL_40:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_DWORD *)(v3 + 152) & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_39:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 152);
  if ((v4 & 4) != 0) {
    goto LABEL_40;
  }
LABEL_15:
  if ((v4 & 0x2000) != 0) {
LABEL_16:
  }
    this = PB::Writer::write(a2, *(float *)(v3 + 136));
LABEL_17:
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  while (v5 != v6)
  {
    v5 += 8;
    this = PB::Writer::writeVarInt(a2);
  }
  uint64_t v7 = *(float **)(v3 + 32);
  uint64_t v8 = *(float **)(v3 + 40);
  while (v7 != v8)
  {
    float v9 = *v7++;
    this = PB::Writer::write(a2, v9);
  }
  int v10 = *(_DWORD *)(v3 + 152);
  if ((v10 & 1) == 0)
  {
    if ((v10 & 2) == 0) {
      goto LABEL_25;
    }
LABEL_43:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_DWORD *)(v3 + 152) & 0x20000) == 0) {
      return this;
    }
    goto LABEL_44;
  }
  this = PB::Writer::writeVarInt(a2);
  int v10 = *(_DWORD *)(v3 + 152);
  if ((v10 & 2) != 0) {
    goto LABEL_43;
  }
LABEL_25:
  if ((v10 & 0x20000) == 0) {
    return this;
  }
LABEL_44:
  return PB::Writer::write(a2);
}

uint64_t CMMsl::KappaPeakDetectorMapResult::hash_value(CMMsl::KappaPeakDetectorMapResult *this)
{
  int v2 = *((_DWORD *)this + 38);
  if ((v2 & 0x80) != 0)
  {
    float v20 = *((float *)this + 28);
    uint64_t v21 = LODWORD(v20);
    if (v20 == 0.0) {
      uint64_t v21 = 0;
    }
    uint64_t v35 = v21;
    if ((v2 & 8) != 0)
    {
LABEL_3:
      uint64_t v34 = *((void *)this + 10);
      if ((v2 & 0x800) != 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v35 = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v34 = 0;
  if ((v2 & 0x800) != 0)
  {
LABEL_4:
    uint64_t v33 = *((unsigned int *)this + 32);
    if ((v2 & 0x10) != 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v33 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    uint64_t v32 = *((void *)this + 11);
    if ((v2 & 0x4000) != 0) {
      goto LABEL_6;
    }
LABEL_37:
    uint64_t v31 = 0;
    if ((v2 & 0x8000) != 0) {
      goto LABEL_9;
    }
LABEL_38:
    uint64_t v30 = 0;
    if ((v2 & 0x200) != 0) {
      goto LABEL_12;
    }
LABEL_39:
    uint64_t v29 = 0;
    if ((v2 & 0x400) != 0) {
      goto LABEL_15;
    }
LABEL_40:
    uint64_t v10 = 0;
    if ((v2 & 0x20) != 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_36:
  uint64_t v32 = 0;
  if ((v2 & 0x4000) == 0) {
    goto LABEL_37;
  }
LABEL_6:
  float v3 = *((float *)this + 35);
  uint64_t v4 = LODWORD(v3);
  if (v3 == 0.0) {
    uint64_t v4 = 0;
  }
  uint64_t v31 = v4;
  if ((v2 & 0x8000) == 0) {
    goto LABEL_38;
  }
LABEL_9:
  float v5 = *((float *)this + 36);
  uint64_t v6 = LODWORD(v5);
  if (v5 == 0.0) {
    uint64_t v6 = 0;
  }
  uint64_t v30 = v6;
  if ((v2 & 0x200) == 0) {
    goto LABEL_39;
  }
LABEL_12:
  float v7 = *((float *)this + 30);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  uint64_t v29 = v8;
  if ((v2 & 0x400) == 0) {
    goto LABEL_40;
  }
LABEL_15:
  float v9 = *((float *)this + 31);
  if (v9 == 0.0) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = LODWORD(v9);
  }
  if ((v2 & 0x20) != 0)
  {
LABEL_19:
    uint64_t v11 = *((void *)this + 12);
    if ((v2 & 0x100) != 0) {
      goto LABEL_20;
    }
LABEL_42:
    uint64_t v13 = 0;
    if ((v2 & 0x10000) != 0) {
      goto LABEL_24;
    }
    goto LABEL_43;
  }
LABEL_41:
  uint64_t v11 = 0;
  if ((v2 & 0x100) == 0) {
    goto LABEL_42;
  }
LABEL_20:
  float v12 = *((float *)this + 29);
  if (v12 == 0.0) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = LODWORD(v12);
  }
  if ((v2 & 0x10000) != 0)
  {
LABEL_24:
    uint64_t v14 = *((unsigned __int8 *)this + 148);
    if ((v2 & 0x40) != 0) {
      goto LABEL_25;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v14 = 0;
  if ((v2 & 0x40) != 0)
  {
LABEL_25:
    uint64_t v15 = *((void *)this + 13);
    if ((v2 & 0x1000) != 0) {
      goto LABEL_26;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v15 = 0;
  if ((v2 & 0x1000) != 0)
  {
LABEL_26:
    uint64_t v16 = *((int *)this + 33);
    if ((v2 & 4) != 0) {
      goto LABEL_27;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v16 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_27:
    uint64_t v17 = *((void *)this + 9);
    if ((v2 & 0x2000) != 0) {
      goto LABEL_28;
    }
LABEL_47:
    uint64_t v19 = 0;
    goto LABEL_48;
  }
LABEL_46:
  uint64_t v17 = 0;
  if ((v2 & 0x2000) == 0) {
    goto LABEL_47;
  }
LABEL_28:
  float v18 = *((float *)this + 34);
  if (v18 == 0.0) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = LODWORD(v18);
  }
LABEL_48:
  uint64_t v22 = PBHashBytes();
  uint64_t v23 = PBHashBytes();
  int v24 = *((_DWORD *)this + 38);
  if ((v24 & 1) == 0)
  {
    uint64_t v25 = 0;
    if ((v24 & 2) != 0) {
      goto LABEL_50;
    }
LABEL_53:
    uint64_t v26 = 0;
    if ((v24 & 0x20000) != 0) {
      goto LABEL_51;
    }
LABEL_54:
    uint64_t v27 = 0;
    return v34 ^ v35 ^ v33 ^ v32 ^ v31 ^ v30 ^ v29 ^ v10 ^ v11 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v19 ^ v22 ^ v23 ^ v25 ^ v26 ^ v27;
  }
  uint64_t v25 = *((void *)this + 7);
  if ((v24 & 2) == 0) {
    goto LABEL_53;
  }
LABEL_50:
  uint64_t v26 = *((void *)this + 8);
  if ((v24 & 0x20000) == 0) {
    goto LABEL_54;
  }
LABEL_51:
  uint64_t v27 = *((unsigned __int8 *)this + 149);
  return v34 ^ v35 ^ v33 ^ v32 ^ v31 ^ v30 ^ v29 ^ v10 ^ v11 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v19 ^ v22 ^ v23 ^ v25 ^ v26 ^ v27;
}

void CMMsl::KappaPulseDeltaV::~KappaPulseDeltaV(CMMsl::KappaPulseDeltaV *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaPulseDeltaV::KappaPulseDeltaV(uint64_t this, const CMMsl::KappaPulseDeltaV *a2)
{
  *(void *)this = &unk_270642A28;
  *(_DWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 112) = 0;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x40) != 0)
  {
    uint64_t v4 = *((void *)a2 + 7);
    int v3 = 64;
    *(_DWORD *)(this + 112) = 64;
    *(void *)(this + 56) = v4;
    int v2 = *((_DWORD *)a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v3 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_5:
    uint64_t v5 = *((void *)a2 + 4);
    v3 |= 8u;
    *(_DWORD *)(this + 112) = v3;
    *(void *)(this + 32) = v5;
    int v2 = *((_DWORD *)a2 + 28);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *((void *)a2 + 1);
    v3 |= 1u;
    *(_DWORD *)(this + 112) = v3;
    *(void *)(this + 8) = v6;
    int v2 = *((_DWORD *)a2 + 28);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 16);
  v3 |= 0x80u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 64) = v7;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x1000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v8 = *((_DWORD *)a2 + 21);
  v3 |= 0x1000u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 84) = v8;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  int v9 = *((_DWORD *)a2 + 23);
  v3 |= 0x4000u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 92) = v9;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x10000) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v10 = *((_DWORD *)a2 + 25);
  v3 |= 0x10000u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 100) = v10;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *((_DWORD *)a2 + 19);
  v3 |= 0x400u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 76) = v11;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x2000) == 0)
  {
LABEL_13:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v12 = *((_DWORD *)a2 + 22);
  v3 |= 0x2000u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 88) = v12;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x8000) == 0)
  {
LABEL_14:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v13 = *((_DWORD *)a2 + 24);
  v3 |= 0x8000u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 96) = v13;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x20000) == 0)
  {
LABEL_15:
    if ((v2 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v14 = *((_DWORD *)a2 + 26);
  v3 |= 0x20000u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 104) = v14;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x800) == 0)
  {
LABEL_16:
    if ((v2 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v15 = *((_DWORD *)a2 + 20);
  v3 |= 0x800u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 80) = v15;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x100) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_35;
  }
LABEL_34:
  int v16 = *((_DWORD *)a2 + 17);
  v3 |= 0x100u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 68) = v16;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x40000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_36;
  }
LABEL_35:
  char v17 = *((unsigned char *)a2 + 108);
  v3 |= 0x40000u;
  *(_DWORD *)(this + 112) = v3;
  *(unsigned char *)(this + 108) = v17;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v18 = *((_DWORD *)a2 + 18);
  v3 |= 0x200u;
  *(_DWORD *)(this + 112) = v3;
  *(_DWORD *)(this + 72) = v18;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 2) == 0)
  {
LABEL_20:
    if ((v2 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v19 = *((void *)a2 + 2);
  v3 |= 2u;
  *(_DWORD *)(this + 112) = v3;
  *(void *)(this + 16) = v19;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x20) == 0)
  {
LABEL_21:
    if ((v2 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v20 = *((void *)a2 + 6);
  v3 |= 0x20u;
  *(_DWORD *)(this + 112) = v3;
  *(void *)(this + 48) = v20;
  int v2 = *((_DWORD *)a2 + 28);
  if ((v2 & 0x10) == 0)
  {
LABEL_22:
    if ((v2 & 4) == 0) {
      return this;
    }
LABEL_40:
    uint64_t v22 = *((void *)a2 + 3);
    *(_DWORD *)(this + 112) = v3 | 4;
    *(void *)(this + 24) = v22;
    return this;
  }
LABEL_39:
  uint64_t v21 = *((void *)a2 + 5);
  v3 |= 0x10u;
  *(_DWORD *)(this + 112) = v3;
  *(void *)(this + 40) = v21;
  if ((*((_DWORD *)a2 + 28) & 4) != 0) {
    goto LABEL_40;
  }
  return this;
}

CMMsl *CMMsl::KappaPulseDeltaV::operator=(CMMsl *a1, const CMMsl::KappaPulseDeltaV *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaPulseDeltaV::KappaPulseDeltaV((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaPulseDeltaV *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaPulseDeltaV *a2, CMMsl::KappaPulseDeltaV *a3)
{
  int v3 = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v3;
  uint64_t v4 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v4;
  uint64_t v5 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v5;
  uint64_t v6 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v6;
  int v7 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v7;
  int v8 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v8;
  int v9 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v9;
  int v10 = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v10;
  int v11 = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v11;
  int v12 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v12;
  int v13 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v13;
  int v14 = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v14;
  int v15 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v15;
  float result = *((float *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((float *)a2 + 17) = result;
  LOBYTE(v6) = *((unsigned char *)this + 108);
  *((unsigned char *)this + 108) = *((unsigned char *)a2 + 108);
  *((unsigned char *)a2 + 108) = v6;
  LODWORD(v6) = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v6;
  uint64_t v17 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v17;
  uint64_t v18 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v18;
  uint64_t v19 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v19;
  uint64_t v20 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v20;
  return result;
}

float CMMsl::KappaPulseDeltaV::KappaPulseDeltaV(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642A28;
  *(_DWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a2 + 112) = 0;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  float result = *(float *)(a2 + 68);
  *(float *)(a1 + 68) = result;
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return result;
}

CMMsl *CMMsl::KappaPulseDeltaV::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaPulseDeltaV::KappaPulseDeltaV((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaPulseDeltaV *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaPulseDeltaV::formatText(CMMsl::KappaPulseDeltaV *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x80) != 0)
  {
    PB::TextFormatter::format(a2, "accelMagnitude", *((float *)this + 16));
    int v5 = *((_DWORD *)this + 28);
    if ((v5 & 0x100) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "deltaVThisImpact", *((float *)this + 17));
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(a2, "dimensions");
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(a2, "epochCounter");
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 4) == 0)
  {
LABEL_6:
    if ((v5 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(a2, "jHG");
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 8) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(a2, "jImpactStart");
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(a2, "jLG");
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(a2, "nextTimestamp");
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x40000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(a2, "partOfHgPath");
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(a2, "pointType");
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(a2, "runningArclengthOverEpoch", *((float *)this + 19));
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x800) == 0)
  {
LABEL_13:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(a2, "runningArclengthThisImpact", *((float *)this + 20));
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x1000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(a2, "runningDeltaVXOverEpoch", *((float *)this + 21));
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x2000) == 0)
  {
LABEL_15:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(a2, "runningDeltaVXThisImpact", *((float *)this + 22));
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x4000) == 0)
  {
LABEL_16:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(a2, "runningDeltaVYOverEpoch", *((float *)this + 23));
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x8000) == 0)
  {
LABEL_17:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  PB::TextFormatter::format(a2, "runningDeltaVYThisImpact", *((float *)this + 24));
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x10000) == 0)
  {
LABEL_18:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(a2, "runningDeltaVZOverEpoch", *((float *)this + 25));
  int v5 = *((_DWORD *)this + 28);
  if ((v5 & 0x20000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_41:
  PB::TextFormatter::format(a2, "runningDeltaVZThisImpact", *((float *)this + 26));
  if ((*((_DWORD *)this + 28) & 0x40) != 0) {
LABEL_20:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_21:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaPulseDeltaV::readFrom(CMMsl::KappaPulseDeltaV *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_211;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((_DWORD *)this + 28) |= 0x40u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v70 = 0;
          unsigned int v71 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_175;
            }
            unint64_t v72 = v20++;
            char v73 = *(unsigned char *)(v21 + v72);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v73 & 0x7F) << v70;
            if ((v73 & 0x80) == 0) {
              break;
            }
            v70 += 7;
            BOOL v14 = v71++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
LABEL_174:
              unint64_t v2 = v72 + 1;
              goto LABEL_175;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v24 = 0;
          }
          goto LABEL_174;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_175;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        uint64_t v24 = 0;
LABEL_175:
        *((void *)this + 7) = v24;
        break;
      case 2u:
        *((_DWORD *)this + 28) |= 8u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v27 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v26)
            {
              uint64_t v30 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_180;
            }
            unint64_t v76 = v26++;
            char v77 = *(unsigned char *)(v27 + v76);
            *((void *)a2 + 1) = v26;
            v30 |= (unint64_t)(v77 & 0x7F) << v74;
            if ((v77 & 0x80) == 0) {
              break;
            }
            v74 += 7;
            BOOL v14 = v75++ > 8;
            if (v14)
            {
              uint64_t v30 = 0;
LABEL_179:
              unint64_t v2 = v76 + 1;
              goto LABEL_180;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v30 = 0;
          }
          goto LABEL_179;
        }
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        do
        {
          unint64_t v2 = v26 + 1;
          *((void *)a2 + 1) = v26 + 1;
          char v31 = *(unsigned char *)(v27 + v26);
          v30 |= (unint64_t)(v31 & 0x7F) << v28;
          if ((v31 & 0x80) == 0) {
            goto LABEL_180;
          }
          v28 += 7;
          unint64_t v26 = v2;
          BOOL v14 = v29++ > 8;
        }
        while (!v14);
        uint64_t v30 = 0;
LABEL_180:
        *((void *)this + 4) = -(v30 & 1) ^ (v30 >> 1);
        break;
      case 3u:
        *((_DWORD *)this + 28) |= 1u;
        unint64_t v32 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v33 = *(void *)a2;
        if (v32 > 0xFFFFFFFFFFFFFFF5 || v32 + 10 > v2)
        {
          char v78 = 0;
          unsigned int v79 = 0;
          uint64_t v36 = 0;
          if (v2 <= v32) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v32)
            {
              uint64_t v36 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_185;
            }
            unint64_t v80 = v32++;
            char v81 = *(unsigned char *)(v33 + v80);
            *((void *)a2 + 1) = v32;
            v36 |= (unint64_t)(v81 & 0x7F) << v78;
            if ((v81 & 0x80) == 0) {
              break;
            }
            v78 += 7;
            BOOL v14 = v79++ > 8;
            if (v14)
            {
              uint64_t v36 = 0;
LABEL_184:
              unint64_t v2 = v80 + 1;
              goto LABEL_185;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v36 = 0;
          }
          goto LABEL_184;
        }
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        do
        {
          unint64_t v2 = v32 + 1;
          *((void *)a2 + 1) = v32 + 1;
          char v37 = *(unsigned char *)(v33 + v32);
          v36 |= (unint64_t)(v37 & 0x7F) << v34;
          if ((v37 & 0x80) == 0) {
            goto LABEL_185;
          }
          v34 += 7;
          unint64_t v32 = v2;
          BOOL v14 = v35++ > 8;
        }
        while (!v14);
        uint64_t v36 = 0;
LABEL_185:
        *((void *)this + 1) = v36;
        break;
      case 4u:
        *((_DWORD *)this + 28) |= 0x80u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 16) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 5u:
        *((_DWORD *)this + 28) |= 0x1000u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 6u:
        *((_DWORD *)this + 28) |= 0x4000u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 23) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 7u:
        *((_DWORD *)this + 28) |= 0x10000u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 8u:
        *((_DWORD *)this + 28) |= 0x400u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 19) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 9u:
        *((_DWORD *)this + 28) |= 0x2000u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 22) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 0xAu:
        *((_DWORD *)this + 28) |= 0x8000u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 24) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 0xBu:
        *((_DWORD *)this + 28) |= 0x20000u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 26) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 0xCu:
        *((_DWORD *)this + 28) |= 0x800u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_73;
        }
        *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_170;
      case 0xDu:
        *((_DWORD *)this + 28) |= 0x100u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 17) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_170:
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_73:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 0xEu:
        *((_DWORD *)this + 28) |= 0x40000u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v39 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v38 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v39 = v38 != 0;
        }
        *((unsigned char *)this + 108) = v39;
        break;
      case 0xFu:
        *((_DWORD *)this + 28) |= 0x200u;
        unint64_t v40 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v41 = *(void *)a2;
        if (v40 > 0xFFFFFFFFFFFFFFF5 || v40 + 10 > v2)
        {
          char v82 = 0;
          unsigned int v83 = 0;
          uint64_t v44 = 0;
          if (v2 <= v40) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v40)
            {
              LODWORD(v44) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_190;
            }
            unint64_t v84 = v40++;
            char v85 = *(unsigned char *)(v41 + v84);
            *((void *)a2 + 1) = v40;
            v44 |= (unint64_t)(v85 & 0x7F) << v82;
            if ((v85 & 0x80) == 0) {
              break;
            }
            v82 += 7;
            BOOL v14 = v83++ > 8;
            if (v14)
            {
              LODWORD(v44) = 0;
LABEL_189:
              unint64_t v2 = v84 + 1;
              goto LABEL_190;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v44) = 0;
          }
          goto LABEL_189;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        do
        {
          unint64_t v2 = v40 + 1;
          *((void *)a2 + 1) = v40 + 1;
          char v45 = *(unsigned char *)(v41 + v40);
          v44 |= (unint64_t)(v45 & 0x7F) << v42;
          if ((v45 & 0x80) == 0) {
            goto LABEL_190;
          }
          v42 += 7;
          unint64_t v40 = v2;
          BOOL v14 = v43++ > 8;
        }
        while (!v14);
        LODWORD(v44) = 0;
LABEL_190:
        *((_DWORD *)this + 18) = v44;
        break;
      case 0x10u:
        *((_DWORD *)this + 28) |= 2u;
        unint64_t v46 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v47 = *(void *)a2;
        if (v46 > 0xFFFFFFFFFFFFFFF5 || v46 + 10 > v2)
        {
          char v86 = 0;
          unsigned int v87 = 0;
          uint64_t v50 = 0;
          if (v2 <= v46) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v46)
            {
              uint64_t v50 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_195;
            }
            unint64_t v88 = v46++;
            char v89 = *(unsigned char *)(v47 + v88);
            *((void *)a2 + 1) = v46;
            v50 |= (unint64_t)(v89 & 0x7F) << v86;
            if ((v89 & 0x80) == 0) {
              break;
            }
            v86 += 7;
            BOOL v14 = v87++ > 8;
            if (v14)
            {
              uint64_t v50 = 0;
LABEL_194:
              unint64_t v2 = v88 + 1;
              goto LABEL_195;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v50 = 0;
          }
          goto LABEL_194;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        do
        {
          unint64_t v2 = v46 + 1;
          *((void *)a2 + 1) = v46 + 1;
          char v51 = *(unsigned char *)(v47 + v46);
          v50 |= (unint64_t)(v51 & 0x7F) << v48;
          if ((v51 & 0x80) == 0) {
            goto LABEL_195;
          }
          v48 += 7;
          unint64_t v46 = v2;
          BOOL v14 = v49++ > 8;
        }
        while (!v14);
        uint64_t v50 = 0;
LABEL_195:
        *((void *)this + 2) = v50;
        break;
      case 0x11u:
        *((_DWORD *)this + 28) |= 0x20u;
        unint64_t v52 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v53 = *(void *)a2;
        if (v52 > 0xFFFFFFFFFFFFFFF5 || v52 + 10 > v2)
        {
          char v90 = 0;
          unsigned int v91 = 0;
          uint64_t v56 = 0;
          if (v2 <= v52) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v52)
            {
              uint64_t v56 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_200;
            }
            unint64_t v92 = v52++;
            char v93 = *(unsigned char *)(v53 + v92);
            *((void *)a2 + 1) = v52;
            v56 |= (unint64_t)(v93 & 0x7F) << v90;
            if ((v93 & 0x80) == 0) {
              break;
            }
            v90 += 7;
            BOOL v14 = v91++ > 8;
            if (v14)
            {
              uint64_t v56 = 0;
LABEL_199:
              unint64_t v2 = v92 + 1;
              goto LABEL_200;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v56 = 0;
          }
          goto LABEL_199;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v56 = 0;
        do
        {
          unint64_t v2 = v52 + 1;
          *((void *)a2 + 1) = v52 + 1;
          char v57 = *(unsigned char *)(v53 + v52);
          v56 |= (unint64_t)(v57 & 0x7F) << v54;
          if ((v57 & 0x80) == 0) {
            goto LABEL_200;
          }
          v54 += 7;
          unint64_t v52 = v2;
          BOOL v14 = v55++ > 8;
        }
        while (!v14);
        uint64_t v56 = 0;
LABEL_200:
        *((void *)this + 6) = v56;
        break;
      case 0x12u:
        *((_DWORD *)this + 28) |= 0x10u;
        unint64_t v58 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v59 = *(void *)a2;
        if (v58 > 0xFFFFFFFFFFFFFFF5 || v58 + 10 > v2)
        {
          char v94 = 0;
          unsigned int v95 = 0;
          uint64_t v62 = 0;
          if (v2 <= v58) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v58)
            {
              uint64_t v62 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_205;
            }
            unint64_t v96 = v58++;
            char v97 = *(unsigned char *)(v59 + v96);
            *((void *)a2 + 1) = v58;
            v62 |= (unint64_t)(v97 & 0x7F) << v94;
            if ((v97 & 0x80) == 0) {
              break;
            }
            v94 += 7;
            BOOL v14 = v95++ > 8;
            if (v14)
            {
              uint64_t v62 = 0;
LABEL_204:
              unint64_t v2 = v96 + 1;
              goto LABEL_205;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v62 = 0;
          }
          goto LABEL_204;
        }
        char v60 = 0;
        unsigned int v61 = 0;
        uint64_t v62 = 0;
        do
        {
          unint64_t v2 = v58 + 1;
          *((void *)a2 + 1) = v58 + 1;
          char v63 = *(unsigned char *)(v59 + v58);
          v62 |= (unint64_t)(v63 & 0x7F) << v60;
          if ((v63 & 0x80) == 0) {
            goto LABEL_205;
          }
          v60 += 7;
          unint64_t v58 = v2;
          BOOL v14 = v61++ > 8;
        }
        while (!v14);
        uint64_t v62 = 0;
LABEL_205:
        *((void *)this + 5) = v62;
        break;
      case 0x13u:
        *((_DWORD *)this + 28) |= 4u;
        unint64_t v64 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v65 = *(void *)a2;
        if (v64 > 0xFFFFFFFFFFFFFFF5 || v64 + 10 > v2)
        {
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v68 = 0;
          if (v2 <= v64) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v64)
            {
              uint64_t v68 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_210;
            }
            unint64_t v100 = v64++;
            char v101 = *(unsigned char *)(v65 + v100);
            *((void *)a2 + 1) = v64;
            v68 |= (unint64_t)(v101 & 0x7F) << v98;
            if ((v101 & 0x80) == 0) {
              break;
            }
            v98 += 7;
            BOOL v14 = v99++ > 8;
            if (v14)
            {
              uint64_t v68 = 0;
LABEL_209:
              unint64_t v2 = v100 + 1;
              goto LABEL_210;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v68 = 0;
          }
          goto LABEL_209;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v68 = 0;
        do
        {
          unint64_t v2 = v64 + 1;
          *((void *)a2 + 1) = v64 + 1;
          char v69 = *(unsigned char *)(v65 + v64);
          v68 |= (unint64_t)(v69 & 0x7F) << v66;
          if ((v69 & 0x80) == 0) {
            goto LABEL_210;
          }
          v66 += 7;
          unint64_t v64 = v2;
          BOOL v14 = v67++ > 8;
        }
        while (!v14);
        uint64_t v68 = 0;
LABEL_210:
        *((void *)this + 3) = v68;
        break;
      default:
        goto LABEL_19;
    }
LABEL_211:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaPulseDeltaV::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 112);
  if ((v4 & 0x40) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    int v4 = *(_DWORD *)(v3 + 112);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeSInt(a2);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = PB::Writer::write(a2, *(float *)(v3 + 64));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x1000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x4000) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = PB::Writer::write(a2, *(float *)(v3 + 92));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x10000) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = PB::Writer::write(a2, *(float *)(v3 + 76));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x2000) == 0)
  {
LABEL_10:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = PB::Writer::write(a2, *(float *)(v3 + 96));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x20000) == 0)
  {
LABEL_12:
    if ((v4 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = PB::Writer::write(a2, *(float *)(v3 + 104));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x800) == 0)
  {
LABEL_13:
    if ((v4 & 0x100) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x100) == 0)
  {
LABEL_14:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = PB::Writer::write(a2, *(float *)(v3 + 68));
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x40000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = PB::Writer::write(a2);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x200) == 0)
  {
LABEL_16:
    if ((v4 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 2) == 0)
  {
LABEL_17:
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x20) == 0)
  {
LABEL_18:
    if ((v4 & 0x10) == 0) {
      goto LABEL_19;
    }
LABEL_38:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_DWORD *)(v3 + 112) & 4) == 0) {
      return this;
    }
    goto LABEL_39;
  }
LABEL_37:
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 112);
  if ((v4 & 0x10) != 0) {
    goto LABEL_38;
  }
LABEL_19:
  if ((v4 & 4) == 0) {
    return this;
  }
LABEL_39:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaPulseDeltaV::hash_value(CMMsl::KappaPulseDeltaV *this)
{
  int v1 = *((_DWORD *)this + 28);
  if ((v1 & 0x40) != 0)
  {
    uint64_t v2 = *((void *)this + 7);
    if ((v1 & 8) != 0)
    {
LABEL_3:
      uint64_t v3 = *((void *)this + 4);
      if (v1) {
        goto LABEL_4;
      }
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v3 = 0;
  if (v1)
  {
LABEL_4:
    uint64_t v4 = *((void *)this + 1);
    if ((v1 & 0x80) != 0) {
      goto LABEL_5;
    }
LABEL_44:
    uint64_t v6 = 0;
    if ((v1 & 0x1000) != 0) {
      goto LABEL_8;
    }
LABEL_45:
    uint64_t v8 = 0;
    if ((v1 & 0x4000) != 0) {
      goto LABEL_11;
    }
LABEL_46:
    uint64_t v10 = 0;
    if ((v1 & 0x10000) != 0) {
      goto LABEL_14;
    }
LABEL_47:
    uint64_t v12 = 0;
    if ((v1 & 0x400) != 0) {
      goto LABEL_17;
    }
LABEL_48:
    uint64_t v14 = 0;
    if ((v1 & 0x2000) != 0) {
      goto LABEL_20;
    }
LABEL_49:
    uint64_t v16 = 0;
    if ((v1 & 0x8000) != 0) {
      goto LABEL_23;
    }
LABEL_50:
    uint64_t v18 = 0;
    if ((v1 & 0x20000) != 0) {
      goto LABEL_26;
    }
LABEL_51:
    uint64_t v20 = 0;
    if ((v1 & 0x800) != 0) {
      goto LABEL_29;
    }
LABEL_52:
    uint64_t v22 = 0;
    if ((v1 & 0x100) != 0) {
      goto LABEL_32;
    }
LABEL_53:
    uint64_t v24 = 0;
    if ((v1 & 0x40000) != 0) {
      goto LABEL_35;
    }
    goto LABEL_54;
  }
LABEL_43:
  uint64_t v4 = 0;
  if ((v1 & 0x80) == 0) {
    goto LABEL_44;
  }
LABEL_5:
  float v5 = *((float *)this + 16);
  uint64_t v6 = LODWORD(v5);
  if (v5 == 0.0) {
    uint64_t v6 = 0;
  }
  if ((v1 & 0x1000) == 0) {
    goto LABEL_45;
  }
LABEL_8:
  float v7 = *((float *)this + 21);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  if ((v1 & 0x4000) == 0) {
    goto LABEL_46;
  }
LABEL_11:
  float v9 = *((float *)this + 23);
  uint64_t v10 = LODWORD(v9);
  if (v9 == 0.0) {
    uint64_t v10 = 0;
  }
  if ((v1 & 0x10000) == 0) {
    goto LABEL_47;
  }
LABEL_14:
  float v11 = *((float *)this + 25);
  uint64_t v12 = LODWORD(v11);
  if (v11 == 0.0) {
    uint64_t v12 = 0;
  }
  if ((v1 & 0x400) == 0) {
    goto LABEL_48;
  }
LABEL_17:
  float v13 = *((float *)this + 19);
  uint64_t v14 = LODWORD(v13);
  if (v13 == 0.0) {
    uint64_t v14 = 0;
  }
  if ((v1 & 0x2000) == 0) {
    goto LABEL_49;
  }
LABEL_20:
  float v15 = *((float *)this + 22);
  uint64_t v16 = LODWORD(v15);
  if (v15 == 0.0) {
    uint64_t v16 = 0;
  }
  if ((v1 & 0x8000) == 0) {
    goto LABEL_50;
  }
LABEL_23:
  float v17 = *((float *)this + 24);
  uint64_t v18 = LODWORD(v17);
  if (v17 == 0.0) {
    uint64_t v18 = 0;
  }
  if ((v1 & 0x20000) == 0) {
    goto LABEL_51;
  }
LABEL_26:
  float v19 = *((float *)this + 26);
  uint64_t v20 = LODWORD(v19);
  if (v19 == 0.0) {
    uint64_t v20 = 0;
  }
  if ((v1 & 0x800) == 0) {
    goto LABEL_52;
  }
LABEL_29:
  float v21 = *((float *)this + 20);
  uint64_t v22 = LODWORD(v21);
  if (v21 == 0.0) {
    uint64_t v22 = 0;
  }
  if ((v1 & 0x100) == 0) {
    goto LABEL_53;
  }
LABEL_32:
  float v23 = *((float *)this + 17);
  uint64_t v24 = LODWORD(v23);
  if (v23 == 0.0) {
    uint64_t v24 = 0;
  }
  if ((v1 & 0x40000) != 0)
  {
LABEL_35:
    uint64_t v25 = *((unsigned __int8 *)this + 108);
    if ((v1 & 0x200) != 0) {
      goto LABEL_36;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t v25 = 0;
  if ((v1 & 0x200) != 0)
  {
LABEL_36:
    uint64_t v26 = *((int *)this + 18);
    if ((v1 & 2) != 0) {
      goto LABEL_37;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t v26 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_37:
    uint64_t v27 = *((void *)this + 2);
    if ((v1 & 0x20) != 0) {
      goto LABEL_38;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v27 = 0;
  if ((v1 & 0x20) != 0)
  {
LABEL_38:
    uint64_t v28 = *((void *)this + 6);
    if ((v1 & 0x10) != 0) {
      goto LABEL_39;
    }
LABEL_58:
    uint64_t v29 = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_40;
    }
LABEL_59:
    uint64_t v30 = 0;
    return v3 ^ v2 ^ v4 ^ v6 ^ v8 ^ v10 ^ v12 ^ v14 ^ v16 ^ v18 ^ v20 ^ v22 ^ v24 ^ v25 ^ v26 ^ v27 ^ v28 ^ v29 ^ v30;
  }
LABEL_57:
  uint64_t v28 = 0;
  if ((v1 & 0x10) == 0) {
    goto LABEL_58;
  }
LABEL_39:
  uint64_t v29 = *((void *)this + 5);
  if ((v1 & 4) == 0) {
    goto LABEL_59;
  }
LABEL_40:
  uint64_t v30 = *((void *)this + 3);
  return v3 ^ v2 ^ v4 ^ v6 ^ v8 ^ v10 ^ v12 ^ v14 ^ v16 ^ v18 ^ v20 ^ v22 ^ v24 ^ v25 ^ v26 ^ v27 ^ v28 ^ v29 ^ v30;
}

void CMMsl::KappaPulseInertialAccel::~KappaPulseInertialAccel(CMMsl::KappaPulseInertialAccel *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

double CMMsl::KappaPulseInertialAccel::KappaPulseInertialAccel(CMMsl::KappaPulseInertialAccel *this, const CMMsl::KappaPulseInertialAccel *a2)
{
  *(void *)this = &unk_270642A60;
  *((_DWORD *)this + 20) = 0;
  __int16 v2 = *((_WORD *)a2 + 40);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *((void *)a2 + 9);
    __int16 v3 = 256;
    *((_WORD *)this + 40) = 256;
    *((void *)this + 9) = v4;
    __int16 v2 = *((_WORD *)a2 + 40);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    double result = *((double *)a2 + 2);
    v3 |= 2u;
    *((_WORD *)this + 40) = v3;
    *((double *)this + 2) = result;
    __int16 v2 = *((_WORD *)a2 + 40);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    double result = *((double *)a2 + 3);
    v3 |= 4u;
    *((_WORD *)this + 40) = v3;
    *((double *)this + 3) = result;
    __int16 v2 = *((_WORD *)a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  double result = *((double *)a2 + 4);
  v3 |= 8u;
  *((_WORD *)this + 40) = v3;
  *((double *)this + 4) = result;
  __int16 v2 = *((_WORD *)a2 + 40);
  if ((v2 & 1) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v6 = *((void *)a2 + 1);
  v3 |= 1u;
  *((_WORD *)this + 40) = v3;
  *((void *)this + 1) = v6;
  __int16 v2 = *((_WORD *)a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  double result = *((double *)a2 + 6);
  v3 |= 0x20u;
  *((_WORD *)this + 40) = v3;
  *((double *)this + 6) = result;
  __int16 v2 = *((_WORD *)a2 + 40);
  if ((v2 & 0x40) == 0)
  {
LABEL_11:
    if ((v2 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  double result = *((double *)a2 + 7);
  v3 |= 0x40u;
  *((_WORD *)this + 40) = v3;
  *((double *)this + 7) = result;
  __int16 v2 = *((_WORD *)a2 + 40);
  if ((v2 & 0x80) == 0)
  {
LABEL_12:
    if ((v2 & 0x10) == 0) {
      return result;
    }
LABEL_20:
    double result = *((double *)a2 + 5);
    *((_WORD *)this + 40) = v3 | 0x10;
    *((double *)this + 5) = result;
    return result;
  }
LABEL_19:
  double result = *((double *)a2 + 8);
  v3 |= 0x80u;
  *((_WORD *)this + 40) = v3;
  *((double *)this + 8) = result;
  if ((*((_WORD *)a2 + 40) & 0x10) != 0) {
    goto LABEL_20;
  }
  return result;
}

uint64_t CMMsl::KappaPulseInertialAccel::operator=(uint64_t a1, const CMMsl::KappaPulseInertialAccel *a2)
{
  if ((const CMMsl::KappaPulseInertialAccel *)a1 != a2)
  {
    CMMsl::KappaPulseInertialAccel::KappaPulseInertialAccel((CMMsl::KappaPulseInertialAccel *)v12, a2);
    long long v3 = v16;
    long long v4 = *(_OWORD *)(a1 + 32);
    long long v16 = *(_OWORD *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 64);
    *(void *)(a1 + 64) = v17;
    uint64_t v17 = v5;
    long long v6 = v15;
    long long v7 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(a1 + 16) = v14;
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)(a1 + 48) = v3;
    int v8 = *(_DWORD *)(a1 + 80);
    *(_DWORD *)(a1 + 80) = v19;
    int v19 = v8;
    uint64_t v9 = *(void *)(a1 + 72);
    *(void *)(a1 + 72) = v18;
    uint64_t v18 = v9;
    uint64_t v10 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v13;
    uint64_t v13 = v10;
    long long v14 = v7;
    long long v15 = v4;
    PB::Base::~Base((PB::Base *)v12);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::KappaPulseInertialAccel *a2, CMMsl::KappaPulseInertialAccel *a3)
{
  int v3 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v3;
  uint64_t v4 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v4;
  uint64_t v5 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v5;
  uint64_t v6 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v6;
  uint64_t v7 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v7;
  uint64_t v8 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v8;
  uint64_t v9 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v9;
  uint64_t v10 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v10;
  uint64_t v11 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v11;
  double result = *((double *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((double *)a2 + 5) = result;
  return result;
}

double CMMsl::KappaPulseInertialAccel::KappaPulseInertialAccel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642A60;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a2 + 80) = 0;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  double result = *(double *)(a2 + 40);
  *(double *)(a1 + 40) = result;
  return result;
}

uint64_t CMMsl::KappaPulseInertialAccel::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaPulseInertialAccel::KappaPulseInertialAccel((uint64_t)v12, a2);
    long long v3 = v16;
    long long v4 = *(_OWORD *)(a1 + 32);
    long long v16 = *(_OWORD *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 64);
    *(void *)(a1 + 64) = v17;
    uint64_t v17 = v5;
    long long v6 = v15;
    long long v7 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(a1 + 16) = v14;
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)(a1 + 48) = v3;
    int v8 = *(_DWORD *)(a1 + 80);
    *(_DWORD *)(a1 + 80) = v19;
    int v19 = v8;
    uint64_t v9 = *(void *)(a1 + 72);
    *(void *)(a1 + 72) = v18;
    uint64_t v18 = v9;
    uint64_t v10 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v13;
    uint64_t v13 = v10;
    long long v14 = v7;
    long long v15 = v4;
    PB::Base::~Base((PB::Base *)v12);
  }
  return a1;
}

uint64_t CMMsl::KappaPulseInertialAccel::formatText(CMMsl::KappaPulseInertialAccel *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 40);
  if (v5)
  {
    PB::TextFormatter::format(a2, "epochCounter");
    __int16 v5 = *((_WORD *)this + 40);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "inertialAccelX", *((double *)this + 2));
  __int16 v5 = *((_WORD *)this + 40);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(a2, "inertialAccelY", *((double *)this + 3));
  __int16 v5 = *((_WORD *)this + 40);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(a2, "inertialAccelZ", *((double *)this + 4));
  __int16 v5 = *((_WORD *)this + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(a2, "quaternionW", *((double *)this + 5));
  __int16 v5 = *((_WORD *)this + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(a2, "quaternionX", *((double *)this + 6));
  __int16 v5 = *((_WORD *)this + 40);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(a2, "quaternionY", *((double *)this + 7));
  __int16 v5 = *((_WORD *)this + 40);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(a2, "quaternionZ", *((double *)this + 8));
  if ((*((_WORD *)this + 40) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_11:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaPulseInertialAccel::readFrom(CMMsl::KappaPulseInertialAccel *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_84;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((_WORD *)this + 40) |= 0x100u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_78;
            }
            unint64_t v34 = v20++;
            char v35 = *(unsigned char *)(v21 + v34);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v35 & 0x7F) << v32;
            if ((v35 & 0x80) == 0) {
              break;
            }
            v32 += 7;
            BOOL v14 = v33++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
LABEL_77:
              unint64_t v2 = v34 + 1;
              goto LABEL_78;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v24 = 0;
          }
          goto LABEL_77;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_78;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        uint64_t v24 = 0;
LABEL_78:
        *((void *)this + 9) = v24;
        break;
      case 2u:
        *((_WORD *)this + 40) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_57;
        }
        *((void *)this + 2) = *(void *)(*(void *)a2 + v2);
        goto LABEL_73;
      case 3u:
        *((_WORD *)this + 40) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_57;
        }
        *((void *)this + 3) = *(void *)(*(void *)a2 + v2);
        goto LABEL_73;
      case 4u:
        *((_WORD *)this + 40) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_57;
        }
        *((void *)this + 4) = *(void *)(*(void *)a2 + v2);
        goto LABEL_73;
      case 5u:
        *((_WORD *)this + 40) |= 1u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v27 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v26)
            {
              uint64_t v30 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_83;
            }
            unint64_t v38 = v26++;
            char v39 = *(unsigned char *)(v27 + v38);
            *((void *)a2 + 1) = v26;
            v30 |= (unint64_t)(v39 & 0x7F) << v36;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v36 += 7;
            BOOL v14 = v37++ > 8;
            if (v14)
            {
              uint64_t v30 = 0;
LABEL_82:
              unint64_t v2 = v38 + 1;
              goto LABEL_83;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v30 = 0;
          }
          goto LABEL_82;
        }
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        do
        {
          unint64_t v2 = v26 + 1;
          *((void *)a2 + 1) = v26 + 1;
          char v31 = *(unsigned char *)(v27 + v26);
          v30 |= (unint64_t)(v31 & 0x7F) << v28;
          if ((v31 & 0x80) == 0) {
            goto LABEL_83;
          }
          v28 += 7;
          unint64_t v26 = v2;
          BOOL v14 = v29++ > 8;
        }
        while (!v14);
        uint64_t v30 = 0;
LABEL_83:
        *((void *)this + 1) = v30;
        break;
      case 6u:
        *((_WORD *)this + 40) |= 0x20u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_57;
        }
        *((void *)this + 6) = *(void *)(*(void *)a2 + v2);
        goto LABEL_73;
      case 7u:
        *((_WORD *)this + 40) |= 0x40u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_57;
        }
        *((void *)this + 7) = *(void *)(*(void *)a2 + v2);
        goto LABEL_73;
      case 8u:
        *((_WORD *)this + 40) |= 0x80u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_57;
        }
        *((void *)this + 8) = *(void *)(*(void *)a2 + v2);
        goto LABEL_73;
      case 9u:
        *((_WORD *)this + 40) |= 0x10u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
        {
          *((void *)this + 5) = *(void *)(*(void *)a2 + v2);
LABEL_73:
          unint64_t v2 = *((void *)a2 + 1) + 8;
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_57:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      default:
        goto LABEL_19;
    }
LABEL_84:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaPulseInertialAccel::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 80);
  if ((v4 & 0x100) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    __int16 v4 = *(_WORD *)(v3 + 80);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = PB::Writer::write(a2, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = PB::Writer::write(a2, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 1) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = PB::Writer::write(a2, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    this = PB::Writer::write(a2, *(double *)(v3 + 64));
    if ((*(_WORD *)(v3 + 80) & 0x10) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = PB::Writer::write(a2, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 80);
  if ((v4 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 0x10) == 0) {
    return this;
  }
LABEL_19:
  double v5 = *(double *)(v3 + 40);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::KappaPulseInertialAccel::hash_value(CMMsl::KappaPulseInertialAccel *this)
{
  __int16 v1 = *((_WORD *)this + 40);
  if ((v1 & 0x100) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_3;
    }
LABEL_26:
    double v3 = 0.0;
    if ((v1 & 4) != 0) {
      goto LABEL_6;
    }
LABEL_27:
    double v4 = 0.0;
    if ((v1 & 8) != 0) {
      goto LABEL_9;
    }
LABEL_28:
    double v5 = 0.0;
    if (v1) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
  uint64_t v2 = *((void *)this + 9);
  if ((v1 & 2) == 0) {
    goto LABEL_26;
  }
LABEL_3:
  double v3 = *((double *)this + 2);
  if (v3 == 0.0) {
    double v3 = 0.0;
  }
  if ((v1 & 4) == 0) {
    goto LABEL_27;
  }
LABEL_6:
  double v4 = *((double *)this + 3);
  if (v4 == 0.0) {
    double v4 = 0.0;
  }
  if ((v1 & 8) == 0) {
    goto LABEL_28;
  }
LABEL_9:
  double v5 = *((double *)this + 4);
  if (v5 == 0.0) {
    double v5 = 0.0;
  }
  if (v1)
  {
LABEL_12:
    uint64_t v6 = *((void *)this + 1);
    if ((v1 & 0x20) != 0) {
      goto LABEL_13;
    }
LABEL_30:
    double v7 = 0.0;
    if ((v1 & 0x40) != 0) {
      goto LABEL_16;
    }
LABEL_31:
    double v8 = 0.0;
    if ((v1 & 0x80) != 0) {
      goto LABEL_19;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v6 = 0;
  if ((v1 & 0x20) == 0) {
    goto LABEL_30;
  }
LABEL_13:
  double v7 = *((double *)this + 6);
  if (v7 == 0.0) {
    double v7 = 0.0;
  }
  if ((v1 & 0x40) == 0) {
    goto LABEL_31;
  }
LABEL_16:
  double v8 = *((double *)this + 7);
  if (v8 == 0.0) {
    double v8 = 0.0;
  }
  if ((v1 & 0x80) != 0)
  {
LABEL_19:
    double v9 = *((double *)this + 8);
    if (v9 == 0.0) {
      double v9 = 0.0;
    }
    if ((v1 & 0x10) != 0) {
      goto LABEL_22;
    }
LABEL_33:
    double v10 = 0.0;
    return *(void *)&v3 ^ v2 ^ *(void *)&v4 ^ *(void *)&v5 ^ v6 ^ *(void *)&v7 ^ *(void *)&v8 ^ *(void *)&v9 ^ *(void *)&v10;
  }
LABEL_32:
  double v9 = 0.0;
  if ((v1 & 0x10) == 0) {
    goto LABEL_33;
  }
LABEL_22:
  double v10 = *((double *)this + 5);
  if (v10 == 0.0) {
    double v10 = 0.0;
  }
  return *(void *)&v3 ^ v2 ^ *(void *)&v4 ^ *(void *)&v5 ^ v6 ^ *(void *)&v7 ^ *(void *)&v8 ^ *(void *)&v9 ^ *(void *)&v10;
}

void CMMsl::KappaPulseInertialHgAccel::~KappaPulseInertialHgAccel(CMMsl::KappaPulseInertialHgAccel *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

double CMMsl::KappaPulseInertialHgAccel::KappaPulseInertialHgAccel(CMMsl::KappaPulseInertialHgAccel *this, const CMMsl::KappaPulseInertialHgAccel *a2)
{
  *(void *)this = &unk_270642A98;
  *((_DWORD *)this + 26) = 0;
  __int16 v2 = *((_WORD *)a2 + 52);
  if ((v2 & 0x800) != 0)
  {
    uint64_t v4 = *((void *)a2 + 12);
    __int16 v3 = 2048;
    *((_WORD *)this + 52) = 2048;
    *((void *)this + 12) = v4;
    __int16 v2 = *((_WORD *)a2 + 52);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    double result = *((double *)a2 + 5);
    v3 |= 0x10u;
    *((_WORD *)this + 52) = v3;
    *((double *)this + 5) = result;
    __int16 v2 = *((_WORD *)a2 + 52);
  }
LABEL_6:
  if ((v2 & 0x20) != 0)
  {
    double result = *((double *)a2 + 6);
    v3 |= 0x20u;
    *((_WORD *)this + 52) = v3;
    *((double *)this + 6) = result;
    __int16 v2 = *((_WORD *)a2 + 52);
    if ((v2 & 0x40) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_8;
  }
  double result = *((double *)a2 + 7);
  v3 |= 0x40u;
  *((_WORD *)this + 52) = v3;
  *((double *)this + 7) = result;
  __int16 v2 = *((_WORD *)a2 + 52);
  if ((v2 & 8) == 0)
  {
LABEL_9:
    if ((v2 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v6 = *((void *)a2 + 4);
  v3 |= 8u;
  *((_WORD *)this + 52) = v3;
  *((void *)this + 4) = v6;
  __int16 v2 = *((_WORD *)a2 + 52);
  if ((v2 & 0x100) == 0)
  {
LABEL_10:
    if ((v2 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  double result = *((double *)a2 + 9);
  v3 |= 0x100u;
  *((_WORD *)this + 52) = v3;
  *((double *)this + 9) = result;
  __int16 v2 = *((_WORD *)a2 + 52);
  if ((v2 & 0x200) == 0)
  {
LABEL_11:
    if ((v2 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_21:
  double result = *((double *)a2 + 10);
  v3 |= 0x200u;
  *((_WORD *)this + 52) = v3;
  *((double *)this + 10) = result;
  __int16 v2 = *((_WORD *)a2 + 52);
  if ((v2 & 0x400) == 0)
  {
LABEL_12:
    if ((v2 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
LABEL_22:
  double result = *((double *)a2 + 11);
  v3 |= 0x400u;
  *((_WORD *)this + 52) = v3;
  *((double *)this + 11) = result;
  __int16 v2 = *((_WORD *)a2 + 52);
  if ((v2 & 0x80) == 0)
  {
LABEL_13:
    if ((v2 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_24;
  }
LABEL_23:
  double result = *((double *)a2 + 8);
  v3 |= 0x80u;
  *((_WORD *)this + 52) = v3;
  *((double *)this + 8) = result;
  __int16 v2 = *((_WORD *)a2 + 52);
  if ((v2 & 1) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_25;
  }
LABEL_24:
  double result = *((double *)a2 + 1);
  v3 |= 1u;
  *((_WORD *)this + 52) = v3;
  *((double *)this + 1) = result;
  __int16 v2 = *((_WORD *)a2 + 52);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      return result;
    }
LABEL_26:
    double result = *((double *)a2 + 3);
    *((_WORD *)this + 52) = v3 | 4;
    *((double *)this + 3) = result;
    return result;
  }
LABEL_25:
  double result = *((double *)a2 + 2);
  v3 |= 2u;
  *((_WORD *)this + 52) = v3;
  *((double *)this + 2) = result;
  if ((*((_WORD *)a2 + 52) & 4) != 0) {
    goto LABEL_26;
  }
  return result;
}

CMMsl *CMMsl::KappaPulseInertialHgAccel::operator=(CMMsl *a1, const CMMsl::KappaPulseInertialHgAccel *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaPulseInertialHgAccel::KappaPulseInertialHgAccel((CMMsl::KappaPulseInertialHgAccel *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaPulseInertialHgAccel *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::KappaPulseInertialHgAccel *a2, CMMsl::KappaPulseInertialHgAccel *a3)
{
  int v3 = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v3;
  uint64_t v4 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v4;
  uint64_t v5 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v5;
  uint64_t v6 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v6;
  uint64_t v7 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v7;
  uint64_t v8 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v8;
  uint64_t v9 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v9;
  uint64_t v10 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v10;
  uint64_t v11 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v11;
  uint64_t v12 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v12;
  uint64_t v13 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v13;
  uint64_t v14 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v14;
  double result = *((double *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((double *)a2 + 3) = result;
  return result;
}

double CMMsl::KappaPulseInertialHgAccel::KappaPulseInertialHgAccel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642A98;
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a2 + 104) = 0;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  double result = *(double *)(a2 + 24);
  *(double *)(a1 + 24) = result;
  return result;
}

CMMsl *CMMsl::KappaPulseInertialHgAccel::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaPulseInertialHgAccel::KappaPulseInertialHgAccel((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaPulseInertialHgAccel *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaPulseInertialHgAccel::formatText(CMMsl::KappaPulseInertialHgAccel *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 52);
  if (v5)
  {
    PB::TextFormatter::format(a2, "bodyAccelX", *((double *)this + 1));
    __int16 v5 = *((_WORD *)this + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "bodyAccelY", *((double *)this + 2));
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(a2, "bodyAccelZ", *((double *)this + 3));
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(a2, "epochCounter");
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(a2, "inertialAccelX", *((double *)this + 5));
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(a2, "inertialAccelY", *((double *)this + 6));
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(a2, "inertialAccelZ", *((double *)this + 7));
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(a2, "quaternionW", *((double *)this + 8));
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 0x100) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(a2, "quaternionX", *((double *)this + 9));
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(a2, "quaternionY", *((double *)this + 10));
  __int16 v5 = *((_WORD *)this + 52);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 0x800) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_27:
  PB::TextFormatter::format(a2, "quaternionZ", *((double *)this + 11));
  if ((*((_WORD *)this + 52) & 0x800) != 0) {
LABEL_13:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_14:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaPulseInertialHgAccel::readFrom(CMMsl::KappaPulseInertialHgAccel *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_93;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((_WORD *)this + 52) |= 0x800u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              uint64_t v24 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_87;
            }
            unint64_t v34 = v20++;
            char v35 = *(unsigned char *)(v21 + v34);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v35 & 0x7F) << v32;
            if ((v35 & 0x80) == 0) {
              break;
            }
            v32 += 7;
            BOOL v14 = v33++ > 8;
            if (v14)
            {
              uint64_t v24 = 0;
LABEL_86:
              unint64_t v2 = v34 + 1;
              goto LABEL_87;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v24 = 0;
          }
          goto LABEL_86;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_87;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        uint64_t v24 = 0;
LABEL_87:
        *((void *)this + 12) = v24;
        break;
      case 2u:
        *((_WORD *)this + 52) |= 0x10u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 5) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 3u:
        *((_WORD *)this + 52) |= 0x20u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 6) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 4u:
        *((_WORD *)this + 52) |= 0x40u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 7) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 5u:
        *((_WORD *)this + 52) |= 8u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v27 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v26)
            {
              uint64_t v30 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_92;
            }
            unint64_t v38 = v26++;
            char v39 = *(unsigned char *)(v27 + v38);
            *((void *)a2 + 1) = v26;
            v30 |= (unint64_t)(v39 & 0x7F) << v36;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v36 += 7;
            BOOL v14 = v37++ > 8;
            if (v14)
            {
              uint64_t v30 = 0;
LABEL_91:
              unint64_t v2 = v38 + 1;
              goto LABEL_92;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v30 = 0;
          }
          goto LABEL_91;
        }
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        do
        {
          unint64_t v2 = v26 + 1;
          *((void *)a2 + 1) = v26 + 1;
          char v31 = *(unsigned char *)(v27 + v26);
          v30 |= (unint64_t)(v31 & 0x7F) << v28;
          if ((v31 & 0x80) == 0) {
            goto LABEL_92;
          }
          v28 += 7;
          unint64_t v26 = v2;
          BOOL v14 = v29++ > 8;
        }
        while (!v14);
        uint64_t v30 = 0;
LABEL_92:
        *((void *)this + 4) = v30;
        break;
      case 6u:
        *((_WORD *)this + 52) |= 0x100u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 9) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 7u:
        *((_WORD *)this + 52) |= 0x200u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 10) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 8u:
        *((_WORD *)this + 52) |= 0x400u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 11) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 9u:
        *((_WORD *)this + 52) |= 0x80u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 8) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 0xAu:
        *((_WORD *)this + 52) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 0xBu:
        *((_WORD *)this + 52) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_66;
        }
        *((void *)this + 2) = *(void *)(*(void *)a2 + v2);
        goto LABEL_82;
      case 0xCu:
        *((_WORD *)this + 52) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
        {
          *((void *)this + 3) = *(void *)(*(void *)a2 + v2);
LABEL_82:
          unint64_t v2 = *((void *)a2 + 1) + 8;
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_66:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      default:
        goto LABEL_19;
    }
LABEL_93:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaPulseInertialHgAccel::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 104);
  if ((v4 & 0x800) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    __int16 v4 = *(_WORD *)(v3 + 104);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x20) == 0)
  {
LABEL_4:
    if ((v4 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = PB::Writer::write(a2, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x40) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = PB::Writer::write(a2, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x100) == 0)
  {
LABEL_7:
    if ((v4 & 0x200) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = PB::Writer::write(a2, *(double *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x200) == 0)
  {
LABEL_8:
    if ((v4 & 0x400) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = PB::Writer::write(a2, *(double *)(v3 + 80));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x400) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = PB::Writer::write(a2, *(double *)(v3 + 88));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 0x80) == 0)
  {
LABEL_10:
    if ((v4 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = PB::Writer::write(a2, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 1) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    this = PB::Writer::write(a2, *(double *)(v3 + 16));
    if ((*(_WORD *)(v3 + 104) & 4) == 0) {
      return this;
    }
    goto LABEL_25;
  }
LABEL_23:
  this = PB::Writer::write(a2, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 104);
  if ((v4 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v4 & 4) == 0) {
    return this;
  }
LABEL_25:
  double v5 = *(double *)(v3 + 24);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::KappaPulseInertialHgAccel::hash_value(CMMsl::KappaPulseInertialHgAccel *this)
{
  __int16 v1 = *((_WORD *)this + 52);
  if ((v1 & 0x800) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 0x10) != 0) {
      goto LABEL_3;
    }
LABEL_35:
    double v3 = 0.0;
    if ((v1 & 0x20) != 0) {
      goto LABEL_6;
    }
LABEL_36:
    double v4 = 0.0;
    if ((v1 & 0x40) != 0) {
      goto LABEL_9;
    }
LABEL_37:
    double v5 = 0.0;
    if ((v1 & 8) != 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
  uint64_t v2 = *((void *)this + 12);
  if ((v1 & 0x10) == 0) {
    goto LABEL_35;
  }
LABEL_3:
  double v3 = *((double *)this + 5);
  if (v3 == 0.0) {
    double v3 = 0.0;
  }
  if ((v1 & 0x20) == 0) {
    goto LABEL_36;
  }
LABEL_6:
  double v4 = *((double *)this + 6);
  if (v4 == 0.0) {
    double v4 = 0.0;
  }
  if ((v1 & 0x40) == 0) {
    goto LABEL_37;
  }
LABEL_9:
  double v5 = *((double *)this + 7);
  if (v5 == 0.0) {
    double v5 = 0.0;
  }
  if ((v1 & 8) != 0)
  {
LABEL_12:
    uint64_t v6 = *((void *)this + 4);
    if ((*((_WORD *)this + 52) & 0x100) != 0) {
      goto LABEL_13;
    }
LABEL_39:
    double v7 = 0.0;
    if ((*((_WORD *)this + 52) & 0x200) != 0) {
      goto LABEL_16;
    }
LABEL_40:
    double v8 = 0.0;
    if ((*((_WORD *)this + 52) & 0x400) != 0) {
      goto LABEL_19;
    }
LABEL_41:
    double v9 = 0.0;
    if ((v1 & 0x80) != 0) {
      goto LABEL_22;
    }
LABEL_42:
    double v10 = 0.0;
    if (v1) {
      goto LABEL_25;
    }
LABEL_43:
    double v11 = 0.0;
    if ((v1 & 2) != 0) {
      goto LABEL_28;
    }
    goto LABEL_44;
  }
LABEL_38:
  uint64_t v6 = 0;
  if ((*((_WORD *)this + 52) & 0x100) == 0) {
    goto LABEL_39;
  }
LABEL_13:
  double v7 = *((double *)this + 9);
  if (v7 == 0.0) {
    double v7 = 0.0;
  }
  if ((*((_WORD *)this + 52) & 0x200) == 0) {
    goto LABEL_40;
  }
LABEL_16:
  double v8 = *((double *)this + 10);
  if (v8 == 0.0) {
    double v8 = 0.0;
  }
  if ((*((_WORD *)this + 52) & 0x400) == 0) {
    goto LABEL_41;
  }
LABEL_19:
  double v9 = *((double *)this + 11);
  if (v9 == 0.0) {
    double v9 = 0.0;
  }
  if ((v1 & 0x80) == 0) {
    goto LABEL_42;
  }
LABEL_22:
  double v10 = *((double *)this + 8);
  if (v10 == 0.0) {
    double v10 = 0.0;
  }
  if ((v1 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_25:
  double v11 = *((double *)this + 1);
  if (v11 == 0.0) {
    double v11 = 0.0;
  }
  if ((v1 & 2) != 0)
  {
LABEL_28:
    double v12 = *((double *)this + 2);
    if (v12 == 0.0) {
      double v12 = 0.0;
    }
    if ((v1 & 4) != 0) {
      goto LABEL_31;
    }
LABEL_45:
    double v13 = 0.0;
    return *(void *)&v3 ^ v2 ^ *(void *)&v4 ^ *(void *)&v5 ^ v6 ^ *(void *)&v7 ^ *(void *)&v8 ^ *(void *)&v9 ^ *(void *)&v10 ^ *(void *)&v11 ^ *(void *)&v12 ^ *(void *)&v13;
  }
LABEL_44:
  double v12 = 0.0;
  if ((v1 & 4) == 0) {
    goto LABEL_45;
  }
LABEL_31:
  double v13 = *((double *)this + 3);
  if (v13 == 0.0) {
    double v13 = 0.0;
  }
  return *(void *)&v3 ^ v2 ^ *(void *)&v4 ^ *(void *)&v5 ^ v6 ^ *(void *)&v7 ^ *(void *)&v8 ^ *(void *)&v9 ^ *(void *)&v10 ^ *(void *)&v11 ^ *(void *)&v12 ^ *(void *)&v13;
}

void CMMsl::KappaPulseResult::~KappaPulseResult(CMMsl::KappaPulseResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::KappaPulseResult::KappaPulseResult(CMMsl::KappaPulseResult *this, const CMMsl::KappaPulseResult *a2)
{
  *(void *)this = &unk_270642AD0;
  uint64_t v2 = (uint64_t *)((char *)this + 316);
  *((_DWORD *)this + 81) = 0;
  *(void *)((char *)this + 316) = 0;
  double v3 = (uint64_t *)((char *)a2 + 316);
  char v4 = *((unsigned char *)a2 + 324);
  if ((v4 & 8) != 0)
  {
    uint64_t v5 = 0;
    char v8 = *((unsigned char *)a2 + 312);
    *uint64_t v2 = 0;
    char v6 = 8;
    *((unsigned char *)this + 324) = 8;
    *((unsigned char *)this + 312) = v8;
    uint64_t v7 = *v3;
    char v4 = *((unsigned char *)a2 + 324);
    if ((v4 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  char v6 = 0;
  uint64_t v7 = *v3;
  if ((*((unsigned char *)a2 + 324) & 2) != 0)
  {
LABEL_5:
    float result = *((float *)a2 + 76);
    v6 |= 2u;
    *uint64_t v2 = 0;
    *((unsigned char *)this + 324) = v6;
    *((float *)this + 76) = result;
    uint64_t v7 = *v3;
    char v4 = *((unsigned char *)a2 + 324);
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
    float result = *((float *)a2 + 77);
    v6 |= 4u;
    *uint64_t v2 = 0;
    *((unsigned char *)this + 324) = v6;
    *((float *)this + 77) = result;
    uint64_t v7 = *v3;
    char v4 = *((unsigned char *)a2 + 324);
    if ((*v3 & 0x20) == 0)
    {
LABEL_8:
      if ((v7 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_75;
    }
  }
  else if ((v7 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v10 = *((void *)a2 + 6);
  uint64_t v5 = 32;
  *uint64_t v2 = 32;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 6) = v10;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x40) == 0)
  {
LABEL_9:
    if ((v7 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v11 = *((void *)a2 + 7);
  v5 |= 0x40uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 7) = v11;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 1) == 0)
  {
LABEL_10:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v12 = *((void *)a2 + 1);
  v5 |= 1uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 1) = v12;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x8000) == 0)
  {
LABEL_11:
    if ((v7 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_78;
  }
LABEL_77:
  float result = *((float *)a2 + 26);
  v5 |= 0x8000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 26) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x80) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v13 = *((void *)a2 + 8);
  v5 |= 0x80uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 8) = v13;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v14 = *((void *)a2 + 9);
  v5 |= 0x100uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 9) = v14;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_14:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_81;
  }
LABEL_80:
  float result = *((float *)a2 + 28);
  v5 |= 0x20000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 28) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x10000) == 0)
  {
LABEL_15:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_82;
  }
LABEL_81:
  float result = *((float *)a2 + 27);
  v5 |= 0x10000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 27) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_16:
    if ((v7 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_83;
  }
LABEL_82:
  float result = *((float *)a2 + 36);
  v5 |= 0x2000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 36) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x200) == 0)
  {
LABEL_17:
    if ((v7 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_84;
  }
LABEL_83:
  float result = *((float *)a2 + 20);
  v5 |= 0x200uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 20) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x400) == 0)
  {
LABEL_18:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_85;
  }
LABEL_84:
  float result = *((float *)a2 + 21);
  v5 |= 0x400uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 21) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x800000) == 0)
  {
LABEL_19:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_86;
  }
LABEL_85:
  float result = *((float *)a2 + 34);
  v5 |= 0x800000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 34) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x4000) == 0)
  {
LABEL_20:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_87;
  }
LABEL_86:
  float result = *((float *)a2 + 25);
  v5 |= 0x4000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 25) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x400000) == 0)
  {
LABEL_21:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_87:
  float result = *((float *)a2 + 33);
  v5 |= 0x400000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 33) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x2000) == 0)
  {
LABEL_22:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_89;
  }
LABEL_88:
  float result = *((float *)a2 + 24);
  v5 |= 0x2000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 24) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_90;
  }
LABEL_89:
  float result = *((float *)a2 + 38);
  v5 |= 0x8000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 38) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x100000) == 0)
  {
LABEL_24:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_91;
  }
LABEL_90:
  float result = *((float *)a2 + 31);
  v5 |= 0x100000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 31) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_25:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *((float *)a2 + 23);
  v5 |= 0x1000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 23) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_26:
    if ((v7 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_93;
  }
LABEL_92:
  float result = *((float *)a2 + 30);
  v5 |= 0x80000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 30) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x800) == 0)
  {
LABEL_27:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_94;
  }
LABEL_93:
  float result = *((float *)a2 + 22);
  v5 |= 0x800uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 22) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v7 & 0x40000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_95;
  }
LABEL_94:
  float result = *((float *)a2 + 37);
  v5 |= 0x4000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 37) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_29:
    if ((v7 & 0x20000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_96;
  }
LABEL_95:
  float result = *((float *)a2 + 65);
  v5 |= 0x40000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 65) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_30:
    if ((v7 & 0x4000000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_97;
  }
LABEL_96:
  float result = *((float *)a2 + 64);
  v5 |= 0x20000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 64) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_31:
    if ((v7 & 0x800000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *((float *)a2 + 73);
  v5 |= 0x4000000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 73) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_32:
    if ((v7 & 0x1000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *((float *)a2 + 58);
  v5 |= 0x800000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 58) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x1000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_100;
  }
LABEL_99:
  float result = *((float *)a2 + 59);
  v5 |= 0x1000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 59) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_34:
    if ((v7 & 0x10000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_101;
  }
LABEL_100:
  float result = *((float *)a2 + 71);
  v5 |= 0x1000000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 71) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x10000000000000) == 0)
  {
LABEL_35:
    if ((v7 & 0x800000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_102;
  }
LABEL_101:
  float result = *((float *)a2 + 63);
  v5 |= 0x10000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 63) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_36:
    if ((v7 & 0x8000000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_103;
  }
LABEL_102:
  float result = *((float *)a2 + 70);
  v5 |= 0x800000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 70) = result;
  uint64_t v7 = *v3;
  char v4 = *((unsigned char *)a2 + 324);
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_37:
    if ((v4 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_104;
  }
LABEL_103:
  float result = *((float *)a2 + 62);
  v5 |= 0x8000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 62) = result;
  uint64_t v7 = *v3;
  if ((*((unsigned char *)a2 + 324) & 1) == 0)
  {
LABEL_38:
    if ((v7 & 0x200000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_105;
  }
LABEL_104:
  float result = *((float *)a2 + 75);
  v6 |= 1u;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 75) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_39:
    if ((v7 & 0x4000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_106;
  }
LABEL_105:
  float result = *((float *)a2 + 68);
  v5 |= 0x200000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 68) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x100000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_107;
  }
LABEL_106:
  float result = *((float *)a2 + 61);
  v5 |= 0x4000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 61) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_41:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_108;
  }
LABEL_107:
  float result = *((float *)a2 + 67);
  v5 |= 0x100000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 67) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_42:
    if ((v7 & 0x8000000000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_109;
  }
LABEL_108:
  float result = *((float *)a2 + 60);
  v5 |= 0x2000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 60) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_110;
  }
LABEL_109:
  float result = *((float *)a2 + 74);
  v5 |= 0x8000000000000000;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 74) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_44:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_111;
  }
LABEL_110:
  float result = *((float *)a2 + 46);
  v5 |= 0x800000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 46) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_45:
    if ((v7 & 0x80000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_112;
  }
LABEL_111:
  float result = *((float *)a2 + 45);
  v5 |= 0x400000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 45) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_46:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_113;
  }
LABEL_112:
  float result = *((float *)a2 + 54);
  v5 |= 0x80000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 54) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_47:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_114;
  }
LABEL_113:
  float result = *((float *)a2 + 39);
  v5 |= 0x10000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 39) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_48:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_115;
  }
LABEL_114:
  float result = *((float *)a2 + 40);
  v5 |= 0x20000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 40) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_49:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *((float *)a2 + 52);
  v5 |= 0x20000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 52) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_50:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *((float *)a2 + 44);
  v5 |= 0x200000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 44) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_51:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *((float *)a2 + 51);
  v5 |= 0x10000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 51) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_52:
    if ((v7 & 0x200000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *((float *)a2 + 43);
  v5 |= 0x100000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 43) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_53:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *((float *)a2 + 56);
  v5 |= 0x200000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 56) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_121;
  }
LABEL_120:
  float result = *((float *)a2 + 49);
  v5 |= 0x4000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 49) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_122;
  }
LABEL_121:
  float result = *((float *)a2 + 42);
  v5 |= 0x80000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 42) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *((float *)a2 + 48);
  v5 |= 0x2000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 48) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *((float *)a2 + 41);
  v5 |= 0x40000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 41) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v7 & 8) == 0) {
      goto LABEL_59;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *((float *)a2 + 55);
  v5 |= 0x100000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 55) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_59:
    if ((v7 & 0x10) == 0) {
      goto LABEL_60;
    }
    goto LABEL_126;
  }
LABEL_125:
  uint64_t v15 = *((void *)a2 + 4);
  v5 |= 8uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 4) = v15;
  uint64_t v7 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_60:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_127;
  }
LABEL_126:
  uint64_t v16 = *((void *)a2 + 5);
  v5 |= 0x10uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 5) = v16;
  uint64_t v7 = *v3;
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x2000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *((float *)a2 + 35);
  v5 |= 0x1000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 35) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_129;
  }
LABEL_128:
  float result = *((float *)a2 + 72);
  v5 |= 0x2000000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 72) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_130;
  }
LABEL_129:
  float result = *((float *)a2 + 53);
  v5 |= 0x40000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 53) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x40000) == 0)
  {
LABEL_64:
    if ((v7 & 0x80000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }
LABEL_130:
  float result = *((float *)a2 + 29);
  v5 |= 0x40000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 29) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_65:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_132;
  }
LABEL_131:
  float result = *((float *)a2 + 66);
  v5 |= 0x80000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 66) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_66:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_133;
  }
LABEL_132:
  float result = *((float *)a2 + 47);
  v5 |= 0x1000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 47) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x200000) == 0)
  {
LABEL_67:
    if ((v7 & 0x400000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_134;
  }
LABEL_133:
  float result = *((float *)a2 + 32);
  v5 |= 0x200000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 32) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_68:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_135;
  }
LABEL_134:
  float result = *((float *)a2 + 69);
  v5 |= 0x400000000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 69) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_69:
    if ((v7 & 2) == 0) {
      goto LABEL_70;
    }
    goto LABEL_136;
  }
LABEL_135:
  float result = *((float *)a2 + 50);
  v5 |= 0x8000000000uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((float *)this + 50) = result;
  uint64_t v7 = *v3;
  if ((*v3 & 2) == 0)
  {
LABEL_70:
    if ((v7 & 4) == 0) {
      goto LABEL_71;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t v17 = *((void *)a2 + 2);
  v5 |= 2uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 2) = v17;
  uint64_t v7 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_71:
    if ((v7 & 0x400000000000) == 0) {
      return result;
    }
LABEL_138:
    float result = *((float *)a2 + 57);
    *uint64_t v2 = v5 | 0x400000000000;
    *((unsigned char *)this + 324) = v6;
    *((float *)this + 57) = result;
    return result;
  }
LABEL_137:
  uint64_t v18 = *((void *)a2 + 3);
  v5 |= 4uLL;
  *uint64_t v2 = v5;
  *((unsigned char *)this + 324) = v6;
  *((void *)this + 3) = v18;
  if ((*v3 & 0x400000000000) != 0) {
    goto LABEL_138;
  }
  return result;
}

CMMsl *CMMsl::KappaPulseResult::operator=(CMMsl *a1, const CMMsl::KappaPulseResult *a2)
{
  v5[41] = *MEMORY[0x263EF8340];
  if (a1 != a2)
  {
    CMMsl::KappaPulseResult::KappaPulseResult((CMMsl::KappaPulseResult *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaPulseResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaPulseResult *a2, CMMsl::KappaPulseResult *a3)
{
  int v3 = *((_DWORD *)this + 81);
  uint64_t v4 = *(void *)((char *)this + 316);
  int v5 = *((_DWORD *)a2 + 81);
  *(void *)((char *)this + 316) = *(void *)((char *)a2 + 316);
  *((_DWORD *)this + 81) = v5;
  *(void *)((char *)a2 + 316) = v4;
  *((_DWORD *)a2 + 81) = v3;
  char v6 = *((unsigned char *)this + 312);
  *((unsigned char *)this + 312) = *((unsigned char *)a2 + 312);
  *((unsigned char *)a2 + 312) = v6;
  int v7 = *((_DWORD *)this + 76);
  *((_DWORD *)this + 76) = *((_DWORD *)a2 + 76);
  *((_DWORD *)a2 + 76) = v7;
  int v8 = *((_DWORD *)this + 77);
  *((_DWORD *)this + 77) = *((_DWORD *)a2 + 77);
  *((_DWORD *)a2 + 77) = v8;
  uint64_t v9 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v9;
  uint64_t v10 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v10;
  uint64_t v11 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v11;
  int v12 = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v12;
  uint64_t v13 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v13;
  uint64_t v14 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v14;
  int v15 = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v15;
  int v16 = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v16;
  int v17 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v17;
  int v18 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v18;
  int v19 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v19;
  int v20 = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v20;
  int v21 = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v21;
  int v22 = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v22;
  int v23 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v23;
  int v24 = *((_DWORD *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((_DWORD *)a2 + 38) = v24;
  int v25 = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v25;
  int v26 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v26;
  int v27 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v27;
  int v28 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v28;
  int v29 = *((_DWORD *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((_DWORD *)a2 + 37) = v29;
  int v30 = *((_DWORD *)this + 65);
  *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
  *((_DWORD *)a2 + 65) = v30;
  int v31 = *((_DWORD *)this + 64);
  *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
  *((_DWORD *)a2 + 64) = v31;
  int v32 = *((_DWORD *)this + 73);
  *((_DWORD *)this + 73) = *((_DWORD *)a2 + 73);
  *((_DWORD *)a2 + 73) = v32;
  int v33 = *((_DWORD *)this + 58);
  *((_DWORD *)this + 58) = *((_DWORD *)a2 + 58);
  *((_DWORD *)a2 + 58) = v33;
  int v34 = *((_DWORD *)this + 59);
  *((_DWORD *)this + 59) = *((_DWORD *)a2 + 59);
  *((_DWORD *)a2 + 59) = v34;
  int v35 = *((_DWORD *)this + 71);
  *((_DWORD *)this + 71) = *((_DWORD *)a2 + 71);
  *((_DWORD *)a2 + 71) = v35;
  int v36 = *((_DWORD *)this + 63);
  *((_DWORD *)this + 63) = *((_DWORD *)a2 + 63);
  *((_DWORD *)a2 + 63) = v36;
  int v37 = *((_DWORD *)this + 70);
  *((_DWORD *)this + 70) = *((_DWORD *)a2 + 70);
  *((_DWORD *)a2 + 70) = v37;
  int v38 = *((_DWORD *)this + 62);
  *((_DWORD *)this + 62) = *((_DWORD *)a2 + 62);
  *((_DWORD *)a2 + 62) = v38;
  int v39 = *((_DWORD *)this + 75);
  *((_DWORD *)this + 75) = *((_DWORD *)a2 + 75);
  *((_DWORD *)a2 + 75) = v39;
  int v40 = *((_DWORD *)this + 68);
  *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
  *((_DWORD *)a2 + 68) = v40;
  int v41 = *((_DWORD *)this + 61);
  *((_DWORD *)this + 61) = *((_DWORD *)a2 + 61);
  *((_DWORD *)a2 + 61) = v41;
  int v42 = *((_DWORD *)this + 67);
  *((_DWORD *)this + 67) = *((_DWORD *)a2 + 67);
  *((_DWORD *)a2 + 67) = v42;
  int v43 = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = *((_DWORD *)a2 + 60);
  *((_DWORD *)a2 + 60) = v43;
  int v44 = *((_DWORD *)this + 74);
  *((_DWORD *)this + 74) = *((_DWORD *)a2 + 74);
  *((_DWORD *)a2 + 74) = v44;
  int v45 = *((_DWORD *)this + 46);
  *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
  *((_DWORD *)a2 + 46) = v45;
  int v46 = *((_DWORD *)this + 45);
  *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
  *((_DWORD *)a2 + 45) = v46;
  int v47 = *((_DWORD *)this + 54);
  *((_DWORD *)this + 54) = *((_DWORD *)a2 + 54);
  *((_DWORD *)a2 + 54) = v47;
  int v48 = *((_DWORD *)this + 39);
  *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
  *((_DWORD *)a2 + 39) = v48;
  int v49 = *((_DWORD *)this + 40);
  *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
  *((_DWORD *)a2 + 40) = v49;
  int v50 = *((_DWORD *)this + 52);
  *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
  *((_DWORD *)a2 + 52) = v50;
  int v51 = *((_DWORD *)this + 44);
  *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
  *((_DWORD *)a2 + 44) = v51;
  int v52 = *((_DWORD *)this + 51);
  *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
  *((_DWORD *)a2 + 51) = v52;
  int v53 = *((_DWORD *)this + 43);
  *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
  *((_DWORD *)a2 + 43) = v53;
  int v54 = *((_DWORD *)this + 56);
  *((_DWORD *)this + 56) = *((_DWORD *)a2 + 56);
  *((_DWORD *)a2 + 56) = v54;
  int v55 = *((_DWORD *)this + 49);
  *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
  *((_DWORD *)a2 + 49) = v55;
  int v56 = *((_DWORD *)this + 42);
  *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
  *((_DWORD *)a2 + 42) = v56;
  int v57 = *((_DWORD *)this + 48);
  *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
  *((_DWORD *)a2 + 48) = v57;
  int v58 = *((_DWORD *)this + 41);
  *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
  *((_DWORD *)a2 + 41) = v58;
  int v59 = *((_DWORD *)this + 55);
  *((_DWORD *)this + 55) = *((_DWORD *)a2 + 55);
  *((_DWORD *)a2 + 55) = v59;
  uint64_t v60 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v60;
  uint64_t v61 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v61;
  int v62 = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v62;
  int v63 = *((_DWORD *)this + 72);
  *((_DWORD *)this + 72) = *((_DWORD *)a2 + 72);
  *((_DWORD *)a2 + 72) = v63;
  int v64 = *((_DWORD *)this + 53);
  *((_DWORD *)this + 53) = *((_DWORD *)a2 + 53);
  *((_DWORD *)a2 + 53) = v64;
  int v65 = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v65;
  int v66 = *((_DWORD *)this + 66);
  *((_DWORD *)this + 66) = *((_DWORD *)a2 + 66);
  *((_DWORD *)a2 + 66) = v66;
  int v67 = *((_DWORD *)this + 47);
  *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
  *((_DWORD *)a2 + 47) = v67;
  int v68 = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v68;
  int v69 = *((_DWORD *)this + 69);
  *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
  *((_DWORD *)a2 + 69) = v69;
  int v70 = *((_DWORD *)this + 50);
  *((_DWORD *)this + 50) = *((_DWORD *)a2 + 50);
  *((_DWORD *)a2 + 50) = v70;
  uint64_t v71 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v71;
  uint64_t v72 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v72;
  float result = *((float *)this + 57);
  *((_DWORD *)this + 57) = *((_DWORD *)a2 + 57);
  *((float *)a2 + 57) = result;
  return result;
}

float CMMsl::KappaPulseResult::KappaPulseResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642AD0;
  uint64_t v2 = *(void *)(a2 + 316);
  *(_DWORD *)(a1 + 324) = *(_DWORD *)(a2 + 324);
  *(void *)(a1 + 316) = v2;
  *(_DWORD *)(a2 + 324) = 0;
  *(void *)(a2 + 316) = 0;
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(_DWORD *)(a1 + 304) = *(_DWORD *)(a2 + 304);
  *(_DWORD *)(a1 + 308) = *(_DWORD *)(a2 + 308);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 292) = *(_DWORD *)(a2 + 292);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
  *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(_DWORD *)(a1 + 300) = *(_DWORD *)(a2 + 300);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 204) = *(_DWORD *)(a2 + 204);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  float result = *(float *)(a2 + 228);
  *(float *)(a1 + 228) = result;
  return result;
}

CMMsl *CMMsl::KappaPulseResult::operator=(CMMsl *a1, uint64_t a2)
{
  v5[41] = *MEMORY[0x263EF8340];
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaPulseResult::KappaPulseResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaPulseResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaPulseResult::formatText(CMMsl::KappaPulseResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = (uint64_t *)((char *)this + 316);
  uint64_t v6 = *(void *)((char *)this + 316);
  if ((v6 & 0x200) != 0)
  {
    PB::TextFormatter::format(a2, "arclengthXYBiggestImpact", *((float *)this + 20));
    uint64_t v6 = *v5;
    char v7 = *((unsigned char *)this + 324);
    if ((*v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v7 = *((unsigned char *)this + 324);
  if ((v6 & 0x400) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(a2, "arclengthXYOverEpoch", *((float *)this + 21));
    uint64_t v6 = *v5;
    char v7 = *((unsigned char *)this + 324);
  }
LABEL_6:
  if ((v6 & 0x800) != 0)
  {
    PB::TextFormatter::format(a2, "arclengthXYZBiggestImpact", *((float *)this + 22));
    uint64_t v6 = *v5;
    char v7 = *((unsigned char *)this + 324);
    if ((*v5 & 0x1000) == 0)
    {
LABEL_8:
      if ((v6 & 0x2000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_78;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(a2, "arclengthXYZOverEpoch", *((float *)this + 23));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(a2, "arclengthZBiggestImpact", *((float *)this + 24));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(a2, "arclengthZOverEpoch", *((float *)this + 25));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v6 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(a2, "configDecelPulseThreshold", *((float *)this + 26));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 1) == 0)
  {
LABEL_12:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(a2, "deltaTriggerTime");
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_13:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(a2, "deltaVXYBiggestImpact", *((float *)this + 27));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_14:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(a2, "deltaVXYOverEpoch", *((float *)this + 28));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_15:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(a2, "deltaVXYUnconditional", *((float *)this + 29));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_16:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(a2, "deltaVXYZBiggestImpact", *((float *)this + 30));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x100000) == 0)
  {
LABEL_17:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(a2, "deltaVXYZOverEpoch", *((float *)this + 31));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_18:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(a2, "deltaVXYZUnconditional", *((float *)this + 32));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x400000) == 0)
  {
LABEL_19:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(a2, "deltaVZBiggestImpact", *((float *)this + 33));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x800000) == 0)
  {
LABEL_20:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(a2, "deltaVZOverEpoch", *((float *)this + 34));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_21:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(a2, "deltaVZUnconditional", *((float *)this + 35));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_22:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(a2, "durationXYBiggestImpact", *((float *)this + 36));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_23:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(a2, "durationXYZBiggestImpact", *((float *)this + 37));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_24:
    if ((v6 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(a2, "durationZBiggestImpact", *((float *)this + 38));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 2) == 0)
  {
LABEL_25:
    if ((v6 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(a2, "epochFirstTimestamp");
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 4) == 0)
  {
LABEL_26:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 8) == 0)
  {
LABEL_27:
    if ((v6 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(a2, "faultCounter");
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x10) == 0)
  {
LABEL_28:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(a2, "hgAccelBufferSize");
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(a2, "hgArclengthXYBiggestImpact", *((float *)this + 39));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(a2, "hgArclengthXYOverEpoch", *((float *)this + 40));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(a2, "hgArclengthXYZBiggestImpact", *((float *)this + 41));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(a2, "hgArclengthXYZOverEpoch", *((float *)this + 42));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(a2, "hgArclengthZBiggestImpact", *((float *)this + 43));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(a2, "hgArclengthZOverEpoch", *((float *)this + 44));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(a2, "hgDeltaVXYBiggestImpact", *((float *)this + 45));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(a2, "hgDeltaVXYOverEpoch", *((float *)this + 46));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(a2, "hgDeltaVXYUnconditional", *((float *)this + 47));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(a2, "hgDeltaVXYZBiggestImpact", *((float *)this + 48));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(a2, "hgDeltaVXYZOverEpoch", *((float *)this + 49));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(a2, "hgDeltaVXYZUnconditional", *((float *)this + 50));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(a2, "hgDeltaVZBiggestImpact", *((float *)this + 51));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(a2, "hgDeltaVZOverEpoch", *((float *)this + 52));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(a2, "hgDeltaVZUnconditional", *((float *)this + 53));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(a2, "hgDurationXYBiggestImpact", *((float *)this + 54));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(a2, "hgDurationXYZBiggestImpact", *((float *)this + 55));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x400000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(a2, "hgDurationZBiggestImpact", *((float *)this + 56));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_47:
    if ((v7 & 8) == 0) {
      goto LABEL_48;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(a2, "hgWeightCoeff", *((float *)this + 57));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((v7 & 8) == 0)
  {
LABEL_48:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(a2, "isPulseDetected");
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(a2, "lgArclengthXYBiggestImpact", *((float *)this + 58));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(a2, "lgArclengthXYOverEpoch", *((float *)this + 59));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(a2, "lgArclengthXYZBiggestImpact", *((float *)this + 60));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(a2, "lgArclengthXYZOverEpoch", *((float *)this + 61));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(a2, "lgArclengthZBiggestImpact", *((float *)this + 62));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(a2, "lgArclengthZOverEpoch", *((float *)this + 63));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(a2, "lgDeltaVXYBiggestImpact", *((float *)this + 64));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(a2, "lgDeltaVXYOverEpoch", *((float *)this + 65));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(a2, "lgDeltaVXYUnconditional", *((float *)this + 66));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(a2, "lgDeltaVXYZBiggestImpact", *((float *)this + 67));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(a2, "lgDeltaVXYZOverEpoch", *((float *)this + 68));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(a2, "lgDeltaVXYZUnconditional", *((float *)this + 69));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(a2, "lgDeltaVZBiggestImpact", *((float *)this + 70));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(a2, "lgDeltaVZOverEpoch", *((float *)this + 71));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(a2, "lgDeltaVZUnconditional", *((float *)this + 72));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x4000000000000000) == 0)
  {
LABEL_64:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(a2, "lgDurationXYBiggestImpact", *((float *)this + 73));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((*v5 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v7 & 1) == 0) {
      goto LABEL_66;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(a2, "lgDurationXYZBiggestImpact", *((float *)this + 74));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((v7 & 1) == 0)
  {
LABEL_66:
    if ((v7 & 2) == 0) {
      goto LABEL_67;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(a2, "lgDurationZBiggestImpact", *((float *)this + 75));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)this + 324);
  if ((v7 & 2) == 0)
  {
LABEL_67:
    if ((v7 & 4) == 0) {
      goto LABEL_68;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(a2, "maxPulse", *((float *)this + 76));
  uint64_t v6 = *v5;
  if ((*((unsigned char *)this + 324) & 4) == 0)
  {
LABEL_68:
    if ((v6 & 0x20) == 0) {
      goto LABEL_69;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(a2, "maxPulseHeight", *((float *)this + 77));
  uint64_t v6 = *v5;
  if ((*v5 & 0x20) == 0)
  {
LABEL_69:
    if ((v6 & 0x40) == 0) {
      goto LABEL_70;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(a2, "maxPulseStartTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_70:
    if ((v6 & 0x80) == 0) {
      goto LABEL_71;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(a2, "maxPulseTime");
  uint64_t v6 = *v5;
  if ((*v5 & 0x80) == 0)
  {
LABEL_71:
    if ((v6 & 0x100) == 0) {
      goto LABEL_73;
    }
    goto LABEL_72;
  }
LABEL_140:
  PB::TextFormatter::format(a2, "timestamp");
  if ((*v5 & 0x100) != 0) {
LABEL_72:
  }
    PB::TextFormatter::format(a2, "triggerTimestamp");
LABEL_73:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaPulseResult::readFrom(CMMsl::KappaPulseResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    int v8 = (char *)this + 316;
    while (1)
    {
      uint64_t v9 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_22:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) > 200)
      {
        switch(v21)
        {
          case 0xC9:
            *(void *)v8 |= 2uLL;
            unint64_t v140 = *((void *)a2 + 1);
            unint64_t v141 = *((void *)a2 + 2);
            uint64_t v142 = *(void *)a2;
            if (v140 > 0xFFFFFFFFFFFFFFF5 || v140 + 10 > v141)
            {
              char v184 = 0;
              unsigned int v185 = 0;
              uint64_t v145 = 0;
              if (v141 <= v140) {
                unint64_t v141 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v141 == v140)
                {
                  uint64_t v145 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_371;
                }
                unint64_t v186 = v140 + 1;
                char v187 = *(unsigned char *)(v142 + v140);
                *((void *)a2 + 1) = v186;
                v145 |= (unint64_t)(v187 & 0x7F) << v184;
                if ((v187 & 0x80) == 0) {
                  break;
                }
                v184 += 7;
                unint64_t v140 = v186;
                BOOL v15 = v185++ > 8;
                if (v15)
                {
LABEL_324:
                  uint64_t v145 = 0;
                  goto LABEL_371;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v145 = 0;
              }
            }
            else
            {
              char v143 = 0;
              unsigned int v144 = 0;
              uint64_t v145 = 0;
              while (1)
              {
                unint64_t v146 = v140 + 1;
                *((void *)a2 + 1) = v140 + 1;
                char v147 = *(unsigned char *)(v142 + v140);
                v145 |= (unint64_t)(v147 & 0x7F) << v143;
                if ((v147 & 0x80) == 0) {
                  break;
                }
                v143 += 7;
                unint64_t v140 = v146;
                BOOL v15 = v144++ > 8;
                if (v15) {
                  goto LABEL_324;
                }
              }
            }
LABEL_371:
            *((void *)this + 2) = v145;
            break;
          case 0xCA:
            *(void *)v8 |= 4uLL;
            unint64_t v148 = *((void *)a2 + 1);
            unint64_t v149 = *((void *)a2 + 2);
            uint64_t v150 = *(void *)a2;
            if (v148 > 0xFFFFFFFFFFFFFFF5 || v148 + 10 > v149)
            {
              char v188 = 0;
              unsigned int v189 = 0;
              uint64_t v153 = 0;
              if (v149 <= v148) {
                unint64_t v149 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v149 == v148)
                {
                  uint64_t v153 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_375;
                }
                unint64_t v190 = v148 + 1;
                char v191 = *(unsigned char *)(v150 + v148);
                *((void *)a2 + 1) = v190;
                v153 |= (unint64_t)(v191 & 0x7F) << v188;
                if ((v191 & 0x80) == 0) {
                  break;
                }
                v188 += 7;
                unint64_t v148 = v190;
                BOOL v15 = v189++ > 8;
                if (v15)
                {
LABEL_331:
                  uint64_t v153 = 0;
                  goto LABEL_375;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v153 = 0;
              }
            }
            else
            {
              char v151 = 0;
              unsigned int v152 = 0;
              uint64_t v153 = 0;
              while (1)
              {
                unint64_t v154 = v148 + 1;
                *((void *)a2 + 1) = v148 + 1;
                char v155 = *(unsigned char *)(v150 + v148);
                v153 |= (unint64_t)(v155 & 0x7F) << v151;
                if ((v155 & 0x80) == 0) {
                  break;
                }
                v151 += 7;
                unint64_t v148 = v154;
                BOOL v15 = v152++ > 8;
                if (v15) {
                  goto LABEL_331;
                }
              }
            }
LABEL_375:
            *((void *)this + 3) = v153;
            break;
          case 0x12D:
            *(void *)v8 |= 0x400000000000uLL;
            unint64_t v26 = *((void *)a2 + 1);
            if (v26 <= 0xFFFFFFFFFFFFFFFBLL && v26 + 4 <= *((void *)a2 + 2))
            {
              *((_DWORD *)this + 57) = *(_DWORD *)(*(void *)a2 + v26);
LABEL_334:
              *((void *)a2 + 1) += 4;
            }
            else
            {
              *((unsigned char *)a2 + 24) = 1;
            }
            break;
          default:
LABEL_20:
            uint64_t result = PB::Reader::skip(a2);
            if (!result) {
              return result;
            }
            break;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 1:
            v8[8] |= 8u;
            unint64_t v22 = *((void *)a2 + 1);
            if (v22 >= *((void *)a2 + 2))
            {
              BOOL v25 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v23 = v22 + 1;
              int v24 = *(unsigned __int8 *)(*(void *)a2 + v22);
              *((void *)a2 + 1) = v23;
              BOOL v25 = v24 != 0;
            }
            *((unsigned char *)this + 312) = v25;
            goto LABEL_335;
          case 2:
            v8[8] |= 2u;
            unint64_t v27 = *((void *)a2 + 1);
            if (v27 > 0xFFFFFFFFFFFFFFFBLL || v27 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 76) = *(_DWORD *)(*(void *)a2 + v27);
            goto LABEL_334;
          case 3:
            v8[8] |= 4u;
            unint64_t v28 = *((void *)a2 + 1);
            if (v28 > 0xFFFFFFFFFFFFFFFBLL || v28 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 77) = *(_DWORD *)(*(void *)a2 + v28);
            goto LABEL_334;
          case 4:
            *(void *)v8 |= 0x20uLL;
            unint64_t v29 = *((void *)a2 + 1);
            unint64_t v30 = *((void *)a2 + 2);
            uint64_t v31 = *(void *)a2;
            if (v29 <= 0xFFFFFFFFFFFFFFF5 && v29 + 10 <= v30)
            {
              char v32 = 0;
              unsigned int v33 = 0;
              uint64_t v34 = 0;
              do
              {
                unint64_t v35 = v29 + 1;
                *((void *)a2 + 1) = v29 + 1;
                char v36 = *(unsigned char *)(v31 + v29);
                v34 |= (unint64_t)(v36 & 0x7F) << v32;
                if ((v36 & 0x80) == 0) {
                  goto LABEL_343;
                }
                v32 += 7;
                unint64_t v29 = v35;
                BOOL v15 = v33++ > 8;
              }
              while (!v15);
LABEL_275:
              uint64_t v34 = 0;
              goto LABEL_343;
            }
            char v156 = 0;
            unsigned int v157 = 0;
            uint64_t v34 = 0;
            if (v30 <= v29) {
              unint64_t v30 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v30 == v29)
              {
                uint64_t v34 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v158 = v29 + 1;
                char v159 = *(unsigned char *)(v31 + v29);
                *((void *)a2 + 1) = v158;
                v34 |= (unint64_t)(v159 & 0x7F) << v156;
                if (v159 < 0)
                {
                  v156 += 7;
                  unint64_t v29 = v158;
                  BOOL v15 = v157++ > 8;
                  if (v15) {
                    goto LABEL_275;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v34 = 0;
                }
              }
              break;
            }
LABEL_343:
            *((void *)this + 6) = v34;
            goto LABEL_335;
          case 5:
            *(void *)v8 |= 0x40uLL;
            unint64_t v37 = *((void *)a2 + 1);
            unint64_t v38 = *((void *)a2 + 2);
            uint64_t v39 = *(void *)a2;
            if (v37 <= 0xFFFFFFFFFFFFFFF5 && v37 + 10 <= v38)
            {
              char v40 = 0;
              unsigned int v41 = 0;
              uint64_t v42 = 0;
              do
              {
                unint64_t v43 = v37 + 1;
                *((void *)a2 + 1) = v37 + 1;
                char v44 = *(unsigned char *)(v39 + v37);
                v42 |= (unint64_t)(v44 & 0x7F) << v40;
                if ((v44 & 0x80) == 0) {
                  goto LABEL_347;
                }
                v40 += 7;
                unint64_t v37 = v43;
                BOOL v15 = v41++ > 8;
              }
              while (!v15);
LABEL_282:
              uint64_t v42 = 0;
              goto LABEL_347;
            }
            char v160 = 0;
            unsigned int v161 = 0;
            uint64_t v42 = 0;
            if (v38 <= v37) {
              unint64_t v38 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v38 == v37)
              {
                uint64_t v42 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v162 = v37 + 1;
                char v163 = *(unsigned char *)(v39 + v37);
                *((void *)a2 + 1) = v162;
                v42 |= (unint64_t)(v163 & 0x7F) << v160;
                if (v163 < 0)
                {
                  v160 += 7;
                  unint64_t v37 = v162;
                  BOOL v15 = v161++ > 8;
                  if (v15) {
                    goto LABEL_282;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v42 = 0;
                }
              }
              break;
            }
LABEL_347:
            *((void *)this + 7) = v42;
            goto LABEL_335;
          case 6:
            *(void *)v8 |= 1uLL;
            unint64_t v45 = *((void *)a2 + 1);
            unint64_t v46 = *((void *)a2 + 2);
            uint64_t v47 = *(void *)a2;
            if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
            {
              char v48 = 0;
              unsigned int v49 = 0;
              uint64_t v50 = 0;
              do
              {
                unint64_t v51 = v45 + 1;
                *((void *)a2 + 1) = v45 + 1;
                char v52 = *(unsigned char *)(v47 + v45);
                v50 |= (unint64_t)(v52 & 0x7F) << v48;
                if ((v52 & 0x80) == 0) {
                  goto LABEL_351;
                }
                v48 += 7;
                unint64_t v45 = v51;
                BOOL v15 = v49++ > 8;
              }
              while (!v15);
LABEL_289:
              uint64_t v50 = 0;
              goto LABEL_351;
            }
            char v164 = 0;
            unsigned int v165 = 0;
            uint64_t v50 = 0;
            if (v46 <= v45) {
              unint64_t v46 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v46 == v45)
              {
                uint64_t v50 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v166 = v45 + 1;
                char v167 = *(unsigned char *)(v47 + v45);
                *((void *)a2 + 1) = v166;
                v50 |= (unint64_t)(v167 & 0x7F) << v164;
                if (v167 < 0)
                {
                  v164 += 7;
                  unint64_t v45 = v166;
                  BOOL v15 = v165++ > 8;
                  if (v15) {
                    goto LABEL_289;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v50 = 0;
                }
              }
              break;
            }
LABEL_351:
            *((void *)this + 1) = v50;
            goto LABEL_335;
          case 7:
            *(void *)v8 |= 0x8000uLL;
            unint64_t v53 = *((void *)a2 + 1);
            if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 26) = *(_DWORD *)(*(void *)a2 + v53);
            goto LABEL_334;
          case 8:
            *(void *)v8 |= 0x80uLL;
            unint64_t v54 = *((void *)a2 + 1);
            unint64_t v55 = *((void *)a2 + 2);
            uint64_t v56 = *(void *)a2;
            if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
            {
              char v57 = 0;
              unsigned int v58 = 0;
              uint64_t v59 = 0;
              do
              {
                unint64_t v60 = v54 + 1;
                *((void *)a2 + 1) = v54 + 1;
                char v61 = *(unsigned char *)(v56 + v54);
                v59 |= (unint64_t)(v61 & 0x7F) << v57;
                if ((v61 & 0x80) == 0) {
                  goto LABEL_355;
                }
                v57 += 7;
                unint64_t v54 = v60;
                BOOL v15 = v58++ > 8;
              }
              while (!v15);
LABEL_296:
              uint64_t v59 = 0;
              goto LABEL_355;
            }
            char v168 = 0;
            unsigned int v169 = 0;
            uint64_t v59 = 0;
            if (v55 <= v54) {
              unint64_t v55 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v55 == v54)
              {
                uint64_t v59 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v170 = v54 + 1;
                char v171 = *(unsigned char *)(v56 + v54);
                *((void *)a2 + 1) = v170;
                v59 |= (unint64_t)(v171 & 0x7F) << v168;
                if (v171 < 0)
                {
                  v168 += 7;
                  unint64_t v54 = v170;
                  BOOL v15 = v169++ > 8;
                  if (v15) {
                    goto LABEL_296;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v59 = 0;
                }
              }
              break;
            }
LABEL_355:
            *((void *)this + 8) = v59;
            goto LABEL_335;
          case 9:
            *(void *)v8 |= 0x100uLL;
            unint64_t v62 = *((void *)a2 + 1);
            unint64_t v63 = *((void *)a2 + 2);
            uint64_t v64 = *(void *)a2;
            if (v62 <= 0xFFFFFFFFFFFFFFF5 && v62 + 10 <= v63)
            {
              char v65 = 0;
              unsigned int v66 = 0;
              uint64_t v67 = 0;
              do
              {
                unint64_t v68 = v62 + 1;
                *((void *)a2 + 1) = v62 + 1;
                char v69 = *(unsigned char *)(v64 + v62);
                v67 |= (unint64_t)(v69 & 0x7F) << v65;
                if ((v69 & 0x80) == 0) {
                  goto LABEL_359;
                }
                v65 += 7;
                unint64_t v62 = v68;
                BOOL v15 = v66++ > 8;
              }
              while (!v15);
LABEL_303:
              uint64_t v67 = 0;
              goto LABEL_359;
            }
            char v172 = 0;
            unsigned int v173 = 0;
            uint64_t v67 = 0;
            if (v63 <= v62) {
              unint64_t v63 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v63 == v62)
              {
                uint64_t v67 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v174 = v62 + 1;
                char v175 = *(unsigned char *)(v64 + v62);
                *((void *)a2 + 1) = v174;
                v67 |= (unint64_t)(v175 & 0x7F) << v172;
                if (v175 < 0)
                {
                  v172 += 7;
                  unint64_t v62 = v174;
                  BOOL v15 = v173++ > 8;
                  if (v15) {
                    goto LABEL_303;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v67 = 0;
                }
              }
              break;
            }
LABEL_359:
            *((void *)this + 9) = v67;
            goto LABEL_335;
          case 10:
            *(void *)v8 |= 0x20000uLL;
            unint64_t v70 = *((void *)a2 + 1);
            if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 28) = *(_DWORD *)(*(void *)a2 + v70);
            goto LABEL_334;
          case 11:
            *(void *)v8 |= 0x10000uLL;
            unint64_t v71 = *((void *)a2 + 1);
            if (v71 > 0xFFFFFFFFFFFFFFFBLL || v71 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 27) = *(_DWORD *)(*(void *)a2 + v71);
            goto LABEL_334;
          case 12:
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v72 = *((void *)a2 + 1);
            if (v72 > 0xFFFFFFFFFFFFFFFBLL || v72 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 36) = *(_DWORD *)(*(void *)a2 + v72);
            goto LABEL_334;
          case 13:
            *(void *)v8 |= 0x200uLL;
            unint64_t v73 = *((void *)a2 + 1);
            if (v73 > 0xFFFFFFFFFFFFFFFBLL || v73 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v73);
            goto LABEL_334;
          case 14:
            *(void *)v8 |= 0x400uLL;
            unint64_t v74 = *((void *)a2 + 1);
            if (v74 > 0xFFFFFFFFFFFFFFFBLL || v74 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v74);
            goto LABEL_334;
          case 15:
            *(void *)v8 |= 0x800000uLL;
            unint64_t v75 = *((void *)a2 + 1);
            if (v75 > 0xFFFFFFFFFFFFFFFBLL || v75 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 34) = *(_DWORD *)(*(void *)a2 + v75);
            goto LABEL_334;
          case 16:
            *(void *)v8 |= 0x4000uLL;
            unint64_t v76 = *((void *)a2 + 1);
            if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v76);
            goto LABEL_334;
          case 17:
            *(void *)v8 |= 0x400000uLL;
            unint64_t v77 = *((void *)a2 + 1);
            if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v77);
            goto LABEL_334;
          case 18:
            *(void *)v8 |= 0x2000uLL;
            unint64_t v78 = *((void *)a2 + 1);
            if (v78 > 0xFFFFFFFFFFFFFFFBLL || v78 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 24) = *(_DWORD *)(*(void *)a2 + v78);
            goto LABEL_334;
          case 19:
            *(void *)v8 |= 0x8000000uLL;
            unint64_t v79 = *((void *)a2 + 1);
            if (v79 > 0xFFFFFFFFFFFFFFFBLL || v79 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 38) = *(_DWORD *)(*(void *)a2 + v79);
            goto LABEL_334;
          case 20:
            *(void *)v8 |= 0x100000uLL;
            unint64_t v80 = *((void *)a2 + 1);
            if (v80 > 0xFFFFFFFFFFFFFFFBLL || v80 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 31) = *(_DWORD *)(*(void *)a2 + v80);
            goto LABEL_334;
          case 21:
            *(void *)v8 |= 0x1000uLL;
            unint64_t v81 = *((void *)a2 + 1);
            if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 23) = *(_DWORD *)(*(void *)a2 + v81);
            goto LABEL_334;
          case 22:
            *(void *)v8 |= 0x80000uLL;
            unint64_t v82 = *((void *)a2 + 1);
            if (v82 > 0xFFFFFFFFFFFFFFFBLL || v82 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v82);
            goto LABEL_334;
          case 23:
            *(void *)v8 |= 0x800uLL;
            unint64_t v83 = *((void *)a2 + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 22) = *(_DWORD *)(*(void *)a2 + v83);
            goto LABEL_334;
          case 24:
            *(void *)v8 |= 0x4000000uLL;
            unint64_t v84 = *((void *)a2 + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 37) = *(_DWORD *)(*(void *)a2 + v84);
            goto LABEL_334;
          case 25:
            *(void *)v8 |= 0x40000000000000uLL;
            unint64_t v85 = *((void *)a2 + 1);
            if (v85 > 0xFFFFFFFFFFFFFFFBLL || v85 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 65) = *(_DWORD *)(*(void *)a2 + v85);
            goto LABEL_334;
          case 26:
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v86 = *((void *)a2 + 1);
            if (v86 > 0xFFFFFFFFFFFFFFFBLL || v86 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 64) = *(_DWORD *)(*(void *)a2 + v86);
            goto LABEL_334;
          case 27:
            *(void *)v8 |= 0x4000000000000000uLL;
            unint64_t v87 = *((void *)a2 + 1);
            if (v87 > 0xFFFFFFFFFFFFFFFBLL || v87 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 73) = *(_DWORD *)(*(void *)a2 + v87);
            goto LABEL_334;
          case 28:
            *(void *)v8 |= 0x800000000000uLL;
            unint64_t v88 = *((void *)a2 + 1);
            if (v88 > 0xFFFFFFFFFFFFFFFBLL || v88 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 58) = *(_DWORD *)(*(void *)a2 + v88);
            goto LABEL_334;
          case 29:
            *(void *)v8 |= 0x1000000000000uLL;
            unint64_t v89 = *((void *)a2 + 1);
            if (v89 > 0xFFFFFFFFFFFFFFFBLL || v89 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 59) = *(_DWORD *)(*(void *)a2 + v89);
            goto LABEL_334;
          case 30:
            *(void *)v8 |= 0x1000000000000000uLL;
            unint64_t v90 = *((void *)a2 + 1);
            if (v90 > 0xFFFFFFFFFFFFFFFBLL || v90 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 71) = *(_DWORD *)(*(void *)a2 + v90);
            goto LABEL_334;
          case 31:
            *(void *)v8 |= 0x10000000000000uLL;
            unint64_t v91 = *((void *)a2 + 1);
            if (v91 > 0xFFFFFFFFFFFFFFFBLL || v91 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 63) = *(_DWORD *)(*(void *)a2 + v91);
            goto LABEL_334;
          case 32:
            *(void *)v8 |= 0x800000000000000uLL;
            unint64_t v92 = *((void *)a2 + 1);
            if (v92 > 0xFFFFFFFFFFFFFFFBLL || v92 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 70) = *(_DWORD *)(*(void *)a2 + v92);
            goto LABEL_334;
          case 33:
            *(void *)v8 |= 0x8000000000000uLL;
            unint64_t v93 = *((void *)a2 + 1);
            if (v93 > 0xFFFFFFFFFFFFFFFBLL || v93 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 62) = *(_DWORD *)(*(void *)a2 + v93);
            goto LABEL_334;
          case 34:
            v8[8] |= 1u;
            unint64_t v94 = *((void *)a2 + 1);
            if (v94 > 0xFFFFFFFFFFFFFFFBLL || v94 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 75) = *(_DWORD *)(*(void *)a2 + v94);
            goto LABEL_334;
          case 35:
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v95 = *((void *)a2 + 1);
            if (v95 > 0xFFFFFFFFFFFFFFFBLL || v95 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 68) = *(_DWORD *)(*(void *)a2 + v95);
            goto LABEL_334;
          case 36:
            *(void *)v8 |= 0x4000000000000uLL;
            unint64_t v96 = *((void *)a2 + 1);
            if (v96 > 0xFFFFFFFFFFFFFFFBLL || v96 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 61) = *(_DWORD *)(*(void *)a2 + v96);
            goto LABEL_334;
          case 37:
            *(void *)v8 |= 0x100000000000000uLL;
            unint64_t v97 = *((void *)a2 + 1);
            if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 67) = *(_DWORD *)(*(void *)a2 + v97);
            goto LABEL_334;
          case 38:
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v98 = *((void *)a2 + 1);
            if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 60) = *(_DWORD *)(*(void *)a2 + v98);
            goto LABEL_334;
          case 39:
            *(void *)v8 |= 0x8000000000000000;
            unint64_t v99 = *((void *)a2 + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 74) = *(_DWORD *)(*(void *)a2 + v99);
            goto LABEL_334;
          case 40:
            *(void *)v8 |= 0x800000000uLL;
            unint64_t v100 = *((void *)a2 + 1);
            if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 46) = *(_DWORD *)(*(void *)a2 + v100);
            goto LABEL_334;
          case 41:
            *(void *)v8 |= 0x400000000uLL;
            unint64_t v101 = *((void *)a2 + 1);
            if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 45) = *(_DWORD *)(*(void *)a2 + v101);
            goto LABEL_334;
          case 42:
            *(void *)v8 |= 0x80000000000uLL;
            unint64_t v102 = *((void *)a2 + 1);
            if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 54) = *(_DWORD *)(*(void *)a2 + v102);
            goto LABEL_334;
          case 43:
            *(void *)v8 |= 0x10000000uLL;
            unint64_t v103 = *((void *)a2 + 1);
            if (v103 > 0xFFFFFFFFFFFFFFFBLL || v103 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 39) = *(_DWORD *)(*(void *)a2 + v103);
            goto LABEL_334;
          case 44:
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v104 = *((void *)a2 + 1);
            if (v104 > 0xFFFFFFFFFFFFFFFBLL || v104 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 40) = *(_DWORD *)(*(void *)a2 + v104);
            goto LABEL_334;
          case 45:
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v105 = *((void *)a2 + 1);
            if (v105 > 0xFFFFFFFFFFFFFFFBLL || v105 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 52) = *(_DWORD *)(*(void *)a2 + v105);
            goto LABEL_334;
          case 46:
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v106 = *((void *)a2 + 1);
            if (v106 > 0xFFFFFFFFFFFFFFFBLL || v106 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 44) = *(_DWORD *)(*(void *)a2 + v106);
            goto LABEL_334;
          case 47:
            *(void *)v8 |= 0x10000000000uLL;
            unint64_t v107 = *((void *)a2 + 1);
            if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 51) = *(_DWORD *)(*(void *)a2 + v107);
            goto LABEL_334;
          case 48:
            *(void *)v8 |= 0x100000000uLL;
            unint64_t v108 = *((void *)a2 + 1);
            if (v108 > 0xFFFFFFFFFFFFFFFBLL || v108 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 43) = *(_DWORD *)(*(void *)a2 + v108);
            goto LABEL_334;
          case 49:
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v109 = *((void *)a2 + 1);
            if (v109 > 0xFFFFFFFFFFFFFFFBLL || v109 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 56) = *(_DWORD *)(*(void *)a2 + v109);
            goto LABEL_334;
          case 50:
            *(void *)v8 |= 0x4000000000uLL;
            unint64_t v110 = *((void *)a2 + 1);
            if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 49) = *(_DWORD *)(*(void *)a2 + v110);
            goto LABEL_334;
          case 51:
            *(void *)v8 |= 0x80000000uLL;
            unint64_t v111 = *((void *)a2 + 1);
            if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 42) = *(_DWORD *)(*(void *)a2 + v111);
            goto LABEL_334;
          case 52:
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v112 = *((void *)a2 + 1);
            if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 48) = *(_DWORD *)(*(void *)a2 + v112);
            goto LABEL_334;
          case 53:
            *(void *)v8 |= 0x40000000uLL;
            unint64_t v113 = *((void *)a2 + 1);
            if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 41) = *(_DWORD *)(*(void *)a2 + v113);
            goto LABEL_334;
          case 54:
            *(void *)v8 |= 0x100000000000uLL;
            unint64_t v114 = *((void *)a2 + 1);
            if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 55) = *(_DWORD *)(*(void *)a2 + v114);
            goto LABEL_334;
          case 55:
            *(void *)v8 |= 8uLL;
            unint64_t v115 = *((void *)a2 + 1);
            unint64_t v116 = *((void *)a2 + 2);
            uint64_t v117 = *(void *)a2;
            if (v115 <= 0xFFFFFFFFFFFFFFF5 && v115 + 10 <= v116)
            {
              char v118 = 0;
              unsigned int v119 = 0;
              uint64_t v120 = 0;
              do
              {
                unint64_t v121 = v115 + 1;
                *((void *)a2 + 1) = v115 + 1;
                char v122 = *(unsigned char *)(v117 + v115);
                v120 |= (unint64_t)(v122 & 0x7F) << v118;
                if ((v122 & 0x80) == 0) {
                  goto LABEL_363;
                }
                v118 += 7;
                unint64_t v115 = v121;
                BOOL v15 = v119++ > 8;
              }
              while (!v15);
LABEL_310:
              uint64_t v120 = 0;
              goto LABEL_363;
            }
            char v176 = 0;
            unsigned int v177 = 0;
            uint64_t v120 = 0;
            if (v116 <= v115) {
              unint64_t v116 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v116 == v115)
              {
                uint64_t v120 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v178 = v115 + 1;
                char v179 = *(unsigned char *)(v117 + v115);
                *((void *)a2 + 1) = v178;
                v120 |= (unint64_t)(v179 & 0x7F) << v176;
                if (v179 < 0)
                {
                  v176 += 7;
                  unint64_t v115 = v178;
                  BOOL v15 = v177++ > 8;
                  if (v15) {
                    goto LABEL_310;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v120 = 0;
                }
              }
              break;
            }
LABEL_363:
            *((void *)this + 4) = v120;
            goto LABEL_335;
          case 56:
            *(void *)v8 |= 0x10uLL;
            unint64_t v123 = *((void *)a2 + 1);
            unint64_t v124 = *((void *)a2 + 2);
            uint64_t v125 = *(void *)a2;
            if (v123 <= 0xFFFFFFFFFFFFFFF5 && v123 + 10 <= v124)
            {
              char v126 = 0;
              unsigned int v127 = 0;
              uint64_t v128 = 0;
              do
              {
                unint64_t v129 = v123 + 1;
                *((void *)a2 + 1) = v123 + 1;
                char v130 = *(unsigned char *)(v125 + v123);
                v128 |= (unint64_t)(v130 & 0x7F) << v126;
                if ((v130 & 0x80) == 0) {
                  goto LABEL_367;
                }
                v126 += 7;
                unint64_t v123 = v129;
                BOOL v15 = v127++ > 8;
              }
              while (!v15);
LABEL_317:
              uint64_t v128 = 0;
              goto LABEL_367;
            }
            char v180 = 0;
            unsigned int v181 = 0;
            uint64_t v128 = 0;
            if (v124 <= v123) {
              unint64_t v124 = *((void *)a2 + 1);
            }
            break;
          case 57:
            *(void *)v8 |= 0x1000000uLL;
            unint64_t v131 = *((void *)a2 + 1);
            if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 35) = *(_DWORD *)(*(void *)a2 + v131);
            goto LABEL_334;
          case 58:
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v132 = *((void *)a2 + 1);
            if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 72) = *(_DWORD *)(*(void *)a2 + v132);
            goto LABEL_334;
          case 59:
            *(void *)v8 |= 0x40000000000uLL;
            unint64_t v133 = *((void *)a2 + 1);
            if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 53) = *(_DWORD *)(*(void *)a2 + v133);
            goto LABEL_334;
          case 60:
            *(void *)v8 |= 0x40000uLL;
            unint64_t v134 = *((void *)a2 + 1);
            if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 29) = *(_DWORD *)(*(void *)a2 + v134);
            goto LABEL_334;
          case 61:
            *(void *)v8 |= 0x80000000000000uLL;
            unint64_t v135 = *((void *)a2 + 1);
            if (v135 > 0xFFFFFFFFFFFFFFFBLL || v135 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 66) = *(_DWORD *)(*(void *)a2 + v135);
            goto LABEL_334;
          case 62:
            *(void *)v8 |= 0x1000000000uLL;
            unint64_t v136 = *((void *)a2 + 1);
            if (v136 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 47) = *(_DWORD *)(*(void *)a2 + v136);
            goto LABEL_334;
          case 63:
            *(void *)v8 |= 0x200000uLL;
            unint64_t v137 = *((void *)a2 + 1);
            if (v137 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v137);
            goto LABEL_334;
          case 64:
            *(void *)v8 |= 0x400000000000000uLL;
            unint64_t v138 = *((void *)a2 + 1);
            if (v138 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)a2 + 2)) {
              goto LABEL_252;
            }
            *((_DWORD *)this + 69) = *(_DWORD *)(*(void *)a2 + v138);
            goto LABEL_334;
          case 65:
            *(void *)v8 |= 0x8000000000uLL;
            unint64_t v139 = *((void *)a2 + 1);
            if (v139 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)a2 + 2))
            {
LABEL_252:
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_335;
            }
            *((_DWORD *)this + 50) = *(_DWORD *)(*(void *)a2 + v139);
            goto LABEL_334;
          default:
            goto LABEL_20;
        }
        while (1)
        {
          if (v124 == v123)
          {
            uint64_t v128 = 0;
            *((unsigned char *)a2 + 24) = 1;
            goto LABEL_367;
          }
          unint64_t v182 = v123 + 1;
          char v183 = *(unsigned char *)(v125 + v123);
          *((void *)a2 + 1) = v182;
          v128 |= (unint64_t)(v183 & 0x7F) << v180;
          if ((v183 & 0x80) == 0) {
            break;
          }
          v180 += 7;
          unint64_t v123 = v182;
          BOOL v15 = v181++ > 8;
          if (v15) {
            goto LABEL_317;
          }
        }
        if (*((unsigned char *)a2 + 24)) {
          uint64_t v128 = 0;
        }
LABEL_367:
        *((void *)this + 5) = v128;
      }
LABEL_335:
      unint64_t v2 = *((void *)a2 + 1);
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v12 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v9 + v2);
      *((void *)a2 + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_22;
      }
      v16 += 7;
      unint64_t v2 = v18;
      BOOL v15 = v17++ > 8;
      if (v15) {
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KappaPulseResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = (uint64_t *)(this + 316);
  char v5 = *(unsigned char *)(this + 324);
  if ((v5 & 8) != 0)
  {
    this = PB::Writer::write(a2);
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v6 = *v4;
  if ((*(unsigned char *)(this + 324) & 2) != 0)
  {
LABEL_5:
    this = PB::Writer::write(a2, *(float *)(v3 + 304));
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
    this = PB::Writer::write(a2, *(float *)(v3 + 308));
    uint64_t v6 = *v4;
    char v5 = *((unsigned char *)v4 + 8);
    if ((*v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v6 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_75;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  this = PB::Writer::writeVarInt(a2);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_76;
  }
LABEL_75:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 1) == 0)
  {
LABEL_10:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_77;
  }
LABEL_76:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000) == 0)
  {
LABEL_11:
    if ((v6 & 0x80) == 0) {
      goto LABEL_12;
    }
    goto LABEL_78;
  }
LABEL_77:
  this = PB::Writer::write(a2, *(float *)(v3 + 104));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x80) == 0)
  {
LABEL_12:
    if ((v6 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_79;
  }
LABEL_78:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x100) == 0)
  {
LABEL_13:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_80;
  }
LABEL_79:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x20000) == 0)
  {
LABEL_14:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_81;
  }
LABEL_80:
  this = PB::Writer::write(a2, *(float *)(v3 + 112));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x10000) == 0)
  {
LABEL_15:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_82;
  }
LABEL_81:
  this = PB::Writer::write(a2, *(float *)(v3 + 108));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_16:
    if ((v6 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_83;
  }
LABEL_82:
  this = PB::Writer::write(a2, *(float *)(v3 + 144));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x200) == 0)
  {
LABEL_17:
    if ((v6 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_84;
  }
LABEL_83:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x400) == 0)
  {
LABEL_18:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_85;
  }
LABEL_84:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000) == 0)
  {
LABEL_19:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_86;
  }
LABEL_85:
  this = PB::Writer::write(a2, *(float *)(v3 + 136));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000) == 0)
  {
LABEL_20:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_87;
  }
LABEL_86:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x400000) == 0)
  {
LABEL_21:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_88;
  }
LABEL_87:
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x2000) == 0)
  {
LABEL_22:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_89;
  }
LABEL_88:
  this = PB::Writer::write(a2, *(float *)(v3 + 96));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_23:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_90;
  }
LABEL_89:
  this = PB::Writer::write(a2, *(float *)(v3 + 152));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x100000) == 0)
  {
LABEL_24:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_91;
  }
LABEL_90:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000) == 0)
  {
LABEL_25:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_92;
  }
LABEL_91:
  this = PB::Writer::write(a2, *(float *)(v3 + 92));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x80000) == 0)
  {
LABEL_26:
    if ((v6 & 0x800) == 0) {
      goto LABEL_27;
    }
    goto LABEL_93;
  }
LABEL_92:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_94;
  }
LABEL_93:
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_95;
  }
LABEL_94:
  this = PB::Writer::write(a2, *(float *)(v3 + 148));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_96;
  }
LABEL_95:
  this = PB::Writer::write(a2, *(float *)(v3 + 260));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_97;
  }
LABEL_96:
  this = PB::Writer::write(a2, *(float *)(v3 + 256));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_98;
  }
LABEL_97:
  this = PB::Writer::write(a2, *(float *)(v3 + 292));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_99;
  }
LABEL_98:
  this = PB::Writer::write(a2, *(float *)(v3 + 232));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_100;
  }
LABEL_99:
  this = PB::Writer::write(a2, *(float *)(v3 + 236));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_101;
  }
LABEL_100:
  this = PB::Writer::write(a2, *(float *)(v3 + 284));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_102;
  }
LABEL_101:
  this = PB::Writer::write(a2, *(float *)(v3 + 252));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_103;
  }
LABEL_102:
  this = PB::Writer::write(a2, *(float *)(v3 + 280));
  uint64_t v6 = *v4;
  char v5 = *((unsigned char *)v4 + 8);
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_37:
    if ((v5 & 1) == 0) {
      goto LABEL_38;
    }
    goto LABEL_104;
  }
LABEL_103:
  this = PB::Writer::write(a2, *(float *)(v3 + 248));
  uint64_t v6 = *v4;
  if ((v4[1] & 1) == 0)
  {
LABEL_38:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_105;
  }
LABEL_104:
  this = PB::Writer::write(a2, *(float *)(v3 + 300));
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_106;
  }
LABEL_105:
  this = PB::Writer::write(a2, *(float *)(v3 + 272));
  uint64_t v6 = *v4;
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_107;
  }
LABEL_106:
  this = PB::Writer::write(a2, *(float *)(v3 + 244));
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_108;
  }
LABEL_107:
  this = PB::Writer::write(a2, *(float *)(v3 + 268));
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_109;
  }
LABEL_108:
  this = PB::Writer::write(a2, *(float *)(v3 + 240));
  uint64_t v6 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_110;
  }
LABEL_109:
  this = PB::Writer::write(a2, *(float *)(v3 + 296));
  uint64_t v6 = *v4;
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_111;
  }
LABEL_110:
  this = PB::Writer::write(a2, *(float *)(v3 + 184));
  uint64_t v6 = *v4;
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_112;
  }
LABEL_111:
  this = PB::Writer::write(a2, *(float *)(v3 + 180));
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_113;
  }
LABEL_112:
  this = PB::Writer::write(a2, *(float *)(v3 + 216));
  uint64_t v6 = *v4;
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_114;
  }
LABEL_113:
  this = PB::Writer::write(a2, *(float *)(v3 + 156));
  uint64_t v6 = *v4;
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_48:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_115;
  }
LABEL_114:
  this = PB::Writer::write(a2, *(float *)(v3 + 160));
  uint64_t v6 = *v4;
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_116;
  }
LABEL_115:
  this = PB::Writer::write(a2, *(float *)(v3 + 208));
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_117;
  }
LABEL_116:
  this = PB::Writer::write(a2, *(float *)(v3 + 176));
  uint64_t v6 = *v4;
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_118;
  }
LABEL_117:
  this = PB::Writer::write(a2, *(float *)(v3 + 204));
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_119;
  }
LABEL_118:
  this = PB::Writer::write(a2, *(float *)(v3 + 172));
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_120;
  }
LABEL_119:
  this = PB::Writer::write(a2, *(float *)(v3 + 224));
  uint64_t v6 = *v4;
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_121;
  }
LABEL_120:
  this = PB::Writer::write(a2, *(float *)(v3 + 196));
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_122;
  }
LABEL_121:
  this = PB::Writer::write(a2, *(float *)(v3 + 168));
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_123;
  }
LABEL_122:
  this = PB::Writer::write(a2, *(float *)(v3 + 192));
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_124;
  }
LABEL_123:
  this = PB::Writer::write(a2, *(float *)(v3 + 164));
  uint64_t v6 = *v4;
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v6 & 8) == 0) {
      goto LABEL_59;
    }
    goto LABEL_125;
  }
LABEL_124:
  this = PB::Writer::write(a2, *(float *)(v3 + 220));
  uint64_t v6 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_59:
    if ((v6 & 0x10) == 0) {
      goto LABEL_60;
    }
    goto LABEL_126;
  }
LABEL_125:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v6 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_60:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_127;
  }
LABEL_126:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v6 = *v4;
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_128;
  }
LABEL_127:
  this = PB::Writer::write(a2, *(float *)(v3 + 140));
  uint64_t v6 = *v4;
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_129;
  }
LABEL_128:
  this = PB::Writer::write(a2, *(float *)(v3 + 288));
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_63:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_130;
  }
LABEL_129:
  this = PB::Writer::write(a2, *(float *)(v3 + 212));
  uint64_t v6 = *v4;
  if ((*v4 & 0x40000) == 0)
  {
LABEL_64:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_131;
  }
LABEL_130:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  uint64_t v6 = *v4;
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_65:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_132;
  }
LABEL_131:
  this = PB::Writer::write(a2, *(float *)(v3 + 264));
  uint64_t v6 = *v4;
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_66:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_133;
  }
LABEL_132:
  this = PB::Writer::write(a2, *(float *)(v3 + 188));
  uint64_t v6 = *v4;
  if ((*v4 & 0x200000) == 0)
  {
LABEL_67:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_134;
  }
LABEL_133:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  uint64_t v6 = *v4;
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_68:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_135;
  }
LABEL_134:
  this = PB::Writer::write(a2, *(float *)(v3 + 276));
  uint64_t v6 = *v4;
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_69:
    if ((v6 & 2) == 0) {
      goto LABEL_70;
    }
    goto LABEL_136;
  }
LABEL_135:
  this = PB::Writer::write(a2, *(float *)(v3 + 200));
  uint64_t v6 = *v4;
  if ((*v4 & 2) == 0)
  {
LABEL_70:
    if ((v6 & 4) == 0) {
      goto LABEL_71;
    }
LABEL_137:
    this = PB::Writer::writeVarInt(a2);
    if ((*v4 & 0x400000000000) == 0) {
      return this;
    }
    goto LABEL_138;
  }
LABEL_136:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v6 = *v4;
  if ((*v4 & 4) != 0) {
    goto LABEL_137;
  }
LABEL_71:
  if ((v6 & 0x400000000000) == 0) {
    return this;
  }
LABEL_138:
  float v7 = *(float *)(v3 + 228);
  return PB::Writer::write(a2, v7);
}

uint64_t CMMsl::KappaPulseResult::hash_value(CMMsl::KappaPulseResult *this)
{
  if ((*((unsigned char *)this + 324) & 8) != 0) {
    uint64_t v1 = *((unsigned __int8 *)this + 312);
  }
  else {
    uint64_t v1 = 0;
  }
  if ((*((unsigned char *)this + 324) & 2) != 0)
  {
    float v2 = *((float *)this + 76);
    uint64_t v3 = LODWORD(v2);
    if (v2 == 0.0) {
      uint64_t v3 = 0;
    }
    uint64_t v164 = v3;
  }
  else
  {
    uint64_t v164 = 0;
  }
  uint64_t v4 = *(void *)((char *)this + 316);
  if ((*((unsigned char *)this + 324) & 4) != 0)
  {
    float v121 = *((float *)this + 77);
    uint64_t v122 = LODWORD(v121);
    if (v121 == 0.0) {
      uint64_t v122 = 0;
    }
    uint64_t v163 = v122;
    if ((v4 & 0x20) != 0)
    {
LABEL_11:
      uint64_t v162 = *((void *)this + 6);
      if ((v4 & 0x40) != 0) {
        goto LABEL_12;
      }
      goto LABEL_204;
    }
  }
  else
  {
    uint64_t v163 = 0;
    if ((v4 & 0x20) != 0) {
      goto LABEL_11;
    }
  }
  uint64_t v162 = 0;
  if ((v4 & 0x40) != 0)
  {
LABEL_12:
    uint64_t v161 = *((void *)this + 7);
    if (v4) {
      goto LABEL_13;
    }
    goto LABEL_205;
  }
LABEL_204:
  uint64_t v161 = 0;
  if (v4)
  {
LABEL_13:
    uint64_t v160 = *((void *)this + 1);
    if ((v4 & 0x8000) != 0) {
      goto LABEL_14;
    }
LABEL_206:
    uint64_t v159 = 0;
    if ((v4 & 0x80) != 0) {
      goto LABEL_17;
    }
    goto LABEL_207;
  }
LABEL_205:
  uint64_t v160 = 0;
  if ((v4 & 0x8000) == 0) {
    goto LABEL_206;
  }
LABEL_14:
  float v5 = *((float *)this + 26);
  uint64_t v6 = LODWORD(v5);
  if (v5 == 0.0) {
    uint64_t v6 = 0;
  }
  uint64_t v159 = v6;
  if ((v4 & 0x80) != 0)
  {
LABEL_17:
    uint64_t v158 = *((void *)this + 8);
    if ((v4 & 0x100) != 0) {
      goto LABEL_18;
    }
    goto LABEL_208;
  }
LABEL_207:
  uint64_t v158 = 0;
  if ((v4 & 0x100) != 0)
  {
LABEL_18:
    uint64_t v157 = *((void *)this + 9);
    if ((v4 & 0x20000) != 0) {
      goto LABEL_19;
    }
LABEL_209:
    uint64_t v156 = 0;
    if ((v4 & 0x10000) != 0) {
      goto LABEL_22;
    }
LABEL_210:
    uint64_t v155 = 0;
    if ((v4 & 0x2000000) != 0) {
      goto LABEL_25;
    }
LABEL_211:
    uint64_t v154 = 0;
    if ((v4 & 0x200) != 0) {
      goto LABEL_28;
    }
LABEL_212:
    uint64_t v153 = 0;
    if ((v4 & 0x400) != 0) {
      goto LABEL_31;
    }
LABEL_213:
    uint64_t v152 = 0;
    if ((v4 & 0x800000) != 0) {
      goto LABEL_34;
    }
LABEL_214:
    uint64_t v151 = 0;
    if ((v4 & 0x4000) != 0) {
      goto LABEL_37;
    }
LABEL_215:
    uint64_t v150 = 0;
    if ((v4 & 0x400000) != 0) {
      goto LABEL_40;
    }
LABEL_216:
    uint64_t v149 = 0;
    if ((v4 & 0x2000) != 0) {
      goto LABEL_43;
    }
LABEL_217:
    uint64_t v148 = 0;
    if ((v4 & 0x8000000) != 0) {
      goto LABEL_46;
    }
LABEL_218:
    uint64_t v147 = 0;
    if ((v4 & 0x100000) != 0) {
      goto LABEL_49;
    }
LABEL_219:
    uint64_t v146 = 0;
    if ((v4 & 0x1000) != 0) {
      goto LABEL_52;
    }
LABEL_220:
    uint64_t v145 = 0;
    if ((v4 & 0x80000) != 0) {
      goto LABEL_55;
    }
LABEL_221:
    uint64_t v144 = 0;
    if ((v4 & 0x800) != 0) {
      goto LABEL_58;
    }
LABEL_222:
    uint64_t v143 = 0;
    if ((v4 & 0x4000000) != 0) {
      goto LABEL_61;
    }
LABEL_223:
    uint64_t v142 = 0;
    if ((v4 & 0x40000000000000) != 0) {
      goto LABEL_64;
    }
LABEL_224:
    uint64_t v141 = 0;
    if ((v4 & 0x20000000000000) != 0) {
      goto LABEL_67;
    }
LABEL_225:
    uint64_t v140 = 0;
    if ((v4 & 0x4000000000000000) != 0) {
      goto LABEL_70;
    }
LABEL_226:
    uint64_t v139 = 0;
    if ((v4 & 0x800000000000) != 0) {
      goto LABEL_73;
    }
LABEL_227:
    uint64_t v138 = 0;
    if ((v4 & 0x1000000000000) != 0) {
      goto LABEL_76;
    }
LABEL_228:
    uint64_t v137 = 0;
    if ((v4 & 0x1000000000000000) != 0) {
      goto LABEL_79;
    }
LABEL_229:
    uint64_t v136 = 0;
    if ((v4 & 0x10000000000000) != 0) {
      goto LABEL_82;
    }
LABEL_230:
    uint64_t v135 = 0;
    if ((v4 & 0x800000000000000) != 0) {
      goto LABEL_85;
    }
LABEL_231:
    uint64_t v134 = 0;
    if ((v4 & 0x8000000000000) != 0) {
      goto LABEL_88;
    }
LABEL_232:
    uint64_t v133 = 0;
    if (*((unsigned char *)this + 324)) {
      goto LABEL_91;
    }
LABEL_233:
    uint64_t v132 = 0;
    if ((v4 & 0x200000000000000) != 0) {
      goto LABEL_94;
    }
LABEL_234:
    uint64_t v131 = 0;
    if ((v4 & 0x4000000000000) != 0) {
      goto LABEL_97;
    }
LABEL_235:
    uint64_t v130 = 0;
    if ((v4 & 0x100000000000000) != 0) {
      goto LABEL_100;
    }
LABEL_236:
    uint64_t v129 = 0;
    if ((v4 & 0x2000000000000) != 0) {
      goto LABEL_103;
    }
LABEL_237:
    uint64_t v128 = 0;
    if (v4 < 0) {
      goto LABEL_106;
    }
LABEL_238:
    uint64_t v127 = 0;
    if ((v4 & 0x800000000) != 0) {
      goto LABEL_109;
    }
LABEL_239:
    uint64_t v126 = 0;
    if ((v4 & 0x400000000) != 0) {
      goto LABEL_112;
    }
LABEL_240:
    uint64_t v125 = 0;
    if ((v4 & 0x80000000000) != 0) {
      goto LABEL_115;
    }
LABEL_241:
    uint64_t v124 = 0;
    if ((v4 & 0x10000000) != 0) {
      goto LABEL_118;
    }
LABEL_242:
    uint64_t v74 = 0;
    if ((v4 & 0x20000000) != 0) {
      goto LABEL_122;
    }
LABEL_243:
    uint64_t v76 = 0;
    if ((v4 & 0x20000000000) != 0) {
      goto LABEL_126;
    }
LABEL_244:
    uint64_t v78 = 0;
    if ((v4 & 0x200000000) != 0) {
      goto LABEL_130;
    }
LABEL_245:
    uint64_t v80 = 0;
    if ((v4 & 0x10000000000) != 0) {
      goto LABEL_134;
    }
LABEL_246:
    uint64_t v82 = 0;
    if ((v4 & 0x100000000) != 0) {
      goto LABEL_138;
    }
LABEL_247:
    uint64_t v84 = 0;
    if ((v4 & 0x200000000000) != 0) {
      goto LABEL_142;
    }
LABEL_248:
    uint64_t v86 = 0;
    if ((v4 & 0x4000000000) != 0) {
      goto LABEL_146;
    }
LABEL_249:
    uint64_t v88 = 0;
    if ((v4 & 0x80000000) != 0) {
      goto LABEL_150;
    }
LABEL_250:
    uint64_t v90 = 0;
    if ((v4 & 0x2000000000) != 0) {
      goto LABEL_154;
    }
LABEL_251:
    uint64_t v92 = 0;
    if ((v4 & 0x40000000) != 0) {
      goto LABEL_158;
    }
LABEL_252:
    uint64_t v94 = 0;
    if ((v4 & 0x100000000000) != 0) {
      goto LABEL_162;
    }
LABEL_253:
    uint64_t v96 = 0;
    if ((v4 & 8) != 0) {
      goto LABEL_166;
    }
    goto LABEL_254;
  }
LABEL_208:
  uint64_t v157 = 0;
  if ((v4 & 0x20000) == 0) {
    goto LABEL_209;
  }
LABEL_19:
  float v7 = *((float *)this + 28);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  uint64_t v156 = v8;
  if ((v4 & 0x10000) == 0) {
    goto LABEL_210;
  }
LABEL_22:
  float v9 = *((float *)this + 27);
  uint64_t v10 = LODWORD(v9);
  if (v9 == 0.0) {
    uint64_t v10 = 0;
  }
  uint64_t v155 = v10;
  if ((v4 & 0x2000000) == 0) {
    goto LABEL_211;
  }
LABEL_25:
  float v11 = *((float *)this + 36);
  uint64_t v12 = LODWORD(v11);
  if (v11 == 0.0) {
    uint64_t v12 = 0;
  }
  uint64_t v154 = v12;
  if ((v4 & 0x200) == 0) {
    goto LABEL_212;
  }
LABEL_28:
  float v13 = *((float *)this + 20);
  uint64_t v14 = LODWORD(v13);
  if (v13 == 0.0) {
    uint64_t v14 = 0;
  }
  uint64_t v153 = v14;
  if ((v4 & 0x400) == 0) {
    goto LABEL_213;
  }
LABEL_31:
  float v15 = *((float *)this + 21);
  uint64_t v16 = LODWORD(v15);
  if (v15 == 0.0) {
    uint64_t v16 = 0;
  }
  uint64_t v152 = v16;
  if ((v4 & 0x800000) == 0) {
    goto LABEL_214;
  }
LABEL_34:
  float v17 = *((float *)this + 34);
  uint64_t v18 = LODWORD(v17);
  if (v17 == 0.0) {
    uint64_t v18 = 0;
  }
  uint64_t v151 = v18;
  if ((v4 & 0x4000) == 0) {
    goto LABEL_215;
  }
LABEL_37:
  float v19 = *((float *)this + 25);
  uint64_t v20 = LODWORD(v19);
  if (v19 == 0.0) {
    uint64_t v20 = 0;
  }
  uint64_t v150 = v20;
  if ((v4 & 0x400000) == 0) {
    goto LABEL_216;
  }
LABEL_40:
  float v21 = *((float *)this + 33);
  uint64_t v22 = LODWORD(v21);
  if (v21 == 0.0) {
    uint64_t v22 = 0;
  }
  uint64_t v149 = v22;
  if ((v4 & 0x2000) == 0) {
    goto LABEL_217;
  }
LABEL_43:
  float v23 = *((float *)this + 24);
  uint64_t v24 = LODWORD(v23);
  if (v23 == 0.0) {
    uint64_t v24 = 0;
  }
  uint64_t v148 = v24;
  if ((v4 & 0x8000000) == 0) {
    goto LABEL_218;
  }
LABEL_46:
  float v25 = *((float *)this + 38);
  uint64_t v26 = LODWORD(v25);
  if (v25 == 0.0) {
    uint64_t v26 = 0;
  }
  uint64_t v147 = v26;
  if ((v4 & 0x100000) == 0) {
    goto LABEL_219;
  }
LABEL_49:
  float v27 = *((float *)this + 31);
  uint64_t v28 = LODWORD(v27);
  if (v27 == 0.0) {
    uint64_t v28 = 0;
  }
  uint64_t v146 = v28;
  if ((v4 & 0x1000) == 0) {
    goto LABEL_220;
  }
LABEL_52:
  float v29 = *((float *)this + 23);
  uint64_t v30 = LODWORD(v29);
  if (v29 == 0.0) {
    uint64_t v30 = 0;
  }
  uint64_t v145 = v30;
  if ((v4 & 0x80000) == 0) {
    goto LABEL_221;
  }
LABEL_55:
  float v31 = *((float *)this + 30);
  uint64_t v32 = LODWORD(v31);
  if (v31 == 0.0) {
    uint64_t v32 = 0;
  }
  uint64_t v144 = v32;
  if ((v4 & 0x800) == 0) {
    goto LABEL_222;
  }
LABEL_58:
  float v33 = *((float *)this + 22);
  uint64_t v34 = LODWORD(v33);
  if (v33 == 0.0) {
    uint64_t v34 = 0;
  }
  uint64_t v143 = v34;
  if ((v4 & 0x4000000) == 0) {
    goto LABEL_223;
  }
LABEL_61:
  float v35 = *((float *)this + 37);
  uint64_t v36 = LODWORD(v35);
  if (v35 == 0.0) {
    uint64_t v36 = 0;
  }
  uint64_t v142 = v36;
  if ((v4 & 0x40000000000000) == 0) {
    goto LABEL_224;
  }
LABEL_64:
  float v37 = *((float *)this + 65);
  uint64_t v38 = LODWORD(v37);
  if (v37 == 0.0) {
    uint64_t v38 = 0;
  }
  uint64_t v141 = v38;
  if ((v4 & 0x20000000000000) == 0) {
    goto LABEL_225;
  }
LABEL_67:
  float v39 = *((float *)this + 64);
  uint64_t v40 = LODWORD(v39);
  if (v39 == 0.0) {
    uint64_t v40 = 0;
  }
  uint64_t v140 = v40;
  if ((v4 & 0x4000000000000000) == 0) {
    goto LABEL_226;
  }
LABEL_70:
  float v41 = *((float *)this + 73);
  uint64_t v42 = LODWORD(v41);
  if (v41 == 0.0) {
    uint64_t v42 = 0;
  }
  uint64_t v139 = v42;
  if ((v4 & 0x800000000000) == 0) {
    goto LABEL_227;
  }
LABEL_73:
  float v43 = *((float *)this + 58);
  uint64_t v44 = LODWORD(v43);
  if (v43 == 0.0) {
    uint64_t v44 = 0;
  }
  uint64_t v138 = v44;
  if ((v4 & 0x1000000000000) == 0) {
    goto LABEL_228;
  }
LABEL_76:
  float v45 = *((float *)this + 59);
  uint64_t v46 = LODWORD(v45);
  if (v45 == 0.0) {
    uint64_t v46 = 0;
  }
  uint64_t v137 = v46;
  if ((v4 & 0x1000000000000000) == 0) {
    goto LABEL_229;
  }
LABEL_79:
  float v47 = *((float *)this + 71);
  uint64_t v48 = LODWORD(v47);
  if (v47 == 0.0) {
    uint64_t v48 = 0;
  }
  uint64_t v136 = v48;
  if ((v4 & 0x10000000000000) == 0) {
    goto LABEL_230;
  }
LABEL_82:
  float v49 = *((float *)this + 63);
  uint64_t v50 = LODWORD(v49);
  if (v49 == 0.0) {
    uint64_t v50 = 0;
  }
  uint64_t v135 = v50;
  if ((v4 & 0x800000000000000) == 0) {
    goto LABEL_231;
  }
LABEL_85:
  float v51 = *((float *)this + 70);
  uint64_t v52 = LODWORD(v51);
  if (v51 == 0.0) {
    uint64_t v52 = 0;
  }
  uint64_t v134 = v52;
  if ((v4 & 0x8000000000000) == 0) {
    goto LABEL_232;
  }
LABEL_88:
  float v53 = *((float *)this + 62);
  uint64_t v54 = LODWORD(v53);
  if (v53 == 0.0) {
    uint64_t v54 = 0;
  }
  uint64_t v133 = v54;
  if ((*((unsigned char *)this + 324) & 1) == 0) {
    goto LABEL_233;
  }
LABEL_91:
  float v55 = *((float *)this + 75);
  uint64_t v56 = LODWORD(v55);
  if (v55 == 0.0) {
    uint64_t v56 = 0;
  }
  uint64_t v132 = v56;
  if ((v4 & 0x200000000000000) == 0) {
    goto LABEL_234;
  }
LABEL_94:
  float v57 = *((float *)this + 68);
  uint64_t v58 = LODWORD(v57);
  if (v57 == 0.0) {
    uint64_t v58 = 0;
  }
  uint64_t v131 = v58;
  if ((v4 & 0x4000000000000) == 0) {
    goto LABEL_235;
  }
LABEL_97:
  float v59 = *((float *)this + 61);
  uint64_t v60 = LODWORD(v59);
  if (v59 == 0.0) {
    uint64_t v60 = 0;
  }
  uint64_t v130 = v60;
  if ((v4 & 0x100000000000000) == 0) {
    goto LABEL_236;
  }
LABEL_100:
  float v61 = *((float *)this + 67);
  uint64_t v62 = LODWORD(v61);
  if (v61 == 0.0) {
    uint64_t v62 = 0;
  }
  uint64_t v129 = v62;
  if ((v4 & 0x2000000000000) == 0) {
    goto LABEL_237;
  }
LABEL_103:
  float v63 = *((float *)this + 60);
  uint64_t v64 = LODWORD(v63);
  if (v63 == 0.0) {
    uint64_t v64 = 0;
  }
  uint64_t v128 = v64;
  if ((v4 & 0x8000000000000000) == 0) {
    goto LABEL_238;
  }
LABEL_106:
  float v65 = *((float *)this + 74);
  uint64_t v66 = LODWORD(v65);
  if (v65 == 0.0) {
    uint64_t v66 = 0;
  }
  uint64_t v127 = v66;
  if ((v4 & 0x800000000) == 0) {
    goto LABEL_239;
  }
LABEL_109:
  float v67 = *((float *)this + 46);
  uint64_t v68 = LODWORD(v67);
  if (v67 == 0.0) {
    uint64_t v68 = 0;
  }
  uint64_t v126 = v68;
  if ((v4 & 0x400000000) == 0) {
    goto LABEL_240;
  }
LABEL_112:
  float v69 = *((float *)this + 45);
  uint64_t v70 = LODWORD(v69);
  if (v69 == 0.0) {
    uint64_t v70 = 0;
  }
  uint64_t v125 = v70;
  if ((v4 & 0x80000000000) == 0) {
    goto LABEL_241;
  }
LABEL_115:
  float v71 = *((float *)this + 54);
  uint64_t v72 = LODWORD(v71);
  if (v71 == 0.0) {
    uint64_t v72 = 0;
  }
  uint64_t v124 = v72;
  if ((v4 & 0x10000000) == 0) {
    goto LABEL_242;
  }
LABEL_118:
  float v73 = *((float *)this + 39);
  if (v73 == 0.0) {
    uint64_t v74 = 0;
  }
  else {
    uint64_t v74 = LODWORD(v73);
  }
  if ((v4 & 0x20000000) == 0) {
    goto LABEL_243;
  }
LABEL_122:
  float v75 = *((float *)this + 40);
  if (v75 == 0.0) {
    uint64_t v76 = 0;
  }
  else {
    uint64_t v76 = LODWORD(v75);
  }
  if ((v4 & 0x20000000000) == 0) {
    goto LABEL_244;
  }
LABEL_126:
  float v77 = *((float *)this + 52);
  if (v77 == 0.0) {
    uint64_t v78 = 0;
  }
  else {
    uint64_t v78 = LODWORD(v77);
  }
  if ((v4 & 0x200000000) == 0) {
    goto LABEL_245;
  }
LABEL_130:
  float v79 = *((float *)this + 44);
  if (v79 == 0.0) {
    uint64_t v80 = 0;
  }
  else {
    uint64_t v80 = LODWORD(v79);
  }
  if ((v4 & 0x10000000000) == 0) {
    goto LABEL_246;
  }
LABEL_134:
  float v81 = *((float *)this + 51);
  if (v81 == 0.0) {
    uint64_t v82 = 0;
  }
  else {
    uint64_t v82 = LODWORD(v81);
  }
  if ((v4 & 0x100000000) == 0) {
    goto LABEL_247;
  }
LABEL_138:
  float v83 = *((float *)this + 43);
  if (v83 == 0.0) {
    uint64_t v84 = 0;
  }
  else {
    uint64_t v84 = LODWORD(v83);
  }
  if ((v4 & 0x200000000000) == 0) {
    goto LABEL_248;
  }
LABEL_142:
  float v85 = *((float *)this + 56);
  if (v85 == 0.0) {
    uint64_t v86 = 0;
  }
  else {
    uint64_t v86 = LODWORD(v85);
  }
  if ((v4 & 0x4000000000) == 0) {
    goto LABEL_249;
  }
LABEL_146:
  float v87 = *((float *)this + 49);
  if (v87 == 0.0) {
    uint64_t v88 = 0;
  }
  else {
    uint64_t v88 = LODWORD(v87);
  }
  if ((v4 & 0x80000000) == 0) {
    goto LABEL_250;
  }
LABEL_150:
  float v89 = *((float *)this + 42);
  if (v89 == 0.0) {
    uint64_t v90 = 0;
  }
  else {
    uint64_t v90 = LODWORD(v89);
  }
  if ((v4 & 0x2000000000) == 0) {
    goto LABEL_251;
  }
LABEL_154:
  float v91 = *((float *)this + 48);
  if (v91 == 0.0) {
    uint64_t v92 = 0;
  }
  else {
    uint64_t v92 = LODWORD(v91);
  }
  if ((v4 & 0x40000000) == 0) {
    goto LABEL_252;
  }
LABEL_158:
  float v93 = *((float *)this + 41);
  if (v93 == 0.0) {
    uint64_t v94 = 0;
  }
  else {
    uint64_t v94 = LODWORD(v93);
  }
  if ((v4 & 0x100000000000) == 0) {
    goto LABEL_253;
  }
LABEL_162:
  float v95 = *((float *)this + 55);
  if (v95 == 0.0) {
    uint64_t v96 = 0;
  }
  else {
    uint64_t v96 = LODWORD(v95);
  }
  if ((v4 & 8) != 0)
  {
LABEL_166:
    uint64_t v97 = *((void *)this + 4);
    if ((v4 & 0x10) != 0) {
      goto LABEL_167;
    }
    goto LABEL_255;
  }
LABEL_254:
  uint64_t v97 = 0;
  if ((v4 & 0x10) != 0)
  {
LABEL_167:
    uint64_t v98 = *((void *)this + 5);
    if ((v4 & 0x1000000) != 0) {
      goto LABEL_168;
    }
LABEL_256:
    uint64_t v100 = 0;
    if ((v4 & 0x2000000000000000) != 0) {
      goto LABEL_171;
    }
LABEL_257:
    uint64_t v102 = 0;
    if ((v4 & 0x40000000000) != 0) {
      goto LABEL_174;
    }
LABEL_258:
    uint64_t v104 = 0;
    if ((v4 & 0x40000) != 0) {
      goto LABEL_177;
    }
LABEL_259:
    uint64_t v106 = 0;
    if ((v4 & 0x80000000000000) != 0) {
      goto LABEL_180;
    }
LABEL_260:
    uint64_t v108 = 0;
    if ((v4 & 0x1000000000) != 0) {
      goto LABEL_183;
    }
LABEL_261:
    uint64_t v110 = 0;
    if ((v4 & 0x200000) != 0) {
      goto LABEL_186;
    }
LABEL_262:
    uint64_t v112 = 0;
    if ((v4 & 0x400000000000000) != 0) {
      goto LABEL_189;
    }
LABEL_263:
    uint64_t v114 = 0;
    if ((v4 & 0x8000000000) != 0) {
      goto LABEL_192;
    }
LABEL_264:
    uint64_t v116 = 0;
    if ((v4 & 2) != 0) {
      goto LABEL_195;
    }
    goto LABEL_265;
  }
LABEL_255:
  uint64_t v98 = 0;
  if ((v4 & 0x1000000) == 0) {
    goto LABEL_256;
  }
LABEL_168:
  float v99 = *((float *)this + 35);
  uint64_t v100 = LODWORD(v99);
  if (v99 == 0.0) {
    uint64_t v100 = 0;
  }
  if ((v4 & 0x2000000000000000) == 0) {
    goto LABEL_257;
  }
LABEL_171:
  float v101 = *((float *)this + 72);
  uint64_t v102 = LODWORD(v101);
  if (v101 == 0.0) {
    uint64_t v102 = 0;
  }
  if ((v4 & 0x40000000000) == 0) {
    goto LABEL_258;
  }
LABEL_174:
  float v103 = *((float *)this + 53);
  uint64_t v104 = LODWORD(v103);
  if (v103 == 0.0) {
    uint64_t v104 = 0;
  }
  if ((v4 & 0x40000) == 0) {
    goto LABEL_259;
  }
LABEL_177:
  float v105 = *((float *)this + 29);
  uint64_t v106 = LODWORD(v105);
  if (v105 == 0.0) {
    uint64_t v106 = 0;
  }
  if ((v4 & 0x80000000000000) == 0) {
    goto LABEL_260;
  }
LABEL_180:
  float v107 = *((float *)this + 66);
  uint64_t v108 = LODWORD(v107);
  if (v107 == 0.0) {
    uint64_t v108 = 0;
  }
  if ((v4 & 0x1000000000) == 0) {
    goto LABEL_261;
  }
LABEL_183:
  float v109 = *((float *)this + 47);
  uint64_t v110 = LODWORD(v109);
  if (v109 == 0.0) {
    uint64_t v110 = 0;
  }
  if ((v4 & 0x200000) == 0) {
    goto LABEL_262;
  }
LABEL_186:
  float v111 = *((float *)this + 32);
  uint64_t v112 = LODWORD(v111);
  if (v111 == 0.0) {
    uint64_t v112 = 0;
  }
  if ((v4 & 0x400000000000000) == 0) {
    goto LABEL_263;
  }
LABEL_189:
  float v113 = *((float *)this + 69);
  uint64_t v114 = LODWORD(v113);
  if (v113 == 0.0) {
    uint64_t v114 = 0;
  }
  if ((v4 & 0x8000000000) == 0) {
    goto LABEL_264;
  }
LABEL_192:
  float v115 = *((float *)this + 50);
  uint64_t v116 = LODWORD(v115);
  if (v115 == 0.0) {
    uint64_t v116 = 0;
  }
  if ((v4 & 2) != 0)
  {
LABEL_195:
    uint64_t v117 = *((void *)this + 2);
    if ((v4 & 4) != 0) {
      goto LABEL_196;
    }
    goto LABEL_266;
  }
LABEL_265:
  uint64_t v117 = 0;
  if ((v4 & 4) != 0)
  {
LABEL_196:
    uint64_t v118 = *((void *)this + 3);
    if ((v4 & 0x400000000000) != 0) {
      goto LABEL_197;
    }
LABEL_267:
    uint64_t v120 = 0;
    return v164 ^ v1 ^ v163 ^ v162 ^ v161 ^ v160 ^ v159 ^ v158 ^ v157 ^ v156 ^ v155 ^ v154 ^ v153 ^ v152 ^ v151 ^ v150 ^ v149 ^ v148 ^ v147 ^ v146 ^ v145 ^ v144 ^ v143 ^ v142 ^ v141 ^ v140 ^ v139 ^ v138 ^ v137 ^ v136 ^ v135 ^ v134 ^ v133 ^ v132 ^ v131 ^ v130 ^ v129 ^ v128 ^ v127 ^ v126 ^ v125 ^ v124 ^ v74 ^ v76 ^ v78 ^ v80 ^ v82 ^ v84 ^ v86 ^ v88 ^ v90 ^ v92 ^ v94 ^ v96 ^ v97 ^ v98 ^ v100 ^ v102 ^ v104 ^ v106 ^ v108 ^ v110 ^ v112 ^ v114 ^ v116 ^ v117 ^ v118 ^ v120;
  }
LABEL_266:
  uint64_t v118 = 0;
  if ((v4 & 0x400000000000) == 0) {
    goto LABEL_267;
  }
LABEL_197:
  float v119 = *((float *)this + 57);
  uint64_t v120 = LODWORD(v119);
  if (v119 == 0.0) {
    uint64_t v120 = 0;
  }
  return v164 ^ v1 ^ v163 ^ v162 ^ v161 ^ v160 ^ v159 ^ v158 ^ v157 ^ v156 ^ v155 ^ v154 ^ v153 ^ v152 ^ v151 ^ v150 ^ v149 ^ v148 ^ v147 ^ v146 ^ v145 ^ v144 ^ v143 ^ v142 ^ v141 ^ v140 ^ v139 ^ v138 ^ v137 ^ v136 ^ v135 ^ v134 ^ v133 ^ v132 ^ v131 ^ v130 ^ v129 ^ v128 ^ v127 ^ v126 ^ v125 ^ v124 ^ v74 ^ v76 ^ v78 ^ v80 ^ v82 ^ v84 ^ v86 ^ v88 ^ v90 ^ v92 ^ v94 ^ v96 ^ v97 ^ v98 ^ v100 ^ v102 ^ v104 ^ v106 ^ v108 ^ v110 ^ v112 ^ v114 ^ v116 ^ v117 ^ v118 ^ v120;
}

void CMMsl::KappaQuiescenceResult::~KappaQuiescenceResult(CMMsl::KappaQuiescenceResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaQuiescenceResult::KappaQuiescenceResult(uint64_t this, const CMMsl::KappaQuiescenceResult *a2)
{
  *(void *)this = &unk_270642B08;
  *(_DWORD *)(this + 28) = 0;
  char v2 = *((unsigned char *)a2 + 28);
  if (v2)
  {
    int v4 = *((_DWORD *)a2 + 2);
    char v3 = 1;
    *(unsigned char *)(this + 28) = 1;
    *(_DWORD *)(this + 8) = v4;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 5);
    v3 |= 8u;
    *(unsigned char *)(this + 28) = v3;
    *(_DWORD *)(this + 20) = v5;
    char v2 = *((unsigned char *)a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *((_DWORD *)a2 + 6);
    v3 |= 0x10u;
    *(unsigned char *)(this + 28) = v3;
    *(_DWORD *)(this + 24) = v6;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return this;
      }
LABEL_12:
      int v8 = *((_DWORD *)a2 + 4);
      *(unsigned char *)(this + 28) = v3 | 4;
      *(_DWORD *)(this + 16) = v8;
      return this;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 3);
  v3 |= 2u;
  *(unsigned char *)(this + 28) = v3;
  *(_DWORD *)(this + 12) = v7;
  if ((*((unsigned char *)a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return this;
}

uint64_t CMMsl::KappaQuiescenceResult::operator=(uint64_t a1, const CMMsl::KappaQuiescenceResult *a2)
{
  if ((const CMMsl::KappaQuiescenceResult *)a1 != a2)
  {
    CMMsl::KappaQuiescenceResult::KappaQuiescenceResult((uint64_t)&v8, a2);
    int v3 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v11;
    int v11 = v3;
    uint64_t v4 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v12;
    uint64_t v12 = v4;
    uint64_t v5 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v9;
    uint64_t v9 = v5;
    int v6 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v10;
    int v10 = v6;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaQuiescenceResult *a2, CMMsl::KappaQuiescenceResult *a3)
{
  int v3 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v3;
  int v4 = *((_DWORD *)this + 2);
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)a2 + 2) = v4;
  int v5 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v5;
  int v6 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v6;
  float result = *((float *)this + 3);
  *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
  *((float *)a2 + 3) = result;
  int v8 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v8;
  return result;
}

float CMMsl::KappaQuiescenceResult::KappaQuiescenceResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642B08;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  float result = *(float *)(a2 + 12);
  *(float *)(a1 + 12) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642B08;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  float result = *(float *)(a2 + 12);
  *(float *)(a1 + 12) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KappaQuiescenceResult::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v10[0] = &unk_270642B08;
    int v3 = *(_DWORD *)(a2 + 20);
    int v4 = *(_DWORD *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a2 + 28) = 0;
    int v12 = *(_DWORD *)(a1 + 20);
    uint64_t v13 = *(void *)(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 8) = v7;
    v10[1] = v6;
    int v8 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v4;
    int v11 = v8;
    PB::Base::~Base((PB::Base *)v10);
  }
  return a1;
}

uint64_t CMMsl::KappaQuiescenceResult::formatText(CMMsl::KappaQuiescenceResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 28);
  if (v5)
  {
    PB::TextFormatter::format(a2, "configThreshold1", *((float *)this + 2));
    char v5 = *((unsigned char *)this + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*((unsigned char *)this + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "debugX", *((float *)this + 3));
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(a2, "debugY");
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "outputA", *((float *)this + 5));
  if ((*((unsigned char *)this + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(a2, "outputB");
LABEL_7:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaQuiescenceResult::readFrom(CMMsl::KappaQuiescenceResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_72;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 0x186A0u:
        *((unsigned char *)this + 28) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 2) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_61;
      case 0x186A1u:
        *((unsigned char *)this + 28) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 5) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_61;
      case 0x186A2u:
        *((unsigned char *)this + 28) |= 0x10u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_66;
            }
            unint64_t v34 = v20++;
            char v35 = *(unsigned char *)(v21 + v34);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v35 & 0x7F) << v32;
            if ((v35 & 0x80) == 0) {
              break;
            }
            v32 += 7;
            BOOL v14 = v33++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
LABEL_65:
              unint64_t v2 = v34 + 1;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v24) = 0;
          }
          goto LABEL_65;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_66;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        LODWORD(v24) = 0;
LABEL_66:
        *((_DWORD *)this + 6) = v24;
        break;
      case 0x186A3u:
        *((unsigned char *)this + 28) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 3) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_61:
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_38:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 0x186A4u:
        *((unsigned char *)this + 28) |= 4u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v27 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_71;
            }
            unint64_t v38 = v26++;
            char v39 = *(unsigned char *)(v27 + v38);
            *((void *)a2 + 1) = v26;
            v30 |= (unint64_t)(v39 & 0x7F) << v36;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v36 += 7;
            BOOL v14 = v37++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
LABEL_70:
              unint64_t v2 = v38 + 1;
              goto LABEL_71;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v30) = 0;
          }
          goto LABEL_70;
        }
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        do
        {
          unint64_t v2 = v26 + 1;
          *((void *)a2 + 1) = v26 + 1;
          char v31 = *(unsigned char *)(v27 + v26);
          v30 |= (unint64_t)(v31 & 0x7F) << v28;
          if ((v31 & 0x80) == 0) {
            goto LABEL_71;
          }
          v28 += 7;
          unint64_t v26 = v2;
          BOOL v14 = v29++ > 8;
        }
        while (!v14);
        LODWORD(v30) = 0;
LABEL_71:
        *((_DWORD *)this + 4) = v30;
        break;
      default:
        goto LABEL_19;
    }
LABEL_72:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaQuiescenceResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 28);
  if (v4)
  {
    this = PB::Writer::write(a2, *(float *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = PB::Writer::write(a2, *(float *)(v3 + 12));
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return this;
  }
LABEL_11:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaQuiescenceResult::hash_value(CMMsl::KappaQuiescenceResult *this)
{
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    uint64_t v1 = 0;
    if ((*((unsigned char *)this + 28) & 8) != 0) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 28) & 0x10) != 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  float v8 = *((float *)this + 2);
  uint64_t v1 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v1 = 0;
  }
  if ((*((unsigned char *)this + 28) & 8) == 0) {
    goto LABEL_14;
  }
LABEL_3:
  float v2 = *((float *)this + 5);
  uint64_t v3 = LODWORD(v2);
  if (v2 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((unsigned char *)this + 28) & 0x10) != 0)
  {
LABEL_6:
    uint64_t v4 = *((int *)this + 6);
    if ((*((unsigned char *)this + 28) & 2) != 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v4 = 0;
  if ((*((unsigned char *)this + 28) & 2) != 0)
  {
LABEL_7:
    float v5 = *((float *)this + 3);
    uint64_t v6 = LODWORD(v5);
    if (v5 == 0.0) {
      uint64_t v6 = 0;
    }
    if ((*((unsigned char *)this + 28) & 4) != 0) {
      goto LABEL_10;
    }
LABEL_17:
    uint64_t v7 = 0;
    return v3 ^ v1 ^ v4 ^ v6 ^ v7;
  }
LABEL_16:
  uint64_t v6 = 0;
  if ((*((unsigned char *)this + 28) & 4) == 0) {
    goto LABEL_17;
  }
LABEL_10:
  uint64_t v7 = *((int *)this + 4);
  return v3 ^ v1 ^ v4 ^ v6 ^ v7;
}

void CMMsl::KappaRecoveryResult::~KappaRecoveryResult(CMMsl::KappaRecoveryResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaRecoveryResult::KappaRecoveryResult(uint64_t this, const CMMsl::KappaRecoveryResult *a2)
{
  *(void *)this = &unk_270642B40;
  *(_DWORD *)(this + 28) = 0;
  char v2 = *((unsigned char *)a2 + 28);
  if (v2)
  {
    int v4 = *((_DWORD *)a2 + 2);
    char v3 = 1;
    *(unsigned char *)(this + 28) = 1;
    *(_DWORD *)(this + 8) = v4;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 28) & 8) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 5);
    v3 |= 8u;
    *(unsigned char *)(this + 28) = v3;
    *(_DWORD *)(this + 20) = v5;
    char v2 = *((unsigned char *)a2 + 28);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *((_DWORD *)a2 + 6);
    v3 |= 0x10u;
    *(unsigned char *)(this + 28) = v3;
    *(_DWORD *)(this + 24) = v6;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        return this;
      }
LABEL_12:
      int v8 = *((_DWORD *)a2 + 4);
      *(unsigned char *)(this + 28) = v3 | 4;
      *(_DWORD *)(this + 16) = v8;
      return this;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 3);
  v3 |= 2u;
  *(unsigned char *)(this + 28) = v3;
  *(_DWORD *)(this + 12) = v7;
  if ((*((unsigned char *)a2 + 28) & 4) != 0) {
    goto LABEL_12;
  }
  return this;
}

uint64_t CMMsl::KappaRecoveryResult::operator=(uint64_t a1, const CMMsl::KappaRecoveryResult *a2)
{
  if ((const CMMsl::KappaRecoveryResult *)a1 != a2)
  {
    CMMsl::KappaRecoveryResult::KappaRecoveryResult((uint64_t)&v8, a2);
    int v3 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v11;
    int v11 = v3;
    uint64_t v4 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v12;
    uint64_t v12 = v4;
    uint64_t v5 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v9;
    uint64_t v9 = v5;
    int v6 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v10;
    int v10 = v6;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaRecoveryResult *a2, CMMsl::KappaRecoveryResult *a3)
{
  int v3 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v3;
  int v4 = *((_DWORD *)this + 2);
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)a2 + 2) = v4;
  int v5 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v5;
  int v6 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v6;
  float result = *((float *)this + 3);
  *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
  *((float *)a2 + 3) = result;
  int v8 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v8;
  return result;
}

float CMMsl::KappaRecoveryResult::KappaRecoveryResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642B40;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  float result = *(float *)(a2 + 12);
  *(float *)(a1 + 12) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642B40;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  float result = *(float *)(a2 + 12);
  *(float *)(a1 + 12) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KappaRecoveryResult::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v10[0] = &unk_270642B40;
    int v3 = *(_DWORD *)(a2 + 20);
    int v4 = *(_DWORD *)(a2 + 16);
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a2 + 28) = 0;
    int v12 = *(_DWORD *)(a1 + 20);
    uint64_t v13 = *(void *)(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 8);
    uint64_t v7 = *(void *)(a2 + 8);
    *(_DWORD *)(a1 + 20) = v3;
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 8) = v7;
    v10[1] = v6;
    int v8 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v4;
    int v11 = v8;
    PB::Base::~Base((PB::Base *)v10);
  }
  return a1;
}

uint64_t CMMsl::KappaRecoveryResult::formatText(CMMsl::KappaRecoveryResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 28);
  if (v5)
  {
    PB::TextFormatter::format(a2, "configThreshold1", *((float *)this + 2));
    char v5 = *((unsigned char *)this + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*((unsigned char *)this + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "debugX", *((float *)this + 3));
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(a2, "debugY");
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "outputA", *((float *)this + 5));
  if ((*((unsigned char *)this + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(a2, "outputB");
LABEL_7:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaRecoveryResult::readFrom(CMMsl::KappaRecoveryResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_72;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 0x186A0u:
        *((unsigned char *)this + 28) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 2) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_61;
      case 0x186A1u:
        *((unsigned char *)this + 28) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 5) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_61;
      case 0x186A2u:
        *((unsigned char *)this + 28) |= 0x10u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_66;
            }
            unint64_t v34 = v20++;
            char v35 = *(unsigned char *)(v21 + v34);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v35 & 0x7F) << v32;
            if ((v35 & 0x80) == 0) {
              break;
            }
            v32 += 7;
            BOOL v14 = v33++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
LABEL_65:
              unint64_t v2 = v34 + 1;
              goto LABEL_66;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v24) = 0;
          }
          goto LABEL_65;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_66;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        LODWORD(v24) = 0;
LABEL_66:
        *((_DWORD *)this + 6) = v24;
        break;
      case 0x186A3u:
        *((unsigned char *)this + 28) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 3) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_61:
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_38:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 0x186A4u:
        *((unsigned char *)this + 28) |= 4u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v27 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_71;
            }
            unint64_t v38 = v26++;
            char v39 = *(unsigned char *)(v27 + v38);
            *((void *)a2 + 1) = v26;
            v30 |= (unint64_t)(v39 & 0x7F) << v36;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v36 += 7;
            BOOL v14 = v37++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
LABEL_70:
              unint64_t v2 = v38 + 1;
              goto LABEL_71;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v30) = 0;
          }
          goto LABEL_70;
        }
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        do
        {
          unint64_t v2 = v26 + 1;
          *((void *)a2 + 1) = v26 + 1;
          char v31 = *(unsigned char *)(v27 + v26);
          v30 |= (unint64_t)(v31 & 0x7F) << v28;
          if ((v31 & 0x80) == 0) {
            goto LABEL_71;
          }
          v28 += 7;
          unint64_t v26 = v2;
          BOOL v14 = v29++ > 8;
        }
        while (!v14);
        LODWORD(v30) = 0;
LABEL_71:
        *((_DWORD *)this + 4) = v30;
        break;
      default:
        goto LABEL_19;
    }
LABEL_72:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaRecoveryResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 28);
  if (v4)
  {
    this = PB::Writer::write(a2, *(float *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 28) & 8) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = PB::Writer::write(a2, *(float *)(v3 + 12));
    if ((*(unsigned char *)(v3 + 28) & 4) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 4) == 0) {
    return this;
  }
LABEL_11:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaRecoveryResult::hash_value(CMMsl::KappaRecoveryResult *this)
{
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    uint64_t v1 = 0;
    if ((*((unsigned char *)this + 28) & 8) != 0) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 28) & 0x10) != 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  float v8 = *((float *)this + 2);
  uint64_t v1 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v1 = 0;
  }
  if ((*((unsigned char *)this + 28) & 8) == 0) {
    goto LABEL_14;
  }
LABEL_3:
  float v2 = *((float *)this + 5);
  uint64_t v3 = LODWORD(v2);
  if (v2 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((unsigned char *)this + 28) & 0x10) != 0)
  {
LABEL_6:
    uint64_t v4 = *((int *)this + 6);
    if ((*((unsigned char *)this + 28) & 2) != 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v4 = 0;
  if ((*((unsigned char *)this + 28) & 2) != 0)
  {
LABEL_7:
    float v5 = *((float *)this + 3);
    uint64_t v6 = LODWORD(v5);
    if (v5 == 0.0) {
      uint64_t v6 = 0;
    }
    if ((*((unsigned char *)this + 28) & 4) != 0) {
      goto LABEL_10;
    }
LABEL_17:
    uint64_t v7 = 0;
    return v3 ^ v1 ^ v4 ^ v6 ^ v7;
  }
LABEL_16:
  uint64_t v6 = 0;
  if ((*((unsigned char *)this + 28) & 4) == 0) {
    goto LABEL_17;
  }
LABEL_10:
  uint64_t v7 = *((int *)this + 4);
  return v3 ^ v1 ^ v4 ^ v6 ^ v7;
}

void CMMsl::KappaRemoteAudioResult::~KappaRemoteAudioResult(CMMsl::KappaRemoteAudioResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaRemoteAudioResult::KappaRemoteAudioResult(uint64_t this, const CMMsl::KappaRemoteAudioResult *a2)
{
  *(void *)this = &unk_270642B78;
  *(void *)(this + 204) = 0;
  *(_DWORD *)(this + 212) = 0;
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v6 = *((void *)a2 + 1);
    *(unsigned char *)(this + 214) = 0;
    *(_WORD *)(this + 212) = 0;
    uint64_t v3 = 1;
    *(void *)(this + 204) = 1;
    *(void *)(this + 8) = v6;
    int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
    uint64_t v2 = *(void *)((char *)a2 + 204);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  if ((v2 & 0x10) != 0)
  {
LABEL_5:
    int v7 = *((_DWORD *)a2 + 10);
    v3 |= 0x10uLL;
    *(void *)(this + 204) = v3;
    *(_WORD *)(this + 212) = 0;
    *(unsigned char *)(this + 214) = 0;
    *(_DWORD *)(this + 40) = v7;
    int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
    uint64_t v2 = *(void *)((char *)a2 + 204);
  }
LABEL_6:
  if ((v5 & 2) != 0)
  {
    char v8 = *((unsigned char *)a2 + 188);
    unint64_t v4 = 2;
    *(void *)(this + 204) = v3;
    *(unsigned char *)(this + 214) = 0;
    *(_WORD *)(this + 212) = 2;
    *(unsigned char *)(this + 188) = v8;
    int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
    uint64_t v2 = *(void *)((char *)a2 + 204);
    if ((v2 & 0x200000) == 0)
    {
LABEL_8:
      if ((v5 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_88;
    }
  }
  else if ((v2 & 0x200000) == 0)
  {
    goto LABEL_8;
  }
  int v9 = *((_DWORD *)a2 + 27);
  v3 |= 0x200000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 108) = v9;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 4) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_89;
  }
LABEL_88:
  char v10 = *((unsigned char *)a2 + 189);
  unint64_t v11 = v4 >> 16;
  v4 |= 4uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v11;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 189) = v10;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 2) == 0)
  {
LABEL_10:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t v12 = *((void *)a2 + 2);
  v3 |= 2uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(void *)(this + 16) = v12;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x400000) == 0)
  {
LABEL_11:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_91;
  }
LABEL_90:
  int v13 = *((_DWORD *)a2 + 28);
  v3 |= 0x400000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 112) = v13;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x4000) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }
LABEL_91:
  int v14 = *((_DWORD *)a2 + 20);
  v3 |= 0x4000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 80) = v14;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_93;
  }
LABEL_92:
  int v15 = *((_DWORD *)a2 + 12);
  v3 |= 0x40uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 48) = v15;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_14:
    if ((v2 & 0x400000000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_94;
  }
LABEL_93:
  int v16 = *((_DWORD *)a2 + 32);
  v3 |= 0x4000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 128) = v16;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x400000000000000) == 0)
  {
LABEL_15:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_95;
  }
LABEL_94:
  char v17 = *((unsigned char *)a2 + 181);
  v3 |= 0x400000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 181) = v17;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_96;
  }
LABEL_95:
  char v18 = *((unsigned char *)a2 + 157);
  v3 |= 0x400000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 157) = v18;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x400) == 0)
  {
LABEL_17:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_97;
  }
LABEL_96:
  char v19 = *((unsigned char *)a2 + 197);
  unint64_t v20 = v4 >> 16;
  v4 |= 0x400uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v20;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 197) = v19;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_18:
    if ((v2 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }
LABEL_97:
  char v21 = *((unsigned char *)a2 + 165);
  v3 |= 0x40000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 165) = v21;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v5 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_99;
  }
LABEL_98:
  char v22 = *((unsigned char *)a2 + 173);
  v3 |= 0x4000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 173) = v22;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 8) == 0)
  {
LABEL_20:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_100;
  }
LABEL_99:
  char v23 = *((unsigned char *)a2 + 190);
  unint64_t v24 = v4 >> 16;
  v4 |= 8uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v24;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 190) = v23;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x40000) == 0)
  {
LABEL_21:
    if ((v2 & 0x400) == 0) {
      goto LABEL_22;
    }
    goto LABEL_101;
  }
LABEL_100:
  int v25 = *((_DWORD *)a2 + 24);
  v3 |= 0x40000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 96) = v25;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x400) == 0)
  {
LABEL_22:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_102;
  }
LABEL_101:
  int v26 = *((_DWORD *)a2 + 16);
  v3 |= 0x400uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 64) = v26;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_23:
    if ((v2 & 0x4000000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_103;
  }
LABEL_102:
  int v27 = *((_DWORD *)a2 + 36);
  v3 |= 0x40000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 144) = v27;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x4000000000000000) == 0)
  {
LABEL_24:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_104;
  }
LABEL_103:
  char v28 = *((unsigned char *)a2 + 185);
  v3 |= 0x4000000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 185) = v28;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_105;
  }
LABEL_104:
  char v29 = *((unsigned char *)a2 + 161);
  v3 |= 0x4000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 161) = v29;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x4000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_106;
  }
LABEL_105:
  char v30 = *((unsigned char *)a2 + 201);
  unint64_t v31 = v4 >> 16;
  v4 |= 0x4000uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v31;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 201) = v30;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x400000000000) == 0)
  {
LABEL_27:
    if ((v2 & 0x40000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_107;
  }
LABEL_106:
  char v32 = *((unsigned char *)a2 + 169);
  v3 |= 0x400000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 169) = v32;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x40000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_108;
  }
LABEL_107:
  char v33 = *((unsigned char *)a2 + 177);
  v3 |= 0x40000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 177) = v33;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x40) == 0)
  {
LABEL_29:
    if ((v2 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_109;
  }
LABEL_108:
  char v34 = *((unsigned char *)a2 + 193);
  unint64_t v35 = v4 >> 16;
  v4 |= 0x40uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v35;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 193) = v34;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 4) == 0)
  {
LABEL_30:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t v36 = *((void *)a2 + 3);
  v3 |= 4uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(void *)(this + 24) = v36;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x800000) == 0)
  {
LABEL_31:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_111;
  }
LABEL_110:
  int v37 = *((_DWORD *)a2 + 29);
  v3 |= 0x800000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 116) = v37;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x8000) == 0)
  {
LABEL_32:
    if ((v2 & 0x80) == 0) {
      goto LABEL_33;
    }
    goto LABEL_112;
  }
LABEL_111:
  int v38 = *((_DWORD *)a2 + 21);
  v3 |= 0x8000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 84) = v38;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x80) == 0)
  {
LABEL_33:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }
LABEL_112:
  int v39 = *((_DWORD *)a2 + 13);
  v3 |= 0x80uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 52) = v39;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x800000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_114;
  }
LABEL_113:
  int v40 = *((_DWORD *)a2 + 33);
  v3 |= 0x8000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 132) = v40;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x800000000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_115;
  }
LABEL_114:
  char v41 = *((unsigned char *)a2 + 182);
  v3 |= 0x800000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 182) = v41;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x800) == 0) {
      goto LABEL_37;
    }
    goto LABEL_116;
  }
LABEL_115:
  char v42 = *((unsigned char *)a2 + 158);
  v3 |= 0x800000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 158) = v42;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x800) == 0)
  {
LABEL_37:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_117;
  }
LABEL_116:
  char v43 = *((unsigned char *)a2 + 198);
  unint64_t v44 = v4 >> 16;
  v4 |= 0x800uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v44;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 198) = v43;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_38:
    if ((v2 & 0x8000000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_118;
  }
LABEL_117:
  char v45 = *((unsigned char *)a2 + 166);
  v3 |= 0x80000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 166) = v45;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x8000000000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x10) == 0) {
      goto LABEL_40;
    }
    goto LABEL_119;
  }
LABEL_118:
  char v46 = *((unsigned char *)a2 + 174);
  v3 |= 0x8000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 174) = v46;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x10) == 0)
  {
LABEL_40:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_120;
  }
LABEL_119:
  char v47 = *((unsigned char *)a2 + 191);
  unint64_t v48 = v4 >> 16;
  v4 |= 0x10uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v48;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 191) = v47;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x80000) == 0)
  {
LABEL_41:
    if ((v2 & 0x800) == 0) {
      goto LABEL_42;
    }
    goto LABEL_121;
  }
LABEL_120:
  int v49 = *((_DWORD *)a2 + 25);
  v3 |= 0x80000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 100) = v49;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x800) == 0)
  {
LABEL_42:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_122;
  }
LABEL_121:
  int v50 = *((_DWORD *)a2 + 17);
  v3 |= 0x800uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 68) = v50;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_43:
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_123;
  }
LABEL_122:
  int v51 = *((_DWORD *)a2 + 37);
  v3 |= 0x80000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 148) = v51;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x8000000000000000) == 0)
  {
LABEL_44:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_124;
  }
LABEL_123:
  char v52 = *((unsigned char *)a2 + 186);
  v3 |= 0x8000000000000000;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 186) = v52;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_125;
  }
LABEL_124:
  char v53 = *((unsigned char *)a2 + 162);
  v3 |= 0x8000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 162) = v53;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x8000) == 0)
  {
LABEL_46:
    if ((v2 & 0x800000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_126;
  }
LABEL_125:
  char v54 = *((unsigned char *)a2 + 202);
  unint64_t v55 = v4 >> 16;
  v4 |= 0x8000uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v55;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 202) = v54;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x800000000000) == 0)
  {
LABEL_47:
    if ((v2 & 0x80000000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_127;
  }
LABEL_126:
  char v56 = *((unsigned char *)a2 + 170);
  v3 |= 0x800000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 170) = v56;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x80000000000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_128;
  }
LABEL_127:
  char v57 = *((unsigned char *)a2 + 178);
  v3 |= 0x80000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 178) = v57;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x80) == 0)
  {
LABEL_49:
    if ((v2 & 8) == 0) {
      goto LABEL_50;
    }
    goto LABEL_129;
  }
LABEL_128:
  char v58 = *((unsigned char *)a2 + 194);
  unint64_t v59 = v4 >> 16;
  v4 |= 0x80uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v59;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 194) = v58;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 8) == 0)
  {
LABEL_50:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v60 = *((void *)a2 + 4);
  v3 |= 8uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(void *)(this + 32) = v60;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_51:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_131;
  }
LABEL_130:
  int v61 = *((_DWORD *)a2 + 30);
  v3 |= 0x1000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 120) = v61;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x10000) == 0)
  {
LABEL_52:
    if ((v2 & 0x100) == 0) {
      goto LABEL_53;
    }
    goto LABEL_132;
  }
LABEL_131:
  int v62 = *((_DWORD *)a2 + 22);
  v3 |= 0x10000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 88) = v62;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x100) == 0)
  {
LABEL_53:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_133;
  }
LABEL_132:
  int v63 = *((_DWORD *)a2 + 14);
  v3 |= 0x100uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 56) = v63;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_54:
    if ((v2 & 0x1000000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_134;
  }
LABEL_133:
  int v64 = *((_DWORD *)a2 + 34);
  v3 |= 0x10000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 136) = v64;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x1000000000000000) == 0)
  {
LABEL_55:
    if ((v2 & 0x1000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v65 = *((unsigned char *)a2 + 183);
  v3 |= 0x1000000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 183) = v65;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x1000000000) == 0)
  {
LABEL_56:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_136;
  }
LABEL_135:
  char v66 = *((unsigned char *)a2 + 159);
  v3 |= 0x1000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 159) = v66;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x1000) == 0)
  {
LABEL_57:
    if ((v2 & 0x100000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_137;
  }
LABEL_136:
  char v67 = *((unsigned char *)a2 + 199);
  unint64_t v68 = v4 >> 16;
  v4 |= 0x1000uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v68;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 199) = v67;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_58:
    if ((v2 & 0x10000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_138;
  }
LABEL_137:
  char v69 = *((unsigned char *)a2 + 167);
  v3 |= 0x100000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 167) = v69;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x10000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x20) == 0) {
      goto LABEL_60;
    }
    goto LABEL_139;
  }
LABEL_138:
  char v70 = *((unsigned char *)a2 + 175);
  v3 |= 0x10000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 175) = v70;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x20) == 0)
  {
LABEL_60:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_140;
  }
LABEL_139:
  char v71 = *((unsigned char *)a2 + 192);
  unint64_t v72 = v4 >> 16;
  v4 |= 0x20uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v72;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 192) = v71;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x100000) == 0)
  {
LABEL_61:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_141;
  }
LABEL_140:
  int v73 = *((_DWORD *)a2 + 26);
  v3 |= 0x100000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 104) = v73;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x1000) == 0)
  {
LABEL_62:
    if ((v2 & 0x100000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_142;
  }
LABEL_141:
  int v74 = *((_DWORD *)a2 + 18);
  v3 |= 0x1000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 72) = v74;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x100000000) == 0)
  {
LABEL_63:
    if ((v5 & 1) == 0) {
      goto LABEL_64;
    }
    goto LABEL_143;
  }
LABEL_142:
  int v75 = *((_DWORD *)a2 + 38);
  v3 |= 0x100000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 152) = v75;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 1) == 0)
  {
LABEL_64:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_144;
  }
LABEL_143:
  char v76 = *((unsigned char *)a2 + 187);
  unint64_t v77 = v4 >> 16;
  v4 |= 1uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v77;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 187) = v76;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_145;
  }
LABEL_144:
  char v78 = *((unsigned char *)a2 + 163);
  v3 |= 0x10000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 163) = v78;
  int v5 = *((unsigned __int16 *)a2 + 106) | (*((unsigned __int8 *)a2 + 214) << 16);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_66:
    if ((v2 & 0x1000000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_146;
  }
LABEL_145:
  char v79 = *((unsigned char *)a2 + 203);
  *(_WORD *)(this + 212) = v4;
  v4 |= 0x10000uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 203) = v79;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x1000000000000) == 0)
  {
LABEL_67:
    if ((v2 & 0x100000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_147;
  }
LABEL_146:
  char v80 = *((unsigned char *)a2 + 171);
  v3 |= 0x1000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 171) = v80;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x100000000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x100) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }
LABEL_147:
  char v81 = *((unsigned char *)a2 + 179);
  v3 |= 0x100000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 179) = v81;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v5 & 0x100) == 0)
  {
LABEL_69:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_149;
  }
LABEL_148:
  char v82 = *((unsigned char *)a2 + 195);
  unint64_t v83 = v4 >> 16;
  v4 |= 0x100uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v83;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 195) = v82;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x2000) == 0)
  {
LABEL_70:
    if ((v2 & 0x20) == 0) {
      goto LABEL_71;
    }
    goto LABEL_150;
  }
LABEL_149:
  int v84 = *((_DWORD *)a2 + 19);
  v3 |= 0x2000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 76) = v84;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x20) == 0)
  {
LABEL_71:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_151;
  }
LABEL_150:
  int v85 = *((_DWORD *)a2 + 11);
  v3 |= 0x20uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 44) = v85;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_72:
    if ((v2 & 0x200000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_152;
  }
LABEL_151:
  int v86 = *((_DWORD *)a2 + 31);
  v3 |= 0x2000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 124) = v86;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x200000000000000) == 0)
  {
LABEL_73:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_153;
  }
LABEL_152:
  char v87 = *((unsigned char *)a2 + 180);
  v3 |= 0x200000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 180) = v87;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_74:
    if ((v5 & 0x200) == 0) {
      goto LABEL_75;
    }
    goto LABEL_154;
  }
LABEL_153:
  char v88 = *((unsigned char *)a2 + 156);
  v3 |= 0x200000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 156) = v88;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v5 & 0x200) == 0)
  {
LABEL_75:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_155;
  }
LABEL_154:
  char v89 = *((unsigned char *)a2 + 196);
  unint64_t v90 = v4 >> 16;
  v4 |= 0x200uLL;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v90;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 196) = v89;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_76:
    if ((v2 & 0x2000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_156;
  }
LABEL_155:
  char v91 = *((unsigned char *)a2 + 164);
  v3 |= 0x20000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 164) = v91;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x2000000000000) == 0)
  {
LABEL_77:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_157;
  }
LABEL_156:
  char v92 = *((unsigned char *)a2 + 172);
  v3 |= 0x2000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 172) = v92;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x20000) == 0)
  {
LABEL_78:
    if ((v2 & 0x200) == 0) {
      goto LABEL_79;
    }
    goto LABEL_158;
  }
LABEL_157:
  int v93 = *((_DWORD *)a2 + 23);
  v3 |= 0x20000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 92) = v93;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x200) == 0)
  {
LABEL_79:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_159;
  }
LABEL_158:
  int v94 = *((_DWORD *)a2 + 15);
  v3 |= 0x200uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 60) = v94;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_80:
    if ((v2 & 0x2000000000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_160;
  }
LABEL_159:
  int v95 = *((_DWORD *)a2 + 35);
  v3 |= 0x20000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(_DWORD *)(this + 140) = v95;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x2000000000000000) == 0)
  {
LABEL_81:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_161;
  }
LABEL_160:
  char v96 = *((unsigned char *)a2 + 184);
  v3 |= 0x2000000000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 184) = v96;
  LOWORD(v5) = *((_WORD *)a2 + 106);
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_82:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_162;
  }
LABEL_161:
  char v97 = *((unsigned char *)a2 + 160);
  v3 |= 0x2000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 160) = v97;
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((*((_WORD *)a2 + 106) & 0x2000) == 0)
  {
LABEL_83:
    if ((v2 & 0x200000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_163;
  }
LABEL_162:
  char v98 = *((unsigned char *)a2 + 200);
  unint64_t v99 = v4 >> 16;
  LODWORD(v4) = v4 | 0x2000;
  *(void *)(this + 204) = v3;
  *(unsigned char *)(this + 214) = v99;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 200) = v98;
  uint64_t v2 = *(void *)((char *)a2 + 204);
  if ((v2 & 0x200000000000) == 0)
  {
LABEL_84:
    if ((v2 & 0x20000000000000) == 0) {
      return this;
    }
LABEL_164:
    char v101 = *((unsigned char *)a2 + 176);
    *(void *)(this + 204) = v3 | 0x20000000000000;
    *(_WORD *)(this + 212) = v4;
    *(unsigned char *)(this + 214) = BYTE2(v4);
    *(unsigned char *)(this + 176) = v101;
    return this;
  }
LABEL_163:
  char v100 = *((unsigned char *)a2 + 168);
  v3 |= 0x200000000000uLL;
  *(void *)(this + 204) = v3;
  *(_WORD *)(this + 212) = v4;
  *(unsigned char *)(this + 214) = BYTE2(v4);
  *(unsigned char *)(this + 168) = v100;
  if ((*(void *)((unsigned char *)a2 + 204) & 0x20000000000000) != 0) {
    goto LABEL_164;
  }
  return this;
}

CMMsl *CMMsl::KappaRemoteAudioResult::operator=(CMMsl *a1, const CMMsl::KappaRemoteAudioResult *a2)
{
  v5[27] = *MEMORY[0x263EF8340];
  if (a1 != a2)
  {
    CMMsl::KappaRemoteAudioResult::KappaRemoteAudioResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaRemoteAudioResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaRemoteAudioResult *a2, CMMsl::KappaRemoteAudioResult *a3)
{
  int v3 = *((_DWORD *)this + 53);
  uint64_t v4 = *(void *)((char *)this + 204);
  int v5 = *((_DWORD *)a2 + 53);
  *(void *)((char *)this + 204) = *(void *)((char *)a2 + 204);
  *((_DWORD *)this + 53) = v5;
  *(void *)((char *)a2 + 204) = v4;
  *((_DWORD *)a2 + 53) = v3;
  uint64_t v6 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v6;
  LODWORD(v6) = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 188);
  *((unsigned char *)this + 188) = *((unsigned char *)a2 + 188);
  *((unsigned char *)a2 + 188) = v6;
  int v7 = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v7;
  LOBYTE(v6) = *((unsigned char *)this + 189);
  *((unsigned char *)this + 189) = *((unsigned char *)a2 + 189);
  *((unsigned char *)a2 + 189) = v6;
  uint64_t v8 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v8;
  int v9 = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v9;
  int v10 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v10;
  int v11 = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v11;
  int v12 = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v12;
  LOBYTE(v8) = *((unsigned char *)this + 181);
  *((unsigned char *)this + 181) = *((unsigned char *)a2 + 181);
  *((unsigned char *)a2 + 181) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 157);
  *((unsigned char *)this + 157) = *((unsigned char *)a2 + 157);
  *((unsigned char *)a2 + 157) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 197);
  *((unsigned char *)this + 197) = *((unsigned char *)a2 + 197);
  *((unsigned char *)a2 + 197) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 165);
  *((unsigned char *)this + 165) = *((unsigned char *)a2 + 165);
  *((unsigned char *)a2 + 165) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 173);
  *((unsigned char *)this + 173) = *((unsigned char *)a2 + 173);
  *((unsigned char *)a2 + 173) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 190);
  *((unsigned char *)this + 190) = *((unsigned char *)a2 + 190);
  *((unsigned char *)a2 + 190) = v8;
  int v13 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v13;
  int v14 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v14;
  int v15 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v15;
  LOBYTE(v8) = *((unsigned char *)this + 185);
  *((unsigned char *)this + 185) = *((unsigned char *)a2 + 185);
  *((unsigned char *)a2 + 185) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 161);
  *((unsigned char *)this + 161) = *((unsigned char *)a2 + 161);
  *((unsigned char *)a2 + 161) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 201);
  *((unsigned char *)this + 201) = *((unsigned char *)a2 + 201);
  *((unsigned char *)a2 + 201) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 169);
  *((unsigned char *)this + 169) = *((unsigned char *)a2 + 169);
  *((unsigned char *)a2 + 169) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 177);
  *((unsigned char *)this + 177) = *((unsigned char *)a2 + 177);
  *((unsigned char *)a2 + 177) = v8;
  LOBYTE(v8) = *((unsigned char *)this + 193);
  *((unsigned char *)this + 193) = *((unsigned char *)a2 + 193);
  *((unsigned char *)a2 + 193) = v8;
  uint64_t v16 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v16;
  int v17 = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v17;
  int v18 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v18;
  int v19 = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v19;
  int v20 = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v20;
  LOBYTE(v16) = *((unsigned char *)this + 182);
  *((unsigned char *)this + 182) = *((unsigned char *)a2 + 182);
  *((unsigned char *)a2 + 182) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 158);
  *((unsigned char *)this + 158) = *((unsigned char *)a2 + 158);
  *((unsigned char *)a2 + 158) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 198);
  *((unsigned char *)this + 198) = *((unsigned char *)a2 + 198);
  *((unsigned char *)a2 + 198) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 166);
  *((unsigned char *)this + 166) = *((unsigned char *)a2 + 166);
  *((unsigned char *)a2 + 166) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 174);
  *((unsigned char *)this + 174) = *((unsigned char *)a2 + 174);
  *((unsigned char *)a2 + 174) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 191);
  *((unsigned char *)this + 191) = *((unsigned char *)a2 + 191);
  *((unsigned char *)a2 + 191) = v16;
  int v21 = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v21;
  int v22 = *((_DWORD *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((_DWORD *)a2 + 17) = v22;
  int v23 = *((_DWORD *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((_DWORD *)a2 + 37) = v23;
  LOBYTE(v16) = *((unsigned char *)this + 186);
  *((unsigned char *)this + 186) = *((unsigned char *)a2 + 186);
  *((unsigned char *)a2 + 186) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 162);
  *((unsigned char *)this + 162) = *((unsigned char *)a2 + 162);
  *((unsigned char *)a2 + 162) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 202);
  *((unsigned char *)this + 202) = *((unsigned char *)a2 + 202);
  *((unsigned char *)a2 + 202) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 170);
  *((unsigned char *)this + 170) = *((unsigned char *)a2 + 170);
  *((unsigned char *)a2 + 170) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 178);
  *((unsigned char *)this + 178) = *((unsigned char *)a2 + 178);
  *((unsigned char *)a2 + 178) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 194);
  *((unsigned char *)this + 194) = *((unsigned char *)a2 + 194);
  *((unsigned char *)a2 + 194) = v16;
  uint64_t v24 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v24;
  int v25 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v25;
  int v26 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v26;
  int v27 = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v27;
  int v28 = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v28;
  LOBYTE(v24) = *((unsigned char *)this + 183);
  *((unsigned char *)this + 183) = *((unsigned char *)a2 + 183);
  *((unsigned char *)a2 + 183) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 159);
  *((unsigned char *)this + 159) = *((unsigned char *)a2 + 159);
  *((unsigned char *)a2 + 159) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 199);
  *((unsigned char *)this + 199) = *((unsigned char *)a2 + 199);
  *((unsigned char *)a2 + 199) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 167);
  *((unsigned char *)this + 167) = *((unsigned char *)a2 + 167);
  *((unsigned char *)a2 + 167) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 175);
  *((unsigned char *)this + 175) = *((unsigned char *)a2 + 175);
  *((unsigned char *)a2 + 175) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 192);
  *((unsigned char *)this + 192) = *((unsigned char *)a2 + 192);
  *((unsigned char *)a2 + 192) = v24;
  int v29 = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v29;
  int v30 = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v30;
  int v31 = *((_DWORD *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((_DWORD *)a2 + 38) = v31;
  LOBYTE(v24) = *((unsigned char *)this + 187);
  *((unsigned char *)this + 187) = *((unsigned char *)a2 + 187);
  *((unsigned char *)a2 + 187) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 163);
  *((unsigned char *)this + 163) = *((unsigned char *)a2 + 163);
  *((unsigned char *)a2 + 163) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 203);
  *((unsigned char *)this + 203) = *((unsigned char *)a2 + 203);
  *((unsigned char *)a2 + 203) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 171);
  *((unsigned char *)this + 171) = *((unsigned char *)a2 + 171);
  *((unsigned char *)a2 + 171) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 179);
  *((unsigned char *)this + 179) = *((unsigned char *)a2 + 179);
  *((unsigned char *)a2 + 179) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 195);
  *((unsigned char *)this + 195) = *((unsigned char *)a2 + 195);
  *((unsigned char *)a2 + 195) = v24;
  int v32 = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v32;
  int v33 = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v33;
  int v34 = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v34;
  LOBYTE(v24) = *((unsigned char *)this + 180);
  *((unsigned char *)this + 180) = *((unsigned char *)a2 + 180);
  *((unsigned char *)a2 + 180) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 156);
  *((unsigned char *)this + 156) = *((unsigned char *)a2 + 156);
  *((unsigned char *)a2 + 156) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 196);
  *((unsigned char *)this + 196) = *((unsigned char *)a2 + 196);
  *((unsigned char *)a2 + 196) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 164);
  *((unsigned char *)this + 164) = *((unsigned char *)a2 + 164);
  *((unsigned char *)a2 + 164) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 172);
  *((unsigned char *)this + 172) = *((unsigned char *)a2 + 172);
  *((unsigned char *)a2 + 172) = v24;
  int v35 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v35;
  int v36 = *((_DWORD *)this + 15);
  *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = v36;
  float result = *((float *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((float *)a2 + 35) = result;
  LOBYTE(v24) = *((unsigned char *)this + 184);
  *((unsigned char *)this + 184) = *((unsigned char *)a2 + 184);
  *((unsigned char *)a2 + 184) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 160);
  *((unsigned char *)this + 160) = *((unsigned char *)a2 + 160);
  *((unsigned char *)a2 + 160) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 200);
  *((unsigned char *)this + 200) = *((unsigned char *)a2 + 200);
  *((unsigned char *)a2 + 200) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 168);
  *((unsigned char *)this + 168) = *((unsigned char *)a2 + 168);
  *((unsigned char *)a2 + 168) = v24;
  LOBYTE(v24) = *((unsigned char *)this + 176);
  *((unsigned char *)this + 176) = *((unsigned char *)a2 + 176);
  *((unsigned char *)a2 + 176) = v24;
  return result;
}

float CMMsl::KappaRemoteAudioResult::KappaRemoteAudioResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642B78;
  uint64_t v2 = *(void *)(a2 + 204);
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  *(void *)(a1 + 204) = v2;
  *(_DWORD *)(a2 + 212) = 0;
  *(void *)(a2 + 204) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(unsigned char *)(a1 + 189) = *(unsigned char *)(a2 + 189);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 181) = *(unsigned char *)(a2 + 181);
  *(unsigned char *)(a1 + 157) = *(unsigned char *)(a2 + 157);
  *(unsigned char *)(a1 + 197) = *(unsigned char *)(a2 + 197);
  *(unsigned char *)(a1 + 165) = *(unsigned char *)(a2 + 165);
  *(unsigned char *)(a1 + 173) = *(unsigned char *)(a2 + 173);
  *(unsigned char *)(a1 + 190) = *(unsigned char *)(a2 + 190);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 185) = *(unsigned char *)(a2 + 185);
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  *(unsigned char *)(a1 + 193) = *(unsigned char *)(a2 + 193);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(unsigned char *)(a1 + 182) = *(unsigned char *)(a2 + 182);
  *(unsigned char *)(a1 + 158) = *(unsigned char *)(a2 + 158);
  *(unsigned char *)(a1 + 198) = *(unsigned char *)(a2 + 198);
  *(unsigned char *)(a1 + 166) = *(unsigned char *)(a2 + 166);
  *(unsigned char *)(a1 + 174) = *(unsigned char *)(a2 + 174);
  *(unsigned char *)(a1 + 191) = *(unsigned char *)(a2 + 191);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 186) = *(unsigned char *)(a2 + 186);
  *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  *(unsigned char *)(a1 + 178) = *(unsigned char *)(a2 + 178);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 183) = *(unsigned char *)(a2 + 183);
  *(unsigned char *)(a1 + 159) = *(unsigned char *)(a2 + 159);
  *(unsigned char *)(a1 + 199) = *(unsigned char *)(a2 + 199);
  *(unsigned char *)(a1 + 167) = *(unsigned char *)(a2 + 167);
  *(unsigned char *)(a1 + 175) = *(unsigned char *)(a2 + 175);
  *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 187) = *(unsigned char *)(a2 + 187);
  *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
  *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
  *(unsigned char *)(a1 + 171) = *(unsigned char *)(a2 + 171);
  *(unsigned char *)(a1 + 179) = *(unsigned char *)(a2 + 179);
  *(unsigned char *)(a1 + 195) = *(unsigned char *)(a2 + 195);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  float result = *(float *)(a2 + 140);
  *(float *)(a1 + 140) = result;
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  return result;
}

CMMsl *CMMsl::KappaRemoteAudioResult::operator=(CMMsl *a1, uint64_t a2)
{
  v5[27] = *MEMORY[0x263EF8340];
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaRemoteAudioResult::KappaRemoteAudioResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaRemoteAudioResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaRemoteAudioResult::formatText(CMMsl::KappaRemoteAudioResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x200000000) != 0)
  {
    PB::TextFormatter::format(a2, "chaosMet");
    int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
    uint64_t v5 = *(void *)((char *)this + 204);
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  if ((v5 & 0x400000000) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(a2, "chaosMet0");
    int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
    uint64_t v5 = *(void *)((char *)this + 204);
  }
LABEL_6:
  if ((v5 & 0x800000000) != 0)
  {
    PB::TextFormatter::format(a2, "chaosMet1");
    int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
    uint64_t v5 = *(void *)((char *)this + 204);
    if ((v5 & 0x1000000000) == 0)
    {
LABEL_8:
      if ((v5 & 0x2000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_91;
    }
  }
  else if ((v5 & 0x1000000000) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(a2, "chaosMet2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(a2, "chaosMetRollover");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x4000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(a2, "chaosMetRollover0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x8000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(a2, "chaosMetRollover1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(a2, "chaosMetRollover2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(a2, "chaosOrSaturationMet");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_14:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(a2, "chaosOrSaturationMet0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(a2, "chaosOrSaturationMet1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(a2, "chaosOrSaturationMet2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x200000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(a2, "chaosOrSaturationMetRollover");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x400000000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(a2, "chaosOrSaturationMetRollover0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x800000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(a2, "chaosOrSaturationMetRollover1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x1000000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x2000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(a2, "chaosOrSaturationMetRollover2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x2000000000000) == 0)
  {
LABEL_21:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMet");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x4000000000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMet0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x8000000000000) == 0)
  {
LABEL_23:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMet1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x10000000000000) == 0)
  {
LABEL_24:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMet2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x20000000000000) == 0)
  {
LABEL_25:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMetRollover");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x40000000000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMetRollover0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x80000000000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMetRollover1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x100000000000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(a2, "energyAndChaosOrSaturationMetRollover2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x200000000000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(a2, "energyMet");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x400000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(a2, "energyMet0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(a2, "energyMet1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x1000000000000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(a2, "energyMet2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x2000000000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(a2, "energyMetRollover");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x4000000000000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(a2, "energyMetRollover0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x8000000000000000) == 0)
  {
LABEL_35:
    if ((v6 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(a2, "energyMetRollover1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 1) == 0)
  {
LABEL_36:
    if ((v5 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(a2, "energyMetRollover2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x10) == 0)
  {
LABEL_37:
    if ((v5 & 0x20) == 0) {
      goto LABEL_38;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(a2, "epochNumber");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x20) == 0)
  {
LABEL_38:
    if ((v5 & 0x40) == 0) {
      goto LABEL_39;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(a2, "maxChaos", *((float *)this + 11));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x40) == 0)
  {
LABEL_39:
    if ((v5 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(a2, "maxChaos0", *((float *)this + 12));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x80) == 0)
  {
LABEL_40:
    if ((v5 & 0x100) == 0) {
      goto LABEL_41;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(a2, "maxChaos1", *((float *)this + 13));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x100) == 0)
  {
LABEL_41:
    if ((v5 & 0x200) == 0) {
      goto LABEL_42;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(a2, "maxChaos2", *((float *)this + 14));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x200) == 0)
  {
LABEL_42:
    if ((v5 & 0x400) == 0) {
      goto LABEL_43;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(a2, "maxChaosRollover", *((float *)this + 15));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x400) == 0)
  {
LABEL_43:
    if ((v5 & 0x800) == 0) {
      goto LABEL_44;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(a2, "maxChaosRollover0", *((float *)this + 16));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x800) == 0)
  {
LABEL_44:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(a2, "maxChaosRollover1", *((float *)this + 17));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x1000) == 0)
  {
LABEL_45:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(a2, "maxChaosRollover2", *((float *)this + 18));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x2000) == 0)
  {
LABEL_46:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(a2, "maxEnergy", *((float *)this + 19));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x4000) == 0)
  {
LABEL_47:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(a2, "maxEnergy0", *((float *)this + 20));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x8000) == 0)
  {
LABEL_48:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(a2, "maxEnergy1", *((float *)this + 21));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_49:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(a2, "maxEnergy2", *((float *)this + 22));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x20000) == 0)
  {
LABEL_50:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(a2, "maxEnergyRollover", *((float *)this + 23));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x40000) == 0)
  {
LABEL_51:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(a2, "maxEnergyRollover0", *((float *)this + 24));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x80000) == 0)
  {
LABEL_52:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(a2, "maxEnergyRollover1", *((float *)this + 25));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x100000) == 0)
  {
LABEL_53:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(a2, "maxEnergyRollover2", *((float *)this + 26));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x200000) == 0)
  {
LABEL_54:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(a2, "maxRMS", *((float *)this + 27));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x400000) == 0)
  {
LABEL_55:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(a2, "maxRMS0", *((float *)this + 28));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x800000) == 0)
  {
LABEL_56:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(a2, "maxRMS1", *((float *)this + 29));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_57:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(a2, "maxRMS2", *((float *)this + 30));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(a2, "maxSaturation", *((float *)this + 31));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(a2, "maxSaturation0", *((float *)this + 32));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(a2, "maxSaturation1", *((float *)this + 33));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(a2, "maxSaturation2", *((float *)this + 34));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_62:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(a2, "maxSaturationRollover", *((float *)this + 35));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_63:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(a2, "maxSaturationRollover0", *((float *)this + 36));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(a2, "maxSaturationRollover1", *((float *)this + 37));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_65:
    if ((v6 & 2) == 0) {
      goto LABEL_66;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(a2, "maxSaturationRollover2", *((float *)this + 38));
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 2) == 0)
  {
LABEL_66:
    if ((v6 & 4) == 0) {
      goto LABEL_67;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(a2, "passThru");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 4) == 0)
  {
LABEL_67:
    if ((v6 & 8) == 0) {
      goto LABEL_68;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(a2, "passThruRollover");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 8) == 0)
  {
LABEL_68:
    if ((v6 & 0x10) == 0) {
      goto LABEL_69;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(a2, "passthru0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x10) == 0)
  {
LABEL_69:
    if ((v6 & 0x20) == 0) {
      goto LABEL_70;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(a2, "passthru1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x20) == 0)
  {
LABEL_70:
    if ((v6 & 0x40) == 0) {
      goto LABEL_71;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(a2, "passthru2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x40) == 0)
  {
LABEL_71:
    if ((v6 & 0x80) == 0) {
      goto LABEL_72;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(a2, "passthruRollover0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x80) == 0)
  {
LABEL_72:
    if ((v6 & 0x100) == 0) {
      goto LABEL_73;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(a2, "passthruRollover1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x100) == 0)
  {
LABEL_73:
    if ((v6 & 0x200) == 0) {
      goto LABEL_74;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(a2, "passthruRollover2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x200) == 0)
  {
LABEL_74:
    if ((v6 & 0x400) == 0) {
      goto LABEL_75;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(a2, "saturationMet");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x400) == 0)
  {
LABEL_75:
    if ((v6 & 0x800) == 0) {
      goto LABEL_76;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(a2, "saturationMet0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x800) == 0)
  {
LABEL_76:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(a2, "saturationMet1");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x1000) == 0)
  {
LABEL_77:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(a2, "saturationMet2");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x2000) == 0)
  {
LABEL_78:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(a2, "saturationMetRollover");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x4000) == 0)
  {
LABEL_79:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(a2, "saturationMetRollover0");
  int v6 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((*((_WORD *)this + 106) & 0x8000) == 0)
  {
LABEL_80:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(a2, "saturationMetRollover1");
  uint64_t v5 = *(void *)((char *)this + 204);
  if (((*((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16)) & 0x10000) == 0)
  {
LABEL_81:
    if ((v5 & 1) == 0) {
      goto LABEL_82;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(a2, "saturationMetRollover2");
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 1) == 0)
  {
LABEL_82:
    if ((v5 & 2) == 0) {
      goto LABEL_83;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(a2, "timestamp");
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 2) == 0)
  {
LABEL_83:
    if ((v5 & 4) == 0) {
      goto LABEL_84;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(a2, "timestamp0");
  uint64_t v5 = *(void *)((char *)this + 204);
  if ((v5 & 4) == 0)
  {
LABEL_84:
    if ((v5 & 8) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_166:
  PB::TextFormatter::format(a2, "timestamp1");
  if ((*(void *)((unsigned char *)this + 204) & 8) != 0) {
LABEL_85:
  }
    PB::TextFormatter::format(a2, "timestamp2");
LABEL_86:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaRemoteAudioResult::readFrom(CMMsl::KappaRemoteAudioResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  uint64_t v8 = (char *)this + 204;
  while (1)
  {
    uint64_t v9 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
      break;
    }
    char v10 = 0;
    unsigned int v11 = 0;
    unint64_t v12 = 0;
    while (1)
    {
      unint64_t v13 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v14 = *(unsigned char *)(v9 + v2);
      v12 |= (unint64_t)(v14 & 0x7F) << v10;
      if ((v14 & 0x80) == 0) {
        break;
      }
      v10 += 7;
      unint64_t v2 = v13;
      BOOL v15 = v11++ > 8;
      if (v15) {
        goto LABEL_20;
      }
    }
LABEL_22:
    if ((v12 & 7) == 4)
    {
      int v4 = 0;
      return v4 == 0;
    }
    unint64_t v21 = v12 >> 3;
    if ((int)(v12 >> 3) > 1102)
    {
      if ((v12 >> 3) <= 0x44E)
      {
        switch((int)v21)
        {
          case 1103:
            *(void *)v8 |= 4uLL;
            unint64_t v46 = *((void *)a2 + 1);
            unint64_t v47 = *((void *)a2 + 2);
            uint64_t v48 = *(void *)a2;
            if (v46 <= 0xFFFFFFFFFFFFFFF5 && v46 + 10 <= v47)
            {
              char v49 = 0;
              unsigned int v50 = 0;
              uint64_t v51 = 0;
              do
              {
                unint64_t v52 = v46 + 1;
                *((void *)a2 + 1) = v46 + 1;
                char v53 = *(unsigned char *)(v48 + v46);
                v51 |= (unint64_t)(v53 & 0x7F) << v49;
                if ((v53 & 0x80) == 0) {
                  goto LABEL_397;
                }
                v49 += 7;
                unint64_t v46 = v52;
                BOOL v15 = v50++ > 8;
              }
              while (!v15);
LABEL_271:
              uint64_t v51 = 0;
              goto LABEL_397;
            }
            char v312 = 0;
            unsigned int v313 = 0;
            uint64_t v51 = 0;
            if (v47 <= v46) {
              unint64_t v47 = *((void *)a2 + 1);
            }
            break;
          case 1104:
            *(void *)v8 |= 0x800000uLL;
            unint64_t v241 = *((void *)a2 + 1);
            if (v241 > 0xFFFFFFFFFFFFFFFBLL || v241 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 29) = *(_DWORD *)(*(void *)a2 + v241);
            goto LABEL_376;
          case 1105:
            *(void *)v8 |= 0x8000uLL;
            unint64_t v242 = *((void *)a2 + 1);
            if (v242 > 0xFFFFFFFFFFFFFFFBLL || v242 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v242);
            goto LABEL_376;
          case 1106:
            *(void *)v8 |= 0x80uLL;
            unint64_t v243 = *((void *)a2 + 1);
            if (v243 > 0xFFFFFFFFFFFFFFFBLL || v243 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 13) = *(_DWORD *)(*(void *)a2 + v243);
            goto LABEL_376;
          case 1107:
            *(void *)v8 |= 0x8000000uLL;
            unint64_t v244 = *((void *)a2 + 1);
            if (v244 > 0xFFFFFFFFFFFFFFFBLL || v244 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v244);
            goto LABEL_376;
          case 1108:
            *(void *)v8 |= 0x800000000000000uLL;
            unint64_t v245 = *((void *)a2 + 1);
            if (v245 >= *((void *)a2 + 2))
            {
              BOOL v248 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v246 = v245 + 1;
              int v247 = *(unsigned __int8 *)(*(void *)a2 + v245);
              *((void *)a2 + 1) = v246;
              BOOL v248 = v247 != 0;
            }
            *((unsigned char *)this + 182) = v248;
            goto LABEL_377;
          case 1109:
            *(void *)v8 |= 0x800000000uLL;
            unint64_t v249 = *((void *)a2 + 1);
            if (v249 >= *((void *)a2 + 2))
            {
              BOOL v252 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v250 = v249 + 1;
              int v251 = *(unsigned __int8 *)(*(void *)a2 + v249);
              *((void *)a2 + 1) = v250;
              BOOL v252 = v251 != 0;
            }
            *((unsigned char *)this + 158) = v252;
            goto LABEL_377;
          case 1110:
            char v253 = v8[10];
            *((_WORD *)v8 + 4) |= 0x800u;
            v8[10] = v253;
            unint64_t v254 = *((void *)a2 + 1);
            if (v254 >= *((void *)a2 + 2))
            {
              BOOL v257 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v255 = v254 + 1;
              int v256 = *(unsigned __int8 *)(*(void *)a2 + v254);
              *((void *)a2 + 1) = v255;
              BOOL v257 = v256 != 0;
            }
            *((unsigned char *)this + 198) = v257;
            goto LABEL_377;
          case 1111:
            *(void *)v8 |= 0x80000000000uLL;
            unint64_t v258 = *((void *)a2 + 1);
            if (v258 >= *((void *)a2 + 2))
            {
              BOOL v261 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v259 = v258 + 1;
              int v260 = *(unsigned __int8 *)(*(void *)a2 + v258);
              *((void *)a2 + 1) = v259;
              BOOL v261 = v260 != 0;
            }
            *((unsigned char *)this + 166) = v261;
            goto LABEL_377;
          case 1112:
            *(void *)v8 |= 0x8000000000000uLL;
            unint64_t v262 = *((void *)a2 + 1);
            if (v262 >= *((void *)a2 + 2))
            {
              BOOL v265 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v263 = v262 + 1;
              int v264 = *(unsigned __int8 *)(*(void *)a2 + v262);
              *((void *)a2 + 1) = v263;
              BOOL v265 = v264 != 0;
            }
            *((unsigned char *)this + 174) = v265;
            goto LABEL_377;
          case 1113:
            char v266 = v8[10];
            *((_WORD *)v8 + 4) |= 0x10u;
            v8[10] = v266;
            unint64_t v267 = *((void *)a2 + 1);
            if (v267 >= *((void *)a2 + 2))
            {
              BOOL v270 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v268 = v267 + 1;
              int v269 = *(unsigned __int8 *)(*(void *)a2 + v267);
              *((void *)a2 + 1) = v268;
              BOOL v270 = v269 != 0;
            }
            *((unsigned char *)this + 191) = v270;
            goto LABEL_377;
          case 1114:
            *(void *)v8 |= 0x80000uLL;
            unint64_t v271 = *((void *)a2 + 1);
            if (v271 > 0xFFFFFFFFFFFFFFFBLL || v271 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v271);
            goto LABEL_376;
          case 1115:
            *(void *)v8 |= 0x800uLL;
            unint64_t v272 = *((void *)a2 + 1);
            if (v272 > 0xFFFFFFFFFFFFFFFBLL || v272 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 17) = *(_DWORD *)(*(void *)a2 + v272);
            goto LABEL_376;
          case 1116:
            *(void *)v8 |= 0x80000000uLL;
            unint64_t v273 = *((void *)a2 + 1);
            if (v273 <= 0xFFFFFFFFFFFFFFFBLL && v273 + 4 <= *((void *)a2 + 2))
            {
              *((_DWORD *)this + 37) = *(_DWORD *)(*(void *)a2 + v273);
LABEL_376:
              *((void *)a2 + 1) += 4;
            }
            else
            {
LABEL_231:
              *((unsigned char *)a2 + 24) = 1;
            }
            goto LABEL_377;
          case 1117:
            *(void *)v8 |= 0x8000000000000000;
            unint64_t v274 = *((void *)a2 + 1);
            if (v274 >= *((void *)a2 + 2))
            {
              BOOL v277 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v275 = v274 + 1;
              int v276 = *(unsigned __int8 *)(*(void *)a2 + v274);
              *((void *)a2 + 1) = v275;
              BOOL v277 = v276 != 0;
            }
            *((unsigned char *)this + 186) = v277;
            goto LABEL_377;
          case 1118:
            *(void *)v8 |= 0x8000000000uLL;
            unint64_t v278 = *((void *)a2 + 1);
            if (v278 >= *((void *)a2 + 2))
            {
              BOOL v281 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v279 = v278 + 1;
              int v280 = *(unsigned __int8 *)(*(void *)a2 + v278);
              *((void *)a2 + 1) = v279;
              BOOL v281 = v280 != 0;
            }
            *((unsigned char *)this + 162) = v281;
            goto LABEL_377;
          case 1119:
            char v282 = v8[10];
            *((_WORD *)v8 + 4) |= 0x8000u;
            v8[10] = v282;
            unint64_t v283 = *((void *)a2 + 1);
            if (v283 >= *((void *)a2 + 2))
            {
              BOOL v286 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v284 = v283 + 1;
              int v285 = *(unsigned __int8 *)(*(void *)a2 + v283);
              *((void *)a2 + 1) = v284;
              BOOL v286 = v285 != 0;
            }
            *((unsigned char *)this + 202) = v286;
            goto LABEL_377;
          case 1120:
            *(void *)v8 |= 0x800000000000uLL;
            unint64_t v287 = *((void *)a2 + 1);
            if (v287 >= *((void *)a2 + 2))
            {
              BOOL v290 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v288 = v287 + 1;
              int v289 = *(unsigned __int8 *)(*(void *)a2 + v287);
              *((void *)a2 + 1) = v288;
              BOOL v290 = v289 != 0;
            }
            *((unsigned char *)this + 170) = v290;
            goto LABEL_377;
          case 1121:
            *(void *)v8 |= 0x80000000000000uLL;
            unint64_t v291 = *((void *)a2 + 1);
            if (v291 >= *((void *)a2 + 2))
            {
              BOOL v294 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v292 = v291 + 1;
              int v293 = *(unsigned __int8 *)(*(void *)a2 + v291);
              *((void *)a2 + 1) = v292;
              BOOL v294 = v293 != 0;
            }
            *((unsigned char *)this + 178) = v294;
            goto LABEL_377;
          case 1122:
            char v295 = v8[10];
            *((_WORD *)v8 + 4) |= 0x80u;
            v8[10] = v295;
            unint64_t v296 = *((void *)a2 + 1);
            if (v296 >= *((void *)a2 + 2))
            {
              BOOL v299 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v297 = v296 + 1;
              int v298 = *(unsigned __int8 *)(*(void *)a2 + v296);
              *((void *)a2 + 1) = v297;
              BOOL v299 = v298 != 0;
            }
            *((unsigned char *)this + 194) = v299;
            goto LABEL_377;
          default:
            JUMPOUT(0);
        }
        while (1)
        {
          if (v47 == v46)
          {
            uint64_t v51 = 0;
            *((unsigned char *)a2 + 24) = 1;
            goto LABEL_397;
          }
          unint64_t v314 = v46 + 1;
          char v315 = *(unsigned char *)(v48 + v46);
          *((void *)a2 + 1) = v314;
          v51 |= (unint64_t)(v315 & 0x7F) << v312;
          if ((v315 & 0x80) == 0) {
            break;
          }
          v312 += 7;
          unint64_t v46 = v314;
          BOOL v15 = v313++ > 8;
          if (v15) {
            goto LABEL_271;
          }
        }
        if (*((unsigned char *)a2 + 24)) {
          uint64_t v51 = 0;
        }
LABEL_397:
        *((void *)this + 3) = v51;
      }
      else
      {
        switch((int)v21)
        {
          case 1203:
            *(void *)v8 |= 8uLL;
            unint64_t v30 = *((void *)a2 + 1);
            unint64_t v31 = *((void *)a2 + 2);
            uint64_t v32 = *(void *)a2;
            if (v30 <= 0xFFFFFFFFFFFFFFF5 && v30 + 10 <= v31)
            {
              char v33 = 0;
              unsigned int v34 = 0;
              uint64_t v35 = 0;
              do
              {
                unint64_t v36 = v30 + 1;
                *((void *)a2 + 1) = v30 + 1;
                char v37 = *(unsigned char *)(v32 + v30);
                v35 |= (unint64_t)(v37 & 0x7F) << v33;
                if ((v37 & 0x80) == 0) {
                  goto LABEL_389;
                }
                v33 += 7;
                unint64_t v30 = v36;
                BOOL v15 = v34++ > 8;
              }
              while (!v15);
LABEL_257:
              uint64_t v35 = 0;
              goto LABEL_389;
            }
            char v304 = 0;
            unsigned int v305 = 0;
            uint64_t v35 = 0;
            if (v31 <= v30) {
              unint64_t v31 = *((void *)a2 + 1);
            }
            break;
          case 1204:
            *(void *)v8 |= 0x1000000uLL;
            unint64_t v121 = *((void *)a2 + 1);
            if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v121);
            goto LABEL_376;
          case 1205:
            *(void *)v8 |= 0x10000uLL;
            unint64_t v122 = *((void *)a2 + 1);
            if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 22) = *(_DWORD *)(*(void *)a2 + v122);
            goto LABEL_376;
          case 1206:
            *(void *)v8 |= 0x100uLL;
            unint64_t v123 = *((void *)a2 + 1);
            if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 14) = *(_DWORD *)(*(void *)a2 + v123);
            goto LABEL_376;
          case 1207:
            *(void *)v8 |= 0x10000000uLL;
            unint64_t v124 = *((void *)a2 + 1);
            if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 34) = *(_DWORD *)(*(void *)a2 + v124);
            goto LABEL_376;
          case 1208:
            *(void *)v8 |= 0x1000000000000000uLL;
            unint64_t v125 = *((void *)a2 + 1);
            if (v125 >= *((void *)a2 + 2))
            {
              BOOL v128 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v126 = v125 + 1;
              int v127 = *(unsigned __int8 *)(*(void *)a2 + v125);
              *((void *)a2 + 1) = v126;
              BOOL v128 = v127 != 0;
            }
            *((unsigned char *)this + 183) = v128;
            goto LABEL_377;
          case 1209:
            *(void *)v8 |= 0x1000000000uLL;
            unint64_t v129 = *((void *)a2 + 1);
            if (v129 >= *((void *)a2 + 2))
            {
              BOOL v132 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v130 = v129 + 1;
              int v131 = *(unsigned __int8 *)(*(void *)a2 + v129);
              *((void *)a2 + 1) = v130;
              BOOL v132 = v131 != 0;
            }
            *((unsigned char *)this + 159) = v132;
            goto LABEL_377;
          case 1210:
            char v133 = v8[10];
            *((_WORD *)v8 + 4) |= 0x1000u;
            v8[10] = v133;
            unint64_t v134 = *((void *)a2 + 1);
            if (v134 >= *((void *)a2 + 2))
            {
              BOOL v137 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v135 = v134 + 1;
              int v136 = *(unsigned __int8 *)(*(void *)a2 + v134);
              *((void *)a2 + 1) = v135;
              BOOL v137 = v136 != 0;
            }
            *((unsigned char *)this + 199) = v137;
            goto LABEL_377;
          case 1211:
            *(void *)v8 |= 0x100000000000uLL;
            unint64_t v138 = *((void *)a2 + 1);
            if (v138 >= *((void *)a2 + 2))
            {
              BOOL v141 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v139 = v138 + 1;
              int v140 = *(unsigned __int8 *)(*(void *)a2 + v138);
              *((void *)a2 + 1) = v139;
              BOOL v141 = v140 != 0;
            }
            *((unsigned char *)this + 167) = v141;
            goto LABEL_377;
          case 1212:
            *(void *)v8 |= 0x10000000000000uLL;
            unint64_t v142 = *((void *)a2 + 1);
            if (v142 >= *((void *)a2 + 2))
            {
              BOOL v145 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v143 = v142 + 1;
              int v144 = *(unsigned __int8 *)(*(void *)a2 + v142);
              *((void *)a2 + 1) = v143;
              BOOL v145 = v144 != 0;
            }
            *((unsigned char *)this + 175) = v145;
            goto LABEL_377;
          case 1213:
            char v146 = v8[10];
            *((_WORD *)v8 + 4) |= 0x20u;
            v8[10] = v146;
            unint64_t v147 = *((void *)a2 + 1);
            if (v147 >= *((void *)a2 + 2))
            {
              BOOL v150 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v148 = v147 + 1;
              int v149 = *(unsigned __int8 *)(*(void *)a2 + v147);
              *((void *)a2 + 1) = v148;
              BOOL v150 = v149 != 0;
            }
            *((unsigned char *)this + 192) = v150;
            goto LABEL_377;
          case 1214:
            *(void *)v8 |= 0x100000uLL;
            unint64_t v151 = *((void *)a2 + 1);
            if (v151 > 0xFFFFFFFFFFFFFFFBLL || v151 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 26) = *(_DWORD *)(*(void *)a2 + v151);
            goto LABEL_376;
          case 1215:
            *(void *)v8 |= 0x1000uLL;
            unint64_t v152 = *((void *)a2 + 1);
            if (v152 > 0xFFFFFFFFFFFFFFFBLL || v152 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 18) = *(_DWORD *)(*(void *)a2 + v152);
            goto LABEL_376;
          case 1216:
            *(void *)v8 |= 0x100000000uLL;
            unint64_t v153 = *((void *)a2 + 1);
            if (v153 > 0xFFFFFFFFFFFFFFFBLL || v153 + 4 > *((void *)a2 + 2)) {
              goto LABEL_231;
            }
            *((_DWORD *)this + 38) = *(_DWORD *)(*(void *)a2 + v153);
            goto LABEL_376;
          case 1217:
            char v154 = v8[10];
            *((_WORD *)v8 + 4) |= 1u;
            v8[10] = v154;
            unint64_t v155 = *((void *)a2 + 1);
            if (v155 >= *((void *)a2 + 2))
            {
              BOOL v158 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v156 = v155 + 1;
              int v157 = *(unsigned __int8 *)(*(void *)a2 + v155);
              *((void *)a2 + 1) = v156;
              BOOL v158 = v157 != 0;
            }
            *((unsigned char *)this + 187) = v158;
            goto LABEL_377;
          case 1218:
            *(void *)v8 |= 0x10000000000uLL;
            unint64_t v159 = *((void *)a2 + 1);
            if (v159 >= *((void *)a2 + 2))
            {
              BOOL v162 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v160 = v159 + 1;
              int v161 = *(unsigned __int8 *)(*(void *)a2 + v159);
              *((void *)a2 + 1) = v160;
              BOOL v162 = v161 != 0;
            }
            *((unsigned char *)this + 163) = v162;
            goto LABEL_377;
          case 1219:
            int v163 = *((unsigned __int16 *)v8 + 4);
            unsigned int v164 = (v163 | (v8[10] << 16) | 0x10000u) >> 16;
            *((_WORD *)v8 + 4) = v163;
            v8[10] = v164;
            unint64_t v165 = *((void *)a2 + 1);
            if (v165 >= *((void *)a2 + 2))
            {
              BOOL v168 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v166 = v165 + 1;
              int v167 = *(unsigned __int8 *)(*(void *)a2 + v165);
              *((void *)a2 + 1) = v166;
              BOOL v168 = v167 != 0;
            }
            *((unsigned char *)this + 203) = v168;
            goto LABEL_377;
          case 1220:
            *(void *)v8 |= 0x1000000000000uLL;
            unint64_t v169 = *((void *)a2 + 1);
            if (v169 >= *((void *)a2 + 2))
            {
              BOOL v172 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v170 = v169 + 1;
              int v171 = *(unsigned __int8 *)(*(void *)a2 + v169);
              *((void *)a2 + 1) = v170;
              BOOL v172 = v171 != 0;
            }
            *((unsigned char *)this + 171) = v172;
            goto LABEL_377;
          case 1221:
            *(void *)v8 |= 0x100000000000000uLL;
            unint64_t v173 = *((void *)a2 + 1);
            if (v173 >= *((void *)a2 + 2))
            {
              BOOL v176 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v174 = v173 + 1;
              int v175 = *(unsigned __int8 *)(*(void *)a2 + v173);
              *((void *)a2 + 1) = v174;
              BOOL v176 = v175 != 0;
            }
            *((unsigned char *)this + 179) = v176;
            goto LABEL_377;
          case 1222:
            char v177 = v8[10];
            *((_WORD *)v8 + 4) |= 0x100u;
            v8[10] = v177;
            unint64_t v178 = *((void *)a2 + 1);
            if (v178 >= *((void *)a2 + 2))
            {
              BOOL v181 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v179 = v178 + 1;
              int v180 = *(unsigned __int8 *)(*(void *)a2 + v178);
              *((void *)a2 + 1) = v179;
              BOOL v181 = v180 != 0;
            }
            *((unsigned char *)this + 195) = v181;
            goto LABEL_377;
          default:
            goto LABEL_20;
        }
        while (1)
        {
          if (v31 == v30)
          {
            uint64_t v35 = 0;
            *((unsigned char *)a2 + 24) = 1;
            goto LABEL_389;
          }
          unint64_t v306 = v30 + 1;
          char v307 = *(unsigned char *)(v32 + v30);
          *((void *)a2 + 1) = v306;
          v35 |= (unint64_t)(v307 & 0x7F) << v304;
          if ((v307 & 0x80) == 0) {
            break;
          }
          v304 += 7;
          unint64_t v30 = v306;
          BOOL v15 = v305++ > 8;
          if (v15) {
            goto LABEL_257;
          }
        }
        if (*((unsigned char *)a2 + 24)) {
          uint64_t v35 = 0;
        }
LABEL_389:
        *((void *)this + 4) = v35;
      }
    }
    else
    {
      switch((int)v21)
      {
        case 'e':
          *(void *)v8 |= 1uLL;
          unint64_t v22 = *((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
          uint64_t v24 = *(void *)a2;
          if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            do
            {
              unint64_t v28 = v22 + 1;
              *((void *)a2 + 1) = v22 + 1;
              char v29 = *(unsigned char *)(v24 + v22);
              v27 |= (unint64_t)(v29 & 0x7F) << v25;
              if ((v29 & 0x80) == 0) {
                goto LABEL_385;
              }
              v25 += 7;
              unint64_t v22 = v28;
              BOOL v15 = v26++ > 8;
            }
            while (!v15);
LABEL_250:
            uint64_t v27 = 0;
            goto LABEL_385;
          }
          char v300 = 0;
          unsigned int v301 = 0;
          uint64_t v27 = 0;
          if (v23 <= v22) {
            unint64_t v23 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v23 == v22)
            {
              uint64_t v27 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v302 = v22 + 1;
              char v303 = *(unsigned char *)(v24 + v22);
              *((void *)a2 + 1) = v302;
              v27 |= (unint64_t)(v303 & 0x7F) << v300;
              if (v303 < 0)
              {
                v300 += 7;
                unint64_t v22 = v302;
                BOOL v15 = v301++ > 8;
                if (v15) {
                  goto LABEL_250;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v27 = 0;
              }
            }
            break;
          }
LABEL_385:
          *((void *)this + 1) = v27;
          goto LABEL_377;
        case 'f':
          *(void *)v8 |= 0x10uLL;
          unint64_t v54 = *((void *)a2 + 1);
          unint64_t v55 = *((void *)a2 + 2);
          uint64_t v56 = *(void *)a2;
          if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
          {
            char v57 = 0;
            unsigned int v58 = 0;
            uint64_t v59 = 0;
            do
            {
              unint64_t v60 = v54 + 1;
              *((void *)a2 + 1) = v54 + 1;
              char v61 = *(unsigned char *)(v56 + v54);
              v59 |= (unint64_t)(v61 & 0x7F) << v57;
              if ((v61 & 0x80) == 0) {
                goto LABEL_401;
              }
              v57 += 7;
              unint64_t v54 = v60;
              BOOL v15 = v58++ > 8;
            }
            while (!v15);
LABEL_278:
            LODWORD(v59) = 0;
            goto LABEL_401;
          }
          char v316 = 0;
          unsigned int v317 = 0;
          uint64_t v59 = 0;
          if (v55 <= v54) {
            unint64_t v55 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v55 == v54)
            {
              LODWORD(v59) = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v318 = v54 + 1;
              char v319 = *(unsigned char *)(v56 + v54);
              *((void *)a2 + 1) = v318;
              v59 |= (unint64_t)(v319 & 0x7F) << v316;
              if (v319 < 0)
              {
                v316 += 7;
                unint64_t v54 = v318;
                BOOL v15 = v317++ > 8;
                if (v15) {
                  goto LABEL_278;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v59) = 0;
              }
            }
            break;
          }
LABEL_401:
          *((_DWORD *)this + 10) = v59;
          goto LABEL_377;
        case 'g':
          char v62 = v8[10];
          *((_WORD *)v8 + 4) |= 2u;
          v8[10] = v62;
          unint64_t v63 = *((void *)a2 + 1);
          if (v63 >= *((void *)a2 + 2))
          {
            BOOL v66 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v64 = v63 + 1;
            int v65 = *(unsigned __int8 *)(*(void *)a2 + v63);
            *((void *)a2 + 1) = v64;
            BOOL v66 = v65 != 0;
          }
          *((unsigned char *)this + 188) = v66;
          goto LABEL_377;
        case 'h':
          *(void *)v8 |= 0x200000uLL;
          unint64_t v67 = *((void *)a2 + 1);
          if (v67 > 0xFFFFFFFFFFFFFFFBLL || v67 + 4 > *((void *)a2 + 2)) {
            goto LABEL_231;
          }
          *((_DWORD *)this + 27) = *(_DWORD *)(*(void *)a2 + v67);
          goto LABEL_376;
        case 'i':
          *(void *)v8 |= 0x2000uLL;
          unint64_t v68 = *((void *)a2 + 1);
          if (v68 > 0xFFFFFFFFFFFFFFFBLL || v68 + 4 > *((void *)a2 + 2)) {
            goto LABEL_231;
          }
          *((_DWORD *)this + 19) = *(_DWORD *)(*(void *)a2 + v68);
          goto LABEL_376;
        case 'j':
          *(void *)v8 |= 0x20uLL;
          unint64_t v69 = *((void *)a2 + 1);
          if (v69 > 0xFFFFFFFFFFFFFFFBLL || v69 + 4 > *((void *)a2 + 2)) {
            goto LABEL_231;
          }
          *((_DWORD *)this + 11) = *(_DWORD *)(*(void *)a2 + v69);
          goto LABEL_376;
        case 'k':
          *(void *)v8 |= 0x2000000uLL;
          unint64_t v70 = *((void *)a2 + 1);
          if (v70 > 0xFFFFFFFFFFFFFFFBLL || v70 + 4 > *((void *)a2 + 2)) {
            goto LABEL_231;
          }
          *((_DWORD *)this + 31) = *(_DWORD *)(*(void *)a2 + v70);
          goto LABEL_376;
        case 'l':
          *(void *)v8 |= 0x200000000000000uLL;
          unint64_t v71 = *((void *)a2 + 1);
          if (v71 >= *((void *)a2 + 2))
          {
            BOOL v74 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v72 = v71 + 1;
            int v73 = *(unsigned __int8 *)(*(void *)a2 + v71);
            *((void *)a2 + 1) = v72;
            BOOL v74 = v73 != 0;
          }
          *((unsigned char *)this + 180) = v74;
          goto LABEL_377;
        case 'm':
          *(void *)v8 |= 0x200000000uLL;
          unint64_t v75 = *((void *)a2 + 1);
          if (v75 >= *((void *)a2 + 2))
          {
            BOOL v78 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v76 = v75 + 1;
            int v77 = *(unsigned __int8 *)(*(void *)a2 + v75);
            *((void *)a2 + 1) = v76;
            BOOL v78 = v77 != 0;
          }
          *((unsigned char *)this + 156) = v78;
          goto LABEL_377;
        case 'n':
          char v79 = v8[10];
          *((_WORD *)v8 + 4) |= 0x200u;
          v8[10] = v79;
          unint64_t v80 = *((void *)a2 + 1);
          if (v80 >= *((void *)a2 + 2))
          {
            BOOL v83 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v81 = v80 + 1;
            int v82 = *(unsigned __int8 *)(*(void *)a2 + v80);
            *((void *)a2 + 1) = v81;
            BOOL v83 = v82 != 0;
          }
          *((unsigned char *)this + 196) = v83;
          goto LABEL_377;
        case 'o':
          *(void *)v8 |= 0x20000000000uLL;
          unint64_t v84 = *((void *)a2 + 1);
          if (v84 >= *((void *)a2 + 2))
          {
            BOOL v87 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v85 = v84 + 1;
            int v86 = *(unsigned __int8 *)(*(void *)a2 + v84);
            *((void *)a2 + 1) = v85;
            BOOL v87 = v86 != 0;
          }
          *((unsigned char *)this + 164) = v87;
          goto LABEL_377;
        case 'p':
          *(void *)v8 |= 0x2000000000000uLL;
          unint64_t v88 = *((void *)a2 + 1);
          if (v88 >= *((void *)a2 + 2))
          {
            BOOL v91 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v89 = v88 + 1;
            int v90 = *(unsigned __int8 *)(*(void *)a2 + v88);
            *((void *)a2 + 1) = v89;
            BOOL v91 = v90 != 0;
          }
          *((unsigned char *)this + 172) = v91;
          goto LABEL_377;
        case 'q':
          char v92 = v8[10];
          *((_WORD *)v8 + 4) |= 4u;
          v8[10] = v92;
          unint64_t v93 = *((void *)a2 + 1);
          if (v93 >= *((void *)a2 + 2))
          {
            BOOL v96 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v94 = v93 + 1;
            int v95 = *(unsigned __int8 *)(*(void *)a2 + v93);
            *((void *)a2 + 1) = v94;
            BOOL v96 = v95 != 0;
          }
          *((unsigned char *)this + 189) = v96;
          goto LABEL_377;
        case 'r':
          *(void *)v8 |= 0x20000uLL;
          unint64_t v97 = *((void *)a2 + 1);
          if (v97 > 0xFFFFFFFFFFFFFFFBLL || v97 + 4 > *((void *)a2 + 2)) {
            goto LABEL_231;
          }
          *((_DWORD *)this + 23) = *(_DWORD *)(*(void *)a2 + v97);
          goto LABEL_376;
        case 's':
          *(void *)v8 |= 0x200uLL;
          unint64_t v98 = *((void *)a2 + 1);
          if (v98 > 0xFFFFFFFFFFFFFFFBLL || v98 + 4 > *((void *)a2 + 2)) {
            goto LABEL_231;
          }
          *((_DWORD *)this + 15) = *(_DWORD *)(*(void *)a2 + v98);
          goto LABEL_376;
        case 't':
          *(void *)v8 |= 0x20000000uLL;
          unint64_t v99 = *((void *)a2 + 1);
          if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)a2 + 2)) {
            goto LABEL_231;
          }
          *((_DWORD *)this + 35) = *(_DWORD *)(*(void *)a2 + v99);
          goto LABEL_376;
        case 'u':
          *(void *)v8 |= 0x2000000000000000uLL;
          unint64_t v100 = *((void *)a2 + 1);
          if (v100 >= *((void *)a2 + 2))
          {
            BOOL v103 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v101 = v100 + 1;
            int v102 = *(unsigned __int8 *)(*(void *)a2 + v100);
            *((void *)a2 + 1) = v101;
            BOOL v103 = v102 != 0;
          }
          *((unsigned char *)this + 184) = v103;
          goto LABEL_377;
        case 'v':
          *(void *)v8 |= 0x2000000000uLL;
          unint64_t v104 = *((void *)a2 + 1);
          if (v104 >= *((void *)a2 + 2))
          {
            BOOL v107 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v105 = v104 + 1;
            int v106 = *(unsigned __int8 *)(*(void *)a2 + v104);
            *((void *)a2 + 1) = v105;
            BOOL v107 = v106 != 0;
          }
          *((unsigned char *)this + 160) = v107;
          goto LABEL_377;
        case 'w':
          char v108 = v8[10];
          *((_WORD *)v8 + 4) |= 0x2000u;
          v8[10] = v108;
          unint64_t v109 = *((void *)a2 + 1);
          if (v109 >= *((void *)a2 + 2))
          {
            BOOL v112 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v110 = v109 + 1;
            int v111 = *(unsigned __int8 *)(*(void *)a2 + v109);
            *((void *)a2 + 1) = v110;
            BOOL v112 = v111 != 0;
          }
          *((unsigned char *)this + 200) = v112;
          goto LABEL_377;
        case 'x':
          *(void *)v8 |= 0x200000000000uLL;
          unint64_t v113 = *((void *)a2 + 1);
          if (v113 >= *((void *)a2 + 2))
          {
            BOOL v116 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v114 = v113 + 1;
            int v115 = *(unsigned __int8 *)(*(void *)a2 + v113);
            *((void *)a2 + 1) = v114;
            BOOL v116 = v115 != 0;
          }
          *((unsigned char *)this + 168) = v116;
          goto LABEL_377;
        case 'y':
          *(void *)v8 |= 0x20000000000000uLL;
          unint64_t v117 = *((void *)a2 + 1);
          if (v117 >= *((void *)a2 + 2))
          {
            BOOL v120 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v118 = v117 + 1;
            int v119 = *(unsigned __int8 *)(*(void *)a2 + v117);
            *((void *)a2 + 1) = v118;
            BOOL v120 = v119 != 0;
          }
          *((unsigned char *)this + 176) = v120;
          goto LABEL_377;
        default:
          switch((int)v21)
          {
            case 1003:
              *(void *)v8 |= 2uLL;
              unint64_t v38 = *((void *)a2 + 1);
              unint64_t v39 = *((void *)a2 + 2);
              uint64_t v40 = *(void *)a2;
              if (v38 <= 0xFFFFFFFFFFFFFFF5 && v38 + 10 <= v39)
              {
                char v41 = 0;
                unsigned int v42 = 0;
                uint64_t v43 = 0;
                do
                {
                  unint64_t v44 = v38 + 1;
                  *((void *)a2 + 1) = v38 + 1;
                  char v45 = *(unsigned char *)(v40 + v38);
                  v43 |= (unint64_t)(v45 & 0x7F) << v41;
                  if ((v45 & 0x80) == 0) {
                    goto LABEL_393;
                  }
                  v41 += 7;
                  unint64_t v38 = v44;
                  BOOL v15 = v42++ > 8;
                }
                while (!v15);
LABEL_264:
                uint64_t v43 = 0;
                goto LABEL_393;
              }
              char v308 = 0;
              unsigned int v309 = 0;
              uint64_t v43 = 0;
              if (v39 <= v38) {
                unint64_t v39 = *((void *)a2 + 1);
              }
              break;
            case 1004:
              *(void *)v8 |= 0x400000uLL;
              unint64_t v182 = *((void *)a2 + 1);
              if (v182 > 0xFFFFFFFFFFFFFFFBLL || v182 + 4 > *((void *)a2 + 2)) {
                goto LABEL_231;
              }
              *((_DWORD *)this + 28) = *(_DWORD *)(*(void *)a2 + v182);
              goto LABEL_376;
            case 1005:
              *(void *)v8 |= 0x4000uLL;
              unint64_t v183 = *((void *)a2 + 1);
              if (v183 > 0xFFFFFFFFFFFFFFFBLL || v183 + 4 > *((void *)a2 + 2)) {
                goto LABEL_231;
              }
              *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v183);
              goto LABEL_376;
            case 1006:
              *(void *)v8 |= 0x40uLL;
              unint64_t v184 = *((void *)a2 + 1);
              if (v184 > 0xFFFFFFFFFFFFFFFBLL || v184 + 4 > *((void *)a2 + 2)) {
                goto LABEL_231;
              }
              *((_DWORD *)this + 12) = *(_DWORD *)(*(void *)a2 + v184);
              goto LABEL_376;
            case 1007:
              *(void *)v8 |= 0x4000000uLL;
              unint64_t v185 = *((void *)a2 + 1);
              if (v185 > 0xFFFFFFFFFFFFFFFBLL || v185 + 4 > *((void *)a2 + 2)) {
                goto LABEL_231;
              }
              *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v185);
              goto LABEL_376;
            case 1008:
              *(void *)v8 |= 0x400000000000000uLL;
              unint64_t v186 = *((void *)a2 + 1);
              if (v186 >= *((void *)a2 + 2))
              {
                BOOL v189 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v187 = v186 + 1;
                int v188 = *(unsigned __int8 *)(*(void *)a2 + v186);
                *((void *)a2 + 1) = v187;
                BOOL v189 = v188 != 0;
              }
              *((unsigned char *)this + 181) = v189;
              goto LABEL_377;
            case 1009:
              *(void *)v8 |= 0x400000000uLL;
              unint64_t v190 = *((void *)a2 + 1);
              if (v190 >= *((void *)a2 + 2))
              {
                BOOL v193 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v191 = v190 + 1;
                int v192 = *(unsigned __int8 *)(*(void *)a2 + v190);
                *((void *)a2 + 1) = v191;
                BOOL v193 = v192 != 0;
              }
              *((unsigned char *)this + 157) = v193;
              goto LABEL_377;
            case 1010:
              char v194 = v8[10];
              *((_WORD *)v8 + 4) |= 0x400u;
              v8[10] = v194;
              unint64_t v195 = *((void *)a2 + 1);
              if (v195 >= *((void *)a2 + 2))
              {
                BOOL v198 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v196 = v195 + 1;
                int v197 = *(unsigned __int8 *)(*(void *)a2 + v195);
                *((void *)a2 + 1) = v196;
                BOOL v198 = v197 != 0;
              }
              *((unsigned char *)this + 197) = v198;
              goto LABEL_377;
            case 1011:
              *(void *)v8 |= 0x40000000000uLL;
              unint64_t v199 = *((void *)a2 + 1);
              if (v199 >= *((void *)a2 + 2))
              {
                BOOL v202 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v200 = v199 + 1;
                int v201 = *(unsigned __int8 *)(*(void *)a2 + v199);
                *((void *)a2 + 1) = v200;
                BOOL v202 = v201 != 0;
              }
              *((unsigned char *)this + 165) = v202;
              goto LABEL_377;
            case 1012:
              *(void *)v8 |= 0x4000000000000uLL;
              unint64_t v203 = *((void *)a2 + 1);
              if (v203 >= *((void *)a2 + 2))
              {
                BOOL v206 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v204 = v203 + 1;
                int v205 = *(unsigned __int8 *)(*(void *)a2 + v203);
                *((void *)a2 + 1) = v204;
                BOOL v206 = v205 != 0;
              }
              *((unsigned char *)this + 173) = v206;
              goto LABEL_377;
            case 1013:
              char v207 = v8[10];
              *((_WORD *)v8 + 4) |= 8u;
              v8[10] = v207;
              unint64_t v208 = *((void *)a2 + 1);
              if (v208 >= *((void *)a2 + 2))
              {
                BOOL v211 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v209 = v208 + 1;
                int v210 = *(unsigned __int8 *)(*(void *)a2 + v208);
                *((void *)a2 + 1) = v209;
                BOOL v211 = v210 != 0;
              }
              *((unsigned char *)this + 190) = v211;
              goto LABEL_377;
            case 1014:
              *(void *)v8 |= 0x40000uLL;
              unint64_t v212 = *((void *)a2 + 1);
              if (v212 > 0xFFFFFFFFFFFFFFFBLL || v212 + 4 > *((void *)a2 + 2)) {
                goto LABEL_231;
              }
              *((_DWORD *)this + 24) = *(_DWORD *)(*(void *)a2 + v212);
              goto LABEL_376;
            case 1015:
              *(void *)v8 |= 0x400uLL;
              unint64_t v213 = *((void *)a2 + 1);
              if (v213 > 0xFFFFFFFFFFFFFFFBLL || v213 + 4 > *((void *)a2 + 2)) {
                goto LABEL_231;
              }
              *((_DWORD *)this + 16) = *(_DWORD *)(*(void *)a2 + v213);
              goto LABEL_376;
            case 1016:
              *(void *)v8 |= 0x40000000uLL;
              unint64_t v214 = *((void *)a2 + 1);
              if (v214 > 0xFFFFFFFFFFFFFFFBLL || v214 + 4 > *((void *)a2 + 2)) {
                goto LABEL_231;
              }
              *((_DWORD *)this + 36) = *(_DWORD *)(*(void *)a2 + v214);
              goto LABEL_376;
            case 1017:
              *(void *)v8 |= 0x4000000000000000uLL;
              unint64_t v215 = *((void *)a2 + 1);
              if (v215 >= *((void *)a2 + 2))
              {
                BOOL v218 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v216 = v215 + 1;
                int v217 = *(unsigned __int8 *)(*(void *)a2 + v215);
                *((void *)a2 + 1) = v216;
                BOOL v218 = v217 != 0;
              }
              *((unsigned char *)this + 185) = v218;
              goto LABEL_377;
            case 1018:
              *(void *)v8 |= 0x4000000000uLL;
              unint64_t v219 = *((void *)a2 + 1);
              if (v219 >= *((void *)a2 + 2))
              {
                BOOL v222 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v220 = v219 + 1;
                int v221 = *(unsigned __int8 *)(*(void *)a2 + v219);
                *((void *)a2 + 1) = v220;
                BOOL v222 = v221 != 0;
              }
              *((unsigned char *)this + 161) = v222;
              goto LABEL_377;
            case 1019:
              char v223 = v8[10];
              *((_WORD *)v8 + 4) |= 0x4000u;
              v8[10] = v223;
              unint64_t v224 = *((void *)a2 + 1);
              if (v224 >= *((void *)a2 + 2))
              {
                BOOL v227 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v225 = v224 + 1;
                int v226 = *(unsigned __int8 *)(*(void *)a2 + v224);
                *((void *)a2 + 1) = v225;
                BOOL v227 = v226 != 0;
              }
              *((unsigned char *)this + 201) = v227;
              goto LABEL_377;
            case 1020:
              *(void *)v8 |= 0x400000000000uLL;
              unint64_t v228 = *((void *)a2 + 1);
              if (v228 >= *((void *)a2 + 2))
              {
                BOOL v231 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v229 = v228 + 1;
                int v230 = *(unsigned __int8 *)(*(void *)a2 + v228);
                *((void *)a2 + 1) = v229;
                BOOL v231 = v230 != 0;
              }
              *((unsigned char *)this + 169) = v231;
              goto LABEL_377;
            case 1021:
              *(void *)v8 |= 0x40000000000000uLL;
              unint64_t v232 = *((void *)a2 + 1);
              if (v232 >= *((void *)a2 + 2))
              {
                BOOL v235 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v233 = v232 + 1;
                int v234 = *(unsigned __int8 *)(*(void *)a2 + v232);
                *((void *)a2 + 1) = v233;
                BOOL v235 = v234 != 0;
              }
              *((unsigned char *)this + 177) = v235;
              goto LABEL_377;
            case 1022:
              char v236 = v8[10];
              *((_WORD *)v8 + 4) |= 0x40u;
              v8[10] = v236;
              unint64_t v237 = *((void *)a2 + 1);
              if (v237 >= *((void *)a2 + 2))
              {
                BOOL v240 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v238 = v237 + 1;
                int v239 = *(unsigned __int8 *)(*(void *)a2 + v237);
                *((void *)a2 + 1) = v238;
                BOOL v240 = v239 != 0;
              }
              *((unsigned char *)this + 193) = v240;
              goto LABEL_377;
            default:
              goto LABEL_20;
          }
          break;
      }
      while (1)
      {
        if (v39 == v38)
        {
          uint64_t v43 = 0;
          *((unsigned char *)a2 + 24) = 1;
          goto LABEL_393;
        }
        unint64_t v310 = v38 + 1;
        char v311 = *(unsigned char *)(v40 + v38);
        *((void *)a2 + 1) = v310;
        v43 |= (unint64_t)(v311 & 0x7F) << v308;
        if ((v311 & 0x80) == 0) {
          break;
        }
        v308 += 7;
        unint64_t v38 = v310;
        BOOL v15 = v309++ > 8;
        if (v15) {
          goto LABEL_264;
        }
      }
      if (*((unsigned char *)a2 + 24)) {
        uint64_t v43 = 0;
      }
LABEL_393:
      *((void *)this + 2) = v43;
    }
LABEL_377:
    unint64_t v2 = *((void *)a2 + 1);
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  char v16 = 0;
  unsigned int v17 = 0;
  unint64_t v12 = 0;
  if (v2 > v3) {
    unint64_t v3 = v2;
  }
  do
  {
    if (v3 == v2)
    {
      int v4 = 1;
      *((unsigned char *)a2 + 24) = 1;
      return v4 == 0;
    }
    unint64_t v18 = v2 + 1;
    char v19 = *(unsigned char *)(v9 + v2);
    *((void *)a2 + 1) = v18;
    v12 |= (unint64_t)(v19 & 0x7F) << v16;
    if ((v19 & 0x80) == 0) {
      goto LABEL_22;
    }
    v16 += 7;
    unint64_t v2 = v18;
    BOOL v15 = v17++ > 8;
  }
  while (!v15);
LABEL_20:
  uint64_t result = PB::Reader::skip(a2);
  if (result) {
    goto LABEL_377;
  }
  return result;
}

uint64_t CMMsl::KappaRemoteAudioResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *(void *)(this + 204);
  if (v4)
  {
    this = PB::Writer::writeVarInt(a2);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v5 = *(unsigned __int16 *)(this + 212) | (*(unsigned __int8 *)(this + 214) << 16);
  if ((v4 & 0x10) != 0)
  {
LABEL_5:
    this = PB::Writer::writeVarInt(a2);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
  }
LABEL_6:
  if ((v5 & 2) != 0)
  {
    this = PB::Writer::write(a2);
    int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
    uint64_t v4 = *(void *)(v3 + 204);
    if ((v4 & 0x200000) == 0)
    {
LABEL_8:
      if ((v4 & 0x2000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_88;
    }
  }
  else if ((v4 & 0x200000) == 0)
  {
    goto LABEL_8;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 108));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_89;
  }
LABEL_88:
  this = PB::Writer::write(a2, *(float *)(v3 + 76));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_90;
  }
LABEL_89:
  this = PB::Writer::write(a2, *(float *)(v3 + 44));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_91;
  }
LABEL_90:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_92;
  }
LABEL_91:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_14;
    }
    goto LABEL_93;
  }
LABEL_92:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x200) == 0)
  {
LABEL_14:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_94;
  }
LABEL_93:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x2000000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_95;
  }
LABEL_94:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000000) == 0)
  {
LABEL_16:
    if ((v5 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_96;
  }
LABEL_95:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 4) == 0)
  {
LABEL_17:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_97;
  }
LABEL_96:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000) == 0)
  {
LABEL_18:
    if ((v4 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }
LABEL_97:
  this = PB::Writer::write(a2, *(float *)(v3 + 92));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200) == 0)
  {
LABEL_19:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_99;
  }
LABEL_98:
  this = PB::Writer::write(a2, *(float *)(v3 + 60));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_100;
  }
LABEL_99:
  this = PB::Writer::write(a2, *(float *)(v3 + 140));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_101;
  }
LABEL_100:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_22:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_102;
  }
LABEL_101:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_103;
  }
LABEL_102:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x200000000000) == 0)
  {
LABEL_24:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_104;
  }
LABEL_103:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x20000000000000) == 0)
  {
LABEL_25:
    if ((v4 & 2) == 0) {
      goto LABEL_26;
    }
    goto LABEL_105;
  }
LABEL_104:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 2) == 0)
  {
LABEL_26:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_106;
  }
LABEL_105:
  this = PB::Writer::writeVarInt(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000) == 0)
  {
LABEL_27:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_107;
  }
LABEL_106:
  this = PB::Writer::write(a2, *(float *)(v3 + 112));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000) == 0)
  {
LABEL_28:
    if ((v4 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_108;
  }
LABEL_107:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40) == 0)
  {
LABEL_29:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_109;
  }
LABEL_108:
  this = PB::Writer::write(a2, *(float *)(v3 + 48));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_110;
  }
LABEL_109:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_111;
  }
LABEL_110:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x400) == 0) {
      goto LABEL_33;
    }
    goto LABEL_112;
  }
LABEL_111:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x400) == 0)
  {
LABEL_33:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }
LABEL_112:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_34:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_114;
  }
LABEL_113:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000000) == 0)
  {
LABEL_35:
    if ((v5 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_115;
  }
LABEL_114:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 8) == 0)
  {
LABEL_36:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_116;
  }
LABEL_115:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000) == 0)
  {
LABEL_37:
    if ((v4 & 0x400) == 0) {
      goto LABEL_38;
    }
    goto LABEL_117;
  }
LABEL_116:
  this = PB::Writer::write(a2, *(float *)(v3 + 96));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400) == 0)
  {
LABEL_38:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_118;
  }
LABEL_117:
  this = PB::Writer::write(a2, *(float *)(v3 + 64));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_39:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_119;
  }
LABEL_118:
  this = PB::Writer::write(a2, *(float *)(v3 + 144));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_120;
  }
LABEL_119:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_121;
  }
LABEL_120:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x4000) == 0)
  {
LABEL_42:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_122;
  }
LABEL_121:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x400000000000) == 0)
  {
LABEL_43:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_123;
  }
LABEL_122:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x40000000000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x40) == 0) {
      goto LABEL_45;
    }
    goto LABEL_124;
  }
LABEL_123:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x40) == 0)
  {
LABEL_45:
    if ((v4 & 4) == 0) {
      goto LABEL_46;
    }
    goto LABEL_125;
  }
LABEL_124:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 4) == 0)
  {
LABEL_46:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_126;
  }
LABEL_125:
  this = PB::Writer::writeVarInt(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000) == 0)
  {
LABEL_47:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_127;
  }
LABEL_126:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000) == 0)
  {
LABEL_48:
    if ((v4 & 0x80) == 0) {
      goto LABEL_49;
    }
    goto LABEL_128;
  }
LABEL_127:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80) == 0)
  {
LABEL_49:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_129;
  }
LABEL_128:
  this = PB::Writer::write(a2, *(float *)(v3 + 52));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_50:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_130;
  }
LABEL_129:
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000000000) == 0)
  {
LABEL_51:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_131;
  }
LABEL_130:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_52:
    if ((v5 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_132;
  }
LABEL_131:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x800) == 0)
  {
LABEL_53:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_133;
  }
LABEL_132:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_54:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_134;
  }
LABEL_133:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000000) == 0)
  {
LABEL_55:
    if ((v5 & 0x10) == 0) {
      goto LABEL_56;
    }
    goto LABEL_135;
  }
LABEL_134:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x10) == 0)
  {
LABEL_56:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_136;
  }
LABEL_135:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000) == 0)
  {
LABEL_57:
    if ((v4 & 0x800) == 0) {
      goto LABEL_58;
    }
    goto LABEL_137;
  }
LABEL_136:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800) == 0)
  {
LABEL_58:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_138;
  }
LABEL_137:
  this = PB::Writer::write(a2, *(float *)(v3 + 68));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_139;
  }
LABEL_138:
  this = PB::Writer::write(a2, *(float *)(v3 + 148));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_140;
  }
LABEL_139:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_141;
  }
LABEL_140:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x8000) == 0)
  {
LABEL_62:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_142;
  }
LABEL_141:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x800000000000) == 0)
  {
LABEL_63:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_143;
  }
LABEL_142:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x80000000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x80) == 0) {
      goto LABEL_65;
    }
    goto LABEL_144;
  }
LABEL_143:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x80) == 0)
  {
LABEL_65:
    if ((v4 & 8) == 0) {
      goto LABEL_66;
    }
    goto LABEL_145;
  }
LABEL_144:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 8) == 0)
  {
LABEL_66:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_146;
  }
LABEL_145:
  this = PB::Writer::writeVarInt(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_147;
  }
LABEL_146:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000) == 0)
  {
LABEL_68:
    if ((v4 & 0x100) == 0) {
      goto LABEL_69;
    }
    goto LABEL_148;
  }
LABEL_147:
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100) == 0)
  {
LABEL_69:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_149;
  }
LABEL_148:
  this = PB::Writer::write(a2, *(float *)(v3 + 56));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_150;
  }
LABEL_149:
  this = PB::Writer::write(a2, *(float *)(v3 + 136));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_151;
  }
LABEL_150:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_152;
  }
LABEL_151:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x1000) == 0)
  {
LABEL_73:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_153;
  }
LABEL_152:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_74:
    if ((v4 & 0x10000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_154;
  }
LABEL_153:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x20) == 0) {
      goto LABEL_76;
    }
    goto LABEL_155;
  }
LABEL_154:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 0x20) == 0)
  {
LABEL_76:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_156;
  }
LABEL_155:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000) == 0)
  {
LABEL_77:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_157;
  }
LABEL_156:
  this = PB::Writer::write(a2, *(float *)(v3 + 104));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000) == 0)
  {
LABEL_78:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_158;
  }
LABEL_157:
  this = PB::Writer::write(a2, *(float *)(v3 + 72));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x100000000) == 0)
  {
LABEL_79:
    if ((v5 & 1) == 0) {
      goto LABEL_80;
    }
    goto LABEL_159;
  }
LABEL_158:
  this = PB::Writer::write(a2, *(float *)(v3 + 152));
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((*(_WORD *)(v3 + 212) & 1) == 0)
  {
LABEL_80:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_160;
  }
LABEL_159:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_81:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_161;
  }
LABEL_160:
  this = PB::Writer::write(a2);
  int v5 = *(unsigned __int16 *)(v3 + 212) | (*(unsigned __int8 *)(v3 + 214) << 16);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v5 & 0x10000) == 0)
  {
LABEL_82:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_162;
  }
LABEL_161:
  this = PB::Writer::write(a2);
  LOWORD(v5) = *(_WORD *)(v3 + 212);
  uint64_t v4 = *(void *)(v3 + 204);
  if ((v4 & 0x1000000000000) == 0)
  {
LABEL_83:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_84;
    }
LABEL_163:
    this = PB::Writer::write(a2);
    if ((*(_WORD *)(v3 + 212) & 0x100) == 0) {
      return this;
    }
    goto LABEL_164;
  }
LABEL_162:
  this = PB::Writer::write(a2);
  LOWORD(v5) = *(_WORD *)(v3 + 212);
  if ((*(void *)(v3 + 204) & 0x100000000000000) != 0) {
    goto LABEL_163;
  }
LABEL_84:
  if ((v5 & 0x100) == 0) {
    return this;
  }
LABEL_164:
  return PB::Writer::write(a2);
}

uint64_t CMMsl::KappaRemoteAudioResult::hash_value(CMMsl::KappaRemoteAudioResult *this)
{
  int v1 = *((unsigned __int16 *)this + 106) | (*((unsigned __int8 *)this + 214) << 16);
  uint64_t v2 = *(void *)((char *)this + 204);
  if (v2)
  {
    uint64_t v3 = *((void *)this + 1);
    if ((v2 & 0x10) != 0)
    {
LABEL_3:
      uint64_t v131 = *((int *)this + 10);
      if ((*((_WORD *)this + 106) & 2) != 0) {
        goto LABEL_4;
      }
      goto LABEL_150;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v131 = 0;
  if ((*((_WORD *)this + 106) & 2) != 0)
  {
LABEL_4:
    uint64_t v130 = *((unsigned __int8 *)this + 188);
    if ((v2 & 0x200000) != 0) {
      goto LABEL_5;
    }
LABEL_151:
    uint64_t v129 = 0;
    if ((*((_WORD *)this + 106) & 4) != 0) {
      goto LABEL_8;
    }
    goto LABEL_152;
  }
LABEL_150:
  uint64_t v130 = 0;
  if ((v2 & 0x200000) == 0) {
    goto LABEL_151;
  }
LABEL_5:
  float v4 = *((float *)this + 27);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  uint64_t v129 = v5;
  if ((*((_WORD *)this + 106) & 4) != 0)
  {
LABEL_8:
    uint64_t v128 = *((unsigned __int8 *)this + 189);
    if ((v2 & 2) != 0) {
      goto LABEL_9;
    }
    goto LABEL_153;
  }
LABEL_152:
  uint64_t v128 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v127 = *((void *)this + 2);
    if ((v2 & 0x400000) != 0) {
      goto LABEL_10;
    }
LABEL_154:
    uint64_t v126 = 0;
    if ((v2 & 0x4000) != 0) {
      goto LABEL_13;
    }
LABEL_155:
    uint64_t v125 = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_16;
    }
LABEL_156:
    uint64_t v124 = 0;
    if ((v2 & 0x4000000) != 0) {
      goto LABEL_19;
    }
LABEL_157:
    uint64_t v123 = 0;
    if ((v2 & 0x400000000000000) != 0) {
      goto LABEL_22;
    }
    goto LABEL_158;
  }
LABEL_153:
  uint64_t v127 = 0;
  if ((v2 & 0x400000) == 0) {
    goto LABEL_154;
  }
LABEL_10:
  float v6 = *((float *)this + 28);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  uint64_t v126 = v7;
  if ((v2 & 0x4000) == 0) {
    goto LABEL_155;
  }
LABEL_13:
  float v8 = *((float *)this + 20);
  uint64_t v9 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v9 = 0;
  }
  uint64_t v125 = v9;
  if ((v2 & 0x40) == 0) {
    goto LABEL_156;
  }
LABEL_16:
  float v10 = *((float *)this + 12);
  uint64_t v11 = LODWORD(v10);
  if (v10 == 0.0) {
    uint64_t v11 = 0;
  }
  uint64_t v124 = v11;
  if ((v2 & 0x4000000) == 0) {
    goto LABEL_157;
  }
LABEL_19:
  float v12 = *((float *)this + 32);
  uint64_t v13 = LODWORD(v12);
  if (v12 == 0.0) {
    uint64_t v13 = 0;
  }
  uint64_t v123 = v13;
  if ((v2 & 0x400000000000000) != 0)
  {
LABEL_22:
    uint64_t v122 = *((unsigned __int8 *)this + 181);
    if ((v2 & 0x400000000) != 0) {
      goto LABEL_23;
    }
    goto LABEL_159;
  }
LABEL_158:
  uint64_t v122 = 0;
  if ((v2 & 0x400000000) != 0)
  {
LABEL_23:
    uint64_t v121 = *((unsigned __int8 *)this + 157);
    if ((*((_WORD *)this + 106) & 0x400) != 0) {
      goto LABEL_24;
    }
    goto LABEL_160;
  }
LABEL_159:
  uint64_t v121 = 0;
  if ((*((_WORD *)this + 106) & 0x400) != 0)
  {
LABEL_24:
    uint64_t v120 = *((unsigned __int8 *)this + 197);
    if ((v2 & 0x40000000000) != 0) {
      goto LABEL_25;
    }
    goto LABEL_161;
  }
LABEL_160:
  uint64_t v120 = 0;
  if ((v2 & 0x40000000000) != 0)
  {
LABEL_25:
    uint64_t v119 = *((unsigned __int8 *)this + 165);
    if ((v2 & 0x4000000000000) != 0) {
      goto LABEL_26;
    }
    goto LABEL_162;
  }
LABEL_161:
  uint64_t v119 = 0;
  if ((v2 & 0x4000000000000) != 0)
  {
LABEL_26:
    uint64_t v118 = *((unsigned __int8 *)this + 173);
    if ((*((_WORD *)this + 106) & 8) != 0) {
      goto LABEL_27;
    }
    goto LABEL_163;
  }
LABEL_162:
  uint64_t v118 = 0;
  if ((*((_WORD *)this + 106) & 8) != 0)
  {
LABEL_27:
    uint64_t v117 = *((unsigned __int8 *)this + 190);
    if ((v2 & 0x40000) != 0) {
      goto LABEL_28;
    }
LABEL_164:
    uint64_t v116 = 0;
    if ((v2 & 0x400) != 0) {
      goto LABEL_31;
    }
LABEL_165:
    uint64_t v115 = 0;
    if ((v2 & 0x40000000) != 0) {
      goto LABEL_34;
    }
LABEL_166:
    uint64_t v114 = 0;
    if ((v2 & 0x4000000000000000) != 0) {
      goto LABEL_37;
    }
    goto LABEL_167;
  }
LABEL_163:
  uint64_t v117 = 0;
  if ((v2 & 0x40000) == 0) {
    goto LABEL_164;
  }
LABEL_28:
  float v14 = *((float *)this + 24);
  uint64_t v15 = LODWORD(v14);
  if (v14 == 0.0) {
    uint64_t v15 = 0;
  }
  uint64_t v116 = v15;
  if ((v2 & 0x400) == 0) {
    goto LABEL_165;
  }
LABEL_31:
  float v16 = *((float *)this + 16);
  uint64_t v17 = LODWORD(v16);
  if (v16 == 0.0) {
    uint64_t v17 = 0;
  }
  uint64_t v115 = v17;
  if ((v2 & 0x40000000) == 0) {
    goto LABEL_166;
  }
LABEL_34:
  float v18 = *((float *)this + 36);
  uint64_t v19 = LODWORD(v18);
  if (v18 == 0.0) {
    uint64_t v19 = 0;
  }
  uint64_t v114 = v19;
  if ((v2 & 0x4000000000000000) != 0)
  {
LABEL_37:
    uint64_t v113 = *((unsigned __int8 *)this + 185);
    if ((v2 & 0x4000000000) != 0) {
      goto LABEL_38;
    }
    goto LABEL_168;
  }
LABEL_167:
  uint64_t v113 = 0;
  if ((v2 & 0x4000000000) != 0)
  {
LABEL_38:
    uint64_t v112 = *((unsigned __int8 *)this + 161);
    if ((*((_WORD *)this + 106) & 0x4000) != 0) {
      goto LABEL_39;
    }
    goto LABEL_169;
  }
LABEL_168:
  uint64_t v112 = 0;
  if ((*((_WORD *)this + 106) & 0x4000) != 0)
  {
LABEL_39:
    uint64_t v111 = *((unsigned __int8 *)this + 201);
    if ((v2 & 0x400000000000) != 0) {
      goto LABEL_40;
    }
    goto LABEL_170;
  }
LABEL_169:
  uint64_t v111 = 0;
  if ((v2 & 0x400000000000) != 0)
  {
LABEL_40:
    uint64_t v110 = *((unsigned __int8 *)this + 169);
    if ((v2 & 0x40000000000000) != 0) {
      goto LABEL_41;
    }
    goto LABEL_171;
  }
LABEL_170:
  uint64_t v110 = 0;
  if ((v2 & 0x40000000000000) != 0)
  {
LABEL_41:
    uint64_t v109 = *((unsigned __int8 *)this + 177);
    if ((*((_WORD *)this + 106) & 0x40) != 0) {
      goto LABEL_42;
    }
    goto LABEL_172;
  }
LABEL_171:
  uint64_t v109 = 0;
  if ((*((_WORD *)this + 106) & 0x40) != 0)
  {
LABEL_42:
    uint64_t v108 = *((unsigned __int8 *)this + 193);
    if ((v2 & 4) != 0) {
      goto LABEL_43;
    }
    goto LABEL_173;
  }
LABEL_172:
  uint64_t v108 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_43:
    uint64_t v107 = *((void *)this + 3);
    if ((v2 & 0x800000) != 0) {
      goto LABEL_44;
    }
LABEL_174:
    uint64_t v106 = 0;
    if ((v2 & 0x8000) != 0) {
      goto LABEL_47;
    }
LABEL_175:
    uint64_t v105 = 0;
    if ((v2 & 0x80) != 0) {
      goto LABEL_50;
    }
LABEL_176:
    uint64_t v104 = 0;
    if ((v2 & 0x8000000) != 0) {
      goto LABEL_53;
    }
LABEL_177:
    uint64_t v103 = 0;
    if ((v2 & 0x800000000000000) != 0) {
      goto LABEL_56;
    }
    goto LABEL_178;
  }
LABEL_173:
  uint64_t v107 = 0;
  if ((v2 & 0x800000) == 0) {
    goto LABEL_174;
  }
LABEL_44:
  float v20 = *((float *)this + 29);
  uint64_t v21 = LODWORD(v20);
  if (v20 == 0.0) {
    uint64_t v21 = 0;
  }
  uint64_t v106 = v21;
  if ((v2 & 0x8000) == 0) {
    goto LABEL_175;
  }
LABEL_47:
  float v22 = *((float *)this + 21);
  uint64_t v23 = LODWORD(v22);
  if (v22 == 0.0) {
    uint64_t v23 = 0;
  }
  uint64_t v105 = v23;
  if ((v2 & 0x80) == 0) {
    goto LABEL_176;
  }
LABEL_50:
  float v24 = *((float *)this + 13);
  uint64_t v25 = LODWORD(v24);
  if (v24 == 0.0) {
    uint64_t v25 = 0;
  }
  uint64_t v104 = v25;
  if ((v2 & 0x8000000) == 0) {
    goto LABEL_177;
  }
LABEL_53:
  float v26 = *((float *)this + 33);
  uint64_t v27 = LODWORD(v26);
  if (v26 == 0.0) {
    uint64_t v27 = 0;
  }
  uint64_t v103 = v27;
  if ((v2 & 0x800000000000000) != 0)
  {
LABEL_56:
    uint64_t v102 = *((unsigned __int8 *)this + 182);
    if ((v2 & 0x800000000) != 0) {
      goto LABEL_57;
    }
    goto LABEL_179;
  }
LABEL_178:
  uint64_t v102 = 0;
  if ((v2 & 0x800000000) != 0)
  {
LABEL_57:
    uint64_t v101 = *((unsigned __int8 *)this + 158);
    if ((*((_WORD *)this + 106) & 0x800) != 0) {
      goto LABEL_58;
    }
    goto LABEL_180;
  }
LABEL_179:
  uint64_t v101 = 0;
  if ((*((_WORD *)this + 106) & 0x800) != 0)
  {
LABEL_58:
    uint64_t v100 = *((unsigned __int8 *)this + 198);
    if ((v2 & 0x80000000000) != 0) {
      goto LABEL_59;
    }
    goto LABEL_181;
  }
LABEL_180:
  uint64_t v100 = 0;
  if ((v2 & 0x80000000000) != 0)
  {
LABEL_59:
    uint64_t v99 = *((unsigned __int8 *)this + 166);
    if ((v2 & 0x8000000000000) != 0) {
      goto LABEL_60;
    }
    goto LABEL_182;
  }
LABEL_181:
  uint64_t v99 = 0;
  if ((v2 & 0x8000000000000) != 0)
  {
LABEL_60:
    uint64_t v98 = *((unsigned __int8 *)this + 174);
    if ((*((_WORD *)this + 106) & 0x10) != 0) {
      goto LABEL_61;
    }
    goto LABEL_183;
  }
LABEL_182:
  uint64_t v98 = 0;
  if ((*((_WORD *)this + 106) & 0x10) != 0)
  {
LABEL_61:
    uint64_t v97 = *((unsigned __int8 *)this + 191);
    if ((v2 & 0x80000) != 0) {
      goto LABEL_62;
    }
LABEL_184:
    uint64_t v96 = 0;
    if ((v2 & 0x800) != 0) {
      goto LABEL_65;
    }
LABEL_185:
    uint64_t v95 = 0;
    if ((v2 & 0x80000000) != 0) {
      goto LABEL_68;
    }
LABEL_186:
    uint64_t v94 = 0;
    if (v2 < 0) {
      goto LABEL_71;
    }
    goto LABEL_187;
  }
LABEL_183:
  uint64_t v97 = 0;
  if ((v2 & 0x80000) == 0) {
    goto LABEL_184;
  }
LABEL_62:
  float v28 = *((float *)this + 25);
  uint64_t v29 = LODWORD(v28);
  if (v28 == 0.0) {
    uint64_t v29 = 0;
  }
  uint64_t v96 = v29;
  if ((v2 & 0x800) == 0) {
    goto LABEL_185;
  }
LABEL_65:
  float v30 = *((float *)this + 17);
  uint64_t v31 = LODWORD(v30);
  if (v30 == 0.0) {
    uint64_t v31 = 0;
  }
  uint64_t v95 = v31;
  if ((v2 & 0x80000000) == 0) {
    goto LABEL_186;
  }
LABEL_68:
  float v32 = *((float *)this + 37);
  uint64_t v33 = LODWORD(v32);
  if (v32 == 0.0) {
    uint64_t v33 = 0;
  }
  uint64_t v94 = v33;
  if (v2 < 0)
  {
LABEL_71:
    uint64_t v93 = *((unsigned __int8 *)this + 186);
    if ((v2 & 0x8000000000) != 0) {
      goto LABEL_72;
    }
    goto LABEL_188;
  }
LABEL_187:
  uint64_t v93 = 0;
  if ((v2 & 0x8000000000) != 0)
  {
LABEL_72:
    uint64_t v92 = *((unsigned __int8 *)this + 162);
    if ((*((_WORD *)this + 106) & 0x8000) != 0) {
      goto LABEL_73;
    }
    goto LABEL_189;
  }
LABEL_188:
  uint64_t v92 = 0;
  if ((*((_WORD *)this + 106) & 0x8000) != 0)
  {
LABEL_73:
    uint64_t v91 = *((unsigned __int8 *)this + 202);
    if ((v2 & 0x800000000000) != 0) {
      goto LABEL_74;
    }
    goto LABEL_190;
  }
LABEL_189:
  uint64_t v91 = 0;
  if ((v2 & 0x800000000000) != 0)
  {
LABEL_74:
    uint64_t v90 = *((unsigned __int8 *)this + 170);
    if ((v2 & 0x80000000000000) != 0) {
      goto LABEL_75;
    }
    goto LABEL_191;
  }
LABEL_190:
  uint64_t v90 = 0;
  if ((v2 & 0x80000000000000) != 0)
  {
LABEL_75:
    uint64_t v89 = *((unsigned __int8 *)this + 178);
    if ((*((_WORD *)this + 106) & 0x80) != 0) {
      goto LABEL_76;
    }
    goto LABEL_192;
  }
LABEL_191:
  uint64_t v89 = 0;
  if ((*((_WORD *)this + 106) & 0x80) != 0)
  {
LABEL_76:
    uint64_t v88 = *((unsigned __int8 *)this + 194);
    if ((v2 & 8) != 0) {
      goto LABEL_77;
    }
    goto LABEL_193;
  }
LABEL_192:
  uint64_t v88 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_77:
    uint64_t v87 = *((void *)this + 4);
    if ((v2 & 0x1000000) != 0) {
      goto LABEL_78;
    }
LABEL_194:
    uint64_t v86 = 0;
    if ((v2 & 0x10000) != 0) {
      goto LABEL_81;
    }
LABEL_195:
    uint64_t v85 = 0;
    if ((v2 & 0x100) != 0) {
      goto LABEL_84;
    }
LABEL_196:
    uint64_t v84 = 0;
    if ((v2 & 0x10000000) != 0) {
      goto LABEL_87;
    }
LABEL_197:
    uint64_t v83 = 0;
    if ((v2 & 0x1000000000000000) != 0) {
      goto LABEL_90;
    }
    goto LABEL_198;
  }
LABEL_193:
  uint64_t v87 = 0;
  if ((v2 & 0x1000000) == 0) {
    goto LABEL_194;
  }
LABEL_78:
  float v34 = *((float *)this + 30);
  uint64_t v35 = LODWORD(v34);
  if (v34 == 0.0) {
    uint64_t v35 = 0;
  }
  uint64_t v86 = v35;
  if ((v2 & 0x10000) == 0) {
    goto LABEL_195;
  }
LABEL_81:
  float v36 = *((float *)this + 22);
  uint64_t v37 = LODWORD(v36);
  if (v36 == 0.0) {
    uint64_t v37 = 0;
  }
  uint64_t v85 = v37;
  if ((v2 & 0x100) == 0) {
    goto LABEL_196;
  }
LABEL_84:
  float v38 = *((float *)this + 14);
  uint64_t v39 = LODWORD(v38);
  if (v38 == 0.0) {
    uint64_t v39 = 0;
  }
  uint64_t v84 = v39;
  if ((v2 & 0x10000000) == 0) {
    goto LABEL_197;
  }
LABEL_87:
  float v40 = *((float *)this + 34);
  uint64_t v41 = LODWORD(v40);
  if (v40 == 0.0) {
    uint64_t v41 = 0;
  }
  uint64_t v83 = v41;
  if ((v2 & 0x1000000000000000) != 0)
  {
LABEL_90:
    uint64_t v82 = *((unsigned __int8 *)this + 183);
    if ((v2 & 0x1000000000) != 0) {
      goto LABEL_91;
    }
    goto LABEL_199;
  }
LABEL_198:
  uint64_t v82 = 0;
  if ((v2 & 0x1000000000) != 0)
  {
LABEL_91:
    uint64_t v81 = *((unsigned __int8 *)this + 159);
    if ((*((_WORD *)this + 106) & 0x1000) != 0) {
      goto LABEL_92;
    }
    goto LABEL_200;
  }
LABEL_199:
  uint64_t v81 = 0;
  if ((*((_WORD *)this + 106) & 0x1000) != 0)
  {
LABEL_92:
    uint64_t v80 = *((unsigned __int8 *)this + 199);
    if ((v2 & 0x100000000000) != 0) {
      goto LABEL_93;
    }
    goto LABEL_201;
  }
LABEL_200:
  uint64_t v80 = 0;
  if ((v2 & 0x100000000000) != 0)
  {
LABEL_93:
    uint64_t v79 = *((unsigned __int8 *)this + 167);
    if ((v2 & 0x10000000000000) != 0) {
      goto LABEL_94;
    }
    goto LABEL_202;
  }
LABEL_201:
  uint64_t v79 = 0;
  if ((v2 & 0x10000000000000) != 0)
  {
LABEL_94:
    uint64_t v78 = *((unsigned __int8 *)this + 175);
    if ((*((_WORD *)this + 106) & 0x20) != 0) {
      goto LABEL_95;
    }
    goto LABEL_203;
  }
LABEL_202:
  uint64_t v78 = 0;
  if ((*((_WORD *)this + 106) & 0x20) != 0)
  {
LABEL_95:
    uint64_t v42 = *((unsigned __int8 *)this + 192);
    if ((v2 & 0x100000) != 0) {
      goto LABEL_96;
    }
LABEL_204:
    uint64_t v44 = 0;
    if ((v2 & 0x1000) != 0) {
      goto LABEL_100;
    }
LABEL_205:
    uint64_t v46 = 0;
    if ((v2 & 0x100000000) != 0) {
      goto LABEL_104;
    }
LABEL_206:
    uint64_t v48 = 0;
    if (*((_WORD *)this + 106)) {
      goto LABEL_108;
    }
    goto LABEL_207;
  }
LABEL_203:
  uint64_t v42 = 0;
  if ((v2 & 0x100000) == 0) {
    goto LABEL_204;
  }
LABEL_96:
  float v43 = *((float *)this + 26);
  if (v43 == 0.0) {
    uint64_t v44 = 0;
  }
  else {
    uint64_t v44 = LODWORD(v43);
  }
  if ((v2 & 0x1000) == 0) {
    goto LABEL_205;
  }
LABEL_100:
  float v45 = *((float *)this + 18);
  if (v45 == 0.0) {
    uint64_t v46 = 0;
  }
  else {
    uint64_t v46 = LODWORD(v45);
  }
  if ((v2 & 0x100000000) == 0) {
    goto LABEL_206;
  }
LABEL_104:
  float v47 = *((float *)this + 38);
  if (v47 == 0.0) {
    uint64_t v48 = 0;
  }
  else {
    uint64_t v48 = LODWORD(v47);
  }
  if (*((_WORD *)this + 106))
  {
LABEL_108:
    uint64_t v49 = *((unsigned __int8 *)this + 187);
    if ((v2 & 0x10000000000) != 0) {
      goto LABEL_109;
    }
    goto LABEL_208;
  }
LABEL_207:
  uint64_t v49 = 0;
  if ((v2 & 0x10000000000) != 0)
  {
LABEL_109:
    uint64_t v50 = *((unsigned __int8 *)this + 163);
    if ((v1 & 0x10000) != 0) {
      goto LABEL_110;
    }
    goto LABEL_209;
  }
LABEL_208:
  uint64_t v50 = 0;
  if ((v1 & 0x10000) != 0)
  {
LABEL_110:
    uint64_t v51 = *((unsigned __int8 *)this + 203);
    if ((v2 & 0x1000000000000) != 0) {
      goto LABEL_111;
    }
    goto LABEL_210;
  }
LABEL_209:
  uint64_t v51 = 0;
  if ((v2 & 0x1000000000000) != 0)
  {
LABEL_111:
    uint64_t v52 = *((unsigned __int8 *)this + 171);
    if ((v2 & 0x100000000000000) != 0) {
      goto LABEL_112;
    }
    goto LABEL_211;
  }
LABEL_210:
  uint64_t v52 = 0;
  if ((v2 & 0x100000000000000) != 0)
  {
LABEL_112:
    uint64_t v53 = *((unsigned __int8 *)this + 179);
    if ((*((_WORD *)this + 106) & 0x100) != 0) {
      goto LABEL_113;
    }
    goto LABEL_212;
  }
LABEL_211:
  uint64_t v53 = 0;
  if ((*((_WORD *)this + 106) & 0x100) != 0)
  {
LABEL_113:
    uint64_t v54 = *((unsigned __int8 *)this + 195);
    if ((v2 & 0x2000) != 0) {
      goto LABEL_114;
    }
LABEL_213:
    uint64_t v56 = 0;
    if ((v2 & 0x20) != 0) {
      goto LABEL_118;
    }
LABEL_214:
    uint64_t v58 = 0;
    if ((v2 & 0x2000000) != 0) {
      goto LABEL_122;
    }
LABEL_215:
    uint64_t v60 = 0;
    if ((v2 & 0x200000000000000) != 0) {
      goto LABEL_126;
    }
    goto LABEL_216;
  }
LABEL_212:
  uint64_t v54 = 0;
  if ((v2 & 0x2000) == 0) {
    goto LABEL_213;
  }
LABEL_114:
  float v55 = *((float *)this + 19);
  if (v55 == 0.0) {
    uint64_t v56 = 0;
  }
  else {
    uint64_t v56 = LODWORD(v55);
  }
  if ((v2 & 0x20) == 0) {
    goto LABEL_214;
  }
LABEL_118:
  float v57 = *((float *)this + 11);
  if (v57 == 0.0) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = LODWORD(v57);
  }
  if ((v2 & 0x2000000) == 0) {
    goto LABEL_215;
  }
LABEL_122:
  float v59 = *((float *)this + 31);
  if (v59 == 0.0) {
    uint64_t v60 = 0;
  }
  else {
    uint64_t v60 = LODWORD(v59);
  }
  if ((v2 & 0x200000000000000) != 0)
  {
LABEL_126:
    uint64_t v61 = *((unsigned __int8 *)this + 180);
    if ((v2 & 0x200000000) != 0) {
      goto LABEL_127;
    }
    goto LABEL_217;
  }
LABEL_216:
  uint64_t v61 = 0;
  if ((v2 & 0x200000000) != 0)
  {
LABEL_127:
    uint64_t v62 = *((unsigned __int8 *)this + 156);
    if ((*((_WORD *)this + 106) & 0x200) != 0) {
      goto LABEL_128;
    }
    goto LABEL_218;
  }
LABEL_217:
  uint64_t v62 = 0;
  if ((*((_WORD *)this + 106) & 0x200) != 0)
  {
LABEL_128:
    uint64_t v63 = *((unsigned __int8 *)this + 196);
    if ((v2 & 0x20000000000) != 0) {
      goto LABEL_129;
    }
    goto LABEL_219;
  }
LABEL_218:
  uint64_t v63 = 0;
  if ((v2 & 0x20000000000) != 0)
  {
LABEL_129:
    uint64_t v64 = *((unsigned __int8 *)this + 164);
    if ((v2 & 0x2000000000000) != 0) {
      goto LABEL_130;
    }
    goto LABEL_220;
  }
LABEL_219:
  uint64_t v64 = 0;
  if ((v2 & 0x2000000000000) != 0)
  {
LABEL_130:
    uint64_t v65 = *((unsigned __int8 *)this + 172);
    if ((v2 & 0x20000) != 0) {
      goto LABEL_131;
    }
LABEL_221:
    uint64_t v67 = 0;
    if ((v2 & 0x200) != 0) {
      goto LABEL_135;
    }
LABEL_222:
    uint64_t v69 = 0;
    if ((v2 & 0x20000000) != 0) {
      goto LABEL_139;
    }
LABEL_223:
    uint64_t v71 = 0;
    if ((v2 & 0x2000000000000000) != 0) {
      goto LABEL_143;
    }
    goto LABEL_224;
  }
LABEL_220:
  uint64_t v65 = 0;
  if ((v2 & 0x20000) == 0) {
    goto LABEL_221;
  }
LABEL_131:
  float v66 = *((float *)this + 23);
  if (v66 == 0.0) {
    uint64_t v67 = 0;
  }
  else {
    uint64_t v67 = LODWORD(v66);
  }
  if ((v2 & 0x200) == 0) {
    goto LABEL_222;
  }
LABEL_135:
  float v68 = *((float *)this + 15);
  if (v68 == 0.0) {
    uint64_t v69 = 0;
  }
  else {
    uint64_t v69 = LODWORD(v68);
  }
  if ((v2 & 0x20000000) == 0) {
    goto LABEL_223;
  }
LABEL_139:
  float v70 = *((float *)this + 35);
  if (v70 == 0.0) {
    uint64_t v71 = 0;
  }
  else {
    uint64_t v71 = LODWORD(v70);
  }
  if ((v2 & 0x2000000000000000) != 0)
  {
LABEL_143:
    uint64_t v72 = *((unsigned __int8 *)this + 184);
    if ((v2 & 0x2000000000) != 0) {
      goto LABEL_144;
    }
    goto LABEL_225;
  }
LABEL_224:
  uint64_t v72 = 0;
  if ((v2 & 0x2000000000) != 0)
  {
LABEL_144:
    uint64_t v73 = *((unsigned __int8 *)this + 160);
    if ((*((_WORD *)this + 106) & 0x2000) != 0) {
      goto LABEL_145;
    }
    goto LABEL_226;
  }
LABEL_225:
  uint64_t v73 = 0;
  if ((*((_WORD *)this + 106) & 0x2000) != 0)
  {
LABEL_145:
    uint64_t v74 = *((unsigned __int8 *)this + 200);
    if ((v2 & 0x200000000000) != 0) {
      goto LABEL_146;
    }
LABEL_227:
    uint64_t v75 = 0;
    if ((v2 & 0x20000000000000) != 0) {
      goto LABEL_147;
    }
LABEL_228:
    uint64_t v76 = 0;
    return v131 ^ v3 ^ v130 ^ v129 ^ v128 ^ v127 ^ v126 ^ v125 ^ v124 ^ v123 ^ v122 ^ v121 ^ v120 ^ v119 ^ v118 ^ v117 ^ v116 ^ v115 ^ v114 ^ v113 ^ v112 ^ v111 ^ v110 ^ v109 ^ v108 ^ v107 ^ v106 ^ v105 ^ v104 ^ v103 ^ v102 ^ v101 ^ v100 ^ v99 ^ v98 ^ v97 ^ v96 ^ v95 ^ v94 ^ v93 ^ v92 ^ v91 ^ v90 ^ v89 ^ v88 ^ v87 ^ v86 ^ v85 ^ v84 ^ v83 ^ v82 ^ v81 ^ v80 ^ v79 ^ v78 ^ v42 ^ v44 ^ v46 ^ v48 ^ v49 ^ v50 ^ v51 ^ v52 ^ v53 ^ v54 ^ v56 ^ v58 ^ v60 ^ v61 ^ v62 ^ v63 ^ v64 ^ v65 ^ v67 ^ v69 ^ v71 ^ v72 ^ v73 ^ v74 ^ v75 ^ v76;
  }
LABEL_226:
  uint64_t v74 = 0;
  if ((v2 & 0x200000000000) == 0) {
    goto LABEL_227;
  }
LABEL_146:
  uint64_t v75 = *((unsigned __int8 *)this + 168);
  if ((v2 & 0x20000000000000) == 0) {
    goto LABEL_228;
  }
LABEL_147:
  uint64_t v76 = *((unsigned __int8 *)this + 176);
  return v131 ^ v3 ^ v130 ^ v129 ^ v128 ^ v127 ^ v126 ^ v125 ^ v124 ^ v123 ^ v122 ^ v121 ^ v120 ^ v119 ^ v118 ^ v117 ^ v116 ^ v115 ^ v114 ^ v113 ^ v112 ^ v111 ^ v110 ^ v109 ^ v108 ^ v107 ^ v106 ^ v105 ^ v104 ^ v103 ^ v102 ^ v101 ^ v100 ^ v99 ^ v98 ^ v97 ^ v96 ^ v95 ^ v94 ^ v93 ^ v92 ^ v91 ^ v90 ^ v89 ^ v88 ^ v87 ^ v86 ^ v85 ^ v84 ^ v83 ^ v82 ^ v81 ^ v80 ^ v79 ^ v78 ^ v42 ^ v44 ^ v46 ^ v48 ^ v49 ^ v50 ^ v51 ^ v52 ^ v53 ^ v54 ^ v56 ^ v58 ^ v60 ^ v61 ^ v62 ^ v63 ^ v64 ^ v65 ^ v67 ^ v69 ^ v71 ^ v72 ^ v73 ^ v74 ^ v75 ^ v76;
}

void CMMsl::KappaRoads::~KappaRoads(CMMsl::KappaRoads *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaRoads::KappaRoads(uint64_t this, const CMMsl::KappaRoads *a2)
{
  *(void *)this = &unk_270642BB0;
  *(_DWORD *)(this + 32) = 0;
  char v2 = *((unsigned char *)a2 + 32);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *((void *)a2 + 2);
    char v3 = 2;
    *(unsigned char *)(this + 32) = 2;
    *(void *)(this + 16) = v4;
    char v2 = *((unsigned char *)a2 + 32);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if (*((unsigned char *)a2 + 32))
  {
LABEL_5:
    uint64_t v5 = *((void *)a2 + 1);
    v3 |= 1u;
    *(unsigned char *)(this + 32) = v3;
    *(void *)(this + 8) = v5;
    char v2 = *((unsigned char *)a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      return this;
    }
LABEL_10:
    int v7 = *((_DWORD *)a2 + 7);
    *(unsigned char *)(this + 32) = v3 | 8;
    *(_DWORD *)(this + 28) = v7;
    return this;
  }
  int v6 = *((_DWORD *)a2 + 6);
  v3 |= 4u;
  *(unsigned char *)(this + 32) = v3;
  *(_DWORD *)(this + 24) = v6;
  if ((*((unsigned char *)a2 + 32) & 8) != 0) {
    goto LABEL_10;
  }
  return this;
}

uint64_t CMMsl::KappaRoads::operator=(uint64_t a1, const CMMsl::KappaRoads *a2)
{
  if ((const CMMsl::KappaRoads *)a1 != a2)
  {
    CMMsl::KappaRoads::KappaRoads((uint64_t)v6, a2);
    long long v3 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v7;
    long long v7 = v3;
    int v4 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 24) = v8;
    int v8 = v4;
    *(void *)&long long v3 = *(void *)(a1 + 28);
    *(void *)(a1 + 28) = v9;
    uint64_t v9 = v3;
    PB::Base::~Base((PB::Base *)v6);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaRoads *a2, CMMsl::KappaRoads *a3)
{
  int v3 = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v3;
  uint64_t v4 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v4;
  uint64_t v5 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v5;
  float result = *((float *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((float *)a2 + 6) = result;
  LODWORD(v5) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v5;
  return result;
}

float CMMsl::KappaRoads::KappaRoads(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642BB0;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a2 + 32) = 0;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  float result = *(float *)(a2 + 24);
  *(float *)(a1 + 24) = result;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642BB0;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a2 + 32) = 0;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  float result = *(float *)(a2 + 24);
  *(float *)(a1 + 24) = result;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  return result;
}

uint64_t CMMsl::KappaRoads::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    int v8 = &unk_270642BB0;
    int v3 = *(_DWORD *)(a2 + 24);
    uint64_t v4 = *(void *)(a2 + 28);
    *(_DWORD *)(a2 + 32) = 0;
    long long v5 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    long long v9 = v5;
    LODWORD(v5) = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 24) = v3;
    int v10 = v5;
    uint64_t v6 = *(void *)(a1 + 28);
    *(void *)(a1 + 28) = v4;
    uint64_t v11 = v6;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

uint64_t CMMsl::KappaRoads::formatText(CMMsl::KappaRoads *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(a2, "distanceToNearestRoad", *((float *)this + 6));
    char v5 = *((unsigned char *)this + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*((unsigned char *)this + 32) & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "roadClass");
  char v5 = *((unsigned char *)this + 32);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(a2, "searchTimestamp");
  if ((*((unsigned char *)this + 32) & 2) != 0) {
LABEL_5:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_6:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaRoads::readFrom(CMMsl::KappaRoads *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_26;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_21;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_26:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 32) |= 2u;
        unint64_t v21 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v22 = *(void *)a2;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v39 = 0;
          unsigned int v40 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_78;
            }
            unint64_t v41 = v21++;
            char v42 = *(unsigned char *)(v22 + v41);
            *((void *)a2 + 1) = v21;
            v25 |= (unint64_t)(v42 & 0x7F) << v39;
            if ((v42 & 0x80) == 0) {
              break;
            }
            v39 += 7;
            BOOL v14 = v40++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
LABEL_77:
              unint64_t v2 = v41 + 1;
              goto LABEL_78;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v25 = 0;
          }
          goto LABEL_77;
        }
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        do
        {
          unint64_t v2 = v21 + 1;
          *((void *)a2 + 1) = v21 + 1;
          char v26 = *(unsigned char *)(v22 + v21);
          v25 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            goto LABEL_78;
          }
          v23 += 7;
          unint64_t v21 = v2;
          BOOL v14 = v24++ > 8;
        }
        while (!v14);
        uint64_t v25 = 0;
LABEL_78:
        *((void *)this + 2) = v25;
        break;
      case 2u:
        *((unsigned char *)this + 32) |= 1u;
        unint64_t v27 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v28 = *(void *)a2;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v43 = 0;
          unsigned int v44 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              uint64_t v31 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_83;
            }
            unint64_t v45 = v27++;
            char v46 = *(unsigned char *)(v28 + v45);
            *((void *)a2 + 1) = v27;
            v31 |= (unint64_t)(v46 & 0x7F) << v43;
            if ((v46 & 0x80) == 0) {
              break;
            }
            v43 += 7;
            BOOL v14 = v44++ > 8;
            if (v14)
            {
              uint64_t v31 = 0;
LABEL_82:
              unint64_t v2 = v45 + 1;
              goto LABEL_83;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v31 = 0;
          }
          goto LABEL_82;
        }
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        do
        {
          unint64_t v2 = v27 + 1;
          *((void *)a2 + 1) = v27 + 1;
          char v32 = *(unsigned char *)(v28 + v27);
          v31 |= (unint64_t)(v32 & 0x7F) << v29;
          if ((v32 & 0x80) == 0) {
            goto LABEL_83;
          }
          v29 += 7;
          unint64_t v27 = v2;
          BOOL v14 = v30++ > 8;
        }
        while (!v14);
        uint64_t v31 = 0;
LABEL_83:
        *((void *)this + 1) = v31;
        break;
      case 3u:
        *((unsigned char *)this + 32) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 6) = *(_DWORD *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 4u:
        *((unsigned char *)this + 32) |= 8u;
        unint64_t v33 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v34 = *(void *)a2;
        if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
        {
          char v47 = 0;
          unsigned int v48 = 0;
          uint64_t v37 = 0;
          if (v2 <= v33) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v33)
            {
              LODWORD(v37) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_88;
            }
            unint64_t v49 = v33++;
            char v50 = *(unsigned char *)(v34 + v49);
            *((void *)a2 + 1) = v33;
            v37 |= (unint64_t)(v50 & 0x7F) << v47;
            if ((v50 & 0x80) == 0) {
              break;
            }
            v47 += 7;
            BOOL v14 = v48++ > 8;
            if (v14)
            {
              LODWORD(v37) = 0;
LABEL_87:
              unint64_t v2 = v49 + 1;
              goto LABEL_88;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v37) = 0;
          }
          goto LABEL_87;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        do
        {
          unint64_t v2 = v33 + 1;
          *((void *)a2 + 1) = v33 + 1;
          char v38 = *(unsigned char *)(v34 + v33);
          v37 |= (unint64_t)(v38 & 0x7F) << v35;
          if ((v38 & 0x80) == 0) {
            goto LABEL_88;
          }
          v35 += 7;
          unint64_t v33 = v2;
          BOOL v14 = v36++ > 8;
        }
        while (!v14);
        LODWORD(v37) = 0;
LABEL_88:
        *((_DWORD *)this + 7) = v37;
        break;
      default:
        goto LABEL_19;
    }
LABEL_21:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaRoads::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 32);
  if ((v4 & 2) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = PB::Writer::write(a2, *(float *)(v3 + 24));
      if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 32) & 1) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return this;
  }
LABEL_9:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaRoads::hash_value(CMMsl::KappaRoads *this)
{
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
    uint64_t v1 = *((void *)this + 2);
    if (*((unsigned char *)this + 32))
    {
LABEL_3:
      uint64_t v2 = *((void *)this + 1);
      if ((*((unsigned char *)this + 32) & 4) != 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v1 = 0;
    if (*((unsigned char *)this + 32)) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  if ((*((unsigned char *)this + 32) & 4) != 0)
  {
LABEL_4:
    float v3 = *((float *)this + 6);
    uint64_t v4 = LODWORD(v3);
    if (v3 == 0.0) {
      uint64_t v4 = 0;
    }
    if ((*((unsigned char *)this + 32) & 8) != 0) {
      goto LABEL_7;
    }
LABEL_11:
    uint64_t v5 = 0;
    return v2 ^ v1 ^ v4 ^ v5;
  }
LABEL_10:
  uint64_t v4 = 0;
  if ((*((unsigned char *)this + 32) & 8) == 0) {
    goto LABEL_11;
  }
LABEL_7:
  uint64_t v5 = *((unsigned int *)this + 7);
  return v2 ^ v1 ^ v4 ^ v5;
}

void CMMsl::KappaRoadsResult::~KappaRoadsResult(CMMsl::KappaRoadsResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaRoadsResult::KappaRoadsResult(uint64_t this, const CMMsl::KappaRoadsResult *a2)
{
  *(void *)this = &unk_270642BE8;
  *(_DWORD *)(this + 40) = 0;
  char v2 = *((unsigned char *)a2 + 40);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *((void *)a2 + 3);
    char v3 = 4;
    *(unsigned char *)(this + 40) = 4;
    *(void *)(this + 24) = v4;
    char v2 = *((unsigned char *)a2 + 40);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 40) & 8) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 8);
    v3 |= 8u;
    *(unsigned char *)(this + 40) = v3;
    *(_DWORD *)(this + 32) = v5;
    char v2 = *((unsigned char *)a2 + 40);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *((_DWORD *)a2 + 9);
    v3 |= 0x10u;
    *(unsigned char *)(this + 40) = v3;
    *(_DWORD *)(this + 36) = v6;
    char v2 = *((unsigned char *)a2 + 40);
    if ((v2 & 1) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return this;
      }
LABEL_12:
      uint64_t v8 = *((void *)a2 + 2);
      *(unsigned char *)(this + 40) = v3 | 2;
      *(void *)(this + 16) = v8;
      return this;
    }
  }
  else if ((v2 & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *((void *)a2 + 1);
  v3 |= 1u;
  *(unsigned char *)(this + 40) = v3;
  *(void *)(this + 8) = v7;
  if ((*((unsigned char *)a2 + 40) & 2) != 0) {
    goto LABEL_12;
  }
  return this;
}

uint64_t CMMsl::KappaRoadsResult::operator=(uint64_t a1, const CMMsl::KappaRoadsResult *a2)
{
  if ((const CMMsl::KappaRoadsResult *)a1 != a2)
  {
    CMMsl::KappaRoadsResult::KappaRoadsResult((uint64_t)&v8, a2);
    uint64_t v3 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v10;
    uint64_t v10 = v3;
    int v4 = *(_DWORD *)(a1 + 32);
    *(_DWORD *)(a1 + 32) = v11;
    int v11 = v4;
    uint64_t v5 = *(void *)(a1 + 36);
    *(void *)(a1 + 36) = v12;
    uint64_t v12 = v5;
    long long v6 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v9;
    long long v9 = v6;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaRoadsResult *a2, CMMsl::KappaRoadsResult *a3)
{
  int v3 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v3;
  uint64_t v4 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v4;
  float result = *((float *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((float *)a2 + 8) = result;
  LODWORD(v4) = *((_DWORD *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((_DWORD *)a2 + 9) = v4;
  uint64_t v6 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v6;
  uint64_t v7 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v7;
  return result;
}

float CMMsl::KappaRoadsResult::KappaRoadsResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642BE8;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = 0;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  float result = *(float *)(a2 + 32);
  *(float *)(a1 + 32) = result;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642BE8;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = 0;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  float result = *(float *)(a2 + 32);
  *(float *)(a1 + 32) = result;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KappaRoadsResult::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v10 = &unk_270642BE8;
    uint64_t v3 = *(void *)(a2 + 24);
    int v4 = *(_DWORD *)(a2 + 32);
    uint64_t v5 = *(void *)(a2 + 36);
    *(_DWORD *)(a2 + 40) = 0;
    uint64_t v12 = *(void *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 32);
    *(_DWORD *)(a1 + 32) = v4;
    int v13 = v6;
    uint64_t v14 = *(void *)(a1 + 36);
    long long v7 = *(_OWORD *)(a1 + 8);
    long long v8 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 36) = v5;
    *(_OWORD *)(a1 + 8) = v8;
    long long v11 = v7;
    PB::Base::~Base((PB::Base *)&v10);
  }
  return a1;
}

uint64_t CMMsl::KappaRoadsResult::formatText(CMMsl::KappaRoadsResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(a2, "distanceToNearestRoad", *((float *)this + 8));
    char v5 = *((unsigned char *)this + 40);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "epochFirstTimestamp");
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "roadClass");
  if ((*((unsigned char *)this + 40) & 4) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_7:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaRoadsResult::readFrom(CMMsl::KappaRoadsResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  for (int i = *((unsigned __int8 *)a2 + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)a2 + 24))
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_26;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
      int i = 1;
      *((unsigned char *)a2 + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_26:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v21 = v11 >> 3;
    if ((int)(v11 >> 3) <= 103)
    {
      if (v21 == 101)
      {
        *((unsigned char *)this + 40) |= 4u;
        unint64_t v40 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v41 = *(void *)a2;
        if (v40 > 0xFFFFFFFFFFFFFFF5 || v40 + 10 > v2)
        {
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v44 = 0;
          if (v2 <= v40) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v40)
            {
              uint64_t v44 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_112;
            }
            unint64_t v60 = v40++;
            char v61 = *(unsigned char *)(v41 + v60);
            *((void *)a2 + 1) = v40;
            v44 |= (unint64_t)(v61 & 0x7F) << v58;
            if ((v61 & 0x80) == 0) {
              break;
            }
            v58 += 7;
            BOOL v14 = v59++ > 8;
            if (v14)
            {
              uint64_t v44 = 0;
              goto LABEL_111;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v44 = 0;
          }
LABEL_111:
          unint64_t v2 = v60 + 1;
        }
        else
        {
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v44 = 0;
          while (1)
          {
            unint64_t v2 = v40 + 1;
            *((void *)a2 + 1) = v40 + 1;
            char v45 = *(unsigned char *)(v41 + v40);
            v44 |= (unint64_t)(v45 & 0x7F) << v42;
            if ((v45 & 0x80) == 0) {
              break;
            }
            v42 += 7;
            unint64_t v40 = v2;
            BOOL v14 = v43++ > 8;
            if (v14)
            {
              uint64_t v44 = 0;
              break;
            }
          }
        }
LABEL_112:
        *((void *)this + 3) = v44;
      }
      else
      {
        if (v21 != 103)
        {
LABEL_19:
          uint64_t result = PB::Reader::skip(a2);
          if (!result) {
            return result;
          }
          unint64_t v2 = *((void *)a2 + 1);
          goto LABEL_21;
        }
        *((unsigned char *)this + 40) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 8) = *(_DWORD *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
      }
    }
    else
    {
      switch(v21)
      {
        case 0x68:
          *((unsigned char *)this + 40) |= 0x10u;
          unint64_t v28 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v29 = *(void *)a2;
          if (v28 > 0xFFFFFFFFFFFFFFF5 || v28 + 10 > v2)
          {
            char v50 = 0;
            unsigned int v51 = 0;
            uint64_t v32 = 0;
            if (v2 <= v28) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v28)
              {
                LODWORD(v32) = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_102;
              }
              unint64_t v52 = v28++;
              char v53 = *(unsigned char *)(v29 + v52);
              *((void *)a2 + 1) = v28;
              v32 |= (unint64_t)(v53 & 0x7F) << v50;
              if ((v53 & 0x80) == 0) {
                break;
              }
              v50 += 7;
              BOOL v14 = v51++ > 8;
              if (v14)
              {
                LODWORD(v32) = 0;
                goto LABEL_101;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v32) = 0;
            }
LABEL_101:
            unint64_t v2 = v52 + 1;
          }
          else
          {
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            while (1)
            {
              unint64_t v2 = v28 + 1;
              *((void *)a2 + 1) = v28 + 1;
              char v33 = *(unsigned char *)(v29 + v28);
              v32 |= (unint64_t)(v33 & 0x7F) << v30;
              if ((v33 & 0x80) == 0) {
                break;
              }
              v30 += 7;
              unint64_t v28 = v2;
              BOOL v14 = v31++ > 8;
              if (v14)
              {
                LODWORD(v32) = 0;
                break;
              }
            }
          }
LABEL_102:
          *((_DWORD *)this + 9) = v32;
          break;
        case 0xC9:
          *((unsigned char *)this + 40) |= 1u;
          unint64_t v34 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v35 = *(void *)a2;
          if (v34 > 0xFFFFFFFFFFFFFFF5 || v34 + 10 > v2)
          {
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v38 = 0;
            if (v2 <= v34) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v34)
              {
                uint64_t v38 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_107;
              }
              unint64_t v56 = v34++;
              char v57 = *(unsigned char *)(v35 + v56);
              *((void *)a2 + 1) = v34;
              v38 |= (unint64_t)(v57 & 0x7F) << v54;
              if ((v57 & 0x80) == 0) {
                break;
              }
              v54 += 7;
              BOOL v14 = v55++ > 8;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_106;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v38 = 0;
            }
LABEL_106:
            unint64_t v2 = v56 + 1;
          }
          else
          {
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            while (1)
            {
              unint64_t v2 = v34 + 1;
              *((void *)a2 + 1) = v34 + 1;
              char v39 = *(unsigned char *)(v35 + v34);
              v38 |= (unint64_t)(v39 & 0x7F) << v36;
              if ((v39 & 0x80) == 0) {
                break;
              }
              v36 += 7;
              unint64_t v34 = v2;
              BOOL v14 = v37++ > 8;
              if (v14)
              {
                uint64_t v38 = 0;
                break;
              }
            }
          }
LABEL_107:
          *((void *)this + 1) = v38;
          break;
        case 0xCA:
          *((unsigned char *)this + 40) |= 2u;
          unint64_t v22 = *((void *)a2 + 1);
          unint64_t v2 = *((void *)a2 + 2);
          uint64_t v23 = *(void *)a2;
          if (v22 > 0xFFFFFFFFFFFFFFF5 || v22 + 10 > v2)
          {
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v26 = 0;
            if (v2 <= v22) {
              unint64_t v2 = *((void *)a2 + 1);
            }
            while (1)
            {
              if (v2 == v22)
              {
                uint64_t v26 = 0;
                *((unsigned char *)a2 + 24) = 1;
                goto LABEL_97;
              }
              unint64_t v48 = v22++;
              char v49 = *(unsigned char *)(v23 + v48);
              *((void *)a2 + 1) = v22;
              v26 |= (unint64_t)(v49 & 0x7F) << v46;
              if ((v49 & 0x80) == 0) {
                break;
              }
              v46 += 7;
              BOOL v14 = v47++ > 8;
              if (v14)
              {
                uint64_t v26 = 0;
                goto LABEL_96;
              }
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v26 = 0;
            }
LABEL_96:
            unint64_t v2 = v48 + 1;
          }
          else
          {
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            while (1)
            {
              unint64_t v2 = v22 + 1;
              *((void *)a2 + 1) = v22 + 1;
              char v27 = *(unsigned char *)(v23 + v22);
              v26 |= (unint64_t)(v27 & 0x7F) << v24;
              if ((v27 & 0x80) == 0) {
                break;
              }
              v24 += 7;
              unint64_t v22 = v2;
              BOOL v14 = v25++ > 8;
              if (v14)
              {
                uint64_t v26 = 0;
                break;
              }
            }
          }
LABEL_97:
          *((void *)this + 2) = v26;
          break;
        default:
          goto LABEL_19;
      }
    }
LABEL_21:
    unint64_t v3 = *((void *)a2 + 2);
  }
  return i == 0;
}

uint64_t CMMsl::KappaRoadsResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 40);
  if ((v4 & 4) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = PB::Writer::writeVarInt(a2);
    if ((*(unsigned char *)(v3 + 40) & 2) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 40);
  if (v4) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return this;
  }
LABEL_11:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaRoadsResult::hash_value(CMMsl::KappaRoadsResult *this)
{
  if ((*((unsigned char *)this + 40) & 4) == 0)
  {
    uint64_t v1 = 0;
    if ((*((unsigned char *)this + 40) & 8) != 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 0x10) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  uint64_t v1 = *((void *)this + 3);
  if ((*((unsigned char *)this + 40) & 8) == 0) {
    goto LABEL_10;
  }
LABEL_3:
  float v2 = *((float *)this + 8);
  uint64_t v3 = LODWORD(v2);
  if (v2 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((unsigned char *)this + 40) & 0x10) != 0)
  {
LABEL_6:
    uint64_t v4 = *((unsigned int *)this + 9);
    if (*((unsigned char *)this + 40)) {
      goto LABEL_7;
    }
LABEL_12:
    uint64_t v5 = 0;
    if ((*((unsigned char *)this + 40) & 2) != 0) {
      goto LABEL_8;
    }
LABEL_13:
    uint64_t v6 = 0;
    return v3 ^ v1 ^ v4 ^ v5 ^ v6;
  }
LABEL_11:
  uint64_t v4 = 0;
  if ((*((unsigned char *)this + 40) & 1) == 0) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v5 = *((void *)this + 1);
  if ((*((unsigned char *)this + 40) & 2) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v6 = *((void *)this + 2);
  return v3 ^ v1 ^ v4 ^ v5 ^ v6;
}

void CMMsl::KappaRolloverCrashResult::~KappaRolloverCrashResult(CMMsl::KappaRolloverCrashResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::KappaRolloverCrashResult::KappaRolloverCrashResult(CMMsl::KappaRolloverCrashResult *this, const CMMsl::KappaRolloverCrashResult *a2)
{
  *(void *)this = &unk_270642C20;
  float v2 = (uint64_t *)((char *)this + 316);
  *((_DWORD *)this + 81) = 0;
  *(void *)((char *)this + 316) = 0;
  uint64_t v3 = (uint64_t *)((char *)a2 + 316);
  uint64_t v4 = *(void *)((char *)a2 + 316);
  if (v4)
  {
    unint64_t v6 = 0;
    unint64_t v8 = *((void *)a2 + 1);
    *((unsigned char *)this + 326) = 0;
    *((_WORD *)this + 162) = 0;
    uint64_t v5 = 1;
    *float v2 = 1;
    *((void *)this + 1) = v8;
    LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
    uint64_t v4 = *v3;
    if ((*((_WORD *)a2 + 162) & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  int v7 = *((unsigned __int16 *)a2 + 162);
  LODWORD(v8) = v7 | (*((unsigned __int8 *)a2 + 326) << 16);
  if ((v7 & 0x8000) != 0)
  {
LABEL_5:
    char v9 = *((unsigned char *)a2 + 310);
    unint64_t v6 = 0x8000;
    *float v2 = v5;
    *((unsigned char *)this + 326) = 0;
    *((_WORD *)this + 162) = 0x8000;
    *((unsigned char *)this + 310) = v9;
    LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
    uint64_t v4 = *v3;
  }
LABEL_6:
  if ((v8 & 0x10000) != 0)
  {
    char v10 = *((unsigned char *)a2 + 311);
    *((_WORD *)this + 162) = v6;
    v6 |= 0x10000uLL;
    *float v2 = v5;
    *((unsigned char *)this + 326) = BYTE2(v6);
    *((unsigned char *)this + 311) = v10;
    LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
    uint64_t v4 = *v3;
    if ((*v3 & 0x40000000000) == 0)
    {
LABEL_8:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_90;
    }
  }
  else if ((v4 & 0x40000000000) == 0)
  {
    goto LABEL_8;
  }
  float result = *((float *)a2 + 45);
  v5 |= 0x40000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 45) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000) == 0)
  {
LABEL_9:
    if ((v8 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_91;
  }
LABEL_90:
  float result = *((float *)a2 + 21);
  v5 |= 0x40000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 21) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*((_WORD *)a2 + 162) & 8) == 0)
  {
LABEL_10:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_92;
  }
LABEL_91:
  float result = *((float *)a2 + 70);
  unint64_t v8 = v6 >> 16;
  v6 |= 8uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v8;
  *((_WORD *)this + 162) = v6;
  *((float *)this + 70) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*((_WORD *)a2 + 162) & 0x2000) == 0)
  {
LABEL_11:
    if ((v8 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_93;
  }
LABEL_92:
  char v12 = *((unsigned char *)a2 + 308);
  unint64_t v13 = v6 >> 16;
  v6 |= 0x2000uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v13;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 308) = v12;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*((_WORD *)a2 + 162) & 0x400) == 0)
  {
LABEL_12:
    if ((v8 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_94;
  }
LABEL_93:
  char v14 = *((unsigned char *)a2 + 305);
  unint64_t v15 = v6 >> 16;
  v6 |= 0x400uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v15;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 305) = v14;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*((_WORD *)a2 + 162) & 0x200) == 0)
  {
LABEL_13:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_95;
  }
LABEL_94:
  char v16 = *((unsigned char *)a2 + 304);
  unint64_t v17 = v6 >> 16;
  v6 |= 0x200uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v17;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 304) = v16;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_14:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_96;
  }
LABEL_95:
  int v18 = *((_DWORD *)a2 + 28);
  v5 |= 0x2000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((_DWORD *)this + 28) = v18;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*((_WORD *)a2 + 162) & 0x1000) == 0)
  {
LABEL_15:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_97;
  }
LABEL_96:
  char v19 = *((unsigned char *)a2 + 307);
  unint64_t v20 = v6 >> 16;
  v6 |= 0x1000uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v20;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 307) = v19;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x2000000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_98;
  }
LABEL_97:
  float result = *((float *)a2 + 27);
  v5 |= 0x1000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 27) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_99;
  }
LABEL_98:
  float result = *((float *)a2 + 52);
  v5 |= 0x2000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 52) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_100;
  }
LABEL_99:
  float result = *((float *)a2 + 51);
  v5 |= 0x1000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 51) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_101;
  }
LABEL_100:
  float result = *((float *)a2 + 53);
  v5 |= 0x4000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 53) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40) == 0)
  {
LABEL_20:
    if ((v4 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_102;
  }
LABEL_101:
  float result = *((float *)a2 + 9);
  v5 |= 0x40uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 9) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 2) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_103;
  }
LABEL_102:
  float result = *((float *)a2 + 4);
  v5 |= 2uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 4) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000) == 0)
  {
LABEL_22:
    if ((v8 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_104;
  }
LABEL_103:
  float result = *((float *)a2 + 18);
  v5 |= 0x8000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 18) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((v8 & 0x40000) == 0)
  {
LABEL_23:
    if ((v8 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_105;
  }
LABEL_104:
  char v21 = *((unsigned char *)a2 + 313);
  *((_WORD *)this + 162) = v6;
  v6 |= 0x40000uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((unsigned char *)this + 313) = v21;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*((_WORD *)a2 + 162) & 0x800) == 0)
  {
LABEL_24:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_106;
  }
LABEL_105:
  char v22 = *((unsigned char *)a2 + 306);
  unint64_t v23 = v6 >> 16;
  v6 |= 0x800uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v23;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 306) = v22;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*((_WORD *)a2 + 162) & 0x4000) == 0)
  {
LABEL_25:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_107;
  }
LABEL_106:
  char v24 = *((unsigned char *)a2 + 309);
  unint64_t v25 = v6 >> 16;
  v6 |= 0x4000uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v25;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 309) = v24;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_26:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_108;
  }
LABEL_107:
  float result = *((float *)a2 + 56);
  v5 |= 0x20000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 56) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_109;
  }
LABEL_108:
  float result = *((float *)a2 + 54);
  v5 |= 0x8000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 54) = result;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v8 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_110;
  }
LABEL_109:
  int v26 = *((_DWORD *)a2 + 55);
  v5 |= 0x10000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((_DWORD *)this + 55) = v26;
  LODWORD(v8) = *((unsigned __int16 *)a2 + 162) | (*((unsigned __int8 *)a2 + 326) << 16);
  uint64_t v4 = *v3;
  if ((v8 & 0x20000) == 0)
  {
LABEL_29:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_111;
  }
LABEL_110:
  char v27 = *((unsigned char *)a2 + 312);
  *((_WORD *)this + 162) = v6;
  v6 |= 0x20000uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((unsigned char *)this + 312) = v27;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_112;
  }
LABEL_111:
  float result = *((float *)a2 + 57);
  v5 |= 0x40000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 57) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }
LABEL_112:
  float result = *((float *)a2 + 62);
  v5 |= 0x800000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 62) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000) == 0)
  {
LABEL_32:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_114;
  }
LABEL_113:
  float result = *((float *)a2 + 22);
  v5 |= 0x80000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 22) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v8 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_115;
  }
LABEL_114:
  float result = *((float *)a2 + 46);
  v5 |= 0x80000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 46) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((v8 & 0x10) == 0)
  {
LABEL_34:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *((float *)a2 + 71);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x10uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v8;
  *((_WORD *)this + 162) = v6;
  *((float *)this + 71) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *((float *)a2 + 58);
  v5 |= 0x80000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 58) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *((float *)a2 + 63);
  v5 |= 0x1000000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 63) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000) == 0)
  {
LABEL_37:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *((float *)a2 + 23);
  v5 |= 0x100000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 23) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_38:
    if ((v8 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *((float *)a2 + 47);
  v5 |= 0x100000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 47) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((v8 & 0x20) == 0)
  {
LABEL_39:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_121;
  }
LABEL_120:
  float result = *((float *)a2 + 72);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x20uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v8;
  *((_WORD *)this + 162) = v6;
  *((float *)this + 72) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_40:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_122;
  }
LABEL_121:
  float result = *((float *)a2 + 59);
  v5 |= 0x100000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 59) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_41:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *((float *)a2 + 64);
  v5 |= 0x2000000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 64) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000) == 0)
  {
LABEL_42:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *((float *)a2 + 24);
  v5 |= 0x200000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 24) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_43:
    if ((v8 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *((float *)a2 + 48);
  v5 |= 0x200000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 48) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((v8 & 0x40) == 0)
  {
LABEL_44:
    if ((v4 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_126;
  }
LABEL_125:
  float result = *((float *)a2 + 73);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x40uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v8;
  *((_WORD *)this + 162) = v6;
  *((float *)this + 73) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80) == 0)
  {
LABEL_45:
    if ((v4 & 0x400) == 0) {
      goto LABEL_46;
    }
    goto LABEL_127;
  }
LABEL_126:
  float result = *((float *)a2 + 10);
  v5 |= 0x80uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 10) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400) == 0)
  {
LABEL_46:
    if ((v4 & 0x200) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *((float *)a2 + 13);
  v5 |= 0x400uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 13) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200) == 0)
  {
LABEL_47:
    if ((v4 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_129;
  }
LABEL_128:
  float result = *((float *)a2 + 12);
  v5 |= 0x200uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 12) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100) == 0)
  {
LABEL_48:
    if ((v4 & 4) == 0) {
      goto LABEL_49;
    }
    goto LABEL_130;
  }
LABEL_129:
  float result = *((float *)a2 + 11);
  v5 |= 0x100uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 11) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_49:
    if ((v4 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_131;
  }
LABEL_130:
  float result = *((float *)a2 + 5);
  v5 |= 4uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 5) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20) == 0)
  {
LABEL_50:
    if ((v4 & 0x10) == 0) {
      goto LABEL_51;
    }
    goto LABEL_132;
  }
LABEL_131:
  float result = *((float *)a2 + 8);
  v5 |= 0x20uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 8) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_51:
    if ((v4 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_133;
  }
LABEL_132:
  float result = *((float *)a2 + 7);
  v5 |= 0x10uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 7) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_52:
    if ((v4 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_134;
  }
LABEL_133:
  float result = *((float *)a2 + 6);
  v5 |= 8uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 6) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800) == 0)
  {
LABEL_53:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_135;
  }
LABEL_134:
  float result = *((float *)a2 + 14);
  v5 |= 0x800uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 14) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000) == 0)
  {
LABEL_54:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_136;
  }
LABEL_135:
  float result = *((float *)a2 + 17);
  v5 |= 0x4000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 17) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000) == 0)
  {
LABEL_55:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_137;
  }
LABEL_136:
  float result = *((float *)a2 + 16);
  v5 |= 0x2000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 16) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x1000) == 0)
  {
LABEL_56:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_138;
  }
LABEL_137:
  float result = *((float *)a2 + 15);
  v5 |= 0x1000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 15) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000) == 0)
  {
LABEL_57:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_139;
  }
LABEL_138:
  float result = *((float *)a2 + 19);
  v5 |= 0x10000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 19) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000) == 0)
  {
LABEL_58:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_140;
  }
LABEL_139:
  float result = *((float *)a2 + 20);
  v5 |= 0x20000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 20) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_141;
  }
LABEL_140:
  float result = *((float *)a2 + 60);
  v5 |= 0x200000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 60) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_142;
  }
LABEL_141:
  float result = *((float *)a2 + 65);
  v5 |= 0x4000000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 65) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000) == 0)
  {
LABEL_61:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_143;
  }
LABEL_142:
  float result = *((float *)a2 + 25);
  v5 |= 0x400000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 25) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000000) == 0)
  {
LABEL_62:
    if ((v8 & 0x80) == 0) {
      goto LABEL_63;
    }
    goto LABEL_144;
  }
LABEL_143:
  float result = *((float *)a2 + 49);
  v5 |= 0x400000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 49) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((v8 & 0x80) == 0)
  {
LABEL_63:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_145;
  }
LABEL_144:
  float result = *((float *)a2 + 74);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x80uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v8;
  *((_WORD *)this + 162) = v6;
  *((float *)this + 74) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_64:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_146;
  }
LABEL_145:
  float result = *((float *)a2 + 61);
  v5 |= 0x400000000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 61) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_147;
  }
LABEL_146:
  float result = *((float *)a2 + 66);
  v5 |= 0x8000000000000000;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 66) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000) == 0)
  {
LABEL_66:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_148;
  }
LABEL_147:
  float result = *((float *)a2 + 26);
  v5 |= 0x800000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 26) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_67:
    if ((v8 & 0x100) == 0) {
      goto LABEL_68;
    }
    goto LABEL_149;
  }
LABEL_148:
  float result = *((float *)a2 + 50);
  v5 |= 0x800000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 50) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((v8 & 0x100) == 0)
  {
LABEL_68:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_150;
  }
LABEL_149:
  float result = *((float *)a2 + 75);
  unint64_t v8 = v6 >> 16;
  v6 |= 0x100uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v8;
  *((_WORD *)this + 162) = v6;
  *((float *)this + 75) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_69:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_151;
  }
LABEL_150:
  float result = *((float *)a2 + 35);
  v5 |= 0x100000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 35) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x200000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_152;
  }
LABEL_151:
  float result = *((float *)a2 + 36);
  v5 |= 0x200000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 36) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_153;
  }
LABEL_152:
  float result = *((float *)a2 + 30);
  v5 |= 0x8000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 30) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_72:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_154;
  }
LABEL_153:
  float result = *((float *)a2 + 29);
  v5 |= 0x4000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 29) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_155;
  }
LABEL_154:
  float result = *((float *)a2 + 34);
  v5 |= 0x80000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 34) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_74:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_156;
  }
LABEL_155:
  float result = *((float *)a2 + 33);
  v5 |= 0x40000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 33) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_75:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_157;
  }
LABEL_156:
  float result = *((float *)a2 + 32);
  v5 |= 0x20000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 32) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_76:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_158;
  }
LABEL_157:
  float result = *((float *)a2 + 31);
  v5 |= 0x10000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 31) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_77:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_159;
  }
LABEL_158:
  float result = *((float *)a2 + 43);
  v5 |= 0x10000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 43) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_78:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_160;
  }
LABEL_159:
  float result = *((float *)a2 + 44);
  v5 |= 0x20000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 44) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_79:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_161;
  }
LABEL_160:
  float result = *((float *)a2 + 38);
  v5 |= 0x800000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 38) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_80:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_162;
  }
LABEL_161:
  float result = *((float *)a2 + 37);
  v5 |= 0x400000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 37) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_81:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_163;
  }
LABEL_162:
  float result = *((float *)a2 + 42);
  v5 |= 0x8000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 42) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_82:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_164;
  }
LABEL_163:
  float result = *((float *)a2 + 41);
  v5 |= 0x4000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 41) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  uint64_t v4 = *v3;
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_83:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_165;
  }
LABEL_164:
  float result = *((float *)a2 + 40);
  v5 |= 0x2000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 40) = result;
  LOWORD(v8) = *((_WORD *)a2 + 162);
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_84:
    if ((v8 & 2) == 0) {
      goto LABEL_85;
    }
    goto LABEL_166;
  }
LABEL_165:
  float result = *((float *)a2 + 39);
  v5 |= 0x1000000000uLL;
  *float v2 = v5;
  *((_WORD *)this + 162) = v6;
  *((unsigned char *)this + 326) = BYTE2(v6);
  *((float *)this + 39) = result;
  LOBYTE(v8) = *((_WORD *)a2 + 162);
  if ((*((_WORD *)a2 + 162) & 2) == 0)
  {
LABEL_85:
    if ((v8 & 4) == 0) {
      goto LABEL_86;
    }
    goto LABEL_167;
  }
LABEL_166:
  float result = *((float *)a2 + 68);
  unint64_t v8 = v6 >> 16;
  v6 |= 2uLL;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v8;
  *((_WORD *)this + 162) = v6;
  *((float *)this + 68) = result;
  LOBYTE(v8) = *((_WORD *)a2 + 162);
  if ((*((_WORD *)a2 + 162) & 4) == 0)
  {
LABEL_86:
    if ((v8 & 1) == 0) {
      return result;
    }
LABEL_168:
    float result = *((float *)a2 + 67);
    *float v2 = v5;
    *((unsigned char *)this + 326) = BYTE2(v6);
    *((_WORD *)this + 162) = v6 | 1;
    *((float *)this + 67) = result;
    return result;
  }
LABEL_167:
  float result = *((float *)a2 + 69);
  unint64_t v28 = v6 >> 16;
  LODWORD(v6) = v6 | 4;
  *float v2 = v5;
  *((unsigned char *)this + 326) = v28;
  *((_WORD *)this + 162) = v6;
  *((float *)this + 69) = result;
  if (*((_WORD *)a2 + 162)) {
    goto LABEL_168;
  }
  return result;
}

CMMsl *CMMsl::KappaRolloverCrashResult::operator=(CMMsl *a1, const CMMsl::KappaRolloverCrashResult *a2)
{
  v5[41] = *MEMORY[0x263EF8340];
  if (a1 != a2)
  {
    CMMsl::KappaRolloverCrashResult::KappaRolloverCrashResult((CMMsl::KappaRolloverCrashResult *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaRolloverCrashResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaRolloverCrashResult *a2, CMMsl::KappaRolloverCrashResult *a3)
{
  int v3 = *((_DWORD *)this + 81);
  uint64_t v4 = *(void *)((char *)this + 316);
  int v5 = *((_DWORD *)a2 + 81);
  *(void *)((char *)this + 316) = *(void *)((char *)a2 + 316);
  *((_DWORD *)this + 81) = v5;
  *(void *)((char *)a2 + 316) = v4;
  *((_DWORD *)a2 + 81) = v3;
  uint64_t v6 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 310);
  *((unsigned char *)this + 310) = *((unsigned char *)a2 + 310);
  *((unsigned char *)a2 + 310) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 311);
  *((unsigned char *)this + 311) = *((unsigned char *)a2 + 311);
  *((unsigned char *)a2 + 311) = v6;
  int v7 = *((_DWORD *)this + 45);
  *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
  *((_DWORD *)a2 + 45) = v7;
  int v8 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v8;
  int v9 = *((_DWORD *)this + 70);
  *((_DWORD *)this + 70) = *((_DWORD *)a2 + 70);
  *((_DWORD *)a2 + 70) = v9;
  LOBYTE(v6) = *((unsigned char *)this + 308);
  *((unsigned char *)this + 308) = *((unsigned char *)a2 + 308);
  *((unsigned char *)a2 + 308) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 305);
  *((unsigned char *)this + 305) = *((unsigned char *)a2 + 305);
  *((unsigned char *)a2 + 305) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 304);
  *((unsigned char *)this + 304) = *((unsigned char *)a2 + 304);
  *((unsigned char *)a2 + 304) = v6;
  LODWORD(v6) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 307);
  *((unsigned char *)this + 307) = *((unsigned char *)a2 + 307);
  *((unsigned char *)a2 + 307) = v6;
  int v10 = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v10;
  int v11 = *((_DWORD *)this + 52);
  *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
  *((_DWORD *)a2 + 52) = v11;
  int v12 = *((_DWORD *)this + 51);
  *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
  *((_DWORD *)a2 + 51) = v12;
  int v13 = *((_DWORD *)this + 53);
  *((_DWORD *)this + 53) = *((_DWORD *)a2 + 53);
  *((_DWORD *)a2 + 53) = v13;
  int v14 = *((_DWORD *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((_DWORD *)a2 + 9) = v14;
  int v15 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v15;
  int v16 = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v16;
  LOBYTE(v6) = *((unsigned char *)this + 313);
  *((unsigned char *)this + 313) = *((unsigned char *)a2 + 313);
  *((unsigned char *)a2 + 313) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 306);
  *((unsigned char *)this + 306) = *((unsigned char *)a2 + 306);
  *((unsigned char *)a2 + 306) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 309);
  *((unsigned char *)this + 309) = *((unsigned char *)a2 + 309);
  *((unsigned char *)a2 + 309) = v6;
  int v17 = *((_DWORD *)this + 56);
  *((_DWORD *)this + 56) = *((_DWORD *)a2 + 56);
  *((_DWORD *)a2 + 56) = v17;
  int v18 = *((_DWORD *)this + 54);
  *((_DWORD *)this + 54) = *((_DWORD *)a2 + 54);
  *((_DWORD *)a2 + 54) = v18;
  LODWORD(v6) = *((_DWORD *)this + 55);
  *((_DWORD *)this + 55) = *((_DWORD *)a2 + 55);
  *((_DWORD *)a2 + 55) = v6;
  LOBYTE(v6) = *((unsigned char *)this + 312);
  *((unsigned char *)this + 312) = *((unsigned char *)a2 + 312);
  *((unsigned char *)a2 + 312) = v6;
  int v19 = *((_DWORD *)this + 57);
  *((_DWORD *)this + 57) = *((_DWORD *)a2 + 57);
  *((_DWORD *)a2 + 57) = v19;
  int v20 = *((_DWORD *)this + 62);
  *((_DWORD *)this + 62) = *((_DWORD *)a2 + 62);
  *((_DWORD *)a2 + 62) = v20;
  int v21 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v21;
  int v22 = *((_DWORD *)this + 46);
  *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
  *((_DWORD *)a2 + 46) = v22;
  int v23 = *((_DWORD *)this + 71);
  *((_DWORD *)this + 71) = *((_DWORD *)a2 + 71);
  *((_DWORD *)a2 + 71) = v23;
  int v24 = *((_DWORD *)this + 58);
  *((_DWORD *)this + 58) = *((_DWORD *)a2 + 58);
  *((_DWORD *)a2 + 58) = v24;
  int v25 = *((_DWORD *)this + 63);
  *((_DWORD *)this + 63) = *((_DWORD *)a2 + 63);
  *((_DWORD *)a2 + 63) = v25;
  int v26 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v26;
  int v27 = *((_DWORD *)this + 47);
  *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
  *((_DWORD *)a2 + 47) = v27;
  int v28 = *((_DWORD *)this + 72);
  *((_DWORD *)this + 72) = *((_DWORD *)a2 + 72);
  *((_DWORD *)a2 + 72) = v28;
  int v29 = *((_DWORD *)this + 59);
  *((_DWORD *)this + 59) = *((_DWORD *)a2 + 59);
  *((_DWORD *)a2 + 59) = v29;
  int v30 = *((_DWORD *)this + 64);
  *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
  *((_DWORD *)a2 + 64) = v30;
  int v31 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v31;
  int v32 = *((_DWORD *)this + 48);
  *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
  *((_DWORD *)a2 + 48) = v32;
  int v33 = *((_DWORD *)this + 73);
  *((_DWORD *)this + 73) = *((_DWORD *)a2 + 73);
  *((_DWORD *)a2 + 73) = v33;
  int v34 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v34;
  int v35 = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v35;
  int v36 = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v36;
  int v37 = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v37;
  int v38 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v38;
  int v39 = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v39;
  int v40 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v40;
  int v41 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v41;
  int v42 = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v42;
  int v43 = *((_DWORD *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((_DWORD *)a2 + 17) = v43;
  int v44 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v44;
  int v45 = *((_DWORD *)this + 15);
  *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = v45;
  int v46 = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v46;
  int v47 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v47;
  int v48 = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = *((_DWORD *)a2 + 60);
  *((_DWORD *)a2 + 60) = v48;
  int v49 = *((_DWORD *)this + 65);
  *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
  *((_DWORD *)a2 + 65) = v49;
  int v50 = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v50;
  int v51 = *((_DWORD *)this + 49);
  *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
  *((_DWORD *)a2 + 49) = v51;
  int v52 = *((_DWORD *)this + 74);
  *((_DWORD *)this + 74) = *((_DWORD *)a2 + 74);
  *((_DWORD *)a2 + 74) = v52;
  int v53 = *((_DWORD *)this + 61);
  *((_DWORD *)this + 61) = *((_DWORD *)a2 + 61);
  *((_DWORD *)a2 + 61) = v53;
  int v54 = *((_DWORD *)this + 66);
  *((_DWORD *)this + 66) = *((_DWORD *)a2 + 66);
  *((_DWORD *)a2 + 66) = v54;
  int v55 = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v55;
  int v56 = *((_DWORD *)this + 50);
  *((_DWORD *)this + 50) = *((_DWORD *)a2 + 50);
  *((_DWORD *)a2 + 50) = v56;
  int v57 = *((_DWORD *)this + 75);
  *((_DWORD *)this + 75) = *((_DWORD *)a2 + 75);
  *((_DWORD *)a2 + 75) = v57;
  int v58 = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v58;
  int v59 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v59;
  int v60 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v60;
  int v61 = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v61;
  int v62 = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v62;
  int v63 = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v63;
  int v64 = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v64;
  int v65 = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v65;
  int v66 = *((_DWORD *)this + 43);
  *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
  *((_DWORD *)a2 + 43) = v66;
  int v67 = *((_DWORD *)this + 44);
  *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
  *((_DWORD *)a2 + 44) = v67;
  int v68 = *((_DWORD *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((_DWORD *)a2 + 38) = v68;
  int v69 = *((_DWORD *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((_DWORD *)a2 + 37) = v69;
  int v70 = *((_DWORD *)this + 42);
  *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
  *((_DWORD *)a2 + 42) = v70;
  int v71 = *((_DWORD *)this + 41);
  *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
  *((_DWORD *)a2 + 41) = v71;
  int v72 = *((_DWORD *)this + 40);
  *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
  *((_DWORD *)a2 + 40) = v72;
  int v73 = *((_DWORD *)this + 39);
  *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
  *((_DWORD *)a2 + 39) = v73;
  int v74 = *((_DWORD *)this + 68);
  *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
  *((_DWORD *)a2 + 68) = v74;
  int v75 = *((_DWORD *)this + 69);
  *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
  *((_DWORD *)a2 + 69) = v75;
  float result = *((float *)this + 67);
  *((_DWORD *)this + 67) = *((_DWORD *)a2 + 67);
  *((float *)a2 + 67) = result;
  return result;
}

float CMMsl::KappaRolloverCrashResult::KappaRolloverCrashResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642C20;
  uint64_t v2 = *(void *)(a2 + 316);
  *(_DWORD *)(a1 + 324) = *(_DWORD *)(a2 + 324);
  *(void *)(a1 + 316) = v2;
  *(_DWORD *)(a2 + 324) = 0;
  *(void *)(a2 + 316) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 310) = *(unsigned char *)(a2 + 310);
  *(unsigned char *)(a1 + 311) = *(unsigned char *)(a2 + 311);
  *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(unsigned char *)(a1 + 308) = *(unsigned char *)(a2 + 308);
  *(unsigned char *)(a1 + 305) = *(unsigned char *)(a2 + 305);
  *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 304);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 307) = *(unsigned char *)(a2 + 307);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 204) = *(_DWORD *)(a2 + 204);
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
  *(unsigned char *)(a1 + 306) = *(unsigned char *)(a2 + 306);
  *(unsigned char *)(a1 + 309) = *(unsigned char *)(a2 + 309);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 292) = *(_DWORD *)(a2 + 292);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 300) = *(_DWORD *)(a2 + 300);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  float result = *(float *)(a2 + 268);
  *(float *)(a1 + 268) = result;
  return result;
}

CMMsl *CMMsl::KappaRolloverCrashResult::operator=(CMMsl *a1, uint64_t a2)
{
  v5[41] = *MEMORY[0x263EF8340];
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaRolloverCrashResult::KappaRolloverCrashResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaRolloverCrashResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaRolloverCrashResult::formatText(CMMsl::KappaRolloverCrashResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = (uint64_t *)((char *)this + 316);
  uint64_t v6 = *(void *)((char *)this + 316);
  if ((v6 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "audioRolloverDvChaosThreshold", *((float *)this + 4));
    int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
    uint64_t v6 = *v5;
    if ((*v5 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  if ((v6 & 4) != 0)
  {
LABEL_5:
    PB::TextFormatter::format(a2, "audioRolloverDvChaosThresholdCenter", *((float *)this + 5));
    int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
    uint64_t v6 = *v5;
  }
LABEL_6:
  if ((v6 & 8) != 0)
  {
    PB::TextFormatter::format(a2, "audioRolloverDvChaosThresholdMax", *((float *)this + 6));
    int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
    uint64_t v6 = *v5;
    if ((*v5 & 0x10) == 0)
    {
LABEL_8:
      if ((v6 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_93;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  PB::TextFormatter::format(a2, "audioRolloverDvChaosThresholdMin", *((float *)this + 7));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_94;
  }
LABEL_93:
  PB::TextFormatter::format(a2, "audioRolloverDvChaosThresholdStretch", *((float *)this + 8));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_95;
  }
LABEL_94:
  PB::TextFormatter::format(a2, "audioRolloverDvEnergyThreshold", *((float *)this + 9));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_96;
  }
LABEL_95:
  PB::TextFormatter::format(a2, "audioRolloverDvEnergyThresholdCenter", *((float *)this + 10));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v6 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_97;
  }
LABEL_96:
  PB::TextFormatter::format(a2, "audioRolloverDvEnergyThresholdMax", *((float *)this + 11));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_98;
  }
LABEL_97:
  PB::TextFormatter::format(a2, "audioRolloverDvEnergyThresholdMin", *((float *)this + 12));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_99;
  }
LABEL_98:
  PB::TextFormatter::format(a2, "audioRolloverDvEnergyThresholdStretch", *((float *)this + 13));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_100;
  }
LABEL_99:
  PB::TextFormatter::format(a2, "audioRolloverDvMaxRmsThresholdCenter", *((float *)this + 14));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_101;
  }
LABEL_100:
  PB::TextFormatter::format(a2, "audioRolloverDvMaxRmsThresholdMax", *((float *)this + 15));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000) == 0)
  {
LABEL_17:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_102;
  }
LABEL_101:
  PB::TextFormatter::format(a2, "audioRolloverDvMaxRmsThresholdMin", *((float *)this + 16));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000) == 0)
  {
LABEL_18:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_103;
  }
LABEL_102:
  PB::TextFormatter::format(a2, "audioRolloverDvMaxRmsThresholdStretch", *((float *)this + 17));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000) == 0)
  {
LABEL_19:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_104;
  }
LABEL_103:
  PB::TextFormatter::format(a2, "audioRolloverDvRmsThreshold", *((float *)this + 18));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000) == 0)
  {
LABEL_20:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_105;
  }
LABEL_104:
  PB::TextFormatter::format(a2, "baroEscalateMaxAccelNormThreshold", *((float *)this + 19));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000) == 0)
  {
LABEL_21:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_106;
  }
LABEL_105:
  PB::TextFormatter::format(a2, "baroEscalateSpinNormThreshold", *((float *)this + 20));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000) == 0)
  {
LABEL_22:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_107;
  }
LABEL_106:
  PB::TextFormatter::format(a2, "cumulativeRotation", *((float *)this + 21));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000) == 0)
  {
LABEL_23:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_108;
  }
LABEL_107:
  PB::TextFormatter::format(a2, "cumulativeRotationThreshold", *((float *)this + 22));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000) == 0)
  {
LABEL_24:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(a2, "cumulativeRotationThresholdWithAudio", *((float *)this + 23));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000) == 0)
  {
LABEL_25:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(a2, "cumulativeRotationThresholdWithoutAudio", *((float *)this + 24));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000) == 0)
  {
LABEL_26:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(a2, "cumulativeRotationThresholdWithoutAudioStandaloneBaroNeeded", *((float *)this + 25));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000) == 0)
  {
LABEL_27:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(a2, "cumulativeRotationThresholdWithoutAudioStandaloneFull", *((float *)this + 26));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(a2, "deltaVXYOverEpoch", *((float *)this + 27));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_29:
    if ((v7 & 0x200) == 0) {
      goto LABEL_30;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(a2, "detectorRegime");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 0x200) == 0)
  {
LABEL_30:
    if ((v7 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(a2, "hasAudioInEpoch");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 0x400) == 0)
  {
LABEL_31:
    if ((v7 & 0x800) == 0) {
      goto LABEL_32;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(a2, "isAudioRollover");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 0x800) == 0)
  {
LABEL_32:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(a2, "isAudioRolloverDv");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 0x1000) == 0)
  {
LABEL_33:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(a2, "isAudioSupported");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 0x2000) == 0)
  {
LABEL_34:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(a2, "isBaro");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 0x4000) == 0)
  {
LABEL_35:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(a2, "isCompanionConnected");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(a2, "lowSenseWithAudioCumulativeRotationThreshold", *((float *)this + 29));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(a2, "lowSenseWithAudioMaxAccelNormThreshold", *((float *)this + 30));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(a2, "lowSenseWithAudioParBaroCumulativeRotationThreshold", *((float *)this + 31));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(a2, "lowSenseWithAudioParBaroNormThreshold", *((float *)this + 32));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(a2, "lowSenseWithAudioPeakPressureThreshold", *((float *)this + 33));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(a2, "lowSenseWithAudioZgtimeThreshold", *((float *)this + 34));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(a2, "lowSenseWithAudiodvThreshold1", *((float *)this + 35));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(a2, "lowSenseWithAudiodvThreshold2", *((float *)this + 36));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(a2, "lowSenseWithoutAudioCumulativeRotationThreshold", *((float *)this + 37));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_45:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(a2, "lowSenseWithoutAudioMaxAccelNormThreshold", *((float *)this + 38));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_46:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(a2, "lowSenseWithoutAudioParBaroCumulativeRotationThreshold", *((float *)this + 39));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(a2, "lowSenseWithoutAudioParBaroNormThreshold", *((float *)this + 40));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_48:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(a2, "lowSenseWithoutAudioPeakPressureThreshold", *((float *)this + 41));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_49:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(a2, "lowSenseWithoutAudioZgtimeThreshold", *((float *)this + 42));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_50:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(a2, "lowSenseWithoutAudiodvThreshold1", *((float *)this + 43));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_51:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(a2, "lowSenseWithoutAudiodvThreshold2", *((float *)this + 44));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_52:
    if ((v6 & 0x80000000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(a2, "maxAccelNorm", *((float *)this + 45));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_53:
    if ((v6 & 0x100000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(a2, "maxAccelNormThreshold", *((float *)this + 46));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x200000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(a2, "maxAccelNormThresholdWithAudio", *((float *)this + 47));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x400000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(a2, "maxAccelNormThresholdWithoutAudio", *((float *)this + 48));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x800000000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(a2, "maxAccelNormThresholdWithoutAudioStandaloneBaroNeeded", *((float *)this + 49));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x1000000000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(a2, "maxAccelNormThresholdWithoutAudioStandaloneFull", *((float *)this + 50));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_58:
    if ((v6 & 0x2000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(a2, "maxAudioRolloverChaos", *((float *)this + 51));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_59:
    if ((v6 & 0x4000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(a2, "maxAudioRolloverEnergy", *((float *)this + 52));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_60:
    if ((v6 & 0x8000000000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(a2, "maxAudioRolloverRms", *((float *)this + 53));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_61:
    if ((v6 & 0x10000000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(a2, "maxPulse", *((float *)this + 54));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x20000000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(a2, "numShortAudio");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(a2, "peakPressure", *((float *)this + 56));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 0x8000) == 0)
  {
LABEL_64:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(a2, "rolloverCrashDetectorDecision");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x10000) == 0)
  {
LABEL_65:
    if ((v6 & 0x40000000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(a2, "rolloverCrashDetectorDecisionLowSense");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_66:
    if ((v6 & 0x80000000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold1", *((float *)this + 57));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_67:
    if ((v6 & 0x100000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold1WithAudio", *((float *)this + 58));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_68:
    if ((v6 & 0x200000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudio", *((float *)this + 59));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_69:
    if ((v6 & 0x400000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudioStandaloneBaroNeeded", *((float *)this + 60));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_70:
    if ((v6 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold1WithoutAudioStandaloneFull", *((float *)this + 61));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v6 & 0x1000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold2", *((float *)this + 62));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold2WithAudio", *((float *)this + 63));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_73:
    if ((v6 & 0x4000000000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudio", *((float *)this + 64));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x4000000000000000) == 0)
  {
LABEL_74:
    if ((v6 & 0x8000000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudioStandaloneBaroNeeded", *((float *)this + 65));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*v5 & 0x8000000000000000) == 0)
  {
LABEL_75:
    if ((v7 & 1) == 0) {
      goto LABEL_76;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(a2, "rolloverDetectorRegimeDeltaVThreshold2WithoutAudioStandaloneFull", *((float *)this + 66));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 1) == 0)
  {
LABEL_76:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(a2, "shortAudioMaxPulseThreshold", *((float *)this + 67));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x20000) == 0)
  {
LABEL_77:
    if ((v7 & 2) == 0) {
      goto LABEL_78;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(a2, "shortAudioMet");
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 2) == 0)
  {
LABEL_78:
    if ((v7 & 4) == 0) {
      goto LABEL_79;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(a2, "shortAudioNumThreshold", *((float *)this + 68));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((*((_WORD *)this + 162) & 4) == 0)
  {
LABEL_79:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(a2, "shortAudioPeakPressureThreshold", *((float *)this + 69));
  int v7 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v6 = *v5;
  if ((v7 & 0x40000) == 0)
  {
LABEL_80:
    if ((v6 & 1) == 0) {
      goto LABEL_81;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(a2, "strongerAudioRollover");
  LOWORD(v7) = *((_WORD *)this + 162);
  if ((*v5 & 1) == 0)
  {
LABEL_81:
    if ((v7 & 8) == 0) {
      goto LABEL_82;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(a2, "timestamp");
  LOWORD(v7) = *((_WORD *)this + 162);
  if ((v7 & 8) == 0)
  {
LABEL_82:
    if ((v7 & 0x10) == 0) {
      goto LABEL_83;
    }
    goto LABEL_167;
  }
LABEL_166:
  PB::TextFormatter::format(a2, "zgTime", *((float *)this + 70));
  LOWORD(v7) = *((_WORD *)this + 162);
  if ((v7 & 0x10) == 0)
  {
LABEL_83:
    if ((v7 & 0x20) == 0) {
      goto LABEL_84;
    }
    goto LABEL_168;
  }
LABEL_167:
  PB::TextFormatter::format(a2, "zgTimeThreshold", *((float *)this + 71));
  LOWORD(v7) = *((_WORD *)this + 162);
  if ((v7 & 0x20) == 0)
  {
LABEL_84:
    if ((v7 & 0x40) == 0) {
      goto LABEL_85;
    }
    goto LABEL_169;
  }
LABEL_168:
  PB::TextFormatter::format(a2, "zgTimeThresholdWithAudio", *((float *)this + 72));
  LOWORD(v7) = *((_WORD *)this + 162);
  if ((v7 & 0x40) == 0)
  {
LABEL_85:
    if ((v7 & 0x80) == 0) {
      goto LABEL_86;
    }
    goto LABEL_170;
  }
LABEL_169:
  PB::TextFormatter::format(a2, "zgTimeThresholdWithoutAudio", *((float *)this + 73));
  LOWORD(v7) = *((_WORD *)this + 162);
  if ((v7 & 0x80) == 0)
  {
LABEL_86:
    if ((v7 & 0x100) == 0) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }
LABEL_170:
  PB::TextFormatter::format(a2, "zgTimeThresholdWithoutAudioStandaloneBaroNeeded", *((float *)this + 74));
  if ((*((_WORD *)this + 162) & 0x100) != 0) {
LABEL_87:
  }
    PB::TextFormatter::format(a2, "zgTimeThresholdWithoutAudioStandaloneFull", *((float *)this + 75));
LABEL_88:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaRolloverCrashResult::readFrom(CMMsl::KappaRolloverCrashResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    int v8 = (char *)this + 316;
    while (1)
    {
      uint64_t v9 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v10 = 0;
      unsigned int v11 = 0;
      unint64_t v12 = 0;
      while (1)
      {
        unint64_t v13 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v14 = *(unsigned char *)(v9 + v2);
        v12 |= (unint64_t)(v14 & 0x7F) << v10;
        if ((v14 & 0x80) == 0) {
          break;
        }
        v10 += 7;
        unint64_t v2 = v13;
        BOOL v15 = v11++ > 8;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_22:
      if ((v12 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v12 >> 3;
      if ((int)(v12 >> 3) <= 100)
      {
        switch(v21)
        {
          case 1:
            *(void *)v8 |= 1uLL;
            unint64_t v165 = *((void *)a2 + 1);
            unint64_t v166 = *((void *)a2 + 2);
            uint64_t v167 = *(void *)a2;
            if (v165 > 0xFFFFFFFFFFFFFFF5 || v165 + 10 > v166)
            {
              char v186 = 0;
              unsigned int v187 = 0;
              uint64_t v170 = 0;
              if (v166 <= v165) {
                unint64_t v166 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v166 == v165)
                {
                  uint64_t v170 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_338;
                }
                unint64_t v188 = v165 + 1;
                char v189 = *(unsigned char *)(v167 + v165);
                *((void *)a2 + 1) = v188;
                v170 |= (unint64_t)(v189 & 0x7F) << v186;
                if ((v189 & 0x80) == 0) {
                  break;
                }
                v186 += 7;
                unint64_t v165 = v188;
                BOOL v15 = v187++ > 8;
                if (v15)
                {
LABEL_317:
                  uint64_t v170 = 0;
                  goto LABEL_338;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v170 = 0;
              }
            }
            else
            {
              char v168 = 0;
              unsigned int v169 = 0;
              uint64_t v170 = 0;
              while (1)
              {
                unint64_t v171 = v165 + 1;
                *((void *)a2 + 1) = v165 + 1;
                char v172 = *(unsigned char *)(v167 + v165);
                v170 |= (unint64_t)(v172 & 0x7F) << v168;
                if ((v172 & 0x80) == 0) {
                  break;
                }
                v168 += 7;
                unint64_t v165 = v171;
                BOOL v15 = v169++ > 8;
                if (v15) {
                  goto LABEL_317;
                }
              }
            }
LABEL_338:
            *((void *)this + 1) = v170;
            break;
          case 2:
            char v173 = v8[10];
            *((_WORD *)v8 + 4) |= 0x8000u;
            v8[10] = v173;
            unint64_t v174 = *((void *)a2 + 1);
            if (v174 >= *((void *)a2 + 2))
            {
              BOOL v177 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v175 = v174 + 1;
              int v176 = *(unsigned __int8 *)(*(void *)a2 + v174);
              *((void *)a2 + 1) = v175;
              BOOL v177 = v176 != 0;
            }
            *((unsigned char *)this + 310) = v177;
            break;
          case 3:
            int v23 = *((unsigned __int16 *)v8 + 4);
            unsigned int v24 = (v23 | (v8[10] << 16) | 0x10000u) >> 16;
            *((_WORD *)v8 + 4) = v23;
            v8[10] = v24;
            unint64_t v25 = *((void *)a2 + 1);
            if (v25 >= *((void *)a2 + 2))
            {
              BOOL v28 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v26 = v25 + 1;
              int v27 = *(unsigned __int8 *)(*(void *)a2 + v25);
              *((void *)a2 + 1) = v26;
              BOOL v28 = v27 != 0;
            }
            *((unsigned char *)this + 311) = v28;
            break;
          default:
LABEL_20:
            uint64_t result = PB::Reader::skip(a2);
            if (!result) {
              return result;
            }
            break;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 101:
            *(void *)v8 |= 0x40000000000uLL;
            unint64_t v22 = *((void *)a2 + 1);
            if (v22 > 0xFFFFFFFFFFFFFFFBLL || v22 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 45) = *(_DWORD *)(*(void *)a2 + v22);
            goto LABEL_321;
          case 102:
            *(void *)v8 |= 0x40000uLL;
            unint64_t v29 = *((void *)a2 + 1);
            if (v29 > 0xFFFFFFFFFFFFFFFBLL || v29 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v29);
            goto LABEL_321;
          case 103:
            char v30 = v8[10];
            *((_WORD *)v8 + 4) |= 8u;
            v8[10] = v30;
            unint64_t v31 = *((void *)a2 + 1);
            if (v31 > 0xFFFFFFFFFFFFFFFBLL || v31 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 70) = *(_DWORD *)(*(void *)a2 + v31);
            goto LABEL_321;
          case 104:
            char v32 = v8[10];
            *((_WORD *)v8 + 4) |= 0x2000u;
            v8[10] = v32;
            unint64_t v33 = *((void *)a2 + 1);
            if (v33 >= *((void *)a2 + 2))
            {
              BOOL v36 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v34 = v33 + 1;
              int v35 = *(unsigned __int8 *)(*(void *)a2 + v33);
              *((void *)a2 + 1) = v34;
              BOOL v36 = v35 != 0;
            }
            *((unsigned char *)this + 308) = v36;
            goto LABEL_322;
          case 105:
            char v37 = v8[10];
            *((_WORD *)v8 + 4) |= 0x400u;
            v8[10] = v37;
            unint64_t v38 = *((void *)a2 + 1);
            if (v38 >= *((void *)a2 + 2))
            {
              BOOL v41 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v39 = v38 + 1;
              int v40 = *(unsigned __int8 *)(*(void *)a2 + v38);
              *((void *)a2 + 1) = v39;
              BOOL v41 = v40 != 0;
            }
            *((unsigned char *)this + 305) = v41;
            goto LABEL_322;
          case 106:
            char v42 = v8[10];
            *((_WORD *)v8 + 4) |= 0x200u;
            v8[10] = v42;
            unint64_t v43 = *((void *)a2 + 1);
            if (v43 >= *((void *)a2 + 2))
            {
              BOOL v46 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v44 = v43 + 1;
              int v45 = *(unsigned __int8 *)(*(void *)a2 + v43);
              *((void *)a2 + 1) = v44;
              BOOL v46 = v45 != 0;
            }
            *((unsigned char *)this + 304) = v46;
            goto LABEL_322;
          case 107:
            *(void *)v8 |= 0x2000000uLL;
            unint64_t v47 = *((void *)a2 + 1);
            unint64_t v48 = *((void *)a2 + 2);
            uint64_t v49 = *(void *)a2;
            if (v47 <= 0xFFFFFFFFFFFFFFF5 && v47 + 10 <= v48)
            {
              char v50 = 0;
              unsigned int v51 = 0;
              uint64_t v52 = 0;
              do
              {
                unint64_t v53 = v47 + 1;
                *((void *)a2 + 1) = v47 + 1;
                char v54 = *(unsigned char *)(v49 + v47);
                v52 |= (unint64_t)(v54 & 0x7F) << v50;
                if ((v54 & 0x80) == 0) {
                  goto LABEL_330;
                }
                v50 += 7;
                unint64_t v47 = v53;
                BOOL v15 = v51++ > 8;
              }
              while (!v15);
LABEL_293:
              LODWORD(v52) = 0;
              goto LABEL_330;
            }
            char v178 = 0;
            unsigned int v179 = 0;
            uint64_t v52 = 0;
            if (v48 <= v47) {
              unint64_t v48 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v48 == v47)
              {
                LODWORD(v52) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v180 = v47 + 1;
                char v181 = *(unsigned char *)(v49 + v47);
                *((void *)a2 + 1) = v180;
                v52 |= (unint64_t)(v181 & 0x7F) << v178;
                if (v181 < 0)
                {
                  v178 += 7;
                  unint64_t v47 = v180;
                  BOOL v15 = v179++ > 8;
                  if (v15) {
                    goto LABEL_293;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v52) = 0;
                }
              }
              break;
            }
LABEL_330:
            *((_DWORD *)this + 28) = v52;
            goto LABEL_322;
          case 108:
            char v55 = v8[10];
            *((_WORD *)v8 + 4) |= 0x1000u;
            v8[10] = v55;
            unint64_t v56 = *((void *)a2 + 1);
            if (v56 >= *((void *)a2 + 2))
            {
              BOOL v59 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v57 = v56 + 1;
              int v58 = *(unsigned __int8 *)(*(void *)a2 + v56);
              *((void *)a2 + 1) = v57;
              BOOL v59 = v58 != 0;
            }
            *((unsigned char *)this + 307) = v59;
            goto LABEL_322;
          case 109:
            *(void *)v8 |= 0x1000000uLL;
            unint64_t v60 = *((void *)a2 + 1);
            if (v60 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 27) = *(_DWORD *)(*(void *)a2 + v60);
            goto LABEL_321;
          case 110:
            *(void *)v8 |= 0x2000000000000uLL;
            unint64_t v61 = *((void *)a2 + 1);
            if (v61 > 0xFFFFFFFFFFFFFFFBLL || v61 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 52) = *(_DWORD *)(*(void *)a2 + v61);
            goto LABEL_321;
          case 111:
            *(void *)v8 |= 0x1000000000000uLL;
            unint64_t v62 = *((void *)a2 + 1);
            if (v62 > 0xFFFFFFFFFFFFFFFBLL || v62 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 51) = *(_DWORD *)(*(void *)a2 + v62);
            goto LABEL_321;
          case 112:
            *(void *)v8 |= 0x4000000000000uLL;
            unint64_t v63 = *((void *)a2 + 1);
            if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 53) = *(_DWORD *)(*(void *)a2 + v63);
            goto LABEL_321;
          case 113:
            *(void *)v8 |= 0x40uLL;
            unint64_t v64 = *((void *)a2 + 1);
            if (v64 > 0xFFFFFFFFFFFFFFFBLL || v64 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 9) = *(_DWORD *)(*(void *)a2 + v64);
            goto LABEL_321;
          case 114:
            *(void *)v8 |= 2uLL;
            unint64_t v65 = *((void *)a2 + 1);
            if (v65 > 0xFFFFFFFFFFFFFFFBLL || v65 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 4) = *(_DWORD *)(*(void *)a2 + v65);
            goto LABEL_321;
          case 115:
            *(void *)v8 |= 0x8000uLL;
            unint64_t v66 = *((void *)a2 + 1);
            if (v66 > 0xFFFFFFFFFFFFFFFBLL || v66 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 18) = *(_DWORD *)(*(void *)a2 + v66);
            goto LABEL_321;
          case 116:
            int v67 = *((unsigned __int16 *)v8 + 4);
            unsigned int v68 = (v67 | (v8[10] << 16) | 0x40000u) >> 16;
            *((_WORD *)v8 + 4) = v67;
            v8[10] = v68;
            unint64_t v69 = *((void *)a2 + 1);
            if (v69 >= *((void *)a2 + 2))
            {
              BOOL v72 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v70 = v69 + 1;
              int v71 = *(unsigned __int8 *)(*(void *)a2 + v69);
              *((void *)a2 + 1) = v70;
              BOOL v72 = v71 != 0;
            }
            *((unsigned char *)this + 313) = v72;
            goto LABEL_322;
          case 117:
            char v73 = v8[10];
            *((_WORD *)v8 + 4) |= 0x800u;
            v8[10] = v73;
            unint64_t v74 = *((void *)a2 + 1);
            if (v74 >= *((void *)a2 + 2))
            {
              BOOL v77 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v75 = v74 + 1;
              int v76 = *(unsigned __int8 *)(*(void *)a2 + v74);
              *((void *)a2 + 1) = v75;
              BOOL v77 = v76 != 0;
            }
            *((unsigned char *)this + 306) = v77;
            goto LABEL_322;
          case 118:
            char v78 = v8[10];
            *((_WORD *)v8 + 4) |= 0x4000u;
            v8[10] = v78;
            unint64_t v79 = *((void *)a2 + 1);
            if (v79 >= *((void *)a2 + 2))
            {
              BOOL v82 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v80 = v79 + 1;
              int v81 = *(unsigned __int8 *)(*(void *)a2 + v79);
              *((void *)a2 + 1) = v80;
              BOOL v82 = v81 != 0;
            }
            *((unsigned char *)this + 309) = v82;
            goto LABEL_322;
          case 119:
            *(void *)v8 |= 0x20000000000000uLL;
            unint64_t v83 = *((void *)a2 + 1);
            if (v83 > 0xFFFFFFFFFFFFFFFBLL || v83 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 56) = *(_DWORD *)(*(void *)a2 + v83);
            goto LABEL_321;
          case 120:
            *(void *)v8 |= 0x8000000000000uLL;
            unint64_t v84 = *((void *)a2 + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 54) = *(_DWORD *)(*(void *)a2 + v84);
            goto LABEL_321;
          case 121:
            *(void *)v8 |= 0x10000000000000uLL;
            unint64_t v85 = *((void *)a2 + 1);
            unint64_t v86 = *((void *)a2 + 2);
            uint64_t v87 = *(void *)a2;
            if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
            {
              char v88 = 0;
              unsigned int v89 = 0;
              uint64_t v90 = 0;
              do
              {
                unint64_t v91 = v85 + 1;
                *((void *)a2 + 1) = v85 + 1;
                char v92 = *(unsigned char *)(v87 + v85);
                v90 |= (unint64_t)(v92 & 0x7F) << v88;
                if ((v92 & 0x80) == 0) {
                  goto LABEL_334;
                }
                v88 += 7;
                unint64_t v85 = v91;
                BOOL v15 = v89++ > 8;
              }
              while (!v15);
LABEL_308:
              LODWORD(v90) = 0;
              goto LABEL_334;
            }
            char v182 = 0;
            unsigned int v183 = 0;
            uint64_t v90 = 0;
            if (v86 <= v85) {
              unint64_t v86 = *((void *)a2 + 1);
            }
            break;
          case 122:
            int v93 = *((unsigned __int16 *)v8 + 4);
            unsigned int v94 = (v93 | (v8[10] << 16) | 0x20000u) >> 16;
            *((_WORD *)v8 + 4) = v93;
            v8[10] = v94;
            unint64_t v95 = *((void *)a2 + 1);
            if (v95 >= *((void *)a2 + 2))
            {
              BOOL v98 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v96 = v95 + 1;
              int v97 = *(unsigned __int8 *)(*(void *)a2 + v95);
              *((void *)a2 + 1) = v96;
              BOOL v98 = v97 != 0;
            }
            *((unsigned char *)this + 312) = v98;
            goto LABEL_322;
          case 201:
            *(void *)v8 |= 0x40000000000000uLL;
            unint64_t v99 = *((void *)a2 + 1);
            if (v99 > 0xFFFFFFFFFFFFFFFBLL || v99 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 57) = *(_DWORD *)(*(void *)a2 + v99);
            goto LABEL_321;
          case 202:
            *(void *)v8 |= 0x800000000000000uLL;
            unint64_t v100 = *((void *)a2 + 1);
            if (v100 > 0xFFFFFFFFFFFFFFFBLL || v100 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 62) = *(_DWORD *)(*(void *)a2 + v100);
            goto LABEL_321;
          case 203:
            *(void *)v8 |= 0x80000uLL;
            unint64_t v101 = *((void *)a2 + 1);
            if (v101 > 0xFFFFFFFFFFFFFFFBLL || v101 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 22) = *(_DWORD *)(*(void *)a2 + v101);
            goto LABEL_321;
          case 204:
            *(void *)v8 |= 0x80000000000uLL;
            unint64_t v102 = *((void *)a2 + 1);
            if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 46) = *(_DWORD *)(*(void *)a2 + v102);
            goto LABEL_321;
          case 205:
            char v103 = v8[10];
            *((_WORD *)v8 + 4) |= 0x10u;
            v8[10] = v103;
            unint64_t v104 = *((void *)a2 + 1);
            if (v104 > 0xFFFFFFFFFFFFFFFBLL || v104 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 71) = *(_DWORD *)(*(void *)a2 + v104);
            goto LABEL_321;
          case 206:
            *(void *)v8 |= 0x80000000000000uLL;
            unint64_t v105 = *((void *)a2 + 1);
            if (v105 > 0xFFFFFFFFFFFFFFFBLL || v105 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 58) = *(_DWORD *)(*(void *)a2 + v105);
            goto LABEL_321;
          case 207:
            *(void *)v8 |= 0x1000000000000000uLL;
            unint64_t v106 = *((void *)a2 + 1);
            if (v106 > 0xFFFFFFFFFFFFFFFBLL || v106 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 63) = *(_DWORD *)(*(void *)a2 + v106);
            goto LABEL_321;
          case 208:
            *(void *)v8 |= 0x100000uLL;
            unint64_t v107 = *((void *)a2 + 1);
            if (v107 > 0xFFFFFFFFFFFFFFFBLL || v107 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 23) = *(_DWORD *)(*(void *)a2 + v107);
            goto LABEL_321;
          case 209:
            *(void *)v8 |= 0x100000000000uLL;
            unint64_t v108 = *((void *)a2 + 1);
            if (v108 > 0xFFFFFFFFFFFFFFFBLL || v108 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 47) = *(_DWORD *)(*(void *)a2 + v108);
            goto LABEL_321;
          case 210:
            char v109 = v8[10];
            *((_WORD *)v8 + 4) |= 0x20u;
            v8[10] = v109;
            unint64_t v110 = *((void *)a2 + 1);
            if (v110 > 0xFFFFFFFFFFFFFFFBLL || v110 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 72) = *(_DWORD *)(*(void *)a2 + v110);
            goto LABEL_321;
          case 231:
            *(void *)v8 |= 0x100000000000000uLL;
            unint64_t v111 = *((void *)a2 + 1);
            if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 59) = *(_DWORD *)(*(void *)a2 + v111);
            goto LABEL_321;
          case 232:
            *(void *)v8 |= 0x2000000000000000uLL;
            unint64_t v112 = *((void *)a2 + 1);
            if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 64) = *(_DWORD *)(*(void *)a2 + v112);
            goto LABEL_321;
          case 233:
            *(void *)v8 |= 0x200000uLL;
            unint64_t v113 = *((void *)a2 + 1);
            if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 24) = *(_DWORD *)(*(void *)a2 + v113);
            goto LABEL_321;
          case 234:
            *(void *)v8 |= 0x200000000000uLL;
            unint64_t v114 = *((void *)a2 + 1);
            if (v114 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 48) = *(_DWORD *)(*(void *)a2 + v114);
            goto LABEL_321;
          case 235:
            char v115 = v8[10];
            *((_WORD *)v8 + 4) |= 0x40u;
            v8[10] = v115;
            unint64_t v116 = *((void *)a2 + 1);
            if (v116 > 0xFFFFFFFFFFFFFFFBLL || v116 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 73) = *(_DWORD *)(*(void *)a2 + v116);
            goto LABEL_321;
          case 236:
            *(void *)v8 |= 0x80uLL;
            unint64_t v117 = *((void *)a2 + 1);
            if (v117 > 0xFFFFFFFFFFFFFFFBLL || v117 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 10) = *(_DWORD *)(*(void *)a2 + v117);
            goto LABEL_321;
          case 237:
            *(void *)v8 |= 0x400uLL;
            unint64_t v118 = *((void *)a2 + 1);
            if (v118 > 0xFFFFFFFFFFFFFFFBLL || v118 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 13) = *(_DWORD *)(*(void *)a2 + v118);
            goto LABEL_321;
          case 238:
            *(void *)v8 |= 0x200uLL;
            unint64_t v119 = *((void *)a2 + 1);
            if (v119 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 12) = *(_DWORD *)(*(void *)a2 + v119);
            goto LABEL_321;
          case 239:
            *(void *)v8 |= 0x100uLL;
            unint64_t v120 = *((void *)a2 + 1);
            if (v120 > 0xFFFFFFFFFFFFFFFBLL || v120 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 11) = *(_DWORD *)(*(void *)a2 + v120);
            goto LABEL_321;
          case 240:
            *(void *)v8 |= 4uLL;
            unint64_t v121 = *((void *)a2 + 1);
            if (v121 > 0xFFFFFFFFFFFFFFFBLL || v121 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 5) = *(_DWORD *)(*(void *)a2 + v121);
            goto LABEL_321;
          case 241:
            *(void *)v8 |= 0x20uLL;
            unint64_t v122 = *((void *)a2 + 1);
            if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 8) = *(_DWORD *)(*(void *)a2 + v122);
            goto LABEL_321;
          case 242:
            *(void *)v8 |= 0x10uLL;
            unint64_t v123 = *((void *)a2 + 1);
            if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 7) = *(_DWORD *)(*(void *)a2 + v123);
            goto LABEL_321;
          case 243:
            *(void *)v8 |= 8uLL;
            unint64_t v124 = *((void *)a2 + 1);
            if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 6) = *(_DWORD *)(*(void *)a2 + v124);
            goto LABEL_321;
          case 244:
            *(void *)v8 |= 0x800uLL;
            unint64_t v125 = *((void *)a2 + 1);
            if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 14) = *(_DWORD *)(*(void *)a2 + v125);
            goto LABEL_321;
          case 245:
            *(void *)v8 |= 0x4000uLL;
            unint64_t v126 = *((void *)a2 + 1);
            if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 17) = *(_DWORD *)(*(void *)a2 + v126);
            goto LABEL_321;
          case 246:
            *(void *)v8 |= 0x2000uLL;
            unint64_t v127 = *((void *)a2 + 1);
            if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 16) = *(_DWORD *)(*(void *)a2 + v127);
            goto LABEL_321;
          case 247:
            *(void *)v8 |= 0x1000uLL;
            unint64_t v128 = *((void *)a2 + 1);
            if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 15) = *(_DWORD *)(*(void *)a2 + v128);
            goto LABEL_321;
          case 248:
            *(void *)v8 |= 0x10000uLL;
            unint64_t v129 = *((void *)a2 + 1);
            if (v129 > 0xFFFFFFFFFFFFFFFBLL || v129 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 19) = *(_DWORD *)(*(void *)a2 + v129);
            goto LABEL_321;
          case 249:
            *(void *)v8 |= 0x20000uLL;
            unint64_t v130 = *((void *)a2 + 1);
            if (v130 > 0xFFFFFFFFFFFFFFFBLL || v130 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v130);
            goto LABEL_321;
          case 250:
            *(void *)v8 |= 0x200000000000000uLL;
            unint64_t v131 = *((void *)a2 + 1);
            if (v131 > 0xFFFFFFFFFFFFFFFBLL || v131 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 60) = *(_DWORD *)(*(void *)a2 + v131);
            goto LABEL_321;
          case 251:
            *(void *)v8 |= 0x4000000000000000uLL;
            unint64_t v132 = *((void *)a2 + 1);
            if (v132 > 0xFFFFFFFFFFFFFFFBLL || v132 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 65) = *(_DWORD *)(*(void *)a2 + v132);
            goto LABEL_321;
          case 252:
            *(void *)v8 |= 0x400000uLL;
            unint64_t v133 = *((void *)a2 + 1);
            if (v133 > 0xFFFFFFFFFFFFFFFBLL || v133 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v133);
            goto LABEL_321;
          case 253:
            *(void *)v8 |= 0x400000000000uLL;
            unint64_t v134 = *((void *)a2 + 1);
            if (v134 > 0xFFFFFFFFFFFFFFFBLL || v134 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 49) = *(_DWORD *)(*(void *)a2 + v134);
            goto LABEL_321;
          case 254:
            char v135 = v8[10];
            *((_WORD *)v8 + 4) |= 0x80u;
            v8[10] = v135;
            unint64_t v136 = *((void *)a2 + 1);
            if (v136 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 74) = *(_DWORD *)(*(void *)a2 + v136);
            goto LABEL_321;
          case 255:
            *(void *)v8 |= 0x400000000000000uLL;
            unint64_t v137 = *((void *)a2 + 1);
            if (v137 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 61) = *(_DWORD *)(*(void *)a2 + v137);
            goto LABEL_321;
          case 256:
            *(void *)v8 |= 0x8000000000000000;
            unint64_t v138 = *((void *)a2 + 1);
            if (v138 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 66) = *(_DWORD *)(*(void *)a2 + v138);
            goto LABEL_321;
          case 257:
            *(void *)v8 |= 0x800000uLL;
            unint64_t v139 = *((void *)a2 + 1);
            if (v139 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 26) = *(_DWORD *)(*(void *)a2 + v139);
            goto LABEL_321;
          case 258:
            *(void *)v8 |= 0x800000000000uLL;
            unint64_t v140 = *((void *)a2 + 1);
            if (v140 > 0xFFFFFFFFFFFFFFFBLL || v140 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 50) = *(_DWORD *)(*(void *)a2 + v140);
            goto LABEL_321;
          case 259:
            char v141 = v8[10];
            *((_WORD *)v8 + 4) |= 0x100u;
            v8[10] = v141;
            unint64_t v142 = *((void *)a2 + 1);
            if (v142 > 0xFFFFFFFFFFFFFFFBLL || v142 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 75) = *(_DWORD *)(*(void *)a2 + v142);
            goto LABEL_321;
          case 260:
            *(void *)v8 |= 0x100000000uLL;
            unint64_t v143 = *((void *)a2 + 1);
            if (v143 > 0xFFFFFFFFFFFFFFFBLL || v143 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 35) = *(_DWORD *)(*(void *)a2 + v143);
            goto LABEL_321;
          case 261:
            *(void *)v8 |= 0x200000000uLL;
            unint64_t v144 = *((void *)a2 + 1);
            if (v144 > 0xFFFFFFFFFFFFFFFBLL || v144 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 36) = *(_DWORD *)(*(void *)a2 + v144);
            goto LABEL_321;
          case 262:
            *(void *)v8 |= 0x8000000uLL;
            unint64_t v145 = *((void *)a2 + 1);
            if (v145 > 0xFFFFFFFFFFFFFFFBLL || v145 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v145);
            goto LABEL_321;
          case 263:
            *(void *)v8 |= 0x4000000uLL;
            unint64_t v146 = *((void *)a2 + 1);
            if (v146 > 0xFFFFFFFFFFFFFFFBLL || v146 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 29) = *(_DWORD *)(*(void *)a2 + v146);
            goto LABEL_321;
          case 264:
            *(void *)v8 |= 0x80000000uLL;
            unint64_t v147 = *((void *)a2 + 1);
            if (v147 > 0xFFFFFFFFFFFFFFFBLL || v147 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 34) = *(_DWORD *)(*(void *)a2 + v147);
            goto LABEL_321;
          case 265:
            *(void *)v8 |= 0x40000000uLL;
            unint64_t v148 = *((void *)a2 + 1);
            if (v148 > 0xFFFFFFFFFFFFFFFBLL || v148 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v148);
            goto LABEL_321;
          case 266:
            *(void *)v8 |= 0x20000000uLL;
            unint64_t v149 = *((void *)a2 + 1);
            if (v149 > 0xFFFFFFFFFFFFFFFBLL || v149 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v149);
            goto LABEL_321;
          case 267:
            *(void *)v8 |= 0x10000000uLL;
            unint64_t v150 = *((void *)a2 + 1);
            if (v150 > 0xFFFFFFFFFFFFFFFBLL || v150 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 31) = *(_DWORD *)(*(void *)a2 + v150);
            goto LABEL_321;
          case 268:
            *(void *)v8 |= 0x10000000000uLL;
            unint64_t v151 = *((void *)a2 + 1);
            if (v151 > 0xFFFFFFFFFFFFFFFBLL || v151 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 43) = *(_DWORD *)(*(void *)a2 + v151);
            goto LABEL_321;
          case 269:
            *(void *)v8 |= 0x20000000000uLL;
            unint64_t v152 = *((void *)a2 + 1);
            if (v152 > 0xFFFFFFFFFFFFFFFBLL || v152 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 44) = *(_DWORD *)(*(void *)a2 + v152);
            goto LABEL_321;
          case 270:
            *(void *)v8 |= 0x800000000uLL;
            unint64_t v153 = *((void *)a2 + 1);
            if (v153 > 0xFFFFFFFFFFFFFFFBLL || v153 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 38) = *(_DWORD *)(*(void *)a2 + v153);
            goto LABEL_321;
          case 271:
            *(void *)v8 |= 0x400000000uLL;
            unint64_t v154 = *((void *)a2 + 1);
            if (v154 > 0xFFFFFFFFFFFFFFFBLL || v154 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 37) = *(_DWORD *)(*(void *)a2 + v154);
            goto LABEL_321;
          case 272:
            *(void *)v8 |= 0x8000000000uLL;
            unint64_t v155 = *((void *)a2 + 1);
            if (v155 > 0xFFFFFFFFFFFFFFFBLL || v155 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 42) = *(_DWORD *)(*(void *)a2 + v155);
            goto LABEL_321;
          case 273:
            *(void *)v8 |= 0x4000000000uLL;
            unint64_t v156 = *((void *)a2 + 1);
            if (v156 > 0xFFFFFFFFFFFFFFFBLL || v156 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 41) = *(_DWORD *)(*(void *)a2 + v156);
            goto LABEL_321;
          case 274:
            *(void *)v8 |= 0x2000000000uLL;
            unint64_t v157 = *((void *)a2 + 1);
            if (v157 > 0xFFFFFFFFFFFFFFFBLL || v157 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 40) = *(_DWORD *)(*(void *)a2 + v157);
            goto LABEL_321;
          case 275:
            *(void *)v8 |= 0x1000000000uLL;
            unint64_t v158 = *((void *)a2 + 1);
            if (v158 > 0xFFFFFFFFFFFFFFFBLL || v158 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 39) = *(_DWORD *)(*(void *)a2 + v158);
            goto LABEL_321;
          case 276:
            char v159 = v8[10];
            *((_WORD *)v8 + 4) |= 2u;
            v8[10] = v159;
            unint64_t v160 = *((void *)a2 + 1);
            if (v160 > 0xFFFFFFFFFFFFFFFBLL || v160 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 68) = *(_DWORD *)(*(void *)a2 + v160);
            goto LABEL_321;
          case 277:
            char v161 = v8[10];
            *((_WORD *)v8 + 4) |= 4u;
            v8[10] = v161;
            unint64_t v162 = *((void *)a2 + 1);
            if (v162 > 0xFFFFFFFFFFFFFFFBLL || v162 + 4 > *((void *)a2 + 2)) {
              goto LABEL_269;
            }
            *((_DWORD *)this + 69) = *(_DWORD *)(*(void *)a2 + v162);
            goto LABEL_321;
          case 278:
            char v163 = v8[10];
            *((_WORD *)v8 + 4) |= 1u;
            v8[10] = v163;
            unint64_t v164 = *((void *)a2 + 1);
            if (v164 <= 0xFFFFFFFFFFFFFFFBLL && v164 + 4 <= *((void *)a2 + 2))
            {
              *((_DWORD *)this + 67) = *(_DWORD *)(*(void *)a2 + v164);
LABEL_321:
              *((void *)a2 + 1) += 4;
            }
            else
            {
LABEL_269:
              *((unsigned char *)a2 + 24) = 1;
            }
            goto LABEL_322;
          default:
            goto LABEL_20;
        }
        while (1)
        {
          if (v86 == v85)
          {
            LODWORD(v90) = 0;
            *((unsigned char *)a2 + 24) = 1;
            goto LABEL_334;
          }
          unint64_t v184 = v85 + 1;
          char v185 = *(unsigned char *)(v87 + v85);
          *((void *)a2 + 1) = v184;
          v90 |= (unint64_t)(v185 & 0x7F) << v182;
          if ((v185 & 0x80) == 0) {
            break;
          }
          v182 += 7;
          unint64_t v85 = v184;
          BOOL v15 = v183++ > 8;
          if (v15) {
            goto LABEL_308;
          }
        }
        if (*((unsigned char *)a2 + 24)) {
          LODWORD(v90) = 0;
        }
LABEL_334:
        *((_DWORD *)this + 55) = v90;
      }
LABEL_322:
      unint64_t v2 = *((void *)a2 + 1);
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v16 = 0;
    unsigned int v17 = 0;
    unint64_t v12 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v18 = v2 + 1;
      char v19 = *(unsigned char *)(v9 + v2);
      *((void *)a2 + 1) = v18;
      v12 |= (unint64_t)(v19 & 0x7F) << v16;
      if ((v19 & 0x80) == 0) {
        goto LABEL_22;
      }
      v16 += 7;
      unint64_t v2 = v18;
      BOOL v15 = v17++ > 8;
      if (v15) {
        goto LABEL_20;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KappaRolloverCrashResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = (uint64_t *)(this + 316);
  uint64_t v5 = *(void *)(this + 316);
  if (v5)
  {
    this = PB::Writer::writeVarInt(a2);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
    if ((v4[1] & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  int v6 = *(unsigned __int16 *)(this + 324);
  int v7 = v6 | (*(unsigned __int8 *)(this + 326) << 16);
  if ((v6 & 0x8000) != 0)
  {
LABEL_5:
    this = PB::Writer::write(a2);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
  }
LABEL_6:
  if ((v7 & 0x10000) != 0)
  {
    this = PB::Writer::write(a2);
    int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
    uint64_t v5 = *v4;
    if ((*v4 & 0x40000000000) == 0)
    {
LABEL_8:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_90;
    }
  }
  else if ((v5 & 0x40000000000) == 0)
  {
    goto LABEL_8;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 180));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000) == 0)
  {
LABEL_9:
    if ((v7 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_91;
  }
LABEL_90:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 8) == 0)
  {
LABEL_10:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_92;
  }
LABEL_91:
  this = PB::Writer::write(a2, *(float *)(v3 + 280));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x2000) == 0)
  {
LABEL_11:
    if ((v7 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_93;
  }
LABEL_92:
  this = PB::Writer::write(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x400) == 0)
  {
LABEL_12:
    if ((v7 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_94;
  }
LABEL_93:
  this = PB::Writer::write(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_95;
  }
LABEL_94:
  this = PB::Writer::write(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_14:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_96;
  }
LABEL_95:
  this = PB::Writer::writeVarInt(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x1000) == 0)
  {
LABEL_15:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_97;
  }
LABEL_96:
  this = PB::Writer::write(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x2000000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_98;
  }
LABEL_97:
  this = PB::Writer::write(a2, *(float *)(v3 + 108));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_99;
  }
LABEL_98:
  this = PB::Writer::write(a2, *(float *)(v3 + 208));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_100;
  }
LABEL_99:
  this = PB::Writer::write(a2, *(float *)(v3 + 204));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_101;
  }
LABEL_100:
  this = PB::Writer::write(a2, *(float *)(v3 + 212));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40) == 0)
  {
LABEL_20:
    if ((v5 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_102;
  }
LABEL_101:
  this = PB::Writer::write(a2, *(float *)(v3 + 36));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 2) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_103;
  }
LABEL_102:
  this = PB::Writer::write(a2, *(float *)(v3 + 16));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000) == 0)
  {
LABEL_22:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_104;
  }
LABEL_103:
  this = PB::Writer::write(a2, *(float *)(v3 + 72));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v7 & 0x40000) == 0)
  {
LABEL_23:
    if ((v7 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_105;
  }
LABEL_104:
  this = PB::Writer::write(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x800) == 0)
  {
LABEL_24:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_106;
  }
LABEL_105:
  this = PB::Writer::write(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x4000) == 0)
  {
LABEL_25:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_107;
  }
LABEL_106:
  this = PB::Writer::write(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_108;
  }
LABEL_107:
  this = PB::Writer::write(a2, *(float *)(v3 + 224));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x10000000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_109;
  }
LABEL_108:
  this = PB::Writer::write(a2, *(float *)(v3 + 216));
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000000000) == 0)
  {
LABEL_28:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_110;
  }
LABEL_109:
  this = PB::Writer::writeVarInt(a2);
  int v7 = *((unsigned __int16 *)v4 + 4) | (*((unsigned __int8 *)v4 + 10) << 16);
  uint64_t v5 = *v4;
  if ((v7 & 0x20000) == 0)
  {
LABEL_29:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_111;
  }
LABEL_110:
  this = PB::Writer::write(a2);
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_112;
  }
LABEL_111:
  this = PB::Writer::write(a2, *(float *)(v3 + 228));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }
LABEL_112:
  this = PB::Writer::write(a2, *(float *)(v3 + 248));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_114;
  }
LABEL_113:
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x10) == 0) {
      goto LABEL_34;
    }
    goto LABEL_115;
  }
LABEL_114:
  this = PB::Writer::write(a2, *(float *)(v3 + 184));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x10) == 0)
  {
LABEL_34:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_116;
  }
LABEL_115:
  this = PB::Writer::write(a2, *(float *)(v3 + 284));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_117;
  }
LABEL_116:
  this = PB::Writer::write(a2, *(float *)(v3 + 232));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_118;
  }
LABEL_117:
  this = PB::Writer::write(a2, *(float *)(v3 + 252));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000) == 0)
  {
LABEL_37:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_119;
  }
LABEL_118:
  this = PB::Writer::write(a2, *(float *)(v3 + 92));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_120;
  }
LABEL_119:
  this = PB::Writer::write(a2, *(float *)(v3 + 188));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_121;
  }
LABEL_120:
  this = PB::Writer::write(a2, *(float *)(v3 + 288));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_122;
  }
LABEL_121:
  this = PB::Writer::write(a2, *(float *)(v3 + 236));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_123;
  }
LABEL_122:
  this = PB::Writer::write(a2, *(float *)(v3 + 256));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000) == 0)
  {
LABEL_42:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_124;
  }
LABEL_123:
  this = PB::Writer::write(a2, *(float *)(v3 + 96));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x40) == 0) {
      goto LABEL_44;
    }
    goto LABEL_125;
  }
LABEL_124:
  this = PB::Writer::write(a2, *(float *)(v3 + 192));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x40) == 0)
  {
LABEL_44:
    if ((v5 & 0x80) == 0) {
      goto LABEL_45;
    }
    goto LABEL_126;
  }
LABEL_125:
  this = PB::Writer::write(a2, *(float *)(v3 + 292));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80) == 0)
  {
LABEL_45:
    if ((v5 & 0x400) == 0) {
      goto LABEL_46;
    }
    goto LABEL_127;
  }
LABEL_126:
  this = PB::Writer::write(a2, *(float *)(v3 + 40));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400) == 0)
  {
LABEL_46:
    if ((v5 & 0x200) == 0) {
      goto LABEL_47;
    }
    goto LABEL_128;
  }
LABEL_127:
  this = PB::Writer::write(a2, *(float *)(v3 + 52));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200) == 0)
  {
LABEL_47:
    if ((v5 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_129;
  }
LABEL_128:
  this = PB::Writer::write(a2, *(float *)(v3 + 48));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100) == 0)
  {
LABEL_48:
    if ((v5 & 4) == 0) {
      goto LABEL_49;
    }
    goto LABEL_130;
  }
LABEL_129:
  this = PB::Writer::write(a2, *(float *)(v3 + 44));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 4) == 0)
  {
LABEL_49:
    if ((v5 & 0x20) == 0) {
      goto LABEL_50;
    }
    goto LABEL_131;
  }
LABEL_130:
  this = PB::Writer::write(a2, *(float *)(v3 + 20));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20) == 0)
  {
LABEL_50:
    if ((v5 & 0x10) == 0) {
      goto LABEL_51;
    }
    goto LABEL_132;
  }
LABEL_131:
  this = PB::Writer::write(a2, *(float *)(v3 + 32));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_51:
    if ((v5 & 8) == 0) {
      goto LABEL_52;
    }
    goto LABEL_133;
  }
LABEL_132:
  this = PB::Writer::write(a2, *(float *)(v3 + 28));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_52:
    if ((v5 & 0x800) == 0) {
      goto LABEL_53;
    }
    goto LABEL_134;
  }
LABEL_133:
  this = PB::Writer::write(a2, *(float *)(v3 + 24));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800) == 0)
  {
LABEL_53:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_135;
  }
LABEL_134:
  this = PB::Writer::write(a2, *(float *)(v3 + 56));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000) == 0)
  {
LABEL_54:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_136;
  }
LABEL_135:
  this = PB::Writer::write(a2, *(float *)(v3 + 68));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000) == 0)
  {
LABEL_55:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_137;
  }
LABEL_136:
  this = PB::Writer::write(a2, *(float *)(v3 + 64));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x1000) == 0)
  {
LABEL_56:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_138;
  }
LABEL_137:
  this = PB::Writer::write(a2, *(float *)(v3 + 60));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000) == 0)
  {
LABEL_57:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_139;
  }
LABEL_138:
  this = PB::Writer::write(a2, *(float *)(v3 + 76));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000) == 0)
  {
LABEL_58:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_140;
  }
LABEL_139:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_141;
  }
LABEL_140:
  this = PB::Writer::write(a2, *(float *)(v3 + 240));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_142;
  }
LABEL_141:
  this = PB::Writer::write(a2, *(float *)(v3 + 260));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000) == 0)
  {
LABEL_61:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_143;
  }
LABEL_142:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x80) == 0) {
      goto LABEL_63;
    }
    goto LABEL_144;
  }
LABEL_143:
  this = PB::Writer::write(a2, *(float *)(v3 + 196));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x80) == 0)
  {
LABEL_63:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_145;
  }
LABEL_144:
  this = PB::Writer::write(a2, *(float *)(v3 + 296));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_64:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_146;
  }
LABEL_145:
  this = PB::Writer::write(a2, *(float *)(v3 + 244));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_147;
  }
LABEL_146:
  this = PB::Writer::write(a2, *(float *)(v3 + 264));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000) == 0)
  {
LABEL_66:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_148;
  }
LABEL_147:
  this = PB::Writer::write(a2, *(float *)(v3 + 104));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_67:
    if ((v7 & 0x100) == 0) {
      goto LABEL_68;
    }
    goto LABEL_149;
  }
LABEL_148:
  this = PB::Writer::write(a2, *(float *)(v3 + 200));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((v7 & 0x100) == 0)
  {
LABEL_68:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_150;
  }
LABEL_149:
  this = PB::Writer::write(a2, *(float *)(v3 + 300));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_151;
  }
LABEL_150:
  this = PB::Writer::write(a2, *(float *)(v3 + 140));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x200000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_152;
  }
LABEL_151:
  this = PB::Writer::write(a2, *(float *)(v3 + 144));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_153;
  }
LABEL_152:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_154;
  }
LABEL_153:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_73:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_155;
  }
LABEL_154:
  this = PB::Writer::write(a2, *(float *)(v3 + 136));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_74:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_156;
  }
LABEL_155:
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_157;
  }
LABEL_156:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_158;
  }
LABEL_157:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_77:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_159;
  }
LABEL_158:
  this = PB::Writer::write(a2, *(float *)(v3 + 172));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_78:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_160;
  }
LABEL_159:
  this = PB::Writer::write(a2, *(float *)(v3 + 176));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_79:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_161;
  }
LABEL_160:
  this = PB::Writer::write(a2, *(float *)(v3 + 152));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_80:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_162;
  }
LABEL_161:
  this = PB::Writer::write(a2, *(float *)(v3 + 148));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_81:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_163;
  }
LABEL_162:
  this = PB::Writer::write(a2, *(float *)(v3 + 168));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_82:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_164;
  }
LABEL_163:
  this = PB::Writer::write(a2, *(float *)(v3 + 164));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  uint64_t v5 = *v4;
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_83:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_165;
  }
LABEL_164:
  this = PB::Writer::write(a2, *(float *)(v3 + 160));
  LOWORD(v7) = *((_WORD *)v4 + 4);
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_84:
    if ((v7 & 2) == 0) {
      goto LABEL_85;
    }
    goto LABEL_166;
  }
LABEL_165:
  this = PB::Writer::write(a2, *(float *)(v3 + 156));
  LOBYTE(v7) = *((_WORD *)v4 + 4);
  if ((v4[1] & 2) == 0)
  {
LABEL_85:
    if ((v7 & 4) == 0) {
      goto LABEL_86;
    }
LABEL_167:
    this = PB::Writer::write(a2, *(float *)(v3 + 276));
    if ((v4[1] & 1) == 0) {
      return this;
    }
    goto LABEL_168;
  }
LABEL_166:
  this = PB::Writer::write(a2, *(float *)(v3 + 272));
  LOBYTE(v7) = *((_WORD *)v4 + 4);
  if ((v4[1] & 4) != 0) {
    goto LABEL_167;
  }
LABEL_86:
  if ((v7 & 1) == 0) {
    return this;
  }
LABEL_168:
  float v8 = *(float *)(v3 + 268);
  return PB::Writer::write(a2, v8);
}

uint64_t CMMsl::KappaRolloverCrashResult::hash_value(CMMsl::KappaRolloverCrashResult *this)
{
  int v1 = *((unsigned __int16 *)this + 162) | (*((unsigned __int8 *)this + 326) << 16);
  uint64_t v2 = *(void *)((char *)this + 316);
  if (v2)
  {
    uint64_t v3 = *((void *)this + 1);
    if ((*((_WORD *)this + 162) & 0x8000) != 0)
    {
LABEL_3:
      uint64_t v200 = *((unsigned __int8 *)this + 310);
      if ((v1 & 0x10000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_249;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((_WORD *)this + 162) & 0x8000) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v200 = 0;
  if ((v1 & 0x10000) != 0)
  {
LABEL_4:
    uint64_t v199 = *((unsigned __int8 *)this + 311);
    if ((v2 & 0x40000000000) != 0) {
      goto LABEL_5;
    }
LABEL_250:
    uint64_t v198 = 0;
    if ((v2 & 0x40000) != 0) {
      goto LABEL_8;
    }
LABEL_251:
    uint64_t v197 = 0;
    if ((*((_WORD *)this + 162) & 8) != 0) {
      goto LABEL_11;
    }
LABEL_252:
    uint64_t v196 = 0;
    if ((*((_WORD *)this + 162) & 0x2000) != 0) {
      goto LABEL_14;
    }
    goto LABEL_253;
  }
LABEL_249:
  uint64_t v199 = 0;
  if ((v2 & 0x40000000000) == 0) {
    goto LABEL_250;
  }
LABEL_5:
  float v4 = *((float *)this + 45);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  uint64_t v198 = v5;
  if ((v2 & 0x40000) == 0) {
    goto LABEL_251;
  }
LABEL_8:
  float v6 = *((float *)this + 21);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  uint64_t v197 = v7;
  if ((*((_WORD *)this + 162) & 8) == 0) {
    goto LABEL_252;
  }
LABEL_11:
  float v8 = *((float *)this + 70);
  uint64_t v9 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v9 = 0;
  }
  uint64_t v196 = v9;
  if ((*((_WORD *)this + 162) & 0x2000) != 0)
  {
LABEL_14:
    uint64_t v195 = *((unsigned __int8 *)this + 308);
    if ((*((_WORD *)this + 162) & 0x400) != 0) {
      goto LABEL_15;
    }
    goto LABEL_254;
  }
LABEL_253:
  uint64_t v195 = 0;
  if ((*((_WORD *)this + 162) & 0x400) != 0)
  {
LABEL_15:
    uint64_t v194 = *((unsigned __int8 *)this + 305);
    if ((*((_WORD *)this + 162) & 0x200) != 0) {
      goto LABEL_16;
    }
    goto LABEL_255;
  }
LABEL_254:
  uint64_t v194 = 0;
  if ((*((_WORD *)this + 162) & 0x200) != 0)
  {
LABEL_16:
    uint64_t v193 = *((unsigned __int8 *)this + 304);
    if ((v2 & 0x2000000) != 0) {
      goto LABEL_17;
    }
    goto LABEL_256;
  }
LABEL_255:
  uint64_t v193 = 0;
  if ((v2 & 0x2000000) != 0)
  {
LABEL_17:
    uint64_t v192 = *((int *)this + 28);
    if ((*((_WORD *)this + 162) & 0x1000) != 0) {
      goto LABEL_18;
    }
    goto LABEL_257;
  }
LABEL_256:
  uint64_t v192 = 0;
  if ((*((_WORD *)this + 162) & 0x1000) != 0)
  {
LABEL_18:
    uint64_t v191 = *((unsigned __int8 *)this + 307);
    if ((v2 & 0x1000000) != 0) {
      goto LABEL_19;
    }
LABEL_258:
    uint64_t v190 = 0;
    if ((v2 & 0x2000000000000) != 0) {
      goto LABEL_22;
    }
LABEL_259:
    uint64_t v189 = 0;
    if ((v2 & 0x1000000000000) != 0) {
      goto LABEL_25;
    }
LABEL_260:
    uint64_t v188 = 0;
    if ((v2 & 0x4000000000000) != 0) {
      goto LABEL_28;
    }
LABEL_261:
    uint64_t v187 = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_31;
    }
LABEL_262:
    uint64_t v186 = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_34;
    }
LABEL_263:
    uint64_t v185 = 0;
    if ((v2 & 0x8000) != 0) {
      goto LABEL_37;
    }
LABEL_264:
    uint64_t v184 = 0;
    if ((v1 & 0x40000) != 0) {
      goto LABEL_40;
    }
    goto LABEL_265;
  }
LABEL_257:
  uint64_t v191 = 0;
  if ((v2 & 0x1000000) == 0) {
    goto LABEL_258;
  }
LABEL_19:
  float v10 = *((float *)this + 27);
  uint64_t v11 = LODWORD(v10);
  if (v10 == 0.0) {
    uint64_t v11 = 0;
  }
  uint64_t v190 = v11;
  if ((v2 & 0x2000000000000) == 0) {
    goto LABEL_259;
  }
LABEL_22:
  float v12 = *((float *)this + 52);
  uint64_t v13 = LODWORD(v12);
  if (v12 == 0.0) {
    uint64_t v13 = 0;
  }
  uint64_t v189 = v13;
  if ((v2 & 0x1000000000000) == 0) {
    goto LABEL_260;
  }
LABEL_25:
  float v14 = *((float *)this + 51);
  uint64_t v15 = LODWORD(v14);
  if (v14 == 0.0) {
    uint64_t v15 = 0;
  }
  uint64_t v188 = v15;
  if ((v2 & 0x4000000000000) == 0) {
    goto LABEL_261;
  }
LABEL_28:
  float v16 = *((float *)this + 53);
  uint64_t v17 = LODWORD(v16);
  if (v16 == 0.0) {
    uint64_t v17 = 0;
  }
  uint64_t v187 = v17;
  if ((v2 & 0x40) == 0) {
    goto LABEL_262;
  }
LABEL_31:
  float v18 = *((float *)this + 9);
  uint64_t v19 = LODWORD(v18);
  if (v18 == 0.0) {
    uint64_t v19 = 0;
  }
  uint64_t v186 = v19;
  if ((v2 & 2) == 0) {
    goto LABEL_263;
  }
LABEL_34:
  float v20 = *((float *)this + 4);
  uint64_t v21 = LODWORD(v20);
  if (v20 == 0.0) {
    uint64_t v21 = 0;
  }
  uint64_t v185 = v21;
  if ((v2 & 0x8000) == 0) {
    goto LABEL_264;
  }
LABEL_37:
  float v22 = *((float *)this + 18);
  uint64_t v23 = LODWORD(v22);
  if (v22 == 0.0) {
    uint64_t v23 = 0;
  }
  uint64_t v184 = v23;
  if ((v1 & 0x40000) != 0)
  {
LABEL_40:
    uint64_t v183 = *((unsigned __int8 *)this + 313);
    if ((*((_WORD *)this + 162) & 0x800) != 0) {
      goto LABEL_41;
    }
    goto LABEL_266;
  }
LABEL_265:
  uint64_t v183 = 0;
  if ((*((_WORD *)this + 162) & 0x800) != 0)
  {
LABEL_41:
    uint64_t v182 = *((unsigned __int8 *)this + 306);
    if ((*((_WORD *)this + 162) & 0x4000) != 0) {
      goto LABEL_42;
    }
    goto LABEL_267;
  }
LABEL_266:
  uint64_t v182 = 0;
  if ((*((_WORD *)this + 162) & 0x4000) != 0)
  {
LABEL_42:
    uint64_t v181 = *((unsigned __int8 *)this + 309);
    if ((v2 & 0x20000000000000) != 0) {
      goto LABEL_43;
    }
LABEL_268:
    uint64_t v180 = 0;
    if ((v2 & 0x8000000000000) != 0) {
      goto LABEL_46;
    }
LABEL_269:
    uint64_t v179 = 0;
    if ((v2 & 0x10000000000000) != 0) {
      goto LABEL_49;
    }
    goto LABEL_270;
  }
LABEL_267:
  uint64_t v181 = 0;
  if ((v2 & 0x20000000000000) == 0) {
    goto LABEL_268;
  }
LABEL_43:
  float v24 = *((float *)this + 56);
  uint64_t v25 = LODWORD(v24);
  if (v24 == 0.0) {
    uint64_t v25 = 0;
  }
  uint64_t v180 = v25;
  if ((v2 & 0x8000000000000) == 0) {
    goto LABEL_269;
  }
LABEL_46:
  float v26 = *((float *)this + 54);
  uint64_t v27 = LODWORD(v26);
  if (v26 == 0.0) {
    uint64_t v27 = 0;
  }
  uint64_t v179 = v27;
  if ((v2 & 0x10000000000000) != 0)
  {
LABEL_49:
    uint64_t v178 = *((int *)this + 55);
    if ((v1 & 0x20000) != 0) {
      goto LABEL_50;
    }
    goto LABEL_271;
  }
LABEL_270:
  uint64_t v178 = 0;
  if ((v1 & 0x20000) != 0)
  {
LABEL_50:
    uint64_t v177 = *((unsigned __int8 *)this + 312);
    if ((v2 & 0x40000000000000) != 0) {
      goto LABEL_51;
    }
LABEL_272:
    uint64_t v176 = 0;
    if ((v2 & 0x800000000000000) != 0) {
      goto LABEL_54;
    }
LABEL_273:
    uint64_t v175 = 0;
    if ((v2 & 0x80000) != 0) {
      goto LABEL_57;
    }
LABEL_274:
    uint64_t v174 = 0;
    if ((v2 & 0x80000000000) != 0) {
      goto LABEL_60;
    }
LABEL_275:
    uint64_t v173 = 0;
    if ((*((_WORD *)this + 162) & 0x10) != 0) {
      goto LABEL_63;
    }
LABEL_276:
    uint64_t v172 = 0;
    if ((v2 & 0x80000000000000) != 0) {
      goto LABEL_66;
    }
LABEL_277:
    uint64_t v171 = 0;
    if ((v2 & 0x1000000000000000) != 0) {
      goto LABEL_69;
    }
LABEL_278:
    uint64_t v170 = 0;
    if ((v2 & 0x100000) != 0) {
      goto LABEL_72;
    }
LABEL_279:
    uint64_t v169 = 0;
    if ((v2 & 0x100000000000) != 0) {
      goto LABEL_75;
    }
LABEL_280:
    uint64_t v168 = 0;
    if ((*((_WORD *)this + 162) & 0x20) != 0) {
      goto LABEL_78;
    }
LABEL_281:
    uint64_t v167 = 0;
    if ((v2 & 0x100000000000000) != 0) {
      goto LABEL_81;
    }
LABEL_282:
    uint64_t v166 = 0;
    if ((v2 & 0x2000000000000000) != 0) {
      goto LABEL_84;
    }
LABEL_283:
    uint64_t v165 = 0;
    if ((v2 & 0x200000) != 0) {
      goto LABEL_87;
    }
LABEL_284:
    uint64_t v164 = 0;
    if ((v2 & 0x200000000000) != 0) {
      goto LABEL_90;
    }
LABEL_285:
    uint64_t v163 = 0;
    if ((*((_WORD *)this + 162) & 0x40) != 0) {
      goto LABEL_93;
    }
LABEL_286:
    uint64_t v162 = 0;
    if ((v2 & 0x80) != 0) {
      goto LABEL_96;
    }
LABEL_287:
    uint64_t v161 = 0;
    if ((v2 & 0x400) != 0) {
      goto LABEL_99;
    }
LABEL_288:
    uint64_t v160 = 0;
    if ((v2 & 0x200) != 0) {
      goto LABEL_102;
    }
LABEL_289:
    uint64_t v159 = 0;
    if ((v2 & 0x100) != 0) {
      goto LABEL_105;
    }
LABEL_290:
    uint64_t v158 = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_108;
    }
LABEL_291:
    uint64_t v157 = 0;
    if ((v2 & 0x20) != 0) {
      goto LABEL_111;
    }
LABEL_292:
    uint64_t v156 = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_114;
    }
LABEL_293:
    uint64_t v155 = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_117;
    }
LABEL_294:
    uint64_t v154 = 0;
    if ((v2 & 0x800) != 0) {
      goto LABEL_120;
    }
LABEL_295:
    uint64_t v153 = 0;
    if ((v2 & 0x4000) != 0) {
      goto LABEL_123;
    }
LABEL_296:
    uint64_t v152 = 0;
    if ((v2 & 0x2000) != 0) {
      goto LABEL_126;
    }
LABEL_297:
    uint64_t v151 = 0;
    if ((v2 & 0x1000) != 0) {
      goto LABEL_129;
    }
LABEL_298:
    uint64_t v150 = 0;
    if ((v2 & 0x10000) != 0) {
      goto LABEL_132;
    }
LABEL_299:
    uint64_t v149 = 0;
    if ((v2 & 0x20000) != 0) {
      goto LABEL_135;
    }
LABEL_300:
    uint64_t v148 = 0;
    if ((v2 & 0x200000000000000) != 0) {
      goto LABEL_138;
    }
LABEL_301:
    uint64_t v147 = 0;
    if ((v2 & 0x4000000000000000) != 0) {
      goto LABEL_141;
    }
LABEL_302:
    uint64_t v146 = 0;
    if ((v2 & 0x400000) != 0) {
      goto LABEL_144;
    }
LABEL_303:
    uint64_t v145 = 0;
    if ((v2 & 0x400000000000) != 0) {
      goto LABEL_147;
    }
LABEL_304:
    uint64_t v93 = 0;
    if ((*((_WORD *)this + 162) & 0x80) != 0) {
      goto LABEL_151;
    }
LABEL_305:
    uint64_t v95 = 0;
    if ((v2 & 0x400000000000000) != 0) {
      goto LABEL_155;
    }
LABEL_306:
    uint64_t v97 = 0;
    if (v2 < 0) {
      goto LABEL_159;
    }
LABEL_307:
    uint64_t v99 = 0;
    if ((v2 & 0x800000) != 0) {
      goto LABEL_163;
    }
LABEL_308:
    uint64_t v101 = 0;
    if ((v2 & 0x800000000000) != 0) {
      goto LABEL_167;
    }
LABEL_309:
    uint64_t v103 = 0;
    if ((*((_WORD *)this + 162) & 0x100) != 0) {
      goto LABEL_171;
    }
LABEL_310:
    uint64_t v105 = 0;
    if ((v2 & 0x100000000) != 0) {
      goto LABEL_175;
    }
LABEL_311:
    uint64_t v107 = 0;
    if ((v2 & 0x200000000) != 0) {
      goto LABEL_179;
    }
LABEL_312:
    uint64_t v109 = 0;
    if ((v2 & 0x8000000) != 0) {
      goto LABEL_183;
    }
LABEL_313:
    uint64_t v111 = 0;
    if ((v2 & 0x4000000) != 0) {
      goto LABEL_187;
    }
LABEL_314:
    uint64_t v113 = 0;
    if ((v2 & 0x80000000) != 0) {
      goto LABEL_191;
    }
LABEL_315:
    uint64_t v115 = 0;
    if ((v2 & 0x40000000) != 0) {
      goto LABEL_195;
    }
LABEL_316:
    uint64_t v117 = 0;
    if ((v2 & 0x20000000) != 0) {
      goto LABEL_199;
    }
LABEL_317:
    uint64_t v119 = 0;
    if ((v2 & 0x10000000) != 0) {
      goto LABEL_203;
    }
LABEL_318:
    uint64_t v121 = 0;
    if ((v2 & 0x10000000000) != 0) {
      goto LABEL_207;
    }
LABEL_319:
    uint64_t v123 = 0;
    if ((v2 & 0x20000000000) != 0) {
      goto LABEL_211;
    }
LABEL_320:
    uint64_t v125 = 0;
    if ((v2 & 0x800000000) != 0) {
      goto LABEL_215;
    }
LABEL_321:
    uint64_t v127 = 0;
    if ((v2 & 0x400000000) != 0) {
      goto LABEL_219;
    }
LABEL_322:
    uint64_t v129 = 0;
    if ((v2 & 0x8000000000) != 0) {
      goto LABEL_223;
    }
LABEL_323:
    uint64_t v131 = 0;
    if ((v2 & 0x4000000000) != 0) {
      goto LABEL_227;
    }
LABEL_324:
    uint64_t v133 = 0;
    if ((v2 & 0x2000000000) != 0) {
      goto LABEL_231;
    }
LABEL_325:
    uint64_t v135 = 0;
    if ((v2 & 0x1000000000) != 0) {
      goto LABEL_234;
    }
LABEL_326:
    uint64_t v137 = 0;
    if ((*((_WORD *)this + 162) & 2) != 0) {
      goto LABEL_238;
    }
LABEL_327:
    uint64_t v139 = 0;
    if ((*((_WORD *)this + 162) & 4) != 0) {
      goto LABEL_241;
    }
    goto LABEL_328;
  }
LABEL_271:
  uint64_t v177 = 0;
  if ((v2 & 0x40000000000000) == 0) {
    goto LABEL_272;
  }
LABEL_51:
  float v28 = *((float *)this + 57);
  uint64_t v29 = LODWORD(v28);
  if (v28 == 0.0) {
    uint64_t v29 = 0;
  }
  uint64_t v176 = v29;
  if ((v2 & 0x800000000000000) == 0) {
    goto LABEL_273;
  }
LABEL_54:
  float v30 = *((float *)this + 62);
  uint64_t v31 = LODWORD(v30);
  if (v30 == 0.0) {
    uint64_t v31 = 0;
  }
  uint64_t v175 = v31;
  if ((v2 & 0x80000) == 0) {
    goto LABEL_274;
  }
LABEL_57:
  float v32 = *((float *)this + 22);
  uint64_t v33 = LODWORD(v32);
  if (v32 == 0.0) {
    uint64_t v33 = 0;
  }
  uint64_t v174 = v33;
  if ((v2 & 0x80000000000) == 0) {
    goto LABEL_275;
  }
LABEL_60:
  float v34 = *((float *)this + 46);
  uint64_t v35 = LODWORD(v34);
  if (v34 == 0.0) {
    uint64_t v35 = 0;
  }
  uint64_t v173 = v35;
  if ((*((_WORD *)this + 162) & 0x10) == 0) {
    goto LABEL_276;
  }
LABEL_63:
  float v36 = *((float *)this + 71);
  uint64_t v37 = LODWORD(v36);
  if (v36 == 0.0) {
    uint64_t v37 = 0;
  }
  uint64_t v172 = v37;
  if ((v2 & 0x80000000000000) == 0) {
    goto LABEL_277;
  }
LABEL_66:
  float v38 = *((float *)this + 58);
  uint64_t v39 = LODWORD(v38);
  if (v38 == 0.0) {
    uint64_t v39 = 0;
  }
  uint64_t v171 = v39;
  if ((v2 & 0x1000000000000000) == 0) {
    goto LABEL_278;
  }
LABEL_69:
  float v40 = *((float *)this + 63);
  uint64_t v41 = LODWORD(v40);
  if (v40 == 0.0) {
    uint64_t v41 = 0;
  }
  uint64_t v170 = v41;
  if ((v2 & 0x100000) == 0) {
    goto LABEL_279;
  }
LABEL_72:
  float v42 = *((float *)this + 23);
  uint64_t v43 = LODWORD(v42);
  if (v42 == 0.0) {
    uint64_t v43 = 0;
  }
  uint64_t v169 = v43;
  if ((v2 & 0x100000000000) == 0) {
    goto LABEL_280;
  }
LABEL_75:
  float v44 = *((float *)this + 47);
  uint64_t v45 = LODWORD(v44);
  if (v44 == 0.0) {
    uint64_t v45 = 0;
  }
  uint64_t v168 = v45;
  if ((*((_WORD *)this + 162) & 0x20) == 0) {
    goto LABEL_281;
  }
LABEL_78:
  float v46 = *((float *)this + 72);
  uint64_t v47 = LODWORD(v46);
  if (v46 == 0.0) {
    uint64_t v47 = 0;
  }
  uint64_t v167 = v47;
  if ((v2 & 0x100000000000000) == 0) {
    goto LABEL_282;
  }
LABEL_81:
  float v48 = *((float *)this + 59);
  uint64_t v49 = LODWORD(v48);
  if (v48 == 0.0) {
    uint64_t v49 = 0;
  }
  uint64_t v166 = v49;
  if ((v2 & 0x2000000000000000) == 0) {
    goto LABEL_283;
  }
LABEL_84:
  float v50 = *((float *)this + 64);
  uint64_t v51 = LODWORD(v50);
  if (v50 == 0.0) {
    uint64_t v51 = 0;
  }
  uint64_t v165 = v51;
  if ((v2 & 0x200000) == 0) {
    goto LABEL_284;
  }
LABEL_87:
  float v52 = *((float *)this + 24);
  uint64_t v53 = LODWORD(v52);
  if (v52 == 0.0) {
    uint64_t v53 = 0;
  }
  uint64_t v164 = v53;
  if ((v2 & 0x200000000000) == 0) {
    goto LABEL_285;
  }
LABEL_90:
  float v54 = *((float *)this + 48);
  uint64_t v55 = LODWORD(v54);
  if (v54 == 0.0) {
    uint64_t v55 = 0;
  }
  uint64_t v163 = v55;
  if ((*((_WORD *)this + 162) & 0x40) == 0) {
    goto LABEL_286;
  }
LABEL_93:
  float v56 = *((float *)this + 73);
  uint64_t v57 = LODWORD(v56);
  if (v56 == 0.0) {
    uint64_t v57 = 0;
  }
  uint64_t v162 = v57;
  if ((v2 & 0x80) == 0) {
    goto LABEL_287;
  }
LABEL_96:
  float v58 = *((float *)this + 10);
  uint64_t v59 = LODWORD(v58);
  if (v58 == 0.0) {
    uint64_t v59 = 0;
  }
  uint64_t v161 = v59;
  if ((v2 & 0x400) == 0) {
    goto LABEL_288;
  }
LABEL_99:
  float v60 = *((float *)this + 13);
  uint64_t v61 = LODWORD(v60);
  if (v60 == 0.0) {
    uint64_t v61 = 0;
  }
  uint64_t v160 = v61;
  if ((v2 & 0x200) == 0) {
    goto LABEL_289;
  }
LABEL_102:
  float v62 = *((float *)this + 12);
  uint64_t v63 = LODWORD(v62);
  if (v62 == 0.0) {
    uint64_t v63 = 0;
  }
  uint64_t v159 = v63;
  if ((v2 & 0x100) == 0) {
    goto LABEL_290;
  }
LABEL_105:
  float v64 = *((float *)this + 11);
  uint64_t v65 = LODWORD(v64);
  if (v64 == 0.0) {
    uint64_t v65 = 0;
  }
  uint64_t v158 = v65;
  if ((v2 & 4) == 0) {
    goto LABEL_291;
  }
LABEL_108:
  float v66 = *((float *)this + 5);
  uint64_t v67 = LODWORD(v66);
  if (v66 == 0.0) {
    uint64_t v67 = 0;
  }
  uint64_t v157 = v67;
  if ((v2 & 0x20) == 0) {
    goto LABEL_292;
  }
LABEL_111:
  float v68 = *((float *)this + 8);
  uint64_t v69 = LODWORD(v68);
  if (v68 == 0.0) {
    uint64_t v69 = 0;
  }
  uint64_t v156 = v69;
  if ((v2 & 0x10) == 0) {
    goto LABEL_293;
  }
LABEL_114:
  float v70 = *((float *)this + 7);
  uint64_t v71 = LODWORD(v70);
  if (v70 == 0.0) {
    uint64_t v71 = 0;
  }
  uint64_t v155 = v71;
  if ((v2 & 8) == 0) {
    goto LABEL_294;
  }
LABEL_117:
  float v72 = *((float *)this + 6);
  uint64_t v73 = LODWORD(v72);
  if (v72 == 0.0) {
    uint64_t v73 = 0;
  }
  uint64_t v154 = v73;
  if ((v2 & 0x800) == 0) {
    goto LABEL_295;
  }
LABEL_120:
  float v74 = *((float *)this + 14);
  uint64_t v75 = LODWORD(v74);
  if (v74 == 0.0) {
    uint64_t v75 = 0;
  }
  uint64_t v153 = v75;
  if ((v2 & 0x4000) == 0) {
    goto LABEL_296;
  }
LABEL_123:
  float v76 = *((float *)this + 17);
  uint64_t v77 = LODWORD(v76);
  if (v76 == 0.0) {
    uint64_t v77 = 0;
  }
  uint64_t v152 = v77;
  if ((v2 & 0x2000) == 0) {
    goto LABEL_297;
  }
LABEL_126:
  float v78 = *((float *)this + 16);
  uint64_t v79 = LODWORD(v78);
  if (v78 == 0.0) {
    uint64_t v79 = 0;
  }
  uint64_t v151 = v79;
  if ((v2 & 0x1000) == 0) {
    goto LABEL_298;
  }
LABEL_129:
  float v80 = *((float *)this + 15);
  uint64_t v81 = LODWORD(v80);
  if (v80 == 0.0) {
    uint64_t v81 = 0;
  }
  uint64_t v150 = v81;
  if ((v2 & 0x10000) == 0) {
    goto LABEL_299;
  }
LABEL_132:
  float v82 = *((float *)this + 19);
  uint64_t v83 = LODWORD(v82);
  if (v82 == 0.0) {
    uint64_t v83 = 0;
  }
  uint64_t v149 = v83;
  if ((v2 & 0x20000) == 0) {
    goto LABEL_300;
  }
LABEL_135:
  float v84 = *((float *)this + 20);
  uint64_t v85 = LODWORD(v84);
  if (v84 == 0.0) {
    uint64_t v85 = 0;
  }
  uint64_t v148 = v85;
  if ((v2 & 0x200000000000000) == 0) {
    goto LABEL_301;
  }
LABEL_138:
  float v86 = *((float *)this + 60);
  uint64_t v87 = LODWORD(v86);
  if (v86 == 0.0) {
    uint64_t v87 = 0;
  }
  uint64_t v147 = v87;
  if ((v2 & 0x4000000000000000) == 0) {
    goto LABEL_302;
  }
LABEL_141:
  float v88 = *((float *)this + 65);
  uint64_t v89 = LODWORD(v88);
  if (v88 == 0.0) {
    uint64_t v89 = 0;
  }
  uint64_t v146 = v89;
  if ((v2 & 0x400000) == 0) {
    goto LABEL_303;
  }
LABEL_144:
  float v90 = *((float *)this + 25);
  uint64_t v91 = LODWORD(v90);
  if (v90 == 0.0) {
    uint64_t v91 = 0;
  }
  uint64_t v145 = v91;
  if ((v2 & 0x400000000000) == 0) {
    goto LABEL_304;
  }
LABEL_147:
  float v92 = *((float *)this + 49);
  if (v92 == 0.0) {
    uint64_t v93 = 0;
  }
  else {
    uint64_t v93 = LODWORD(v92);
  }
  if ((*((_WORD *)this + 162) & 0x80) == 0) {
    goto LABEL_305;
  }
LABEL_151:
  float v94 = *((float *)this + 74);
  if (v94 == 0.0) {
    uint64_t v95 = 0;
  }
  else {
    uint64_t v95 = LODWORD(v94);
  }
  if ((v2 & 0x400000000000000) == 0) {
    goto LABEL_306;
  }
LABEL_155:
  float v96 = *((float *)this + 61);
  if (v96 == 0.0) {
    uint64_t v97 = 0;
  }
  else {
    uint64_t v97 = LODWORD(v96);
  }
  if ((v2 & 0x8000000000000000) == 0) {
    goto LABEL_307;
  }
LABEL_159:
  float v98 = *((float *)this + 66);
  if (v98 == 0.0) {
    uint64_t v99 = 0;
  }
  else {
    uint64_t v99 = LODWORD(v98);
  }
  if ((v2 & 0x800000) == 0) {
    goto LABEL_308;
  }
LABEL_163:
  float v100 = *((float *)this + 26);
  if (v100 == 0.0) {
    uint64_t v101 = 0;
  }
  else {
    uint64_t v101 = LODWORD(v100);
  }
  if ((v2 & 0x800000000000) == 0) {
    goto LABEL_309;
  }
LABEL_167:
  float v102 = *((float *)this + 50);
  if (v102 == 0.0) {
    uint64_t v103 = 0;
  }
  else {
    uint64_t v103 = LODWORD(v102);
  }
  if ((*((_WORD *)this + 162) & 0x100) == 0) {
    goto LABEL_310;
  }
LABEL_171:
  float v104 = *((float *)this + 75);
  if (v104 == 0.0) {
    uint64_t v105 = 0;
  }
  else {
    uint64_t v105 = LODWORD(v104);
  }
  if ((v2 & 0x100000000) == 0) {
    goto LABEL_311;
  }
LABEL_175:
  float v106 = *((float *)this + 35);
  if (v106 == 0.0) {
    uint64_t v107 = 0;
  }
  else {
    uint64_t v107 = LODWORD(v106);
  }
  if ((v2 & 0x200000000) == 0) {
    goto LABEL_312;
  }
LABEL_179:
  float v108 = *((float *)this + 36);
  if (v108 == 0.0) {
    uint64_t v109 = 0;
  }
  else {
    uint64_t v109 = LODWORD(v108);
  }
  if ((v2 & 0x8000000) == 0) {
    goto LABEL_313;
  }
LABEL_183:
  float v110 = *((float *)this + 30);
  if (v110 == 0.0) {
    uint64_t v111 = 0;
  }
  else {
    uint64_t v111 = LODWORD(v110);
  }
  if ((v2 & 0x4000000) == 0) {
    goto LABEL_314;
  }
LABEL_187:
  float v112 = *((float *)this + 29);
  if (v112 == 0.0) {
    uint64_t v113 = 0;
  }
  else {
    uint64_t v113 = LODWORD(v112);
  }
  if ((v2 & 0x80000000) == 0) {
    goto LABEL_315;
  }
LABEL_191:
  float v114 = *((float *)this + 34);
  if (v114 == 0.0) {
    uint64_t v115 = 0;
  }
  else {
    uint64_t v115 = LODWORD(v114);
  }
  if ((v2 & 0x40000000) == 0) {
    goto LABEL_316;
  }
LABEL_195:
  float v116 = *((float *)this + 33);
  if (v116 == 0.0) {
    uint64_t v117 = 0;
  }
  else {
    uint64_t v117 = LODWORD(v116);
  }
  if ((v2 & 0x20000000) == 0) {
    goto LABEL_317;
  }
LABEL_199:
  float v118 = *((float *)this + 32);
  if (v118 == 0.0) {
    uint64_t v119 = 0;
  }
  else {
    uint64_t v119 = LODWORD(v118);
  }
  if ((v2 & 0x10000000) == 0) {
    goto LABEL_318;
  }
LABEL_203:
  float v120 = *((float *)this + 31);
  if (v120 == 0.0) {
    uint64_t v121 = 0;
  }
  else {
    uint64_t v121 = LODWORD(v120);
  }
  if ((v2 & 0x10000000000) == 0) {
    goto LABEL_319;
  }
LABEL_207:
  float v122 = *((float *)this + 43);
  if (v122 == 0.0) {
    uint64_t v123 = 0;
  }
  else {
    uint64_t v123 = LODWORD(v122);
  }
  if ((v2 & 0x20000000000) == 0) {
    goto LABEL_320;
  }
LABEL_211:
  float v124 = *((float *)this + 44);
  if (v124 == 0.0) {
    uint64_t v125 = 0;
  }
  else {
    uint64_t v125 = LODWORD(v124);
  }
  if ((v2 & 0x800000000) == 0) {
    goto LABEL_321;
  }
LABEL_215:
  float v126 = *((float *)this + 38);
  if (v126 == 0.0) {
    uint64_t v127 = 0;
  }
  else {
    uint64_t v127 = LODWORD(v126);
  }
  if ((v2 & 0x400000000) == 0) {
    goto LABEL_322;
  }
LABEL_219:
  float v128 = *((float *)this + 37);
  if (v128 == 0.0) {
    uint64_t v129 = 0;
  }
  else {
    uint64_t v129 = LODWORD(v128);
  }
  if ((v2 & 0x8000000000) == 0) {
    goto LABEL_323;
  }
LABEL_223:
  float v130 = *((float *)this + 42);
  if (v130 == 0.0) {
    uint64_t v131 = 0;
  }
  else {
    uint64_t v131 = LODWORD(v130);
  }
  if ((v2 & 0x4000000000) == 0) {
    goto LABEL_324;
  }
LABEL_227:
  float v132 = *((float *)this + 41);
  if (v132 == 0.0) {
    uint64_t v133 = 0;
  }
  else {
    uint64_t v133 = LODWORD(v132);
  }
  if ((v2 & 0x2000000000) == 0) {
    goto LABEL_325;
  }
LABEL_231:
  float v134 = *((float *)this + 40);
  uint64_t v135 = LODWORD(v134);
  if (v134 == 0.0) {
    uint64_t v135 = 0;
  }
  if ((v2 & 0x1000000000) == 0) {
    goto LABEL_326;
  }
LABEL_234:
  float v136 = *((float *)this + 39);
  if (v136 == 0.0) {
    uint64_t v137 = 0;
  }
  else {
    uint64_t v137 = LODWORD(v136);
  }
  if ((*((_WORD *)this + 162) & 2) == 0) {
    goto LABEL_327;
  }
LABEL_238:
  float v138 = *((float *)this + 68);
  uint64_t v139 = LODWORD(v138);
  if (v138 == 0.0) {
    uint64_t v139 = 0;
  }
  if ((*((_WORD *)this + 162) & 4) != 0)
  {
LABEL_241:
    float v140 = *((float *)this + 69);
    uint64_t v141 = LODWORD(v140);
    if (v140 == 0.0) {
      uint64_t v141 = 0;
    }
    if (*((_WORD *)this + 162)) {
      goto LABEL_244;
    }
LABEL_329:
    uint64_t v143 = 0;
    return v200 ^ v3 ^ v199 ^ v198 ^ v197 ^ v196 ^ v195 ^ v194 ^ v193 ^ v192 ^ v191 ^ v190 ^ v189 ^ v188 ^ v187 ^ v186 ^ v185 ^ v184 ^ v183 ^ v182 ^ v181 ^ v180 ^ v179 ^ v178 ^ v177 ^ v176 ^ v175 ^ v174 ^ v173 ^ v172 ^ v171 ^ v170 ^ v169 ^ v168 ^ v167 ^ v166 ^ v165 ^ v164 ^ v163 ^ v162 ^ v161 ^ v160 ^ v159 ^ v158 ^ v157 ^ v156 ^ v155 ^ v154 ^ v153 ^ v152 ^ v151 ^ v150 ^ v149 ^ v148 ^ v147 ^ v146 ^ v145 ^ v93 ^ v95 ^ v97 ^ v99 ^ v101 ^ v103 ^ v105 ^ v107 ^ v109 ^ v111 ^ v113 ^ v115 ^ v117 ^ v119 ^ v121 ^ v123 ^ v125 ^ v127 ^ v129 ^ v131 ^ v133 ^ v135 ^ v137 ^ v139 ^ v141 ^ v143;
  }
LABEL_328:
  uint64_t v141 = 0;
  if ((*((_WORD *)this + 162) & 1) == 0) {
    goto LABEL_329;
  }
LABEL_244:
  float v142 = *((float *)this + 67);
  uint64_t v143 = LODWORD(v142);
  if (v142 == 0.0) {
    uint64_t v143 = 0;
  }
  return v200 ^ v3 ^ v199 ^ v198 ^ v197 ^ v196 ^ v195 ^ v194 ^ v193 ^ v192 ^ v191 ^ v190 ^ v189 ^ v188 ^ v187 ^ v186 ^ v185 ^ v184 ^ v183 ^ v182 ^ v181 ^ v180 ^ v179 ^ v178 ^ v177 ^ v176 ^ v175 ^ v174 ^ v173 ^ v172 ^ v171 ^ v170 ^ v169 ^ v168 ^ v167 ^ v166 ^ v165 ^ v164 ^ v163 ^ v162 ^ v161 ^ v160 ^ v159 ^ v158 ^ v157 ^ v156 ^ v155 ^ v154 ^ v153 ^ v152 ^ v151 ^ v150 ^ v149 ^ v148 ^ v147 ^ v146 ^ v145 ^ v93 ^ v95 ^ v97 ^ v99 ^ v101 ^ v103 ^ v105 ^ v107 ^ v109 ^ v111 ^ v113 ^ v115 ^ v117 ^ v119 ^ v121 ^ v123 ^ v125 ^ v127 ^ v129 ^ v131 ^ v133 ^ v135 ^ v137 ^ v139 ^ v141 ^ v143;
}

void CMMsl::KappaSevereCrashResult::~KappaSevereCrashResult(CMMsl::KappaSevereCrashResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::KappaSevereCrashResult::KappaSevereCrashResult(CMMsl::KappaSevereCrashResult *this, const CMMsl::KappaSevereCrashResult *a2)
{
  *(void *)this = &unk_270642C58;
  uint64_t v2 = (uint64_t *)((char *)this + 356);
  *(void *)((char *)this + 364) = 0;
  *(void *)((char *)this + 356) = 0;
  uint64_t v3 = (uint64_t *)((char *)a2 + 356);
  uint64_t v4 = *(void *)((char *)a2 + 356);
  if ((v4 & 0x800000) != 0)
  {
    uint64_t v6 = 0;
    float result = *((float *)a2 + 33);
    uint64_t v5 = 0x800000;
    *uint64_t v2 = 0x800000;
    *(void *)((char *)this + 364) = 0;
    *((float *)this + 33) = result;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)((char *)a2 + 364);
    if ((*v3 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v4 & 0x400000) != 0)
  {
LABEL_5:
    float result = *((float *)a2 + 32);
    v5 |= 0x400000uLL;
    *uint64_t v2 = v5;
    *(void *)((char *)this + 364) = 0;
    *((float *)this + 32) = result;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)((char *)a2 + 364);
  }
LABEL_6:
  if ((v4 & 0x1000000) != 0)
  {
    int v11 = *((_DWORD *)a2 + 34);
    v5 |= 0x1000000uLL;
    *uint64_t v2 = v5;
    *(void *)((char *)this + 364) = 0;
    *((_DWORD *)this + 34) = v11;
    uint64_t v4 = *v3;
    uint64_t v7 = *(void *)((char *)a2 + 364);
    if ((*v3 & 0x10000000000000) == 0)
    {
LABEL_8:
      if ((v7 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_115;
    }
  }
  else if ((v4 & 0x10000000000000) == 0)
  {
    goto LABEL_8;
  }
  int v12 = *((_DWORD *)a2 + 62);
  v5 |= 0x10000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = 0;
  *((_DWORD *)this + 62) = v12;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x400000000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_116;
  }
LABEL_115:
  float result = *((float *)a2 + 74);
  uint64_t v6 = 1;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = 1;
  *((float *)this + 74) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x400000000000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_117;
  }
LABEL_116:
  float result = *((float *)a2 + 68);
  v5 |= 0x400000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 68) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x400000000000) == 0)
  {
LABEL_11:
    if ((v4 & 0x200000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_118;
  }
LABEL_117:
  float result = *((float *)a2 + 56);
  v5 |= 0x400000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 56) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x200000000000) == 0)
  {
LABEL_12:
    if ((v4 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_119;
  }
LABEL_118:
  float result = *((float *)a2 + 55);
  v5 |= 0x200000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 55) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x200) == 0)
  {
LABEL_13:
    if ((v4 & 0x80000000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_120;
  }
LABEL_119:
  float result = *((float *)a2 + 19);
  v5 |= 0x200uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 19) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x80000000000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_121;
  }
LABEL_120:
  int v13 = *((_DWORD *)a2 + 65);
  v5 |= 0x80000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 65) = v13;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_122;
  }
LABEL_121:
  int v14 = *((_DWORD *)a2 + 35);
  v5 |= 0x2000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 35) = v14;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x10000) == 0)
  {
LABEL_16:
    if ((v7 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_123;
  }
LABEL_122:
  float result = *((float *)a2 + 26);
  v5 |= 0x10000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 26) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 8) == 0)
  {
LABEL_17:
    if ((v7 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_124;
  }
LABEL_123:
  float result = *((float *)a2 + 77);
  v6 |= 8uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 77) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x10) == 0)
  {
LABEL_18:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_125;
  }
LABEL_124:
  float result = *((float *)a2 + 78);
  v6 |= 0x10uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 78) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x80000000000) == 0)
  {
LABEL_19:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_126;
  }
LABEL_125:
  int v15 = *((_DWORD *)a2 + 53);
  v5 |= 0x80000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 53) = v15;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x20000000000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_127;
  }
LABEL_126:
  int v16 = *((_DWORD *)a2 + 51);
  v5 |= 0x20000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 51) = v16;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x4000000000000) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_128;
  }
LABEL_127:
  float result = *((float *)a2 + 60);
  v5 |= 0x4000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 60) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x1000000000000000) == 0)
  {
LABEL_22:
    if ((v7 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_129;
  }
LABEL_128:
  int v17 = *((_DWORD *)a2 + 70);
  v5 |= 0x1000000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 70) = v17;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 2) == 0)
  {
LABEL_23:
    if ((v4 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_130;
  }
LABEL_129:
  int v18 = *((_DWORD *)a2 + 75);
  v6 |= 2uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 75) = v18;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x80) == 0)
  {
LABEL_24:
    if ((v4 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_131;
  }
LABEL_130:
  uint64_t v19 = *((void *)a2 + 8);
  v5 |= 0x80uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((void *)this + 8) = v19;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 1) == 0)
  {
LABEL_25:
    if ((v7 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_132;
  }
LABEL_131:
  uint64_t v20 = *((void *)a2 + 1);
  v5 |= 1uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((void *)this + 1) = v20;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x40) == 0)
  {
LABEL_26:
    if ((v7 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_133;
  }
LABEL_132:
  char v21 = *((unsigned char *)a2 + 317);
  v6 |= 0x40uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 317) = v21;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x80) == 0)
  {
LABEL_27:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_134;
  }
LABEL_133:
  char v22 = *((unsigned char *)a2 + 318);
  v6 |= 0x80uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 318) = v22;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x8000) == 0)
  {
LABEL_28:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_135;
  }
LABEL_134:
  char v23 = *((unsigned char *)a2 + 326);
  v6 |= 0x8000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 326) = v23;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x10000) == 0)
  {
LABEL_29:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_136;
  }
LABEL_135:
  char v24 = *((unsigned char *)a2 + 327);
  v6 |= 0x10000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 327) = v24;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x8000000) == 0)
  {
LABEL_30:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_137;
  }
LABEL_136:
  char v25 = *((unsigned char *)a2 + 338);
  v6 |= 0x8000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 338) = v25;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_138;
  }
LABEL_137:
  char v26 = *((unsigned char *)a2 + 336);
  v6 |= 0x2000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 336) = v26;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x1000) == 0)
  {
LABEL_32:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_139;
  }
LABEL_138:
  char v27 = *((unsigned char *)a2 + 323);
  v6 |= 0x1000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 323) = v27;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_140;
  }
LABEL_139:
  char v28 = *((unsigned char *)a2 + 339);
  v6 |= 0x10000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 339) = v28;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v7 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_141;
  }
LABEL_140:
  char v29 = *((unsigned char *)a2 + 340);
  v6 |= 0x20000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 340) = v29;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x200) == 0)
  {
LABEL_35:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_142;
  }
LABEL_141:
  char v30 = *((unsigned char *)a2 + 320);
  v6 |= 0x200uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 320) = v30;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_36:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_143;
  }
LABEL_142:
  char v31 = *((unsigned char *)a2 + 335);
  v6 |= 0x1000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 335) = v31;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x2000) == 0)
  {
LABEL_37:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_144;
  }
LABEL_143:
  char v32 = *((unsigned char *)a2 + 324);
  v6 |= 0x2000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 324) = v32;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_145;
  }
LABEL_144:
  char v33 = *((unsigned char *)a2 + 337);
  v6 |= 0x4000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 337) = v33;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x80000) == 0)
  {
LABEL_39:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_146;
  }
LABEL_145:
  char v34 = *((unsigned char *)a2 + 330);
  v6 |= 0x80000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 330) = v34;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_147;
  }
LABEL_146:
  char v35 = *((unsigned char *)a2 + 348);
  v6 |= 0x2000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 348) = v35;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x200000000) == 0)
  {
LABEL_41:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_148;
  }
LABEL_147:
  char v36 = *((unsigned char *)a2 + 344);
  v6 |= 0x200000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 344) = v36;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x4000000000) == 0)
  {
LABEL_42:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_149;
  }
LABEL_148:
  char v37 = *((unsigned char *)a2 + 349);
  v6 |= 0x4000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 349) = v37;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x400000000) == 0)
  {
LABEL_43:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_150;
  }
LABEL_149:
  char v38 = *((unsigned char *)a2 + 345);
  v6 |= 0x400000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 345) = v38;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_151;
  }
LABEL_150:
  char v39 = *((unsigned char *)a2 + 341);
  v6 |= 0x40000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 341) = v39;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_152;
  }
LABEL_151:
  char v40 = *((unsigned char *)a2 + 322);
  v6 |= 0x800uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 322) = v40;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x100000) == 0)
  {
LABEL_46:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_153;
  }
LABEL_152:
  char v41 = *((unsigned char *)a2 + 331);
  v6 |= 0x100000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 331) = v41;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x8000000000) == 0)
  {
LABEL_47:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_154;
  }
LABEL_153:
  char v42 = *((unsigned char *)a2 + 350);
  v6 |= 0x8000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 350) = v42;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x800000000) == 0)
  {
LABEL_48:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_155;
  }
LABEL_154:
  char v43 = *((unsigned char *)a2 + 346);
  v6 |= 0x800000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 346) = v43;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x20000) == 0)
  {
LABEL_49:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_156;
  }
LABEL_155:
  int v44 = *((_DWORD *)a2 + 27);
  v5 |= 0x20000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 27) = v44;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x400000) == 0)
  {
LABEL_50:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_157;
  }
LABEL_156:
  char v45 = *((unsigned char *)a2 + 333);
  v6 |= 0x400000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 333) = v45;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x800000) == 0)
  {
LABEL_51:
    if ((v7 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_158;
  }
LABEL_157:
  char v46 = *((unsigned char *)a2 + 334);
  v6 |= 0x800000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 334) = v46;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x20) == 0)
  {
LABEL_52:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_159;
  }
LABEL_158:
  char v47 = *((unsigned char *)a2 + 316);
  v6 |= 0x20uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 316) = v47;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x40000) == 0)
  {
LABEL_53:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_160;
  }
LABEL_159:
  int v48 = *((_DWORD *)a2 + 28);
  v5 |= 0x40000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 28) = v48;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x40000000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_161;
  }
LABEL_160:
  char v49 = *((unsigned char *)a2 + 353);
  v6 |= 0x40000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 353) = v49;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x10000000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }
LABEL_161:
  char v50 = *((unsigned char *)a2 + 351);
  v6 |= 0x10000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 351) = v50;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }
LABEL_162:
  char v51 = *((unsigned char *)a2 + 352);
  v6 |= 0x20000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 352) = v51;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x100000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_164;
  }
LABEL_163:
  char v52 = *((unsigned char *)a2 + 343);
  v6 |= 0x100000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 343) = v52;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x80000000) == 0)
  {
LABEL_58:
    if ((v4 & 0x20000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_165;
  }
LABEL_164:
  char v53 = *((unsigned char *)a2 + 342);
  v6 |= 0x80000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 342) = v53;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x20000000000000) == 0)
  {
LABEL_59:
    if ((v4 & 0x40000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_166;
  }
LABEL_165:
  int v54 = *((_DWORD *)a2 + 63);
  v5 |= 0x20000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 63) = v54;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x40000000000000) == 0)
  {
LABEL_60:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_167;
  }
LABEL_166:
  int v55 = *((_DWORD *)a2 + 64);
  v5 |= 0x40000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 64) = v55;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x4000000) == 0)
  {
LABEL_61:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_168;
  }
LABEL_167:
  int v56 = *((_DWORD *)a2 + 36);
  v5 |= 0x4000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 36) = v56;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x8000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_169;
  }
LABEL_168:
  int v57 = *((_DWORD *)a2 + 37);
  v5 |= 0x8000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 37) = v57;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x20000) == 0)
  {
LABEL_63:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_170;
  }
LABEL_169:
  char v58 = *((unsigned char *)a2 + 328);
  v6 |= 0x20000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 328) = v58;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x4000) == 0)
  {
LABEL_64:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_171;
  }
LABEL_170:
  char v59 = *((unsigned char *)a2 + 325);
  v6 |= 0x4000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 325) = v59;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x2000000000) == 0)
  {
LABEL_65:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_172;
  }
LABEL_171:
  int v60 = *((_DWORD *)a2 + 47);
  v5 |= 0x2000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 47) = v60;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x80000) == 0)
  {
LABEL_66:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_173;
  }
LABEL_172:
  int v61 = *((_DWORD *)a2 + 29);
  v5 |= 0x80000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 29) = v61;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x1000000000) == 0)
  {
LABEL_67:
    if ((v4 & 0x4000000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_174;
  }
LABEL_173:
  int v62 = *((_DWORD *)a2 + 46);
  v5 |= 0x1000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 46) = v62;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x4000000000000000) == 0)
  {
LABEL_68:
    if ((v4 & 0x8000000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_175;
  }
LABEL_174:
  float result = *((float *)a2 + 72);
  v5 |= 0x4000000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 72) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x8000000000000000) == 0)
  {
LABEL_69:
    if ((v4 & 0x200000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_176;
  }
LABEL_175:
  float result = *((float *)a2 + 73);
  v5 |= 0x8000000000000000;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 73) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x200000000000000) == 0)
  {
LABEL_70:
    if ((v4 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_177;
  }
LABEL_176:
  float result = *((float *)a2 + 67);
  v5 |= 0x200000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 67) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_178;
  }
LABEL_177:
  int v63 = *((_DWORD *)a2 + 69);
  v5 |= 0x800000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 69) = v63;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x2000000000000000) == 0)
  {
LABEL_72:
    if ((v7 & 0x400) == 0) {
      goto LABEL_73;
    }
    goto LABEL_179;
  }
LABEL_178:
  int v64 = *((_DWORD *)a2 + 71);
  v5 |= 0x2000000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 71) = v64;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x400) == 0)
  {
LABEL_73:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_180;
  }
LABEL_179:
  char v65 = *((unsigned char *)a2 + 321);
  v6 |= 0x400uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 321) = v65;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x4000) == 0)
  {
LABEL_74:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_181;
  }
LABEL_180:
  int v66 = *((_DWORD *)a2 + 24);
  v5 |= 0x4000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 24) = v66;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x1000) == 0)
  {
LABEL_75:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_182;
  }
LABEL_181:
  float result = *((float *)a2 + 22);
  v5 |= 0x1000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 22) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x100000000000) == 0)
  {
LABEL_76:
    if ((v4 & 0x100000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_183;
  }
LABEL_182:
  int v67 = *((_DWORD *)a2 + 54);
  v5 |= 0x100000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 54) = v67;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x100000000000000) == 0)
  {
LABEL_77:
    if ((v4 & 0x40) == 0) {
      goto LABEL_78;
    }
    goto LABEL_184;
  }
LABEL_183:
  int v68 = *((_DWORD *)a2 + 66);
  v5 |= 0x100000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 66) = v68;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x40) == 0)
  {
LABEL_78:
    if ((v4 & 0x800000000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_185;
  }
LABEL_184:
  uint64_t v69 = *((void *)a2 + 7);
  v5 |= 0x40uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((void *)this + 7) = v69;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x800000000000) == 0)
  {
LABEL_79:
    if ((v4 & 0x1000000000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_186;
  }
LABEL_185:
  int v70 = *((_DWORD *)a2 + 57);
  v5 |= 0x800000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 57) = v70;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x1000000000000) == 0)
  {
LABEL_80:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_187;
  }
LABEL_186:
  int v71 = *((_DWORD *)a2 + 58);
  v5 |= 0x1000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 58) = v71;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x100000) == 0)
  {
LABEL_81:
    if ((v4 & 0x400) == 0) {
      goto LABEL_82;
    }
    goto LABEL_188;
  }
LABEL_187:
  float result = *((float *)a2 + 30);
  v5 |= 0x100000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 30) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x400) == 0)
  {
LABEL_82:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_189;
  }
LABEL_188:
  float result = *((float *)a2 + 20);
  v5 |= 0x400uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 20) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x200000) == 0)
  {
LABEL_83:
    if ((v4 & 0x800) == 0) {
      goto LABEL_84;
    }
    goto LABEL_190;
  }
LABEL_189:
  float result = *((float *)a2 + 31);
  v5 |= 0x200000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 31) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x800) == 0)
  {
LABEL_84:
    if ((v4 & 0x100) == 0) {
      goto LABEL_85;
    }
    goto LABEL_191;
  }
LABEL_190:
  float result = *((float *)a2 + 21);
  v5 |= 0x800uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 21) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x100) == 0)
  {
LABEL_85:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_192;
  }
LABEL_191:
  float result = *((float *)a2 + 18);
  v5 |= 0x100uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 18) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x200000) == 0)
  {
LABEL_86:
    if ((v7 & 4) == 0) {
      goto LABEL_87;
    }
    goto LABEL_193;
  }
LABEL_192:
  char v72 = *((unsigned char *)a2 + 332);
  v6 |= 0x200000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 332) = v72;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 4) == 0)
  {
LABEL_87:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_194;
  }
LABEL_193:
  int v73 = *((_DWORD *)a2 + 76);
  v6 |= 4uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 76) = v73;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x10000000) == 0)
  {
LABEL_88:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_195;
  }
LABEL_194:
  int v74 = *((_DWORD *)a2 + 38);
  v5 |= 0x10000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 38) = v74;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x40000000) == 0)
  {
LABEL_89:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_196;
  }
LABEL_195:
  int v75 = *((_DWORD *)a2 + 40);
  v5 |= 0x40000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 40) = v75;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x1000000000) == 0)
  {
LABEL_90:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_197;
  }
LABEL_196:
  char v76 = *((unsigned char *)a2 + 347);
  v6 |= 0x1000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 347) = v76;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x80000000) == 0)
  {
LABEL_91:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_198;
  }
LABEL_197:
  int v77 = *((_DWORD *)a2 + 41);
  v5 |= 0x80000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 41) = v77;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v4 & 0x8000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_199;
  }
LABEL_198:
  int v78 = *((_DWORD *)a2 + 39);
  v5 |= 0x20000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 39) = v78;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_200;
  }
LABEL_199:
  float result = *((float *)a2 + 61);
  v5 |= 0x8000000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 61) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x4000000000) == 0)
  {
LABEL_94:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_201;
  }
LABEL_200:
  int v79 = *((_DWORD *)a2 + 48);
  v5 |= 0x4000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 48) = v79;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x8000000000) == 0)
  {
LABEL_95:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_202;
  }
LABEL_201:
  int v80 = *((_DWORD *)a2 + 49);
  v5 |= 0x8000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 49) = v80;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x8000) == 0)
  {
LABEL_96:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_203;
  }
LABEL_202:
  float result = *((float *)a2 + 25);
  v5 |= 0x8000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((float *)this + 25) = result;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x40000000000) == 0)
  {
LABEL_97:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_204;
  }
LABEL_203:
  int v81 = *((_DWORD *)a2 + 52);
  v5 |= 0x40000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 52) = v81;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x10000000000) == 0)
  {
LABEL_98:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_205;
  }
LABEL_204:
  int v82 = *((_DWORD *)a2 + 50);
  v5 |= 0x10000000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 50) = v82;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x800000000) == 0)
  {
LABEL_99:
    if ((v4 & 0x100000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_206;
  }
LABEL_205:
  int v83 = *((_DWORD *)a2 + 45);
  v5 |= 0x800000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 45) = v83;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x100000000) == 0)
  {
LABEL_100:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_207;
  }
LABEL_206:
  int v84 = *((_DWORD *)a2 + 42);
  v5 |= 0x100000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 42) = v84;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((*v3 & 0x400000000) == 0)
  {
LABEL_101:
    if ((v7 & 0x100) == 0) {
      goto LABEL_102;
    }
    goto LABEL_208;
  }
LABEL_207:
  int v85 = *((_DWORD *)a2 + 44);
  v5 |= 0x400000000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((_DWORD *)this + 44) = v85;
  uint64_t v4 = *v3;
  uint64_t v7 = *(void *)((char *)a2 + 364);
  if ((v7 & 0x100) == 0)
  {
LABEL_102:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_209;
  }
LABEL_208:
  char v86 = *((unsigned char *)a2 + 319);
  v6 |= 0x100uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 319) = v86;
  uint64_t v4 = *v3;
  if ((*(void *)((unsigned char *)a2 + 364) & 0x40000) == 0)
  {
LABEL_103:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_104;
  }
LABEL_209:
  char v87 = *((unsigned char *)a2 + 329);
  v6 |= 0x40000uLL;
  *uint64_t v2 = v5;
  *(void *)((char *)this + 364) = v6;
  *((unsigned char *)this + 329) = v87;
  if ((*v3 & 0x200000000) != 0)
  {
LABEL_104:
    int v9 = *((_DWORD *)a2 + 43);
    *uint64_t v2 = v5 | 0x200000000;
    *(void *)((char *)this + 364) = v6;
    *((_DWORD *)this + 43) = v9;
  }
LABEL_105:
  uint64_t v10 = *v3;
  if ((*v3 & 2) != 0)
  {
    uint64_t v88 = *((void *)a2 + 2);
    *v2 |= 2uLL;
    *((void *)this + 2) = v88;
    uint64_t v10 = *v3;
    if ((*v3 & 0x20) == 0)
    {
LABEL_107:
      if ((v10 & 4) == 0) {
        goto LABEL_108;
      }
      goto LABEL_213;
    }
  }
  else if ((v10 & 0x20) == 0)
  {
    goto LABEL_107;
  }
  uint64_t v89 = *((void *)a2 + 6);
  *v2 |= 0x20uLL;
  *((void *)this + 6) = v89;
  uint64_t v10 = *v3;
  if ((*v3 & 4) == 0)
  {
LABEL_108:
    if ((v10 & 8) == 0) {
      goto LABEL_109;
    }
    goto LABEL_214;
  }
LABEL_213:
  uint64_t v90 = *((void *)a2 + 3);
  *v2 |= 4uLL;
  *((void *)this + 3) = v90;
  uint64_t v10 = *v3;
  if ((*v3 & 8) == 0)
  {
LABEL_109:
    if ((v10 & 0x10) == 0) {
      goto LABEL_110;
    }
    goto LABEL_215;
  }
LABEL_214:
  uint64_t v91 = *((void *)a2 + 4);
  *v2 |= 8uLL;
  *((void *)this + 4) = v91;
  uint64_t v10 = *v3;
  if ((*v3 & 0x10) == 0)
  {
LABEL_110:
    if ((v10 & 0x2000000000000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_216;
  }
LABEL_215:
  uint64_t v92 = *((void *)a2 + 5);
  *v2 |= 0x10uLL;
  *((void *)this + 5) = v92;
  uint64_t v10 = *v3;
  if ((*v3 & 0x2000000000000) == 0)
  {
LABEL_111:
    if ((v10 & 0x2000) == 0) {
      return result;
    }
LABEL_217:
    float result = *((float *)a2 + 23);
    *v2 |= 0x2000uLL;
    *((float *)this + 23) = result;
    return result;
  }
LABEL_216:
  int v93 = *((_DWORD *)a2 + 59);
  *v2 |= 0x2000000000000uLL;
  *((_DWORD *)this + 59) = v93;
  if ((*v3 & 0x2000) != 0) {
    goto LABEL_217;
  }
  return result;
}

CMMsl *CMMsl::KappaSevereCrashResult::operator=(CMMsl *a1, const CMMsl::KappaSevereCrashResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaSevereCrashResult::KappaSevereCrashResult((CMMsl::KappaSevereCrashResult *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaSevereCrashResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaSevereCrashResult *a2, CMMsl::KappaSevereCrashResult *a3)
{
  long long v3 = *(_OWORD *)((char *)this + 356);
  *(_OWORD *)((char *)this + 356) = *(_OWORD *)((char *)a2 + 356);
  *(_OWORD *)((char *)a2 + 356) = v3;
  LODWORD(v3) = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v3;
  LODWORD(v3) = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v3;
  int v4 = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v4;
  int v5 = *((_DWORD *)this + 62);
  *((_DWORD *)this + 62) = *((_DWORD *)a2 + 62);
  *((_DWORD *)a2 + 62) = v5;
  LODWORD(v3) = *((_DWORD *)this + 74);
  *((_DWORD *)this + 74) = *((_DWORD *)a2 + 74);
  *((_DWORD *)a2 + 74) = v3;
  LODWORD(v3) = *((_DWORD *)this + 68);
  *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
  *((_DWORD *)a2 + 68) = v3;
  LODWORD(v3) = *((_DWORD *)this + 56);
  *((_DWORD *)this + 56) = *((_DWORD *)a2 + 56);
  *((_DWORD *)a2 + 56) = v3;
  LODWORD(v3) = *((_DWORD *)this + 55);
  *((_DWORD *)this + 55) = *((_DWORD *)a2 + 55);
  *((_DWORD *)a2 + 55) = v3;
  LODWORD(v3) = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v3;
  int v6 = *((_DWORD *)this + 65);
  *((_DWORD *)this + 65) = *((_DWORD *)a2 + 65);
  *((_DWORD *)a2 + 65) = v6;
  int v7 = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v7;
  LODWORD(v3) = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v3;
  LODWORD(v3) = *((_DWORD *)this + 77);
  *((_DWORD *)this + 77) = *((_DWORD *)a2 + 77);
  *((_DWORD *)a2 + 77) = v3;
  LODWORD(v3) = *((_DWORD *)this + 78);
  *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
  *((_DWORD *)a2 + 78) = v3;
  int v8 = *((_DWORD *)this + 53);
  *((_DWORD *)this + 53) = *((_DWORD *)a2 + 53);
  *((_DWORD *)a2 + 53) = v8;
  int v9 = *((_DWORD *)this + 51);
  *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
  *((_DWORD *)a2 + 51) = v9;
  LODWORD(v3) = *((_DWORD *)this + 60);
  *((_DWORD *)this + 60) = *((_DWORD *)a2 + 60);
  *((_DWORD *)a2 + 60) = v3;
  int v10 = *((_DWORD *)this + 70);
  *((_DWORD *)this + 70) = *((_DWORD *)a2 + 70);
  *((_DWORD *)a2 + 70) = v10;
  int v11 = *((_DWORD *)this + 75);
  *((_DWORD *)this + 75) = *((_DWORD *)a2 + 75);
  *((_DWORD *)a2 + 75) = v11;
  uint64_t v12 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v12;
  uint64_t v13 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 317);
  *((unsigned char *)this + 317) = *((unsigned char *)a2 + 317);
  *((unsigned char *)a2 + 317) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 318);
  *((unsigned char *)this + 318) = *((unsigned char *)a2 + 318);
  *((unsigned char *)a2 + 318) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 326);
  *((unsigned char *)this + 326) = *((unsigned char *)a2 + 326);
  *((unsigned char *)a2 + 326) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 327);
  *((unsigned char *)this + 327) = *((unsigned char *)a2 + 327);
  *((unsigned char *)a2 + 327) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 338);
  *((unsigned char *)this + 338) = *((unsigned char *)a2 + 338);
  *((unsigned char *)a2 + 338) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 336);
  *((unsigned char *)this + 336) = *((unsigned char *)a2 + 336);
  *((unsigned char *)a2 + 336) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 323);
  *((unsigned char *)this + 323) = *((unsigned char *)a2 + 323);
  *((unsigned char *)a2 + 323) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 339);
  *((unsigned char *)this + 339) = *((unsigned char *)a2 + 339);
  *((unsigned char *)a2 + 339) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 340);
  *((unsigned char *)this + 340) = *((unsigned char *)a2 + 340);
  *((unsigned char *)a2 + 340) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 320);
  *((unsigned char *)this + 320) = *((unsigned char *)a2 + 320);
  *((unsigned char *)a2 + 320) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 335);
  *((unsigned char *)this + 335) = *((unsigned char *)a2 + 335);
  *((unsigned char *)a2 + 335) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 324);
  *((unsigned char *)this + 324) = *((unsigned char *)a2 + 324);
  *((unsigned char *)a2 + 324) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 337);
  *((unsigned char *)this + 337) = *((unsigned char *)a2 + 337);
  *((unsigned char *)a2 + 337) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 330);
  *((unsigned char *)this + 330) = *((unsigned char *)a2 + 330);
  *((unsigned char *)a2 + 330) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 348);
  *((unsigned char *)this + 348) = *((unsigned char *)a2 + 348);
  *((unsigned char *)a2 + 348) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 344);
  *((unsigned char *)this + 344) = *((unsigned char *)a2 + 344);
  *((unsigned char *)a2 + 344) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 349);
  *((unsigned char *)this + 349) = *((unsigned char *)a2 + 349);
  *((unsigned char *)a2 + 349) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 345);
  *((unsigned char *)this + 345) = *((unsigned char *)a2 + 345);
  *((unsigned char *)a2 + 345) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 341);
  *((unsigned char *)this + 341) = *((unsigned char *)a2 + 341);
  *((unsigned char *)a2 + 341) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 322);
  *((unsigned char *)this + 322) = *((unsigned char *)a2 + 322);
  *((unsigned char *)a2 + 322) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 331);
  *((unsigned char *)this + 331) = *((unsigned char *)a2 + 331);
  *((unsigned char *)a2 + 331) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 350);
  *((unsigned char *)this + 350) = *((unsigned char *)a2 + 350);
  *((unsigned char *)a2 + 350) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 346);
  *((unsigned char *)this + 346) = *((unsigned char *)a2 + 346);
  *((unsigned char *)a2 + 346) = v13;
  LODWORD(v13) = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 333);
  *((unsigned char *)this + 333) = *((unsigned char *)a2 + 333);
  *((unsigned char *)a2 + 333) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 334);
  *((unsigned char *)this + 334) = *((unsigned char *)a2 + 334);
  *((unsigned char *)a2 + 334) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 316);
  *((unsigned char *)this + 316) = *((unsigned char *)a2 + 316);
  *((unsigned char *)a2 + 316) = v13;
  LODWORD(v13) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 353);
  *((unsigned char *)this + 353) = *((unsigned char *)a2 + 353);
  *((unsigned char *)a2 + 353) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 351);
  *((unsigned char *)this + 351) = *((unsigned char *)a2 + 351);
  *((unsigned char *)a2 + 351) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 352);
  *((unsigned char *)this + 352) = *((unsigned char *)a2 + 352);
  *((unsigned char *)a2 + 352) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 343);
  *((unsigned char *)this + 343) = *((unsigned char *)a2 + 343);
  *((unsigned char *)a2 + 343) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 342);
  *((unsigned char *)this + 342) = *((unsigned char *)a2 + 342);
  *((unsigned char *)a2 + 342) = v13;
  LODWORD(v13) = *((_DWORD *)this + 63);
  *((_DWORD *)this + 63) = *((_DWORD *)a2 + 63);
  *((_DWORD *)a2 + 63) = v13;
  LODWORD(v13) = *((_DWORD *)this + 64);
  *((_DWORD *)this + 64) = *((_DWORD *)a2 + 64);
  *((_DWORD *)a2 + 64) = v13;
  LODWORD(v13) = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v13;
  LODWORD(v13) = *((_DWORD *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((_DWORD *)a2 + 37) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 328);
  *((unsigned char *)this + 328) = *((unsigned char *)a2 + 328);
  *((unsigned char *)a2 + 328) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 325);
  *((unsigned char *)this + 325) = *((unsigned char *)a2 + 325);
  *((unsigned char *)a2 + 325) = v13;
  LODWORD(v13) = *((_DWORD *)this + 47);
  *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
  *((_DWORD *)a2 + 47) = v13;
  LODWORD(v13) = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v13;
  LODWORD(v13) = *((_DWORD *)this + 46);
  *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
  *((_DWORD *)a2 + 46) = v13;
  LODWORD(v3) = *((_DWORD *)this + 72);
  *((_DWORD *)this + 72) = *((_DWORD *)a2 + 72);
  *((_DWORD *)a2 + 72) = v3;
  LODWORD(v3) = *((_DWORD *)this + 73);
  *((_DWORD *)this + 73) = *((_DWORD *)a2 + 73);
  *((_DWORD *)a2 + 73) = v3;
  LODWORD(v3) = *((_DWORD *)this + 67);
  *((_DWORD *)this + 67) = *((_DWORD *)a2 + 67);
  *((_DWORD *)a2 + 67) = v3;
  LODWORD(v13) = *((_DWORD *)this + 69);
  *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
  *((_DWORD *)a2 + 69) = v13;
  LODWORD(v13) = *((_DWORD *)this + 71);
  *((_DWORD *)this + 71) = *((_DWORD *)a2 + 71);
  *((_DWORD *)a2 + 71) = v13;
  LOBYTE(v13) = *((unsigned char *)this + 321);
  *((unsigned char *)this + 321) = *((unsigned char *)a2 + 321);
  *((unsigned char *)a2 + 321) = v13;
  LODWORD(v13) = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v13;
  LODWORD(v3) = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v3;
  LODWORD(v13) = *((_DWORD *)this + 54);
  *((_DWORD *)this + 54) = *((_DWORD *)a2 + 54);
  *((_DWORD *)a2 + 54) = v13;
  LODWORD(v13) = *((_DWORD *)this + 66);
  *((_DWORD *)this + 66) = *((_DWORD *)a2 + 66);
  *((_DWORD *)a2 + 66) = v13;
  uint64_t v14 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v14;
  LODWORD(v14) = *((_DWORD *)this + 57);
  *((_DWORD *)this + 57) = *((_DWORD *)a2 + 57);
  *((_DWORD *)a2 + 57) = v14;
  LODWORD(v14) = *((_DWORD *)this + 58);
  *((_DWORD *)this + 58) = *((_DWORD *)a2 + 58);
  *((_DWORD *)a2 + 58) = v14;
  LODWORD(v3) = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v3;
  LODWORD(v3) = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v3;
  LODWORD(v3) = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v3;
  LODWORD(v3) = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v3;
  LODWORD(v3) = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v3;
  LOBYTE(v14) = *((unsigned char *)this + 332);
  *((unsigned char *)this + 332) = *((unsigned char *)a2 + 332);
  *((unsigned char *)a2 + 332) = v14;
  LODWORD(v14) = *((_DWORD *)this + 76);
  *((_DWORD *)this + 76) = *((_DWORD *)a2 + 76);
  *((_DWORD *)a2 + 76) = v14;
  LODWORD(v14) = *((_DWORD *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((_DWORD *)a2 + 38) = v14;
  LODWORD(v14) = *((_DWORD *)this + 40);
  *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
  *((_DWORD *)a2 + 40) = v14;
  LOBYTE(v14) = *((unsigned char *)this + 347);
  *((unsigned char *)this + 347) = *((unsigned char *)a2 + 347);
  *((unsigned char *)a2 + 347) = v14;
  LODWORD(v14) = *((_DWORD *)this + 41);
  *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
  *((_DWORD *)a2 + 41) = v14;
  LODWORD(v14) = *((_DWORD *)this + 39);
  *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
  *((_DWORD *)a2 + 39) = v14;
  LODWORD(v3) = *((_DWORD *)this + 61);
  *((_DWORD *)this + 61) = *((_DWORD *)a2 + 61);
  *((_DWORD *)a2 + 61) = v3;
  LODWORD(v14) = *((_DWORD *)this + 48);
  *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
  *((_DWORD *)a2 + 48) = v14;
  LODWORD(v14) = *((_DWORD *)this + 49);
  *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
  *((_DWORD *)a2 + 49) = v14;
  LODWORD(v3) = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v3;
  LODWORD(v14) = *((_DWORD *)this + 52);
  *((_DWORD *)this + 52) = *((_DWORD *)a2 + 52);
  *((_DWORD *)a2 + 52) = v14;
  LODWORD(v14) = *((_DWORD *)this + 50);
  *((_DWORD *)this + 50) = *((_DWORD *)a2 + 50);
  *((_DWORD *)a2 + 50) = v14;
  LODWORD(v14) = *((_DWORD *)this + 45);
  *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
  *((_DWORD *)a2 + 45) = v14;
  LODWORD(v14) = *((_DWORD *)this + 42);
  *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
  *((_DWORD *)a2 + 42) = v14;
  LODWORD(v14) = *((_DWORD *)this + 44);
  *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
  *((_DWORD *)a2 + 44) = v14;
  LOBYTE(v14) = *((unsigned char *)this + 319);
  *((unsigned char *)this + 319) = *((unsigned char *)a2 + 319);
  *((unsigned char *)a2 + 319) = v14;
  LOBYTE(v14) = *((unsigned char *)this + 329);
  *((unsigned char *)this + 329) = *((unsigned char *)a2 + 329);
  *((unsigned char *)a2 + 329) = v14;
  LODWORD(v14) = *((_DWORD *)this + 43);
  *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
  *((_DWORD *)a2 + 43) = v14;
  uint64_t v15 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v15;
  uint64_t v16 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v16;
  uint64_t v17 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v17;
  uint64_t v18 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v18;
  uint64_t v19 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v19;
  LODWORD(v19) = *((_DWORD *)this + 59);
  *((_DWORD *)this + 59) = *((_DWORD *)a2 + 59);
  *((_DWORD *)a2 + 59) = v19;
  float result = *((float *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((float *)a2 + 23) = result;
  return result;
}

float CMMsl::KappaSevereCrashResult::KappaSevereCrashResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642C58;
  *(_OWORD *)(a1 + 356) = *(_OWORD *)(a2 + 356);
  *(void *)(a2 + 364) = 0;
  *(void *)(a2 + 356) = 0;
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 308) = *(_DWORD *)(a2 + 308);
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a1 + 204) = *(_DWORD *)(a2 + 204);
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  *(_DWORD *)(a1 + 300) = *(_DWORD *)(a2 + 300);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 317) = *(unsigned char *)(a2 + 317);
  *(unsigned char *)(a1 + 318) = *(unsigned char *)(a2 + 318);
  *(unsigned char *)(a1 + 326) = *(unsigned char *)(a2 + 326);
  *(unsigned char *)(a1 + 327) = *(unsigned char *)(a2 + 327);
  *(unsigned char *)(a1 + 338) = *(unsigned char *)(a2 + 338);
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  *(unsigned char *)(a1 + 323) = *(unsigned char *)(a2 + 323);
  *(unsigned char *)(a1 + 339) = *(unsigned char *)(a2 + 339);
  *(unsigned char *)(a1 + 340) = *(unsigned char *)(a2 + 340);
  *(unsigned char *)(a1 + 320) = *(unsigned char *)(a2 + 320);
  *(unsigned char *)(a1 + 335) = *(unsigned char *)(a2 + 335);
  *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
  *(unsigned char *)(a1 + 337) = *(unsigned char *)(a2 + 337);
  *(unsigned char *)(a1 + 330) = *(unsigned char *)(a2 + 330);
  *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(unsigned char *)(a1 + 349) = *(unsigned char *)(a2 + 349);
  *(unsigned char *)(a1 + 345) = *(unsigned char *)(a2 + 345);
  *(unsigned char *)(a1 + 341) = *(unsigned char *)(a2 + 341);
  *(unsigned char *)(a1 + 322) = *(unsigned char *)(a2 + 322);
  *(unsigned char *)(a1 + 331) = *(unsigned char *)(a2 + 331);
  *(unsigned char *)(a1 + 350) = *(unsigned char *)(a2 + 350);
  *(unsigned char *)(a1 + 346) = *(unsigned char *)(a2 + 346);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(unsigned char *)(a1 + 333) = *(unsigned char *)(a2 + 333);
  *(unsigned char *)(a1 + 334) = *(unsigned char *)(a2 + 334);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 353) = *(unsigned char *)(a2 + 353);
  *(unsigned char *)(a1 + 351) = *(unsigned char *)(a2 + 351);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(unsigned char *)(a1 + 343) = *(unsigned char *)(a2 + 343);
  *(unsigned char *)(a1 + 342) = *(unsigned char *)(a2 + 342);
  *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(unsigned char *)(a1 + 325) = *(unsigned char *)(a2 + 325);
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  *(_DWORD *)(a1 + 292) = *(_DWORD *)(a2 + 292);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
  *(unsigned char *)(a1 + 321) = *(unsigned char *)(a2 + 321);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 332) = *(unsigned char *)(a2 + 332);
  *(_DWORD *)(a1 + 304) = *(_DWORD *)(a2 + 304);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 347) = *(unsigned char *)(a2 + 347);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 319) = *(unsigned char *)(a2 + 319);
  *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  float result = *(float *)(a2 + 92);
  *(float *)(a1 + 92) = result;
  return result;
}

CMMsl *CMMsl::KappaSevereCrashResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaSevereCrashResult::KappaSevereCrashResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaSevereCrashResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaSevereCrashResult::formatText(CMMsl::KappaSevereCrashResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = (uint64_t *)((char *)this + 356);
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x20) != 0)
  {
    PB::TextFormatter::format(a2, "anyLowSense");
    uint64_t v6 = *(void *)((char *)this + 364);
  }
  uint64_t v7 = *v5;
  if ((*v5 & 0x100) != 0)
  {
    PB::TextFormatter::format(a2, "autocorrelationPeriodicCount", *((float *)this + 18));
    uint64_t v7 = *v5;
    uint64_t v6 = *(void *)((char *)this + 364);
    if ((*v5 & 0x200) == 0)
    {
LABEL_5:
      if ((v6 & 0x40) == 0) {
        goto LABEL_6;
      }
      goto LABEL_108;
    }
  }
  else if ((v7 & 0x200) == 0)
  {
    goto LABEL_5;
  }
  PB::TextFormatter::format(a2, "autocorrelationPeriodicCountThreshold", *((float *)this + 19));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x40) == 0)
  {
LABEL_6:
    if ((v7 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_109;
  }
LABEL_108:
  PB::TextFormatter::format(a2, "crashDetectorDecision");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 1) == 0)
  {
LABEL_7:
    if ((v7 & 0x400) == 0) {
      goto LABEL_8;
    }
    goto LABEL_110;
  }
LABEL_109:
  PB::TextFormatter::format(a2, "crashTimestamp");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x400) == 0)
  {
LABEL_8:
    if ((v7 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_111;
  }
LABEL_110:
  PB::TextFormatter::format(a2, "cumulativeRotation", *((float *)this + 20));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_112;
  }
LABEL_111:
  PB::TextFormatter::format(a2, "cumulativeRotationHarmonicMean", *((float *)this + 21));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x1000) == 0)
  {
LABEL_10:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_113;
  }
LABEL_112:
  PB::TextFormatter::format(a2, "currentCadence", *((float *)this + 22));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x2000) == 0)
  {
LABEL_11:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_114;
  }
LABEL_113:
  PB::TextFormatter::format(a2, "deltaRealTrigger", *((float *)this + 23));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x4000) == 0)
  {
LABEL_12:
    if ((v7 & 0x8000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_115;
  }
LABEL_114:
  PB::TextFormatter::format(a2, "deltaSteps");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x8000) == 0)
  {
LABEL_13:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_116;
  }
LABEL_115:
  PB::TextFormatter::format(a2, "distanceToNearestRoad", *((float *)this + 25));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x10000) == 0)
  {
LABEL_14:
    if ((v6 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_117;
  }
LABEL_116:
  PB::TextFormatter::format(a2, "distanceToNearestRoadThreshold", *((float *)this + 26));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x80) == 0)
  {
LABEL_15:
    if ((v6 & 0x100) == 0) {
      goto LABEL_16;
    }
    goto LABEL_118;
  }
LABEL_117:
  PB::TextFormatter::format(a2, "earlyCrashDetectorDecision");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x100) == 0)
  {
LABEL_16:
    if ((v6 & 0x200) == 0) {
      goto LABEL_17;
    }
    goto LABEL_119;
  }
LABEL_118:
  PB::TextFormatter::format(a2, "escalationCandidate");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x200) == 0)
  {
LABEL_17:
    if ((v7 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_120;
  }
LABEL_119:
  PB::TextFormatter::format(a2, "escalationCandidateSuppressed");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x20000) == 0)
  {
LABEL_18:
    if ((v7 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_121;
  }
LABEL_120:
  PB::TextFormatter::format(a2, "faultCounter");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 2) == 0)
  {
LABEL_19:
    if ((v6 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_122;
  }
LABEL_121:
  PB::TextFormatter::format(a2, "firstTimestampMAPDecision");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x400) == 0)
  {
LABEL_20:
    if ((v7 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_123;
  }
LABEL_122:
  PB::TextFormatter::format(a2, "hasSteps");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x40000) == 0)
  {
LABEL_21:
    if ((v6 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_124;
  }
LABEL_123:
  PB::TextFormatter::format(a2, "highSensitivityBitmap");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x800) == 0)
  {
LABEL_22:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_125;
  }
LABEL_124:
  PB::TextFormatter::format(a2, "isAirbagDetectedOverWindow");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x1000) == 0)
  {
LABEL_23:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_126;
  }
LABEL_125:
  PB::TextFormatter::format(a2, "isAutocorrelationDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x2000) == 0)
  {
LABEL_24:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_127;
  }
LABEL_126:
  PB::TextFormatter::format(a2, "isCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x4000) == 0)
  {
LABEL_25:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_128;
  }
LABEL_127:
  PB::TextFormatter::format(a2, "isDecisionMadeAtBoundary");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x8000) == 0)
  {
LABEL_26:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_129;
  }
LABEL_128:
  PB::TextFormatter::format(a2, "isDescalationDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x10000) == 0)
  {
LABEL_27:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_130;
  }
LABEL_129:
  PB::TextFormatter::format(a2, "isDescalationRequired");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x20000) == 0)
  {
LABEL_28:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_131;
  }
LABEL_130:
  PB::TextFormatter::format(a2, "isEvaluatingMovingGps");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x40000) == 0)
  {
LABEL_29:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_132;
  }
LABEL_131:
  PB::TextFormatter::format(a2, "isFreeFallDetectedEpoch");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x80000) == 0)
  {
LABEL_30:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_133;
  }
LABEL_132:
  PB::TextFormatter::format(a2, "isHighSpeedCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x100000) == 0)
  {
LABEL_31:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_134;
  }
LABEL_133:
  PB::TextFormatter::format(a2, "isHighSpeedCrashDetectedOverWindow");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x200000) == 0)
  {
LABEL_32:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_135;
  }
LABEL_134:
  PB::TextFormatter::format(a2, "isHighSpeedDetectedOverWindow");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x400000) == 0)
  {
LABEL_33:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_136;
  }
LABEL_135:
  PB::TextFormatter::format(a2, "isLowSensCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x800000) == 0)
  {
LABEL_34:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_137;
  }
LABEL_136:
  PB::TextFormatter::format(a2, "isLowSensRolloverCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_35:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_138;
  }
LABEL_137:
  PB::TextFormatter::format(a2, "isMAPFPDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_139;
  }
LABEL_138:
  PB::TextFormatter::format(a2, "isQuiescenceDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_37:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_140;
  }
LABEL_139:
  PB::TextFormatter::format(a2, "isRolloverCrashDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_141;
  }
LABEL_140:
  PB::TextFormatter::format(a2, "isStepsDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_39:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_142;
  }
LABEL_141:
  PB::TextFormatter::format(a2, "isTriggerClustersDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_40:
    if ((v7 & 4) == 0) {
      goto LABEL_41;
    }
    goto LABEL_143;
  }
LABEL_142:
  PB::TextFormatter::format(a2, "isUshaFPDecided");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 4) == 0)
  {
LABEL_41:
    if ((v7 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_144;
  }
LABEL_143:
  PB::TextFormatter::format(a2, "lastLocalRealTriggerTimestamp");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 8) == 0)
  {
LABEL_42:
    if ((v7 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_145;
  }
LABEL_144:
  PB::TextFormatter::format(a2, "lastRemoteRealTriggerTimestamp");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x10) == 0)
  {
LABEL_43:
    if ((v7 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_146;
  }
LABEL_145:
  PB::TextFormatter::format(a2, "lastRemoteSampleTimestamp");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x20) == 0)
  {
LABEL_44:
    if ((v7 & 0x80000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_147;
  }
LABEL_146:
  PB::TextFormatter::format(a2, "lastTimestampMAPDecision");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x80000) == 0)
  {
LABEL_45:
    if ((v7 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_148;
  }
LABEL_147:
  PB::TextFormatter::format(a2, "lowSpeedOrFakeCountAtBoundaryThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x100000) == 0)
  {
LABEL_46:
    if ((v7 & 0x200000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_149;
  }
LABEL_148:
  PB::TextFormatter::format(a2, "maxPulse", *((float *)this + 30));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x200000) == 0)
  {
LABEL_47:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_150;
  }
LABEL_149:
  PB::TextFormatter::format(a2, "maxPulseHarmonicMean", *((float *)this + 31));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x400000) == 0)
  {
LABEL_48:
    if ((v7 & 0x800000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_151;
  }
LABEL_150:
  PB::TextFormatter::format(a2, "maximumHoldDuration", *((float *)this + 32));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x800000) == 0)
  {
LABEL_49:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_152;
  }
LABEL_151:
  PB::TextFormatter::format(a2, "minimumHoldDuration", *((float *)this + 33));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x1000000) == 0)
  {
LABEL_50:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_153;
  }
LABEL_152:
  PB::TextFormatter::format(a2, "movingCountThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x2000000) == 0)
  {
LABEL_51:
    if ((v7 & 0x4000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_154;
  }
LABEL_153:
  PB::TextFormatter::format(a2, "movingCountThresholdFromSydneyB");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x4000000) == 0)
  {
LABEL_52:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_155;
  }
LABEL_154:
  PB::TextFormatter::format(a2, "movingGpsCount");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x8000000) == 0)
  {
LABEL_53:
    if ((v7 & 0x10000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_156;
  }
LABEL_155:
  PB::TextFormatter::format(a2, "movingGpsCountTotal");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x10000000) == 0)
  {
LABEL_54:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_157;
  }
LABEL_156:
  PB::TextFormatter::format(a2, "numAudioSkiing");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x20000000) == 0)
  {
LABEL_55:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_158;
  }
LABEL_157:
  PB::TextFormatter::format(a2, "numAudioSkiingThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x40000000) == 0)
  {
LABEL_56:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_159;
  }
LABEL_158:
  PB::TextFormatter::format(a2, "numBaroIncreasesSkiing");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x80000000) == 0)
  {
LABEL_57:
    if ((v7 & 0x100000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_160;
  }
LABEL_159:
  PB::TextFormatter::format(a2, "numBaroIncreasesSkiingThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x100000000) == 0)
  {
LABEL_58:
    if ((v7 & 0x200000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_161;
  }
LABEL_160:
  PB::TextFormatter::format(a2, "numDeescalationAOI");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x200000000) == 0)
  {
LABEL_59:
    if ((v7 & 0x400000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_162;
  }
LABEL_161:
  PB::TextFormatter::format(a2, "numDeescalationMAP");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x400000000) == 0)
  {
LABEL_60:
    if ((v7 & 0x800000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_163;
  }
LABEL_162:
  PB::TextFormatter::format(a2, "numDeescalationTwoLevel");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x800000000) == 0)
  {
LABEL_61:
    if ((v7 & 0x1000000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_164;
  }
LABEL_163:
  PB::TextFormatter::format(a2, "numDeescalationUsha");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x1000000000) == 0)
  {
LABEL_62:
    if ((v7 & 0x2000000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_165;
  }
LABEL_164:
  PB::TextFormatter::format(a2, "numGpsSamplesInHistory");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x2000000000) == 0)
  {
LABEL_63:
    if ((v7 & 0x4000000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_166;
  }
LABEL_165:
  PB::TextFormatter::format(a2, "numLowOrFakeGpsSamplesInHistory");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x4000000000) == 0)
  {
LABEL_64:
    if ((v7 & 0x8000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_167;
  }
LABEL_166:
  PB::TextFormatter::format(a2, "numTriggersWithRecentSkiLiftDetected");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x8000000000) == 0)
  {
LABEL_65:
    if ((v7 & 0x10000000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_168;
  }
LABEL_167:
  PB::TextFormatter::format(a2, "numTriggersWithTrueBtHint");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x10000000000) == 0)
  {
LABEL_66:
    if ((v7 & 0x20000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_169;
  }
LABEL_168:
  PB::TextFormatter::format(a2, "numUshaCPEpoch");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x20000000000) == 0)
  {
LABEL_67:
    if ((v7 & 0x40000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_170;
  }
LABEL_169:
  PB::TextFormatter::format(a2, "numUshaCPEpochThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x40000000000) == 0)
  {
LABEL_68:
    if ((v7 & 0x80000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_171;
  }
LABEL_170:
  PB::TextFormatter::format(a2, "numUshaFPEpoch");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x80000000000) == 0)
  {
LABEL_69:
    if ((v7 & 0x100000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_172;
  }
LABEL_171:
  PB::TextFormatter::format(a2, "numUshaFPEpochThreshold");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x100000000000) == 0)
  {
LABEL_70:
    if ((v7 & 0x200000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_173;
  }
LABEL_172:
  PB::TextFormatter::format(a2, "pedometerArmConstrainedState");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x200000000000) == 0)
  {
LABEL_71:
    if ((v7 & 0x400000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_174;
  }
LABEL_173:
  PB::TextFormatter::format(a2, "quiescenceCumulativeRotationHarmonicMeanThreshold", *((float *)this + 55));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x400000000000) == 0)
  {
LABEL_72:
    if ((v7 & 0x800000000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_175;
  }
LABEL_174:
  PB::TextFormatter::format(a2, "quiescenceMaxPulseHarmonicMeanThreshold", *((float *)this + 56));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x800000000000) == 0)
  {
LABEL_73:
    if ((v7 & 0x1000000000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_176;
  }
LABEL_175:
  PB::TextFormatter::format(a2, "quiescencePulseEpochCount");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x1000000000000) == 0)
  {
LABEL_74:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_177;
  }
LABEL_176:
  PB::TextFormatter::format(a2, "quiescenceSpinEpochCount");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x2000000000000) == 0)
  {
LABEL_75:
    if ((v7 & 0x4000000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_178;
  }
LABEL_177:
  PB::TextFormatter::format(a2, "sameEventState");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((*v5 & 0x4000000000000) == 0)
  {
LABEL_76:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_179;
  }
LABEL_178:
  PB::TextFormatter::format(a2, "secondDeescalationHoldDuration", *((float *)this + 60));
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_77:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_180;
  }
LABEL_179:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfAutocorrelationCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x80000000) == 0)
  {
LABEL_78:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_181;
  }
LABEL_180:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfJointDetectionCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x100000000) == 0)
  {
LABEL_79:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_182;
  }
LABEL_181:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfMAPFPCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x200000000) == 0)
  {
LABEL_80:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_183;
  }
LABEL_182:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfMovingCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x400000000) == 0)
  {
LABEL_81:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_184;
  }
LABEL_183:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfQuiescenceCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x800000000) == 0)
  {
LABEL_82:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_185;
  }
LABEL_184:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfSkiLiftCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x1000000000) == 0)
  {
LABEL_83:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_186;
  }
LABEL_185:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfSkiingCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x2000000000) == 0)
  {
LABEL_84:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_187;
  }
LABEL_186:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfStaticCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x4000000000) == 0)
  {
LABEL_85:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_188;
  }
LABEL_187:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfStepsCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x8000000000) == 0)
  {
LABEL_86:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_189;
  }
LABEL_188:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfTriggerClustersCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x10000000000) == 0)
  {
LABEL_87:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_190;
  }
LABEL_189:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfTwoLevelSensitivityCondition");
  uint64_t v7 = *v5;
  uint64_t v6 = *(void *)((char *)this + 364);
  if ((v6 & 0x20000000000) == 0)
  {
LABEL_88:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_191;
  }
LABEL_190:
  PB::TextFormatter::format(a2, "shouldDeescalateBecauseOfUshaFPCondition");
  uint64_t v7 = *v5;
  if ((*(void *)((unsigned char *)this + 364) & 0x40000000000) == 0)
  {
LABEL_89:
    if ((v7 & 0x8000000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_192;
  }
LABEL_191:
  PB::TextFormatter::format(a2, "shouldEnableHighSensBecauseOfDistanceToRoadCondition");
  uint64_t v7 = *v5;
  if ((*v5 & 0x8000000000000) == 0)
  {
LABEL_90:
    if ((v7 & 0x10000000000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_193;
  }
LABEL_192:
  PB::TextFormatter::format(a2, "skiingPressureChangeOverEpochThreshold", *((float *)this + 61));
  uint64_t v7 = *v5;
  if ((*v5 & 0x10000000000000) == 0)
  {
LABEL_91:
    if ((v7 & 0x20000000000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_194;
  }
LABEL_193:
  PB::TextFormatter::format(a2, "staticCountThreshold");
  uint64_t v7 = *v5;
  if ((*v5 & 0x20000000000000) == 0)
  {
LABEL_92:
    if ((v7 & 0x40000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_195;
  }
LABEL_194:
  PB::TextFormatter::format(a2, "staticGpsCount");
  uint64_t v7 = *v5;
  if ((*v5 & 0x40000000000000) == 0)
  {
LABEL_93:
    if ((v7 & 0x80000000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_196;
  }
LABEL_195:
  PB::TextFormatter::format(a2, "staticGpsCountTotal");
  uint64_t v7 = *v5;
  if ((*v5 & 0x80000000000000) == 0)
  {
LABEL_94:
    if ((v7 & 0x100000000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_197;
  }
LABEL_196:
  PB::TextFormatter::format(a2, "stationaryCountMissingAsNoOpThreshold");
  uint64_t v7 = *v5;
  if ((*v5 & 0x100000000000000) == 0)
  {
LABEL_95:
    if ((v7 & 0x40) == 0) {
      goto LABEL_96;
    }
    goto LABEL_198;
  }
LABEL_197:
  PB::TextFormatter::format(a2, "stepCountEventTimestamp");
  uint64_t v7 = *v5;
  if ((*v5 & 0x40) == 0)
  {
LABEL_96:
    if ((v7 & 0x200000000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_199;
  }
LABEL_198:
  PB::TextFormatter::format(a2, "stepCountEventTimestamp64");
  uint64_t v7 = *v5;
  if ((*v5 & 0x200000000000000) == 0)
  {
LABEL_97:
    if ((v7 & 0x400000000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_200;
  }
LABEL_199:
  PB::TextFormatter::format(a2, "stepsCadence", *((float *)this + 67));
  uint64_t v7 = *v5;
  if ((*v5 & 0x400000000000000) == 0)
  {
LABEL_98:
    if ((v7 & 0x800000000000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_201;
  }
LABEL_200:
  PB::TextFormatter::format(a2, "stepsCadenceThreshold", *((float *)this + 68));
  uint64_t v7 = *v5;
  if ((*v5 & 0x800000000000000) == 0)
  {
LABEL_99:
    if ((v7 & 0x1000000000000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_202;
  }
LABEL_201:
  PB::TextFormatter::format(a2, "stepsCount");
  uint64_t v7 = *v5;
  if ((*v5 & 0x1000000000000000) == 0)
  {
LABEL_100:
    if ((v7 & 0x2000000000000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_203;
  }
LABEL_202:
  PB::TextFormatter::format(a2, "stepsCountThreshold");
  uint64_t v7 = *v5;
  if ((*v5 & 0x2000000000000000) == 0)
  {
LABEL_101:
    if ((v7 & 0x4000000000000000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_102;
  }
LABEL_203:
  PB::TextFormatter::format(a2, "stepsDeescalatedAtOpp");
  if ((*v5 & 0x4000000000000000) != 0) {
LABEL_102:
  }
    PB::TextFormatter::format(a2, "stepsEpochCount", *((float *)this + 72));
LABEL_103:
  uint64_t v8 = *v5;
  if (*v5 < 0)
  {
    PB::TextFormatter::format(a2, "stepsPerMinute", *((float *)this + 73));
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)((char *)this + 364);
    if ((v9 & 1) == 0) {
      goto LABEL_207;
    }
    goto LABEL_206;
  }
  uint64_t v9 = *(void *)((char *)this + 364);
  if (v9)
  {
LABEL_206:
    PB::TextFormatter::format(a2, "stepsPerMinuteThreshold", *((float *)this + 74));
    uint64_t v8 = *v5;
    uint64_t v9 = *(void *)((char *)this + 364);
  }
LABEL_207:
  if ((v9 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "stepsSecondOpportunityLookbackLength");
    uint64_t v9 = *(void *)((char *)this + 364);
    if ((*v5 & 0x80) == 0)
    {
LABEL_209:
      if ((v9 & 4) == 0) {
        goto LABEL_210;
      }
      goto LABEL_218;
    }
  }
  else if ((v8 & 0x80) == 0)
  {
    goto LABEL_209;
  }
  PB::TextFormatter::format(a2, "timestamp");
  uint64_t v9 = *(void *)((char *)this + 364);
  if ((v9 & 4) == 0)
  {
LABEL_210:
    if ((v9 & 8) == 0) {
      goto LABEL_211;
    }
    goto LABEL_219;
  }
LABEL_218:
  PB::TextFormatter::format(a2, "triggerClusterDeescalationWindowBoundary");
  uint64_t v9 = *(void *)((char *)this + 364);
  if ((v9 & 8) == 0)
  {
LABEL_211:
    if ((v9 & 0x10) == 0) {
      goto LABEL_213;
    }
    goto LABEL_212;
  }
LABEL_219:
  PB::TextFormatter::format(a2, "ushaCumulativeRotationThreshold", *((float *)this + 77));
  if ((*(void *)((unsigned char *)this + 364) & 0x10) != 0) {
LABEL_212:
  }
    PB::TextFormatter::format(a2, "ushaPeakPressureThreshold", *((float *)this + 78));
LABEL_213:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaSevereCrashResult::readFrom(CMMsl::KappaSevereCrashResult *this, PB::Reader *a2)
{
  long long v3 = (unint64_t *)((char *)a2 + 8);
  unint64_t v2 = *((void *)a2 + 1);
  int v5 = (char *)a2 + 24;
  int v4 = *((unsigned __int8 *)a2 + 24);
  unint64_t v6 = *((void *)a2 + 2);
  if (v2 < v6 && v4 == 0)
  {
    int v11 = (void *)((char *)this + 356);
    do
    {
      uint64_t v12 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v6)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        unint64_t v15 = 0;
        if (v2 > v6) {
          unint64_t v6 = v2;
        }
        while (1)
        {
          if (v6 == v2)
          {
            unint64_t v15 = 0;
            *int v5 = 1;
            goto LABEL_24;
          }
          unint64_t v21 = v2 + 1;
          char v22 = *(unsigned char *)(v12 + v2);
          *long long v3 = v21;
          v15 |= (unint64_t)(v22 & 0x7F) << v19;
          if ((v22 & 0x80) == 0) {
            break;
          }
          v19 += 7;
          unint64_t v2 = v21;
          BOOL v18 = v20++ > 8;
          if (v18)
          {
LABEL_20:
            unint64_t v15 = 0;
            goto LABEL_24;
          }
        }
        if (*v5) {
          unint64_t v15 = 0;
        }
      }
      else
      {
        char v13 = 0;
        unsigned int v14 = 0;
        unint64_t v15 = 0;
        while (1)
        {
          unint64_t v16 = v2 + 1;
          *long long v3 = v2 + 1;
          char v17 = *(unsigned char *)(v12 + v2);
          v15 |= (unint64_t)(v17 & 0x7F) << v13;
          if ((v17 & 0x80) == 0) {
            break;
          }
          v13 += 7;
          unint64_t v2 = v16;
          BOOL v18 = v14++ > 8;
          if (v18) {
            goto LABEL_20;
          }
        }
      }
LABEL_24:
      int v4 = *v5;
      if (*v5) {
        BOOL v23 = 1;
      }
      else {
        BOOL v23 = (v15 & 7) == 4;
      }
      if (v23) {
        break;
      }
      unint64_t v24 = v15 >> 3;
      if ((int)(v15 >> 3) > 400)
      {
        if ((int)v24 <= 900)
        {
          if ((int)v24 > 600)
          {
            if ((int)v24 > 700)
            {
              switch((int)v24)
              {
                case 801:
                  *v11 |= 0x100000uLL;
                  unint64_t v59 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v59 + 4 > *((void *)a2 + 2)) {
                    goto LABEL_512;
                  }
                  *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v59);
                  goto LABEL_919;
                case 802:
                  *v11 |= 0x400uLL;
                  unint64_t v426 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v426 + 4 > *((void *)a2 + 2)) {
                    goto LABEL_512;
                  }
                  *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v426);
                  goto LABEL_919;
                case 803:
                  *v11 |= 0x200000uLL;
                  unint64_t v427 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v427 + 4 > *((void *)a2 + 2)) {
                    goto LABEL_512;
                  }
                  *((_DWORD *)this + 31) = *(_DWORD *)(*(void *)a2 + v427);
                  goto LABEL_919;
                case 804:
                  *v11 |= 0x800uLL;
                  unint64_t v428 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v428 + 4 > *((void *)a2 + 2)) {
                    goto LABEL_512;
                  }
                  *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v428);
                  goto LABEL_919;
                default:
                  if (v24 == 701)
                  {
                    *v11 |= 0x800000000000uLL;
                    unint64_t v447 = *((void *)a2 + 1);
                    unint64_t v448 = *((void *)a2 + 2);
                    uint64_t v449 = *(void *)a2;
                    if (v447 > 0xFFFFFFFFFFFFFFF5 || v447 + 10 > v448)
                    {
                      char v692 = 0;
                      unsigned int v693 = 0;
                      uint64_t v452 = 0;
                      if (v448 <= v447) {
                        unint64_t v448 = *((void *)a2 + 1);
                      }
                      while (1)
                      {
                        if (v448 == v447)
                        {
                          LODWORD(v452) = 0;
                          *int v5 = 1;
                          goto LABEL_1052;
                        }
                        unint64_t v694 = v447 + 1;
                        char v695 = *(unsigned char *)(v449 + v447);
                        *long long v3 = v694;
                        v452 |= (unint64_t)(v695 & 0x7F) << v692;
                        if ((v695 & 0x80) == 0) {
                          break;
                        }
                        v692 += 7;
                        unint64_t v447 = v694;
                        BOOL v18 = v693++ > 8;
                        if (v18)
                        {
LABEL_815:
                          LODWORD(v452) = 0;
                          goto LABEL_1052;
                        }
                      }
                      if (*v5) {
                        LODWORD(v452) = 0;
                      }
                    }
                    else
                    {
                      char v450 = 0;
                      unsigned int v451 = 0;
                      uint64_t v452 = 0;
                      while (1)
                      {
                        unint64_t v453 = v447 + 1;
                        *long long v3 = v447 + 1;
                        char v454 = *(unsigned char *)(v449 + v447);
                        v452 |= (unint64_t)(v454 & 0x7F) << v450;
                        if ((v454 & 0x80) == 0) {
                          break;
                        }
                        v450 += 7;
                        unint64_t v447 = v453;
                        BOOL v18 = v451++ > 8;
                        if (v18) {
                          goto LABEL_815;
                        }
                      }
                    }
LABEL_1052:
                    *((_DWORD *)this + 57) = v452;
                  }
                  else
                  {
                    if (v24 != 702) {
                      goto LABEL_140;
                    }
                    *v11 |= 0x1000000000000uLL;
                    unint64_t v69 = *((void *)a2 + 1);
                    unint64_t v70 = *((void *)a2 + 2);
                    uint64_t v71 = *(void *)a2;
                    if (v69 > 0xFFFFFFFFFFFFFFF5 || v69 + 10 > v70)
                    {
                      char v596 = 0;
                      unsigned int v597 = 0;
                      uint64_t v74 = 0;
                      if (v70 <= v69) {
                        unint64_t v70 = *((void *)a2 + 1);
                      }
                      while (1)
                      {
                        if (v70 == v69)
                        {
                          LODWORD(v74) = 0;
                          *int v5 = 1;
                          goto LABEL_980;
                        }
                        unint64_t v598 = v69 + 1;
                        char v599 = *(unsigned char *)(v71 + v69);
                        *long long v3 = v598;
                        v74 |= (unint64_t)(v599 & 0x7F) << v596;
                        if ((v599 & 0x80) == 0) {
                          break;
                        }
                        v596 += 7;
                        unint64_t v69 = v598;
                        BOOL v18 = v597++ > 8;
                        if (v18)
                        {
LABEL_583:
                          LODWORD(v74) = 0;
                          goto LABEL_980;
                        }
                      }
                      if (*v5) {
                        LODWORD(v74) = 0;
                      }
                    }
                    else
                    {
                      char v72 = 0;
                      unsigned int v73 = 0;
                      uint64_t v74 = 0;
                      while (1)
                      {
                        unint64_t v75 = v69 + 1;
                        *long long v3 = v69 + 1;
                        char v76 = *(unsigned char *)(v71 + v69);
                        v74 |= (unint64_t)(v76 & 0x7F) << v72;
                        if ((v76 & 0x80) == 0) {
                          break;
                        }
                        v72 += 7;
                        unint64_t v69 = v75;
                        BOOL v18 = v73++ > 8;
                        if (v18) {
                          goto LABEL_583;
                        }
                      }
                    }
LABEL_980:
                    *((_DWORD *)this + 58) = v74;
                  }
                  break;
              }
            }
            else
            {
              switch((int)v24)
              {
                case 601:
                  v11[1] |= 0x400uLL;
                  unint64_t v47 = *((void *)a2 + 1);
                  if (v47 >= *((void *)a2 + 2))
                  {
                    BOOL v50 = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v48 = v47 + 1;
                    int v49 = *(unsigned __int8 *)(*(void *)a2 + v47);
                    *((void *)a2 + 1) = v48;
                    BOOL v50 = v49 != 0;
                  }
                  *((unsigned char *)this + 321) = v50;
                  goto LABEL_920;
                case 602:
                  *v11 |= 0x4000uLL;
                  unint64_t v393 = *((void *)a2 + 1);
                  unint64_t v394 = *((void *)a2 + 2);
                  uint64_t v395 = *(void *)a2;
                  if (v393 <= 0xFFFFFFFFFFFFFFF5 && v393 + 10 <= v394)
                  {
                    char v396 = 0;
                    unsigned int v397 = 0;
                    uint64_t v398 = 0;
                    do
                    {
                      unint64_t v399 = v393 + 1;
                      *long long v3 = v393 + 1;
                      char v400 = *(unsigned char *)(v395 + v393);
                      v398 |= (unint64_t)(v400 & 0x7F) << v396;
                      if ((v400 & 0x80) == 0) {
                        goto LABEL_1034;
                      }
                      v396 += 7;
                      unint64_t v393 = v399;
                      BOOL v18 = v397++ > 8;
                    }
                    while (!v18);
LABEL_773:
                    LODWORD(v398) = 0;
                    goto LABEL_1034;
                  }
                  char v668 = 0;
                  unsigned int v669 = 0;
                  uint64_t v398 = 0;
                  if (v394 <= v393) {
                    unint64_t v394 = *((void *)a2 + 1);
                  }
                  while (2)
                  {
                    if (v394 == v393)
                    {
                      LODWORD(v398) = 0;
                      *int v5 = 1;
                    }
                    else
                    {
                      unint64_t v670 = v393 + 1;
                      char v671 = *(unsigned char *)(v395 + v393);
                      *long long v3 = v670;
                      v398 |= (unint64_t)(v671 & 0x7F) << v668;
                      if (v671 < 0)
                      {
                        v668 += 7;
                        unint64_t v393 = v670;
                        BOOL v18 = v669++ > 8;
                        if (v18) {
                          goto LABEL_773;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v398) = 0;
                      }
                    }
                    break;
                  }
LABEL_1034:
                  *((_DWORD *)this + 24) = v398;
                  goto LABEL_920;
                case 603:
                  *v11 |= 0x1000uLL;
                  unint64_t v401 = *v3;
                  if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v401 + 4 > *((void *)a2 + 2)) {
                    goto LABEL_512;
                  }
                  *((_DWORD *)this + 22) = *(_DWORD *)(*(void *)a2 + v401);
                  goto LABEL_919;
                case 604:
                  *v11 |= 0x100000000000uLL;
                  unint64_t v402 = *((void *)a2 + 1);
                  unint64_t v403 = *((void *)a2 + 2);
                  uint64_t v404 = *(void *)a2;
                  if (v402 <= 0xFFFFFFFFFFFFFFF5 && v402 + 10 <= v403)
                  {
                    char v405 = 0;
                    unsigned int v406 = 0;
                    uint64_t v407 = 0;
                    do
                    {
                      unint64_t v408 = v402 + 1;
                      *long long v3 = v402 + 1;
                      char v409 = *(unsigned char *)(v404 + v402);
                      v407 |= (unint64_t)(v409 & 0x7F) << v405;
                      if ((v409 & 0x80) == 0) {
                        goto LABEL_1037;
                      }
                      v405 += 7;
                      unint64_t v402 = v408;
                      BOOL v18 = v406++ > 8;
                    }
                    while (!v18);
LABEL_780:
                    LODWORD(v407) = 0;
                    goto LABEL_1037;
                  }
                  char v672 = 0;
                  unsigned int v673 = 0;
                  uint64_t v407 = 0;
                  if (v403 <= v402) {
                    unint64_t v403 = *((void *)a2 + 1);
                  }
                  while (2)
                  {
                    if (v403 == v402)
                    {
                      LODWORD(v407) = 0;
                      *int v5 = 1;
                    }
                    else
                    {
                      unint64_t v674 = v402 + 1;
                      char v675 = *(unsigned char *)(v404 + v402);
                      *long long v3 = v674;
                      v407 |= (unint64_t)(v675 & 0x7F) << v672;
                      if (v675 < 0)
                      {
                        v672 += 7;
                        unint64_t v402 = v674;
                        BOOL v18 = v673++ > 8;
                        if (v18) {
                          goto LABEL_780;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v407) = 0;
                      }
                    }
                    break;
                  }
LABEL_1037:
                  *((_DWORD *)this + 54) = v407;
                  goto LABEL_920;
                case 605:
                  *v11 |= 0x100000000000000uLL;
                  unint64_t v410 = *((void *)a2 + 1);
                  unint64_t v411 = *((void *)a2 + 2);
                  uint64_t v412 = *(void *)a2;
                  if (v410 <= 0xFFFFFFFFFFFFFFF5 && v410 + 10 <= v411)
                  {
                    char v413 = 0;
                    unsigned int v414 = 0;
                    uint64_t v415 = 0;
                    do
                    {
                      unint64_t v416 = v410 + 1;
                      *long long v3 = v410 + 1;
                      char v417 = *(unsigned char *)(v412 + v410);
                      v415 |= (unint64_t)(v417 & 0x7F) << v413;
                      if ((v417 & 0x80) == 0) {
                        goto LABEL_1040;
                      }
                      v413 += 7;
                      unint64_t v410 = v416;
                      BOOL v18 = v414++ > 8;
                    }
                    while (!v18);
LABEL_787:
                    LODWORD(v415) = 0;
                    goto LABEL_1040;
                  }
                  char v676 = 0;
                  unsigned int v677 = 0;
                  uint64_t v415 = 0;
                  if (v411 <= v410) {
                    unint64_t v411 = *((void *)a2 + 1);
                  }
                  while (2)
                  {
                    if (v411 == v410)
                    {
                      LODWORD(v415) = 0;
                      *int v5 = 1;
                    }
                    else
                    {
                      unint64_t v678 = v410 + 1;
                      char v679 = *(unsigned char *)(v412 + v410);
                      *long long v3 = v678;
                      v415 |= (unint64_t)(v679 & 0x7F) << v676;
                      if (v679 < 0)
                      {
                        v676 += 7;
                        unint64_t v410 = v678;
                        BOOL v18 = v677++ > 8;
                        if (v18) {
                          goto LABEL_787;
                        }
                        continue;
                      }
                      if (*v5) {
                        LODWORD(v415) = 0;
                      }
                    }
                    break;
                  }
LABEL_1040:
                  *((_DWORD *)this + 66) = v415;
                  goto LABEL_920;
                case 606:
                  *v11 |= 0x40uLL;
                  unint64_t v418 = *((void *)a2 + 1);
                  unint64_t v419 = *((void *)a2 + 2);
                  uint64_t v420 = *(void *)a2;
                  if (v418 <= 0xFFFFFFFFFFFFFFF5 && v418 + 10 <= v419)
                  {
                    char v421 = 0;
                    unsigned int v422 = 0;
                    uint64_t v423 = 0;
                    do
                    {
                      unint64_t v424 = v418 + 1;
                      *long long v3 = v418 + 1;
                      char v425 = *(unsigned char *)(v420 + v418);
                      v423 |= (unint64_t)(v425 & 0x7F) << v421;
                      if ((v425 & 0x80) == 0) {
                        goto LABEL_1043;
                      }
                      v421 += 7;
                      unint64_t v418 = v424;
                      BOOL v18 = v422++ > 8;
                    }
                    while (!v18);
LABEL_794:
                    uint64_t v423 = 0;
                    goto LABEL_1043;
                  }
                  char v680 = 0;
                  unsigned int v681 = 0;
                  uint64_t v423 = 0;
                  if (v419 <= v418) {
                    unint64_t v419 = *((void *)a2 + 1);
                  }
                  break;
                default:
                  goto LABEL_140;
              }
              while (1)
              {
                if (v419 == v418)
                {
                  uint64_t v423 = 0;
                  *int v5 = 1;
                  goto LABEL_1043;
                }
                unint64_t v682 = v418 + 1;
                char v683 = *(unsigned char *)(v420 + v418);
                *long long v3 = v682;
                v423 |= (unint64_t)(v683 & 0x7F) << v680;
                if ((v683 & 0x80) == 0) {
                  break;
                }
                v680 += 7;
                unint64_t v418 = v682;
                BOOL v18 = v681++ > 8;
                if (v18) {
                  goto LABEL_794;
                }
              }
              if (*v5) {
                uint64_t v423 = 0;
              }
LABEL_1043:
              *((void *)this + 7) = v423;
            }
          }
          else
          {
            switch((int)v24)
            {
              case 401:
                *v11 |= 0x20000000000000uLL;
                unint64_t v27 = *((void *)a2 + 1);
                unint64_t v28 = *((void *)a2 + 2);
                uint64_t v29 = *(void *)a2;
                if (v27 <= 0xFFFFFFFFFFFFFFF5 && v27 + 10 <= v28)
                {
                  char v30 = 0;
                  unsigned int v31 = 0;
                  uint64_t v32 = 0;
                  do
                  {
                    unint64_t v33 = v27 + 1;
                    *long long v3 = v27 + 1;
                    char v34 = *(unsigned char *)(v29 + v27);
                    v32 |= (unint64_t)(v34 & 0x7F) << v30;
                    if ((v34 & 0x80) == 0) {
                      goto LABEL_974;
                    }
                    v30 += 7;
                    unint64_t v27 = v33;
                    BOOL v18 = v31++ > 8;
                  }
                  while (!v18);
LABEL_565:
                  LODWORD(v32) = 0;
                  goto LABEL_974;
                }
                char v588 = 0;
                unsigned int v589 = 0;
                uint64_t v32 = 0;
                if (v28 <= v27) {
                  unint64_t v28 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v28 == v27)
                  {
                    LODWORD(v32) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v590 = v27 + 1;
                    char v591 = *(unsigned char *)(v29 + v27);
                    *long long v3 = v590;
                    v32 |= (unint64_t)(v591 & 0x7F) << v588;
                    if (v591 < 0)
                    {
                      v588 += 7;
                      unint64_t v27 = v590;
                      BOOL v18 = v589++ > 8;
                      if (v18) {
                        goto LABEL_565;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v32) = 0;
                    }
                  }
                  break;
                }
LABEL_974:
                *((_DWORD *)this + 63) = v32;
                goto LABEL_920;
              case 402:
                *v11 |= 0x40000000000000uLL;
                unint64_t v193 = *((void *)a2 + 1);
                unint64_t v194 = *((void *)a2 + 2);
                uint64_t v195 = *(void *)a2;
                if (v193 <= 0xFFFFFFFFFFFFFFF5 && v193 + 10 <= v194)
                {
                  char v196 = 0;
                  unsigned int v197 = 0;
                  uint64_t v198 = 0;
                  do
                  {
                    unint64_t v199 = v193 + 1;
                    *long long v3 = v193 + 1;
                    char v200 = *(unsigned char *)(v195 + v193);
                    v198 |= (unint64_t)(v200 & 0x7F) << v196;
                    if ((v200 & 0x80) == 0) {
                      goto LABEL_1007;
                    }
                    v196 += 7;
                    unint64_t v193 = v199;
                    BOOL v18 = v197++ > 8;
                  }
                  while (!v18);
LABEL_646:
                  LODWORD(v198) = 0;
                  goto LABEL_1007;
                }
                char v632 = 0;
                unsigned int v633 = 0;
                uint64_t v198 = 0;
                if (v194 <= v193) {
                  unint64_t v194 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v194 == v193)
                  {
                    LODWORD(v198) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v634 = v193 + 1;
                    char v635 = *(unsigned char *)(v195 + v193);
                    *long long v3 = v634;
                    v198 |= (unint64_t)(v635 & 0x7F) << v632;
                    if (v635 < 0)
                    {
                      v632 += 7;
                      unint64_t v193 = v634;
                      BOOL v18 = v633++ > 8;
                      if (v18) {
                        goto LABEL_646;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v198) = 0;
                    }
                  }
                  break;
                }
LABEL_1007:
                *((_DWORD *)this + 64) = v198;
                goto LABEL_920;
              case 403:
                *v11 |= 0x4000000uLL;
                unint64_t v201 = *((void *)a2 + 1);
                unint64_t v202 = *((void *)a2 + 2);
                uint64_t v203 = *(void *)a2;
                if (v201 <= 0xFFFFFFFFFFFFFFF5 && v201 + 10 <= v202)
                {
                  char v204 = 0;
                  unsigned int v205 = 0;
                  uint64_t v206 = 0;
                  do
                  {
                    unint64_t v207 = v201 + 1;
                    *long long v3 = v201 + 1;
                    char v208 = *(unsigned char *)(v203 + v201);
                    v206 |= (unint64_t)(v208 & 0x7F) << v204;
                    if ((v208 & 0x80) == 0) {
                      goto LABEL_1010;
                    }
                    v204 += 7;
                    unint64_t v201 = v207;
                    BOOL v18 = v205++ > 8;
                  }
                  while (!v18);
LABEL_653:
                  LODWORD(v206) = 0;
                  goto LABEL_1010;
                }
                char v636 = 0;
                unsigned int v637 = 0;
                uint64_t v206 = 0;
                if (v202 <= v201) {
                  unint64_t v202 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v202 == v201)
                  {
                    LODWORD(v206) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v638 = v201 + 1;
                    char v639 = *(unsigned char *)(v203 + v201);
                    *long long v3 = v638;
                    v206 |= (unint64_t)(v639 & 0x7F) << v636;
                    if (v639 < 0)
                    {
                      v636 += 7;
                      unint64_t v201 = v638;
                      BOOL v18 = v637++ > 8;
                      if (v18) {
                        goto LABEL_653;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v206) = 0;
                    }
                  }
                  break;
                }
LABEL_1010:
                *((_DWORD *)this + 36) = v206;
                goto LABEL_920;
              case 404:
                *v11 |= 0x8000000uLL;
                unint64_t v209 = *((void *)a2 + 1);
                unint64_t v210 = *((void *)a2 + 2);
                uint64_t v211 = *(void *)a2;
                if (v209 <= 0xFFFFFFFFFFFFFFF5 && v209 + 10 <= v210)
                {
                  char v212 = 0;
                  unsigned int v213 = 0;
                  uint64_t v214 = 0;
                  do
                  {
                    unint64_t v215 = v209 + 1;
                    *long long v3 = v209 + 1;
                    char v216 = *(unsigned char *)(v211 + v209);
                    v214 |= (unint64_t)(v216 & 0x7F) << v212;
                    if ((v216 & 0x80) == 0) {
                      goto LABEL_1013;
                    }
                    v212 += 7;
                    unint64_t v209 = v215;
                    BOOL v18 = v213++ > 8;
                  }
                  while (!v18);
LABEL_660:
                  LODWORD(v214) = 0;
                  goto LABEL_1013;
                }
                char v640 = 0;
                unsigned int v641 = 0;
                uint64_t v214 = 0;
                if (v210 <= v209) {
                  unint64_t v210 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v210 == v209)
                  {
                    LODWORD(v214) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v642 = v209 + 1;
                    char v643 = *(unsigned char *)(v211 + v209);
                    *long long v3 = v642;
                    v214 |= (unint64_t)(v643 & 0x7F) << v640;
                    if (v643 < 0)
                    {
                      v640 += 7;
                      unint64_t v209 = v642;
                      BOOL v18 = v641++ > 8;
                      if (v18) {
                        goto LABEL_660;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v214) = 0;
                    }
                  }
                  break;
                }
LABEL_1013:
                *((_DWORD *)this + 37) = v214;
                goto LABEL_920;
              case 405:
                v11[1] |= 0x20000uLL;
                unint64_t v217 = *((void *)a2 + 1);
                if (v217 >= *((void *)a2 + 2))
                {
                  BOOL v220 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v218 = v217 + 1;
                  int v219 = *(unsigned __int8 *)(*(void *)a2 + v217);
                  *((void *)a2 + 1) = v218;
                  BOOL v220 = v219 != 0;
                }
                *((unsigned char *)this + 328) = v220;
                goto LABEL_920;
              case 406:
                v11[1] |= 0x4000uLL;
                unint64_t v221 = *((void *)a2 + 1);
                if (v221 >= *((void *)a2 + 2))
                {
                  BOOL v224 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v222 = v221 + 1;
                  int v223 = *(unsigned __int8 *)(*(void *)a2 + v221);
                  *((void *)a2 + 1) = v222;
                  BOOL v224 = v223 != 0;
                }
                *((unsigned char *)this + 325) = v224;
                goto LABEL_920;
              case 407:
                *v11 |= 0x2000000000uLL;
                unint64_t v225 = *((void *)a2 + 1);
                unint64_t v226 = *((void *)a2 + 2);
                uint64_t v227 = *(void *)a2;
                if (v225 <= 0xFFFFFFFFFFFFFFF5 && v225 + 10 <= v226)
                {
                  char v228 = 0;
                  unsigned int v229 = 0;
                  uint64_t v230 = 0;
                  do
                  {
                    unint64_t v231 = v225 + 1;
                    *long long v3 = v225 + 1;
                    char v232 = *(unsigned char *)(v227 + v225);
                    v230 |= (unint64_t)(v232 & 0x7F) << v228;
                    if ((v232 & 0x80) == 0) {
                      goto LABEL_1016;
                    }
                    v228 += 7;
                    unint64_t v225 = v231;
                    BOOL v18 = v229++ > 8;
                  }
                  while (!v18);
LABEL_671:
                  LODWORD(v230) = 0;
                  goto LABEL_1016;
                }
                char v644 = 0;
                unsigned int v645 = 0;
                uint64_t v230 = 0;
                if (v226 <= v225) {
                  unint64_t v226 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v226 == v225)
                  {
                    LODWORD(v230) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v646 = v225 + 1;
                    char v647 = *(unsigned char *)(v227 + v225);
                    *long long v3 = v646;
                    v230 |= (unint64_t)(v647 & 0x7F) << v644;
                    if (v647 < 0)
                    {
                      v644 += 7;
                      unint64_t v225 = v646;
                      BOOL v18 = v645++ > 8;
                      if (v18) {
                        goto LABEL_671;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v230) = 0;
                    }
                  }
                  break;
                }
LABEL_1016:
                *((_DWORD *)this + 47) = v230;
                goto LABEL_920;
              case 408:
                *v11 |= 0x80000uLL;
                unint64_t v233 = *((void *)a2 + 1);
                unint64_t v234 = *((void *)a2 + 2);
                uint64_t v235 = *(void *)a2;
                if (v233 <= 0xFFFFFFFFFFFFFFF5 && v233 + 10 <= v234)
                {
                  char v236 = 0;
                  unsigned int v237 = 0;
                  uint64_t v238 = 0;
                  do
                  {
                    unint64_t v239 = v233 + 1;
                    *long long v3 = v233 + 1;
                    char v240 = *(unsigned char *)(v235 + v233);
                    v238 |= (unint64_t)(v240 & 0x7F) << v236;
                    if ((v240 & 0x80) == 0) {
                      goto LABEL_1019;
                    }
                    v236 += 7;
                    unint64_t v233 = v239;
                    BOOL v18 = v237++ > 8;
                  }
                  while (!v18);
LABEL_678:
                  LODWORD(v238) = 0;
                  goto LABEL_1019;
                }
                char v648 = 0;
                unsigned int v649 = 0;
                uint64_t v238 = 0;
                if (v234 <= v233) {
                  unint64_t v234 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v234 == v233)
                  {
                    LODWORD(v238) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v650 = v233 + 1;
                    char v651 = *(unsigned char *)(v235 + v233);
                    *long long v3 = v650;
                    v238 |= (unint64_t)(v651 & 0x7F) << v648;
                    if (v651 < 0)
                    {
                      v648 += 7;
                      unint64_t v233 = v650;
                      BOOL v18 = v649++ > 8;
                      if (v18) {
                        goto LABEL_678;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v238) = 0;
                    }
                  }
                  break;
                }
LABEL_1019:
                *((_DWORD *)this + 29) = v238;
                goto LABEL_920;
              case 409:
                *v11 |= 0x1000000000uLL;
                unint64_t v241 = *((void *)a2 + 1);
                unint64_t v242 = *((void *)a2 + 2);
                uint64_t v243 = *(void *)a2;
                if (v241 <= 0xFFFFFFFFFFFFFFF5 && v241 + 10 <= v242)
                {
                  char v244 = 0;
                  unsigned int v245 = 0;
                  uint64_t v246 = 0;
                  do
                  {
                    unint64_t v247 = v241 + 1;
                    *long long v3 = v241 + 1;
                    char v248 = *(unsigned char *)(v243 + v241);
                    v246 |= (unint64_t)(v248 & 0x7F) << v244;
                    if ((v248 & 0x80) == 0) {
                      goto LABEL_1022;
                    }
                    v244 += 7;
                    unint64_t v241 = v247;
                    BOOL v18 = v245++ > 8;
                  }
                  while (!v18);
LABEL_685:
                  LODWORD(v246) = 0;
                  goto LABEL_1022;
                }
                char v652 = 0;
                unsigned int v653 = 0;
                uint64_t v246 = 0;
                if (v242 <= v241) {
                  unint64_t v242 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v242 == v241)
                  {
                    LODWORD(v246) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v654 = v241 + 1;
                    char v655 = *(unsigned char *)(v243 + v241);
                    *long long v3 = v654;
                    v246 |= (unint64_t)(v655 & 0x7F) << v652;
                    if (v655 < 0)
                    {
                      v652 += 7;
                      unint64_t v241 = v654;
                      BOOL v18 = v653++ > 8;
                      if (v18) {
                        goto LABEL_685;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v246) = 0;
                    }
                  }
                  break;
                }
LABEL_1022:
                *((_DWORD *)this + 46) = v246;
                goto LABEL_920;
              default:
                switch((int)v24)
                {
                  case 501:
                    *v11 |= 0x4000000000000000uLL;
                    unint64_t v60 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > *((void *)a2 + 2)) {
                      goto LABEL_512;
                    }
                    *((_DWORD *)this + 72) = *(_DWORD *)(*(void *)a2 + v60);
                    goto LABEL_919;
                  case 502:
                    *v11 |= 0x8000000000000000;
                    unint64_t v429 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v429 + 4 > *((void *)a2 + 2)) {
                      goto LABEL_512;
                    }
                    *((_DWORD *)this + 73) = *(_DWORD *)(*(void *)a2 + v429);
                    goto LABEL_919;
                  case 503:
                    *v11 |= 0x200000000000000uLL;
                    unint64_t v430 = *v3;
                    if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v430 + 4 > *((void *)a2 + 2)) {
                      goto LABEL_512;
                    }
                    *((_DWORD *)this + 67) = *(_DWORD *)(*(void *)a2 + v430);
                    goto LABEL_919;
                  case 504:
                    *v11 |= 0x800000000000000uLL;
                    unint64_t v431 = *((void *)a2 + 1);
                    unint64_t v432 = *((void *)a2 + 2);
                    uint64_t v433 = *(void *)a2;
                    if (v431 <= 0xFFFFFFFFFFFFFFF5 && v431 + 10 <= v432)
                    {
                      char v434 = 0;
                      unsigned int v435 = 0;
                      uint64_t v436 = 0;
                      do
                      {
                        unint64_t v437 = v431 + 1;
                        *long long v3 = v431 + 1;
                        char v438 = *(unsigned char *)(v433 + v431);
                        v436 |= (unint64_t)(v438 & 0x7F) << v434;
                        if ((v438 & 0x80) == 0) {
                          goto LABEL_1046;
                        }
                        v434 += 7;
                        unint64_t v431 = v437;
                        BOOL v18 = v435++ > 8;
                      }
                      while (!v18);
LABEL_801:
                      LODWORD(v436) = 0;
                      goto LABEL_1046;
                    }
                    char v684 = 0;
                    unsigned int v685 = 0;
                    uint64_t v436 = 0;
                    if (v432 <= v431) {
                      unint64_t v432 = *((void *)a2 + 1);
                    }
                    while (2)
                    {
                      if (v432 == v431)
                      {
                        LODWORD(v436) = 0;
                        *int v5 = 1;
                      }
                      else
                      {
                        unint64_t v686 = v431 + 1;
                        char v687 = *(unsigned char *)(v433 + v431);
                        *long long v3 = v686;
                        v436 |= (unint64_t)(v687 & 0x7F) << v684;
                        if (v687 < 0)
                        {
                          v684 += 7;
                          unint64_t v431 = v686;
                          BOOL v18 = v685++ > 8;
                          if (v18) {
                            goto LABEL_801;
                          }
                          continue;
                        }
                        if (*v5) {
                          LODWORD(v436) = 0;
                        }
                      }
                      break;
                    }
LABEL_1046:
                    *((_DWORD *)this + 69) = v436;
                    goto LABEL_920;
                  case 505:
                    *v11 |= 0x2000000000000000uLL;
                    unint64_t v439 = *((void *)a2 + 1);
                    unint64_t v440 = *((void *)a2 + 2);
                    uint64_t v441 = *(void *)a2;
                    if (v439 <= 0xFFFFFFFFFFFFFFF5 && v439 + 10 <= v440)
                    {
                      char v442 = 0;
                      unsigned int v443 = 0;
                      uint64_t v444 = 0;
                      do
                      {
                        unint64_t v445 = v439 + 1;
                        *long long v3 = v439 + 1;
                        char v446 = *(unsigned char *)(v441 + v439);
                        v444 |= (unint64_t)(v446 & 0x7F) << v442;
                        if ((v446 & 0x80) == 0) {
                          goto LABEL_1049;
                        }
                        v442 += 7;
                        unint64_t v439 = v445;
                        BOOL v18 = v443++ > 8;
                      }
                      while (!v18);
LABEL_808:
                      LODWORD(v444) = 0;
                      goto LABEL_1049;
                    }
                    char v688 = 0;
                    unsigned int v689 = 0;
                    uint64_t v444 = 0;
                    if (v440 <= v439) {
                      unint64_t v440 = *((void *)a2 + 1);
                    }
                    break;
                  default:
                    goto LABEL_140;
                }
                break;
            }
            while (1)
            {
              if (v440 == v439)
              {
                LODWORD(v444) = 0;
                *int v5 = 1;
                goto LABEL_1049;
              }
              unint64_t v690 = v439 + 1;
              char v691 = *(unsigned char *)(v441 + v439);
              *long long v3 = v690;
              v444 |= (unint64_t)(v691 & 0x7F) << v688;
              if ((v691 & 0x80) == 0) {
                break;
              }
              v688 += 7;
              unint64_t v439 = v690;
              BOOL v18 = v689++ > 8;
              if (v18) {
                goto LABEL_808;
              }
            }
            if (*v5) {
              LODWORD(v444) = 0;
            }
LABEL_1049:
            *((_DWORD *)this + 71) = v444;
          }
        }
        else if ((int)v24 <= 1200)
        {
          if ((int)v24 <= 1100)
          {
            switch(v24)
            {
              case 0x385:
                *v11 |= 0x100uLL;
                unint64_t v114 = *v3;
                if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v114 + 4 > *((void *)a2 + 2))
                {
LABEL_512:
                  *int v5 = 1;
                }
                else
                {
                  *((_DWORD *)this + 18) = *(_DWORD *)(*(void *)a2 + v114);
LABEL_919:
                  *((void *)a2 + 1) += 4;
                }
                break;
              case 0x386:
                v11[1] |= 0x200000uLL;
                unint64_t v115 = *((void *)a2 + 1);
                if (v115 >= *((void *)a2 + 2))
                {
                  BOOL v118 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v116 = v115 + 1;
                  int v117 = *(unsigned __int8 *)(*(void *)a2 + v115);
                  *((void *)a2 + 1) = v116;
                  BOOL v118 = v117 != 0;
                }
                *((unsigned char *)this + 332) = v118;
                break;
              case 0x3E9:
                v11[1] |= 4uLL;
                unint64_t v61 = *((void *)a2 + 1);
                unint64_t v62 = *((void *)a2 + 2);
                uint64_t v63 = *(void *)a2;
                if (v61 > 0xFFFFFFFFFFFFFFF5 || v61 + 10 > v62)
                {
                  char v572 = 0;
                  unsigned int v573 = 0;
                  uint64_t v66 = 0;
                  if (v62 <= v61) {
                    unint64_t v62 = *((void *)a2 + 1);
                  }
                  while (1)
                  {
                    if (v62 == v61)
                    {
                      LODWORD(v66) = 0;
                      *int v5 = 1;
                      goto LABEL_935;
                    }
                    unint64_t v574 = v61 + 1;
                    char v575 = *(unsigned char *)(v63 + v61);
                    *long long v3 = v574;
                    v66 |= (unint64_t)(v575 & 0x7F) << v572;
                    if ((v575 & 0x80) == 0) {
                      break;
                    }
                    v572 += 7;
                    unint64_t v61 = v574;
                    BOOL v18 = v573++ > 8;
                    if (v18)
                    {
LABEL_533:
                      LODWORD(v66) = 0;
                      goto LABEL_935;
                    }
                  }
                  if (*v5) {
                    LODWORD(v66) = 0;
                  }
                }
                else
                {
                  char v64 = 0;
                  unsigned int v65 = 0;
                  uint64_t v66 = 0;
                  while (1)
                  {
                    unint64_t v67 = v61 + 1;
                    *long long v3 = v61 + 1;
                    char v68 = *(unsigned char *)(v63 + v61);
                    v66 |= (unint64_t)(v68 & 0x7F) << v64;
                    if ((v68 & 0x80) == 0) {
                      break;
                    }
                    v64 += 7;
                    unint64_t v61 = v67;
                    BOOL v18 = v65++ > 8;
                    if (v18) {
                      goto LABEL_533;
                    }
                  }
                }
LABEL_935:
                *((_DWORD *)this + 76) = v66;
                break;
              default:
LABEL_140:
                uint64_t result = PB::Reader::skip(a2);
                if (!result) {
                  return result;
                }
                break;
            }
          }
          else
          {
            switch((int)v24)
            {
              case 1101:
                *v11 |= 0x10000000uLL;
                unint64_t v51 = *((void *)a2 + 1);
                unint64_t v52 = *((void *)a2 + 2);
                uint64_t v53 = *(void *)a2;
                if (v51 <= 0xFFFFFFFFFFFFFFF5 && v51 + 10 <= v52)
                {
                  char v54 = 0;
                  unsigned int v55 = 0;
                  uint64_t v56 = 0;
                  do
                  {
                    unint64_t v57 = v51 + 1;
                    *long long v3 = v51 + 1;
                    char v58 = *(unsigned char *)(v53 + v51);
                    v56 |= (unint64_t)(v58 & 0x7F) << v54;
                    if ((v58 & 0x80) == 0) {
                      goto LABEL_932;
                    }
                    v54 += 7;
                    unint64_t v51 = v57;
                    BOOL v18 = v55++ > 8;
                  }
                  while (!v18);
LABEL_526:
                  LODWORD(v56) = 0;
                  goto LABEL_932;
                }
                char v568 = 0;
                unsigned int v569 = 0;
                uint64_t v56 = 0;
                if (v52 <= v51) {
                  unint64_t v52 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v52 == v51)
                  {
                    LODWORD(v56) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v570 = v51 + 1;
                    char v571 = *(unsigned char *)(v53 + v51);
                    *long long v3 = v570;
                    v56 |= (unint64_t)(v571 & 0x7F) << v568;
                    if (v571 < 0)
                    {
                      v568 += 7;
                      unint64_t v51 = v570;
                      BOOL v18 = v569++ > 8;
                      if (v18) {
                        goto LABEL_526;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v56) = 0;
                    }
                  }
                  break;
                }
LABEL_932:
                *((_DWORD *)this + 38) = v56;
                goto LABEL_920;
              case 1102:
                *v11 |= 0x40000000uLL;
                unint64_t v85 = *((void *)a2 + 1);
                unint64_t v86 = *((void *)a2 + 2);
                uint64_t v87 = *(void *)a2;
                if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
                {
                  char v88 = 0;
                  unsigned int v89 = 0;
                  uint64_t v90 = 0;
                  do
                  {
                    unint64_t v91 = v85 + 1;
                    *long long v3 = v85 + 1;
                    char v92 = *(unsigned char *)(v87 + v85);
                    v90 |= (unint64_t)(v92 & 0x7F) << v88;
                    if ((v92 & 0x80) == 0) {
                      goto LABEL_938;
                    }
                    v88 += 7;
                    unint64_t v85 = v91;
                    BOOL v18 = v89++ > 8;
                  }
                  while (!v18);
LABEL_540:
                  LODWORD(v90) = 0;
                  goto LABEL_938;
                }
                char v576 = 0;
                unsigned int v577 = 0;
                uint64_t v90 = 0;
                if (v86 <= v85) {
                  unint64_t v86 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v86 == v85)
                  {
                    LODWORD(v90) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v578 = v85 + 1;
                    char v579 = *(unsigned char *)(v87 + v85);
                    *long long v3 = v578;
                    v90 |= (unint64_t)(v579 & 0x7F) << v576;
                    if (v579 < 0)
                    {
                      v576 += 7;
                      unint64_t v85 = v578;
                      BOOL v18 = v577++ > 8;
                      if (v18) {
                        goto LABEL_540;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v90) = 0;
                    }
                  }
                  break;
                }
LABEL_938:
                *((_DWORD *)this + 40) = v90;
                goto LABEL_920;
              case 1103:
                v11[1] |= 0x1000000000uLL;
                unint64_t v93 = *((void *)a2 + 1);
                if (v93 >= *((void *)a2 + 2))
                {
                  BOOL v96 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v94 = v93 + 1;
                  int v95 = *(unsigned __int8 *)(*(void *)a2 + v93);
                  *((void *)a2 + 1) = v94;
                  BOOL v96 = v95 != 0;
                }
                *((unsigned char *)this + 347) = v96;
                goto LABEL_920;
              case 1104:
                *v11 |= 0x80000000uLL;
                unint64_t v97 = *((void *)a2 + 1);
                unint64_t v98 = *((void *)a2 + 2);
                uint64_t v99 = *(void *)a2;
                if (v97 <= 0xFFFFFFFFFFFFFFF5 && v97 + 10 <= v98)
                {
                  char v100 = 0;
                  unsigned int v101 = 0;
                  uint64_t v102 = 0;
                  do
                  {
                    unint64_t v103 = v97 + 1;
                    *long long v3 = v97 + 1;
                    char v104 = *(unsigned char *)(v99 + v97);
                    v102 |= (unint64_t)(v104 & 0x7F) << v100;
                    if ((v104 & 0x80) == 0) {
                      goto LABEL_941;
                    }
                    v100 += 7;
                    unint64_t v97 = v103;
                    BOOL v18 = v101++ > 8;
                  }
                  while (!v18);
LABEL_549:
                  LODWORD(v102) = 0;
                  goto LABEL_941;
                }
                char v580 = 0;
                unsigned int v581 = 0;
                uint64_t v102 = 0;
                if (v98 <= v97) {
                  unint64_t v98 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v98 == v97)
                  {
                    LODWORD(v102) = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v582 = v97 + 1;
                    char v583 = *(unsigned char *)(v99 + v97);
                    *long long v3 = v582;
                    v102 |= (unint64_t)(v583 & 0x7F) << v580;
                    if (v583 < 0)
                    {
                      v580 += 7;
                      unint64_t v97 = v582;
                      BOOL v18 = v581++ > 8;
                      if (v18) {
                        goto LABEL_549;
                      }
                      continue;
                    }
                    if (*v5) {
                      LODWORD(v102) = 0;
                    }
                  }
                  break;
                }
LABEL_941:
                *((_DWORD *)this + 41) = v102;
                goto LABEL_920;
              case 1105:
                *v11 |= 0x20000000uLL;
                unint64_t v105 = *((void *)a2 + 1);
                unint64_t v106 = *((void *)a2 + 2);
                uint64_t v107 = *(void *)a2;
                if (v105 <= 0xFFFFFFFFFFFFFFF5 && v105 + 10 <= v106)
                {
                  char v108 = 0;
                  unsigned int v109 = 0;
                  uint64_t v110 = 0;
                  do
                  {
                    unint64_t v111 = v105 + 1;
                    *long long v3 = v105 + 1;
                    char v112 = *(unsigned char *)(v107 + v105);
                    v110 |= (unint64_t)(v112 & 0x7F) << v108;
                    if ((v112 & 0x80) == 0) {
                      goto LABEL_944;
                    }
                    v108 += 7;
                    unint64_t v105 = v111;
                    BOOL v18 = v109++ > 8;
                  }
                  while (!v18);
LABEL_556:
                  LODWORD(v110) = 0;
                  goto LABEL_944;
                }
                char v584 = 0;
                unsigned int v585 = 0;
                uint64_t v110 = 0;
                if (v106 <= v105) {
                  unint64_t v106 = *((void *)a2 + 1);
                }
                break;
              case 1106:
                *v11 |= 0x8000000000000uLL;
                unint64_t v113 = *v3;
                if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)a2 + 2)) {
                  goto LABEL_512;
                }
                *((_DWORD *)this + 61) = *(_DWORD *)(*(void *)a2 + v113);
                goto LABEL_919;
              default:
                goto LABEL_140;
            }
            while (1)
            {
              if (v106 == v105)
              {
                LODWORD(v110) = 0;
                *int v5 = 1;
                goto LABEL_944;
              }
              unint64_t v586 = v105 + 1;
              char v587 = *(unsigned char *)(v107 + v105);
              *long long v3 = v586;
              v110 |= (unint64_t)(v587 & 0x7F) << v584;
              if ((v587 & 0x80) == 0) {
                break;
              }
              v584 += 7;
              unint64_t v105 = v586;
              BOOL v18 = v585++ > 8;
              if (v18) {
                goto LABEL_556;
              }
            }
            if (*v5) {
              LODWORD(v110) = 0;
            }
LABEL_944:
            *((_DWORD *)this + 39) = v110;
          }
        }
        else
        {
          switch((int)v24)
          {
            case 1301:
              *v11 |= 0x8000uLL;
              unint64_t v26 = *v3;
              if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v26 + 4 > *((void *)a2 + 2)) {
                goto LABEL_512;
              }
              *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v26);
              goto LABEL_919;
            case 1302:
              *v11 |= 0x40000000000uLL;
              unint64_t v455 = *((void *)a2 + 1);
              unint64_t v456 = *((void *)a2 + 2);
              uint64_t v457 = *(void *)a2;
              if (v455 <= 0xFFFFFFFFFFFFFFF5 && v455 + 10 <= v456)
              {
                char v458 = 0;
                unsigned int v459 = 0;
                uint64_t v460 = 0;
                do
                {
                  unint64_t v461 = v455 + 1;
                  *long long v3 = v455 + 1;
                  char v462 = *(unsigned char *)(v457 + v455);
                  v460 |= (unint64_t)(v462 & 0x7F) << v458;
                  if ((v462 & 0x80) == 0) {
                    goto LABEL_1060;
                  }
                  v458 += 7;
                  unint64_t v455 = v461;
                  BOOL v18 = v459++ > 8;
                }
                while (!v18);
LABEL_829:
                LODWORD(v460) = 0;
                goto LABEL_1060;
              }
              char v700 = 0;
              unsigned int v701 = 0;
              uint64_t v460 = 0;
              if (v456 <= v455) {
                unint64_t v456 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v456 == v455)
                {
                  LODWORD(v460) = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v702 = v455 + 1;
                  char v703 = *(unsigned char *)(v457 + v455);
                  *long long v3 = v702;
                  v460 |= (unint64_t)(v703 & 0x7F) << v700;
                  if (v703 < 0)
                  {
                    v700 += 7;
                    unint64_t v455 = v702;
                    BOOL v18 = v701++ > 8;
                    if (v18) {
                      goto LABEL_829;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v460) = 0;
                  }
                }
                break;
              }
LABEL_1060:
              *((_DWORD *)this + 52) = v460;
              break;
            case 1303:
              *v11 |= 0x10000000000uLL;
              unint64_t v463 = *((void *)a2 + 1);
              unint64_t v464 = *((void *)a2 + 2);
              uint64_t v465 = *(void *)a2;
              if (v463 <= 0xFFFFFFFFFFFFFFF5 && v463 + 10 <= v464)
              {
                char v466 = 0;
                unsigned int v467 = 0;
                uint64_t v468 = 0;
                do
                {
                  unint64_t v469 = v463 + 1;
                  *long long v3 = v463 + 1;
                  char v470 = *(unsigned char *)(v465 + v463);
                  v468 |= (unint64_t)(v470 & 0x7F) << v466;
                  if ((v470 & 0x80) == 0) {
                    goto LABEL_1064;
                  }
                  v466 += 7;
                  unint64_t v463 = v469;
                  BOOL v18 = v467++ > 8;
                }
                while (!v18);
LABEL_836:
                LODWORD(v468) = 0;
                goto LABEL_1064;
              }
              char v704 = 0;
              unsigned int v705 = 0;
              uint64_t v468 = 0;
              if (v464 <= v463) {
                unint64_t v464 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v464 == v463)
                {
                  LODWORD(v468) = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v706 = v463 + 1;
                  char v707 = *(unsigned char *)(v465 + v463);
                  *long long v3 = v706;
                  v468 |= (unint64_t)(v707 & 0x7F) << v704;
                  if (v707 < 0)
                  {
                    v704 += 7;
                    unint64_t v463 = v706;
                    BOOL v18 = v705++ > 8;
                    if (v18) {
                      goto LABEL_836;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v468) = 0;
                  }
                }
                break;
              }
LABEL_1064:
              *((_DWORD *)this + 50) = v468;
              break;
            case 1304:
              *v11 |= 0x800000000uLL;
              unint64_t v471 = *((void *)a2 + 1);
              unint64_t v472 = *((void *)a2 + 2);
              uint64_t v473 = *(void *)a2;
              if (v471 <= 0xFFFFFFFFFFFFFFF5 && v471 + 10 <= v472)
              {
                char v474 = 0;
                unsigned int v475 = 0;
                uint64_t v476 = 0;
                do
                {
                  unint64_t v477 = v471 + 1;
                  *long long v3 = v471 + 1;
                  char v478 = *(unsigned char *)(v473 + v471);
                  v476 |= (unint64_t)(v478 & 0x7F) << v474;
                  if ((v478 & 0x80) == 0) {
                    goto LABEL_1068;
                  }
                  v474 += 7;
                  unint64_t v471 = v477;
                  BOOL v18 = v475++ > 8;
                }
                while (!v18);
LABEL_843:
                LODWORD(v476) = 0;
                goto LABEL_1068;
              }
              char v708 = 0;
              unsigned int v709 = 0;
              uint64_t v476 = 0;
              if (v472 <= v471) {
                unint64_t v472 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v472 == v471)
                {
                  LODWORD(v476) = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v710 = v471 + 1;
                  char v711 = *(unsigned char *)(v473 + v471);
                  *long long v3 = v710;
                  v476 |= (unint64_t)(v711 & 0x7F) << v708;
                  if (v711 < 0)
                  {
                    v708 += 7;
                    unint64_t v471 = v710;
                    BOOL v18 = v709++ > 8;
                    if (v18) {
                      goto LABEL_843;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v476) = 0;
                  }
                }
                break;
              }
LABEL_1068:
              *((_DWORD *)this + 45) = v476;
              break;
            case 1305:
              *v11 |= 0x100000000uLL;
              unint64_t v479 = *((void *)a2 + 1);
              unint64_t v480 = *((void *)a2 + 2);
              uint64_t v481 = *(void *)a2;
              if (v479 <= 0xFFFFFFFFFFFFFFF5 && v479 + 10 <= v480)
              {
                char v482 = 0;
                unsigned int v483 = 0;
                uint64_t v484 = 0;
                do
                {
                  unint64_t v485 = v479 + 1;
                  *long long v3 = v479 + 1;
                  char v486 = *(unsigned char *)(v481 + v479);
                  v484 |= (unint64_t)(v486 & 0x7F) << v482;
                  if ((v486 & 0x80) == 0) {
                    goto LABEL_1072;
                  }
                  v482 += 7;
                  unint64_t v479 = v485;
                  BOOL v18 = v483++ > 8;
                }
                while (!v18);
LABEL_850:
                LODWORD(v484) = 0;
                goto LABEL_1072;
              }
              char v712 = 0;
              unsigned int v713 = 0;
              uint64_t v484 = 0;
              if (v480 <= v479) {
                unint64_t v480 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v480 == v479)
                {
                  LODWORD(v484) = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v714 = v479 + 1;
                  char v715 = *(unsigned char *)(v481 + v479);
                  *long long v3 = v714;
                  v484 |= (unint64_t)(v715 & 0x7F) << v712;
                  if (v715 < 0)
                  {
                    v712 += 7;
                    unint64_t v479 = v714;
                    BOOL v18 = v713++ > 8;
                    if (v18) {
                      goto LABEL_850;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v484) = 0;
                  }
                }
                break;
              }
LABEL_1072:
              *((_DWORD *)this + 42) = v484;
              break;
            case 1306:
              *v11 |= 0x400000000uLL;
              unint64_t v487 = *((void *)a2 + 1);
              unint64_t v488 = *((void *)a2 + 2);
              uint64_t v489 = *(void *)a2;
              if (v487 <= 0xFFFFFFFFFFFFFFF5 && v487 + 10 <= v488)
              {
                char v490 = 0;
                unsigned int v491 = 0;
                uint64_t v492 = 0;
                do
                {
                  unint64_t v493 = v487 + 1;
                  *long long v3 = v487 + 1;
                  char v494 = *(unsigned char *)(v489 + v487);
                  v492 |= (unint64_t)(v494 & 0x7F) << v490;
                  if ((v494 & 0x80) == 0) {
                    goto LABEL_1076;
                  }
                  v490 += 7;
                  unint64_t v487 = v493;
                  BOOL v18 = v491++ > 8;
                }
                while (!v18);
LABEL_857:
                LODWORD(v492) = 0;
                goto LABEL_1076;
              }
              char v716 = 0;
              unsigned int v717 = 0;
              uint64_t v492 = 0;
              if (v488 <= v487) {
                unint64_t v488 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v488 == v487)
                {
                  LODWORD(v492) = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v718 = v487 + 1;
                  char v719 = *(unsigned char *)(v489 + v487);
                  *long long v3 = v718;
                  v492 |= (unint64_t)(v719 & 0x7F) << v716;
                  if (v719 < 0)
                  {
                    v716 += 7;
                    unint64_t v487 = v718;
                    BOOL v18 = v717++ > 8;
                    if (v18) {
                      goto LABEL_857;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v492) = 0;
                  }
                }
                break;
              }
LABEL_1076:
              *((_DWORD *)this + 44) = v492;
              break;
            case 1307:
              v11[1] |= 0x100uLL;
              unint64_t v495 = *((void *)a2 + 1);
              if (v495 >= *((void *)a2 + 2))
              {
                BOOL v498 = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v496 = v495 + 1;
                int v497 = *(unsigned __int8 *)(*(void *)a2 + v495);
                *((void *)a2 + 1) = v496;
                BOOL v498 = v497 != 0;
              }
              *((unsigned char *)this + 319) = v498;
              break;
            case 1308:
              v11[1] |= 0x40000uLL;
              unint64_t v499 = *((void *)a2 + 1);
              if (v499 >= *((void *)a2 + 2))
              {
                BOOL v502 = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v500 = v499 + 1;
                int v501 = *(unsigned __int8 *)(*(void *)a2 + v499);
                *((void *)a2 + 1) = v500;
                BOOL v502 = v501 != 0;
              }
              *((unsigned char *)this + 329) = v502;
              break;
            case 1309:
              *v11 |= 0x200000000uLL;
              unint64_t v503 = *((void *)a2 + 1);
              unint64_t v504 = *((void *)a2 + 2);
              uint64_t v505 = *(void *)a2;
              if (v503 <= 0xFFFFFFFFFFFFFFF5 && v503 + 10 <= v504)
              {
                char v506 = 0;
                unsigned int v507 = 0;
                uint64_t v508 = 0;
                do
                {
                  unint64_t v509 = v503 + 1;
                  *long long v3 = v503 + 1;
                  char v510 = *(unsigned char *)(v505 + v503);
                  v508 |= (unint64_t)(v510 & 0x7F) << v506;
                  if ((v510 & 0x80) == 0) {
                    goto LABEL_1080;
                  }
                  v506 += 7;
                  unint64_t v503 = v509;
                  BOOL v18 = v507++ > 8;
                }
                while (!v18);
LABEL_868:
                LODWORD(v508) = 0;
                goto LABEL_1080;
              }
              char v720 = 0;
              unsigned int v721 = 0;
              uint64_t v508 = 0;
              if (v504 <= v503) {
                unint64_t v504 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v504 == v503)
                {
                  LODWORD(v508) = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v722 = v503 + 1;
                  char v723 = *(unsigned char *)(v505 + v503);
                  *long long v3 = v722;
                  v508 |= (unint64_t)(v723 & 0x7F) << v720;
                  if (v723 < 0)
                  {
                    v720 += 7;
                    unint64_t v503 = v722;
                    BOOL v18 = v721++ > 8;
                    if (v18) {
                      goto LABEL_868;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v508) = 0;
                  }
                }
                break;
              }
LABEL_1080:
              *((_DWORD *)this + 43) = v508;
              break;
            case 1310:
              *v11 |= 2uLL;
              unint64_t v511 = *((void *)a2 + 1);
              unint64_t v512 = *((void *)a2 + 2);
              uint64_t v513 = *(void *)a2;
              if (v511 <= 0xFFFFFFFFFFFFFFF5 && v511 + 10 <= v512)
              {
                char v514 = 0;
                unsigned int v515 = 0;
                uint64_t v516 = 0;
                do
                {
                  unint64_t v517 = v511 + 1;
                  *long long v3 = v511 + 1;
                  char v518 = *(unsigned char *)(v513 + v511);
                  v516 |= (unint64_t)(v518 & 0x7F) << v514;
                  if ((v518 & 0x80) == 0) {
                    goto LABEL_1084;
                  }
                  v514 += 7;
                  unint64_t v511 = v517;
                  BOOL v18 = v515++ > 8;
                }
                while (!v18);
LABEL_875:
                uint64_t v516 = 0;
                goto LABEL_1084;
              }
              char v724 = 0;
              unsigned int v725 = 0;
              uint64_t v516 = 0;
              if (v512 <= v511) {
                unint64_t v512 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v512 == v511)
                {
                  uint64_t v516 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v726 = v511 + 1;
                  char v727 = *(unsigned char *)(v513 + v511);
                  *long long v3 = v726;
                  v516 |= (unint64_t)(v727 & 0x7F) << v724;
                  if (v727 < 0)
                  {
                    v724 += 7;
                    unint64_t v511 = v726;
                    BOOL v18 = v725++ > 8;
                    if (v18) {
                      goto LABEL_875;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v516 = 0;
                  }
                }
                break;
              }
LABEL_1084:
              *((void *)this + 2) = v516;
              break;
            case 1311:
              *v11 |= 0x20uLL;
              unint64_t v519 = *((void *)a2 + 1);
              unint64_t v520 = *((void *)a2 + 2);
              uint64_t v521 = *(void *)a2;
              if (v519 <= 0xFFFFFFFFFFFFFFF5 && v519 + 10 <= v520)
              {
                char v522 = 0;
                unsigned int v523 = 0;
                uint64_t v524 = 0;
                do
                {
                  unint64_t v525 = v519 + 1;
                  *long long v3 = v519 + 1;
                  char v526 = *(unsigned char *)(v521 + v519);
                  v524 |= (unint64_t)(v526 & 0x7F) << v522;
                  if ((v526 & 0x80) == 0) {
                    goto LABEL_1088;
                  }
                  v522 += 7;
                  unint64_t v519 = v525;
                  BOOL v18 = v523++ > 8;
                }
                while (!v18);
LABEL_882:
                uint64_t v524 = 0;
                goto LABEL_1088;
              }
              char v728 = 0;
              unsigned int v729 = 0;
              uint64_t v524 = 0;
              if (v520 <= v519) {
                unint64_t v520 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v520 == v519)
                {
                  uint64_t v524 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v730 = v519 + 1;
                  char v731 = *(unsigned char *)(v521 + v519);
                  *long long v3 = v730;
                  v524 |= (unint64_t)(v731 & 0x7F) << v728;
                  if (v731 < 0)
                  {
                    v728 += 7;
                    unint64_t v519 = v730;
                    BOOL v18 = v729++ > 8;
                    if (v18) {
                      goto LABEL_882;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v524 = 0;
                  }
                }
                break;
              }
LABEL_1088:
              *((void *)this + 6) = v524;
              break;
            case 1312:
              *v11 |= 4uLL;
              unint64_t v527 = *((void *)a2 + 1);
              unint64_t v528 = *((void *)a2 + 2);
              uint64_t v529 = *(void *)a2;
              if (v527 <= 0xFFFFFFFFFFFFFFF5 && v527 + 10 <= v528)
              {
                char v530 = 0;
                unsigned int v531 = 0;
                uint64_t v532 = 0;
                do
                {
                  unint64_t v533 = v527 + 1;
                  *long long v3 = v527 + 1;
                  char v534 = *(unsigned char *)(v529 + v527);
                  v532 |= (unint64_t)(v534 & 0x7F) << v530;
                  if ((v534 & 0x80) == 0) {
                    goto LABEL_1092;
                  }
                  v530 += 7;
                  unint64_t v527 = v533;
                  BOOL v18 = v531++ > 8;
                }
                while (!v18);
LABEL_889:
                uint64_t v532 = 0;
                goto LABEL_1092;
              }
              char v732 = 0;
              unsigned int v733 = 0;
              uint64_t v532 = 0;
              if (v528 <= v527) {
                unint64_t v528 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v528 == v527)
                {
                  uint64_t v532 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v734 = v527 + 1;
                  char v735 = *(unsigned char *)(v529 + v527);
                  *long long v3 = v734;
                  v532 |= (unint64_t)(v735 & 0x7F) << v732;
                  if (v735 < 0)
                  {
                    v732 += 7;
                    unint64_t v527 = v734;
                    BOOL v18 = v733++ > 8;
                    if (v18) {
                      goto LABEL_889;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v532 = 0;
                  }
                }
                break;
              }
LABEL_1092:
              *((void *)this + 3) = v532;
              break;
            case 1313:
              *v11 |= 8uLL;
              unint64_t v535 = *((void *)a2 + 1);
              unint64_t v536 = *((void *)a2 + 2);
              uint64_t v537 = *(void *)a2;
              if (v535 <= 0xFFFFFFFFFFFFFFF5 && v535 + 10 <= v536)
              {
                char v538 = 0;
                unsigned int v539 = 0;
                uint64_t v540 = 0;
                do
                {
                  unint64_t v541 = v535 + 1;
                  *long long v3 = v535 + 1;
                  char v542 = *(unsigned char *)(v537 + v535);
                  v540 |= (unint64_t)(v542 & 0x7F) << v538;
                  if ((v542 & 0x80) == 0) {
                    goto LABEL_1096;
                  }
                  v538 += 7;
                  unint64_t v535 = v541;
                  BOOL v18 = v539++ > 8;
                }
                while (!v18);
LABEL_896:
                uint64_t v540 = 0;
                goto LABEL_1096;
              }
              char v736 = 0;
              unsigned int v737 = 0;
              uint64_t v540 = 0;
              if (v536 <= v535) {
                unint64_t v536 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v536 == v535)
                {
                  uint64_t v540 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v738 = v535 + 1;
                  char v739 = *(unsigned char *)(v537 + v535);
                  *long long v3 = v738;
                  v540 |= (unint64_t)(v739 & 0x7F) << v736;
                  if (v739 < 0)
                  {
                    v736 += 7;
                    unint64_t v535 = v738;
                    BOOL v18 = v737++ > 8;
                    if (v18) {
                      goto LABEL_896;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v540 = 0;
                  }
                }
                break;
              }
LABEL_1096:
              *((void *)this + 4) = v540;
              break;
            case 1314:
              *v11 |= 0x10uLL;
              unint64_t v543 = *((void *)a2 + 1);
              unint64_t v544 = *((void *)a2 + 2);
              uint64_t v545 = *(void *)a2;
              if (v543 <= 0xFFFFFFFFFFFFFFF5 && v543 + 10 <= v544)
              {
                char v546 = 0;
                unsigned int v547 = 0;
                uint64_t v548 = 0;
                do
                {
                  unint64_t v549 = v543 + 1;
                  *long long v3 = v543 + 1;
                  char v550 = *(unsigned char *)(v545 + v543);
                  v548 |= (unint64_t)(v550 & 0x7F) << v546;
                  if ((v550 & 0x80) == 0) {
                    goto LABEL_1100;
                  }
                  v546 += 7;
                  unint64_t v543 = v549;
                  BOOL v18 = v547++ > 8;
                }
                while (!v18);
LABEL_903:
                uint64_t v548 = 0;
                goto LABEL_1100;
              }
              char v740 = 0;
              unsigned int v741 = 0;
              uint64_t v548 = 0;
              if (v544 <= v543) {
                unint64_t v544 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v544 == v543)
                {
                  uint64_t v548 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v742 = v543 + 1;
                  char v743 = *(unsigned char *)(v545 + v543);
                  *long long v3 = v742;
                  v548 |= (unint64_t)(v743 & 0x7F) << v740;
                  if (v743 < 0)
                  {
                    v740 += 7;
                    unint64_t v543 = v742;
                    BOOL v18 = v741++ > 8;
                    if (v18) {
                      goto LABEL_903;
                    }
                    continue;
                  }
                  if (*v5) {
                    uint64_t v548 = 0;
                  }
                }
                break;
              }
LABEL_1100:
              *((void *)this + 5) = v548;
              break;
            case 1315:
              *v11 |= 0x2000000000000uLL;
              unint64_t v551 = *((void *)a2 + 1);
              unint64_t v552 = *((void *)a2 + 2);
              uint64_t v553 = *(void *)a2;
              if (v551 <= 0xFFFFFFFFFFFFFFF5 && v551 + 10 <= v552)
              {
                char v554 = 0;
                unsigned int v555 = 0;
                uint64_t v556 = 0;
                do
                {
                  unint64_t v557 = v551 + 1;
                  *long long v3 = v551 + 1;
                  char v558 = *(unsigned char *)(v553 + v551);
                  v556 |= (unint64_t)(v558 & 0x7F) << v554;
                  if ((v558 & 0x80) == 0) {
                    goto LABEL_1104;
                  }
                  v554 += 7;
                  unint64_t v551 = v557;
                  BOOL v18 = v555++ > 8;
                }
                while (!v18);
LABEL_910:
                LODWORD(v556) = 0;
                goto LABEL_1104;
              }
              char v744 = 0;
              unsigned int v745 = 0;
              uint64_t v556 = 0;
              if (v552 <= v551) {
                unint64_t v552 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v552 == v551)
                {
                  LODWORD(v556) = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v746 = v551 + 1;
                  char v747 = *(unsigned char *)(v553 + v551);
                  *long long v3 = v746;
                  v556 |= (unint64_t)(v747 & 0x7F) << v744;
                  if (v747 < 0)
                  {
                    v744 += 7;
                    unint64_t v551 = v746;
                    BOOL v18 = v745++ > 8;
                    if (v18) {
                      goto LABEL_910;
                    }
                    continue;
                  }
                  if (*v5) {
                    LODWORD(v556) = 0;
                  }
                }
                break;
              }
LABEL_1104:
              *((_DWORD *)this + 59) = v556;
              break;
            case 1316:
              *v11 |= 0x2000uLL;
              unint64_t v559 = *v3;
              if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v559 + 4 > *((void *)a2 + 2)) {
                goto LABEL_512;
              }
              *((_DWORD *)this + 23) = *(_DWORD *)(*(void *)a2 + v559);
              goto LABEL_919;
            default:
              if (v24 == 1201)
              {
                *v11 |= 0x4000000000uLL;
                unint64_t v560 = *((void *)a2 + 1);
                unint64_t v561 = *((void *)a2 + 2);
                uint64_t v562 = *(void *)a2;
                if (v560 > 0xFFFFFFFFFFFFFFF5 || v560 + 10 > v561)
                {
                  char v748 = 0;
                  unsigned int v749 = 0;
                  uint64_t v565 = 0;
                  if (v561 <= v560) {
                    unint64_t v561 = *((void *)a2 + 1);
                  }
                  while (1)
                  {
                    if (v561 == v560)
                    {
                      LODWORD(v565) = 0;
                      *int v5 = 1;
                      goto LABEL_1108;
                    }
                    unint64_t v750 = v560 + 1;
                    char v751 = *(unsigned char *)(v562 + v560);
                    *long long v3 = v750;
                    v565 |= (unint64_t)(v751 & 0x7F) << v748;
                    if ((v751 & 0x80) == 0) {
                      break;
                    }
                    v748 += 7;
                    unint64_t v560 = v750;
                    BOOL v18 = v749++ > 8;
                    if (v18)
                    {
LABEL_917:
                      LODWORD(v565) = 0;
                      goto LABEL_1108;
                    }
                  }
                  if (*v5) {
                    LODWORD(v565) = 0;
                  }
                }
                else
                {
                  char v563 = 0;
                  unsigned int v564 = 0;
                  uint64_t v565 = 0;
                  while (1)
                  {
                    unint64_t v566 = v560 + 1;
                    *long long v3 = v560 + 1;
                    char v567 = *(unsigned char *)(v562 + v560);
                    v565 |= (unint64_t)(v567 & 0x7F) << v563;
                    if ((v567 & 0x80) == 0) {
                      break;
                    }
                    v563 += 7;
                    unint64_t v560 = v566;
                    BOOL v18 = v564++ > 8;
                    if (v18) {
                      goto LABEL_917;
                    }
                  }
                }
LABEL_1108:
                *((_DWORD *)this + 48) = v565;
              }
              else
              {
                if (v24 != 1202) {
                  goto LABEL_140;
                }
                *v11 |= 0x8000000000uLL;
                unint64_t v77 = *((void *)a2 + 1);
                unint64_t v78 = *((void *)a2 + 2);
                uint64_t v79 = *(void *)a2;
                if (v77 > 0xFFFFFFFFFFFFFFF5 || v77 + 10 > v78)
                {
                  char v696 = 0;
                  unsigned int v697 = 0;
                  uint64_t v82 = 0;
                  if (v78 <= v77) {
                    unint64_t v78 = *((void *)a2 + 1);
                  }
                  while (1)
                  {
                    if (v78 == v77)
                    {
                      LODWORD(v82) = 0;
                      *int v5 = 1;
                      goto LABEL_1056;
                    }
                    unint64_t v698 = v77 + 1;
                    char v699 = *(unsigned char *)(v79 + v77);
                    *long long v3 = v698;
                    v82 |= (unint64_t)(v699 & 0x7F) << v696;
                    if ((v699 & 0x80) == 0) {
                      break;
                    }
                    v696 += 7;
                    unint64_t v77 = v698;
                    BOOL v18 = v697++ > 8;
                    if (v18)
                    {
LABEL_822:
                      LODWORD(v82) = 0;
                      goto LABEL_1056;
                    }
                  }
                  if (*v5) {
                    LODWORD(v82) = 0;
                  }
                }
                else
                {
                  char v80 = 0;
                  unsigned int v81 = 0;
                  uint64_t v82 = 0;
                  while (1)
                  {
                    unint64_t v83 = v77 + 1;
                    *long long v3 = v77 + 1;
                    char v84 = *(unsigned char *)(v79 + v77);
                    v82 |= (unint64_t)(v84 & 0x7F) << v80;
                    if ((v84 & 0x80) == 0) {
                      break;
                    }
                    v80 += 7;
                    unint64_t v77 = v83;
                    BOOL v18 = v81++ > 8;
                    if (v18) {
                      goto LABEL_822;
                    }
                  }
                }
LABEL_1056:
                *((_DWORD *)this + 49) = v82;
              }
              break;
          }
        }
      }
      else if ((v15 >> 3) <= 0x190)
      {
        switch((int)v24)
        {
          case 301:
            v11[1] |= 0x2000uLL;
            unint64_t v35 = *((void *)a2 + 1);
            if (v35 >= *((void *)a2 + 2))
            {
              BOOL v38 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v36 = v35 + 1;
              int v37 = *(unsigned __int8 *)(*(void *)a2 + v35);
              *((void *)a2 + 1) = v36;
              BOOL v38 = v37 != 0;
            }
            *((unsigned char *)this + 324) = v38;
            goto LABEL_920;
          case 302:
            v11[1] |= 0x4000000uLL;
            unint64_t v249 = *((void *)a2 + 1);
            if (v249 >= *((void *)a2 + 2))
            {
              BOOL v252 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v250 = v249 + 1;
              int v251 = *(unsigned __int8 *)(*(void *)a2 + v249);
              *((void *)a2 + 1) = v250;
              BOOL v252 = v251 != 0;
            }
            *((unsigned char *)this + 337) = v252;
            goto LABEL_920;
          case 303:
            v11[1] |= 0x80000uLL;
            unint64_t v253 = *((void *)a2 + 1);
            if (v253 >= *((void *)a2 + 2))
            {
              BOOL v256 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v254 = v253 + 1;
              int v255 = *(unsigned __int8 *)(*(void *)a2 + v253);
              *((void *)a2 + 1) = v254;
              BOOL v256 = v255 != 0;
            }
            *((unsigned char *)this + 330) = v256;
            goto LABEL_920;
          case 304:
            v11[1] |= 0x2000000000uLL;
            unint64_t v257 = *((void *)a2 + 1);
            if (v257 >= *((void *)a2 + 2))
            {
              BOOL v260 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v258 = v257 + 1;
              int v259 = *(unsigned __int8 *)(*(void *)a2 + v257);
              *((void *)a2 + 1) = v258;
              BOOL v260 = v259 != 0;
            }
            *((unsigned char *)this + 348) = v260;
            goto LABEL_920;
          case 305:
            v11[1] |= 0x200000000uLL;
            unint64_t v261 = *((void *)a2 + 1);
            if (v261 >= *((void *)a2 + 2))
            {
              BOOL v264 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v262 = v261 + 1;
              int v263 = *(unsigned __int8 *)(*(void *)a2 + v261);
              *((void *)a2 + 1) = v262;
              BOOL v264 = v263 != 0;
            }
            *((unsigned char *)this + 344) = v264;
            goto LABEL_920;
          case 306:
            v11[1] |= 0x4000000000uLL;
            unint64_t v265 = *((void *)a2 + 1);
            if (v265 >= *((void *)a2 + 2))
            {
              BOOL v268 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v266 = v265 + 1;
              int v267 = *(unsigned __int8 *)(*(void *)a2 + v265);
              *((void *)a2 + 1) = v266;
              BOOL v268 = v267 != 0;
            }
            *((unsigned char *)this + 349) = v268;
            goto LABEL_920;
          case 307:
            v11[1] |= 0x400000000uLL;
            unint64_t v269 = *((void *)a2 + 1);
            if (v269 >= *((void *)a2 + 2))
            {
              BOOL v272 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v270 = v269 + 1;
              int v271 = *(unsigned __int8 *)(*(void *)a2 + v269);
              *((void *)a2 + 1) = v270;
              BOOL v272 = v271 != 0;
            }
            *((unsigned char *)this + 345) = v272;
            goto LABEL_920;
          case 308:
            v11[1] |= 0x40000000uLL;
            unint64_t v273 = *((void *)a2 + 1);
            if (v273 >= *((void *)a2 + 2))
            {
              BOOL v276 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v274 = v273 + 1;
              int v275 = *(unsigned __int8 *)(*(void *)a2 + v273);
              *((void *)a2 + 1) = v274;
              BOOL v276 = v275 != 0;
            }
            *((unsigned char *)this + 341) = v276;
            goto LABEL_920;
          case 309:
            v11[1] |= 0x800uLL;
            unint64_t v277 = *((void *)a2 + 1);
            if (v277 >= *((void *)a2 + 2))
            {
              BOOL v280 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v278 = v277 + 1;
              int v279 = *(unsigned __int8 *)(*(void *)a2 + v277);
              *((void *)a2 + 1) = v278;
              BOOL v280 = v279 != 0;
            }
            *((unsigned char *)this + 322) = v280;
            goto LABEL_920;
          case 310:
            v11[1] |= 0x100000uLL;
            unint64_t v281 = *((void *)a2 + 1);
            if (v281 >= *((void *)a2 + 2))
            {
              BOOL v284 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v282 = v281 + 1;
              int v283 = *(unsigned __int8 *)(*(void *)a2 + v281);
              *((void *)a2 + 1) = v282;
              BOOL v284 = v283 != 0;
            }
            *((unsigned char *)this + 331) = v284;
            goto LABEL_920;
          case 311:
            v11[1] |= 0x8000000000uLL;
            unint64_t v285 = *((void *)a2 + 1);
            if (v285 >= *((void *)a2 + 2))
            {
              BOOL v288 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v286 = v285 + 1;
              int v287 = *(unsigned __int8 *)(*(void *)a2 + v285);
              *((void *)a2 + 1) = v286;
              BOOL v288 = v287 != 0;
            }
            *((unsigned char *)this + 350) = v288;
            goto LABEL_920;
          case 312:
            v11[1] |= 0x800000000uLL;
            unint64_t v289 = *((void *)a2 + 1);
            if (v289 >= *((void *)a2 + 2))
            {
              BOOL v292 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v290 = v289 + 1;
              int v291 = *(unsigned __int8 *)(*(void *)a2 + v289);
              *((void *)a2 + 1) = v290;
              BOOL v292 = v291 != 0;
            }
            *((unsigned char *)this + 346) = v292;
            goto LABEL_920;
          case 313:
            *v11 |= 0x20000uLL;
            unint64_t v293 = *((void *)a2 + 1);
            unint64_t v294 = *((void *)a2 + 2);
            uint64_t v295 = *(void *)a2;
            if (v293 <= 0xFFFFFFFFFFFFFFF5 && v293 + 10 <= v294)
            {
              char v296 = 0;
              unsigned int v297 = 0;
              uint64_t v298 = 0;
              do
              {
                unint64_t v299 = v293 + 1;
                *long long v3 = v293 + 1;
                char v300 = *(unsigned char *)(v295 + v293);
                v298 |= (unint64_t)(v300 & 0x7F) << v296;
                if ((v300 & 0x80) == 0) {
                  goto LABEL_1025;
                }
                v296 += 7;
                unint64_t v293 = v299;
                BOOL v18 = v297++ > 8;
              }
              while (!v18);
LABEL_714:
              LODWORD(v298) = 0;
              goto LABEL_1025;
            }
            char v656 = 0;
            unsigned int v657 = 0;
            uint64_t v298 = 0;
            if (v294 <= v293) {
              unint64_t v294 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v294 == v293)
              {
                LODWORD(v298) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v658 = v293 + 1;
                char v659 = *(unsigned char *)(v295 + v293);
                *long long v3 = v658;
                v298 |= (unint64_t)(v659 & 0x7F) << v656;
                if (v659 < 0)
                {
                  v656 += 7;
                  unint64_t v293 = v658;
                  BOOL v18 = v657++ > 8;
                  if (v18) {
                    goto LABEL_714;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v298) = 0;
                }
              }
              break;
            }
LABEL_1025:
            *((_DWORD *)this + 27) = v298;
            goto LABEL_920;
          case 314:
            v11[1] |= 0x400000uLL;
            unint64_t v301 = *((void *)a2 + 1);
            if (v301 >= *((void *)a2 + 2))
            {
              BOOL v304 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v302 = v301 + 1;
              int v303 = *(unsigned __int8 *)(*(void *)a2 + v301);
              *((void *)a2 + 1) = v302;
              BOOL v304 = v303 != 0;
            }
            *((unsigned char *)this + 333) = v304;
            goto LABEL_920;
          case 315:
            v11[1] |= 0x800000uLL;
            unint64_t v305 = *((void *)a2 + 1);
            if (v305 >= *((void *)a2 + 2))
            {
              BOOL v308 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v306 = v305 + 1;
              int v307 = *(unsigned __int8 *)(*(void *)a2 + v305);
              *((void *)a2 + 1) = v306;
              BOOL v308 = v307 != 0;
            }
            *((unsigned char *)this + 334) = v308;
            goto LABEL_920;
          case 316:
            v11[1] |= 0x20uLL;
            unint64_t v309 = *((void *)a2 + 1);
            if (v309 >= *((void *)a2 + 2))
            {
              BOOL v312 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v310 = v309 + 1;
              int v311 = *(unsigned __int8 *)(*(void *)a2 + v309);
              *((void *)a2 + 1) = v310;
              BOOL v312 = v311 != 0;
            }
            *((unsigned char *)this + 316) = v312;
            goto LABEL_920;
          case 317:
            *v11 |= 0x40000uLL;
            unint64_t v313 = *((void *)a2 + 1);
            unint64_t v314 = *((void *)a2 + 2);
            uint64_t v315 = *(void *)a2;
            if (v313 <= 0xFFFFFFFFFFFFFFF5 && v313 + 10 <= v314)
            {
              char v316 = 0;
              unsigned int v317 = 0;
              uint64_t v318 = 0;
              do
              {
                unint64_t v319 = v313 + 1;
                *long long v3 = v313 + 1;
                char v320 = *(unsigned char *)(v315 + v313);
                v318 |= (unint64_t)(v320 & 0x7F) << v316;
                if ((v320 & 0x80) == 0) {
                  goto LABEL_1028;
                }
                v316 += 7;
                unint64_t v313 = v319;
                BOOL v18 = v317++ > 8;
              }
              while (!v18);
LABEL_727:
              LODWORD(v318) = 0;
              goto LABEL_1028;
            }
            char v660 = 0;
            unsigned int v661 = 0;
            uint64_t v318 = 0;
            if (v314 <= v313) {
              unint64_t v314 = *((void *)a2 + 1);
            }
            break;
          case 318:
            v11[1] |= 0x40000000000uLL;
            unint64_t v321 = *((void *)a2 + 1);
            if (v321 >= *((void *)a2 + 2))
            {
              BOOL v324 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v322 = v321 + 1;
              int v323 = *(unsigned __int8 *)(*(void *)a2 + v321);
              *((void *)a2 + 1) = v322;
              BOOL v324 = v323 != 0;
            }
            *((unsigned char *)this + 353) = v324;
            goto LABEL_920;
          case 319:
            v11[1] |= 0x10000000000uLL;
            unint64_t v325 = *((void *)a2 + 1);
            if (v325 >= *((void *)a2 + 2))
            {
              BOOL v328 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v326 = v325 + 1;
              int v327 = *(unsigned __int8 *)(*(void *)a2 + v325);
              *((void *)a2 + 1) = v326;
              BOOL v328 = v327 != 0;
            }
            *((unsigned char *)this + 351) = v328;
            goto LABEL_920;
          case 320:
            v11[1] |= 0x20000000000uLL;
            unint64_t v329 = *((void *)a2 + 1);
            if (v329 >= *((void *)a2 + 2))
            {
              BOOL v332 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v330 = v329 + 1;
              int v331 = *(unsigned __int8 *)(*(void *)a2 + v329);
              *((void *)a2 + 1) = v330;
              BOOL v332 = v331 != 0;
            }
            *((unsigned char *)this + 352) = v332;
            goto LABEL_920;
          case 321:
            v11[1] |= 0x100000000uLL;
            unint64_t v333 = *((void *)a2 + 1);
            if (v333 >= *((void *)a2 + 2))
            {
              BOOL v336 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v334 = v333 + 1;
              int v335 = *(unsigned __int8 *)(*(void *)a2 + v333);
              *((void *)a2 + 1) = v334;
              BOOL v336 = v335 != 0;
            }
            *((unsigned char *)this + 343) = v336;
            goto LABEL_920;
          case 322:
            v11[1] |= 0x80000000uLL;
            unint64_t v337 = *((void *)a2 + 1);
            if (v337 >= *((void *)a2 + 2))
            {
              BOOL v340 = 0;
              *int v5 = 1;
            }
            else
            {
              unint64_t v338 = v337 + 1;
              int v339 = *(unsigned __int8 *)(*(void *)a2 + v337);
              *((void *)a2 + 1) = v338;
              BOOL v340 = v339 != 0;
            }
            *((unsigned char *)this + 342) = v340;
            goto LABEL_920;
          default:
            JUMPOUT(0);
        }
        while (1)
        {
          if (v314 == v313)
          {
            LODWORD(v318) = 0;
            *int v5 = 1;
            goto LABEL_1028;
          }
          unint64_t v662 = v313 + 1;
          char v663 = *(unsigned char *)(v315 + v313);
          *long long v3 = v662;
          v318 |= (unint64_t)(v663 & 0x7F) << v660;
          if ((v663 & 0x80) == 0) {
            break;
          }
          v660 += 7;
          unint64_t v313 = v662;
          BOOL v18 = v661++ > 8;
          if (v18) {
            goto LABEL_727;
          }
        }
        if (*v5) {
          LODWORD(v318) = 0;
        }
LABEL_1028:
        *((_DWORD *)this + 28) = v318;
      }
      else
      {
        switch((int)v24)
        {
          case 1:
            *v11 |= 0x800000uLL;
            unint64_t v25 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v25 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v25);
            goto LABEL_919;
          case 2:
            *v11 |= 0x400000uLL;
            unint64_t v119 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v119 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v119);
            goto LABEL_919;
          case 3:
            *v11 |= 0x1000000uLL;
            unint64_t v120 = *((void *)a2 + 1);
            unint64_t v121 = *((void *)a2 + 2);
            uint64_t v122 = *(void *)a2;
            if (v120 <= 0xFFFFFFFFFFFFFFF5 && v120 + 10 <= v121)
            {
              char v123 = 0;
              unsigned int v124 = 0;
              uint64_t v125 = 0;
              do
              {
                unint64_t v126 = v120 + 1;
                *long long v3 = v120 + 1;
                char v127 = *(unsigned char *)(v122 + v120);
                v125 |= (unint64_t)(v127 & 0x7F) << v123;
                if ((v127 & 0x80) == 0) {
                  goto LABEL_983;
                }
                v123 += 7;
                unint64_t v120 = v126;
                BOOL v18 = v124++ > 8;
              }
              while (!v18);
LABEL_590:
              LODWORD(v125) = 0;
              goto LABEL_983;
            }
            char v600 = 0;
            unsigned int v601 = 0;
            uint64_t v125 = 0;
            if (v121 <= v120) {
              unint64_t v121 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v121 == v120)
              {
                LODWORD(v125) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v602 = v120 + 1;
                char v603 = *(unsigned char *)(v122 + v120);
                *long long v3 = v602;
                v125 |= (unint64_t)(v603 & 0x7F) << v600;
                if (v603 < 0)
                {
                  v600 += 7;
                  unint64_t v120 = v602;
                  BOOL v18 = v601++ > 8;
                  if (v18) {
                    goto LABEL_590;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v125) = 0;
                }
              }
              break;
            }
LABEL_983:
            *((_DWORD *)this + 34) = v125;
            goto LABEL_920;
          case 4:
            *v11 |= 0x10000000000000uLL;
            unint64_t v128 = *((void *)a2 + 1);
            unint64_t v129 = *((void *)a2 + 2);
            uint64_t v130 = *(void *)a2;
            if (v128 <= 0xFFFFFFFFFFFFFFF5 && v128 + 10 <= v129)
            {
              char v131 = 0;
              unsigned int v132 = 0;
              uint64_t v133 = 0;
              do
              {
                unint64_t v134 = v128 + 1;
                *long long v3 = v128 + 1;
                char v135 = *(unsigned char *)(v130 + v128);
                v133 |= (unint64_t)(v135 & 0x7F) << v131;
                if ((v135 & 0x80) == 0) {
                  goto LABEL_986;
                }
                v131 += 7;
                unint64_t v128 = v134;
                BOOL v18 = v132++ > 8;
              }
              while (!v18);
LABEL_597:
              LODWORD(v133) = 0;
              goto LABEL_986;
            }
            char v604 = 0;
            unsigned int v605 = 0;
            uint64_t v133 = 0;
            if (v129 <= v128) {
              unint64_t v129 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v129 == v128)
              {
                LODWORD(v133) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v606 = v128 + 1;
                char v607 = *(unsigned char *)(v130 + v128);
                *long long v3 = v606;
                v133 |= (unint64_t)(v607 & 0x7F) << v604;
                if (v607 < 0)
                {
                  v604 += 7;
                  unint64_t v128 = v606;
                  BOOL v18 = v605++ > 8;
                  if (v18) {
                    goto LABEL_597;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v133) = 0;
                }
              }
              break;
            }
LABEL_986:
            *((_DWORD *)this + 62) = v133;
            goto LABEL_920;
          case 5:
            v11[1] |= 1uLL;
            unint64_t v136 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v136 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 74) = *(_DWORD *)(*(void *)a2 + v136);
            goto LABEL_919;
          case 6:
            *v11 |= 0x400000000000000uLL;
            unint64_t v137 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v137 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 68) = *(_DWORD *)(*(void *)a2 + v137);
            goto LABEL_919;
          case 7:
            *v11 |= 0x400000000000uLL;
            unint64_t v138 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v138 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 56) = *(_DWORD *)(*(void *)a2 + v138);
            goto LABEL_919;
          case 8:
            *v11 |= 0x200000000000uLL;
            unint64_t v139 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v139 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 55) = *(_DWORD *)(*(void *)a2 + v139);
            goto LABEL_919;
          case 9:
            *v11 |= 0x200uLL;
            unint64_t v140 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v140 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 19) = *(_DWORD *)(*(void *)a2 + v140);
            goto LABEL_919;
          case 10:
            *v11 |= 0x80000000000000uLL;
            unint64_t v141 = *((void *)a2 + 1);
            unint64_t v142 = *((void *)a2 + 2);
            uint64_t v143 = *(void *)a2;
            if (v141 <= 0xFFFFFFFFFFFFFFF5 && v141 + 10 <= v142)
            {
              char v144 = 0;
              unsigned int v145 = 0;
              uint64_t v146 = 0;
              do
              {
                unint64_t v147 = v141 + 1;
                *long long v3 = v141 + 1;
                char v148 = *(unsigned char *)(v143 + v141);
                v146 |= (unint64_t)(v148 & 0x7F) << v144;
                if ((v148 & 0x80) == 0) {
                  goto LABEL_989;
                }
                v144 += 7;
                unint64_t v141 = v147;
                BOOL v18 = v145++ > 8;
              }
              while (!v18);
LABEL_604:
              LODWORD(v146) = 0;
              goto LABEL_989;
            }
            char v608 = 0;
            unsigned int v609 = 0;
            uint64_t v146 = 0;
            if (v142 <= v141) {
              unint64_t v142 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v142 == v141)
              {
                LODWORD(v146) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v610 = v141 + 1;
                char v611 = *(unsigned char *)(v143 + v141);
                *long long v3 = v610;
                v146 |= (unint64_t)(v611 & 0x7F) << v608;
                if (v611 < 0)
                {
                  v608 += 7;
                  unint64_t v141 = v610;
                  BOOL v18 = v609++ > 8;
                  if (v18) {
                    goto LABEL_604;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v146) = 0;
                }
              }
              break;
            }
LABEL_989:
            *((_DWORD *)this + 65) = v146;
            goto LABEL_920;
          case 11:
            *v11 |= 0x2000000uLL;
            unint64_t v149 = *((void *)a2 + 1);
            unint64_t v150 = *((void *)a2 + 2);
            uint64_t v151 = *(void *)a2;
            if (v149 <= 0xFFFFFFFFFFFFFFF5 && v149 + 10 <= v150)
            {
              char v152 = 0;
              unsigned int v153 = 0;
              uint64_t v154 = 0;
              do
              {
                unint64_t v155 = v149 + 1;
                *long long v3 = v149 + 1;
                char v156 = *(unsigned char *)(v151 + v149);
                v154 |= (unint64_t)(v156 & 0x7F) << v152;
                if ((v156 & 0x80) == 0) {
                  goto LABEL_992;
                }
                v152 += 7;
                unint64_t v149 = v155;
                BOOL v18 = v153++ > 8;
              }
              while (!v18);
LABEL_611:
              LODWORD(v154) = 0;
              goto LABEL_992;
            }
            char v612 = 0;
            unsigned int v613 = 0;
            uint64_t v154 = 0;
            if (v150 <= v149) {
              unint64_t v150 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v150 == v149)
              {
                LODWORD(v154) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v614 = v149 + 1;
                char v615 = *(unsigned char *)(v151 + v149);
                *long long v3 = v614;
                v154 |= (unint64_t)(v615 & 0x7F) << v612;
                if (v615 < 0)
                {
                  v612 += 7;
                  unint64_t v149 = v614;
                  BOOL v18 = v613++ > 8;
                  if (v18) {
                    goto LABEL_611;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v154) = 0;
                }
              }
              break;
            }
LABEL_992:
            *((_DWORD *)this + 35) = v154;
            goto LABEL_920;
          case 12:
            *v11 |= 0x10000uLL;
            unint64_t v157 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v157 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 26) = *(_DWORD *)(*(void *)a2 + v157);
            goto LABEL_919;
          case 13:
            v11[1] |= 8uLL;
            unint64_t v158 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v158 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 77) = *(_DWORD *)(*(void *)a2 + v158);
            goto LABEL_919;
          case 14:
            v11[1] |= 0x10uLL;
            unint64_t v159 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v159 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 78) = *(_DWORD *)(*(void *)a2 + v159);
            goto LABEL_919;
          case 15:
            *v11 |= 0x80000000000uLL;
            unint64_t v160 = *((void *)a2 + 1);
            unint64_t v161 = *((void *)a2 + 2);
            uint64_t v162 = *(void *)a2;
            if (v160 <= 0xFFFFFFFFFFFFFFF5 && v160 + 10 <= v161)
            {
              char v163 = 0;
              unsigned int v164 = 0;
              uint64_t v165 = 0;
              do
              {
                unint64_t v166 = v160 + 1;
                *long long v3 = v160 + 1;
                char v167 = *(unsigned char *)(v162 + v160);
                v165 |= (unint64_t)(v167 & 0x7F) << v163;
                if ((v167 & 0x80) == 0) {
                  goto LABEL_995;
                }
                v163 += 7;
                unint64_t v160 = v166;
                BOOL v18 = v164++ > 8;
              }
              while (!v18);
LABEL_618:
              LODWORD(v165) = 0;
              goto LABEL_995;
            }
            char v616 = 0;
            unsigned int v617 = 0;
            uint64_t v165 = 0;
            if (v161 <= v160) {
              unint64_t v161 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v161 == v160)
              {
                LODWORD(v165) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v618 = v160 + 1;
                char v619 = *(unsigned char *)(v162 + v160);
                *long long v3 = v618;
                v165 |= (unint64_t)(v619 & 0x7F) << v616;
                if (v619 < 0)
                {
                  v616 += 7;
                  unint64_t v160 = v618;
                  BOOL v18 = v617++ > 8;
                  if (v18) {
                    goto LABEL_618;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v165) = 0;
                }
              }
              break;
            }
LABEL_995:
            *((_DWORD *)this + 53) = v165;
            goto LABEL_920;
          case 16:
            *v11 |= 0x20000000000uLL;
            unint64_t v168 = *((void *)a2 + 1);
            unint64_t v169 = *((void *)a2 + 2);
            uint64_t v170 = *(void *)a2;
            if (v168 <= 0xFFFFFFFFFFFFFFF5 && v168 + 10 <= v169)
            {
              char v171 = 0;
              unsigned int v172 = 0;
              uint64_t v173 = 0;
              do
              {
                unint64_t v174 = v168 + 1;
                *long long v3 = v168 + 1;
                char v175 = *(unsigned char *)(v170 + v168);
                v173 |= (unint64_t)(v175 & 0x7F) << v171;
                if ((v175 & 0x80) == 0) {
                  goto LABEL_998;
                }
                v171 += 7;
                unint64_t v168 = v174;
                BOOL v18 = v172++ > 8;
              }
              while (!v18);
LABEL_625:
              LODWORD(v173) = 0;
              goto LABEL_998;
            }
            char v620 = 0;
            unsigned int v621 = 0;
            uint64_t v173 = 0;
            if (v169 <= v168) {
              unint64_t v169 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v169 == v168)
              {
                LODWORD(v173) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v622 = v168 + 1;
                char v623 = *(unsigned char *)(v170 + v168);
                *long long v3 = v622;
                v173 |= (unint64_t)(v623 & 0x7F) << v620;
                if (v623 < 0)
                {
                  v620 += 7;
                  unint64_t v168 = v622;
                  BOOL v18 = v621++ > 8;
                  if (v18) {
                    goto LABEL_625;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v173) = 0;
                }
              }
              break;
            }
LABEL_998:
            *((_DWORD *)this + 51) = v173;
            goto LABEL_920;
          case 17:
            *v11 |= 0x4000000000000uLL;
            unint64_t v176 = *v3;
            if (*v3 > 0xFFFFFFFFFFFFFFFBLL || v176 + 4 > *((void *)a2 + 2)) {
              goto LABEL_512;
            }
            *((_DWORD *)this + 60) = *(_DWORD *)(*(void *)a2 + v176);
            goto LABEL_919;
          case 18:
            *v11 |= 0x1000000000000000uLL;
            unint64_t v177 = *((void *)a2 + 1);
            unint64_t v178 = *((void *)a2 + 2);
            uint64_t v179 = *(void *)a2;
            if (v177 <= 0xFFFFFFFFFFFFFFF5 && v177 + 10 <= v178)
            {
              char v180 = 0;
              unsigned int v181 = 0;
              uint64_t v182 = 0;
              do
              {
                unint64_t v183 = v177 + 1;
                *long long v3 = v177 + 1;
                char v184 = *(unsigned char *)(v179 + v177);
                v182 |= (unint64_t)(v184 & 0x7F) << v180;
                if ((v184 & 0x80) == 0) {
                  goto LABEL_1001;
                }
                v180 += 7;
                unint64_t v177 = v183;
                BOOL v18 = v181++ > 8;
              }
              while (!v18);
LABEL_632:
              LODWORD(v182) = 0;
              goto LABEL_1001;
            }
            char v624 = 0;
            unsigned int v625 = 0;
            uint64_t v182 = 0;
            if (v178 <= v177) {
              unint64_t v178 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v178 == v177)
              {
                LODWORD(v182) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v626 = v177 + 1;
                char v627 = *(unsigned char *)(v179 + v177);
                *long long v3 = v626;
                v182 |= (unint64_t)(v627 & 0x7F) << v624;
                if (v627 < 0)
                {
                  v624 += 7;
                  unint64_t v177 = v626;
                  BOOL v18 = v625++ > 8;
                  if (v18) {
                    goto LABEL_632;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v182) = 0;
                }
              }
              break;
            }
LABEL_1001:
            *((_DWORD *)this + 70) = v182;
            goto LABEL_920;
          case 19:
            v11[1] |= 2uLL;
            unint64_t v185 = *((void *)a2 + 1);
            unint64_t v186 = *((void *)a2 + 2);
            uint64_t v187 = *(void *)a2;
            if (v185 <= 0xFFFFFFFFFFFFFFF5 && v185 + 10 <= v186)
            {
              char v188 = 0;
              unsigned int v189 = 0;
              uint64_t v190 = 0;
              do
              {
                unint64_t v191 = v185 + 1;
                *long long v3 = v185 + 1;
                char v192 = *(unsigned char *)(v187 + v185);
                v190 |= (unint64_t)(v192 & 0x7F) << v188;
                if ((v192 & 0x80) == 0) {
                  goto LABEL_1004;
                }
                v188 += 7;
                unint64_t v185 = v191;
                BOOL v18 = v189++ > 8;
              }
              while (!v18);
LABEL_639:
              LODWORD(v190) = 0;
              goto LABEL_1004;
            }
            char v628 = 0;
            unsigned int v629 = 0;
            uint64_t v190 = 0;
            if (v186 <= v185) {
              unint64_t v186 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v186 == v185)
              {
                LODWORD(v190) = 0;
                *int v5 = 1;
              }
              else
              {
                unint64_t v630 = v185 + 1;
                char v631 = *(unsigned char *)(v187 + v185);
                *long long v3 = v630;
                v190 |= (unint64_t)(v631 & 0x7F) << v628;
                if (v631 < 0)
                {
                  v628 += 7;
                  unint64_t v185 = v630;
                  BOOL v18 = v629++ > 8;
                  if (v18) {
                    goto LABEL_639;
                  }
                  continue;
                }
                if (*v5) {
                  LODWORD(v190) = 0;
                }
              }
              break;
            }
LABEL_1004:
            *((_DWORD *)this + 75) = v190;
            goto LABEL_920;
          default:
            switch((int)v24)
            {
              case 'e':
                *v11 |= 0x80uLL;
                unint64_t v39 = *((void *)a2 + 1);
                unint64_t v40 = *((void *)a2 + 2);
                uint64_t v41 = *(void *)a2;
                if (v39 <= 0xFFFFFFFFFFFFFFF5 && v39 + 10 <= v40)
                {
                  char v42 = 0;
                  unsigned int v43 = 0;
                  uint64_t v44 = 0;
                  do
                  {
                    unint64_t v45 = v39 + 1;
                    *long long v3 = v39 + 1;
                    char v46 = *(unsigned char *)(v41 + v39);
                    v44 |= (unint64_t)(v46 & 0x7F) << v42;
                    if ((v46 & 0x80) == 0) {
                      goto LABEL_977;
                    }
                    v42 += 7;
                    unint64_t v39 = v45;
                    BOOL v18 = v43++ > 8;
                  }
                  while (!v18);
LABEL_574:
                  uint64_t v44 = 0;
                  goto LABEL_977;
                }
                char v592 = 0;
                unsigned int v593 = 0;
                uint64_t v44 = 0;
                if (v40 <= v39) {
                  unint64_t v40 = *((void *)a2 + 1);
                }
                while (2)
                {
                  if (v40 == v39)
                  {
                    uint64_t v44 = 0;
                    *int v5 = 1;
                  }
                  else
                  {
                    unint64_t v594 = v39 + 1;
                    char v595 = *(unsigned char *)(v41 + v39);
                    *long long v3 = v594;
                    v44 |= (unint64_t)(v595 & 0x7F) << v592;
                    if (v595 < 0)
                    {
                      v592 += 7;
                      unint64_t v39 = v594;
                      BOOL v18 = v593++ > 8;
                      if (v18) {
                        goto LABEL_574;
                      }
                      continue;
                    }
                    if (*v5) {
                      uint64_t v44 = 0;
                    }
                  }
                  break;
                }
LABEL_977:
                *((void *)this + 8) = v44;
                goto LABEL_920;
              case 'f':
                *v11 |= 1uLL;
                unint64_t v341 = *((void *)a2 + 1);
                unint64_t v342 = *((void *)a2 + 2);
                uint64_t v343 = *(void *)a2;
                if (v341 <= 0xFFFFFFFFFFFFFFF5 && v341 + 10 <= v342)
                {
                  char v344 = 0;
                  unsigned int v345 = 0;
                  uint64_t v346 = 0;
                  do
                  {
                    unint64_t v347 = v341 + 1;
                    *long long v3 = v341 + 1;
                    char v348 = *(unsigned char *)(v343 + v341);
                    v346 |= (unint64_t)(v348 & 0x7F) << v344;
                    if ((v348 & 0x80) == 0) {
                      goto LABEL_1031;
                    }
                    v344 += 7;
                    unint64_t v341 = v347;
                    BOOL v18 = v345++ > 8;
                  }
                  while (!v18);
LABEL_744:
                  uint64_t v346 = 0;
                  goto LABEL_1031;
                }
                char v664 = 0;
                unsigned int v665 = 0;
                uint64_t v346 = 0;
                if (v342 <= v341) {
                  unint64_t v342 = *((void *)a2 + 1);
                }
                break;
              case 'g':
                v11[1] |= 0x40uLL;
                unint64_t v349 = *((void *)a2 + 1);
                if (v349 >= *((void *)a2 + 2))
                {
                  BOOL v352 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v350 = v349 + 1;
                  int v351 = *(unsigned __int8 *)(*(void *)a2 + v349);
                  *((void *)a2 + 1) = v350;
                  BOOL v352 = v351 != 0;
                }
                *((unsigned char *)this + 317) = v352;
                goto LABEL_920;
              case 'h':
                v11[1] |= 0x80uLL;
                unint64_t v353 = *((void *)a2 + 1);
                if (v353 >= *((void *)a2 + 2))
                {
                  BOOL v356 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v354 = v353 + 1;
                  int v355 = *(unsigned __int8 *)(*(void *)a2 + v353);
                  *((void *)a2 + 1) = v354;
                  BOOL v356 = v355 != 0;
                }
                *((unsigned char *)this + 318) = v356;
                goto LABEL_920;
              case 'i':
                v11[1] |= 0x8000uLL;
                unint64_t v357 = *((void *)a2 + 1);
                if (v357 >= *((void *)a2 + 2))
                {
                  BOOL v360 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v358 = v357 + 1;
                  int v359 = *(unsigned __int8 *)(*(void *)a2 + v357);
                  *((void *)a2 + 1) = v358;
                  BOOL v360 = v359 != 0;
                }
                *((unsigned char *)this + 326) = v360;
                goto LABEL_920;
              case 'j':
                v11[1] |= 0x10000uLL;
                unint64_t v361 = *((void *)a2 + 1);
                if (v361 >= *((void *)a2 + 2))
                {
                  BOOL v364 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v362 = v361 + 1;
                  int v363 = *(unsigned __int8 *)(*(void *)a2 + v361);
                  *((void *)a2 + 1) = v362;
                  BOOL v364 = v363 != 0;
                }
                *((unsigned char *)this + 327) = v364;
                goto LABEL_920;
              case 'k':
                v11[1] |= 0x8000000uLL;
                unint64_t v365 = *((void *)a2 + 1);
                if (v365 >= *((void *)a2 + 2))
                {
                  BOOL v368 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v366 = v365 + 1;
                  int v367 = *(unsigned __int8 *)(*(void *)a2 + v365);
                  *((void *)a2 + 1) = v366;
                  BOOL v368 = v367 != 0;
                }
                *((unsigned char *)this + 338) = v368;
                goto LABEL_920;
              case 'l':
                v11[1] |= 0x2000000uLL;
                unint64_t v369 = *((void *)a2 + 1);
                if (v369 >= *((void *)a2 + 2))
                {
                  BOOL v372 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v370 = v369 + 1;
                  int v371 = *(unsigned __int8 *)(*(void *)a2 + v369);
                  *((void *)a2 + 1) = v370;
                  BOOL v372 = v371 != 0;
                }
                *((unsigned char *)this + 336) = v372;
                goto LABEL_920;
              case 'm':
                v11[1] |= 0x1000uLL;
                unint64_t v373 = *((void *)a2 + 1);
                if (v373 >= *((void *)a2 + 2))
                {
                  BOOL v376 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v374 = v373 + 1;
                  int v375 = *(unsigned __int8 *)(*(void *)a2 + v373);
                  *((void *)a2 + 1) = v374;
                  BOOL v376 = v375 != 0;
                }
                *((unsigned char *)this + 323) = v376;
                goto LABEL_920;
              case 'n':
                v11[1] |= 0x10000000uLL;
                unint64_t v377 = *((void *)a2 + 1);
                if (v377 >= *((void *)a2 + 2))
                {
                  BOOL v380 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v378 = v377 + 1;
                  int v379 = *(unsigned __int8 *)(*(void *)a2 + v377);
                  *((void *)a2 + 1) = v378;
                  BOOL v380 = v379 != 0;
                }
                *((unsigned char *)this + 339) = v380;
                goto LABEL_920;
              case 'o':
                v11[1] |= 0x20000000uLL;
                unint64_t v381 = *((void *)a2 + 1);
                if (v381 >= *((void *)a2 + 2))
                {
                  BOOL v384 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v382 = v381 + 1;
                  int v383 = *(unsigned __int8 *)(*(void *)a2 + v381);
                  *((void *)a2 + 1) = v382;
                  BOOL v384 = v383 != 0;
                }
                *((unsigned char *)this + 340) = v384;
                goto LABEL_920;
              case 'p':
                v11[1] |= 0x200uLL;
                unint64_t v385 = *((void *)a2 + 1);
                if (v385 >= *((void *)a2 + 2))
                {
                  BOOL v388 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v386 = v385 + 1;
                  int v387 = *(unsigned __int8 *)(*(void *)a2 + v385);
                  *((void *)a2 + 1) = v386;
                  BOOL v388 = v387 != 0;
                }
                *((unsigned char *)this + 320) = v388;
                goto LABEL_920;
              case 'q':
                v11[1] |= 0x1000000uLL;
                unint64_t v389 = *((void *)a2 + 1);
                if (v389 >= *((void *)a2 + 2))
                {
                  BOOL v392 = 0;
                  *int v5 = 1;
                }
                else
                {
                  unint64_t v390 = v389 + 1;
                  int v391 = *(unsigned __int8 *)(*(void *)a2 + v389);
                  *((void *)a2 + 1) = v390;
                  BOOL v392 = v391 != 0;
                }
                *((unsigned char *)this + 335) = v392;
                goto LABEL_920;
              default:
                goto LABEL_140;
            }
            break;
        }
        while (1)
        {
          if (v342 == v341)
          {
            uint64_t v346 = 0;
            *int v5 = 1;
            goto LABEL_1031;
          }
          unint64_t v666 = v341 + 1;
          char v667 = *(unsigned char *)(v343 + v341);
          *long long v3 = v666;
          v346 |= (unint64_t)(v667 & 0x7F) << v664;
          if ((v667 & 0x80) == 0) {
            break;
          }
          v664 += 7;
          unint64_t v341 = v666;
          BOOL v18 = v665++ > 8;
          if (v18) {
            goto LABEL_744;
          }
        }
        if (*v5) {
          uint64_t v346 = 0;
        }
LABEL_1031:
        *((void *)this + 1) = v346;
      }
LABEL_920:
      unint64_t v2 = *((void *)a2 + 1);
      unint64_t v6 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
    }
    while (v2 < v6 && v4 == 0);
  }
  return v4 == 0;
}

uint64_t CMMsl::KappaSevereCrashResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = (uint64_t *)(this + 356);
  uint64_t v5 = *(void *)(this + 356);
  if ((v5 & 0x800000) != 0)
  {
    this = PB::Writer::write(a2, *(float *)(this + 132));
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    if ((*v4 & 0x400000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(this + 364);
  if ((v5 & 0x400000) != 0)
  {
LABEL_5:
    this = PB::Writer::write(a2, *(float *)(v3 + 128));
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
  }
LABEL_6:
  if ((v5 & 0x1000000) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    uint64_t v5 = *v4;
    uint64_t v6 = v4[1];
    if ((*v4 & 0x10000000000000) == 0)
    {
LABEL_8:
      if ((v6 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_115;
    }
  }
  else if ((v5 & 0x10000000000000) == 0)
  {
    goto LABEL_8;
  }
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 1) == 0)
  {
LABEL_9:
    if ((v5 & 0x400000000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_116;
  }
LABEL_115:
  this = PB::Writer::write(a2, *(float *)(v3 + 296));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000000000) == 0)
  {
LABEL_10:
    if ((v5 & 0x400000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_117;
  }
LABEL_116:
  this = PB::Writer::write(a2, *(float *)(v3 + 272));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000000) == 0)
  {
LABEL_11:
    if ((v5 & 0x200000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_118;
  }
LABEL_117:
  this = PB::Writer::write(a2, *(float *)(v3 + 224));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_119;
  }
LABEL_118:
  this = PB::Writer::write(a2, *(float *)(v3 + 220));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x80000000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_120;
  }
LABEL_119:
  this = PB::Writer::write(a2, *(float *)(v3 + 76));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000000000) == 0)
  {
LABEL_14:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_121;
  }
LABEL_120:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000) == 0)
  {
LABEL_15:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_122;
  }
LABEL_121:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000) == 0)
  {
LABEL_16:
    if ((v6 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_123;
  }
LABEL_122:
  this = PB::Writer::write(a2, *(float *)(v3 + 104));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 8) == 0)
  {
LABEL_17:
    if ((v6 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_124;
  }
LABEL_123:
  this = PB::Writer::write(a2, *(float *)(v3 + 308));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10) == 0)
  {
LABEL_18:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_125;
  }
LABEL_124:
  this = PB::Writer::write(a2, *(float *)(v3 + 312));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000000) == 0)
  {
LABEL_19:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_126;
  }
LABEL_125:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000000000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_127;
  }
LABEL_126:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000000) == 0)
  {
LABEL_21:
    if ((v5 & 0x1000000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_128;
  }
LABEL_127:
  this = PB::Writer::write(a2, *(float *)(v3 + 240));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000000000) == 0)
  {
LABEL_22:
    if ((v6 & 2) == 0) {
      goto LABEL_23;
    }
    goto LABEL_129;
  }
LABEL_128:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 2) == 0)
  {
LABEL_23:
    if ((v5 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_130;
  }
LABEL_129:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80) == 0)
  {
LABEL_24:
    if ((v5 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_131;
  }
LABEL_130:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 1) == 0)
  {
LABEL_25:
    if ((v6 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_132;
  }
LABEL_131:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40) == 0)
  {
LABEL_26:
    if ((v6 & 0x80) == 0) {
      goto LABEL_27;
    }
    goto LABEL_133;
  }
LABEL_132:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80) == 0)
  {
LABEL_27:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_134;
  }
LABEL_133:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000) == 0)
  {
LABEL_28:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_135;
  }
LABEL_134:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000) == 0)
  {
LABEL_29:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_136;
  }
LABEL_135:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_137;
  }
LABEL_136:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_138;
  }
LABEL_137:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000) == 0)
  {
LABEL_32:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_139;
  }
LABEL_138:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000000) == 0)
  {
LABEL_33:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_140;
  }
LABEL_139:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000000) == 0)
  {
LABEL_34:
    if ((v6 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_141;
  }
LABEL_140:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200) == 0)
  {
LABEL_35:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_142;
  }
LABEL_141:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000000) == 0)
  {
LABEL_36:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_143;
  }
LABEL_142:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000) == 0)
  {
LABEL_37:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_144;
  }
LABEL_143:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_145;
  }
LABEL_144:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80000) == 0)
  {
LABEL_39:
    if ((v6 & 0x2000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_146;
  }
LABEL_145:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x2000000000) == 0)
  {
LABEL_40:
    if ((v6 & 0x200000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_147;
  }
LABEL_146:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200000000) == 0)
  {
LABEL_41:
    if ((v6 & 0x4000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_148;
  }
LABEL_147:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000000000) == 0)
  {
LABEL_42:
    if ((v6 & 0x400000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_149;
  }
LABEL_148:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400000000) == 0)
  {
LABEL_43:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_150;
  }
LABEL_149:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v6 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_151;
  }
LABEL_150:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800) == 0)
  {
LABEL_45:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_152;
  }
LABEL_151:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100000) == 0)
  {
LABEL_46:
    if ((v6 & 0x8000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_153;
  }
LABEL_152:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x8000000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x800000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_154;
  }
LABEL_153:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800000000) == 0)
  {
LABEL_48:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_155;
  }
LABEL_154:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000) == 0)
  {
LABEL_49:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_156;
  }
LABEL_155:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400000) == 0)
  {
LABEL_50:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_157;
  }
LABEL_156:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x800000) == 0)
  {
LABEL_51:
    if ((v6 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_158;
  }
LABEL_157:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20) == 0)
  {
LABEL_52:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_159;
  }
LABEL_158:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000) == 0)
  {
LABEL_53:
    if ((v6 & 0x40000000000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_160;
  }
LABEL_159:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x40000000000) == 0)
  {
LABEL_54:
    if ((v6 & 0x10000000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_161;
  }
LABEL_160:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x10000000000) == 0)
  {
LABEL_55:
    if ((v6 & 0x20000000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_162;
  }
LABEL_161:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000000000) == 0)
  {
LABEL_56:
    if ((v6 & 0x100000000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_163;
  }
LABEL_162:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100000000) == 0)
  {
LABEL_57:
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_164;
  }
LABEL_163:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x80000000) == 0)
  {
LABEL_58:
    if ((v5 & 0x20000000000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_165;
  }
LABEL_164:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000000000) == 0)
  {
LABEL_59:
    if ((v5 & 0x40000000000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_166;
  }
LABEL_165:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000000000) == 0)
  {
LABEL_60:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_167;
  }
LABEL_166:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000) == 0)
  {
LABEL_61:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_168;
  }
LABEL_167:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000) == 0)
  {
LABEL_62:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_169;
  }
LABEL_168:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x20000) == 0)
  {
LABEL_63:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_170;
  }
LABEL_169:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x4000) == 0)
  {
LABEL_64:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_171;
  }
LABEL_170:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000000) == 0)
  {
LABEL_65:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_172;
  }
LABEL_171:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000) == 0)
  {
LABEL_66:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_173;
  }
LABEL_172:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000) == 0)
  {
LABEL_67:
    if ((v5 & 0x4000000000000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_174;
  }
LABEL_173:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000000000) == 0)
  {
LABEL_68:
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_175;
  }
LABEL_174:
  this = PB::Writer::write(a2, *(float *)(v3 + 288));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000000000) == 0)
  {
LABEL_69:
    if ((v5 & 0x200000000000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_176;
  }
LABEL_175:
  this = PB::Writer::write(a2, *(float *)(v3 + 292));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000000000000) == 0)
  {
LABEL_70:
    if ((v5 & 0x800000000000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_177;
  }
LABEL_176:
  this = PB::Writer::write(a2, *(float *)(v3 + 268));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000000000) == 0)
  {
LABEL_71:
    if ((v5 & 0x2000000000000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_178;
  }
LABEL_177:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x2000000000000000) == 0)
  {
LABEL_72:
    if ((v6 & 0x400) == 0) {
      goto LABEL_73;
    }
    goto LABEL_179;
  }
LABEL_178:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x400) == 0)
  {
LABEL_73:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_180;
  }
LABEL_179:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000) == 0)
  {
LABEL_74:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_181;
  }
LABEL_180:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000) == 0)
  {
LABEL_75:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_182;
  }
LABEL_181:
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x100000000000000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_183;
  }
LABEL_182:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000000000) == 0)
  {
LABEL_77:
    if ((v5 & 0x40) == 0) {
      goto LABEL_78;
    }
    goto LABEL_184;
  }
LABEL_183:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40) == 0)
  {
LABEL_78:
    if ((v5 & 0x800000000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_185;
  }
LABEL_184:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000000) == 0)
  {
LABEL_79:
    if ((v5 & 0x1000000000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_186;
  }
LABEL_185:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x1000000000000) == 0)
  {
LABEL_80:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_187;
  }
LABEL_186:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000) == 0)
  {
LABEL_81:
    if ((v5 & 0x400) == 0) {
      goto LABEL_82;
    }
    goto LABEL_188;
  }
LABEL_187:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400) == 0)
  {
LABEL_82:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_189;
  }
LABEL_188:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x200000) == 0)
  {
LABEL_83:
    if ((v5 & 0x800) == 0) {
      goto LABEL_84;
    }
    goto LABEL_190;
  }
LABEL_189:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800) == 0)
  {
LABEL_84:
    if ((v5 & 0x100) == 0) {
      goto LABEL_85;
    }
    goto LABEL_191;
  }
LABEL_190:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100) == 0)
  {
LABEL_85:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_192;
  }
LABEL_191:
  this = PB::Writer::write(a2, *(float *)(v3 + 72));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x200000) == 0)
  {
LABEL_86:
    if ((v6 & 4) == 0) {
      goto LABEL_87;
    }
    goto LABEL_193;
  }
LABEL_192:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 4) == 0)
  {
LABEL_87:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_194;
  }
LABEL_193:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000000) == 0)
  {
LABEL_88:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_195;
  }
LABEL_194:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000) == 0)
  {
LABEL_89:
    if ((v6 & 0x1000000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_196;
  }
LABEL_195:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x1000000000) == 0)
  {
LABEL_90:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_197;
  }
LABEL_196:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x80000000) == 0)
  {
LABEL_91:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_198;
  }
LABEL_197:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x20000000) == 0)
  {
LABEL_92:
    if ((v5 & 0x8000000000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_199;
  }
LABEL_198:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000000) == 0)
  {
LABEL_93:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_200;
  }
LABEL_199:
  this = PB::Writer::write(a2, *(float *)(v3 + 244));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x4000000000) == 0)
  {
LABEL_94:
    if ((v5 & 0x8000000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_201;
  }
LABEL_200:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000000000) == 0)
  {
LABEL_95:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_202;
  }
LABEL_201:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x8000) == 0)
  {
LABEL_96:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_203;
  }
LABEL_202:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x40000000000) == 0)
  {
LABEL_97:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_204;
  }
LABEL_203:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x10000000000) == 0)
  {
LABEL_98:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_205;
  }
LABEL_204:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x800000000) == 0)
  {
LABEL_99:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_206;
  }
LABEL_205:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x100000000) == 0)
  {
LABEL_100:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_207;
  }
LABEL_206:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((*v4 & 0x400000000) == 0)
  {
LABEL_101:
    if ((v6 & 0x100) == 0) {
      goto LABEL_102;
    }
    goto LABEL_208;
  }
LABEL_207:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  if ((v6 & 0x100) == 0)
  {
LABEL_102:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_209;
  }
LABEL_208:
  this = PB::Writer::write(a2);
  uint64_t v5 = *v4;
  if ((v4[1] & 0x40000) == 0)
  {
LABEL_103:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_104;
  }
LABEL_209:
  this = PB::Writer::write(a2);
  if ((*v4 & 0x200000000) != 0) {
LABEL_104:
  }
    this = PB::Writer::writeVarInt(a2);
LABEL_105:
  uint64_t v7 = *v4;
  if ((*v4 & 2) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    uint64_t v7 = *v4;
    if ((*v4 & 0x20) == 0)
    {
LABEL_107:
      if ((v7 & 4) == 0) {
        goto LABEL_108;
      }
      goto LABEL_213;
    }
  }
  else if ((v7 & 0x20) == 0)
  {
    goto LABEL_107;
  }
  this = PB::Writer::writeVarInt(a2);
  uint64_t v7 = *v4;
  if ((*v4 & 4) == 0)
  {
LABEL_108:
    if ((v7 & 8) == 0) {
      goto LABEL_109;
    }
    goto LABEL_214;
  }
LABEL_213:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v7 = *v4;
  if ((*v4 & 8) == 0)
  {
LABEL_109:
    if ((v7 & 0x10) == 0) {
      goto LABEL_110;
    }
    goto LABEL_215;
  }
LABEL_214:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v7 = *v4;
  if ((*v4 & 0x10) == 0)
  {
LABEL_110:
    if ((v7 & 0x2000000000000) == 0) {
      goto LABEL_111;
    }
LABEL_216:
    this = PB::Writer::writeVarInt(a2);
    if ((*v4 & 0x2000) == 0) {
      return this;
    }
    goto LABEL_217;
  }
LABEL_215:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v7 = *v4;
  if ((*v4 & 0x2000000000000) != 0) {
    goto LABEL_216;
  }
LABEL_111:
  if ((v7 & 0x2000) == 0) {
    return this;
  }
LABEL_217:
  float v8 = *(float *)(v3 + 92);
  return PB::Writer::write(a2, v8);
}

uint64_t CMMsl::KappaSevereCrashResult::hash_value(CMMsl::KappaSevereCrashResult *this)
{
  uint64_t v1 = *(void *)((char *)this + 356);
  if ((v1 & 0x800000) != 0)
  {
    float v6 = *((float *)this + 33);
    uint64_t v2 = LODWORD(v6);
    if (v6 == 0.0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 0x400000) != 0)
    {
LABEL_3:
      float v3 = *((float *)this + 32);
      uint64_t v4 = v2;
      uint64_t v5 = LODWORD(v3);
      if (v3 == 0.0) {
        uint64_t v5 = 0;
      }
      uint64_t v153 = v5;
      uint64_t v2 = v4;
      if ((v1 & 0x1000000) != 0) {
        goto LABEL_6;
      }
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 0x400000) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v153 = 0;
  if ((v1 & 0x1000000) != 0)
  {
LABEL_6:
    uint64_t v152 = *((int *)this + 34);
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v152 = 0;
LABEL_12:
  uint64_t v7 = *(void *)((char *)this + 364);
  if ((v1 & 0x10000000000000) == 0)
  {
    uint64_t v151 = 0;
    if (v7) {
      goto LABEL_14;
    }
LABEL_162:
    uint64_t v150 = 0;
    if ((v1 & 0x400000000000000) != 0) {
      goto LABEL_17;
    }
LABEL_163:
    uint64_t v149 = 0;
    if ((v1 & 0x400000000000) != 0) {
      goto LABEL_20;
    }
LABEL_164:
    uint64_t v148 = 0;
    if ((v1 & 0x200000000000) != 0) {
      goto LABEL_23;
    }
LABEL_165:
    uint64_t v147 = 0;
    if ((v1 & 0x200) != 0) {
      goto LABEL_26;
    }
LABEL_166:
    uint64_t v146 = 0;
    if ((v1 & 0x80000000000000) != 0) {
      goto LABEL_29;
    }
    goto LABEL_167;
  }
  uint64_t v151 = *((int *)this + 62);
  if ((v7 & 1) == 0) {
    goto LABEL_162;
  }
LABEL_14:
  float v8 = *((float *)this + 74);
  uint64_t v9 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v9 = 0;
  }
  uint64_t v150 = v9;
  if ((v1 & 0x400000000000000) == 0) {
    goto LABEL_163;
  }
LABEL_17:
  float v10 = *((float *)this + 68);
  uint64_t v11 = LODWORD(v10);
  if (v10 == 0.0) {
    uint64_t v11 = 0;
  }
  uint64_t v149 = v11;
  if ((v1 & 0x400000000000) == 0) {
    goto LABEL_164;
  }
LABEL_20:
  float v12 = *((float *)this + 56);
  uint64_t v13 = LODWORD(v12);
  if (v12 == 0.0) {
    uint64_t v13 = 0;
  }
  uint64_t v148 = v13;
  if ((v1 & 0x200000000000) == 0) {
    goto LABEL_165;
  }
LABEL_23:
  float v14 = *((float *)this + 55);
  uint64_t v15 = LODWORD(v14);
  if (v14 == 0.0) {
    uint64_t v15 = 0;
  }
  uint64_t v147 = v15;
  if ((v1 & 0x200) == 0) {
    goto LABEL_166;
  }
LABEL_26:
  float v16 = *((float *)this + 19);
  uint64_t v17 = LODWORD(v16);
  if (v16 == 0.0) {
    uint64_t v17 = 0;
  }
  uint64_t v146 = v17;
  if ((v1 & 0x80000000000000) != 0)
  {
LABEL_29:
    uint64_t v145 = *((unsigned int *)this + 65);
    if ((v1 & 0x2000000) != 0) {
      goto LABEL_30;
    }
    goto LABEL_168;
  }
LABEL_167:
  uint64_t v145 = 0;
  if ((v1 & 0x2000000) != 0)
  {
LABEL_30:
    uint64_t v144 = *((unsigned int *)this + 35);
    if ((v1 & 0x10000) != 0) {
      goto LABEL_31;
    }
LABEL_169:
    uint64_t v143 = 0;
    if ((v7 & 8) != 0) {
      goto LABEL_34;
    }
LABEL_170:
    uint64_t v142 = 0;
    if ((v7 & 0x10) != 0) {
      goto LABEL_37;
    }
LABEL_171:
    uint64_t v141 = 0;
    if ((v1 & 0x80000000000) != 0) {
      goto LABEL_40;
    }
    goto LABEL_172;
  }
LABEL_168:
  uint64_t v144 = 0;
  if ((v1 & 0x10000) == 0) {
    goto LABEL_169;
  }
LABEL_31:
  float v18 = *((float *)this + 26);
  uint64_t v19 = LODWORD(v18);
  if (v18 == 0.0) {
    uint64_t v19 = 0;
  }
  uint64_t v143 = v19;
  if ((v7 & 8) == 0) {
    goto LABEL_170;
  }
LABEL_34:
  float v20 = *((float *)this + 77);
  uint64_t v21 = LODWORD(v20);
  if (v20 == 0.0) {
    uint64_t v21 = 0;
  }
  uint64_t v142 = v21;
  if ((v7 & 0x10) == 0) {
    goto LABEL_171;
  }
LABEL_37:
  float v22 = *((float *)this + 78);
  uint64_t v23 = LODWORD(v22);
  if (v22 == 0.0) {
    uint64_t v23 = 0;
  }
  uint64_t v141 = v23;
  if ((v1 & 0x80000000000) != 0)
  {
LABEL_40:
    uint64_t v140 = *((int *)this + 53);
    if ((v1 & 0x20000000000) != 0) {
      goto LABEL_41;
    }
    goto LABEL_173;
  }
LABEL_172:
  uint64_t v140 = 0;
  if ((v1 & 0x20000000000) != 0)
  {
LABEL_41:
    uint64_t v139 = *((int *)this + 51);
    if ((v1 & 0x4000000000000) != 0) {
      goto LABEL_42;
    }
LABEL_174:
    uint64_t v138 = 0;
    if ((v1 & 0x1000000000000000) != 0) {
      goto LABEL_45;
    }
    goto LABEL_175;
  }
LABEL_173:
  uint64_t v139 = 0;
  if ((v1 & 0x4000000000000) == 0) {
    goto LABEL_174;
  }
LABEL_42:
  float v24 = *((float *)this + 60);
  uint64_t v25 = LODWORD(v24);
  if (v24 == 0.0) {
    uint64_t v25 = 0;
  }
  uint64_t v138 = v25;
  if ((v1 & 0x1000000000000000) != 0)
  {
LABEL_45:
    uint64_t v137 = *((unsigned int *)this + 70);
    if ((v7 & 2) != 0) {
      goto LABEL_46;
    }
    goto LABEL_176;
  }
LABEL_175:
  uint64_t v137 = 0;
  if ((v7 & 2) != 0)
  {
LABEL_46:
    uint64_t v136 = *((unsigned int *)this + 75);
    if ((v1 & 0x80) != 0) {
      goto LABEL_47;
    }
    goto LABEL_177;
  }
LABEL_176:
  uint64_t v136 = 0;
  if ((v1 & 0x80) != 0)
  {
LABEL_47:
    uint64_t v135 = *((void *)this + 8);
    if (v1) {
      goto LABEL_48;
    }
    goto LABEL_178;
  }
LABEL_177:
  uint64_t v135 = 0;
  if (v1)
  {
LABEL_48:
    uint64_t v134 = *((void *)this + 1);
    if ((v7 & 0x40) != 0) {
      goto LABEL_49;
    }
    goto LABEL_179;
  }
LABEL_178:
  uint64_t v134 = 0;
  if ((v7 & 0x40) != 0)
  {
LABEL_49:
    uint64_t v133 = *((unsigned __int8 *)this + 317);
    if ((v7 & 0x80) != 0) {
      goto LABEL_50;
    }
    goto LABEL_180;
  }
LABEL_179:
  uint64_t v133 = 0;
  if ((v7 & 0x80) != 0)
  {
LABEL_50:
    uint64_t v132 = *((unsigned __int8 *)this + 318);
    if ((v7 & 0x8000) != 0) {
      goto LABEL_51;
    }
    goto LABEL_181;
  }
LABEL_180:
  uint64_t v132 = 0;
  if ((v7 & 0x8000) != 0)
  {
LABEL_51:
    uint64_t v131 = *((unsigned __int8 *)this + 326);
    if ((v7 & 0x10000) != 0) {
      goto LABEL_52;
    }
    goto LABEL_182;
  }
LABEL_181:
  uint64_t v131 = 0;
  if ((v7 & 0x10000) != 0)
  {
LABEL_52:
    uint64_t v130 = *((unsigned __int8 *)this + 327);
    if ((v7 & 0x8000000) != 0) {
      goto LABEL_53;
    }
    goto LABEL_183;
  }
LABEL_182:
  uint64_t v130 = 0;
  if ((v7 & 0x8000000) != 0)
  {
LABEL_53:
    uint64_t v129 = *((unsigned __int8 *)this + 338);
    if ((v7 & 0x2000000) != 0) {
      goto LABEL_54;
    }
    goto LABEL_184;
  }
LABEL_183:
  uint64_t v129 = 0;
  if ((v7 & 0x2000000) != 0)
  {
LABEL_54:
    uint64_t v128 = *((unsigned __int8 *)this + 336);
    if ((v7 & 0x1000) != 0) {
      goto LABEL_55;
    }
    goto LABEL_185;
  }
LABEL_184:
  uint64_t v128 = 0;
  if ((v7 & 0x1000) != 0)
  {
LABEL_55:
    uint64_t v127 = *((unsigned __int8 *)this + 323);
    if ((v7 & 0x10000000) != 0) {
      goto LABEL_56;
    }
    goto LABEL_186;
  }
LABEL_185:
  uint64_t v127 = 0;
  if ((v7 & 0x10000000) != 0)
  {
LABEL_56:
    uint64_t v126 = *((unsigned __int8 *)this + 339);
    if ((v7 & 0x20000000) != 0) {
      goto LABEL_57;
    }
    goto LABEL_187;
  }
LABEL_186:
  uint64_t v126 = 0;
  if ((v7 & 0x20000000) != 0)
  {
LABEL_57:
    uint64_t v125 = *((unsigned __int8 *)this + 340);
    if ((v7 & 0x200) != 0) {
      goto LABEL_58;
    }
    goto LABEL_188;
  }
LABEL_187:
  uint64_t v125 = 0;
  if ((v7 & 0x200) != 0)
  {
LABEL_58:
    uint64_t v124 = *((unsigned __int8 *)this + 320);
    if ((v7 & 0x1000000) != 0) {
      goto LABEL_59;
    }
    goto LABEL_189;
  }
LABEL_188:
  uint64_t v124 = 0;
  if ((v7 & 0x1000000) != 0)
  {
LABEL_59:
    uint64_t v123 = *((unsigned __int8 *)this + 335);
    if ((v7 & 0x2000) != 0) {
      goto LABEL_60;
    }
    goto LABEL_190;
  }
LABEL_189:
  uint64_t v123 = 0;
  if ((v7 & 0x2000) != 0)
  {
LABEL_60:
    uint64_t v122 = *((unsigned __int8 *)this + 324);
    if ((v7 & 0x4000000) != 0) {
      goto LABEL_61;
    }
    goto LABEL_191;
  }
LABEL_190:
  uint64_t v122 = 0;
  if ((v7 & 0x4000000) != 0)
  {
LABEL_61:
    uint64_t v121 = *((unsigned __int8 *)this + 337);
    if ((v7 & 0x80000) != 0) {
      goto LABEL_62;
    }
    goto LABEL_192;
  }
LABEL_191:
  uint64_t v121 = 0;
  if ((v7 & 0x80000) != 0)
  {
LABEL_62:
    uint64_t v120 = *((unsigned __int8 *)this + 330);
    if ((v7 & 0x2000000000) != 0) {
      goto LABEL_63;
    }
    goto LABEL_193;
  }
LABEL_192:
  uint64_t v120 = 0;
  if ((v7 & 0x2000000000) != 0)
  {
LABEL_63:
    uint64_t v119 = *((unsigned __int8 *)this + 348);
    if ((v7 & 0x200000000) != 0) {
      goto LABEL_64;
    }
    goto LABEL_194;
  }
LABEL_193:
  uint64_t v119 = 0;
  if ((v7 & 0x200000000) != 0)
  {
LABEL_64:
    uint64_t v118 = *((unsigned __int8 *)this + 344);
    if ((v7 & 0x4000000000) != 0) {
      goto LABEL_65;
    }
    goto LABEL_195;
  }
LABEL_194:
  uint64_t v118 = 0;
  if ((v7 & 0x4000000000) != 0)
  {
LABEL_65:
    uint64_t v117 = *((unsigned __int8 *)this + 349);
    if ((v7 & 0x400000000) != 0) {
      goto LABEL_66;
    }
    goto LABEL_196;
  }
LABEL_195:
  uint64_t v117 = 0;
  if ((v7 & 0x400000000) != 0)
  {
LABEL_66:
    uint64_t v116 = *((unsigned __int8 *)this + 345);
    if ((v7 & 0x40000000) != 0) {
      goto LABEL_67;
    }
    goto LABEL_197;
  }
LABEL_196:
  uint64_t v116 = 0;
  if ((v7 & 0x40000000) != 0)
  {
LABEL_67:
    uint64_t v115 = *((unsigned __int8 *)this + 341);
    if ((v7 & 0x800) != 0) {
      goto LABEL_68;
    }
    goto LABEL_198;
  }
LABEL_197:
  uint64_t v115 = 0;
  if ((v7 & 0x800) != 0)
  {
LABEL_68:
    uint64_t v114 = *((unsigned __int8 *)this + 322);
    if ((v7 & 0x100000) != 0) {
      goto LABEL_69;
    }
    goto LABEL_199;
  }
LABEL_198:
  uint64_t v114 = 0;
  if ((v7 & 0x100000) != 0)
  {
LABEL_69:
    uint64_t v113 = *((unsigned __int8 *)this + 331);
    if ((v7 & 0x8000000000) != 0) {
      goto LABEL_70;
    }
    goto LABEL_200;
  }
LABEL_199:
  uint64_t v113 = 0;
  if ((v7 & 0x8000000000) != 0)
  {
LABEL_70:
    uint64_t v112 = *((unsigned __int8 *)this + 350);
    if ((v7 & 0x800000000) != 0) {
      goto LABEL_71;
    }
    goto LABEL_201;
  }
LABEL_200:
  uint64_t v112 = 0;
  if ((v7 & 0x800000000) != 0)
  {
LABEL_71:
    uint64_t v111 = *((unsigned __int8 *)this + 346);
    if ((v1 & 0x20000) != 0) {
      goto LABEL_72;
    }
    goto LABEL_202;
  }
LABEL_201:
  uint64_t v111 = 0;
  if ((v1 & 0x20000) != 0)
  {
LABEL_72:
    uint64_t v110 = *((unsigned int *)this + 27);
    if ((v7 & 0x400000) != 0) {
      goto LABEL_73;
    }
    goto LABEL_203;
  }
LABEL_202:
  uint64_t v110 = 0;
  if ((v7 & 0x400000) != 0)
  {
LABEL_73:
    uint64_t v109 = *((unsigned __int8 *)this + 333);
    if ((v7 & 0x800000) != 0) {
      goto LABEL_74;
    }
    goto LABEL_204;
  }
LABEL_203:
  uint64_t v109 = 0;
  if ((v7 & 0x800000) != 0)
  {
LABEL_74:
    uint64_t v108 = *((unsigned __int8 *)this + 334);
    if ((v7 & 0x20) != 0) {
      goto LABEL_75;
    }
    goto LABEL_205;
  }
LABEL_204:
  uint64_t v108 = 0;
  if ((v7 & 0x20) != 0)
  {
LABEL_75:
    uint64_t v107 = *((unsigned __int8 *)this + 316);
    if ((v1 & 0x40000) != 0) {
      goto LABEL_76;
    }
    goto LABEL_206;
  }
LABEL_205:
  uint64_t v107 = 0;
  if ((v1 & 0x40000) != 0)
  {
LABEL_76:
    uint64_t v106 = *((unsigned int *)this + 28);
    if ((v7 & 0x40000000000) != 0) {
      goto LABEL_77;
    }
    goto LABEL_207;
  }
LABEL_206:
  uint64_t v106 = 0;
  if ((v7 & 0x40000000000) != 0)
  {
LABEL_77:
    uint64_t v105 = *((unsigned __int8 *)this + 353);
    if ((v7 & 0x10000000000) != 0) {
      goto LABEL_78;
    }
    goto LABEL_208;
  }
LABEL_207:
  uint64_t v105 = 0;
  if ((v7 & 0x10000000000) != 0)
  {
LABEL_78:
    uint64_t v104 = *((unsigned __int8 *)this + 351);
    if ((v7 & 0x20000000000) != 0) {
      goto LABEL_79;
    }
    goto LABEL_209;
  }
LABEL_208:
  uint64_t v104 = 0;
  if ((v7 & 0x20000000000) != 0)
  {
LABEL_79:
    uint64_t v103 = *((unsigned __int8 *)this + 352);
    if ((v7 & 0x100000000) != 0) {
      goto LABEL_80;
    }
    goto LABEL_210;
  }
LABEL_209:
  uint64_t v103 = 0;
  if ((v7 & 0x100000000) != 0)
  {
LABEL_80:
    uint64_t v102 = *((unsigned __int8 *)this + 343);
    if ((v7 & 0x80000000) != 0) {
      goto LABEL_81;
    }
    goto LABEL_211;
  }
LABEL_210:
  uint64_t v102 = 0;
  if ((v7 & 0x80000000) != 0)
  {
LABEL_81:
    uint64_t v101 = *((unsigned __int8 *)this + 342);
    if ((v1 & 0x20000000000000) != 0) {
      goto LABEL_82;
    }
    goto LABEL_212;
  }
LABEL_211:
  uint64_t v101 = 0;
  if ((v1 & 0x20000000000000) != 0)
  {
LABEL_82:
    uint64_t v100 = *((int *)this + 63);
    if ((v1 & 0x40000000000000) != 0) {
      goto LABEL_83;
    }
    goto LABEL_213;
  }
LABEL_212:
  uint64_t v100 = 0;
  if ((v1 & 0x40000000000000) != 0)
  {
LABEL_83:
    uint64_t v99 = *((int *)this + 64);
    if ((v1 & 0x4000000) != 0) {
      goto LABEL_84;
    }
    goto LABEL_214;
  }
LABEL_213:
  uint64_t v99 = 0;
  if ((v1 & 0x4000000) != 0)
  {
LABEL_84:
    uint64_t v98 = *((int *)this + 36);
    if ((v1 & 0x8000000) != 0) {
      goto LABEL_85;
    }
    goto LABEL_215;
  }
LABEL_214:
  uint64_t v98 = 0;
  if ((v1 & 0x8000000) != 0)
  {
LABEL_85:
    uint64_t v97 = *((int *)this + 37);
    if ((v7 & 0x20000) != 0) {
      goto LABEL_86;
    }
    goto LABEL_216;
  }
LABEL_215:
  uint64_t v97 = 0;
  if ((v7 & 0x20000) != 0)
  {
LABEL_86:
    uint64_t v96 = *((unsigned __int8 *)this + 328);
    if ((v7 & 0x4000) != 0) {
      goto LABEL_87;
    }
    goto LABEL_217;
  }
LABEL_216:
  uint64_t v96 = 0;
  if ((v7 & 0x4000) != 0)
  {
LABEL_87:
    uint64_t v95 = *((unsigned __int8 *)this + 325);
    if ((v1 & 0x2000000000) != 0) {
      goto LABEL_88;
    }
    goto LABEL_218;
  }
LABEL_217:
  uint64_t v95 = 0;
  if ((v1 & 0x2000000000) != 0)
  {
LABEL_88:
    uint64_t v94 = *((int *)this + 47);
    if ((v1 & 0x80000) != 0) {
      goto LABEL_89;
    }
    goto LABEL_219;
  }
LABEL_218:
  uint64_t v94 = 0;
  if ((v1 & 0x80000) != 0)
  {
LABEL_89:
    uint64_t v93 = *((int *)this + 29);
    if ((v1 & 0x1000000000) != 0) {
      goto LABEL_90;
    }
    goto LABEL_220;
  }
LABEL_219:
  uint64_t v93 = 0;
  if ((v1 & 0x1000000000) != 0)
  {
LABEL_90:
    uint64_t v92 = *((int *)this + 46);
    if ((v1 & 0x4000000000000000) != 0) {
      goto LABEL_91;
    }
LABEL_221:
    uint64_t v91 = 0;
    if (v1 < 0) {
      goto LABEL_94;
    }
LABEL_222:
    uint64_t v90 = 0;
    if ((v1 & 0x200000000000000) != 0) {
      goto LABEL_97;
    }
LABEL_223:
    uint64_t v89 = 0;
    if ((v1 & 0x800000000000000) != 0) {
      goto LABEL_100;
    }
    goto LABEL_224;
  }
LABEL_220:
  uint64_t v92 = 0;
  if ((v1 & 0x4000000000000000) == 0) {
    goto LABEL_221;
  }
LABEL_91:
  float v26 = *((float *)this + 72);
  uint64_t v27 = LODWORD(v26);
  if (v26 == 0.0) {
    uint64_t v27 = 0;
  }
  uint64_t v91 = v27;
  if ((v1 & 0x8000000000000000) == 0) {
    goto LABEL_222;
  }
LABEL_94:
  float v28 = *((float *)this + 73);
  uint64_t v29 = LODWORD(v28);
  if (v28 == 0.0) {
    uint64_t v29 = 0;
  }
  uint64_t v90 = v29;
  if ((v1 & 0x200000000000000) == 0) {
    goto LABEL_223;
  }
LABEL_97:
  float v30 = *((float *)this + 67);
  uint64_t v31 = LODWORD(v30);
  if (v30 == 0.0) {
    uint64_t v31 = 0;
  }
  uint64_t v89 = v31;
  if ((v1 & 0x800000000000000) != 0)
  {
LABEL_100:
    uint64_t v88 = *((unsigned int *)this + 69);
    if ((v1 & 0x2000000000000000) != 0) {
      goto LABEL_101;
    }
    goto LABEL_225;
  }
LABEL_224:
  uint64_t v88 = 0;
  if ((v1 & 0x2000000000000000) != 0)
  {
LABEL_101:
    uint64_t v87 = *((unsigned int *)this + 71);
    if ((v7 & 0x400) != 0) {
      goto LABEL_102;
    }
    goto LABEL_226;
  }
LABEL_225:
  uint64_t v87 = 0;
  if ((v7 & 0x400) != 0)
  {
LABEL_102:
    uint64_t v86 = *((unsigned __int8 *)this + 321);
    if ((v1 & 0x4000) != 0) {
      goto LABEL_103;
    }
    goto LABEL_227;
  }
LABEL_226:
  uint64_t v86 = 0;
  if ((v1 & 0x4000) != 0)
  {
LABEL_103:
    uint64_t v85 = *((unsigned int *)this + 24);
    if ((v1 & 0x1000) != 0) {
      goto LABEL_104;
    }
LABEL_228:
    uint64_t v84 = 0;
    if ((v1 & 0x100000000000) != 0) {
      goto LABEL_107;
    }
    goto LABEL_229;
  }
LABEL_227:
  uint64_t v85 = 0;
  if ((v1 & 0x1000) == 0) {
    goto LABEL_228;
  }
LABEL_104:
  float v32 = *((float *)this + 22);
  uint64_t v33 = LODWORD(v32);
  if (v32 == 0.0) {
    uint64_t v33 = 0;
  }
  uint64_t v84 = v33;
  if ((v1 & 0x100000000000) != 0)
  {
LABEL_107:
    uint64_t v83 = *((unsigned int *)this + 54);
    if ((v1 & 0x100000000000000) != 0) {
      goto LABEL_108;
    }
    goto LABEL_230;
  }
LABEL_229:
  uint64_t v83 = 0;
  if ((v1 & 0x100000000000000) != 0)
  {
LABEL_108:
    uint64_t v82 = *((unsigned int *)this + 66);
    if ((v1 & 0x40) != 0) {
      goto LABEL_109;
    }
    goto LABEL_231;
  }
LABEL_230:
  uint64_t v82 = 0;
  if ((v1 & 0x40) != 0)
  {
LABEL_109:
    uint64_t v81 = *((void *)this + 7);
    if ((v1 & 0x800000000000) != 0) {
      goto LABEL_110;
    }
    goto LABEL_232;
  }
LABEL_231:
  uint64_t v81 = 0;
  if ((v1 & 0x800000000000) != 0)
  {
LABEL_110:
    uint64_t v80 = *((int *)this + 57);
    if ((v1 & 0x1000000000000) != 0) {
      goto LABEL_111;
    }
    goto LABEL_233;
  }
LABEL_232:
  uint64_t v80 = 0;
  if ((v1 & 0x1000000000000) != 0)
  {
LABEL_111:
    uint64_t v79 = *((int *)this + 58);
    if ((v1 & 0x100000) != 0) {
      goto LABEL_112;
    }
LABEL_234:
    uint64_t v78 = 0;
    if ((v1 & 0x400) != 0) {
      goto LABEL_115;
    }
LABEL_235:
    uint64_t v77 = 0;
    if ((v1 & 0x200000) != 0) {
      goto LABEL_118;
    }
LABEL_236:
    uint64_t v76 = 0;
    if ((v1 & 0x800) != 0) {
      goto LABEL_121;
    }
LABEL_237:
    uint64_t v75 = 0;
    if ((v1 & 0x100) != 0) {
      goto LABEL_124;
    }
LABEL_238:
    uint64_t v74 = 0;
    if ((v7 & 0x200000) != 0) {
      goto LABEL_127;
    }
    goto LABEL_239;
  }
LABEL_233:
  uint64_t v79 = 0;
  if ((v1 & 0x100000) == 0) {
    goto LABEL_234;
  }
LABEL_112:
  float v34 = *((float *)this + 30);
  uint64_t v35 = LODWORD(v34);
  if (v34 == 0.0) {
    uint64_t v35 = 0;
  }
  uint64_t v78 = v35;
  if ((v1 & 0x400) == 0) {
    goto LABEL_235;
  }
LABEL_115:
  float v36 = *((float *)this + 20);
  uint64_t v37 = LODWORD(v36);
  if (v36 == 0.0) {
    uint64_t v37 = 0;
  }
  uint64_t v77 = v37;
  if ((v1 & 0x200000) == 0) {
    goto LABEL_236;
  }
LABEL_118:
  float v38 = *((float *)this + 31);
  uint64_t v39 = LODWORD(v38);
  if (v38 == 0.0) {
    uint64_t v39 = 0;
  }
  uint64_t v76 = v39;
  if ((v1 & 0x800) == 0) {
    goto LABEL_237;
  }
LABEL_121:
  float v40 = *((float *)this + 21);
  uint64_t v41 = LODWORD(v40);
  if (v40 == 0.0) {
    uint64_t v41 = 0;
  }
  uint64_t v75 = v41;
  if ((v1 & 0x100) == 0) {
    goto LABEL_238;
  }
LABEL_124:
  float v42 = *((float *)this + 18);
  uint64_t v43 = LODWORD(v42);
  if (v42 == 0.0) {
    uint64_t v43 = 0;
  }
  uint64_t v74 = v43;
  if ((v7 & 0x200000) != 0)
  {
LABEL_127:
    uint64_t v44 = *((unsigned __int8 *)this + 332);
    if ((v7 & 4) != 0) {
      goto LABEL_128;
    }
    goto LABEL_240;
  }
LABEL_239:
  uint64_t v44 = 0;
  if ((v7 & 4) != 0)
  {
LABEL_128:
    uint64_t v45 = *((int *)this + 76);
    if ((v1 & 0x10000000) != 0) {
      goto LABEL_129;
    }
    goto LABEL_241;
  }
LABEL_240:
  uint64_t v45 = 0;
  if ((v1 & 0x10000000) != 0)
  {
LABEL_129:
    uint64_t v46 = *((int *)this + 38);
    if ((v1 & 0x40000000) != 0) {
      goto LABEL_130;
    }
    goto LABEL_242;
  }
LABEL_241:
  uint64_t v46 = 0;
  if ((v1 & 0x40000000) != 0)
  {
LABEL_130:
    uint64_t v47 = *((int *)this + 40);
    if ((v7 & 0x1000000000) != 0) {
      goto LABEL_131;
    }
    goto LABEL_243;
  }
LABEL_242:
  uint64_t v47 = 0;
  if ((v7 & 0x1000000000) != 0)
  {
LABEL_131:
    uint64_t v48 = *((unsigned __int8 *)this + 347);
    if ((v1 & 0x80000000) != 0) {
      goto LABEL_132;
    }
    goto LABEL_244;
  }
LABEL_243:
  uint64_t v48 = 0;
  if ((v1 & 0x80000000) != 0)
  {
LABEL_132:
    uint64_t v49 = *((unsigned int *)this + 41);
    if ((v1 & 0x20000000) != 0) {
      goto LABEL_133;
    }
    goto LABEL_245;
  }
LABEL_244:
  uint64_t v49 = 0;
  if ((v1 & 0x20000000) != 0)
  {
LABEL_133:
    uint64_t v50 = *((unsigned int *)this + 39);
    if ((v1 & 0x8000000000000) != 0) {
      goto LABEL_134;
    }
LABEL_246:
    uint64_t v52 = 0;
    if ((v1 & 0x4000000000) != 0) {
      goto LABEL_138;
    }
    goto LABEL_247;
  }
LABEL_245:
  uint64_t v50 = 0;
  if ((v1 & 0x8000000000000) == 0) {
    goto LABEL_246;
  }
LABEL_134:
  float v51 = *((float *)this + 61);
  if (v51 == 0.0) {
    uint64_t v52 = 0;
  }
  else {
    uint64_t v52 = LODWORD(v51);
  }
  if ((v1 & 0x4000000000) != 0)
  {
LABEL_138:
    uint64_t v53 = *((int *)this + 48);
    if ((v1 & 0x8000000000) != 0) {
      goto LABEL_139;
    }
    goto LABEL_248;
  }
LABEL_247:
  uint64_t v53 = 0;
  if ((v1 & 0x8000000000) != 0)
  {
LABEL_139:
    uint64_t v54 = *((int *)this + 49);
    if ((v1 & 0x8000) != 0) {
      goto LABEL_140;
    }
LABEL_249:
    uint64_t v56 = 0;
    if ((v1 & 0x40000000000) != 0) {
      goto LABEL_144;
    }
    goto LABEL_250;
  }
LABEL_248:
  uint64_t v54 = 0;
  if ((v1 & 0x8000) == 0) {
    goto LABEL_249;
  }
LABEL_140:
  float v55 = *((float *)this + 25);
  if (v55 == 0.0) {
    uint64_t v56 = 0;
  }
  else {
    uint64_t v56 = LODWORD(v55);
  }
  if ((v1 & 0x40000000000) != 0)
  {
LABEL_144:
    uint64_t v57 = *((int *)this + 52);
    if ((v1 & 0x10000000000) != 0) {
      goto LABEL_145;
    }
    goto LABEL_251;
  }
LABEL_250:
  uint64_t v57 = 0;
  if ((v1 & 0x10000000000) != 0)
  {
LABEL_145:
    uint64_t v58 = *((int *)this + 50);
    if ((v1 & 0x800000000) != 0) {
      goto LABEL_146;
    }
    goto LABEL_252;
  }
LABEL_251:
  uint64_t v58 = 0;
  if ((v1 & 0x800000000) != 0)
  {
LABEL_146:
    uint64_t v59 = *((int *)this + 45);
    if ((v1 & 0x100000000) != 0) {
      goto LABEL_147;
    }
    goto LABEL_253;
  }
LABEL_252:
  uint64_t v59 = 0;
  if ((v1 & 0x100000000) != 0)
  {
LABEL_147:
    uint64_t v60 = *((int *)this + 42);
    if ((v1 & 0x400000000) != 0) {
      goto LABEL_148;
    }
    goto LABEL_254;
  }
LABEL_253:
  uint64_t v60 = 0;
  if ((v1 & 0x400000000) != 0)
  {
LABEL_148:
    uint64_t v61 = *((int *)this + 44);
    if ((v7 & 0x100) != 0) {
      goto LABEL_149;
    }
    goto LABEL_255;
  }
LABEL_254:
  uint64_t v61 = 0;
  if ((v7 & 0x100) != 0)
  {
LABEL_149:
    uint64_t v62 = *((unsigned __int8 *)this + 319);
    if ((v7 & 0x40000) != 0) {
      goto LABEL_150;
    }
    goto LABEL_256;
  }
LABEL_255:
  uint64_t v62 = 0;
  if ((v7 & 0x40000) != 0)
  {
LABEL_150:
    uint64_t v63 = *((unsigned __int8 *)this + 329);
    if ((v1 & 0x200000000) != 0) {
      goto LABEL_151;
    }
    goto LABEL_257;
  }
LABEL_256:
  uint64_t v63 = 0;
  if ((v1 & 0x200000000) != 0)
  {
LABEL_151:
    uint64_t v64 = *((int *)this + 43);
    if ((v1 & 2) != 0) {
      goto LABEL_152;
    }
    goto LABEL_258;
  }
LABEL_257:
  uint64_t v64 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_152:
    uint64_t v65 = *((void *)this + 2);
    if ((v1 & 0x20) != 0) {
      goto LABEL_153;
    }
    goto LABEL_259;
  }
LABEL_258:
  uint64_t v65 = 0;
  if ((v1 & 0x20) != 0)
  {
LABEL_153:
    uint64_t v66 = *((void *)this + 6);
    if ((v1 & 4) != 0) {
      goto LABEL_154;
    }
    goto LABEL_260;
  }
LABEL_259:
  uint64_t v66 = 0;
  if ((v1 & 4) != 0)
  {
LABEL_154:
    uint64_t v67 = *((void *)this + 3);
    if ((v1 & 8) != 0) {
      goto LABEL_155;
    }
    goto LABEL_261;
  }
LABEL_260:
  uint64_t v67 = 0;
  if ((v1 & 8) != 0)
  {
LABEL_155:
    uint64_t v68 = *((void *)this + 4);
    if ((v1 & 0x10) != 0) {
      goto LABEL_156;
    }
    goto LABEL_262;
  }
LABEL_261:
  uint64_t v68 = 0;
  if ((v1 & 0x10) != 0)
  {
LABEL_156:
    uint64_t v69 = *((void *)this + 5);
    if ((v1 & 0x2000000000000) != 0) {
      goto LABEL_157;
    }
    goto LABEL_263;
  }
LABEL_262:
  uint64_t v69 = 0;
  if ((v1 & 0x2000000000000) != 0)
  {
LABEL_157:
    uint64_t v70 = *((int *)this + 59);
    if ((v1 & 0x2000) != 0) {
      goto LABEL_158;
    }
LABEL_264:
    uint64_t v72 = 0;
    return v153 ^ v2 ^ v152 ^ v151 ^ v150 ^ v149 ^ v148 ^ v147 ^ v146 ^ v145 ^ v144 ^ v143 ^ v142 ^ v141 ^ v140 ^ v139 ^ v138 ^ v137 ^ v136 ^ v135 ^ v134 ^ v133 ^ v132 ^ v131 ^ v130 ^ v129 ^ v128 ^ v127 ^ v126 ^ v125 ^ v124 ^ v123 ^ v122 ^ v121 ^ v120 ^ v119 ^ v118 ^ v117 ^ v116 ^ v115 ^ v114 ^ v113 ^ v112 ^ v111 ^ v110 ^ v109 ^ v108 ^ v107 ^ v106 ^ v105 ^ v104 ^ v103 ^ v102 ^ v101 ^ v100 ^ v99 ^ v98 ^ v97 ^ v96 ^ v95 ^ v94 ^ v93 ^ v92 ^ v91 ^ v90 ^ v89 ^ v88 ^ v87 ^ v86 ^ v85 ^ v84 ^ v83 ^ v82 ^ v81 ^ v80 ^ v79 ^ v78 ^ v77 ^ v76 ^ v75 ^ v74 ^ v44 ^ v45 ^ v46 ^ v47 ^ v48 ^ v49 ^ v50 ^ v52 ^ v53 ^ v54 ^ v56 ^ v57 ^ v58 ^ v59 ^ v60 ^ v61 ^ v62 ^ v63 ^ v64 ^ v65 ^ v66 ^ v67 ^ v68 ^ v69 ^ v70 ^ v72;
  }
LABEL_263:
  uint64_t v70 = 0;
  if ((v1 & 0x2000) == 0) {
    goto LABEL_264;
  }
LABEL_158:
  float v71 = *((float *)this + 23);
  uint64_t v72 = LODWORD(v71);
  if (v71 == 0.0) {
    uint64_t v72 = 0;
  }
  return v153 ^ v2 ^ v152 ^ v151 ^ v150 ^ v149 ^ v148 ^ v147 ^ v146 ^ v145 ^ v144 ^ v143 ^ v142 ^ v141 ^ v140 ^ v139 ^ v138 ^ v137 ^ v136 ^ v135 ^ v134 ^ v133 ^ v132 ^ v131 ^ v130 ^ v129 ^ v128 ^ v127 ^ v126 ^ v125 ^ v124 ^ v123 ^ v122 ^ v121 ^ v120 ^ v119 ^ v118 ^ v117 ^ v116 ^ v115 ^ v114 ^ v113 ^ v112 ^ v111 ^ v110 ^ v109 ^ v108 ^ v107 ^ v106 ^ v105 ^ v104 ^ v103 ^ v102 ^ v101 ^ v100 ^ v99 ^ v98 ^ v97 ^ v96 ^ v95 ^ v94 ^ v93 ^ v92 ^ v91 ^ v90 ^ v89 ^ v88 ^ v87 ^ v86 ^ v85 ^ v84 ^ v83 ^ v82 ^ v81 ^ v80 ^ v79 ^ v78 ^ v77 ^ v76 ^ v75 ^ v74 ^ v44 ^ v45 ^ v46 ^ v47 ^ v48 ^ v49 ^ v50 ^ v52 ^ v53 ^ v54 ^ v56 ^ v57 ^ v58 ^ v59 ^ v60 ^ v61 ^ v62 ^ v63 ^ v64 ^ v65 ^ v66 ^ v67 ^ v68 ^ v69 ^ v70 ^ v72;
}

void CMMsl::KappaSpinResult::~KappaSpinResult(CMMsl::KappaSpinResult *this)
{
  *(void *)this = &unk_270642C90;
  uint64_t v2 = (void *)*((void *)this + 13);
  if (v2)
  {
    *((void *)this + 14) = v2;
    operator delete(v2);
  }
  float v3 = (void *)*((void *)this + 10);
  if (v3)
  {
    *((void *)this + 11) = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)*((void *)this + 7);
  if (v4)
  {
    *((void *)this + 8) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 4);
  if (v5)
  {
    *((void *)this + 5) = v5;
    operator delete(v5);
  }
  float v6 = (void *)*((void *)this + 1);
  if (v6)
  {
    *((void *)this + 2) = v6;
    operator delete(v6);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::KappaSpinResult::~KappaSpinResult(this);
  JUMPOUT(0x25A2B2850);
}

CMMsl::KappaSpinResult *CMMsl::KappaSpinResult::KappaSpinResult(CMMsl::KappaSpinResult *this, const CMMsl::KappaSpinResult *a2)
{
  *(void *)this = &unk_270642C90;
  *(_OWORD *)((char *)this + 8) = 0u;
  uint64_t v4 = (void *)((char *)this + 8);
  *(_OWORD *)((char *)this + 56) = 0u;
  uint64_t v5 = (void *)((char *)this + 56);
  *(_OWORD *)((char *)this + 104) = 0u;
  float v6 = (void *)((char *)this + 104);
  *((_DWORD *)this + 51) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 15) = 0;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 0x1000) != 0)
  {
    int v9 = *((_DWORD *)a2 + 49);
    __int16 v8 = 4096;
    *((_WORD *)this + 102) = 4096;
    *((_DWORD *)this + 49) = v9;
    __int16 v7 = *((_WORD *)a2 + 102);
    if ((v7 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v8 = 0;
  if ((*((_WORD *)a2 + 102) & 0x800) != 0)
  {
LABEL_5:
    int v10 = *((_DWORD *)a2 + 48);
    v8 |= 0x800u;
    *((_WORD *)this + 102) = v8;
    *((_DWORD *)this + 48) = v10;
    __int16 v7 = *((_WORD *)a2 + 102);
  }
LABEL_6:
  if ((v7 & 0x10) != 0)
  {
    uint64_t v13 = *((void *)a2 + 20);
    v8 |= 0x10u;
    *((_WORD *)this + 102) = v8;
    *((void *)this + 20) = v13;
    __int16 v7 = *((_WORD *)a2 + 102);
    if ((v7 & 0x4000) == 0)
    {
LABEL_8:
      if ((v7 & 0x400) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
  }
  else if ((v7 & 0x4000) == 0)
  {
    goto LABEL_8;
  }
  char v14 = *((unsigned char *)a2 + 201);
  v8 |= 0x4000u;
  *((_WORD *)this + 102) = v8;
  *((unsigned char *)this + 201) = v14;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 0x400) == 0)
  {
LABEL_9:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v15 = *((_DWORD *)a2 + 47);
  v8 |= 0x400u;
  *((_WORD *)this + 102) = v8;
  *((_DWORD *)this + 47) = v15;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 0x2000) == 0)
  {
LABEL_10:
    if ((v7 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v16 = *((unsigned char *)a2 + 200);
  v8 |= 0x2000u;
  *((_WORD *)this + 102) = v8;
  *((unsigned char *)this + 200) = v16;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 4) == 0)
  {
LABEL_11:
    if ((v7 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v17 = *((void *)a2 + 18);
  v8 |= 4u;
  *((_WORD *)this + 102) = v8;
  *((void *)this + 18) = v17;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 8) == 0)
  {
LABEL_12:
    if ((v7 & 0x100) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v18 = *((void *)a2 + 19);
  v8 |= 8u;
  *((_WORD *)this + 102) = v8;
  *((void *)this + 19) = v18;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 0x100) == 0)
  {
LABEL_13:
    if ((v7 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v19 = *((_DWORD *)a2 + 45);
  v8 |= 0x100u;
  *((_WORD *)this + 102) = v8;
  *((_DWORD *)this + 45) = v19;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 0x80) == 0)
  {
LABEL_14:
    if ((v7 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v20 = *((_DWORD *)a2 + 44);
  v8 |= 0x80u;
  *((_WORD *)this + 102) = v8;
  *((_DWORD *)this + 44) = v20;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 0x40) == 0)
  {
LABEL_15:
    if ((v7 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  int v21 = *((_DWORD *)a2 + 43);
  v8 |= 0x40u;
  *((_WORD *)this + 102) = v8;
  *((_DWORD *)this + 43) = v21;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 1) == 0)
  {
LABEL_16:
    if ((v7 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v22 = *((void *)a2 + 16);
  v8 |= 1u;
  *((_WORD *)this + 102) = v8;
  *((void *)this + 16) = v22;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 2) == 0)
  {
LABEL_17:
    if ((v7 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v23 = *((void *)a2 + 17);
  v8 |= 2u;
  *((_WORD *)this + 102) = v8;
  *((void *)this + 17) = v23;
  __int16 v7 = *((_WORD *)a2 + 102);
  if ((v7 & 0x200) == 0)
  {
LABEL_18:
    if ((v7 & 0x20) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_34:
  int v24 = *((_DWORD *)a2 + 46);
  v8 |= 0x200u;
  *((_WORD *)this + 102) = v8;
  *((_DWORD *)this + 46) = v24;
  if ((*((_WORD *)a2 + 102) & 0x20) != 0)
  {
LABEL_19:
    int v11 = *((_DWORD *)a2 + 42);
    *((_WORD *)this + 102) = v8 | 0x20;
    *((_DWORD *)this + 42) = v11;
  }
LABEL_20:
  if (this != a2)
  {
    sub_2572C73EC((void *)this + 10, *((char **)a2 + 10), *((char **)a2 + 11), (uint64_t)(*((void *)a2 + 11) - *((void *)a2 + 10)) >> 3);
    sub_2572C73EC(v6, *((char **)a2 + 13), *((char **)a2 + 14), (uint64_t)(*((void *)a2 + 14) - *((void *)a2 + 13)) >> 3);
    sub_2572C75B4(v4, *((char **)a2 + 1), *((char **)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 2);
    sub_2572C75B4(v5, *((char **)a2 + 7), *((char **)a2 + 8), (uint64_t)(*((void *)a2 + 8) - *((void *)a2 + 7)) >> 2);
    sub_2572C75B4((void *)this + 4, *((char **)a2 + 4), *((char **)a2 + 5), (uint64_t)(*((void *)a2 + 5) - *((void *)a2 + 4)) >> 2);
  }
  return this;
}

CMMsl *CMMsl::KappaSpinResult::operator=(CMMsl *a1, const CMMsl::KappaSpinResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaSpinResult::KappaSpinResult((CMMsl::KappaSpinResult *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaSpinResult *)v5, v3);
    CMMsl::KappaSpinResult::~KappaSpinResult((CMMsl::KappaSpinResult *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaSpinResult *a2, CMMsl::KappaSpinResult *a3)
{
  int v3 = *((_DWORD *)this + 51);
  *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
  *((_DWORD *)a2 + 51) = v3;
  uint64_t v4 = *((void *)this + 20);
  *((void *)this + 20) = *((void *)a2 + 20);
  *((void *)a2 + 20) = v4;
  LOBYTE(v4) = *((unsigned char *)this + 201);
  *((unsigned char *)this + 201) = *((unsigned char *)a2 + 201);
  *((unsigned char *)a2 + 201) = v4;
  LOBYTE(v4) = *((unsigned char *)this + 200);
  *((unsigned char *)this + 200) = *((unsigned char *)a2 + 200);
  *((unsigned char *)a2 + 200) = v4;
  uint64_t v5 = *((void *)this + 18);
  *((void *)this + 18) = *((void *)a2 + 18);
  *((void *)a2 + 18) = v5;
  uint64_t v6 = *((void *)this + 19);
  *((void *)this + 19) = *((void *)a2 + 19);
  *((void *)a2 + 19) = v6;
  uint64_t v7 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v7;
  uint64_t v8 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v8;
  uint64_t v9 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v9;
  uint64_t v10 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v10;
  uint64_t v11 = *((void *)this + 14);
  *((void *)this + 14) = *((void *)a2 + 14);
  *((void *)a2 + 14) = v11;
  uint64_t v13 = *((void *)this + 15);
  uint64_t v12 = *((void *)this + 16);
  uint64_t v14 = *((void *)a2 + 16);
  *((void *)this + 15) = *((void *)a2 + 15);
  *((void *)this + 16) = v14;
  *((void *)a2 + 16) = v12;
  uint64_t v15 = *((void *)this + 17);
  *((void *)this + 17) = *((void *)a2 + 17);
  *((void *)a2 + 17) = v15;
  LODWORD(v15) = *((_DWORD *)this + 46);
  *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
  int v16 = *((_DWORD *)this + 49);
  *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
  *((_DWORD *)a2 + 49) = v16;
  int v17 = *((_DWORD *)this + 48);
  *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
  *((_DWORD *)a2 + 48) = v17;
  int v18 = *((_DWORD *)this + 47);
  *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
  *((_DWORD *)a2 + 47) = v18;
  int v19 = *((_DWORD *)this + 45);
  *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
  *((_DWORD *)a2 + 45) = v19;
  int v20 = *((_DWORD *)this + 44);
  *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
  *((_DWORD *)a2 + 44) = v20;
  int v21 = *((_DWORD *)this + 43);
  *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
  *((_DWORD *)a2 + 43) = v21;
  *((_DWORD *)a2 + 46) = v15;
  float result = *((float *)this + 42);
  *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
  *((float *)a2 + 42) = result;
  *((void *)a2 + 15) = v13;
  uint64_t v23 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v23;
  uint64_t v24 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v24;
  uint64_t v25 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v25;
  uint64_t v26 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v26;
  uint64_t v27 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v27;
  uint64_t v28 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v28;
  uint64_t v29 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v29;
  uint64_t v30 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v30;
  uint64_t v31 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v31;
  return result;
}

uint64_t CMMsl::KappaSpinResult::KappaSpinResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642C90;
  uint64_t v4 = a1 + 32;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 204) = *(_DWORD *)(a2 + 204);
  *(_DWORD *)(a2 + 204) = 0;
  *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  sub_2572C7560(a1 + 80, (__n128 *)(a2 + 80));
  sub_2572C7560(a1 + 104, (__n128 *)(a2 + 104));
  sub_2572C7560(a1 + 8, (__n128 *)(a2 + 8));
  sub_2572C7560(a1 + 56, (__n128 *)(a2 + 56));
  sub_2572C7560(v4, (__n128 *)(a2 + 32));
  return a1;
}

CMMsl *CMMsl::KappaSpinResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaSpinResult::KappaSpinResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaSpinResult *)v5, v3);
    CMMsl::KappaSpinResult::~KappaSpinResult((CMMsl::KappaSpinResult *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaSpinResult::formatText(CMMsl::KappaSpinResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 102);
  if ((v5 & 0x20) != 0)
  {
    PB::TextFormatter::format(a2, "deltaGravity", *((float *)this + 42));
    __int16 v5 = *((_WORD *)this + 102);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else if ((v5 & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "epochFirstTimestamp");
  __int16 v5 = *((_WORD *)this + 102);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  __int16 v5 = *((_WORD *)this + 102);
  if ((v5 & 0x2000) == 0)
  {
LABEL_5:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(a2, "isSlowRollDetected");
  __int16 v5 = *((_WORD *)this + 102);
  if ((v5 & 0x4000) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(a2, "isSpinDetected");
  __int16 v5 = *((_WORD *)this + 102);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(a2, "maxDeltaAngleLong", *((float *)this + 43));
  __int16 v5 = *((_WORD *)this + 102);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_37:
  PB::TextFormatter::format(a2, "maxDeltaAngleShort", *((float *)this + 44));
  if ((*((_WORD *)this + 102) & 0x100) != 0) {
LABEL_9:
  }
    PB::TextFormatter::format(a2, "slowRollCumCoherentAngle", *((float *)this + 45));
LABEL_10:
  uint64_t v6 = (float *)*((void *)this + 1);
  uint64_t v7 = (float *)*((void *)this + 2);
  while (v6 != v7)
  {
    float v8 = *v6++;
    PB::TextFormatter::format(a2, "slowRollSegmentMaxAxisVariance", v8);
  }
  uint64_t v9 = (float *)*((void *)this + 4);
  uint64_t v10 = (float *)*((void *)this + 5);
  while (v9 != v10)
  {
    float v11 = *v9++;
    PB::TextFormatter::format(a2, "slowRollSegmentMaxFiltRotRate", v11);
  }
  uint64_t v12 = (float *)*((void *)this + 7);
  uint64_t v13 = (float *)*((void *)this + 8);
  while (v12 != v13)
  {
    float v14 = *v12++;
    PB::TextFormatter::format(a2, "slowRollSegmentMinFiltRotRate", v14);
  }
  uint64_t v15 = *((void *)this + 10);
  uint64_t v16 = *((void *)this + 11);
  while (v15 != v16)
  {
    v15 += 8;
    PB::TextFormatter::format(a2, "slowRollSegmentStartTimes");
  }
  uint64_t v17 = *((void *)this + 13);
  uint64_t v18 = *((void *)this + 14);
  while (v17 != v18)
  {
    v17 += 8;
    PB::TextFormatter::format(a2, "slowRollSegmentStopTimes");
  }
  __int16 v19 = *((_WORD *)this + 102);
  if ((v19 & 4) != 0)
  {
    PB::TextFormatter::format(a2, "slowRollStartTime");
    __int16 v19 = *((_WORD *)this + 102);
    if ((v19 & 8) == 0)
    {
LABEL_22:
      if ((v19 & 0x200) == 0) {
        goto LABEL_23;
      }
      goto LABEL_41;
    }
  }
  else if ((v19 & 8) == 0)
  {
    goto LABEL_22;
  }
  PB::TextFormatter::format(a2, "slowRollStopTime");
  __int16 v19 = *((_WORD *)this + 102);
  if ((v19 & 0x200) == 0)
  {
LABEL_23:
    if ((v19 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(a2, "spatialSamplingCount");
  __int16 v19 = *((_WORD *)this + 102);
  if ((v19 & 0x400) == 0)
  {
LABEL_24:
    if ((v19 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(a2, "spinCumulativeRotation", *((float *)this + 47));
  __int16 v19 = *((_WORD *)this + 102);
  if ((v19 & 0x800) == 0)
  {
LABEL_25:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(a2, "spinCumulativeRotationThresholdDegrees", *((float *)this + 48));
  __int16 v19 = *((_WORD *)this + 102);
  if ((v19 & 0x1000) == 0)
  {
LABEL_26:
    if ((v19 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_44:
  PB::TextFormatter::format(a2, "spinGravityAngleThresholdDegrees", *((float *)this + 49));
  if ((*((_WORD *)this + 102) & 0x10) != 0) {
LABEL_27:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_28:
  return MEMORY[0x270F587F0](a2);
}

BOOL CMMsl::KappaSpinResult::readFrom(CMMsl::KappaSpinResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (2)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v14 = 0;
      unsigned int v15 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v16 = v2 + 1;
        char v17 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v16;
        v11 |= (unint64_t)(v17 & 0x7F) << v14;
        if ((v17 & 0x80) == 0) {
          goto LABEL_21;
        }
        v14 += 7;
        unint64_t v2 = v16;
        BOOL v96 = v15++ > 8;
        if (v96) {
          goto LABEL_19;
        }
      }
      int v4 = 1;
      *((unsigned char *)a2 + 24) = 1;
      return v4 == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v96 = v10++ > 8;
      if (v96) {
        goto LABEL_19;
      }
    }
LABEL_21:
    int v18 = v11 & 7;
    if (v18 == 4)
    {
      int v4 = 0;
      return v4 == 0;
    }
    unint64_t v19 = v11 >> 3;
    if ((int)(v11 >> 3) <= 200)
    {
      switch((int)v19)
      {
        case 'e':
          *((_WORD *)this + 102) |= 0x10u;
          unint64_t v20 = *((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
          uint64_t v22 = *(void *)a2;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)a2 + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_363;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v96 = v24++ > 8;
            }
            while (!v96);
LABEL_262:
            uint64_t v25 = 0;
            goto LABEL_363;
          }
          char v174 = 0;
          unsigned int v175 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              uint64_t v25 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v176 = v20 + 1;
              char v177 = *(unsigned char *)(v22 + v20);
              *((void *)a2 + 1) = v176;
              v25 |= (unint64_t)(v177 & 0x7F) << v174;
              if (v177 < 0)
              {
                v174 += 7;
                unint64_t v20 = v176;
                BOOL v96 = v175++ > 8;
                if (v96) {
                  goto LABEL_262;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v25 = 0;
              }
            }
            break;
          }
LABEL_363:
          *((void *)this + 20) = v25;
          goto LABEL_453;
        case 'f':
          *((_WORD *)this + 102) |= 0x4000u;
          unint64_t v37 = *((void *)a2 + 1);
          if (v37 >= *((void *)a2 + 2))
          {
            BOOL v40 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v38 = v37 + 1;
            int v39 = *(unsigned __int8 *)(*(void *)a2 + v37);
            *((void *)a2 + 1) = v38;
            BOOL v40 = v39 != 0;
          }
          *((unsigned char *)this + 201) = v40;
          goto LABEL_453;
        case 'g':
          *((_WORD *)this + 102) |= 0x400u;
          unint64_t v41 = *((void *)a2 + 1);
          if (v41 > 0xFFFFFFFFFFFFFFFBLL || v41 + 4 > *((void *)a2 + 2)) {
            goto LABEL_450;
          }
          *((_DWORD *)this + 47) = *(_DWORD *)(*(void *)a2 + v41);
          goto LABEL_452;
        case 'h':
          *((_WORD *)this + 102) |= 0x2000u;
          unint64_t v42 = *((void *)a2 + 1);
          if (v42 >= *((void *)a2 + 2))
          {
            BOOL v45 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v43 = v42 + 1;
            int v44 = *(unsigned __int8 *)(*(void *)a2 + v42);
            *((void *)a2 + 1) = v43;
            BOOL v45 = v44 != 0;
          }
          *((unsigned char *)this + 200) = v45;
          goto LABEL_453;
        case 'i':
          *((_WORD *)this + 102) |= 4u;
          unint64_t v46 = *((void *)a2 + 1);
          unint64_t v47 = *((void *)a2 + 2);
          uint64_t v48 = *(void *)a2;
          if (v46 <= 0xFFFFFFFFFFFFFFF5 && v46 + 10 <= v47)
          {
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v51 = 0;
            do
            {
              unint64_t v52 = v46 + 1;
              *((void *)a2 + 1) = v46 + 1;
              char v53 = *(unsigned char *)(v48 + v46);
              v51 |= (unint64_t)(v53 & 0x7F) << v49;
              if ((v53 & 0x80) == 0) {
                goto LABEL_369;
              }
              v49 += 7;
              unint64_t v46 = v52;
              BOOL v96 = v50++ > 8;
            }
            while (!v96);
LABEL_280:
            uint64_t v51 = 0;
            goto LABEL_369;
          }
          char v182 = 0;
          unsigned int v183 = 0;
          uint64_t v51 = 0;
          if (v47 <= v46) {
            unint64_t v47 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v47 == v46)
            {
              uint64_t v51 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v184 = v46 + 1;
              char v185 = *(unsigned char *)(v48 + v46);
              *((void *)a2 + 1) = v184;
              v51 |= (unint64_t)(v185 & 0x7F) << v182;
              if (v185 < 0)
              {
                v182 += 7;
                unint64_t v46 = v184;
                BOOL v96 = v183++ > 8;
                if (v96) {
                  goto LABEL_280;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v51 = 0;
              }
            }
            break;
          }
LABEL_369:
          *((void *)this + 18) = v51;
          goto LABEL_453;
        case 'j':
          *((_WORD *)this + 102) |= 8u;
          unint64_t v54 = *((void *)a2 + 1);
          unint64_t v55 = *((void *)a2 + 2);
          uint64_t v56 = *(void *)a2;
          if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
          {
            char v57 = 0;
            unsigned int v58 = 0;
            uint64_t v59 = 0;
            do
            {
              unint64_t v60 = v54 + 1;
              *((void *)a2 + 1) = v54 + 1;
              char v61 = *(unsigned char *)(v56 + v54);
              v59 |= (unint64_t)(v61 & 0x7F) << v57;
              if ((v61 & 0x80) == 0) {
                goto LABEL_372;
              }
              v57 += 7;
              unint64_t v54 = v60;
              BOOL v96 = v58++ > 8;
            }
            while (!v96);
LABEL_287:
            uint64_t v59 = 0;
            goto LABEL_372;
          }
          char v186 = 0;
          unsigned int v187 = 0;
          uint64_t v59 = 0;
          if (v55 <= v54) {
            unint64_t v55 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v55 == v54)
            {
              uint64_t v59 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v188 = v54 + 1;
              char v189 = *(unsigned char *)(v56 + v54);
              *((void *)a2 + 1) = v188;
              v59 |= (unint64_t)(v189 & 0x7F) << v186;
              if (v189 < 0)
              {
                v186 += 7;
                unint64_t v54 = v188;
                BOOL v96 = v187++ > 8;
                if (v96) {
                  goto LABEL_287;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v59 = 0;
              }
            }
            break;
          }
LABEL_372:
          *((void *)this + 19) = v59;
          goto LABEL_453;
        case 'k':
          *((_WORD *)this + 102) |= 0x100u;
          unint64_t v62 = *((void *)a2 + 1);
          if (v62 > 0xFFFFFFFFFFFFFFFBLL || v62 + 4 > *((void *)a2 + 2)) {
            goto LABEL_450;
          }
          *((_DWORD *)this + 45) = *(_DWORD *)(*(void *)a2 + v62);
          goto LABEL_452;
        case 'l':
          *((_WORD *)this + 102) |= 0x80u;
          unint64_t v63 = *((void *)a2 + 1);
          if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)a2 + 2)) {
            goto LABEL_450;
          }
          *((_DWORD *)this + 44) = *(_DWORD *)(*(void *)a2 + v63);
          goto LABEL_452;
        case 'm':
          *((_WORD *)this + 102) |= 0x40u;
          unint64_t v64 = *((void *)a2 + 1);
          if (v64 > 0xFFFFFFFFFFFFFFFBLL || v64 + 4 > *((void *)a2 + 2)) {
            goto LABEL_450;
          }
          *((_DWORD *)this + 43) = *(_DWORD *)(*(void *)a2 + v64);
          goto LABEL_452;
        default:
          if (v19 == 1)
          {
            *((_WORD *)this + 102) |= 0x1000u;
            unint64_t v173 = *((void *)a2 + 1);
            if (v173 <= 0xFFFFFFFFFFFFFFFBLL && v173 + 4 <= *((void *)a2 + 2))
            {
              *((_DWORD *)this + 49) = *(_DWORD *)(*(void *)a2 + v173);
              goto LABEL_452;
            }
          }
          else
          {
            if (v19 != 2)
            {
LABEL_19:
              if ((PB::Reader::skip(a2) & 1) == 0) {
                return 0;
              }
              goto LABEL_453;
            }
            *((_WORD *)this + 102) |= 0x800u;
            unint64_t v36 = *((void *)a2 + 1);
            if (v36 <= 0xFFFFFFFFFFFFFFFBLL && v36 + 4 <= *((void *)a2 + 2))
            {
              *((_DWORD *)this + 48) = *(_DWORD *)(*(void *)a2 + v36);
              goto LABEL_452;
            }
          }
          break;
      }
      goto LABEL_450;
    }
    switch((int)v19)
    {
      case 201:
        *((_WORD *)this + 102) |= 1u;
        unint64_t v28 = *((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        uint64_t v30 = *(void *)a2;
        if (v28 <= 0xFFFFFFFFFFFFFFF5 && v28 + 10 <= v29)
        {
          char v31 = 0;
          unsigned int v32 = 0;
          uint64_t v33 = 0;
          do
          {
            unint64_t v34 = v28 + 1;
            *((void *)a2 + 1) = v28 + 1;
            char v35 = *(unsigned char *)(v30 + v28);
            v33 |= (unint64_t)(v35 & 0x7F) << v31;
            if ((v35 & 0x80) == 0) {
              goto LABEL_366;
            }
            v31 += 7;
            unint64_t v28 = v34;
            BOOL v96 = v32++ > 8;
          }
          while (!v96);
LABEL_269:
          uint64_t v33 = 0;
          goto LABEL_366;
        }
        char v178 = 0;
        unsigned int v179 = 0;
        uint64_t v33 = 0;
        if (v29 <= v28) {
          unint64_t v29 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v29 == v28)
          {
            uint64_t v33 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v180 = v28 + 1;
            char v181 = *(unsigned char *)(v30 + v28);
            *((void *)a2 + 1) = v180;
            v33 |= (unint64_t)(v181 & 0x7F) << v178;
            if (v181 < 0)
            {
              v178 += 7;
              unint64_t v28 = v180;
              BOOL v96 = v179++ > 8;
              if (v96) {
                goto LABEL_269;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v33 = 0;
            }
          }
          break;
        }
LABEL_366:
        *((void *)this + 16) = v33;
        goto LABEL_453;
      case 202:
        *((_WORD *)this + 102) |= 2u;
        unint64_t v65 = *((void *)a2 + 1);
        unint64_t v66 = *((void *)a2 + 2);
        uint64_t v67 = *(void *)a2;
        if (v65 <= 0xFFFFFFFFFFFFFFF5 && v65 + 10 <= v66)
        {
          char v68 = 0;
          unsigned int v69 = 0;
          uint64_t v70 = 0;
          do
          {
            unint64_t v71 = v65 + 1;
            *((void *)a2 + 1) = v65 + 1;
            char v72 = *(unsigned char *)(v67 + v65);
            v70 |= (unint64_t)(v72 & 0x7F) << v68;
            if ((v72 & 0x80) == 0) {
              goto LABEL_375;
            }
            v68 += 7;
            unint64_t v65 = v71;
            BOOL v96 = v69++ > 8;
          }
          while (!v96);
LABEL_294:
          uint64_t v70 = 0;
          goto LABEL_375;
        }
        char v190 = 0;
        unsigned int v191 = 0;
        uint64_t v70 = 0;
        if (v66 <= v65) {
          unint64_t v66 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v66 == v65)
          {
            uint64_t v70 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v192 = v65 + 1;
            char v193 = *(unsigned char *)(v67 + v65);
            *((void *)a2 + 1) = v192;
            v70 |= (unint64_t)(v193 & 0x7F) << v190;
            if (v193 < 0)
            {
              v190 += 7;
              unint64_t v65 = v192;
              BOOL v96 = v191++ > 8;
              if (v96) {
                goto LABEL_294;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              uint64_t v70 = 0;
            }
          }
          break;
        }
LABEL_375:
        *((void *)this + 17) = v70;
        goto LABEL_453;
      case 203:
        *((_WORD *)this + 102) |= 0x200u;
        unint64_t v73 = *((void *)a2 + 1);
        unint64_t v74 = *((void *)a2 + 2);
        uint64_t v75 = *(void *)a2;
        if (v73 <= 0xFFFFFFFFFFFFFFF5 && v73 + 10 <= v74)
        {
          char v76 = 0;
          unsigned int v77 = 0;
          uint64_t v78 = 0;
          do
          {
            unint64_t v79 = v73 + 1;
            *((void *)a2 + 1) = v73 + 1;
            char v80 = *(unsigned char *)(v75 + v73);
            v78 |= (unint64_t)(v80 & 0x7F) << v76;
            if ((v80 & 0x80) == 0) {
              goto LABEL_378;
            }
            v76 += 7;
            unint64_t v73 = v79;
            BOOL v96 = v77++ > 8;
          }
          while (!v96);
LABEL_301:
          LODWORD(v78) = 0;
          goto LABEL_378;
        }
        char v194 = 0;
        unsigned int v195 = 0;
        uint64_t v78 = 0;
        if (v74 <= v73) {
          unint64_t v74 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v74 == v73)
          {
            LODWORD(v78) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v196 = v73 + 1;
            char v197 = *(unsigned char *)(v75 + v73);
            *((void *)a2 + 1) = v196;
            v78 |= (unint64_t)(v197 & 0x7F) << v194;
            if (v197 < 0)
            {
              v194 += 7;
              unint64_t v73 = v196;
              BOOL v96 = v195++ > 8;
              if (v96) {
                goto LABEL_301;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v78) = 0;
            }
          }
          break;
        }
LABEL_378:
        *((_DWORD *)this + 46) = v78;
        goto LABEL_453;
      case 204:
        *((_WORD *)this + 102) |= 0x20u;
        unint64_t v81 = *((void *)a2 + 1);
        if (v81 > 0xFFFFFFFFFFFFFFFBLL || v81 + 4 > *((void *)a2 + 2)) {
          goto LABEL_450;
        }
        *((_DWORD *)this + 42) = *(_DWORD *)(*(void *)a2 + v81);
        goto LABEL_452;
      case 205:
        if (v18 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          if (*((void *)a2 + 1) < *((void *)a2 + 2) && !*((unsigned char *)a2 + 24))
          {
            uint64_t v82 = (char *)*((void *)this + 11);
            do
            {
              unint64_t v83 = *((void *)this + 12);
              if ((unint64_t)v82 >= v83)
              {
                uint64_t v84 = (char *)*((void *)this + 10);
                uint64_t v85 = (v82 - v84) >> 3;
                unint64_t v86 = v85 + 1;
                if ((unint64_t)(v85 + 1) >> 61) {
                  goto LABEL_463;
                }
                uint64_t v87 = v83 - (void)v84;
                if (v87 >> 2 > v86) {
                  unint64_t v86 = v87 >> 2;
                }
                if ((unint64_t)v87 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v88 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v88 = v86;
                }
                if (v88)
                {
                  unint64_t v88 = (unint64_t)sub_2572C7528(v88);
                  uint64_t v84 = (char *)*((void *)this + 10);
                  uint64_t v82 = (char *)*((void *)this + 11);
                }
                else
                {
                  uint64_t v89 = 0;
                }
                uint64_t v90 = (void *)(v88 + 8 * v85);
                *uint64_t v90 = 0;
                uint64_t v91 = (char *)(v90 + 1);
                while (v82 != v84)
                {
                  uint64_t v92 = *((void *)v82 - 1);
                  v82 -= 8;
                  *--uint64_t v90 = v92;
                }
                *((void *)this + 10) = v90;
                *((void *)this + 11) = v91;
                *((void *)this + 12) = v88 + 8 * v89;
                if (v84) {
                  operator delete(v84);
                }
                uint64_t v82 = v91;
              }
              else
              {
                *(void *)uint64_t v82 = 0;
                v82 += 8;
              }
              *((void *)this + 11) = v82;
              unint64_t v94 = *((void *)a2 + 1);
              unint64_t v93 = *((void *)a2 + 2);
              uint64_t v95 = *(void *)a2;
              BOOL v96 = v94 > 0xFFFFFFFFFFFFFFF5 || v94 + 10 > v93;
              if (v96)
              {
                char v97 = 0;
                unsigned int v98 = 0;
                uint64_t v104 = 0;
                if (v93 <= v94) {
                  uint64_t v99 = *((void *)a2 + 1);
                }
                else {
                  uint64_t v99 = *((void *)a2 + 2);
                }
                while (1)
                {
                  if (v99 == v94) {
                    goto LABEL_313;
                  }
                  unint64_t v100 = v94++;
                  char v101 = *(unsigned char *)(v95 + v100);
                  *((void *)a2 + 1) = v94;
                  v104 |= (unint64_t)(v101 & 0x7F) << v97;
                  if ((v101 & 0x80) == 0) {
                    break;
                  }
                  v97 += 7;
                  BOOL v96 = v98++ > 8;
                  if (v96)
                  {
                    uint64_t v104 = 0;
                    goto LABEL_132;
                  }
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v104 = 0;
                }
LABEL_132:
                unint64_t v105 = v100 + 1;
              }
              else
              {
                char v102 = 0;
                unsigned int v103 = 0;
                uint64_t v104 = 0;
                while (1)
                {
                  unint64_t v105 = v94 + 1;
                  *((void *)a2 + 1) = v94 + 1;
                  char v106 = *(unsigned char *)(v95 + v94);
                  v104 |= (unint64_t)(v106 & 0x7F) << v102;
                  if ((v106 & 0x80) == 0) {
                    break;
                  }
                  v102 += 7;
                  unint64_t v94 = v105;
                  BOOL v96 = v103++ > 8;
                  if (v96)
                  {
                    uint64_t v104 = 0;
                    break;
                  }
                }
              }
              *((void *)v82 - 1) = v104;
            }
            while (v105 < v93 && !*((unsigned char *)a2 + 24));
          }
          goto LABEL_314;
        }
        unint64_t v199 = (char *)*((void *)this + 11);
        unint64_t v198 = *((void *)this + 12);
        if ((unint64_t)v199 >= v198)
        {
          unint64_t v210 = (char *)*((void *)this + 10);
          uint64_t v211 = (v199 - v210) >> 3;
          unint64_t v212 = v211 + 1;
          if ((unint64_t)(v211 + 1) >> 61) {
            goto LABEL_463;
          }
          uint64_t v213 = v198 - (void)v210;
          if (v213 >> 2 > v212) {
            unint64_t v212 = v213 >> 2;
          }
          if ((unint64_t)v213 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v214 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v214 = v212;
          }
          if (v214)
          {
            unint64_t v214 = (unint64_t)sub_2572C7528(v214);
            unint64_t v210 = (char *)*((void *)this + 10);
            unint64_t v199 = (char *)*((void *)this + 11);
          }
          else
          {
            uint64_t v215 = 0;
          }
          char v240 = (void *)(v214 + 8 * v211);
          *char v240 = 0;
          char v200 = v240 + 1;
          while (v199 != v210)
          {
            uint64_t v241 = *((void *)v199 - 1);
            v199 -= 8;
            *--char v240 = v241;
          }
          *((void *)this + 10) = v240;
          *((void *)this + 11) = v200;
          *((void *)this + 12) = v214 + 8 * v215;
          if (v210) {
            operator delete(v210);
          }
        }
        else
        {
          *(void *)unint64_t v199 = 0;
          char v200 = v199 + 8;
        }
        *((void *)this + 11) = v200;
        unint64_t v242 = *((void *)a2 + 1);
        unint64_t v243 = *((void *)a2 + 2);
        uint64_t v244 = *(void *)a2;
        char v245 = 0;
        unsigned int v246 = 0;
        if (v242 <= 0xFFFFFFFFFFFFFFF5 && v242 + 10 <= v243)
        {
          uint64_t v250 = 0;
          while (1)
          {
            unint64_t v251 = v242 + 1;
            *((void *)a2 + 1) = v242 + 1;
            char v252 = *(unsigned char *)(v244 + v242);
            v250 |= (unint64_t)(v252 & 0x7F) << v245;
            if ((v252 & 0x80) == 0) {
              goto LABEL_426;
            }
            v245 += 7;
            unint64_t v242 = v251;
            BOOL v96 = v246++ > 8;
            if (v96) {
              goto LABEL_422;
            }
          }
        }
        uint64_t v250 = 0;
        if (v243 <= v242) {
          unint64_t v243 = *((void *)a2 + 1);
        }
        while (v243 != v242)
        {
          unint64_t v248 = v242 + 1;
          char v249 = *(unsigned char *)(v244 + v242);
          *((void *)a2 + 1) = v248;
          v250 |= (unint64_t)(v249 & 0x7F) << v245;
          if ((v249 & 0x80) == 0) {
            goto LABEL_424;
          }
          v245 += 7;
          unint64_t v242 = v248;
          BOOL v96 = v246++ > 8;
          if (v96) {
            goto LABEL_422;
          }
        }
        goto LABEL_423;
      case 206:
        if (v18 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          if (*((void *)a2 + 1) < *((void *)a2 + 2) && !*((unsigned char *)a2 + 24))
          {
            uint64_t v82 = (char *)*((void *)this + 14);
            do
            {
              unint64_t v107 = *((void *)this + 15);
              if ((unint64_t)v82 >= v107)
              {
                uint64_t v108 = (char *)*((void *)this + 13);
                uint64_t v109 = (v82 - v108) >> 3;
                unint64_t v110 = v109 + 1;
                if ((unint64_t)(v109 + 1) >> 61) {
                  goto LABEL_463;
                }
                uint64_t v111 = v107 - (void)v108;
                if (v111 >> 2 > v110) {
                  unint64_t v110 = v111 >> 2;
                }
                if ((unint64_t)v111 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v112 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v112 = v110;
                }
                if (v112)
                {
                  unint64_t v112 = (unint64_t)sub_2572C7528(v112);
                  uint64_t v108 = (char *)*((void *)this + 13);
                  uint64_t v82 = (char *)*((void *)this + 14);
                }
                else
                {
                  uint64_t v113 = 0;
                }
                uint64_t v114 = (void *)(v112 + 8 * v109);
                *uint64_t v114 = 0;
                uint64_t v115 = (char *)(v114 + 1);
                while (v82 != v108)
                {
                  uint64_t v116 = *((void *)v82 - 1);
                  v82 -= 8;
                  *--uint64_t v114 = v116;
                }
                *((void *)this + 13) = v114;
                *((void *)this + 14) = v115;
                *((void *)this + 15) = v112 + 8 * v113;
                if (v108) {
                  operator delete(v108);
                }
                uint64_t v82 = v115;
              }
              else
              {
                *(void *)uint64_t v82 = 0;
                v82 += 8;
              }
              *((void *)this + 14) = v82;
              unint64_t v118 = *((void *)a2 + 1);
              unint64_t v117 = *((void *)a2 + 2);
              uint64_t v119 = *(void *)a2;
              if (v118 <= 0xFFFFFFFFFFFFFFF5 && v118 + 10 <= v117)
              {
                char v126 = 0;
                unsigned int v127 = 0;
                uint64_t v128 = 0;
                while (1)
                {
                  unint64_t v129 = v118 + 1;
                  *((void *)a2 + 1) = v118 + 1;
                  char v130 = *(unsigned char *)(v119 + v118);
                  v128 |= (unint64_t)(v130 & 0x7F) << v126;
                  if ((v130 & 0x80) == 0) {
                    goto LABEL_178;
                  }
                  v126 += 7;
                  unint64_t v118 = v129;
                  BOOL v96 = v127++ > 8;
                  if (v96)
                  {
                    uint64_t v128 = 0;
                    goto LABEL_178;
                  }
                }
              }
              char v121 = 0;
              unsigned int v122 = 0;
              uint64_t v128 = 0;
              if (v117 <= v118) {
                uint64_t v123 = *((void *)a2 + 1);
              }
              else {
                uint64_t v123 = *((void *)a2 + 2);
              }
              while (1)
              {
                if (v123 == v118)
                {
LABEL_313:
                  *((unsigned char *)a2 + 24) = 1;
                  *((void *)v82 - 1) = 0;
                  goto LABEL_314;
                }
                unint64_t v124 = v118++;
                char v125 = *(unsigned char *)(v119 + v124);
                *((void *)a2 + 1) = v118;
                v128 |= (unint64_t)(v125 & 0x7F) << v121;
                if ((v125 & 0x80) == 0) {
                  break;
                }
                v121 += 7;
                BOOL v96 = v122++ > 8;
                if (v96)
                {
                  uint64_t v128 = 0;
                  goto LABEL_177;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v128 = 0;
              }
LABEL_177:
              unint64_t v129 = v124 + 1;
LABEL_178:
              *((void *)v82 - 1) = v128;
            }
            while (v129 < v117 && !*((unsigned char *)a2 + 24));
          }
          goto LABEL_314;
        }
        unint64_t v202 = (char *)*((void *)this + 14);
        unint64_t v201 = *((void *)this + 15);
        if ((unint64_t)v202 >= v201)
        {
          char v216 = (char *)*((void *)this + 13);
          uint64_t v217 = (v202 - v216) >> 3;
          unint64_t v218 = v217 + 1;
          if ((unint64_t)(v217 + 1) >> 61) {
LABEL_463:
          }
            sub_2570AFD0C();
          uint64_t v219 = v201 - (void)v216;
          if (v219 >> 2 > v218) {
            unint64_t v218 = v219 >> 2;
          }
          if ((unint64_t)v219 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v220 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v220 = v218;
          }
          if (v220)
          {
            unint64_t v220 = (unint64_t)sub_2572C7528(v220);
            char v216 = (char *)*((void *)this + 13);
            unint64_t v202 = (char *)*((void *)this + 14);
          }
          else
          {
            uint64_t v221 = 0;
          }
          unint64_t v253 = (void *)(v220 + 8 * v217);
          *unint64_t v253 = 0;
          char v200 = v253 + 1;
          while (v202 != v216)
          {
            uint64_t v254 = *((void *)v202 - 1);
            v202 -= 8;
            *--unint64_t v253 = v254;
          }
          *((void *)this + 13) = v253;
          *((void *)this + 14) = v200;
          *((void *)this + 15) = v220 + 8 * v221;
          if (v216) {
            operator delete(v216);
          }
        }
        else
        {
          *(void *)unint64_t v202 = 0;
          char v200 = v202 + 8;
        }
        *((void *)this + 14) = v200;
        unint64_t v255 = *((void *)a2 + 1);
        unint64_t v256 = *((void *)a2 + 2);
        uint64_t v257 = *(void *)a2;
        char v258 = 0;
        unsigned int v259 = 0;
        if (v255 > 0xFFFFFFFFFFFFFFF5 || v255 + 10 > v256)
        {
          uint64_t v250 = 0;
          if (v256 <= v255) {
            unint64_t v256 = *((void *)a2 + 1);
          }
          while (v256 != v255)
          {
            unint64_t v261 = v255 + 1;
            char v262 = *(unsigned char *)(v257 + v255);
            *((void *)a2 + 1) = v261;
            v250 |= (unint64_t)(v262 & 0x7F) << v258;
            if ((v262 & 0x80) == 0)
            {
LABEL_424:
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v250 = 0;
              }
              goto LABEL_426;
            }
            v258 += 7;
            unint64_t v255 = v261;
            BOOL v96 = v259++ > 8;
            if (v96)
            {
LABEL_422:
              uint64_t v250 = 0;
              goto LABEL_426;
            }
          }
LABEL_423:
          uint64_t v250 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          uint64_t v250 = 0;
          while (1)
          {
            unint64_t v263 = v255 + 1;
            *((void *)a2 + 1) = v255 + 1;
            char v264 = *(unsigned char *)(v257 + v255);
            v250 |= (unint64_t)(v264 & 0x7F) << v258;
            if ((v264 & 0x80) == 0) {
              break;
            }
            v258 += 7;
            unint64_t v255 = v263;
            BOOL v96 = v259++ > 8;
            if (v96) {
              goto LABEL_422;
            }
          }
        }
LABEL_426:
        *(v200 - 1) = v250;
        goto LABEL_453;
      case 207:
        if (v18 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v131 = *((void *)a2 + 1);
          unint64_t v132 = *((void *)a2 + 2);
          while (v131 < v132 && !*((unsigned char *)a2 + 24))
          {
            uint64_t v134 = (char *)*((void *)this + 2);
            unint64_t v133 = *((void *)this + 3);
            if ((unint64_t)v134 >= v133)
            {
              uint64_t v136 = (char *)*((void *)this + 1);
              uint64_t v137 = (v134 - v136) >> 2;
              unint64_t v138 = v137 + 1;
              if ((unint64_t)(v137 + 1) >> 62) {
                goto LABEL_462;
              }
              uint64_t v139 = v133 - (void)v136;
              if (v139 >> 1 > v138) {
                unint64_t v138 = v139 >> 1;
              }
              if ((unint64_t)v139 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v140 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v140 = v138;
              }
              if (v140)
              {
                unint64_t v140 = (unint64_t)sub_2572C76F0(v140);
                uint64_t v136 = (char *)*((void *)this + 1);
                uint64_t v134 = (char *)*((void *)this + 2);
              }
              else
              {
                uint64_t v141 = 0;
              }
              uint64_t v142 = (_DWORD *)(v140 + 4 * v137);
              *uint64_t v142 = 0;
              uint64_t v135 = v142 + 1;
              while (v134 != v136)
              {
                int v143 = *((_DWORD *)v134 - 1);
                v134 -= 4;
                *--uint64_t v142 = v143;
              }
              *((void *)this + 1) = v142;
              *((void *)this + 2) = v135;
              *((void *)this + 3) = v140 + 4 * v141;
              if (v136) {
                operator delete(v136);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v134 = 0;
              uint64_t v135 = v134 + 4;
            }
            *((void *)this + 2) = v135;
            unint64_t v144 = *((void *)a2 + 1);
            if (v144 > 0xFFFFFFFFFFFFFFFBLL || v144 + 4 > *((void *)a2 + 2)) {
              goto LABEL_312;
            }
            *(v135 - 1) = *(_DWORD *)(*(void *)a2 + v144);
            unint64_t v132 = *((void *)a2 + 2);
            unint64_t v131 = *((void *)a2 + 1) + 4;
            *((void *)a2 + 1) = v131;
          }
          goto LABEL_314;
        }
        char v204 = (char *)*((void *)this + 2);
        unint64_t v203 = *((void *)this + 3);
        if ((unint64_t)v204 >= v203)
        {
          unint64_t v222 = (char *)*((void *)this + 1);
          uint64_t v223 = (v204 - v222) >> 2;
          unint64_t v224 = v223 + 1;
          if ((unint64_t)(v223 + 1) >> 62) {
            goto LABEL_462;
          }
          uint64_t v225 = v203 - (void)v222;
          if (v225 >> 1 > v224) {
            unint64_t v224 = v225 >> 1;
          }
          if ((unint64_t)v225 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v226 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v226 = v224;
          }
          if (v226)
          {
            unint64_t v226 = (unint64_t)sub_2572C76F0(v226);
            unint64_t v222 = (char *)*((void *)this + 1);
            char v204 = (char *)*((void *)this + 2);
          }
          else
          {
            uint64_t v227 = 0;
          }
          unint64_t v265 = (_DWORD *)(v226 + 4 * v223);
          *unint64_t v265 = 0;
          unsigned int v205 = v265 + 1;
          while (v204 != v222)
          {
            int v266 = *((_DWORD *)v204 - 1);
            v204 -= 4;
            *--unint64_t v265 = v266;
          }
          *((void *)this + 1) = v265;
          *((void *)this + 2) = v205;
          *((void *)this + 3) = v226 + 4 * v227;
          if (v222) {
            operator delete(v222);
          }
        }
        else
        {
          *(_DWORD *)char v204 = 0;
          unsigned int v205 = v204 + 4;
        }
        *((void *)this + 2) = v205;
        goto LABEL_448;
      case 208:
        if (v18 == 2)
        {
          if (PB::Reader::placeMark()) {
            return 0;
          }
          unint64_t v145 = *((void *)a2 + 1);
          unint64_t v146 = *((void *)a2 + 2);
          while (v145 < v146 && !*((unsigned char *)a2 + 24))
          {
            uint64_t v148 = (char *)*((void *)this + 8);
            unint64_t v147 = *((void *)this + 9);
            if ((unint64_t)v148 >= v147)
            {
              uint64_t v150 = (char *)*((void *)this + 7);
              uint64_t v151 = (v148 - v150) >> 2;
              unint64_t v152 = v151 + 1;
              if ((unint64_t)(v151 + 1) >> 62) {
                goto LABEL_462;
              }
              uint64_t v153 = v147 - (void)v150;
              if (v153 >> 1 > v152) {
                unint64_t v152 = v153 >> 1;
              }
              if ((unint64_t)v153 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v154 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v154 = v152;
              }
              if (v154)
              {
                unint64_t v154 = (unint64_t)sub_2572C76F0(v154);
                uint64_t v150 = (char *)*((void *)this + 7);
                uint64_t v148 = (char *)*((void *)this + 8);
              }
              else
              {
                uint64_t v155 = 0;
              }
              char v156 = (_DWORD *)(v154 + 4 * v151);
              *char v156 = 0;
              uint64_t v149 = v156 + 1;
              while (v148 != v150)
              {
                int v157 = *((_DWORD *)v148 - 1);
                v148 -= 4;
                *--char v156 = v157;
              }
              *((void *)this + 7) = v156;
              *((void *)this + 8) = v149;
              *((void *)this + 9) = v154 + 4 * v155;
              if (v150) {
                operator delete(v150);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v148 = 0;
              uint64_t v149 = v148 + 4;
            }
            *((void *)this + 8) = v149;
            unint64_t v158 = *((void *)a2 + 1);
            if (v158 > 0xFFFFFFFFFFFFFFFBLL || v158 + 4 > *((void *)a2 + 2)) {
              goto LABEL_312;
            }
            *(v149 - 1) = *(_DWORD *)(*(void *)a2 + v158);
            unint64_t v146 = *((void *)a2 + 2);
            unint64_t v145 = *((void *)a2 + 1) + 4;
            *((void *)a2 + 1) = v145;
          }
          goto LABEL_314;
        }
        unint64_t v207 = (char *)*((void *)this + 8);
        unint64_t v206 = *((void *)this + 9);
        if ((unint64_t)v207 >= v206)
        {
          char v228 = (char *)*((void *)this + 7);
          uint64_t v229 = (v207 - v228) >> 2;
          unint64_t v230 = v229 + 1;
          if ((unint64_t)(v229 + 1) >> 62) {
            goto LABEL_462;
          }
          uint64_t v231 = v206 - (void)v228;
          if (v231 >> 1 > v230) {
            unint64_t v230 = v231 >> 1;
          }
          if ((unint64_t)v231 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v232 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v232 = v230;
          }
          if (v232)
          {
            unint64_t v232 = (unint64_t)sub_2572C76F0(v232);
            char v228 = (char *)*((void *)this + 7);
            unint64_t v207 = (char *)*((void *)this + 8);
          }
          else
          {
            uint64_t v233 = 0;
          }
          int v267 = (_DWORD *)(v232 + 4 * v229);
          *int v267 = 0;
          unsigned int v205 = v267 + 1;
          while (v207 != v228)
          {
            int v268 = *((_DWORD *)v207 - 1);
            v207 -= 4;
            *--int v267 = v268;
          }
          *((void *)this + 7) = v267;
          *((void *)this + 8) = v205;
          *((void *)this + 9) = v232 + 4 * v233;
          if (v228) {
            operator delete(v228);
          }
        }
        else
        {
          *(_DWORD *)unint64_t v207 = 0;
          unsigned int v205 = v207 + 4;
        }
        *((void *)this + 8) = v205;
        goto LABEL_448;
      case 209:
        if (v18 != 2)
        {
          unint64_t v209 = (char *)*((void *)this + 5);
          unint64_t v208 = *((void *)this + 6);
          if ((unint64_t)v209 >= v208)
          {
            unint64_t v234 = (char *)*((void *)this + 4);
            uint64_t v235 = (v209 - v234) >> 2;
            unint64_t v236 = v235 + 1;
            if ((unint64_t)(v235 + 1) >> 62) {
LABEL_462:
            }
              sub_2570AFD0C();
            uint64_t v237 = v208 - (void)v234;
            if (v237 >> 1 > v236) {
              unint64_t v236 = v237 >> 1;
            }
            if ((unint64_t)v237 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v238 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v238 = v236;
            }
            if (v238)
            {
              unint64_t v238 = (unint64_t)sub_2572C76F0(v238);
              unint64_t v234 = (char *)*((void *)this + 4);
              unint64_t v209 = (char *)*((void *)this + 5);
            }
            else
            {
              uint64_t v239 = 0;
            }
            unint64_t v269 = (_DWORD *)(v238 + 4 * v235);
            *unint64_t v269 = 0;
            unsigned int v205 = v269 + 1;
            while (v209 != v234)
            {
              int v270 = *((_DWORD *)v209 - 1);
              v209 -= 4;
              *--unint64_t v269 = v270;
            }
            *((void *)this + 4) = v269;
            *((void *)this + 5) = v205;
            *((void *)this + 6) = v238 + 4 * v239;
            if (v234) {
              operator delete(v234);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v209 = 0;
            unsigned int v205 = v209 + 4;
          }
          *((void *)this + 5) = v205;
LABEL_448:
          unint64_t v271 = *((void *)a2 + 1);
          if (v271 <= 0xFFFFFFFFFFFFFFFBLL && v271 + 4 <= *((void *)a2 + 2))
          {
            *(v205 - 1) = *(_DWORD *)(*(void *)a2 + v271);
LABEL_452:
            *((void *)a2 + 1) += 4;
            goto LABEL_453;
          }
LABEL_450:
          *((unsigned char *)a2 + 24) = 1;
LABEL_453:
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          int v4 = *((unsigned __int8 *)a2 + 24);
          if (v2 >= v3 || v4 != 0) {
            return v4 == 0;
          }
          continue;
        }
        if ((PB::Reader::placeMark() & 1) == 0)
        {
          unint64_t v159 = *((void *)a2 + 1);
          unint64_t v160 = *((void *)a2 + 2);
          while (v159 < v160 && !*((unsigned char *)a2 + 24))
          {
            uint64_t v162 = (char *)*((void *)this + 5);
            unint64_t v161 = *((void *)this + 6);
            if ((unint64_t)v162 >= v161)
            {
              unsigned int v164 = (char *)*((void *)this + 4);
              uint64_t v165 = (v162 - v164) >> 2;
              unint64_t v166 = v165 + 1;
              if ((unint64_t)(v165 + 1) >> 62) {
                goto LABEL_462;
              }
              uint64_t v167 = v161 - (void)v164;
              if (v167 >> 1 > v166) {
                unint64_t v166 = v167 >> 1;
              }
              if ((unint64_t)v167 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v168 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v168 = v166;
              }
              if (v168)
              {
                unint64_t v168 = (unint64_t)sub_2572C76F0(v168);
                unsigned int v164 = (char *)*((void *)this + 4);
                uint64_t v162 = (char *)*((void *)this + 5);
              }
              else
              {
                uint64_t v169 = 0;
              }
              uint64_t v170 = (_DWORD *)(v168 + 4 * v165);
              *uint64_t v170 = 0;
              char v163 = v170 + 1;
              while (v162 != v164)
              {
                int v171 = *((_DWORD *)v162 - 1);
                v162 -= 4;
                *--uint64_t v170 = v171;
              }
              *((void *)this + 4) = v170;
              *((void *)this + 5) = v163;
              *((void *)this + 6) = v168 + 4 * v169;
              if (v164) {
                operator delete(v164);
              }
            }
            else
            {
              *(_DWORD *)uint64_t v162 = 0;
              char v163 = v162 + 4;
            }
            *((void *)this + 5) = v163;
            unint64_t v172 = *((void *)a2 + 1);
            if (v172 > 0xFFFFFFFFFFFFFFFBLL || v172 + 4 > *((void *)a2 + 2))
            {
LABEL_312:
              *((unsigned char *)a2 + 24) = 1;
              break;
            }
            *(v163 - 1) = *(_DWORD *)(*(void *)a2 + v172);
            unint64_t v160 = *((void *)a2 + 2);
            unint64_t v159 = *((void *)a2 + 1) + 4;
            *((void *)a2 + 1) = v159;
          }
LABEL_314:
          PB::Reader::recallMark();
          goto LABEL_453;
        }
        return 0;
      default:
        goto LABEL_19;
    }
  }
}

uint64_t CMMsl::KappaSpinResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 204);
  if ((v4 & 0x1000) != 0)
  {
    this = PB::Writer::write(a2, *(float *)(this + 196));
    __int16 v4 = *(_WORD *)(v3 + 204);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_35;
    }
  }
  else if ((*(_WORD *)(this + 204) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 192));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x4000) == 0)
  {
LABEL_5:
    if ((v4 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x400) == 0)
  {
LABEL_6:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = PB::Writer::write(a2, *(float *)(v3 + 188));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x2000) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = PB::Writer::write(a2, *(float *)(v3 + 180));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x80) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = PB::Writer::write(a2, *(float *)(v3 + 176));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x40) == 0)
  {
LABEL_12:
    if ((v4 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = PB::Writer::write(a2, *(float *)(v3 + 172));
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 1) == 0)
  {
LABEL_13:
    if ((v4 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 2) == 0)
  {
LABEL_14:
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_46:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_WORD *)(v3 + 204) & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_45:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 204);
  if ((v4 & 0x200) != 0) {
    goto LABEL_46;
  }
LABEL_15:
  if ((v4 & 0x20) != 0) {
LABEL_16:
  }
    this = PB::Writer::write(a2, *(float *)(v3 + 168));
LABEL_17:
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v3 + 88);
  while (v5 != v6)
  {
    v5 += 8;
    this = PB::Writer::writeVarInt(a2);
  }
  uint64_t v7 = *(void *)(v3 + 104);
  uint64_t v8 = *(void *)(v3 + 112);
  while (v7 != v8)
  {
    v7 += 8;
    this = PB::Writer::writeVarInt(a2);
  }
  char v9 = *(float **)(v3 + 8);
  unsigned int v10 = *(float **)(v3 + 16);
  while (v9 != v10)
  {
    float v11 = *v9++;
    this = PB::Writer::write(a2, v11);
  }
  unint64_t v12 = *(float **)(v3 + 56);
  char v13 = *(float **)(v3 + 64);
  while (v12 != v13)
  {
    float v14 = *v12++;
    this = PB::Writer::write(a2, v14);
  }
  unint64_t v16 = *(float **)(v3 + 32);
  unsigned int v15 = *(float **)(v3 + 40);
  while (v16 != v15)
  {
    float v17 = *v16++;
    this = PB::Writer::write(a2, v17);
  }
  return this;
}

uint64_t CMMsl::KappaSpinResult::hash_value(CMMsl::KappaSpinResult *this)
{
  __int16 v2 = *((_WORD *)this + 102);
  if ((v2 & 0x1000) == 0)
  {
    uint64_t v3 = 0;
    if ((*((_WORD *)this + 102) & 0x800) != 0) {
      goto LABEL_3;
    }
LABEL_32:
    uint64_t v5 = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
  float v24 = *((float *)this + 49);
  uint64_t v3 = LODWORD(v24);
  if (v24 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((_WORD *)this + 102) & 0x800) == 0) {
    goto LABEL_32;
  }
LABEL_3:
  float v4 = *((float *)this + 48);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  if ((v2 & 0x10) != 0)
  {
LABEL_6:
    uint64_t v6 = *((void *)this + 20);
    if ((*((_WORD *)this + 102) & 0x4000) != 0) {
      goto LABEL_7;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v6 = 0;
  if ((*((_WORD *)this + 102) & 0x4000) != 0)
  {
LABEL_7:
    uint64_t v7 = *((unsigned __int8 *)this + 201);
    if ((*((_WORD *)this + 102) & 0x400) != 0) {
      goto LABEL_8;
    }
LABEL_35:
    uint64_t v9 = 0;
    if ((*((_WORD *)this + 102) & 0x2000) != 0) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_34:
  uint64_t v7 = 0;
  if ((*((_WORD *)this + 102) & 0x400) == 0) {
    goto LABEL_35;
  }
LABEL_8:
  float v8 = *((float *)this + 47);
  uint64_t v9 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v9 = 0;
  }
  if ((*((_WORD *)this + 102) & 0x2000) != 0)
  {
LABEL_11:
    uint64_t v10 = *((unsigned __int8 *)this + 200);
    if ((v2 & 4) != 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v10 = 0;
  if ((v2 & 4) != 0)
  {
LABEL_12:
    uint64_t v11 = *((void *)this + 18);
    if ((v2 & 8) != 0) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v11 = 0;
  if ((v2 & 8) != 0)
  {
LABEL_13:
    uint64_t v12 = *((void *)this + 19);
    if ((*((_WORD *)this + 102) & 0x100) != 0) {
      goto LABEL_14;
    }
LABEL_39:
    uint64_t v14 = 0;
    if ((v2 & 0x80) != 0) {
      goto LABEL_17;
    }
LABEL_40:
    uint64_t v16 = 0;
    if ((v2 & 0x40) != 0) {
      goto LABEL_20;
    }
LABEL_41:
    uint64_t v18 = 0;
    if (v2) {
      goto LABEL_23;
    }
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v12 = 0;
  if ((*((_WORD *)this + 102) & 0x100) == 0) {
    goto LABEL_39;
  }
LABEL_14:
  float v13 = *((float *)this + 45);
  uint64_t v14 = LODWORD(v13);
  if (v13 == 0.0) {
    uint64_t v14 = 0;
  }
  if ((v2 & 0x80) == 0) {
    goto LABEL_40;
  }
LABEL_17:
  float v15 = *((float *)this + 44);
  uint64_t v16 = LODWORD(v15);
  if (v15 == 0.0) {
    uint64_t v16 = 0;
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_41;
  }
LABEL_20:
  float v17 = *((float *)this + 43);
  uint64_t v18 = LODWORD(v17);
  if (v17 == 0.0) {
    uint64_t v18 = 0;
  }
  if (v2)
  {
LABEL_23:
    uint64_t v19 = *((void *)this + 16);
    if ((v2 & 2) != 0) {
      goto LABEL_24;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v19 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_24:
    uint64_t v20 = *((void *)this + 17);
    if ((v2 & 0x200) != 0) {
      goto LABEL_25;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v20 = 0;
  if ((v2 & 0x200) != 0)
  {
LABEL_25:
    uint64_t v21 = *((int *)this + 46);
    if ((v2 & 0x20) != 0) {
      goto LABEL_26;
    }
LABEL_45:
    uint64_t v23 = 0;
    goto LABEL_46;
  }
LABEL_44:
  uint64_t v21 = 0;
  if ((v2 & 0x20) == 0) {
    goto LABEL_45;
  }
LABEL_26:
  float v22 = *((float *)this + 42);
  uint64_t v23 = LODWORD(v22);
  if (v22 == 0.0) {
    uint64_t v23 = 0;
  }
LABEL_46:
  uint64_t v25 = v5 ^ v3 ^ v6 ^ v7 ^ v9 ^ v10 ^ v11 ^ v12 ^ v14 ^ v16 ^ v18 ^ v19 ^ v20 ^ v21 ^ v23 ^ PBHashBytes();
  uint64_t v26 = PBHashBytes();
  uint64_t v27 = v25 ^ v26 ^ PBHashBytes();
  uint64_t v28 = PBHashBytes();
  return v27 ^ v28 ^ PBHashBytes();
}

void CMMsl::KappaSteps::~KappaSteps(CMMsl::KappaSteps *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaSteps::KappaSteps(uint64_t this, const CMMsl::KappaSteps *a2)
{
  *(void *)this = &unk_270642CC8;
  *(_DWORD *)(this + 32) = 0;
  char v2 = *((unsigned char *)a2 + 32);
  if (v2)
  {
    uint64_t v4 = *((void *)a2 + 1);
    char v3 = 1;
    *(unsigned char *)(this + 32) = 1;
    *(void *)(this + 8) = v4;
    char v2 = *((unsigned char *)a2 + 32);
    if ((v2 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 32) & 0x10) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 7);
    v3 |= 0x10u;
    *(unsigned char *)(this + 32) = v3;
    *(_DWORD *)(this + 28) = v5;
    char v2 = *((unsigned char *)a2 + 32);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *((_DWORD *)a2 + 5);
    v3 |= 4u;
    *(unsigned char *)(this + 32) = v3;
    *(_DWORD *)(this + 20) = v6;
    char v2 = *((unsigned char *)a2 + 32);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 8) == 0) {
        return this;
      }
LABEL_12:
      int v8 = *((_DWORD *)a2 + 6);
      *(unsigned char *)(this + 32) = v3 | 8;
      *(_DWORD *)(this + 24) = v8;
      return this;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 4);
  v3 |= 2u;
  *(unsigned char *)(this + 32) = v3;
  *(_DWORD *)(this + 16) = v7;
  if ((*((unsigned char *)a2 + 32) & 8) != 0) {
    goto LABEL_12;
  }
  return this;
}

uint64_t CMMsl::KappaSteps::operator=(uint64_t a1, const CMMsl::KappaSteps *a2)
{
  if ((const CMMsl::KappaSteps *)a1 != a2)
  {
    CMMsl::KappaSteps::KappaSteps((uint64_t)v7, a2);
    uint64_t v3 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v8;
    uint64_t v8 = v3;
    int v4 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v9;
    int v9 = v4;
    long long v5 = *(_OWORD *)(a1 + 20);
    *(_OWORD *)(a1 + 20) = v10;
    long long v10 = v5;
    PB::Base::~Base((PB::Base *)v7);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaSteps *a2, CMMsl::KappaSteps *a3)
{
  int v3 = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v3;
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  LODWORD(v4) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v4;
  LODWORD(v4) = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v4;
  float result = *((float *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((float *)a2 + 4) = result;
  LODWORD(v4) = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v4;
  return result;
}

float CMMsl::KappaSteps::KappaSteps(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642CC8;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a2 + 32) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  float result = *(float *)(a2 + 16);
  *(float *)(a1 + 16) = result;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642CC8;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a2 + 32) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  float result = *(float *)(a2 + 16);
  *(float *)(a1 + 16) = result;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return result;
}

uint64_t CMMsl::KappaSteps::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(a2 + 8);
    int v4 = *(_DWORD *)(a2 + 16);
    long long v5 = *(_OWORD *)(a2 + 20);
    *(_DWORD *)(a2 + 32) = 0;
    uint64_t v6 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v3;
    v10[0] = &unk_270642CC8;
    v10[1] = v6;
    int v7 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v4;
    int v11 = v7;
    long long v8 = *(_OWORD *)(a1 + 20);
    *(_OWORD *)(a1 + 20) = v5;
    long long v12 = v8;
    PB::Base::~Base((PB::Base *)v10);
  }
  return a1;
}

uint64_t CMMsl::KappaSteps::formatText(CMMsl::KappaSteps *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 32);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "currentCadence", *((float *)this + 4));
    char v5 = *((unsigned char *)this + 32);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*((unsigned char *)this + 32) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "deltaSteps");
  char v5 = *((unsigned char *)this + 32);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(a2, "pedometerArmConstrainedState");
  char v5 = *((unsigned char *)this + 32);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "stepCount");
  if (*((unsigned char *)this + 32)) {
LABEL_6:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_7:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaSteps::readFrom(CMMsl::KappaSteps *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_26;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_21;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_26:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 32) |= 1u;
        unint64_t v21 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v22 = *(void *)a2;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_92;
            }
            unint64_t v47 = v21++;
            char v48 = *(unsigned char *)(v22 + v47);
            *((void *)a2 + 1) = v21;
            v25 |= (unint64_t)(v48 & 0x7F) << v45;
            if ((v48 & 0x80) == 0) {
              break;
            }
            v45 += 7;
            BOOL v14 = v46++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
LABEL_91:
              unint64_t v2 = v47 + 1;
              goto LABEL_92;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v25 = 0;
          }
          goto LABEL_91;
        }
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        do
        {
          unint64_t v2 = v21 + 1;
          *((void *)a2 + 1) = v21 + 1;
          char v26 = *(unsigned char *)(v22 + v21);
          v25 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            goto LABEL_92;
          }
          v23 += 7;
          unint64_t v21 = v2;
          BOOL v14 = v24++ > 8;
        }
        while (!v14);
        uint64_t v25 = 0;
LABEL_92:
        *((void *)this + 1) = v25;
        break;
      case 2u:
        *((unsigned char *)this + 32) |= 0x10u;
        unint64_t v27 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v28 = *(void *)a2;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_97;
            }
            unint64_t v51 = v27++;
            char v52 = *(unsigned char *)(v28 + v51);
            *((void *)a2 + 1) = v27;
            v31 |= (unint64_t)(v52 & 0x7F) << v49;
            if ((v52 & 0x80) == 0) {
              break;
            }
            v49 += 7;
            BOOL v14 = v50++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
LABEL_96:
              unint64_t v2 = v51 + 1;
              goto LABEL_97;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v31) = 0;
          }
          goto LABEL_96;
        }
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        do
        {
          unint64_t v2 = v27 + 1;
          *((void *)a2 + 1) = v27 + 1;
          char v32 = *(unsigned char *)(v28 + v27);
          v31 |= (unint64_t)(v32 & 0x7F) << v29;
          if ((v32 & 0x80) == 0) {
            goto LABEL_97;
          }
          v29 += 7;
          unint64_t v27 = v2;
          BOOL v14 = v30++ > 8;
        }
        while (!v14);
        LODWORD(v31) = 0;
LABEL_97:
        *((_DWORD *)this + 7) = v31;
        break;
      case 3u:
        *((unsigned char *)this + 32) |= 4u;
        unint64_t v33 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v34 = *(void *)a2;
        if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v37 = 0;
          if (v2 <= v33) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v33)
            {
              LODWORD(v37) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_102;
            }
            unint64_t v55 = v33++;
            char v56 = *(unsigned char *)(v34 + v55);
            *((void *)a2 + 1) = v33;
            v37 |= (unint64_t)(v56 & 0x7F) << v53;
            if ((v56 & 0x80) == 0) {
              break;
            }
            v53 += 7;
            BOOL v14 = v54++ > 8;
            if (v14)
            {
              LODWORD(v37) = 0;
LABEL_101:
              unint64_t v2 = v55 + 1;
              goto LABEL_102;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v37) = 0;
          }
          goto LABEL_101;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        do
        {
          unint64_t v2 = v33 + 1;
          *((void *)a2 + 1) = v33 + 1;
          char v38 = *(unsigned char *)(v34 + v33);
          v37 |= (unint64_t)(v38 & 0x7F) << v35;
          if ((v38 & 0x80) == 0) {
            goto LABEL_102;
          }
          v35 += 7;
          unint64_t v33 = v2;
          BOOL v14 = v36++ > 8;
        }
        while (!v14);
        LODWORD(v37) = 0;
LABEL_102:
        *((_DWORD *)this + 5) = v37;
        break;
      case 4u:
        *((unsigned char *)this + 32) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 4) = *(_DWORD *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 5u:
        *((unsigned char *)this + 32) |= 8u;
        unint64_t v39 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v40 = *(void *)a2;
        if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
        {
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v43 = 0;
          if (v2 <= v39) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v39)
            {
              LODWORD(v43) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_107;
            }
            unint64_t v59 = v39++;
            char v60 = *(unsigned char *)(v40 + v59);
            *((void *)a2 + 1) = v39;
            v43 |= (unint64_t)(v60 & 0x7F) << v57;
            if ((v60 & 0x80) == 0) {
              break;
            }
            v57 += 7;
            BOOL v14 = v58++ > 8;
            if (v14)
            {
              LODWORD(v43) = 0;
LABEL_106:
              unint64_t v2 = v59 + 1;
              goto LABEL_107;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v43) = 0;
          }
          goto LABEL_106;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        do
        {
          unint64_t v2 = v39 + 1;
          *((void *)a2 + 1) = v39 + 1;
          char v44 = *(unsigned char *)(v40 + v39);
          v43 |= (unint64_t)(v44 & 0x7F) << v41;
          if ((v44 & 0x80) == 0) {
            goto LABEL_107;
          }
          v41 += 7;
          unint64_t v39 = v2;
          BOOL v14 = v42++ > 8;
        }
        while (!v14);
        LODWORD(v43) = 0;
LABEL_107:
        *((_DWORD *)this + 6) = v43;
        break;
      default:
        goto LABEL_19;
    }
LABEL_21:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KappaSteps::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 32);
  if (v4)
  {
    this = PB::Writer::writeVarInt(a2);
    char v4 = *(unsigned char *)(v3 + 32);
    if ((v4 & 0x10) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 32) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = PB::Writer::write(a2, *(float *)(v3 + 16));
    if ((*(unsigned char *)(v3 + 32) & 8) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 8) == 0) {
    return this;
  }
LABEL_11:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaSteps::hash_value(CMMsl::KappaSteps *this)
{
  if (*((unsigned char *)this + 32))
  {
    uint64_t v1 = *((void *)this + 1);
    if ((*((unsigned char *)this + 32) & 0x10) != 0)
    {
LABEL_3:
      uint64_t v2 = *((unsigned int *)this + 7);
      if ((*((unsigned char *)this + 32) & 4) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v1 = 0;
    if ((*((unsigned char *)this + 32) & 0x10) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  if ((*((unsigned char *)this + 32) & 4) != 0)
  {
LABEL_4:
    uint64_t v3 = *((unsigned int *)this + 5);
    if ((*((unsigned char *)this + 32) & 2) != 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 32) & 2) != 0)
  {
LABEL_5:
    float v4 = *((float *)this + 4);
    uint64_t v5 = LODWORD(v4);
    if (v4 == 0.0) {
      uint64_t v5 = 0;
    }
    if ((*((unsigned char *)this + 32) & 8) != 0) {
      goto LABEL_8;
    }
LABEL_13:
    uint64_t v6 = 0;
    return v2 ^ v1 ^ v3 ^ v5 ^ v6;
  }
LABEL_12:
  uint64_t v5 = 0;
  if ((*((unsigned char *)this + 32) & 8) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v6 = *((unsigned int *)this + 6);
  return v2 ^ v1 ^ v3 ^ v5 ^ v6;
}

void CMMsl::KappaStepsResult::~KappaStepsResult(CMMsl::KappaStepsResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaStepsResult::KappaStepsResult(uint64_t this, const CMMsl::KappaStepsResult *a2)
{
  *(void *)this = &unk_270642D00;
  *(_DWORD *)(this + 60) = 0;
  __int16 v2 = *((_WORD *)a2 + 30);
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *((void *)a2 + 4);
    __int16 v3 = 8;
    *(_WORD *)(this + 60) = 8;
    *(void *)(this + 32) = v4;
    __int16 v2 = *((_WORD *)a2 + 30);
    if ((v2 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*((_WORD *)a2 + 30) & 0x100) != 0)
  {
LABEL_5:
    char v5 = *((unsigned char *)a2 + 56);
    v3 |= 0x100u;
    *(_WORD *)(this + 60) = v3;
    *(unsigned char *)(this + 56) = v5;
    __int16 v2 = *((_WORD *)a2 + 30);
  }
LABEL_6:
  if ((v2 & 0x80) != 0)
  {
    int v6 = *((_DWORD *)a2 + 13);
    v3 |= 0x80u;
    *(_WORD *)(this + 60) = v3;
    *(_DWORD *)(this + 52) = v6;
    __int16 v2 = *((_WORD *)a2 + 30);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 11);
  v3 |= 0x20u;
  *(_WORD *)(this + 60) = v3;
  *(_DWORD *)(this + 44) = v7;
  __int16 v2 = *((_WORD *)a2 + 30);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v8 = *((_DWORD *)a2 + 10);
  v3 |= 0x10u;
  *(_WORD *)(this + 60) = v3;
  *(_DWORD *)(this + 40) = v8;
  __int16 v2 = *((_WORD *)a2 + 30);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 4) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v9 = *((_DWORD *)a2 + 12);
  v3 |= 0x40u;
  *(_WORD *)(this + 60) = v3;
  *(_DWORD *)(this + 48) = v9;
  __int16 v2 = *((_WORD *)a2 + 30);
  if ((v2 & 4) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v10 = *((void *)a2 + 3);
  v3 |= 4u;
  *(_WORD *)(this + 60) = v3;
  *(void *)(this + 24) = v10;
  __int16 v2 = *((_WORD *)a2 + 30);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 2) == 0) {
      return this;
    }
LABEL_20:
    uint64_t v12 = *((void *)a2 + 2);
    *(_WORD *)(this + 60) = v3 | 2;
    *(void *)(this + 16) = v12;
    return this;
  }
LABEL_19:
  uint64_t v11 = *((void *)a2 + 1);
  v3 |= 1u;
  *(_WORD *)(this + 60) = v3;
  *(void *)(this + 8) = v11;
  if ((*((_WORD *)a2 + 30) & 2) != 0) {
    goto LABEL_20;
  }
  return this;
}

uint64_t CMMsl::KappaStepsResult::operator=(uint64_t a1, const CMMsl::KappaStepsResult *a2)
{
  if ((const CMMsl::KappaStepsResult *)a1 != a2)
  {
    CMMsl::KappaStepsResult::KappaStepsResult((uint64_t)&v10, a2);
    int v3 = *(_DWORD *)(a1 + 60);
    *(_DWORD *)(a1 + 60) = v17;
    int v17 = v3;
    LOBYTE(v3) = *(unsigned char *)(a1 + 56);
    *(unsigned char *)(a1 + 56) = v16;
    char v16 = v3;
    int v4 = *(_DWORD *)(a1 + 52);
    *(_DWORD *)(a1 + 52) = v15;
    int v15 = v4;
    uint64_t v5 = *(void *)(a1 + 40);
    *(void *)(a1 + 40) = v13;
    uint64_t v13 = v5;
    int v6 = *(_DWORD *)(a1 + 48);
    *(_DWORD *)(a1 + 48) = v14;
    int v14 = v6;
    long long v7 = *(_OWORD *)(a1 + 24);
    *(_OWORD *)(a1 + 24) = v12;
    long long v12 = v7;
    long long v8 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v11;
    long long v11 = v8;
    PB::Base::~Base((PB::Base *)&v10);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaStepsResult *a2, CMMsl::KappaStepsResult *a3)
{
  int v3 = *((_DWORD *)this + 15);
  *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = v3;
  uint64_t v4 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v4;
  LOBYTE(v4) = *((unsigned char *)this + 56);
  *((unsigned char *)this + 56) = *((unsigned char *)a2 + 56);
  *((unsigned char *)a2 + 56) = v4;
  int v5 = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v5;
  int v6 = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v6;
  float result = *((float *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((float *)a2 + 10) = result;
  LODWORD(v4) = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v4;
  uint64_t v8 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v8;
  uint64_t v9 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v9;
  uint64_t v10 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v10;
  return result;
}

float CMMsl::KappaStepsResult::KappaStepsResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642D00;
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a2 + 60) = 0;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  float result = *(float *)(a2 + 40);
  *(float *)(a1 + 40) = result;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KappaStepsResult::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaStepsResult::KappaStepsResult((uint64_t)&v10, a2);
    int v3 = *(_DWORD *)(a1 + 60);
    *(_DWORD *)(a1 + 60) = v17;
    int v17 = v3;
    LOBYTE(v3) = *(unsigned char *)(a1 + 56);
    *(unsigned char *)(a1 + 56) = v16;
    char v16 = v3;
    int v4 = *(_DWORD *)(a1 + 52);
    *(_DWORD *)(a1 + 52) = v15;
    int v15 = v4;
    uint64_t v5 = *(void *)(a1 + 40);
    *(void *)(a1 + 40) = v13;
    uint64_t v13 = v5;
    int v6 = *(_DWORD *)(a1 + 48);
    *(_DWORD *)(a1 + 48) = v14;
    int v14 = v6;
    long long v7 = *(_OWORD *)(a1 + 24);
    *(_OWORD *)(a1 + 24) = v12;
    long long v12 = v7;
    long long v8 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v11;
    long long v11 = v8;
    PB::Base::~Base((PB::Base *)&v10);
  }
  return a1;
}

uint64_t CMMsl::KappaStepsResult::formatText(CMMsl::KappaStepsResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 30);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(a2, "currentCadence", *((float *)this + 10));
    __int16 v5 = *((_WORD *)this + 30);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "deltaSteps", *((float *)this + 11));
  __int16 v5 = *((_WORD *)this + 30);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(a2, "epochFirstTimestamp");
  __int16 v5 = *((_WORD *)this + 30);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  __int16 v5 = *((_WORD *)this + 30);
  if ((v5 & 0x100) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(a2, "hasSteps");
  __int16 v5 = *((_WORD *)this + 30);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(a2, "pedometerArmConstrainedState");
  __int16 v5 = *((_WORD *)this + 30);
  if ((v5 & 0x80) == 0)
  {
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(a2, "stepCount", *((float *)this + 13));
  __int16 v5 = *((_WORD *)this + 30);
  if ((v5 & 4) == 0)
  {
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(a2, "stepCountEventTimestamp");
  if ((*((_WORD *)this + 30) & 8) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_11:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaStepsResult::readFrom(CMMsl::KappaStepsResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)a2 + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_26;
          }
          v15 += 7;
          unint64_t v2 = v17;
          BOOL v14 = v16++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
        int v4 = 1;
        *((unsigned char *)a2 + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)a2 + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_26:
        if ((v11 & 7) != 4)
        {
          unint64_t v21 = v11 >> 3;
          switch((v11 >> 3))
          {
            case 'e':
              *((_WORD *)this + 30) |= 8u;
              unint64_t v22 = *((void *)a2 + 1);
              unint64_t v2 = *((void *)a2 + 2);
              uint64_t v23 = *(void *)a2;
              if (v22 > 0xFFFFFFFFFFFFFFF5 || v22 + 10 > v2)
              {
                char v54 = 0;
                unsigned int v55 = 0;
                uint64_t v26 = 0;
                if (v2 <= v22) {
                  unint64_t v2 = *((void *)a2 + 1);
                }
                while (1)
                {
                  if (v2 == v22)
                  {
                    uint64_t v26 = 0;
                    *((unsigned char *)a2 + 24) = 1;
                    goto LABEL_119;
                  }
                  unint64_t v56 = v22++;
                  char v57 = *(unsigned char *)(v23 + v56);
                  *((void *)a2 + 1) = v22;
                  v26 |= (unint64_t)(v57 & 0x7F) << v54;
                  if ((v57 & 0x80) == 0) {
                    break;
                  }
                  v54 += 7;
                  BOOL v14 = v55++ > 8;
                  if (v14)
                  {
                    uint64_t v26 = 0;
LABEL_118:
                    unint64_t v2 = v56 + 1;
                    goto LABEL_119;
                  }
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v26 = 0;
                }
                goto LABEL_118;
              }
              char v24 = 0;
              unsigned int v25 = 0;
              uint64_t v26 = 0;
              do
              {
                unint64_t v2 = v22 + 1;
                *((void *)a2 + 1) = v22 + 1;
                char v27 = *(unsigned char *)(v23 + v22);
                v26 |= (unint64_t)(v27 & 0x7F) << v24;
                if ((v27 & 0x80) == 0) {
                  goto LABEL_119;
                }
                v24 += 7;
                unint64_t v22 = v2;
                BOOL v14 = v25++ > 8;
              }
              while (!v14);
              uint64_t v26 = 0;
LABEL_119:
              *((void *)this + 4) = v26;
              goto LABEL_21;
            case 'f':
              *((_WORD *)this + 30) |= 0x100u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 >= *((void *)a2 + 2))
              {
                BOOL v35 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                int v34 = *(unsigned __int8 *)(*(void *)a2 + v2++);
                *((void *)a2 + 1) = v2;
                BOOL v35 = v34 != 0;
              }
              *((unsigned char *)this + 56) = v35;
              goto LABEL_21;
            case 'g':
              *((_WORD *)this + 30) |= 0x80u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_54;
              }
              *((_DWORD *)this + 13) = *(_DWORD *)(*(void *)a2 + v2);
              goto LABEL_114;
            case 'h':
              *((_WORD *)this + 30) |= 0x20u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
                goto LABEL_54;
              }
              *((_DWORD *)this + 11) = *(_DWORD *)(*(void *)a2 + v2);
              goto LABEL_114;
            case 'i':
              *((_WORD *)this + 30) |= 0x10u;
              unint64_t v2 = *((void *)a2 + 1);
              if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
              {
                *((_DWORD *)this + 10) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_114:
                unint64_t v2 = *((void *)a2 + 1) + 4;
                *((void *)a2 + 1) = v2;
              }
              else
              {
LABEL_54:
                *((unsigned char *)a2 + 24) = 1;
              }
              goto LABEL_21;
            case 'j':
              *((_WORD *)this + 30) |= 0x40u;
              unint64_t v36 = *((void *)a2 + 1);
              unint64_t v2 = *((void *)a2 + 2);
              uint64_t v37 = *(void *)a2;
              if (v36 > 0xFFFFFFFFFFFFFFF5 || v36 + 10 > v2)
              {
                char v62 = 0;
                unsigned int v63 = 0;
                uint64_t v40 = 0;
                if (v2 <= v36) {
                  unint64_t v2 = *((void *)a2 + 1);
                }
                while (1)
                {
                  if (v2 == v36)
                  {
                    LODWORD(v40) = 0;
                    *((unsigned char *)a2 + 24) = 1;
                    goto LABEL_129;
                  }
                  unint64_t v64 = v36++;
                  char v65 = *(unsigned char *)(v37 + v64);
                  *((void *)a2 + 1) = v36;
                  v40 |= (unint64_t)(v65 & 0x7F) << v62;
                  if ((v65 & 0x80) == 0) {
                    break;
                  }
                  v62 += 7;
                  BOOL v14 = v63++ > 8;
                  if (v14)
                  {
                    LODWORD(v40) = 0;
LABEL_128:
                    unint64_t v2 = v64 + 1;
                    goto LABEL_129;
                  }
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v40) = 0;
                }
                goto LABEL_128;
              }
              char v38 = 0;
              unsigned int v39 = 0;
              uint64_t v40 = 0;
              do
              {
                unint64_t v2 = v36 + 1;
                *((void *)a2 + 1) = v36 + 1;
                char v41 = *(unsigned char *)(v37 + v36);
                v40 |= (unint64_t)(v41 & 0x7F) << v38;
                if ((v41 & 0x80) == 0) {
                  goto LABEL_129;
                }
                v38 += 7;
                unint64_t v36 = v2;
                BOOL v14 = v39++ > 8;
              }
              while (!v14);
              LODWORD(v40) = 0;
LABEL_129:
              *((_DWORD *)this + 12) = v40;
              goto LABEL_21;
            case 'k':
              *((_WORD *)this + 30) |= 4u;
              unint64_t v42 = *((void *)a2 + 1);
              unint64_t v2 = *((void *)a2 + 2);
              uint64_t v43 = *(void *)a2;
              if (v42 > 0xFFFFFFFFFFFFFFF5 || v42 + 10 > v2)
              {
                char v66 = 0;
                unsigned int v67 = 0;
                uint64_t v46 = 0;
                if (v2 <= v42) {
                  unint64_t v2 = *((void *)a2 + 1);
                }
                while (1)
                {
                  if (v2 == v42)
                  {
                    uint64_t v46 = 0;
                    *((unsigned char *)a2 + 24) = 1;
                    goto LABEL_134;
                  }
                  unint64_t v68 = v42++;
                  char v69 = *(unsigned char *)(v43 + v68);
                  *((void *)a2 + 1) = v42;
                  v46 |= (unint64_t)(v69 & 0x7F) << v66;
                  if ((v69 & 0x80) == 0) {
                    break;
                  }
                  v66 += 7;
                  BOOL v14 = v67++ > 8;
                  if (v14)
                  {
                    uint64_t v46 = 0;
LABEL_133:
                    unint64_t v2 = v68 + 1;
                    goto LABEL_134;
                  }
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v46 = 0;
                }
                goto LABEL_133;
              }
              char v44 = 0;
              unsigned int v45 = 0;
              uint64_t v46 = 0;
              do
              {
                unint64_t v2 = v42 + 1;
                *((void *)a2 + 1) = v42 + 1;
                char v47 = *(unsigned char *)(v43 + v42);
                v46 |= (unint64_t)(v47 & 0x7F) << v44;
                if ((v47 & 0x80) == 0) {
                  goto LABEL_134;
                }
                v44 += 7;
                unint64_t v42 = v2;
                BOOL v14 = v45++ > 8;
              }
              while (!v14);
              uint64_t v46 = 0;
LABEL_134:
              *((void *)this + 3) = v46;
              goto LABEL_21;
            default:
              if (v21 == 201)
              {
                *((_WORD *)this + 30) |= 1u;
                unint64_t v48 = *((void *)a2 + 1);
                unint64_t v2 = *((void *)a2 + 2);
                uint64_t v49 = *(void *)a2;
                if (v48 > 0xFFFFFFFFFFFFFFF5 || v48 + 10 > v2)
                {
                  char v70 = 0;
                  unsigned int v71 = 0;
                  uint64_t v52 = 0;
                  if (v2 <= v48) {
                    unint64_t v2 = *((void *)a2 + 1);
                  }
                  while (1)
                  {
                    if (v2 == v48)
                    {
                      uint64_t v52 = 0;
                      *((unsigned char *)a2 + 24) = 1;
                      goto LABEL_139;
                    }
                    unint64_t v72 = v48++;
                    char v73 = *(unsigned char *)(v49 + v72);
                    *((void *)a2 + 1) = v48;
                    v52 |= (unint64_t)(v73 & 0x7F) << v70;
                    if ((v73 & 0x80) == 0) {
                      break;
                    }
                    v70 += 7;
                    BOOL v14 = v71++ > 8;
                    if (v14)
                    {
                      uint64_t v52 = 0;
                      goto LABEL_138;
                    }
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    uint64_t v52 = 0;
                  }
LABEL_138:
                  unint64_t v2 = v72 + 1;
                }
                else
                {
                  char v50 = 0;
                  unsigned int v51 = 0;
                  uint64_t v52 = 0;
                  while (1)
                  {
                    unint64_t v2 = v48 + 1;
                    *((void *)a2 + 1) = v48 + 1;
                    char v53 = *(unsigned char *)(v49 + v48);
                    v52 |= (unint64_t)(v53 & 0x7F) << v50;
                    if ((v53 & 0x80) == 0) {
                      break;
                    }
                    v50 += 7;
                    unint64_t v48 = v2;
                    BOOL v14 = v51++ > 8;
                    if (v14)
                    {
                      uint64_t v52 = 0;
                      break;
                    }
                  }
                }
LABEL_139:
                *((void *)this + 1) = v52;
              }
              else if (v21 == 202)
              {
                *((_WORD *)this + 30) |= 2u;
                unint64_t v28 = *((void *)a2 + 1);
                unint64_t v2 = *((void *)a2 + 2);
                uint64_t v29 = *(void *)a2;
                if (v28 > 0xFFFFFFFFFFFFFFF5 || v28 + 10 > v2)
                {
                  char v58 = 0;
                  unsigned int v59 = 0;
                  uint64_t v32 = 0;
                  if (v2 <= v28) {
                    unint64_t v2 = *((void *)a2 + 1);
                  }
                  while (1)
                  {
                    if (v2 == v28)
                    {
                      uint64_t v32 = 0;
                      *((unsigned char *)a2 + 24) = 1;
                      goto LABEL_124;
                    }
                    unint64_t v60 = v28++;
                    char v61 = *(unsigned char *)(v29 + v60);
                    *((void *)a2 + 1) = v28;
                    v32 |= (unint64_t)(v61 & 0x7F) << v58;
                    if ((v61 & 0x80) == 0) {
                      break;
                    }
                    v58 += 7;
                    BOOL v14 = v59++ > 8;
                    if (v14)
                    {
                      uint64_t v32 = 0;
                      goto LABEL_123;
                    }
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    uint64_t v32 = 0;
                  }
LABEL_123:
                  unint64_t v2 = v60 + 1;
                }
                else
                {
                  char v30 = 0;
                  unsigned int v31 = 0;
                  uint64_t v32 = 0;
                  while (1)
                  {
                    unint64_t v2 = v28 + 1;
                    *((void *)a2 + 1) = v28 + 1;
                    char v33 = *(unsigned char *)(v29 + v28);
                    v32 |= (unint64_t)(v33 & 0x7F) << v30;
                    if ((v33 & 0x80) == 0) {
                      break;
                    }
                    v30 += 7;
                    unint64_t v28 = v2;
                    BOOL v14 = v31++ > 8;
                    if (v14)
                    {
                      uint64_t v32 = 0;
                      break;
                    }
                  }
                }
LABEL_124:
                *((void *)this + 2) = v32;
              }
              else
              {
LABEL_19:
                uint64_t result = PB::Reader::skip(a2);
                if (!result) {
                  return result;
                }
                unint64_t v2 = *((void *)a2 + 1);
              }
LABEL_21:
              unint64_t v3 = *((void *)a2 + 2);
              int v4 = *((unsigned __int8 *)a2 + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t CMMsl::KappaStepsResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 60);
  if ((v4 & 8) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    __int16 v4 = *(_WORD *)(v3 + 60);
    if ((v4 & 0x100) == 0)
    {
LABEL_3:
      if ((v4 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*(_WORD *)(this + 60) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x80) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = PB::Writer::write(a2, *(float *)(v3 + 52));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = PB::Writer::write(a2, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = PB::Writer::write(a2, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_WORD *)(v3 + 60) & 2) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 60);
  if (v4) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 2) == 0) {
    return this;
  }
LABEL_19:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaStepsResult::hash_value(CMMsl::KappaStepsResult *this)
{
  __int16 v1 = *((_WORD *)this + 30);
  if ((v1 & 8) != 0)
  {
    uint64_t v2 = *((void *)this + 4);
    if ((*((_WORD *)this + 30) & 0x100) != 0)
    {
LABEL_3:
      uint64_t v3 = *((unsigned __int8 *)this + 56);
      if ((v1 & 0x80) != 0) {
        goto LABEL_4;
      }
LABEL_19:
      uint64_t v5 = 0;
      if ((v1 & 0x20) != 0) {
        goto LABEL_7;
      }
LABEL_20:
      uint64_t v7 = 0;
      if ((v1 & 0x10) != 0) {
        goto LABEL_10;
      }
LABEL_21:
      uint64_t v9 = 0;
      if ((v1 & 0x40) != 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((*((_WORD *)this + 30) & 0x100) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v3 = 0;
  if ((v1 & 0x80) == 0) {
    goto LABEL_19;
  }
LABEL_4:
  float v4 = *((float *)this + 13);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  if ((v1 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_7:
  float v6 = *((float *)this + 11);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  if ((v1 & 0x10) == 0) {
    goto LABEL_21;
  }
LABEL_10:
  float v8 = *((float *)this + 10);
  uint64_t v9 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v9 = 0;
  }
  if ((v1 & 0x40) != 0)
  {
LABEL_13:
    uint64_t v10 = *((unsigned int *)this + 12);
    if ((v1 & 4) != 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v10 = 0;
  if ((v1 & 4) != 0)
  {
LABEL_14:
    uint64_t v11 = *((void *)this + 3);
    if (v1) {
      goto LABEL_15;
    }
LABEL_24:
    uint64_t v12 = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_25:
    uint64_t v13 = 0;
    return v3 ^ v2 ^ v5 ^ v7 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13;
  }
LABEL_23:
  uint64_t v11 = 0;
  if ((v1 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_15:
  uint64_t v12 = *((void *)this + 1);
  if ((v1 & 2) == 0) {
    goto LABEL_25;
  }
LABEL_16:
  uint64_t v13 = *((void *)this + 2);
  return v3 ^ v2 ^ v5 ^ v7 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13;
}

void CMMsl::KappaTrigger::~KappaTrigger(CMMsl::KappaTrigger *this)
{
  *(void *)this = &unk_270642D38;
  uint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  float v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::KappaTrigger::~KappaTrigger(this);
  JUMPOUT(0x25A2B2850);
}

CMMsl::KappaTrigger *CMMsl::KappaTrigger::KappaTrigger(CMMsl::KappaTrigger *this, const CMMsl::KappaTrigger *a2)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  float v4 = (void *)((char *)this + 8);
  *(_OWORD *)((char *)this + 56) = 0u;
  *(void *)this = &unk_270642D38;
  *((_DWORD *)this + 53) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 9) = 0;
  int v5 = *((_DWORD *)a2 + 53);
  if ((v5 & 4) != 0)
  {
    uint64_t v7 = *((void *)a2 + 12);
    int v6 = 4;
    *((_DWORD *)this + 53) = 4;
    *((void *)this + 12) = v7;
    int v5 = *((_DWORD *)a2 + 53);
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else
  {
    int v6 = 0;
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  char v8 = *((unsigned char *)a2 + 211);
  v6 |= 0x80000000;
  *((_DWORD *)this + 53) = v6;
  *((unsigned char *)this + 211) = v8;
  int v5 = *((_DWORD *)a2 + 53);
LABEL_6:
  if (v5)
  {
    uint64_t v9 = *((void *)a2 + 10);
    *((_DWORD *)this + 53) = v6 | 1;
    *((void *)this + 10) = v9;
  }
  if (this != a2)
  {
    sub_2572C73EC(v4, *((char **)a2 + 1), *((char **)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
    sub_2572C75B4((void *)this + 7, *((char **)a2 + 7), *((char **)a2 + 8), (uint64_t)(*((void *)a2 + 8) - *((void *)a2 + 7)) >> 2);
    sub_2572C75B4((void *)this + 4, *((char **)a2 + 4), *((char **)a2 + 5), (uint64_t)(*((void *)a2 + 5) - *((void *)a2 + 4)) >> 2);
  }
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x10000000) != 0)
  {
    char v13 = *((unsigned char *)a2 + 208);
    *((_DWORD *)this + 53) |= 0x10000000u;
    *((unsigned char *)this + 208) = v13;
    int v10 = *((_DWORD *)a2 + 53);
    if ((v10 & 0x20000000) == 0)
    {
LABEL_12:
      if ((v10 & 0x400000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_43;
    }
  }
  else if ((v10 & 0x20000000) == 0)
  {
    goto LABEL_12;
  }
  char v14 = *((unsigned char *)a2 + 209);
  *((_DWORD *)this + 53) |= 0x20000000u;
  *((unsigned char *)this + 209) = v14;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x400000) == 0)
  {
LABEL_13:
    if ((v10 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v15 = *((_DWORD *)a2 + 46);
  *((_DWORD *)this + 53) |= 0x400000u;
  *((_DWORD *)this + 46) = v15;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x10) == 0)
  {
LABEL_14:
    if ((v10 & 0x80000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v16 = *((_DWORD *)a2 + 28);
  *((_DWORD *)this + 53) |= 0x10u;
  *((_DWORD *)this + 28) = v16;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x80000) == 0)
  {
LABEL_15:
    if ((v10 & 0x40000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v17 = *((_DWORD *)a2 + 43);
  *((_DWORD *)this + 53) |= 0x80000u;
  *((_DWORD *)this + 43) = v17;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x40000) == 0)
  {
LABEL_16:
    if ((v10 & 0x20000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v18 = *((_DWORD *)a2 + 42);
  *((_DWORD *)this + 53) |= 0x40000u;
  *((_DWORD *)this + 42) = v18;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x20000) == 0)
  {
LABEL_17:
    if ((v10 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_48;
  }
LABEL_47:
  int v19 = *((_DWORD *)a2 + 41);
  *((_DWORD *)this + 53) |= 0x20000u;
  *((_DWORD *)this + 41) = v19;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x10000) == 0)
  {
LABEL_18:
    if ((v10 & 0x8000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v20 = *((_DWORD *)a2 + 40);
  *((_DWORD *)this + 53) |= 0x10000u;
  *((_DWORD *)this + 40) = v20;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x8000) == 0)
  {
LABEL_19:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v21 = *((_DWORD *)a2 + 39);
  *((_DWORD *)this + 53) |= 0x8000u;
  *((_DWORD *)this + 39) = v21;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x4000) == 0)
  {
LABEL_20:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v22 = *((_DWORD *)a2 + 38);
  *((_DWORD *)this + 53) |= 0x4000u;
  *((_DWORD *)this + 38) = v22;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x2000) == 0)
  {
LABEL_21:
    if ((v10 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v23 = *((_DWORD *)a2 + 37);
  *((_DWORD *)this + 53) |= 0x2000u;
  *((_DWORD *)this + 37) = v23;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x100000) == 0)
  {
LABEL_22:
    if ((v10 & 0x100) == 0) {
      goto LABEL_23;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v24 = *((_DWORD *)a2 + 44);
  *((_DWORD *)this + 53) |= 0x100000u;
  *((_DWORD *)this + 44) = v24;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x100) == 0)
  {
LABEL_23:
    if ((v10 & 0x1000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v25 = *((_DWORD *)a2 + 32);
  *((_DWORD *)this + 53) |= 0x100u;
  *((_DWORD *)this + 32) = v25;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x1000000) == 0)
  {
LABEL_24:
    if ((v10 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v26 = *((_DWORD *)a2 + 48);
  *((_DWORD *)this + 53) |= 0x1000000u;
  *((_DWORD *)this + 48) = v26;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x20) == 0)
  {
LABEL_25:
    if ((v10 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v27 = *((_DWORD *)a2 + 29);
  *((_DWORD *)this + 53) |= 0x20u;
  *((_DWORD *)this + 29) = v27;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 8) == 0)
  {
LABEL_26:
    if ((v10 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t v28 = *((void *)a2 + 13);
  *((_DWORD *)this + 53) |= 8u;
  *((void *)this + 13) = v28;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v10 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v29 = *((_DWORD *)a2 + 49);
  *((_DWORD *)this + 53) |= 0x2000000u;
  *((_DWORD *)this + 49) = v29;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v10 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v30 = *((_DWORD *)a2 + 50);
  *((_DWORD *)this + 53) |= 0x4000000u;
  *((_DWORD *)this + 50) = v30;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v10 & 0x800) == 0) {
      goto LABEL_30;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v31 = *((_DWORD *)a2 + 51);
  *((_DWORD *)this + 53) |= 0x8000000u;
  *((_DWORD *)this + 51) = v31;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x800) == 0)
  {
LABEL_30:
    if ((v10 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v32 = *((_DWORD *)a2 + 35);
  *((_DWORD *)this + 53) |= 0x800u;
  *((_DWORD *)this + 35) = v32;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x80) == 0)
  {
LABEL_31:
    if ((v10 & 2) == 0) {
      goto LABEL_32;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v33 = *((_DWORD *)a2 + 31);
  *((_DWORD *)this + 53) |= 0x80u;
  *((_DWORD *)this + 31) = v33;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 2) == 0)
  {
LABEL_32:
    if ((v10 & 0x40000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v34 = *((void *)a2 + 11);
  *((_DWORD *)this + 53) |= 2u;
  *((void *)this + 11) = v34;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x40000000) == 0)
  {
LABEL_33:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_64;
  }
LABEL_63:
  char v35 = *((unsigned char *)a2 + 210);
  *((_DWORD *)this + 53) |= 0x40000000u;
  *((unsigned char *)this + 210) = v35;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x1000) == 0)
  {
LABEL_34:
    if ((v10 & 0x200) == 0) {
      goto LABEL_35;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v36 = *((_DWORD *)a2 + 36);
  *((_DWORD *)this + 53) |= 0x1000u;
  *((_DWORD *)this + 36) = v36;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x200) == 0)
  {
LABEL_35:
    if ((v10 & 0x40) == 0) {
      goto LABEL_36;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v37 = *((_DWORD *)a2 + 33);
  *((_DWORD *)this + 53) |= 0x200u;
  *((_DWORD *)this + 33) = v37;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x40) == 0)
  {
LABEL_36:
    if ((v10 & 0x200000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v38 = *((_DWORD *)a2 + 30);
  *((_DWORD *)this + 53) |= 0x40u;
  *((_DWORD *)this + 30) = v38;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x200000) == 0)
  {
LABEL_37:
    if ((v10 & 0x400) == 0) {
      goto LABEL_38;
    }
LABEL_68:
    int v40 = *((_DWORD *)a2 + 34);
    *((_DWORD *)this + 53) |= 0x400u;
    *((_DWORD *)this + 34) = v40;
    if ((*((_DWORD *)a2 + 53) & 0x800000) == 0) {
      return this;
    }
    goto LABEL_39;
  }
LABEL_67:
  int v39 = *((_DWORD *)a2 + 45);
  *((_DWORD *)this + 53) |= 0x200000u;
  *((_DWORD *)this + 45) = v39;
  int v10 = *((_DWORD *)a2 + 53);
  if ((v10 & 0x400) != 0) {
    goto LABEL_68;
  }
LABEL_38:
  if ((v10 & 0x800000) != 0)
  {
LABEL_39:
    int v11 = *((_DWORD *)a2 + 47);
    *((_DWORD *)this + 53) |= 0x800000u;
    *((_DWORD *)this + 47) = v11;
  }
  return this;
}

CMMsl *CMMsl::KappaTrigger::operator=(CMMsl *a1, const CMMsl::KappaTrigger *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaTrigger::KappaTrigger((CMMsl::KappaTrigger *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaTrigger *)v5, v3);
    CMMsl::KappaTrigger::~KappaTrigger((CMMsl::KappaTrigger *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaTrigger *a2, CMMsl::KappaTrigger *a3)
{
  int v3 = *((_DWORD *)this + 53);
  *((_DWORD *)this + 53) = *((_DWORD *)a2 + 53);
  *((_DWORD *)a2 + 53) = v3;
  uint64_t v4 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v4;
  LOBYTE(v4) = *((unsigned char *)this + 211);
  *((unsigned char *)this + 211) = *((unsigned char *)a2 + 211);
  *((unsigned char *)a2 + 211) = v4;
  uint64_t v5 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v5;
  uint64_t v6 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v6;
  uint64_t v7 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v7;
  uint64_t v8 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v8;
  uint64_t v9 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v9;
  uint64_t v10 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v10;
  uint64_t v11 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v11;
  uint64_t v12 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v12;
  uint64_t v13 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v13;
  uint64_t v14 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v14;
  LOBYTE(v14) = *((unsigned char *)this + 208);
  *((unsigned char *)this + 208) = *((unsigned char *)a2 + 208);
  *((unsigned char *)a2 + 208) = v14;
  LOBYTE(v14) = *((unsigned char *)this + 209);
  *((unsigned char *)this + 209) = *((unsigned char *)a2 + 209);
  *((unsigned char *)a2 + 209) = v14;
  LODWORD(v14) = *((_DWORD *)this + 46);
  *((_DWORD *)this + 46) = *((_DWORD *)a2 + 46);
  *((_DWORD *)a2 + 46) = v14;
  LODWORD(v5) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v5;
  LODWORD(v14) = *((_DWORD *)this + 43);
  *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
  *((_DWORD *)a2 + 43) = v14;
  LODWORD(v14) = *((_DWORD *)this + 42);
  *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
  *((_DWORD *)a2 + 42) = v14;
  LODWORD(v14) = *((_DWORD *)this + 41);
  *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
  *((_DWORD *)a2 + 41) = v14;
  LODWORD(v14) = *((_DWORD *)this + 40);
  *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
  *((_DWORD *)a2 + 40) = v14;
  LODWORD(v14) = *((_DWORD *)this + 39);
  *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
  *((_DWORD *)a2 + 39) = v14;
  LODWORD(v14) = *((_DWORD *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((_DWORD *)a2 + 38) = v14;
  LODWORD(v14) = *((_DWORD *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((_DWORD *)a2 + 37) = v14;
  LODWORD(v14) = *((_DWORD *)this + 44);
  *((_DWORD *)this + 44) = *((_DWORD *)a2 + 44);
  *((_DWORD *)a2 + 44) = v14;
  LODWORD(v5) = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v5;
  LODWORD(v14) = *((_DWORD *)this + 48);
  *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
  *((_DWORD *)a2 + 48) = v14;
  LODWORD(v14) = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v14;
  uint64_t v15 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v15;
  LODWORD(v5) = *((_DWORD *)this + 49);
  *((_DWORD *)this + 49) = *((_DWORD *)a2 + 49);
  *((_DWORD *)a2 + 49) = v5;
  LODWORD(v5) = *((_DWORD *)this + 50);
  *((_DWORD *)this + 50) = *((_DWORD *)a2 + 50);
  *((_DWORD *)a2 + 50) = v5;
  LODWORD(v5) = *((_DWORD *)this + 51);
  *((_DWORD *)this + 51) = *((_DWORD *)a2 + 51);
  *((_DWORD *)a2 + 51) = v5;
  LODWORD(v15) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v15;
  LODWORD(v15) = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v15;
  uint64_t v16 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v16;
  LOBYTE(v16) = *((unsigned char *)this + 210);
  *((unsigned char *)this + 210) = *((unsigned char *)a2 + 210);
  *((unsigned char *)a2 + 210) = v16;
  LODWORD(v5) = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v5;
  LODWORD(v5) = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v5;
  float result = *((float *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((float *)a2 + 30) = result;
  LODWORD(v16) = *((_DWORD *)this + 45);
  *((_DWORD *)this + 45) = *((_DWORD *)a2 + 45);
  *((_DWORD *)a2 + 45) = v16;
  LODWORD(v16) = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v16;
  LODWORD(v16) = *((_DWORD *)this + 47);
  *((_DWORD *)this + 47) = *((_DWORD *)a2 + 47);
  *((_DWORD *)a2 + 47) = v16;
  return result;
}

uint64_t CMMsl::KappaTrigger::KappaTrigger(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642D38;
  uint64_t v4 = a1 + 32;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v5 = a1 + 56;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  *(_DWORD *)(a2 + 212) = 0;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 211) = *(unsigned char *)(a2 + 211);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_2572C7560(a1 + 8, (__n128 *)(a2 + 8));
  sub_2572C7560(v5, (__n128 *)(a2 + 56));
  sub_2572C7560(v4, (__n128 *)(a2 + 32));
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 204) = *(_DWORD *)(a2 + 204);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 210) = *(unsigned char *)(a2 + 210);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  return a1;
}

CMMsl *CMMsl::KappaTrigger::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaTrigger::KappaTrigger((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaTrigger *)v5, v3);
    CMMsl::KappaTrigger::~KappaTrigger((CMMsl::KappaTrigger *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaTrigger::formatText(CMMsl::KappaTrigger *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  int v5 = *((_DWORD *)this + 53);
  if (v5)
  {
    PB::TextFormatter::format(a2, "avgHorizontalDecelMax", *((double *)this + 10));
    int v5 = *((_DWORD *)this + 53);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_47;
    }
  }
  else if ((v5 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "avgHorizontalDecelThresholdCoupled", *((float *)this + 28));
  int v5 = *((_DWORD *)this + 53);
  if ((v5 & 0x20) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(a2, "btHint");
  int v5 = *((_DWORD *)this + 53);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(a2, "companionAopTs");
  int v5 = *((_DWORD *)this + 53);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(a2, "currentWindowMean", *((float *)this + 30));
  int v5 = *((_DWORD *)this + 53);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_50:
  PB::TextFormatter::format(a2, "enableMode");
  if ((*((_DWORD *)this + 53) & 0x100) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(a2, "impactThresholdUncoupled", *((float *)this + 32));
LABEL_9:
  uint64_t v6 = (double *)*((void *)this + 1);
  uint64_t v7 = (double *)*((void *)this + 2);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(a2, "inertialAccel", v8);
  }
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x10000000) != 0)
  {
    PB::TextFormatter::format(a2, "isMounted");
    int v9 = *((_DWORD *)this + 53);
    if ((v9 & 0x20000000) == 0)
    {
LABEL_13:
      if ((v9 & 0x200) == 0) {
        goto LABEL_14;
      }
      goto LABEL_54;
    }
  }
  else if ((v9 & 0x20000000) == 0)
  {
    goto LABEL_13;
  }
  PB::TextFormatter::format(a2, "isSimulated");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x200) == 0)
  {
LABEL_14:
    if ((v9 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(a2, "lastCompleted15sWindowMean", *((float *)this + 33));
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x400) == 0)
  {
LABEL_15:
    if ((v9 & 0x40000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(a2, "locallyArmedBitmap");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x40000000) == 0)
  {
LABEL_16:
    if ((v9 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(a2, "martyIsBicycle");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x800) == 0)
  {
LABEL_17:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(a2, "martyTriggerPathBitmap");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x1000) == 0)
  {
LABEL_18:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(a2, "maxMeanTenMinPreTrigger", *((float *)this + 36));
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x2000) == 0)
  {
LABEL_19:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(a2, "nAccelGap");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x4000) == 0)
  {
LABEL_20:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(a2, "nFullAccel");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x8000) == 0)
  {
LABEL_21:
    if ((v9 & 0x10000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(a2, "nFullDM");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x10000) == 0)
  {
LABEL_22:
    if ((v9 & 0x20000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(a2, "nOldAccel");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x20000) == 0)
  {
LABEL_23:
    if ((v9 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(a2, "nOldDM");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x40000) == 0)
  {
LABEL_24:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(a2, "nOldDt");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x80000) == 0)
  {
LABEL_25:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(a2, "nPrecondition");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x100000) == 0)
  {
LABEL_26:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(a2, "nUseNearest");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x200000) == 0)
  {
LABEL_27:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(a2, "numMaxEnvelopes");
  int v9 = *((_DWORD *)this + 53);
  if ((v9 & 0x400000) == 0)
  {
LABEL_28:
    if ((v9 & 0x800000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_68:
  PB::TextFormatter::format(a2, "numResets");
  if ((*((_DWORD *)this + 53) & 0x800000) != 0) {
LABEL_29:
  }
    PB::TextFormatter::format(a2, "overrideArmedBitmap");
LABEL_30:
  uint64_t v10 = (float *)*((void *)this + 4);
  uint64_t v11 = (float *)*((void *)this + 5);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(a2, "prevQ", v12);
  }
  uint64_t v13 = (float *)*((void *)this + 7);
  uint64_t v14 = (float *)*((void *)this + 8);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(a2, "rawClampedAccel", v15);
  }
  int v16 = *((_DWORD *)this + 53);
  if (v16 < 0)
  {
    PB::TextFormatter::format(a2, "shouldTrigger");
    int v16 = *((_DWORD *)this + 53);
    if ((v16 & 4) == 0)
    {
LABEL_36:
      if ((v16 & 0x1000000) == 0) {
        goto LABEL_37;
      }
      goto LABEL_72;
    }
  }
  else if ((v16 & 4) == 0)
  {
    goto LABEL_36;
  }
  PB::TextFormatter::format(a2, "timestamp");
  int v16 = *((_DWORD *)this + 53);
  if ((v16 & 0x1000000) == 0)
  {
LABEL_37:
    if ((v16 & 0x2000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(a2, "triggerPathBitmap");
  int v16 = *((_DWORD *)this + 53);
  if ((v16 & 0x2000000) == 0)
  {
LABEL_38:
    if ((v16 & 0x4000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(a2, "vehicleProbabilityLongTermMean0", *((float *)this + 49));
  int v16 = *((_DWORD *)this + 53);
  if ((v16 & 0x4000000) == 0)
  {
LABEL_39:
    if ((v16 & 0x8000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(a2, "vehicleProbabilityLongTermMean1", *((float *)this + 50));
  int v16 = *((_DWORD *)this + 53);
  if ((v16 & 0x8000000) == 0)
  {
LABEL_40:
    if ((v16 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
LABEL_75:
  PB::TextFormatter::format(a2, "vehicleProbabilityLongTermMean2", *((float *)this + 51));
  if ((*((_DWORD *)this + 53) & 8) != 0) {
LABEL_41:
  }
    PB::TextFormatter::format(a2, "vehicleProbabilityTs");
LABEL_42:
  return MEMORY[0x270F587F0](a2);
}

BOOL CMMsl::KappaTrigger::readFrom(CMMsl::KappaTrigger *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (2)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 <= 0xFFFFFFFFFFFFFFF5 && v2 + 10 <= v3)
    {
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_25:
      int v20 = v11 & 7;
      if (v20 != 4)
      {
        switch((v11 >> 3))
        {
          case 1u:
            *((_DWORD *)this + 53) |= 4u;
            unint64_t v21 = *((void *)a2 + 1);
            unint64_t v22 = *((void *)a2 + 2);
            uint64_t v23 = *(void *)a2;
            if (v21 <= 0xFFFFFFFFFFFFFFF5 && v21 + 10 <= v22)
            {
              char v24 = 0;
              unsigned int v25 = 0;
              uint64_t v26 = 0;
              do
              {
                unint64_t v27 = v21 + 1;
                *((void *)a2 + 1) = v21 + 1;
                char v28 = *(unsigned char *)(v23 + v21);
                v26 |= (unint64_t)(v28 & 0x7F) << v24;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_455;
                }
                v24 += 7;
                unint64_t v21 = v27;
                BOOL v14 = v25++ > 8;
              }
              while (!v14);
LABEL_270:
              uint64_t v26 = 0;
              goto LABEL_455;
            }
            char v241 = 0;
            unsigned int v242 = 0;
            uint64_t v26 = 0;
            if (v22 <= v21) {
              unint64_t v22 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v22 == v21)
              {
                uint64_t v26 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v243 = v21 + 1;
                char v244 = *(unsigned char *)(v23 + v21);
                *((void *)a2 + 1) = v243;
                v26 |= (unint64_t)(v244 & 0x7F) << v241;
                if (v244 < 0)
                {
                  v241 += 7;
                  unint64_t v21 = v243;
                  BOOL v14 = v242++ > 8;
                  if (v14) {
                    goto LABEL_270;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v26 = 0;
                }
              }
              break;
            }
LABEL_455:
            *((void *)this + 12) = v26;
            goto LABEL_20;
          case 2u:
            *((_DWORD *)this + 53) |= 0x80000000;
            unint64_t v29 = *((void *)a2 + 1);
            if (v29 >= *((void *)a2 + 2))
            {
              BOOL v32 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v30 = v29 + 1;
              int v31 = *(unsigned __int8 *)(*(void *)a2 + v29);
              *((void *)a2 + 1) = v30;
              BOOL v32 = v31 != 0;
            }
            *((unsigned char *)this + 211) = v32;
            goto LABEL_20;
          case 3u:
            *((_DWORD *)this + 53) |= 1u;
            unint64_t v33 = *((void *)a2 + 1);
            if (v33 > 0xFFFFFFFFFFFFFFF7 || v33 + 8 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((void *)this + 10) = *(void *)(*(void *)a2 + v33);
            goto LABEL_519;
          case 4u:
            if (v20 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v34 = *((void *)a2 + 1);
              unint64_t v35 = *((void *)a2 + 2);
              while (v34 < v35 && !*((unsigned char *)a2 + 24))
              {
                int v37 = (char *)*((void *)this + 2);
                unint64_t v36 = *((void *)this + 3);
                if ((unint64_t)v37 >= v36)
                {
                  int v39 = (char *)*((void *)this + 1);
                  uint64_t v40 = (v37 - v39) >> 3;
                  unint64_t v41 = v40 + 1;
                  if ((unint64_t)(v40 + 1) >> 61) {
                    goto LABEL_545;
                  }
                  uint64_t v42 = v36 - (void)v39;
                  if (v42 >> 2 > v41) {
                    unint64_t v41 = v42 >> 2;
                  }
                  BOOL v43 = (unint64_t)v42 >= 0x7FFFFFFFFFFFFFF8;
                  unint64_t v44 = 0x1FFFFFFFFFFFFFFFLL;
                  if (!v43) {
                    unint64_t v44 = v41;
                  }
                  if (v44)
                  {
                    unint64_t v44 = (unint64_t)sub_2572C7528(v44);
                    int v39 = (char *)*((void *)this + 1);
                    int v37 = (char *)*((void *)this + 2);
                  }
                  else
                  {
                    uint64_t v45 = 0;
                  }
                  uint64_t v46 = (void *)(v44 + 8 * v40);
                  *uint64_t v46 = 0;
                  int v38 = v46 + 1;
                  while (v37 != v39)
                  {
                    uint64_t v47 = *((void *)v37 - 1);
                    v37 -= 8;
                    *--uint64_t v46 = v47;
                  }
                  *((void *)this + 1) = v46;
                  *((void *)this + 2) = v38;
                  *((void *)this + 3) = v44 + 8 * v45;
                  if (v39) {
                    operator delete(v39);
                  }
                }
                else
                {
                  *(void *)int v37 = 0;
                  int v38 = v37 + 8;
                }
                *((void *)this + 2) = v38;
                unint64_t v48 = *((void *)a2 + 1);
                if (v48 > 0xFFFFFFFFFFFFFFF7 || v48 + 8 > *((void *)a2 + 2)) {
                  goto LABEL_411;
                }
                *(v38 - 1) = *(void *)(*(void *)a2 + v48);
                unint64_t v35 = *((void *)a2 + 2);
                unint64_t v34 = *((void *)a2 + 1) + 8;
                *((void *)a2 + 1) = v34;
              }
              goto LABEL_412;
            }
            unsigned int v246 = (char *)*((void *)this + 2);
            unint64_t v245 = *((void *)this + 3);
            if ((unint64_t)v246 >= v245)
            {
              unint64_t v325 = (char *)*((void *)this + 1);
              uint64_t v326 = (v246 - v325) >> 3;
              unint64_t v327 = v326 + 1;
              if ((unint64_t)(v326 + 1) >> 61) {
LABEL_545:
              }
                sub_2570AFD0C();
              uint64_t v328 = v245 - (void)v325;
              if (v328 >> 2 > v327) {
                unint64_t v327 = v328 >> 2;
              }
              BOOL v43 = (unint64_t)v328 >= 0x7FFFFFFFFFFFFFF8;
              unint64_t v329 = 0x1FFFFFFFFFFFFFFFLL;
              if (!v43) {
                unint64_t v329 = v327;
              }
              if (v329)
              {
                unint64_t v329 = (unint64_t)sub_2572C7528(v329);
                unint64_t v325 = (char *)*((void *)this + 1);
                unsigned int v246 = (char *)*((void *)this + 2);
              }
              else
              {
                uint64_t v330 = 0;
              }
              uint64_t v343 = (void *)(v329 + 8 * v326);
              *uint64_t v343 = 0;
              unint64_t v247 = v343 + 1;
              while (v246 != v325)
              {
                uint64_t v344 = *((void *)v246 - 1);
                v246 -= 8;
                *--uint64_t v343 = v344;
              }
              *((void *)this + 1) = v343;
              *((void *)this + 2) = v247;
              *((void *)this + 3) = v329 + 8 * v330;
              if (v325) {
                operator delete(v325);
              }
            }
            else
            {
              *(void *)unsigned int v246 = 0;
              unint64_t v247 = v246 + 8;
            }
            *((void *)this + 2) = v247;
            unint64_t v345 = *((void *)a2 + 1);
            if (v345 <= 0xFFFFFFFFFFFFFFF7 && v345 + 8 <= *((void *)a2 + 2))
            {
              *(v247 - 1) = *(void *)(*(void *)a2 + v345);
LABEL_519:
              uint64_t v346 = *((void *)a2 + 1) + 8;
              goto LABEL_539;
            }
            goto LABEL_536;
          case 5u:
            if (v20 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v49 = *((void *)a2 + 1);
              unint64_t v50 = *((void *)a2 + 2);
              while (v49 < v50 && !*((unsigned char *)a2 + 24))
              {
                uint64_t v52 = (char *)*((void *)this + 8);
                unint64_t v51 = *((void *)this + 9);
                if ((unint64_t)v52 >= v51)
                {
                  char v54 = (char *)*((void *)this + 7);
                  uint64_t v55 = (v52 - v54) >> 2;
                  unint64_t v56 = v55 + 1;
                  if ((unint64_t)(v55 + 1) >> 62) {
                    goto LABEL_544;
                  }
                  uint64_t v57 = v51 - (void)v54;
                  if (v57 >> 1 > v56) {
                    unint64_t v56 = v57 >> 1;
                  }
                  BOOL v43 = (unint64_t)v57 >= 0x7FFFFFFFFFFFFFFCLL;
                  unint64_t v58 = 0x3FFFFFFFFFFFFFFFLL;
                  if (!v43) {
                    unint64_t v58 = v56;
                  }
                  if (v58)
                  {
                    unint64_t v58 = (unint64_t)sub_2572C76F0(v58);
                    char v54 = (char *)*((void *)this + 7);
                    uint64_t v52 = (char *)*((void *)this + 8);
                  }
                  else
                  {
                    uint64_t v59 = 0;
                  }
                  unint64_t v60 = (_DWORD *)(v58 + 4 * v55);
                  *unint64_t v60 = 0;
                  char v53 = v60 + 1;
                  while (v52 != v54)
                  {
                    int v61 = *((_DWORD *)v52 - 1);
                    v52 -= 4;
                    *--unint64_t v60 = v61;
                  }
                  *((void *)this + 7) = v60;
                  *((void *)this + 8) = v53;
                  *((void *)this + 9) = v58 + 4 * v59;
                  if (v54) {
                    operator delete(v54);
                  }
                }
                else
                {
                  *(_DWORD *)uint64_t v52 = 0;
                  char v53 = v52 + 4;
                }
                *((void *)this + 8) = v53;
                unint64_t v62 = *((void *)a2 + 1);
                if (v62 > 0xFFFFFFFFFFFFFFFBLL || v62 + 4 > *((void *)a2 + 2)) {
                  goto LABEL_411;
                }
                *(v53 - 1) = *(_DWORD *)(*(void *)a2 + v62);
                unint64_t v50 = *((void *)a2 + 2);
                unint64_t v49 = *((void *)a2 + 1) + 4;
                *((void *)a2 + 1) = v49;
              }
              goto LABEL_412;
            }
            char v249 = (char *)*((void *)this + 8);
            unint64_t v248 = *((void *)this + 9);
            if ((unint64_t)v249 >= v248)
            {
              int v331 = (char *)*((void *)this + 7);
              uint64_t v332 = (v249 - v331) >> 2;
              unint64_t v333 = v332 + 1;
              if ((unint64_t)(v332 + 1) >> 62) {
                goto LABEL_544;
              }
              uint64_t v334 = v248 - (void)v331;
              if (v334 >> 1 > v333) {
                unint64_t v333 = v334 >> 1;
              }
              BOOL v43 = (unint64_t)v334 >= 0x7FFFFFFFFFFFFFFCLL;
              unint64_t v335 = 0x3FFFFFFFFFFFFFFFLL;
              if (!v43) {
                unint64_t v335 = v333;
              }
              if (v335)
              {
                unint64_t v335 = (unint64_t)sub_2572C76F0(v335);
                int v331 = (char *)*((void *)this + 7);
                char v249 = (char *)*((void *)this + 8);
              }
              else
              {
                uint64_t v336 = 0;
              }
              unint64_t v347 = (_DWORD *)(v335 + 4 * v332);
              *unint64_t v347 = 0;
              uint64_t v250 = v347 + 1;
              while (v249 != v331)
              {
                int v348 = *((_DWORD *)v249 - 1);
                v249 -= 4;
                *--unint64_t v347 = v348;
              }
              *((void *)this + 7) = v347;
              *((void *)this + 8) = v250;
              *((void *)this + 9) = v335 + 4 * v336;
              if (v331) {
                operator delete(v331);
              }
            }
            else
            {
              *(_DWORD *)char v249 = 0;
              uint64_t v250 = v249 + 4;
            }
            *((void *)this + 8) = v250;
            goto LABEL_534;
          case 6u:
            if (v20 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v63 = *((void *)a2 + 1);
              unint64_t v64 = *((void *)a2 + 2);
              while (v63 < v64 && !*((unsigned char *)a2 + 24))
              {
                char v66 = (char *)*((void *)this + 5);
                unint64_t v65 = *((void *)this + 6);
                if ((unint64_t)v66 >= v65)
                {
                  unint64_t v68 = (char *)*((void *)this + 4);
                  uint64_t v69 = (v66 - v68) >> 2;
                  unint64_t v70 = v69 + 1;
                  if ((unint64_t)(v69 + 1) >> 62) {
                    goto LABEL_544;
                  }
                  uint64_t v71 = v65 - (void)v68;
                  if (v71 >> 1 > v70) {
                    unint64_t v70 = v71 >> 1;
                  }
                  BOOL v43 = (unint64_t)v71 >= 0x7FFFFFFFFFFFFFFCLL;
                  unint64_t v72 = 0x3FFFFFFFFFFFFFFFLL;
                  if (!v43) {
                    unint64_t v72 = v70;
                  }
                  if (v72)
                  {
                    unint64_t v72 = (unint64_t)sub_2572C76F0(v72);
                    unint64_t v68 = (char *)*((void *)this + 4);
                    char v66 = (char *)*((void *)this + 5);
                  }
                  else
                  {
                    uint64_t v73 = 0;
                  }
                  unint64_t v74 = (_DWORD *)(v72 + 4 * v69);
                  *unint64_t v74 = 0;
                  unsigned int v67 = v74 + 1;
                  while (v66 != v68)
                  {
                    int v75 = *((_DWORD *)v66 - 1);
                    v66 -= 4;
                    *--unint64_t v74 = v75;
                  }
                  *((void *)this + 4) = v74;
                  *((void *)this + 5) = v67;
                  *((void *)this + 6) = v72 + 4 * v73;
                  if (v68) {
                    operator delete(v68);
                  }
                }
                else
                {
                  *(_DWORD *)char v66 = 0;
                  unsigned int v67 = v66 + 4;
                }
                *((void *)this + 5) = v67;
                unint64_t v76 = *((void *)a2 + 1);
                if (v76 > 0xFFFFFFFFFFFFFFFBLL || v76 + 4 > *((void *)a2 + 2))
                {
LABEL_411:
                  *((unsigned char *)a2 + 24) = 1;
                  break;
                }
                *(v67 - 1) = *(_DWORD *)(*(void *)a2 + v76);
                unint64_t v64 = *((void *)a2 + 2);
                unint64_t v63 = *((void *)a2 + 1) + 4;
                *((void *)a2 + 1) = v63;
              }
LABEL_412:
              PB::Reader::recallMark();
            }
            else
            {
              char v252 = (char *)*((void *)this + 5);
              unint64_t v251 = *((void *)this + 6);
              if ((unint64_t)v252 >= v251)
              {
                unint64_t v337 = (char *)*((void *)this + 4);
                uint64_t v338 = (v252 - v337) >> 2;
                unint64_t v339 = v338 + 1;
                if ((unint64_t)(v338 + 1) >> 62) {
LABEL_544:
                }
                  sub_2570AFD0C();
                uint64_t v340 = v251 - (void)v337;
                if (v340 >> 1 > v339) {
                  unint64_t v339 = v340 >> 1;
                }
                BOOL v43 = (unint64_t)v340 >= 0x7FFFFFFFFFFFFFFCLL;
                unint64_t v341 = 0x3FFFFFFFFFFFFFFFLL;
                if (!v43) {
                  unint64_t v341 = v339;
                }
                if (v341)
                {
                  unint64_t v341 = (unint64_t)sub_2572C76F0(v341);
                  unint64_t v337 = (char *)*((void *)this + 4);
                  char v252 = (char *)*((void *)this + 5);
                }
                else
                {
                  uint64_t v342 = 0;
                }
                unint64_t v349 = (_DWORD *)(v341 + 4 * v338);
                *unint64_t v349 = 0;
                uint64_t v250 = v349 + 1;
                while (v252 != v337)
                {
                  int v350 = *((_DWORD *)v252 - 1);
                  v252 -= 4;
                  *--unint64_t v349 = v350;
                }
                *((void *)this + 4) = v349;
                *((void *)this + 5) = v250;
                *((void *)this + 6) = v341 + 4 * v342;
                if (v337) {
                  operator delete(v337);
                }
              }
              else
              {
                *(_DWORD *)char v252 = 0;
                uint64_t v250 = v252 + 4;
              }
              *((void *)this + 5) = v250;
LABEL_534:
              unint64_t v351 = *((void *)a2 + 1);
              if (v351 <= 0xFFFFFFFFFFFFFFFBLL && v351 + 4 <= *((void *)a2 + 2))
              {
                *(v250 - 1) = *(_DWORD *)(*(void *)a2 + v351);
LABEL_538:
                uint64_t v346 = *((void *)a2 + 1) + 4;
LABEL_539:
                *((void *)a2 + 1) = v346;
              }
              else
              {
LABEL_536:
                *((unsigned char *)a2 + 24) = 1;
              }
            }
LABEL_20:
            unint64_t v2 = *((void *)a2 + 1);
            unint64_t v3 = *((void *)a2 + 2);
            int v4 = *((unsigned __int8 *)a2 + 24);
            if (v2 >= v3 || v4 != 0) {
              return v4 == 0;
            }
            continue;
          case 7u:
            *((_DWORD *)this + 53) |= 0x10000000u;
            unint64_t v77 = *((void *)a2 + 1);
            if (v77 >= *((void *)a2 + 2))
            {
              BOOL v80 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v78 = v77 + 1;
              int v79 = *(unsigned __int8 *)(*(void *)a2 + v77);
              *((void *)a2 + 1) = v78;
              BOOL v80 = v79 != 0;
            }
            *((unsigned char *)this + 208) = v80;
            goto LABEL_20;
          case 8u:
            *((_DWORD *)this + 53) |= 0x20000000u;
            unint64_t v81 = *((void *)a2 + 1);
            if (v81 >= *((void *)a2 + 2))
            {
              BOOL v84 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v82 = v81 + 1;
              int v83 = *(unsigned __int8 *)(*(void *)a2 + v81);
              *((void *)a2 + 1) = v82;
              BOOL v84 = v83 != 0;
            }
            *((unsigned char *)this + 209) = v84;
            goto LABEL_20;
          case 9u:
            *((_DWORD *)this + 53) |= 0x400000u;
            unint64_t v85 = *((void *)a2 + 1);
            unint64_t v86 = *((void *)a2 + 2);
            uint64_t v87 = *(void *)a2;
            if (v85 <= 0xFFFFFFFFFFFFFFF5 && v85 + 10 <= v86)
            {
              char v88 = 0;
              unsigned int v89 = 0;
              uint64_t v90 = 0;
              do
              {
                unint64_t v91 = v85 + 1;
                *((void *)a2 + 1) = v85 + 1;
                char v92 = *(unsigned char *)(v87 + v85);
                v90 |= (unint64_t)(v92 & 0x7F) << v88;
                if ((v92 & 0x80) == 0) {
                  goto LABEL_458;
                }
                v88 += 7;
                unint64_t v85 = v91;
                BOOL v14 = v89++ > 8;
              }
              while (!v14);
LABEL_289:
              LODWORD(v90) = 0;
              goto LABEL_458;
            }
            char v253 = 0;
            unsigned int v254 = 0;
            uint64_t v90 = 0;
            if (v86 <= v85) {
              unint64_t v86 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v86 == v85)
              {
                LODWORD(v90) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v255 = v85 + 1;
                char v256 = *(unsigned char *)(v87 + v85);
                *((void *)a2 + 1) = v255;
                v90 |= (unint64_t)(v256 & 0x7F) << v253;
                if (v256 < 0)
                {
                  v253 += 7;
                  unint64_t v85 = v255;
                  BOOL v14 = v254++ > 8;
                  if (v14) {
                    goto LABEL_289;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v90) = 0;
                }
              }
              break;
            }
LABEL_458:
            *((_DWORD *)this + 46) = v90;
            goto LABEL_20;
          case 0xAu:
            *((_DWORD *)this + 53) |= 0x10u;
            unint64_t v93 = *((void *)a2 + 1);
            if (v93 > 0xFFFFFFFFFFFFFFFBLL || v93 + 4 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((_DWORD *)this + 28) = *(_DWORD *)(*(void *)a2 + v93);
            goto LABEL_538;
          case 0xBu:
            *((_DWORD *)this + 53) |= 0x80000u;
            unint64_t v94 = *((void *)a2 + 1);
            unint64_t v95 = *((void *)a2 + 2);
            uint64_t v96 = *(void *)a2;
            if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v95)
            {
              char v97 = 0;
              unsigned int v98 = 0;
              uint64_t v99 = 0;
              do
              {
                unint64_t v100 = v94 + 1;
                *((void *)a2 + 1) = v94 + 1;
                char v101 = *(unsigned char *)(v96 + v94);
                v99 |= (unint64_t)(v101 & 0x7F) << v97;
                if ((v101 & 0x80) == 0) {
                  goto LABEL_461;
                }
                v97 += 7;
                unint64_t v94 = v100;
                BOOL v14 = v98++ > 8;
              }
              while (!v14);
LABEL_296:
              LODWORD(v99) = 0;
              goto LABEL_461;
            }
            char v257 = 0;
            unsigned int v258 = 0;
            uint64_t v99 = 0;
            if (v95 <= v94) {
              unint64_t v95 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v95 == v94)
              {
                LODWORD(v99) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v259 = v94 + 1;
                char v260 = *(unsigned char *)(v96 + v94);
                *((void *)a2 + 1) = v259;
                v99 |= (unint64_t)(v260 & 0x7F) << v257;
                if (v260 < 0)
                {
                  v257 += 7;
                  unint64_t v94 = v259;
                  BOOL v14 = v258++ > 8;
                  if (v14) {
                    goto LABEL_296;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v99) = 0;
                }
              }
              break;
            }
LABEL_461:
            *((_DWORD *)this + 43) = v99;
            goto LABEL_20;
          case 0xCu:
            *((_DWORD *)this + 53) |= 0x40000u;
            unint64_t v102 = *((void *)a2 + 1);
            unint64_t v103 = *((void *)a2 + 2);
            uint64_t v104 = *(void *)a2;
            if (v102 <= 0xFFFFFFFFFFFFFFF5 && v102 + 10 <= v103)
            {
              char v105 = 0;
              unsigned int v106 = 0;
              uint64_t v107 = 0;
              do
              {
                unint64_t v108 = v102 + 1;
                *((void *)a2 + 1) = v102 + 1;
                char v109 = *(unsigned char *)(v104 + v102);
                v107 |= (unint64_t)(v109 & 0x7F) << v105;
                if ((v109 & 0x80) == 0) {
                  goto LABEL_464;
                }
                v105 += 7;
                unint64_t v102 = v108;
                BOOL v14 = v106++ > 8;
              }
              while (!v14);
LABEL_303:
              LODWORD(v107) = 0;
              goto LABEL_464;
            }
            char v261 = 0;
            unsigned int v262 = 0;
            uint64_t v107 = 0;
            if (v103 <= v102) {
              unint64_t v103 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v103 == v102)
              {
                LODWORD(v107) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v263 = v102 + 1;
                char v264 = *(unsigned char *)(v104 + v102);
                *((void *)a2 + 1) = v263;
                v107 |= (unint64_t)(v264 & 0x7F) << v261;
                if (v264 < 0)
                {
                  v261 += 7;
                  unint64_t v102 = v263;
                  BOOL v14 = v262++ > 8;
                  if (v14) {
                    goto LABEL_303;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v107) = 0;
                }
              }
              break;
            }
LABEL_464:
            *((_DWORD *)this + 42) = v107;
            goto LABEL_20;
          case 0xDu:
            *((_DWORD *)this + 53) |= 0x20000u;
            unint64_t v110 = *((void *)a2 + 1);
            unint64_t v111 = *((void *)a2 + 2);
            uint64_t v112 = *(void *)a2;
            if (v110 <= 0xFFFFFFFFFFFFFFF5 && v110 + 10 <= v111)
            {
              char v113 = 0;
              unsigned int v114 = 0;
              uint64_t v115 = 0;
              do
              {
                unint64_t v116 = v110 + 1;
                *((void *)a2 + 1) = v110 + 1;
                char v117 = *(unsigned char *)(v112 + v110);
                v115 |= (unint64_t)(v117 & 0x7F) << v113;
                if ((v117 & 0x80) == 0) {
                  goto LABEL_467;
                }
                v113 += 7;
                unint64_t v110 = v116;
                BOOL v14 = v114++ > 8;
              }
              while (!v14);
LABEL_310:
              LODWORD(v115) = 0;
              goto LABEL_467;
            }
            char v265 = 0;
            unsigned int v266 = 0;
            uint64_t v115 = 0;
            if (v111 <= v110) {
              unint64_t v111 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v111 == v110)
              {
                LODWORD(v115) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v267 = v110 + 1;
                char v268 = *(unsigned char *)(v112 + v110);
                *((void *)a2 + 1) = v267;
                v115 |= (unint64_t)(v268 & 0x7F) << v265;
                if (v268 < 0)
                {
                  v265 += 7;
                  unint64_t v110 = v267;
                  BOOL v14 = v266++ > 8;
                  if (v14) {
                    goto LABEL_310;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v115) = 0;
                }
              }
              break;
            }
LABEL_467:
            *((_DWORD *)this + 41) = v115;
            goto LABEL_20;
          case 0xEu:
            *((_DWORD *)this + 53) |= 0x10000u;
            unint64_t v118 = *((void *)a2 + 1);
            unint64_t v119 = *((void *)a2 + 2);
            uint64_t v120 = *(void *)a2;
            if (v118 <= 0xFFFFFFFFFFFFFFF5 && v118 + 10 <= v119)
            {
              char v121 = 0;
              unsigned int v122 = 0;
              uint64_t v123 = 0;
              do
              {
                unint64_t v124 = v118 + 1;
                *((void *)a2 + 1) = v118 + 1;
                char v125 = *(unsigned char *)(v120 + v118);
                v123 |= (unint64_t)(v125 & 0x7F) << v121;
                if ((v125 & 0x80) == 0) {
                  goto LABEL_470;
                }
                v121 += 7;
                unint64_t v118 = v124;
                BOOL v14 = v122++ > 8;
              }
              while (!v14);
LABEL_317:
              LODWORD(v123) = 0;
              goto LABEL_470;
            }
            char v269 = 0;
            unsigned int v270 = 0;
            uint64_t v123 = 0;
            if (v119 <= v118) {
              unint64_t v119 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v119 == v118)
              {
                LODWORD(v123) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v271 = v118 + 1;
                char v272 = *(unsigned char *)(v120 + v118);
                *((void *)a2 + 1) = v271;
                v123 |= (unint64_t)(v272 & 0x7F) << v269;
                if (v272 < 0)
                {
                  v269 += 7;
                  unint64_t v118 = v271;
                  BOOL v14 = v270++ > 8;
                  if (v14) {
                    goto LABEL_317;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v123) = 0;
                }
              }
              break;
            }
LABEL_470:
            *((_DWORD *)this + 40) = v123;
            goto LABEL_20;
          case 0xFu:
            *((_DWORD *)this + 53) |= 0x8000u;
            unint64_t v126 = *((void *)a2 + 1);
            unint64_t v127 = *((void *)a2 + 2);
            uint64_t v128 = *(void *)a2;
            if (v126 <= 0xFFFFFFFFFFFFFFF5 && v126 + 10 <= v127)
            {
              char v129 = 0;
              unsigned int v130 = 0;
              uint64_t v131 = 0;
              do
              {
                unint64_t v132 = v126 + 1;
                *((void *)a2 + 1) = v126 + 1;
                char v133 = *(unsigned char *)(v128 + v126);
                v131 |= (unint64_t)(v133 & 0x7F) << v129;
                if ((v133 & 0x80) == 0) {
                  goto LABEL_473;
                }
                v129 += 7;
                unint64_t v126 = v132;
                BOOL v14 = v130++ > 8;
              }
              while (!v14);
LABEL_324:
              LODWORD(v131) = 0;
              goto LABEL_473;
            }
            char v273 = 0;
            unsigned int v274 = 0;
            uint64_t v131 = 0;
            if (v127 <= v126) {
              unint64_t v127 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v127 == v126)
              {
                LODWORD(v131) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v275 = v126 + 1;
                char v276 = *(unsigned char *)(v128 + v126);
                *((void *)a2 + 1) = v275;
                v131 |= (unint64_t)(v276 & 0x7F) << v273;
                if (v276 < 0)
                {
                  v273 += 7;
                  unint64_t v126 = v275;
                  BOOL v14 = v274++ > 8;
                  if (v14) {
                    goto LABEL_324;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v131) = 0;
                }
              }
              break;
            }
LABEL_473:
            *((_DWORD *)this + 39) = v131;
            goto LABEL_20;
          case 0x10u:
            *((_DWORD *)this + 53) |= 0x4000u;
            unint64_t v134 = *((void *)a2 + 1);
            unint64_t v135 = *((void *)a2 + 2);
            uint64_t v136 = *(void *)a2;
            if (v134 <= 0xFFFFFFFFFFFFFFF5 && v134 + 10 <= v135)
            {
              char v137 = 0;
              unsigned int v138 = 0;
              uint64_t v139 = 0;
              do
              {
                unint64_t v140 = v134 + 1;
                *((void *)a2 + 1) = v134 + 1;
                char v141 = *(unsigned char *)(v136 + v134);
                v139 |= (unint64_t)(v141 & 0x7F) << v137;
                if ((v141 & 0x80) == 0) {
                  goto LABEL_476;
                }
                v137 += 7;
                unint64_t v134 = v140;
                BOOL v14 = v138++ > 8;
              }
              while (!v14);
LABEL_331:
              LODWORD(v139) = 0;
              goto LABEL_476;
            }
            char v277 = 0;
            unsigned int v278 = 0;
            uint64_t v139 = 0;
            if (v135 <= v134) {
              unint64_t v135 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v135 == v134)
              {
                LODWORD(v139) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v279 = v134 + 1;
                char v280 = *(unsigned char *)(v136 + v134);
                *((void *)a2 + 1) = v279;
                v139 |= (unint64_t)(v280 & 0x7F) << v277;
                if (v280 < 0)
                {
                  v277 += 7;
                  unint64_t v134 = v279;
                  BOOL v14 = v278++ > 8;
                  if (v14) {
                    goto LABEL_331;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v139) = 0;
                }
              }
              break;
            }
LABEL_476:
            *((_DWORD *)this + 38) = v139;
            goto LABEL_20;
          case 0x11u:
            *((_DWORD *)this + 53) |= 0x2000u;
            unint64_t v142 = *((void *)a2 + 1);
            unint64_t v143 = *((void *)a2 + 2);
            uint64_t v144 = *(void *)a2;
            if (v142 <= 0xFFFFFFFFFFFFFFF5 && v142 + 10 <= v143)
            {
              char v145 = 0;
              unsigned int v146 = 0;
              uint64_t v147 = 0;
              do
              {
                unint64_t v148 = v142 + 1;
                *((void *)a2 + 1) = v142 + 1;
                char v149 = *(unsigned char *)(v144 + v142);
                v147 |= (unint64_t)(v149 & 0x7F) << v145;
                if ((v149 & 0x80) == 0) {
                  goto LABEL_479;
                }
                v145 += 7;
                unint64_t v142 = v148;
                BOOL v14 = v146++ > 8;
              }
              while (!v14);
LABEL_338:
              LODWORD(v147) = 0;
              goto LABEL_479;
            }
            char v281 = 0;
            unsigned int v282 = 0;
            uint64_t v147 = 0;
            if (v143 <= v142) {
              unint64_t v143 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v143 == v142)
              {
                LODWORD(v147) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v283 = v142 + 1;
                char v284 = *(unsigned char *)(v144 + v142);
                *((void *)a2 + 1) = v283;
                v147 |= (unint64_t)(v284 & 0x7F) << v281;
                if (v284 < 0)
                {
                  v281 += 7;
                  unint64_t v142 = v283;
                  BOOL v14 = v282++ > 8;
                  if (v14) {
                    goto LABEL_338;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v147) = 0;
                }
              }
              break;
            }
LABEL_479:
            *((_DWORD *)this + 37) = v147;
            goto LABEL_20;
          case 0x12u:
            *((_DWORD *)this + 53) |= 0x100000u;
            unint64_t v150 = *((void *)a2 + 1);
            unint64_t v151 = *((void *)a2 + 2);
            uint64_t v152 = *(void *)a2;
            if (v150 <= 0xFFFFFFFFFFFFFFF5 && v150 + 10 <= v151)
            {
              char v153 = 0;
              unsigned int v154 = 0;
              uint64_t v155 = 0;
              do
              {
                unint64_t v156 = v150 + 1;
                *((void *)a2 + 1) = v150 + 1;
                char v157 = *(unsigned char *)(v152 + v150);
                v155 |= (unint64_t)(v157 & 0x7F) << v153;
                if ((v157 & 0x80) == 0) {
                  goto LABEL_482;
                }
                v153 += 7;
                unint64_t v150 = v156;
                BOOL v14 = v154++ > 8;
              }
              while (!v14);
LABEL_345:
              LODWORD(v155) = 0;
              goto LABEL_482;
            }
            char v285 = 0;
            unsigned int v286 = 0;
            uint64_t v155 = 0;
            if (v151 <= v150) {
              unint64_t v151 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v151 == v150)
              {
                LODWORD(v155) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v287 = v150 + 1;
                char v288 = *(unsigned char *)(v152 + v150);
                *((void *)a2 + 1) = v287;
                v155 |= (unint64_t)(v288 & 0x7F) << v285;
                if (v288 < 0)
                {
                  v285 += 7;
                  unint64_t v150 = v287;
                  BOOL v14 = v286++ > 8;
                  if (v14) {
                    goto LABEL_345;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v155) = 0;
                }
              }
              break;
            }
LABEL_482:
            *((_DWORD *)this + 44) = v155;
            goto LABEL_20;
          case 0x13u:
            *((_DWORD *)this + 53) |= 0x100u;
            unint64_t v158 = *((void *)a2 + 1);
            if (v158 > 0xFFFFFFFFFFFFFFFBLL || v158 + 4 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v158);
            goto LABEL_538;
          case 0x14u:
            *((_DWORD *)this + 53) |= 0x1000000u;
            unint64_t v159 = *((void *)a2 + 1);
            unint64_t v160 = *((void *)a2 + 2);
            uint64_t v161 = *(void *)a2;
            if (v159 <= 0xFFFFFFFFFFFFFFF5 && v159 + 10 <= v160)
            {
              char v162 = 0;
              unsigned int v163 = 0;
              uint64_t v164 = 0;
              do
              {
                unint64_t v165 = v159 + 1;
                *((void *)a2 + 1) = v159 + 1;
                char v166 = *(unsigned char *)(v161 + v159);
                v164 |= (unint64_t)(v166 & 0x7F) << v162;
                if ((v166 & 0x80) == 0) {
                  goto LABEL_485;
                }
                v162 += 7;
                unint64_t v159 = v165;
                BOOL v14 = v163++ > 8;
              }
              while (!v14);
LABEL_352:
              LODWORD(v164) = 0;
              goto LABEL_485;
            }
            char v289 = 0;
            unsigned int v290 = 0;
            uint64_t v164 = 0;
            if (v160 <= v159) {
              unint64_t v160 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v160 == v159)
              {
                LODWORD(v164) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v291 = v159 + 1;
                char v292 = *(unsigned char *)(v161 + v159);
                *((void *)a2 + 1) = v291;
                v164 |= (unint64_t)(v292 & 0x7F) << v289;
                if (v292 < 0)
                {
                  v289 += 7;
                  unint64_t v159 = v291;
                  BOOL v14 = v290++ > 8;
                  if (v14) {
                    goto LABEL_352;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v164) = 0;
                }
              }
              break;
            }
LABEL_485:
            *((_DWORD *)this + 48) = v164;
            goto LABEL_20;
          case 0x15u:
            *((_DWORD *)this + 53) |= 0x20u;
            unint64_t v167 = *((void *)a2 + 1);
            unint64_t v168 = *((void *)a2 + 2);
            uint64_t v169 = *(void *)a2;
            if (v167 <= 0xFFFFFFFFFFFFFFF5 && v167 + 10 <= v168)
            {
              char v170 = 0;
              unsigned int v171 = 0;
              uint64_t v172 = 0;
              do
              {
                unint64_t v173 = v167 + 1;
                *((void *)a2 + 1) = v167 + 1;
                char v174 = *(unsigned char *)(v169 + v167);
                v172 |= (unint64_t)(v174 & 0x7F) << v170;
                if ((v174 & 0x80) == 0) {
                  goto LABEL_488;
                }
                v170 += 7;
                unint64_t v167 = v173;
                BOOL v14 = v171++ > 8;
              }
              while (!v14);
LABEL_359:
              LODWORD(v172) = 0;
              goto LABEL_488;
            }
            char v293 = 0;
            unsigned int v294 = 0;
            uint64_t v172 = 0;
            if (v168 <= v167) {
              unint64_t v168 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v168 == v167)
              {
                LODWORD(v172) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v295 = v167 + 1;
                char v296 = *(unsigned char *)(v169 + v167);
                *((void *)a2 + 1) = v295;
                v172 |= (unint64_t)(v296 & 0x7F) << v293;
                if (v296 < 0)
                {
                  v293 += 7;
                  unint64_t v167 = v295;
                  BOOL v14 = v294++ > 8;
                  if (v14) {
                    goto LABEL_359;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v172) = 0;
                }
              }
              break;
            }
LABEL_488:
            *((_DWORD *)this + 29) = v172;
            goto LABEL_20;
          case 0x16u:
            *((_DWORD *)this + 53) |= 8u;
            unint64_t v175 = *((void *)a2 + 1);
            unint64_t v176 = *((void *)a2 + 2);
            uint64_t v177 = *(void *)a2;
            if (v175 <= 0xFFFFFFFFFFFFFFF5 && v175 + 10 <= v176)
            {
              char v178 = 0;
              unsigned int v179 = 0;
              uint64_t v180 = 0;
              do
              {
                unint64_t v181 = v175 + 1;
                *((void *)a2 + 1) = v175 + 1;
                char v182 = *(unsigned char *)(v177 + v175);
                v180 |= (unint64_t)(v182 & 0x7F) << v178;
                if ((v182 & 0x80) == 0) {
                  goto LABEL_491;
                }
                v178 += 7;
                unint64_t v175 = v181;
                BOOL v14 = v179++ > 8;
              }
              while (!v14);
LABEL_366:
              uint64_t v180 = 0;
              goto LABEL_491;
            }
            char v297 = 0;
            unsigned int v298 = 0;
            uint64_t v180 = 0;
            if (v176 <= v175) {
              unint64_t v176 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v176 == v175)
              {
                uint64_t v180 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v299 = v175 + 1;
                char v300 = *(unsigned char *)(v177 + v175);
                *((void *)a2 + 1) = v299;
                v180 |= (unint64_t)(v300 & 0x7F) << v297;
                if (v300 < 0)
                {
                  v297 += 7;
                  unint64_t v175 = v299;
                  BOOL v14 = v298++ > 8;
                  if (v14) {
                    goto LABEL_366;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v180 = 0;
                }
              }
              break;
            }
LABEL_491:
            *((void *)this + 13) = v180;
            goto LABEL_20;
          case 0x17u:
            *((_DWORD *)this + 53) |= 0x2000000u;
            unint64_t v183 = *((void *)a2 + 1);
            if (v183 > 0xFFFFFFFFFFFFFFFBLL || v183 + 4 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((_DWORD *)this + 49) = *(_DWORD *)(*(void *)a2 + v183);
            goto LABEL_538;
          case 0x18u:
            *((_DWORD *)this + 53) |= 0x4000000u;
            unint64_t v184 = *((void *)a2 + 1);
            if (v184 > 0xFFFFFFFFFFFFFFFBLL || v184 + 4 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((_DWORD *)this + 50) = *(_DWORD *)(*(void *)a2 + v184);
            goto LABEL_538;
          case 0x19u:
            *((_DWORD *)this + 53) |= 0x8000000u;
            unint64_t v185 = *((void *)a2 + 1);
            if (v185 > 0xFFFFFFFFFFFFFFFBLL || v185 + 4 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((_DWORD *)this + 51) = *(_DWORD *)(*(void *)a2 + v185);
            goto LABEL_538;
          case 0x1Au:
            *((_DWORD *)this + 53) |= 0x800u;
            unint64_t v186 = *((void *)a2 + 1);
            unint64_t v187 = *((void *)a2 + 2);
            uint64_t v188 = *(void *)a2;
            if (v186 <= 0xFFFFFFFFFFFFFFF5 && v186 + 10 <= v187)
            {
              char v189 = 0;
              unsigned int v190 = 0;
              uint64_t v191 = 0;
              do
              {
                unint64_t v192 = v186 + 1;
                *((void *)a2 + 1) = v186 + 1;
                char v193 = *(unsigned char *)(v188 + v186);
                v191 |= (unint64_t)(v193 & 0x7F) << v189;
                if ((v193 & 0x80) == 0) {
                  goto LABEL_494;
                }
                v189 += 7;
                unint64_t v186 = v192;
                BOOL v14 = v190++ > 8;
              }
              while (!v14);
LABEL_373:
              LODWORD(v191) = 0;
              goto LABEL_494;
            }
            char v301 = 0;
            unsigned int v302 = 0;
            uint64_t v191 = 0;
            if (v187 <= v186) {
              unint64_t v187 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v187 == v186)
              {
                LODWORD(v191) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v303 = v186 + 1;
                char v304 = *(unsigned char *)(v188 + v186);
                *((void *)a2 + 1) = v303;
                v191 |= (unint64_t)(v304 & 0x7F) << v301;
                if (v304 < 0)
                {
                  v301 += 7;
                  unint64_t v186 = v303;
                  BOOL v14 = v302++ > 8;
                  if (v14) {
                    goto LABEL_373;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v191) = 0;
                }
              }
              break;
            }
LABEL_494:
            *((_DWORD *)this + 35) = v191;
            goto LABEL_20;
          case 0x1Bu:
            *((_DWORD *)this + 53) |= 0x80u;
            unint64_t v194 = *((void *)a2 + 1);
            unint64_t v195 = *((void *)a2 + 2);
            uint64_t v196 = *(void *)a2;
            if (v194 <= 0xFFFFFFFFFFFFFFF5 && v194 + 10 <= v195)
            {
              char v197 = 0;
              unsigned int v198 = 0;
              uint64_t v199 = 0;
              do
              {
                unint64_t v200 = v194 + 1;
                *((void *)a2 + 1) = v194 + 1;
                char v201 = *(unsigned char *)(v196 + v194);
                v199 |= (unint64_t)(v201 & 0x7F) << v197;
                if ((v201 & 0x80) == 0) {
                  goto LABEL_497;
                }
                v197 += 7;
                unint64_t v194 = v200;
                BOOL v14 = v198++ > 8;
              }
              while (!v14);
LABEL_380:
              LODWORD(v199) = 0;
              goto LABEL_497;
            }
            char v305 = 0;
            unsigned int v306 = 0;
            uint64_t v199 = 0;
            if (v195 <= v194) {
              unint64_t v195 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v195 == v194)
              {
                LODWORD(v199) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v307 = v194 + 1;
                char v308 = *(unsigned char *)(v196 + v194);
                *((void *)a2 + 1) = v307;
                v199 |= (unint64_t)(v308 & 0x7F) << v305;
                if (v308 < 0)
                {
                  v305 += 7;
                  unint64_t v194 = v307;
                  BOOL v14 = v306++ > 8;
                  if (v14) {
                    goto LABEL_380;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v199) = 0;
                }
              }
              break;
            }
LABEL_497:
            *((_DWORD *)this + 31) = v199;
            goto LABEL_20;
          case 0x1Cu:
            *((_DWORD *)this + 53) |= 2u;
            unint64_t v202 = *((void *)a2 + 1);
            unint64_t v203 = *((void *)a2 + 2);
            uint64_t v204 = *(void *)a2;
            if (v202 <= 0xFFFFFFFFFFFFFFF5 && v202 + 10 <= v203)
            {
              char v205 = 0;
              unsigned int v206 = 0;
              uint64_t v207 = 0;
              do
              {
                unint64_t v208 = v202 + 1;
                *((void *)a2 + 1) = v202 + 1;
                char v209 = *(unsigned char *)(v204 + v202);
                v207 |= (unint64_t)(v209 & 0x7F) << v205;
                if ((v209 & 0x80) == 0) {
                  goto LABEL_500;
                }
                v205 += 7;
                unint64_t v202 = v208;
                BOOL v14 = v206++ > 8;
              }
              while (!v14);
LABEL_387:
              uint64_t v207 = 0;
              goto LABEL_500;
            }
            char v309 = 0;
            unsigned int v310 = 0;
            uint64_t v207 = 0;
            if (v203 <= v202) {
              unint64_t v203 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v203 == v202)
              {
                uint64_t v207 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v311 = v202 + 1;
                char v312 = *(unsigned char *)(v204 + v202);
                *((void *)a2 + 1) = v311;
                v207 |= (unint64_t)(v312 & 0x7F) << v309;
                if (v312 < 0)
                {
                  v309 += 7;
                  unint64_t v202 = v311;
                  BOOL v14 = v310++ > 8;
                  if (v14) {
                    goto LABEL_387;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v207 = 0;
                }
              }
              break;
            }
LABEL_500:
            *((void *)this + 11) = v207;
            goto LABEL_20;
          case 0x1Du:
            *((_DWORD *)this + 53) |= 0x40000000u;
            unint64_t v210 = *((void *)a2 + 1);
            if (v210 >= *((void *)a2 + 2))
            {
              BOOL v213 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v211 = v210 + 1;
              int v212 = *(unsigned __int8 *)(*(void *)a2 + v210);
              *((void *)a2 + 1) = v211;
              BOOL v213 = v212 != 0;
            }
            *((unsigned char *)this + 210) = v213;
            goto LABEL_20;
          case 0x1Eu:
            *((_DWORD *)this + 53) |= 0x1000u;
            unint64_t v214 = *((void *)a2 + 1);
            if (v214 > 0xFFFFFFFFFFFFFFFBLL || v214 + 4 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((_DWORD *)this + 36) = *(_DWORD *)(*(void *)a2 + v214);
            goto LABEL_538;
          case 0x1Fu:
            *((_DWORD *)this + 53) |= 0x200u;
            unint64_t v215 = *((void *)a2 + 1);
            if (v215 > 0xFFFFFFFFFFFFFFFBLL || v215 + 4 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v215);
            goto LABEL_538;
          case 0x20u:
            *((_DWORD *)this + 53) |= 0x40u;
            unint64_t v216 = *((void *)a2 + 1);
            if (v216 > 0xFFFFFFFFFFFFFFFBLL || v216 + 4 > *((void *)a2 + 2)) {
              goto LABEL_536;
            }
            *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v216);
            goto LABEL_538;
          case 0x21u:
            *((_DWORD *)this + 53) |= 0x200000u;
            unint64_t v217 = *((void *)a2 + 1);
            unint64_t v218 = *((void *)a2 + 2);
            uint64_t v219 = *(void *)a2;
            if (v217 <= 0xFFFFFFFFFFFFFFF5 && v217 + 10 <= v218)
            {
              char v220 = 0;
              unsigned int v221 = 0;
              uint64_t v222 = 0;
              do
              {
                unint64_t v223 = v217 + 1;
                *((void *)a2 + 1) = v217 + 1;
                char v224 = *(unsigned char *)(v219 + v217);
                v222 |= (unint64_t)(v224 & 0x7F) << v220;
                if ((v224 & 0x80) == 0) {
                  goto LABEL_503;
                }
                v220 += 7;
                unint64_t v217 = v223;
                BOOL v14 = v221++ > 8;
              }
              while (!v14);
LABEL_396:
              LODWORD(v222) = 0;
              goto LABEL_503;
            }
            char v313 = 0;
            unsigned int v314 = 0;
            uint64_t v222 = 0;
            if (v218 <= v217) {
              unint64_t v218 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v218 == v217)
              {
                LODWORD(v222) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v315 = v217 + 1;
                char v316 = *(unsigned char *)(v219 + v217);
                *((void *)a2 + 1) = v315;
                v222 |= (unint64_t)(v316 & 0x7F) << v313;
                if (v316 < 0)
                {
                  v313 += 7;
                  unint64_t v217 = v315;
                  BOOL v14 = v314++ > 8;
                  if (v14) {
                    goto LABEL_396;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v222) = 0;
                }
              }
              break;
            }
LABEL_503:
            *((_DWORD *)this + 45) = v222;
            goto LABEL_20;
          case 0x22u:
            *((_DWORD *)this + 53) |= 0x400u;
            unint64_t v225 = *((void *)a2 + 1);
            unint64_t v226 = *((void *)a2 + 2);
            uint64_t v227 = *(void *)a2;
            if (v225 <= 0xFFFFFFFFFFFFFFF5 && v225 + 10 <= v226)
            {
              char v228 = 0;
              unsigned int v229 = 0;
              uint64_t v230 = 0;
              do
              {
                unint64_t v231 = v225 + 1;
                *((void *)a2 + 1) = v225 + 1;
                char v232 = *(unsigned char *)(v227 + v225);
                v230 |= (unint64_t)(v232 & 0x7F) << v228;
                if ((v232 & 0x80) == 0) {
                  goto LABEL_506;
                }
                v228 += 7;
                unint64_t v225 = v231;
                BOOL v14 = v229++ > 8;
              }
              while (!v14);
LABEL_403:
              LODWORD(v230) = 0;
              goto LABEL_506;
            }
            char v317 = 0;
            unsigned int v318 = 0;
            uint64_t v230 = 0;
            if (v226 <= v225) {
              unint64_t v226 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v226 == v225)
              {
                LODWORD(v230) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v319 = v225 + 1;
                char v320 = *(unsigned char *)(v227 + v225);
                *((void *)a2 + 1) = v319;
                v230 |= (unint64_t)(v320 & 0x7F) << v317;
                if (v320 < 0)
                {
                  v317 += 7;
                  unint64_t v225 = v319;
                  BOOL v14 = v318++ > 8;
                  if (v14) {
                    goto LABEL_403;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v230) = 0;
                }
              }
              break;
            }
LABEL_506:
            *((_DWORD *)this + 34) = v230;
            goto LABEL_20;
          case 0x23u:
            *((_DWORD *)this + 53) |= 0x800000u;
            unint64_t v233 = *((void *)a2 + 1);
            unint64_t v234 = *((void *)a2 + 2);
            uint64_t v235 = *(void *)a2;
            if (v233 <= 0xFFFFFFFFFFFFFFF5 && v233 + 10 <= v234)
            {
              char v236 = 0;
              unsigned int v237 = 0;
              uint64_t v238 = 0;
              do
              {
                unint64_t v239 = v233 + 1;
                *((void *)a2 + 1) = v233 + 1;
                char v240 = *(unsigned char *)(v235 + v233);
                v238 |= (unint64_t)(v240 & 0x7F) << v236;
                if ((v240 & 0x80) == 0) {
                  goto LABEL_509;
                }
                v236 += 7;
                unint64_t v233 = v239;
                BOOL v14 = v237++ > 8;
              }
              while (!v14);
LABEL_410:
              LODWORD(v238) = 0;
              goto LABEL_509;
            }
            char v321 = 0;
            unsigned int v322 = 0;
            uint64_t v238 = 0;
            if (v234 <= v233) {
              unint64_t v234 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v234 == v233)
              {
                LODWORD(v238) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v323 = v233 + 1;
                char v324 = *(unsigned char *)(v235 + v233);
                *((void *)a2 + 1) = v323;
                v238 |= (unint64_t)(v324 & 0x7F) << v321;
                if (v324 < 0)
                {
                  v321 += 7;
                  unint64_t v233 = v323;
                  BOOL v14 = v322++ > 8;
                  if (v14) {
                    goto LABEL_410;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v238) = 0;
                }
              }
              break;
            }
LABEL_509:
            *((_DWORD *)this + 47) = v238;
            goto LABEL_20;
          default:
            goto LABEL_19;
        }
      }
      int v4 = 0;
      return v4 == 0;
    }
    break;
  }
  char v15 = 0;
  unsigned int v16 = 0;
  unint64_t v11 = 0;
  if (v2 > v3) {
    unint64_t v3 = v2;
  }
  do
  {
    if (v3 == v2)
    {
      int v4 = 1;
      *((unsigned char *)a2 + 24) = 1;
      return v4 == 0;
    }
    unint64_t v17 = v2 + 1;
    char v18 = *(unsigned char *)(v8 + v2);
    *((void *)a2 + 1) = v17;
    v11 |= (unint64_t)(v18 & 0x7F) << v15;
    if ((v18 & 0x80) == 0) {
      goto LABEL_25;
    }
    v15 += 7;
    unint64_t v2 = v17;
    BOOL v14 = v16++ > 8;
  }
  while (!v14);
LABEL_19:
  if (PB::Reader::skip(a2)) {
    goto LABEL_20;
  }
  return 0;
}

uint64_t CMMsl::KappaTrigger::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 212);
  if ((v4 & 4) == 0)
  {
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_45:
    this = PB::Writer::write(a2);
    if ((*(_DWORD *)(v3 + 212) & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = PB::Writer::writeVarInt(a2);
  int v4 = *(_DWORD *)(v3 + 212);
  if (v4 < 0) {
    goto LABEL_45;
  }
LABEL_3:
  if (v4) {
LABEL_4:
  }
    this = PB::Writer::write(a2, *(double *)(v3 + 80));
LABEL_5:
  int v5 = *(double **)(v3 + 8);
  uint64_t v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    this = PB::Writer::write(a2, v7);
  }
  uint64_t v8 = *(float **)(v3 + 56);
  char v9 = *(float **)(v3 + 64);
  while (v8 != v9)
  {
    float v10 = *v8++;
    this = PB::Writer::write(a2, v10);
  }
  unint64_t v11 = *(float **)(v3 + 32);
  unint64_t v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    this = PB::Writer::write(a2, v13);
  }
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10000000) != 0)
  {
    this = PB::Writer::write(a2);
    int v14 = *(_DWORD *)(v3 + 212);
    if ((v14 & 0x20000000) == 0)
    {
LABEL_16:
      if ((v14 & 0x400000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_49;
    }
  }
  else if ((v14 & 0x20000000) == 0)
  {
    goto LABEL_16;
  }
  this = PB::Writer::write(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x400000) == 0)
  {
LABEL_17:
    if ((v14 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10) == 0)
  {
LABEL_18:
    if ((v14 & 0x80000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = PB::Writer::write(a2, *(float *)(v3 + 112));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x80000) == 0)
  {
LABEL_19:
    if ((v14 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40000) == 0)
  {
LABEL_20:
    if ((v14 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x20000) == 0)
  {
LABEL_21:
    if ((v14 & 0x10000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x10000) == 0)
  {
LABEL_22:
    if ((v14 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x8000) == 0)
  {
LABEL_23:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x4000) == 0)
  {
LABEL_24:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x2000) == 0)
  {
LABEL_25:
    if ((v14 & 0x100000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x100000) == 0)
  {
LABEL_26:
    if ((v14 & 0x100) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x100) == 0)
  {
LABEL_27:
    if ((v14 & 0x1000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x1000000) == 0)
  {
LABEL_28:
    if ((v14 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x20) == 0)
  {
LABEL_29:
    if ((v14 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_62;
  }
LABEL_61:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 8) == 0)
  {
LABEL_30:
    if ((v14 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_63;
  }
LABEL_62:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v14 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_64;
  }
LABEL_63:
  this = PB::Writer::write(a2, *(float *)(v3 + 196));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x4000000) == 0)
  {
LABEL_32:
    if ((v14 & 0x8000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_65;
  }
LABEL_64:
  this = PB::Writer::write(a2, *(float *)(v3 + 200));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x8000000) == 0)
  {
LABEL_33:
    if ((v14 & 0x800) == 0) {
      goto LABEL_34;
    }
    goto LABEL_66;
  }
LABEL_65:
  this = PB::Writer::write(a2, *(float *)(v3 + 204));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x800) == 0)
  {
LABEL_34:
    if ((v14 & 0x80) == 0) {
      goto LABEL_35;
    }
    goto LABEL_67;
  }
LABEL_66:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x80) == 0)
  {
LABEL_35:
    if ((v14 & 2) == 0) {
      goto LABEL_36;
    }
    goto LABEL_68;
  }
LABEL_67:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 2) == 0)
  {
LABEL_36:
    if ((v14 & 0x40000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_69;
  }
LABEL_68:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40000000) == 0)
  {
LABEL_37:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_69:
  this = PB::Writer::write(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x1000) == 0)
  {
LABEL_38:
    if ((v14 & 0x200) == 0) {
      goto LABEL_39;
    }
    goto LABEL_71;
  }
LABEL_70:
  this = PB::Writer::write(a2, *(float *)(v3 + 144));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x200) == 0)
  {
LABEL_39:
    if ((v14 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_72;
  }
LABEL_71:
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x40) == 0)
  {
LABEL_40:
    if ((v14 & 0x200000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_73;
  }
LABEL_72:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x200000) == 0)
  {
LABEL_41:
    if ((v14 & 0x400) == 0) {
      goto LABEL_42;
    }
LABEL_74:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_DWORD *)(v3 + 212) & 0x800000) == 0) {
      return this;
    }
    goto LABEL_75;
  }
LABEL_73:
  this = PB::Writer::writeVarInt(a2);
  int v14 = *(_DWORD *)(v3 + 212);
  if ((v14 & 0x400) != 0) {
    goto LABEL_74;
  }
LABEL_42:
  if ((v14 & 0x800000) == 0) {
    return this;
  }
LABEL_75:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaTrigger::hash_value(CMMsl::KappaTrigger *this)
{
  int v2 = *((_DWORD *)this + 53);
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = *((void *)this + 12);
    if (v2 < 0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if (v2 < 0)
    {
LABEL_3:
      uint64_t v4 = *((unsigned __int8 *)this + 211);
      goto LABEL_6;
    }
  }
  uint64_t v4 = 0;
LABEL_6:
  uint64_t v52 = v4;
  if (v2)
  {
    double v5 = *((double *)this + 10);
    if (v5 == 0.0) {
      double v5 = 0.0;
    }
    double v50 = v5;
  }
  else
  {
    double v50 = 0.0;
  }
  uint64_t v6 = PBHashBytes();
  uint64_t v7 = PBHashBytes();
  uint64_t v8 = PBHashBytes();
  int v9 = *((_DWORD *)this + 53);
  uint64_t v51 = v8;
  if ((v9 & 0x10000000) != 0) {
    uint64_t v49 = *((unsigned __int8 *)this + 208);
  }
  else {
    uint64_t v49 = 0;
  }
  uint64_t v10 = v3;
  if ((v9 & 0x20000000) != 0)
  {
    uint64_t v48 = *((unsigned __int8 *)this + 209);
    if ((v9 & 0x400000) != 0)
    {
LABEL_16:
      uint64_t v11 = *((unsigned int *)this + 46);
      if ((v9 & 0x10) != 0) {
        goto LABEL_17;
      }
LABEL_68:
      uint64_t v47 = 0;
      if ((v9 & 0x80000) != 0) {
        goto LABEL_20;
      }
      goto LABEL_69;
    }
  }
  else
  {
    uint64_t v48 = 0;
    if ((v9 & 0x400000) != 0) {
      goto LABEL_16;
    }
  }
  uint64_t v11 = 0;
  if ((v9 & 0x10) == 0) {
    goto LABEL_68;
  }
LABEL_17:
  float v12 = *((float *)this + 28);
  uint64_t v13 = LODWORD(v12);
  if (v12 == 0.0) {
    uint64_t v13 = 0;
  }
  uint64_t v47 = v13;
  if ((v9 & 0x80000) != 0)
  {
LABEL_20:
    uint64_t v46 = *((unsigned int *)this + 43);
    if ((v9 & 0x40000) != 0) {
      goto LABEL_21;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t v46 = 0;
  if ((v9 & 0x40000) != 0)
  {
LABEL_21:
    uint64_t v14 = *((unsigned int *)this + 42);
    if ((v9 & 0x20000) != 0) {
      goto LABEL_22;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t v14 = 0;
  if ((v9 & 0x20000) != 0)
  {
LABEL_22:
    uint64_t v15 = *((unsigned int *)this + 41);
    if ((v9 & 0x10000) != 0) {
      goto LABEL_23;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t v15 = 0;
  if ((v9 & 0x10000) != 0)
  {
LABEL_23:
    uint64_t v16 = *((unsigned int *)this + 40);
    if ((v9 & 0x8000) != 0) {
      goto LABEL_24;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t v16 = 0;
  if ((v9 & 0x8000) != 0)
  {
LABEL_24:
    uint64_t v17 = *((unsigned int *)this + 39);
    if ((v9 & 0x4000) != 0) {
      goto LABEL_25;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t v17 = 0;
  if ((v9 & 0x4000) != 0)
  {
LABEL_25:
    uint64_t v18 = *((unsigned int *)this + 38);
    if ((v9 & 0x2000) != 0) {
      goto LABEL_26;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t v18 = 0;
  if ((v9 & 0x2000) != 0)
  {
LABEL_26:
    uint64_t v19 = *((unsigned int *)this + 37);
    if ((v9 & 0x100000) != 0) {
      goto LABEL_27;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v19 = 0;
  if ((v9 & 0x100000) != 0)
  {
LABEL_27:
    uint64_t v20 = *((unsigned int *)this + 44);
    if ((v9 & 0x100) != 0) {
      goto LABEL_28;
    }
LABEL_77:
    uint64_t v22 = 0;
    if ((v9 & 0x1000000) != 0) {
      goto LABEL_32;
    }
    goto LABEL_78;
  }
LABEL_76:
  uint64_t v20 = 0;
  if ((v9 & 0x100) == 0) {
    goto LABEL_77;
  }
LABEL_28:
  float v21 = *((float *)this + 32);
  if (v21 == 0.0) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = LODWORD(v21);
  }
  if ((v9 & 0x1000000) != 0)
  {
LABEL_32:
    uint64_t v23 = *((unsigned int *)this + 48);
    if ((v9 & 0x20) != 0) {
      goto LABEL_33;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v23 = 0;
  if ((v9 & 0x20) != 0)
  {
LABEL_33:
    uint64_t v24 = *((int *)this + 29);
    if ((v9 & 8) != 0) {
      goto LABEL_34;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v24 = 0;
  if ((v9 & 8) != 0)
  {
LABEL_34:
    uint64_t v25 = *((void *)this + 13);
    if ((v9 & 0x2000000) != 0) {
      goto LABEL_35;
    }
LABEL_81:
    uint64_t v27 = 0;
    if ((v9 & 0x4000000) != 0) {
      goto LABEL_39;
    }
LABEL_82:
    uint64_t v29 = 0;
    if ((v9 & 0x8000000) != 0) {
      goto LABEL_43;
    }
LABEL_83:
    uint64_t v31 = 0;
    if ((v9 & 0x800) != 0) {
      goto LABEL_47;
    }
    goto LABEL_84;
  }
LABEL_80:
  uint64_t v25 = 0;
  if ((v9 & 0x2000000) == 0) {
    goto LABEL_81;
  }
LABEL_35:
  float v26 = *((float *)this + 49);
  if (v26 == 0.0) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = LODWORD(v26);
  }
  if ((v9 & 0x4000000) == 0) {
    goto LABEL_82;
  }
LABEL_39:
  float v28 = *((float *)this + 50);
  if (v28 == 0.0) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = LODWORD(v28);
  }
  if ((v9 & 0x8000000) == 0) {
    goto LABEL_83;
  }
LABEL_43:
  float v30 = *((float *)this + 51);
  if (v30 == 0.0) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = LODWORD(v30);
  }
  if ((v9 & 0x800) != 0)
  {
LABEL_47:
    uint64_t v32 = *((unsigned int *)this + 35);
    if ((v9 & 0x80) != 0) {
      goto LABEL_48;
    }
    goto LABEL_85;
  }
LABEL_84:
  uint64_t v32 = 0;
  if ((v9 & 0x80) != 0)
  {
LABEL_48:
    uint64_t v33 = *((unsigned int *)this + 31);
    if ((v9 & 2) != 0) {
      goto LABEL_49;
    }
    goto LABEL_86;
  }
LABEL_85:
  uint64_t v33 = 0;
  if ((v9 & 2) != 0)
  {
LABEL_49:
    uint64_t v34 = *((void *)this + 11);
    if ((v9 & 0x40000000) != 0) {
      goto LABEL_50;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t v34 = 0;
  if ((v9 & 0x40000000) != 0)
  {
LABEL_50:
    uint64_t v35 = *((unsigned __int8 *)this + 210);
    if ((v9 & 0x1000) != 0) {
      goto LABEL_51;
    }
LABEL_88:
    uint64_t v37 = 0;
    if ((v9 & 0x200) != 0) {
      goto LABEL_55;
    }
LABEL_89:
    uint64_t v39 = 0;
    if ((v9 & 0x40) != 0) {
      goto LABEL_59;
    }
LABEL_90:
    uint64_t v41 = 0;
    if ((v9 & 0x200000) != 0) {
      goto LABEL_63;
    }
    goto LABEL_91;
  }
LABEL_87:
  uint64_t v35 = 0;
  if ((v9 & 0x1000) == 0) {
    goto LABEL_88;
  }
LABEL_51:
  float v36 = *((float *)this + 36);
  if (v36 == 0.0) {
    uint64_t v37 = 0;
  }
  else {
    uint64_t v37 = LODWORD(v36);
  }
  if ((v9 & 0x200) == 0) {
    goto LABEL_89;
  }
LABEL_55:
  float v38 = *((float *)this + 33);
  if (v38 == 0.0) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = LODWORD(v38);
  }
  if ((v9 & 0x40) == 0) {
    goto LABEL_90;
  }
LABEL_59:
  float v40 = *((float *)this + 30);
  if (v40 == 0.0) {
    uint64_t v41 = 0;
  }
  else {
    uint64_t v41 = LODWORD(v40);
  }
  if ((v9 & 0x200000) != 0)
  {
LABEL_63:
    uint64_t v42 = *((unsigned int *)this + 45);
    if ((v9 & 0x400) != 0) {
      goto LABEL_64;
    }
LABEL_92:
    uint64_t v43 = 0;
    if ((v9 & 0x800000) != 0) {
      goto LABEL_65;
    }
LABEL_93:
    uint64_t v44 = 0;
    return v52 ^ v10 ^ *(void *)&v50 ^ v6 ^ v7 ^ v51 ^ v49 ^ v48 ^ v11 ^ v47 ^ v46 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v19 ^ v20 ^ v22 ^ v23 ^ v24 ^ v25 ^ v27 ^ v29 ^ v31 ^ v32 ^ v33 ^ v34 ^ v35 ^ v37 ^ v39 ^ v41 ^ v42 ^ v43 ^ v44;
  }
LABEL_91:
  uint64_t v42 = 0;
  if ((v9 & 0x400) == 0) {
    goto LABEL_92;
  }
LABEL_64:
  uint64_t v43 = *((unsigned int *)this + 34);
  if ((v9 & 0x800000) == 0) {
    goto LABEL_93;
  }
LABEL_65:
  uint64_t v44 = *((unsigned int *)this + 47);
  return v52 ^ v10 ^ *(void *)&v50 ^ v6 ^ v7 ^ v51 ^ v49 ^ v48 ^ v11 ^ v47 ^ v46 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v19 ^ v20 ^ v22 ^ v23 ^ v24 ^ v25 ^ v27 ^ v29 ^ v31 ^ v32 ^ v33 ^ v34 ^ v35 ^ v37 ^ v39 ^ v41 ^ v42 ^ v43 ^ v44;
}

void CMMsl::KappaTriggerClustersResult::~KappaTriggerClustersResult(CMMsl::KappaTriggerClustersResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaTriggerClustersResult::KappaTriggerClustersResult(uint64_t this, const CMMsl::KappaTriggerClustersResult *a2)
{
  *(void *)this = &unk_270642D70;
  *(_DWORD *)(this + 96) = 0;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x1000) != 0)
  {
    int v4 = *((_DWORD *)a2 + 22);
    __int16 v3 = 4096;
    *(_WORD *)(this + 96) = 4096;
    *(_DWORD *)(this + 88) = v4;
    __int16 v2 = *((_WORD *)a2 + 48);
    if ((v2 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*((_WORD *)a2 + 48) & 0x800) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 21);
    v3 |= 0x800u;
    *(_WORD *)(this + 96) = v3;
    *(_DWORD *)(this + 84) = v5;
    __int16 v2 = *((_WORD *)a2 + 48);
  }
LABEL_6:
  if ((v2 & 0x100) != 0)
  {
    int v6 = *((_DWORD *)a2 + 18);
    v3 |= 0x100u;
    *(_WORD *)(this + 96) = v3;
    *(_DWORD *)(this + 72) = v6;
    __int16 v2 = *((_WORD *)a2 + 48);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x8000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *((void *)a2 + 8);
  v3 |= 0x80u;
  *(_WORD *)(this + 96) = v3;
  *(void *)(this + 64) = v7;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x8000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v8 = *((unsigned char *)a2 + 94);
  v3 |= 0x8000u;
  *(_WORD *)(this + 96) = v3;
  *(unsigned char *)(this + 94) = v8;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x4000) == 0)
  {
LABEL_10:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v9 = *((unsigned char *)a2 + 93);
  v3 |= 0x4000u;
  *(_WORD *)(this + 96) = v3;
  *(unsigned char *)(this + 93) = v9;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x2000) == 0)
  {
LABEL_11:
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v10 = *((unsigned char *)a2 + 92);
  v3 |= 0x2000u;
  *(_WORD *)(this + 96) = v3;
  *(unsigned char *)(this + 92) = v10;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 2) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v11 = *((void *)a2 + 2);
  v3 |= 2u;
  *(_WORD *)(this + 96) = v3;
  *(void *)(this + 16) = v11;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v12 = *((void *)a2 + 4);
  v3 |= 8u;
  *(_WORD *)(this + 96) = v3;
  *(void *)(this + 32) = v12;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v13 = *((void *)a2 + 5);
  v3 |= 0x10u;
  *(_WORD *)(this + 96) = v3;
  *(void *)(this + 40) = v13;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v14 = *((void *)a2 + 6);
  v3 |= 0x20u;
  *(_WORD *)(this + 96) = v3;
  *(void *)(this + 48) = v14;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 1) == 0) {
      goto LABEL_17;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v15 = *((void *)a2 + 7);
  v3 |= 0x40u;
  *(_WORD *)(this + 96) = v3;
  *(void *)(this + 56) = v15;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 1) == 0)
  {
LABEL_17:
    if ((v2 & 0x400) == 0) {
      goto LABEL_18;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v16 = *((void *)a2 + 1);
  v3 |= 1u;
  *(_WORD *)(this + 96) = v3;
  *(void *)(this + 8) = v16;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x400) == 0)
  {
LABEL_18:
    if ((v2 & 0x200) == 0) {
      goto LABEL_19;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v17 = *((_DWORD *)a2 + 20);
  v3 |= 0x400u;
  *(_WORD *)(this + 96) = v3;
  *(_DWORD *)(this + 80) = v17;
  __int16 v2 = *((_WORD *)a2 + 48);
  if ((v2 & 0x200) == 0)
  {
LABEL_19:
    if ((v2 & 4) == 0) {
      return this;
    }
LABEL_34:
    uint64_t v19 = *((void *)a2 + 3);
    *(_WORD *)(this + 96) = v3 | 4;
    *(void *)(this + 24) = v19;
    return this;
  }
LABEL_33:
  int v18 = *((_DWORD *)a2 + 19);
  v3 |= 0x200u;
  *(_WORD *)(this + 96) = v3;
  *(_DWORD *)(this + 76) = v18;
  if ((*((_WORD *)a2 + 48) & 4) != 0) {
    goto LABEL_34;
  }
  return this;
}

CMMsl *CMMsl::KappaTriggerClustersResult::operator=(CMMsl *a1, const CMMsl::KappaTriggerClustersResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaTriggerClustersResult::KappaTriggerClustersResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaTriggerClustersResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaTriggerClustersResult *a2, CMMsl::KappaTriggerClustersResult *a3)
{
  int v3 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v3;
  int v4 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v4;
  int v5 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v5;
  float result = *((float *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((float *)a2 + 18) = result;
  uint64_t v7 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 94);
  *((unsigned char *)this + 94) = *((unsigned char *)a2 + 94);
  *((unsigned char *)a2 + 94) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 93);
  *((unsigned char *)this + 93) = *((unsigned char *)a2 + 93);
  *((unsigned char *)a2 + 93) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 92);
  *((unsigned char *)this + 92) = *((unsigned char *)a2 + 92);
  *((unsigned char *)a2 + 92) = v7;
  uint64_t v8 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v8;
  uint64_t v9 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v9;
  uint64_t v10 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v10;
  uint64_t v11 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v11;
  uint64_t v12 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v12;
  uint64_t v13 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v13;
  LODWORD(v13) = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v13;
  LODWORD(v13) = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v13;
  uint64_t v14 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v14;
  return result;
}

float CMMsl::KappaTriggerClustersResult::KappaTriggerClustersResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642D70;
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a2 + 96) = 0;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  float result = *(float *)(a2 + 72);
  *(float *)(a1 + 72) = result;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 94) = *(unsigned char *)(a2 + 94);
  *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return result;
}

CMMsl *CMMsl::KappaTriggerClustersResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaTriggerClustersResult::KappaTriggerClustersResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaTriggerClustersResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaTriggerClustersResult::formatText(CMMsl::KappaTriggerClustersResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 48);
  if (v5)
  {
    PB::TextFormatter::format(a2, "armedDuration");
    __int16 v5 = *((_WORD *)this + 48);
    if ((v5 & 0x100) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((*((_WORD *)this + 48) & 0x100) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "armedDurationThreshold", *((float *)this + 18));
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(a2, "armedDurationThresholdTimestamp");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(a2, "btHint");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(a2, "epochFirstTimestamp");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(a2, "firstTriggerTimestamp");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(a2, "isBTHintDetected");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  PB::TextFormatter::format(a2, "isClusterInBeginningOfDrive");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v5 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(a2, "isTriggerCluster");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x40) == 0)
  {
LABEL_12:
    if ((v5 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(a2, "lastTriggerTimestamp");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x200) == 0)
  {
LABEL_13:
    if ((v5 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(a2, "numTriggersInEpoch");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x400) == 0)
  {
LABEL_14:
    if ((v5 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(a2, "numTriggersInWindow");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x800) == 0)
  {
LABEL_15:
    if ((v5 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(a2, "numTriggersThreshold");
  __int16 v5 = *((_WORD *)this + 48);
  if ((v5 & 0x80) == 0)
  {
LABEL_16:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_35:
  PB::TextFormatter::format(a2, "timestamp");
  if ((*((_WORD *)this + 48) & 0x1000) != 0) {
LABEL_17:
  }
    PB::TextFormatter::format(a2, "windowDuration");
LABEL_18:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaTriggerClustersResult::readFrom(CMMsl::KappaTriggerClustersResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_26:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v21 = v11 >> 3;
      if ((int)(v11 >> 3) > 300)
      {
        switch((int)v21)
        {
          case 301:
            *((_WORD *)this + 48) |= 8u;
            unint64_t v28 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v29 = *(void *)a2;
            if (v28 > 0xFFFFFFFFFFFFFFF5 || v28 + 10 > v2)
            {
              char v104 = 0;
              unsigned int v105 = 0;
              uint64_t v32 = 0;
              if (v2 <= v28) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v28)
                {
                  uint64_t v32 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_227;
                }
                unint64_t v106 = v28++;
                char v107 = *(unsigned char *)(v29 + v106);
                *((void *)a2 + 1) = v28;
                v32 |= (unint64_t)(v107 & 0x7F) << v104;
                if ((v107 & 0x80) == 0) {
                  break;
                }
                v104 += 7;
                BOOL v14 = v105++ > 8;
                if (v14)
                {
                  uint64_t v32 = 0;
LABEL_226:
                  unint64_t v2 = v106 + 1;
                  goto LABEL_227;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v32 = 0;
              }
              goto LABEL_226;
            }
            char v30 = 0;
            unsigned int v31 = 0;
            uint64_t v32 = 0;
            do
            {
              unint64_t v2 = v28 + 1;
              *((void *)a2 + 1) = v28 + 1;
              char v33 = *(unsigned char *)(v29 + v28);
              v32 |= (unint64_t)(v33 & 0x7F) << v30;
              if ((v33 & 0x80) == 0) {
                goto LABEL_227;
              }
              v30 += 7;
              unint64_t v28 = v2;
              BOOL v14 = v31++ > 8;
            }
            while (!v14);
            uint64_t v32 = 0;
LABEL_227:
            *((void *)this + 4) = v32;
            break;
          case 302:
            *((_WORD *)this + 48) |= 0x10u;
            unint64_t v46 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v47 = *(void *)a2;
            if (v46 > 0xFFFFFFFFFFFFFFF5 || v46 + 10 > v2)
            {
              char v112 = 0;
              unsigned int v113 = 0;
              uint64_t v50 = 0;
              if (v2 <= v46) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v46)
                {
                  uint64_t v50 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_237;
                }
                unint64_t v114 = v46++;
                char v115 = *(unsigned char *)(v47 + v114);
                *((void *)a2 + 1) = v46;
                v50 |= (unint64_t)(v115 & 0x7F) << v112;
                if ((v115 & 0x80) == 0) {
                  break;
                }
                v112 += 7;
                BOOL v14 = v113++ > 8;
                if (v14)
                {
                  uint64_t v50 = 0;
LABEL_236:
                  unint64_t v2 = v114 + 1;
                  goto LABEL_237;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v50 = 0;
              }
              goto LABEL_236;
            }
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            do
            {
              unint64_t v2 = v46 + 1;
              *((void *)a2 + 1) = v46 + 1;
              char v51 = *(unsigned char *)(v47 + v46);
              v50 |= (unint64_t)(v51 & 0x7F) << v48;
              if ((v51 & 0x80) == 0) {
                goto LABEL_237;
              }
              v48 += 7;
              unint64_t v46 = v2;
              BOOL v14 = v49++ > 8;
            }
            while (!v14);
            uint64_t v50 = 0;
LABEL_237:
            *((void *)this + 5) = v50;
            break;
          case 303:
            *((_WORD *)this + 48) |= 0x20u;
            unint64_t v52 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v53 = *(void *)a2;
            if (v52 > 0xFFFFFFFFFFFFFFF5 || v52 + 10 > v2)
            {
              char v116 = 0;
              unsigned int v117 = 0;
              uint64_t v56 = 0;
              if (v2 <= v52) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v52)
                {
                  uint64_t v56 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_242;
                }
                unint64_t v118 = v52++;
                char v119 = *(unsigned char *)(v53 + v118);
                *((void *)a2 + 1) = v52;
                v56 |= (unint64_t)(v119 & 0x7F) << v116;
                if ((v119 & 0x80) == 0) {
                  break;
                }
                v116 += 7;
                BOOL v14 = v117++ > 8;
                if (v14)
                {
                  uint64_t v56 = 0;
LABEL_241:
                  unint64_t v2 = v118 + 1;
                  goto LABEL_242;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v56 = 0;
              }
              goto LABEL_241;
            }
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v56 = 0;
            do
            {
              unint64_t v2 = v52 + 1;
              *((void *)a2 + 1) = v52 + 1;
              char v57 = *(unsigned char *)(v53 + v52);
              v56 |= (unint64_t)(v57 & 0x7F) << v54;
              if ((v57 & 0x80) == 0) {
                goto LABEL_242;
              }
              v54 += 7;
              unint64_t v52 = v2;
              BOOL v14 = v55++ > 8;
            }
            while (!v14);
            uint64_t v56 = 0;
LABEL_242:
            *((void *)this + 6) = v56;
            break;
          case 304:
            *((_WORD *)this + 48) |= 0x40u;
            unint64_t v58 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v59 = *(void *)a2;
            if (v58 > 0xFFFFFFFFFFFFFFF5 || v58 + 10 > v2)
            {
              char v120 = 0;
              unsigned int v121 = 0;
              uint64_t v62 = 0;
              if (v2 <= v58) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v58)
                {
                  uint64_t v62 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_247;
                }
                unint64_t v122 = v58++;
                char v123 = *(unsigned char *)(v59 + v122);
                *((void *)a2 + 1) = v58;
                v62 |= (unint64_t)(v123 & 0x7F) << v120;
                if ((v123 & 0x80) == 0) {
                  break;
                }
                v120 += 7;
                BOOL v14 = v121++ > 8;
                if (v14)
                {
                  uint64_t v62 = 0;
LABEL_246:
                  unint64_t v2 = v122 + 1;
                  goto LABEL_247;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v62 = 0;
              }
              goto LABEL_246;
            }
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            do
            {
              unint64_t v2 = v58 + 1;
              *((void *)a2 + 1) = v58 + 1;
              char v63 = *(unsigned char *)(v59 + v58);
              v62 |= (unint64_t)(v63 & 0x7F) << v60;
              if ((v63 & 0x80) == 0) {
                goto LABEL_247;
              }
              v60 += 7;
              unint64_t v58 = v2;
              BOOL v14 = v61++ > 8;
            }
            while (!v14);
            uint64_t v62 = 0;
LABEL_247:
            *((void *)this + 7) = v62;
            break;
          case 305:
            *((_WORD *)this + 48) |= 1u;
            unint64_t v64 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v65 = *(void *)a2;
            if (v64 > 0xFFFFFFFFFFFFFFF5 || v64 + 10 > v2)
            {
              char v124 = 0;
              unsigned int v125 = 0;
              uint64_t v68 = 0;
              if (v2 <= v64) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v64)
                {
                  uint64_t v68 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_252;
                }
                unint64_t v126 = v64++;
                char v127 = *(unsigned char *)(v65 + v126);
                *((void *)a2 + 1) = v64;
                v68 |= (unint64_t)(v127 & 0x7F) << v124;
                if ((v127 & 0x80) == 0) {
                  break;
                }
                v124 += 7;
                BOOL v14 = v125++ > 8;
                if (v14)
                {
                  uint64_t v68 = 0;
LABEL_251:
                  unint64_t v2 = v126 + 1;
                  goto LABEL_252;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v68 = 0;
              }
              goto LABEL_251;
            }
            char v66 = 0;
            unsigned int v67 = 0;
            uint64_t v68 = 0;
            do
            {
              unint64_t v2 = v64 + 1;
              *((void *)a2 + 1) = v64 + 1;
              char v69 = *(unsigned char *)(v65 + v64);
              v68 |= (unint64_t)(v69 & 0x7F) << v66;
              if ((v69 & 0x80) == 0) {
                goto LABEL_252;
              }
              v66 += 7;
              unint64_t v64 = v2;
              BOOL v14 = v67++ > 8;
            }
            while (!v14);
            uint64_t v68 = 0;
LABEL_252:
            *((void *)this + 1) = v68;
            break;
          case 306:
            *((_WORD *)this + 48) |= 0x400u;
            unint64_t v70 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v71 = *(void *)a2;
            if (v70 > 0xFFFFFFFFFFFFFFF5 || v70 + 10 > v2)
            {
              char v128 = 0;
              unsigned int v129 = 0;
              uint64_t v74 = 0;
              if (v2 <= v70) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v70)
                {
                  LODWORD(v74) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_257;
                }
                unint64_t v130 = v70++;
                char v131 = *(unsigned char *)(v71 + v130);
                *((void *)a2 + 1) = v70;
                v74 |= (unint64_t)(v131 & 0x7F) << v128;
                if ((v131 & 0x80) == 0) {
                  break;
                }
                v128 += 7;
                BOOL v14 = v129++ > 8;
                if (v14)
                {
                  LODWORD(v74) = 0;
LABEL_256:
                  unint64_t v2 = v130 + 1;
                  goto LABEL_257;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v74) = 0;
              }
              goto LABEL_256;
            }
            char v72 = 0;
            unsigned int v73 = 0;
            uint64_t v74 = 0;
            do
            {
              unint64_t v2 = v70 + 1;
              *((void *)a2 + 1) = v70 + 1;
              char v75 = *(unsigned char *)(v71 + v70);
              v74 |= (unint64_t)(v75 & 0x7F) << v72;
              if ((v75 & 0x80) == 0) {
                goto LABEL_257;
              }
              v72 += 7;
              unint64_t v70 = v2;
              BOOL v14 = v73++ > 8;
            }
            while (!v14);
            LODWORD(v74) = 0;
LABEL_257:
            *((_DWORD *)this + 20) = v74;
            break;
          case 307:
            *((_WORD *)this + 48) |= 0x200u;
            unint64_t v76 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v77 = *(void *)a2;
            if (v76 > 0xFFFFFFFFFFFFFFF5 || v76 + 10 > v2)
            {
              char v132 = 0;
              unsigned int v133 = 0;
              uint64_t v80 = 0;
              if (v2 <= v76) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v76)
                {
                  LODWORD(v80) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_262;
                }
                unint64_t v134 = v76++;
                char v135 = *(unsigned char *)(v77 + v134);
                *((void *)a2 + 1) = v76;
                v80 |= (unint64_t)(v135 & 0x7F) << v132;
                if ((v135 & 0x80) == 0) {
                  break;
                }
                v132 += 7;
                BOOL v14 = v133++ > 8;
                if (v14)
                {
                  LODWORD(v80) = 0;
LABEL_261:
                  unint64_t v2 = v134 + 1;
                  goto LABEL_262;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v80) = 0;
              }
              goto LABEL_261;
            }
            char v78 = 0;
            unsigned int v79 = 0;
            uint64_t v80 = 0;
            do
            {
              unint64_t v2 = v76 + 1;
              *((void *)a2 + 1) = v76 + 1;
              char v81 = *(unsigned char *)(v77 + v76);
              v80 |= (unint64_t)(v81 & 0x7F) << v78;
              if ((v81 & 0x80) == 0) {
                goto LABEL_262;
              }
              v78 += 7;
              unint64_t v76 = v2;
              BOOL v14 = v79++ > 8;
            }
            while (!v14);
            LODWORD(v80) = 0;
LABEL_262:
            *((_DWORD *)this + 19) = v80;
            break;
          case 308:
            *((_WORD *)this + 48) |= 4u;
            unint64_t v82 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v83 = *(void *)a2;
            if (v82 > 0xFFFFFFFFFFFFFFF5 || v82 + 10 > v2)
            {
              char v136 = 0;
              unsigned int v137 = 0;
              uint64_t v86 = 0;
              if (v2 <= v82) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v82)
                {
                  uint64_t v86 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_267;
                }
                unint64_t v138 = v82++;
                char v139 = *(unsigned char *)(v83 + v138);
                *((void *)a2 + 1) = v82;
                v86 |= (unint64_t)(v139 & 0x7F) << v136;
                if ((v139 & 0x80) == 0) {
                  break;
                }
                v136 += 7;
                BOOL v14 = v137++ > 8;
                if (v14)
                {
                  uint64_t v86 = 0;
LABEL_266:
                  unint64_t v2 = v138 + 1;
                  goto LABEL_267;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v86 = 0;
              }
              goto LABEL_266;
            }
            char v84 = 0;
            unsigned int v85 = 0;
            uint64_t v86 = 0;
            do
            {
              unint64_t v2 = v82 + 1;
              *((void *)a2 + 1) = v82 + 1;
              char v87 = *(unsigned char *)(v83 + v82);
              v86 |= (unint64_t)(v87 & 0x7F) << v84;
              if ((v87 & 0x80) == 0) {
                goto LABEL_267;
              }
              v84 += 7;
              unint64_t v82 = v2;
              BOOL v14 = v85++ > 8;
            }
            while (!v14);
            uint64_t v86 = 0;
LABEL_267:
            *((void *)this + 3) = v86;
            break;
          default:
            goto LABEL_19;
        }
      }
      else if ((int)v21 <= 200)
      {
        switch(v21)
        {
          case 'e':
            *((_WORD *)this + 48) |= 0x1000u;
            unint64_t v88 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v89 = *(void *)a2;
            if (v88 > 0xFFFFFFFFFFFFFFF5 || v88 + 10 > v2)
            {
              char v140 = 0;
              unsigned int v141 = 0;
              uint64_t v92 = 0;
              if (v2 <= v88) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v88)
                {
                  LODWORD(v92) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_272;
                }
                unint64_t v142 = v88++;
                char v143 = *(unsigned char *)(v89 + v142);
                *((void *)a2 + 1) = v88;
                v92 |= (unint64_t)(v143 & 0x7F) << v140;
                if ((v143 & 0x80) == 0) {
                  break;
                }
                v140 += 7;
                BOOL v14 = v141++ > 8;
                if (v14)
                {
                  LODWORD(v92) = 0;
                  goto LABEL_271;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v92) = 0;
              }
LABEL_271:
              unint64_t v2 = v142 + 1;
            }
            else
            {
              char v90 = 0;
              unsigned int v91 = 0;
              uint64_t v92 = 0;
              while (1)
              {
                unint64_t v2 = v88 + 1;
                *((void *)a2 + 1) = v88 + 1;
                char v93 = *(unsigned char *)(v89 + v88);
                v92 |= (unint64_t)(v93 & 0x7F) << v90;
                if ((v93 & 0x80) == 0) {
                  break;
                }
                v90 += 7;
                unint64_t v88 = v2;
                BOOL v14 = v91++ > 8;
                if (v14)
                {
                  LODWORD(v92) = 0;
                  break;
                }
              }
            }
LABEL_272:
            *((_DWORD *)this + 22) = v92;
            break;
          case 'f':
            *((_WORD *)this + 48) |= 0x800u;
            unint64_t v94 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v95 = *(void *)a2;
            if (v94 > 0xFFFFFFFFFFFFFFF5 || v94 + 10 > v2)
            {
              char v144 = 0;
              unsigned int v145 = 0;
              uint64_t v98 = 0;
              if (v2 <= v94) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v94)
                {
                  LODWORD(v98) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_277;
                }
                unint64_t v146 = v94++;
                char v147 = *(unsigned char *)(v95 + v146);
                *((void *)a2 + 1) = v94;
                v98 |= (unint64_t)(v147 & 0x7F) << v144;
                if ((v147 & 0x80) == 0) {
                  break;
                }
                v144 += 7;
                BOOL v14 = v145++ > 8;
                if (v14)
                {
                  LODWORD(v98) = 0;
                  goto LABEL_276;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v98) = 0;
              }
LABEL_276:
              unint64_t v2 = v146 + 1;
            }
            else
            {
              char v96 = 0;
              unsigned int v97 = 0;
              uint64_t v98 = 0;
              while (1)
              {
                unint64_t v2 = v94 + 1;
                *((void *)a2 + 1) = v94 + 1;
                char v99 = *(unsigned char *)(v95 + v94);
                v98 |= (unint64_t)(v99 & 0x7F) << v96;
                if ((v99 & 0x80) == 0) {
                  break;
                }
                v96 += 7;
                unint64_t v94 = v2;
                BOOL v14 = v97++ > 8;
                if (v14)
                {
                  LODWORD(v98) = 0;
                  break;
                }
              }
            }
LABEL_277:
            *((_DWORD *)this + 21) = v98;
            break;
          case 'g':
            *((_WORD *)this + 48) |= 0x100u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
            {
              *((_DWORD *)this + 18) = *(_DWORD *)(*(void *)a2 + v2);
              unint64_t v2 = *((void *)a2 + 1) + 4;
              *((void *)a2 + 1) = v2;
            }
            else
            {
              *((unsigned char *)a2 + 24) = 1;
            }
            break;
          default:
LABEL_19:
            uint64_t result = PB::Reader::skip(a2);
            if (!result) {
              return result;
            }
            unint64_t v2 = *((void *)a2 + 1);
            break;
        }
      }
      else
      {
        switch((int)v21)
        {
          case 201:
            *((_WORD *)this + 48) |= 0x80u;
            unint64_t v22 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v23 = *(void *)a2;
            if (v22 > 0xFFFFFFFFFFFFFFF5 || v22 + 10 > v2)
            {
              char v100 = 0;
              unsigned int v101 = 0;
              uint64_t v26 = 0;
              if (v2 <= v22) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v22)
                {
                  uint64_t v26 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_222;
                }
                unint64_t v102 = v22++;
                char v103 = *(unsigned char *)(v23 + v102);
                *((void *)a2 + 1) = v22;
                v26 |= (unint64_t)(v103 & 0x7F) << v100;
                if ((v103 & 0x80) == 0) {
                  break;
                }
                v100 += 7;
                BOOL v14 = v101++ > 8;
                if (v14)
                {
                  uint64_t v26 = 0;
LABEL_221:
                  unint64_t v2 = v102 + 1;
                  goto LABEL_222;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v26 = 0;
              }
              goto LABEL_221;
            }
            char v24 = 0;
            unsigned int v25 = 0;
            uint64_t v26 = 0;
            do
            {
              unint64_t v2 = v22 + 1;
              *((void *)a2 + 1) = v22 + 1;
              char v27 = *(unsigned char *)(v23 + v22);
              v26 |= (unint64_t)(v27 & 0x7F) << v24;
              if ((v27 & 0x80) == 0) {
                goto LABEL_222;
              }
              v24 += 7;
              unint64_t v22 = v2;
              BOOL v14 = v25++ > 8;
            }
            while (!v14);
            uint64_t v26 = 0;
LABEL_222:
            *((void *)this + 8) = v26;
            break;
          case 202:
            *((_WORD *)this + 48) |= 0x8000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v35 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v34 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v35 = v34 != 0;
            }
            *((unsigned char *)this + 94) = v35;
            break;
          case 203:
            *((_WORD *)this + 48) |= 0x4000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v37 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v36 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v37 = v36 != 0;
            }
            *((unsigned char *)this + 93) = v37;
            break;
          case 204:
            *((_WORD *)this + 48) |= 0x2000u;
            unint64_t v2 = *((void *)a2 + 1);
            if (v2 >= *((void *)a2 + 2))
            {
              BOOL v39 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              int v38 = *(unsigned __int8 *)(*(void *)a2 + v2++);
              *((void *)a2 + 1) = v2;
              BOOL v39 = v38 != 0;
            }
            *((unsigned char *)this + 92) = v39;
            break;
          case 205:
            *((_WORD *)this + 48) |= 2u;
            unint64_t v40 = *((void *)a2 + 1);
            unint64_t v2 = *((void *)a2 + 2);
            uint64_t v41 = *(void *)a2;
            if (v40 > 0xFFFFFFFFFFFFFFF5 || v40 + 10 > v2)
            {
              char v108 = 0;
              unsigned int v109 = 0;
              uint64_t v44 = 0;
              if (v2 <= v40) {
                unint64_t v2 = *((void *)a2 + 1);
              }
              while (1)
              {
                if (v2 == v40)
                {
                  uint64_t v44 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                  goto LABEL_232;
                }
                unint64_t v110 = v40++;
                char v111 = *(unsigned char *)(v41 + v110);
                *((void *)a2 + 1) = v40;
                v44 |= (unint64_t)(v111 & 0x7F) << v108;
                if ((v111 & 0x80) == 0) {
                  break;
                }
                v108 += 7;
                BOOL v14 = v109++ > 8;
                if (v14)
                {
                  uint64_t v44 = 0;
LABEL_231:
                  unint64_t v2 = v110 + 1;
                  goto LABEL_232;
                }
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v44 = 0;
              }
              goto LABEL_231;
            }
            char v42 = 0;
            unsigned int v43 = 0;
            uint64_t v44 = 0;
            do
            {
              unint64_t v2 = v40 + 1;
              *((void *)a2 + 1) = v40 + 1;
              char v45 = *(unsigned char *)(v41 + v40);
              v44 |= (unint64_t)(v45 & 0x7F) << v42;
              if ((v45 & 0x80) == 0) {
                goto LABEL_232;
              }
              v42 += 7;
              unint64_t v40 = v2;
              BOOL v14 = v43++ > 8;
            }
            while (!v14);
            uint64_t v44 = 0;
LABEL_232:
            *((void *)this + 2) = v44;
            break;
          default:
            goto LABEL_19;
        }
      }
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_26;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KappaTriggerClustersResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 96);
  if ((v4 & 0x1000) != 0)
  {
    this = PB::Writer::writeVarInt(a2);
    __int16 v4 = *(_WORD *)(v3 + 96);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((*(_WORD *)(this + 96) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x100) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = PB::Writer::write(a2, *(float *)(v3 + 72));
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x8000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x4000) == 0)
  {
LABEL_7:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x2000) == 0)
  {
LABEL_8:
    if ((v4 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 2) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x40) == 0)
  {
LABEL_13:
    if ((v4 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 1) == 0)
  {
LABEL_14:
    if ((v4 & 0x400) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x400) == 0)
  {
LABEL_15:
    if ((v4 & 0x200) == 0) {
      goto LABEL_16;
    }
LABEL_32:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_WORD *)(v3 + 96) & 4) == 0) {
      return this;
    }
    goto LABEL_33;
  }
LABEL_31:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 96);
  if ((v4 & 0x200) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v4 & 4) == 0) {
    return this;
  }
LABEL_33:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaTriggerClustersResult::hash_value(CMMsl::KappaTriggerClustersResult *this)
{
  __int16 v1 = *((_WORD *)this + 48);
  if ((v1 & 0x1000) != 0)
  {
    uint64_t v2 = *((unsigned int *)this + 22);
    if ((*((_WORD *)this + 48) & 0x800) != 0)
    {
LABEL_3:
      uint64_t v3 = *((unsigned int *)this + 21);
      if ((*((_WORD *)this + 48) & 0x100) != 0) {
        goto LABEL_4;
      }
LABEL_22:
      uint64_t v5 = 0;
      if ((v1 & 0x80) != 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((*((_WORD *)this + 48) & 0x800) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v3 = 0;
  if ((*((_WORD *)this + 48) & 0x100) == 0) {
    goto LABEL_22;
  }
LABEL_4:
  float v4 = *((float *)this + 18);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  if ((v1 & 0x80) != 0)
  {
LABEL_7:
    uint64_t v6 = *((void *)this + 8);
    if ((*((_WORD *)this + 48) & 0x8000) != 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v6 = 0;
  if ((*((_WORD *)this + 48) & 0x8000) != 0)
  {
LABEL_8:
    uint64_t v7 = *((unsigned __int8 *)this + 94);
    if ((*((_WORD *)this + 48) & 0x4000) != 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v7 = 0;
  if ((*((_WORD *)this + 48) & 0x4000) != 0)
  {
LABEL_9:
    uint64_t v8 = *((unsigned __int8 *)this + 93);
    if ((*((_WORD *)this + 48) & 0x2000) != 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v8 = 0;
  if ((*((_WORD *)this + 48) & 0x2000) != 0)
  {
LABEL_10:
    uint64_t v9 = *((unsigned __int8 *)this + 92);
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v9 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_11:
    uint64_t v10 = *((void *)this + 2);
    if ((v1 & 8) != 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v10 = 0;
  if ((v1 & 8) != 0)
  {
LABEL_12:
    uint64_t v11 = *((void *)this + 4);
    if ((v1 & 0x10) != 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v11 = 0;
  if ((v1 & 0x10) != 0)
  {
LABEL_13:
    uint64_t v12 = *((void *)this + 5);
    if ((v1 & 0x20) != 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v12 = 0;
  if ((v1 & 0x20) != 0)
  {
LABEL_14:
    uint64_t v13 = *((void *)this + 6);
    if ((v1 & 0x40) != 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v13 = 0;
  if ((v1 & 0x40) != 0)
  {
LABEL_15:
    uint64_t v14 = *((void *)this + 7);
    if (v1) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v14 = 0;
  if (v1)
  {
LABEL_16:
    uint64_t v15 = *((void *)this + 1);
    if ((*((_WORD *)this + 48) & 0x400) != 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v15 = 0;
  if ((*((_WORD *)this + 48) & 0x400) != 0)
  {
LABEL_17:
    uint64_t v16 = *((int *)this + 20);
    if ((*((_WORD *)this + 48) & 0x200) != 0) {
      goto LABEL_18;
    }
LABEL_34:
    uint64_t v17 = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_35:
    uint64_t v18 = 0;
    return v3 ^ v2 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18;
  }
LABEL_33:
  uint64_t v16 = 0;
  if ((*((_WORD *)this + 48) & 0x200) == 0) {
    goto LABEL_34;
  }
LABEL_18:
  uint64_t v17 = *((int *)this + 19);
  if ((v1 & 4) == 0) {
    goto LABEL_35;
  }
LABEL_19:
  uint64_t v18 = *((void *)this + 3);
  return v3 ^ v2 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10 ^ v11 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18;
}

void CMMsl::KappaTriggerDebug::~KappaTriggerDebug(CMMsl::KappaTriggerDebug *this)
{
  *(void *)this = &unk_270642DA8;
  uint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  float v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::KappaTriggerDebug::~KappaTriggerDebug(this);
  JUMPOUT(0x25A2B2850);
}

CMMsl::KappaTriggerDebug *CMMsl::KappaTriggerDebug::KappaTriggerDebug(CMMsl::KappaTriggerDebug *this, const CMMsl::KappaTriggerDebug *a2)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  float v4 = (void *)((char *)this + 8);
  *(_OWORD *)((char *)this + 56) = 0u;
  *(void *)this = &unk_270642DA8;
  *((_DWORD *)this + 30) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 9) = 0;
  __int16 v5 = *((_WORD *)a2 + 60);
  if ((v5 & 2) != 0)
  {
    uint64_t v7 = *((void *)a2 + 11);
    __int16 v6 = 2;
    *((_WORD *)this + 60) = 2;
    *((void *)this + 11) = v7;
    __int16 v5 = *((_WORD *)a2 + 60);
    if ((v5 & 0x200) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v6 = 0;
  if ((*((_WORD *)a2 + 60) & 0x200) != 0)
  {
LABEL_5:
    char v8 = *((unsigned char *)a2 + 118);
    v6 |= 0x200u;
    *((_WORD *)this + 60) = v6;
    *((unsigned char *)this + 118) = v8;
    __int16 v5 = *((_WORD *)a2 + 60);
  }
LABEL_6:
  if (v5)
  {
    uint64_t v9 = *((void *)a2 + 10);
    *((_WORD *)this + 60) = v6 | 1;
    *((void *)this + 10) = v9;
  }
  if (this != a2)
  {
    sub_2572C73EC(v4, *((char **)a2 + 1), *((char **)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
    sub_2572C75B4((void *)this + 7, *((char **)a2 + 7), *((char **)a2 + 8), (uint64_t)(*((void *)a2 + 8) - *((void *)a2 + 7)) >> 2);
    sub_2572C75B4((void *)this + 4, *((char **)a2 + 4), *((char **)a2 + 5), (uint64_t)(*((void *)a2 + 5) - *((void *)a2 + 4)) >> 2);
  }
  __int16 v10 = *((_WORD *)a2 + 60);
  if ((v10 & 0x80) != 0)
  {
    char v13 = *((unsigned char *)a2 + 116);
    *((_WORD *)this + 60) |= 0x80u;
    *((unsigned char *)this + 116) = v13;
    __int16 v10 = *((_WORD *)a2 + 60);
    if ((v10 & 0x100) == 0)
    {
LABEL_12:
      if ((v10 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((*((_WORD *)a2 + 60) & 0x100) == 0)
  {
    goto LABEL_12;
  }
  char v14 = *((unsigned char *)a2 + 117);
  *((_WORD *)this + 60) |= 0x100u;
  *((unsigned char *)this + 117) = v14;
  __int16 v10 = *((_WORD *)a2 + 60);
  if ((v10 & 4) == 0)
  {
LABEL_13:
    if ((v10 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v15 = *((_DWORD *)a2 + 24);
  *((_WORD *)this + 60) |= 4u;
  *((_DWORD *)this + 24) = v15;
  __int16 v10 = *((_WORD *)a2 + 60);
  if ((v10 & 8) == 0)
  {
LABEL_14:
    if ((v10 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v16 = *((_DWORD *)a2 + 25);
  *((_WORD *)this + 60) |= 8u;
  *((_DWORD *)this + 25) = v16;
  __int16 v10 = *((_WORD *)a2 + 60);
  if ((v10 & 0x40) == 0)
  {
LABEL_15:
    if ((v10 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_24:
    int v18 = *((_DWORD *)a2 + 27);
    *((_WORD *)this + 60) |= 0x20u;
    *((_DWORD *)this + 27) = v18;
    if ((*((_WORD *)a2 + 60) & 0x10) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_23:
  int v17 = *((_DWORD *)a2 + 28);
  *((_WORD *)this + 60) |= 0x40u;
  *((_DWORD *)this + 28) = v17;
  __int16 v10 = *((_WORD *)a2 + 60);
  if ((v10 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_16:
  if ((v10 & 0x10) != 0)
  {
LABEL_17:
    int v11 = *((_DWORD *)a2 + 26);
    *((_WORD *)this + 60) |= 0x10u;
    *((_DWORD *)this + 26) = v11;
  }
  return this;
}

CMMsl *CMMsl::KappaTriggerDebug::operator=(CMMsl *a1, const CMMsl::KappaTriggerDebug *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaTriggerDebug::KappaTriggerDebug((CMMsl::KappaTriggerDebug *)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaTriggerDebug *)v5, v3);
    CMMsl::KappaTriggerDebug::~KappaTriggerDebug((CMMsl::KappaTriggerDebug *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaTriggerDebug *a2, CMMsl::KappaTriggerDebug *a3)
{
  int v3 = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v3;
  uint64_t v4 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v4;
  LOBYTE(v4) = *((unsigned char *)this + 118);
  *((unsigned char *)this + 118) = *((unsigned char *)a2 + 118);
  *((unsigned char *)a2 + 118) = v4;
  uint64_t v5 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v5;
  uint64_t v6 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v6;
  uint64_t v7 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v7;
  uint64_t v8 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v8;
  uint64_t v9 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v9;
  uint64_t v10 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v10;
  uint64_t v11 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v11;
  uint64_t v12 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v12;
  uint64_t v13 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v13;
  uint64_t v14 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v14;
  LOBYTE(v14) = *((unsigned char *)this + 116);
  *((unsigned char *)this + 116) = *((unsigned char *)a2 + 116);
  *((unsigned char *)a2 + 116) = v14;
  LOBYTE(v14) = *((unsigned char *)this + 117);
  *((unsigned char *)this + 117) = *((unsigned char *)a2 + 117);
  *((unsigned char *)a2 + 117) = v14;
  LODWORD(v5) = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v5;
  float result = *((float *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((float *)a2 + 25) = result;
  LODWORD(v14) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v14;
  LODWORD(v14) = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v14;
  LODWORD(v14) = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v14;
  return result;
}

uint64_t CMMsl::KappaTriggerDebug::KappaTriggerDebug(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642DA8;
  uint64_t v4 = a1 + 32;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v5 = a1 + 56;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(_DWORD *)(a2 + 120) = 0;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 118) = *(unsigned char *)(a2 + 118);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  sub_2572C7560(a1 + 8, (__n128 *)(a2 + 8));
  sub_2572C7560(v5, (__n128 *)(a2 + 56));
  sub_2572C7560(v4, (__n128 *)(a2 + 32));
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(unsigned char *)(a1 + 117) = *(unsigned char *)(a2 + 117);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  return a1;
}

CMMsl *CMMsl::KappaTriggerDebug::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaTriggerDebug::KappaTriggerDebug((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaTriggerDebug *)v5, v3);
    CMMsl::KappaTriggerDebug::~KappaTriggerDebug((CMMsl::KappaTriggerDebug *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaTriggerDebug::formatText(CMMsl::KappaTriggerDebug *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 60);
  if (v5)
  {
    PB::TextFormatter::format(a2, "avgHorizontalDecelMax", *((double *)this + 10));
    __int16 v5 = *((_WORD *)this + 60);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "avgHorizontalDecelThresholdCoupled", *((float *)this + 24));
  if ((*((_WORD *)this + 60) & 8) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(a2, "impactThresholdUncoupled", *((float *)this + 25));
LABEL_5:
  uint64_t v6 = (double *)*((void *)this + 1);
  uint64_t v7 = (double *)*((void *)this + 2);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(a2, "inertialAccel", v8);
  }
  __int16 v9 = *((_WORD *)this + 60);
  if ((v9 & 0x80) != 0)
  {
    PB::TextFormatter::format(a2, "isMounted");
    __int16 v9 = *((_WORD *)this + 60);
    if ((v9 & 0x100) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_28;
    }
  }
  else if ((*((_WORD *)this + 60) & 0x100) == 0)
  {
    goto LABEL_9;
  }
  PB::TextFormatter::format(a2, "isSimulated");
  __int16 v9 = *((_WORD *)this + 60);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_28:
  PB::TextFormatter::format(a2, "nAccelGap");
  if ((*((_WORD *)this + 60) & 0x20) != 0) {
LABEL_11:
  }
    PB::TextFormatter::format(a2, "numResets");
LABEL_12:
  uint64_t v10 = (float *)*((void *)this + 4);
  uint64_t v11 = (float *)*((void *)this + 5);
  while (v10 != v11)
  {
    float v12 = *v10++;
    PB::TextFormatter::format(a2, "prevQ", v12);
  }
  uint64_t v13 = (float *)*((void *)this + 7);
  uint64_t v14 = (float *)*((void *)this + 8);
  while (v13 != v14)
  {
    float v15 = *v13++;
    PB::TextFormatter::format(a2, "rawClampedAccel", v15);
  }
  __int16 v16 = *((_WORD *)this + 60);
  if ((v16 & 0x200) != 0)
  {
    PB::TextFormatter::format(a2, "shouldTrigger");
    __int16 v16 = *((_WORD *)this + 60);
    if ((v16 & 2) == 0)
    {
LABEL_18:
      if ((v16 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }
  else if ((v16 & 2) == 0)
  {
    goto LABEL_18;
  }
  PB::TextFormatter::format(a2, "timestamp");
  if ((*((_WORD *)this + 60) & 0x40) != 0) {
LABEL_19:
  }
    PB::TextFormatter::format(a2, "triggerPathBitmap");
LABEL_20:
  return MEMORY[0x270F587F0](a2);
}

BOOL CMMsl::KappaTriggerDebug::readFrom(CMMsl::KappaTriggerDebug *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (2)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 <= 0xFFFFFFFFFFFFFFF5 && v2 + 10 <= v3)
    {
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_25:
      int v20 = v11 & 7;
      if (v20 != 4)
      {
        switch((v11 >> 3))
        {
          case 1u:
            *((_WORD *)this + 60) |= 2u;
            unint64_t v21 = *((void *)a2 + 1);
            unint64_t v22 = *((void *)a2 + 2);
            uint64_t v23 = *(void *)a2;
            if (v21 <= 0xFFFFFFFFFFFFFFF5 && v21 + 10 <= v22)
            {
              char v24 = 0;
              unsigned int v25 = 0;
              uint64_t v26 = 0;
              do
              {
                unint64_t v27 = v21 + 1;
                *((void *)a2 + 1) = v21 + 1;
                char v28 = *(unsigned char *)(v23 + v21);
                v26 |= (unint64_t)(v28 & 0x7F) << v24;
                if ((v28 & 0x80) == 0) {
                  goto LABEL_214;
                }
                v24 += 7;
                unint64_t v21 = v27;
                BOOL v14 = v25++ > 8;
              }
              while (!v14);
LABEL_148:
              uint64_t v26 = 0;
              goto LABEL_214;
            }
            char v110 = 0;
            unsigned int v111 = 0;
            uint64_t v26 = 0;
            if (v22 <= v21) {
              unint64_t v22 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v22 == v21)
              {
                uint64_t v26 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v112 = v21 + 1;
                char v113 = *(unsigned char *)(v23 + v21);
                *((void *)a2 + 1) = v112;
                v26 |= (unint64_t)(v113 & 0x7F) << v110;
                if (v113 < 0)
                {
                  v110 += 7;
                  unint64_t v21 = v112;
                  BOOL v14 = v111++ > 8;
                  if (v14) {
                    goto LABEL_148;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  uint64_t v26 = 0;
                }
              }
              break;
            }
LABEL_214:
            *((void *)this + 11) = v26;
            goto LABEL_20;
          case 2u:
            *((_WORD *)this + 60) |= 0x200u;
            unint64_t v29 = *((void *)a2 + 1);
            if (v29 >= *((void *)a2 + 2))
            {
              BOOL v32 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v30 = v29 + 1;
              int v31 = *(unsigned __int8 *)(*(void *)a2 + v29);
              *((void *)a2 + 1) = v30;
              BOOL v32 = v31 != 0;
            }
            *((unsigned char *)this + 118) = v32;
            goto LABEL_20;
          case 3u:
            *((_WORD *)this + 60) |= 1u;
            unint64_t v33 = *((void *)a2 + 1);
            if (v33 > 0xFFFFFFFFFFFFFFF7 || v33 + 8 > *((void *)a2 + 2)) {
              goto LABEL_250;
            }
            *((void *)this + 10) = *(void *)(*(void *)a2 + v33);
            goto LABEL_233;
          case 4u:
            if (v20 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v34 = *((void *)a2 + 1);
              unint64_t v35 = *((void *)a2 + 2);
              while (v34 < v35 && !*((unsigned char *)a2 + 24))
              {
                BOOL v37 = (char *)*((void *)this + 2);
                unint64_t v36 = *((void *)this + 3);
                if ((unint64_t)v37 >= v36)
                {
                  BOOL v39 = (char *)*((void *)this + 1);
                  uint64_t v40 = (v37 - v39) >> 3;
                  unint64_t v41 = v40 + 1;
                  if ((unint64_t)(v40 + 1) >> 61) {
                    goto LABEL_259;
                  }
                  uint64_t v42 = v36 - (void)v39;
                  if (v42 >> 2 > v41) {
                    unint64_t v41 = v42 >> 2;
                  }
                  if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFF8) {
                    unint64_t v43 = 0x1FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v43 = v41;
                  }
                  if (v43)
                  {
                    unint64_t v43 = (unint64_t)sub_2572C7528(v43);
                    BOOL v39 = (char *)*((void *)this + 1);
                    BOOL v37 = (char *)*((void *)this + 2);
                  }
                  else
                  {
                    uint64_t v44 = 0;
                  }
                  char v45 = (void *)(v43 + 8 * v40);
                  *char v45 = 0;
                  int v38 = v45 + 1;
                  while (v37 != v39)
                  {
                    uint64_t v46 = *((void *)v37 - 1);
                    v37 -= 8;
                    *--char v45 = v46;
                  }
                  *((void *)this + 1) = v45;
                  *((void *)this + 2) = v38;
                  *((void *)this + 3) = v43 + 8 * v44;
                  if (v39) {
                    operator delete(v39);
                  }
                }
                else
                {
                  *(void *)BOOL v37 = 0;
                  int v38 = v37 + 8;
                }
                *((void *)this + 2) = v38;
                unint64_t v47 = *((void *)a2 + 1);
                if (v47 > 0xFFFFFFFFFFFFFFF7 || v47 + 8 > *((void *)a2 + 2)) {
                  goto LABEL_182;
                }
                *(v38 - 1) = *(void *)(*(void *)a2 + v47);
                unint64_t v35 = *((void *)a2 + 2);
                unint64_t v34 = *((void *)a2 + 1) + 8;
                *((void *)a2 + 1) = v34;
              }
              goto LABEL_183;
            }
            char v115 = (char *)*((void *)this + 2);
            unint64_t v114 = *((void *)this + 3);
            if ((unint64_t)v115 >= v114)
            {
              unint64_t v134 = (char *)*((void *)this + 1);
              uint64_t v135 = (v115 - v134) >> 3;
              unint64_t v136 = v135 + 1;
              if ((unint64_t)(v135 + 1) >> 61) {
LABEL_259:
              }
                sub_2570AFD0C();
              uint64_t v137 = v114 - (void)v134;
              if (v137 >> 2 > v136) {
                unint64_t v136 = v137 >> 2;
              }
              if ((unint64_t)v137 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v138 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v138 = v136;
              }
              if (v138)
              {
                unint64_t v138 = (unint64_t)sub_2572C7528(v138);
                unint64_t v134 = (char *)*((void *)this + 1);
                char v115 = (char *)*((void *)this + 2);
              }
              else
              {
                uint64_t v139 = 0;
              }
              uint64_t v152 = (void *)(v138 + 8 * v135);
              *uint64_t v152 = 0;
              char v116 = v152 + 1;
              while (v115 != v134)
              {
                uint64_t v153 = *((void *)v115 - 1);
                v115 -= 8;
                *--uint64_t v152 = v153;
              }
              *((void *)this + 1) = v152;
              *((void *)this + 2) = v116;
              *((void *)this + 3) = v138 + 8 * v139;
              if (v134) {
                operator delete(v134);
              }
            }
            else
            {
              *(void *)char v115 = 0;
              char v116 = v115 + 8;
            }
            *((void *)this + 2) = v116;
            unint64_t v154 = *((void *)a2 + 1);
            if (v154 <= 0xFFFFFFFFFFFFFFF7 && v154 + 8 <= *((void *)a2 + 2))
            {
              *(v116 - 1) = *(void *)(*(void *)a2 + v154);
LABEL_233:
              uint64_t v155 = *((void *)a2 + 1) + 8;
              goto LABEL_253;
            }
            goto LABEL_250;
          case 5u:
            if (v20 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v48 = *((void *)a2 + 1);
              unint64_t v49 = *((void *)a2 + 2);
              while (v48 < v49 && !*((unsigned char *)a2 + 24))
              {
                char v51 = (char *)*((void *)this + 8);
                unint64_t v50 = *((void *)this + 9);
                if ((unint64_t)v51 >= v50)
                {
                  uint64_t v53 = (char *)*((void *)this + 7);
                  uint64_t v54 = (v51 - v53) >> 2;
                  unint64_t v55 = v54 + 1;
                  if ((unint64_t)(v54 + 1) >> 62) {
                    goto LABEL_258;
                  }
                  uint64_t v56 = v50 - (void)v53;
                  if (v56 >> 1 > v55) {
                    unint64_t v55 = v56 >> 1;
                  }
                  if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v57 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v57 = v55;
                  }
                  if (v57)
                  {
                    unint64_t v57 = (unint64_t)sub_2572C76F0(v57);
                    uint64_t v53 = (char *)*((void *)this + 7);
                    char v51 = (char *)*((void *)this + 8);
                  }
                  else
                  {
                    uint64_t v58 = 0;
                  }
                  uint64_t v59 = (_DWORD *)(v57 + 4 * v54);
                  *uint64_t v59 = 0;
                  unint64_t v52 = v59 + 1;
                  while (v51 != v53)
                  {
                    int v60 = *((_DWORD *)v51 - 1);
                    v51 -= 4;
                    *--uint64_t v59 = v60;
                  }
                  *((void *)this + 7) = v59;
                  *((void *)this + 8) = v52;
                  *((void *)this + 9) = v57 + 4 * v58;
                  if (v53) {
                    operator delete(v53);
                  }
                }
                else
                {
                  *(_DWORD *)char v51 = 0;
                  unint64_t v52 = v51 + 4;
                }
                *((void *)this + 8) = v52;
                unint64_t v61 = *((void *)a2 + 1);
                if (v61 > 0xFFFFFFFFFFFFFFFBLL || v61 + 4 > *((void *)a2 + 2)) {
                  goto LABEL_182;
                }
                *(v52 - 1) = *(_DWORD *)(*(void *)a2 + v61);
                unint64_t v49 = *((void *)a2 + 2);
                unint64_t v48 = *((void *)a2 + 1) + 4;
                *((void *)a2 + 1) = v48;
              }
              goto LABEL_183;
            }
            unint64_t v118 = (char *)*((void *)this + 8);
            unint64_t v117 = *((void *)this + 9);
            if ((unint64_t)v118 >= v117)
            {
              char v140 = (char *)*((void *)this + 7);
              uint64_t v141 = (v118 - v140) >> 2;
              unint64_t v142 = v141 + 1;
              if ((unint64_t)(v141 + 1) >> 62) {
                goto LABEL_258;
              }
              uint64_t v143 = v117 - (void)v140;
              if (v143 >> 1 > v142) {
                unint64_t v142 = v143 >> 1;
              }
              if ((unint64_t)v143 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v144 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v144 = v142;
              }
              if (v144)
              {
                unint64_t v144 = (unint64_t)sub_2572C76F0(v144);
                char v140 = (char *)*((void *)this + 7);
                unint64_t v118 = (char *)*((void *)this + 8);
              }
              else
              {
                uint64_t v145 = 0;
              }
              unint64_t v156 = (_DWORD *)(v144 + 4 * v141);
              *unint64_t v156 = 0;
              char v119 = v156 + 1;
              while (v118 != v140)
              {
                int v157 = *((_DWORD *)v118 - 1);
                v118 -= 4;
                *--unint64_t v156 = v157;
              }
              *((void *)this + 7) = v156;
              *((void *)this + 8) = v119;
              *((void *)this + 9) = v144 + 4 * v145;
              if (v140) {
                operator delete(v140);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v118 = 0;
              char v119 = v118 + 4;
            }
            *((void *)this + 8) = v119;
            goto LABEL_248;
          case 6u:
            if (v20 == 2)
            {
              if (PB::Reader::placeMark()) {
                return 0;
              }
              unint64_t v62 = *((void *)a2 + 1);
              unint64_t v63 = *((void *)a2 + 2);
              while (v62 < v63 && !*((unsigned char *)a2 + 24))
              {
                uint64_t v65 = (char *)*((void *)this + 5);
                unint64_t v64 = *((void *)this + 6);
                if ((unint64_t)v65 >= v64)
                {
                  unsigned int v67 = (char *)*((void *)this + 4);
                  uint64_t v68 = (v65 - v67) >> 2;
                  unint64_t v69 = v68 + 1;
                  if ((unint64_t)(v68 + 1) >> 62) {
                    goto LABEL_258;
                  }
                  uint64_t v70 = v64 - (void)v67;
                  if (v70 >> 1 > v69) {
                    unint64_t v69 = v70 >> 1;
                  }
                  if ((unint64_t)v70 >= 0x7FFFFFFFFFFFFFFCLL) {
                    unint64_t v71 = 0x3FFFFFFFFFFFFFFFLL;
                  }
                  else {
                    unint64_t v71 = v69;
                  }
                  if (v71)
                  {
                    unint64_t v71 = (unint64_t)sub_2572C76F0(v71);
                    unsigned int v67 = (char *)*((void *)this + 4);
                    uint64_t v65 = (char *)*((void *)this + 5);
                  }
                  else
                  {
                    uint64_t v72 = 0;
                  }
                  unsigned int v73 = (_DWORD *)(v71 + 4 * v68);
                  *unsigned int v73 = 0;
                  char v66 = v73 + 1;
                  while (v65 != v67)
                  {
                    int v74 = *((_DWORD *)v65 - 1);
                    v65 -= 4;
                    *--unsigned int v73 = v74;
                  }
                  *((void *)this + 4) = v73;
                  *((void *)this + 5) = v66;
                  *((void *)this + 6) = v71 + 4 * v72;
                  if (v67) {
                    operator delete(v67);
                  }
                }
                else
                {
                  *(_DWORD *)uint64_t v65 = 0;
                  char v66 = v65 + 4;
                }
                *((void *)this + 5) = v66;
                unint64_t v75 = *((void *)a2 + 1);
                if (v75 > 0xFFFFFFFFFFFFFFFBLL || v75 + 4 > *((void *)a2 + 2))
                {
LABEL_182:
                  *((unsigned char *)a2 + 24) = 1;
                  break;
                }
                *(v66 - 1) = *(_DWORD *)(*(void *)a2 + v75);
                unint64_t v63 = *((void *)a2 + 2);
                unint64_t v62 = *((void *)a2 + 1) + 4;
                *((void *)a2 + 1) = v62;
              }
LABEL_183:
              PB::Reader::recallMark();
            }
            else
            {
              unsigned int v121 = (char *)*((void *)this + 5);
              unint64_t v120 = *((void *)this + 6);
              if ((unint64_t)v121 >= v120)
              {
                unint64_t v146 = (char *)*((void *)this + 4);
                uint64_t v147 = (v121 - v146) >> 2;
                unint64_t v148 = v147 + 1;
                if ((unint64_t)(v147 + 1) >> 62) {
LABEL_258:
                }
                  sub_2570AFD0C();
                uint64_t v149 = v120 - (void)v146;
                if (v149 >> 1 > v148) {
                  unint64_t v148 = v149 >> 1;
                }
                if ((unint64_t)v149 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v150 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v150 = v148;
                }
                if (v150)
                {
                  unint64_t v150 = (unint64_t)sub_2572C76F0(v150);
                  unint64_t v146 = (char *)*((void *)this + 4);
                  unsigned int v121 = (char *)*((void *)this + 5);
                }
                else
                {
                  uint64_t v151 = 0;
                }
                unint64_t v158 = (_DWORD *)(v150 + 4 * v147);
                *unint64_t v158 = 0;
                char v119 = v158 + 1;
                while (v121 != v146)
                {
                  int v159 = *((_DWORD *)v121 - 1);
                  v121 -= 4;
                  *--unint64_t v158 = v159;
                }
                *((void *)this + 4) = v158;
                *((void *)this + 5) = v119;
                *((void *)this + 6) = v150 + 4 * v151;
                if (v146) {
                  operator delete(v146);
                }
              }
              else
              {
                *(_DWORD *)unsigned int v121 = 0;
                char v119 = v121 + 4;
              }
              *((void *)this + 5) = v119;
LABEL_248:
              unint64_t v160 = *((void *)a2 + 1);
              if (v160 <= 0xFFFFFFFFFFFFFFFBLL && v160 + 4 <= *((void *)a2 + 2))
              {
                *(v119 - 1) = *(_DWORD *)(*(void *)a2 + v160);
LABEL_252:
                uint64_t v155 = *((void *)a2 + 1) + 4;
LABEL_253:
                *((void *)a2 + 1) = v155;
              }
              else
              {
LABEL_250:
                *((unsigned char *)a2 + 24) = 1;
              }
            }
LABEL_20:
            unint64_t v2 = *((void *)a2 + 1);
            unint64_t v3 = *((void *)a2 + 2);
            int v4 = *((unsigned __int8 *)a2 + 24);
            if (v2 >= v3 || v4 != 0) {
              return v4 == 0;
            }
            continue;
          case 7u:
            *((_WORD *)this + 60) |= 0x80u;
            unint64_t v76 = *((void *)a2 + 1);
            if (v76 >= *((void *)a2 + 2))
            {
              BOOL v79 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v77 = v76 + 1;
              int v78 = *(unsigned __int8 *)(*(void *)a2 + v76);
              *((void *)a2 + 1) = v77;
              BOOL v79 = v78 != 0;
            }
            *((unsigned char *)this + 116) = v79;
            goto LABEL_20;
          case 8u:
            *((_WORD *)this + 60) |= 0x100u;
            unint64_t v80 = *((void *)a2 + 1);
            if (v80 >= *((void *)a2 + 2))
            {
              BOOL v83 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v81 = v80 + 1;
              int v82 = *(unsigned __int8 *)(*(void *)a2 + v80);
              *((void *)a2 + 1) = v81;
              BOOL v83 = v82 != 0;
            }
            *((unsigned char *)this + 117) = v83;
            goto LABEL_20;
          case 9u:
            *((_WORD *)this + 60) |= 4u;
            unint64_t v84 = *((void *)a2 + 1);
            if (v84 > 0xFFFFFFFFFFFFFFFBLL || v84 + 4 > *((void *)a2 + 2)) {
              goto LABEL_250;
            }
            *((_DWORD *)this + 24) = *(_DWORD *)(*(void *)a2 + v84);
            goto LABEL_252;
          case 0xAu:
            *((_WORD *)this + 60) |= 8u;
            unint64_t v85 = *((void *)a2 + 1);
            if (v85 > 0xFFFFFFFFFFFFFFFBLL || v85 + 4 > *((void *)a2 + 2)) {
              goto LABEL_250;
            }
            *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v85);
            goto LABEL_252;
          case 0xBu:
            *((_WORD *)this + 60) |= 0x40u;
            unint64_t v86 = *((void *)a2 + 1);
            unint64_t v87 = *((void *)a2 + 2);
            uint64_t v88 = *(void *)a2;
            if (v86 <= 0xFFFFFFFFFFFFFFF5 && v86 + 10 <= v87)
            {
              char v89 = 0;
              unsigned int v90 = 0;
              uint64_t v91 = 0;
              do
              {
                unint64_t v92 = v86 + 1;
                *((void *)a2 + 1) = v86 + 1;
                char v93 = *(unsigned char *)(v88 + v86);
                v91 |= (unint64_t)(v93 & 0x7F) << v89;
                if ((v93 & 0x80) == 0) {
                  goto LABEL_217;
                }
                v89 += 7;
                unint64_t v86 = v92;
                BOOL v14 = v90++ > 8;
              }
              while (!v14);
LABEL_167:
              LODWORD(v91) = 0;
              goto LABEL_217;
            }
            char v122 = 0;
            unsigned int v123 = 0;
            uint64_t v91 = 0;
            if (v87 <= v86) {
              unint64_t v87 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v87 == v86)
              {
                LODWORD(v91) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v124 = v86 + 1;
                char v125 = *(unsigned char *)(v88 + v86);
                *((void *)a2 + 1) = v124;
                v91 |= (unint64_t)(v125 & 0x7F) << v122;
                if (v125 < 0)
                {
                  v122 += 7;
                  unint64_t v86 = v124;
                  BOOL v14 = v123++ > 8;
                  if (v14) {
                    goto LABEL_167;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v91) = 0;
                }
              }
              break;
            }
LABEL_217:
            *((_DWORD *)this + 28) = v91;
            goto LABEL_20;
          case 0xCu:
            *((_WORD *)this + 60) |= 0x20u;
            unint64_t v94 = *((void *)a2 + 1);
            unint64_t v95 = *((void *)a2 + 2);
            uint64_t v96 = *(void *)a2;
            if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v95)
            {
              char v97 = 0;
              unsigned int v98 = 0;
              uint64_t v99 = 0;
              do
              {
                unint64_t v100 = v94 + 1;
                *((void *)a2 + 1) = v94 + 1;
                char v101 = *(unsigned char *)(v96 + v94);
                v99 |= (unint64_t)(v101 & 0x7F) << v97;
                if ((v101 & 0x80) == 0) {
                  goto LABEL_220;
                }
                v97 += 7;
                unint64_t v94 = v100;
                BOOL v14 = v98++ > 8;
              }
              while (!v14);
LABEL_174:
              LODWORD(v99) = 0;
              goto LABEL_220;
            }
            char v126 = 0;
            unsigned int v127 = 0;
            uint64_t v99 = 0;
            if (v95 <= v94) {
              unint64_t v95 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v95 == v94)
              {
                LODWORD(v99) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v128 = v94 + 1;
                char v129 = *(unsigned char *)(v96 + v94);
                *((void *)a2 + 1) = v128;
                v99 |= (unint64_t)(v129 & 0x7F) << v126;
                if (v129 < 0)
                {
                  v126 += 7;
                  unint64_t v94 = v128;
                  BOOL v14 = v127++ > 8;
                  if (v14) {
                    goto LABEL_174;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v99) = 0;
                }
              }
              break;
            }
LABEL_220:
            *((_DWORD *)this + 27) = v99;
            goto LABEL_20;
          case 0xDu:
            *((_WORD *)this + 60) |= 0x10u;
            unint64_t v102 = *((void *)a2 + 1);
            unint64_t v103 = *((void *)a2 + 2);
            uint64_t v104 = *(void *)a2;
            if (v102 <= 0xFFFFFFFFFFFFFFF5 && v102 + 10 <= v103)
            {
              char v105 = 0;
              unsigned int v106 = 0;
              uint64_t v107 = 0;
              do
              {
                unint64_t v108 = v102 + 1;
                *((void *)a2 + 1) = v102 + 1;
                char v109 = *(unsigned char *)(v104 + v102);
                v107 |= (unint64_t)(v109 & 0x7F) << v105;
                if ((v109 & 0x80) == 0) {
                  goto LABEL_223;
                }
                v105 += 7;
                unint64_t v102 = v108;
                BOOL v14 = v106++ > 8;
              }
              while (!v14);
LABEL_181:
              LODWORD(v107) = 0;
              goto LABEL_223;
            }
            char v130 = 0;
            unsigned int v131 = 0;
            uint64_t v107 = 0;
            if (v103 <= v102) {
              unint64_t v103 = *((void *)a2 + 1);
            }
            while (2)
            {
              if (v103 == v102)
              {
                LODWORD(v107) = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v132 = v102 + 1;
                char v133 = *(unsigned char *)(v104 + v102);
                *((void *)a2 + 1) = v132;
                v107 |= (unint64_t)(v133 & 0x7F) << v130;
                if (v133 < 0)
                {
                  v130 += 7;
                  unint64_t v102 = v132;
                  BOOL v14 = v131++ > 8;
                  if (v14) {
                    goto LABEL_181;
                  }
                  continue;
                }
                if (*((unsigned char *)a2 + 24)) {
                  LODWORD(v107) = 0;
                }
              }
              break;
            }
LABEL_223:
            *((_DWORD *)this + 26) = v107;
            goto LABEL_20;
          default:
            goto LABEL_19;
        }
      }
      int v4 = 0;
      return v4 == 0;
    }
    break;
  }
  char v15 = 0;
  unsigned int v16 = 0;
  unint64_t v11 = 0;
  if (v2 > v3) {
    unint64_t v3 = v2;
  }
  do
  {
    if (v3 == v2)
    {
      int v4 = 1;
      *((unsigned char *)a2 + 24) = 1;
      return v4 == 0;
    }
    unint64_t v17 = v2 + 1;
    char v18 = *(unsigned char *)(v8 + v2);
    *((void *)a2 + 1) = v17;
    v11 |= (unint64_t)(v18 & 0x7F) << v15;
    if ((v18 & 0x80) == 0) {
      goto LABEL_25;
    }
    v15 += 7;
    unint64_t v2 = v17;
    BOOL v14 = v16++ > 8;
  }
  while (!v14);
LABEL_19:
  if (PB::Reader::skip(a2)) {
    goto LABEL_20;
  }
  return 0;
}

uint64_t CMMsl::KappaTriggerDebug::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 120);
  if ((v4 & 2) == 0)
  {
    if ((*(_WORD *)(this + 120) & 0x200) == 0) {
      goto LABEL_3;
    }
LABEL_23:
    this = PB::Writer::write(a2);
    if ((*(_WORD *)(v3 + 120) & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 120);
  if ((v4 & 0x200) != 0) {
    goto LABEL_23;
  }
LABEL_3:
  if (v4) {
LABEL_4:
  }
    this = PB::Writer::write(a2, *(double *)(v3 + 80));
LABEL_5:
  __int16 v5 = *(double **)(v3 + 8);
  uint64_t v6 = *(double **)(v3 + 16);
  while (v5 != v6)
  {
    double v7 = *v5++;
    this = PB::Writer::write(a2, v7);
  }
  uint64_t v8 = *(float **)(v3 + 56);
  char v9 = *(float **)(v3 + 64);
  while (v8 != v9)
  {
    float v10 = *v8++;
    this = PB::Writer::write(a2, v10);
  }
  unint64_t v11 = *(float **)(v3 + 32);
  unint64_t v12 = *(float **)(v3 + 40);
  while (v11 != v12)
  {
    float v13 = *v11++;
    this = PB::Writer::write(a2, v13);
  }
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x80) != 0)
  {
    this = PB::Writer::write(a2);
    __int16 v14 = *(_WORD *)(v3 + 120);
    if ((v14 & 0x100) == 0)
    {
LABEL_16:
      if ((v14 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_27;
    }
  }
  else if ((*(_WORD *)(v3 + 120) & 0x100) == 0)
  {
    goto LABEL_16;
  }
  this = PB::Writer::write(a2);
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 4) == 0)
  {
LABEL_17:
    if ((v14 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = PB::Writer::write(a2, *(float *)(v3 + 96));
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 8) == 0)
  {
LABEL_18:
    if ((v14 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x40) == 0)
  {
LABEL_19:
    if ((v14 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_30:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_WORD *)(v3 + 120) & 0x10) == 0) {
      return this;
    }
    goto LABEL_31;
  }
LABEL_29:
  this = PB::Writer::writeVarInt(a2);
  __int16 v14 = *(_WORD *)(v3 + 120);
  if ((v14 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_20:
  if ((v14 & 0x10) == 0) {
    return this;
  }
LABEL_31:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaTriggerDebug::hash_value(CMMsl::KappaTriggerDebug *this)
{
  __int16 v2 = *((_WORD *)this + 60);
  if ((v2 & 2) != 0)
  {
    uint64_t v3 = *((void *)this + 11);
    if ((*((_WORD *)this + 60) & 0x200) != 0)
    {
LABEL_3:
      uint64_t v4 = *((unsigned __int8 *)this + 118);
      if (v2) {
        goto LABEL_4;
      }
LABEL_9:
      uint64_t v5 = 0;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((_WORD *)this + 60) & 0x200) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v4 = 0;
  if ((v2 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_4:
  if (*((double *)this + 10) == 0.0) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *((void *)this + 10);
  }
LABEL_10:
  uint64_t v6 = PBHashBytes();
  uint64_t v7 = PBHashBytes();
  uint64_t v8 = PBHashBytes();
  __int16 v9 = *((_WORD *)this + 60);
  if ((v9 & 0x80) != 0)
  {
    uint64_t v10 = *((unsigned __int8 *)this + 116);
    if ((*((_WORD *)this + 60) & 0x100) != 0)
    {
LABEL_12:
      uint64_t v11 = *((unsigned __int8 *)this + 117);
      if ((v9 & 4) != 0) {
        goto LABEL_13;
      }
LABEL_24:
      uint64_t v13 = 0;
      if ((v9 & 8) != 0) {
        goto LABEL_16;
      }
LABEL_25:
      uint64_t v15 = 0;
      if ((v9 & 0x40) != 0) {
        goto LABEL_19;
      }
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v10 = 0;
    if ((*((_WORD *)this + 60) & 0x100) != 0) {
      goto LABEL_12;
    }
  }
  uint64_t v11 = 0;
  if ((v9 & 4) == 0) {
    goto LABEL_24;
  }
LABEL_13:
  float v12 = *((float *)this + 24);
  uint64_t v13 = LODWORD(v12);
  if (v12 == 0.0) {
    uint64_t v13 = 0;
  }
  if ((v9 & 8) == 0) {
    goto LABEL_25;
  }
LABEL_16:
  float v14 = *((float *)this + 25);
  uint64_t v15 = LODWORD(v14);
  if (v14 == 0.0) {
    uint64_t v15 = 0;
  }
  if ((v9 & 0x40) != 0)
  {
LABEL_19:
    uint64_t v16 = *((unsigned int *)this + 28);
    if ((v9 & 0x20) != 0) {
      goto LABEL_20;
    }
LABEL_27:
    uint64_t v17 = 0;
    if ((v9 & 0x10) != 0) {
      goto LABEL_21;
    }
LABEL_28:
    uint64_t v18 = 0;
    return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v10 ^ v11 ^ v13 ^ v15 ^ v16 ^ v17 ^ v18;
  }
LABEL_26:
  uint64_t v16 = 0;
  if ((v9 & 0x20) == 0) {
    goto LABEL_27;
  }
LABEL_20:
  uint64_t v17 = *((unsigned int *)this + 27);
  if ((v9 & 0x10) == 0) {
    goto LABEL_28;
  }
LABEL_21:
  uint64_t v18 = *((unsigned int *)this + 26);
  return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ v10 ^ v11 ^ v13 ^ v15 ^ v16 ^ v17 ^ v18;
}

void CMMsl::KappaZgDetected::~KappaZgDetected(CMMsl::KappaZgDetected *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaZgDetected::KappaZgDetected(uint64_t this, const CMMsl::KappaZgDetected *a2)
{
  *(void *)this = &unk_270642DE0;
  *(_DWORD *)(this + 16) = 0;
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v2 = *((void *)a2 + 1);
    *(unsigned char *)(this + 16) = 1;
    *(void *)(this + 8) = v2;
  }
  return this;
}

uint64_t CMMsl::KappaZgDetected::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(a2 + 8);
    int v4 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = *(unsigned char *)(a2 + 16) & 1;
    int v8 = v4;
    uint64_t v5 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v3;
    v7[0] = &unk_270642DE0;
    v7[1] = v5;
    PB::Base::~Base((PB::Base *)v7);
  }
  return a1;
}

{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void v8[2];
  int v9;

  if (a1 != a2)
  {
    uint64_t v3 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a2 + 16) = 0;
    int v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v3;
    __int16 v9 = v5;
    uint64_t v6 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v4;
    v8[0] = &unk_270642DE0;
    v8[1] = v6;
    PB::Base::~Base((PB::Base *)v8);
  }
  return a1;
}

uint64_t CMMsl::swap(uint64_t this, CMMsl::KappaZgDetected *a2, CMMsl::KappaZgDetected *a3)
{
  int v3 = *(_DWORD *)(this + 16);
  *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v3;
  uint64_t v4 = *(void *)(this + 8);
  *(void *)(this + 8) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  return this;
}

uint64_t CMMsl::KappaZgDetected::formatText(CMMsl::KappaZgDetected *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  if (*((unsigned char *)this + 16)) {
    PB::TextFormatter::format(a2, "timestamp");
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaZgDetected::readFrom(CMMsl::KappaZgDetected *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_29;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *((unsigned char *)this + 16) |= 1u;
        unint64_t v19 = *((void *)a2 + 1);
        unint64_t v3 = *((void *)a2 + 2);
        uint64_t v20 = *(void *)a2;
        if (v19 > 0xFFFFFFFFFFFFFFF5 || v19 + 10 > v3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v23 = 0;
          if (v3 <= v19) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          else {
            unint64_t v2 = *((void *)a2 + 2);
          }
          while (1)
          {
            if (v2 == v19)
            {
              uint64_t v23 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_43;
            }
            unint64_t v28 = v19++;
            char v29 = *(unsigned char *)(v20 + v28);
            *((void *)a2 + 1) = v19;
            v23 |= (unint64_t)(v29 & 0x7F) << v26;
            if ((v29 & 0x80) == 0) {
              break;
            }
            v26 += 7;
            BOOL v14 = v27++ > 8;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_42;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v23 = 0;
          }
LABEL_42:
          unint64_t v2 = v28 + 1;
        }
        else
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          while (1)
          {
            unint64_t v2 = v19 + 1;
            *((void *)a2 + 1) = v19 + 1;
            char v24 = *(unsigned char *)(v20 + v19);
            v23 |= (unint64_t)(v24 & 0x7F) << v21;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v21 += 7;
            unint64_t v19 = v2;
            BOOL v14 = v22++ > 8;
            if (v14)
            {
              uint64_t v23 = 0;
              break;
            }
          }
        }
LABEL_43:
        *((void *)this + 1) = v23;
      }
      else
      {
LABEL_29:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
        unint64_t v3 = *((void *)a2 + 2);
      }
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_29;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KappaZgDetected::writeTo(uint64_t this, PB::Writer *a2)
{
  if (*(unsigned char *)(this + 16)) {
    return PB::Writer::writeVarInt(a2);
  }
  return this;
}

uint64_t CMMsl::KappaZgDetected::hash_value(CMMsl::KappaZgDetected *this)
{
  if (*((unsigned char *)this + 16)) {
    return *((void *)this + 1);
  }
  else {
    return 0;
  }
}

void CMMsl::KappaZgResult::~KappaZgResult(CMMsl::KappaZgResult *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KappaZgResult::KappaZgResult(uint64_t this, const CMMsl::KappaZgResult *a2)
{
  *(void *)this = &unk_270642E18;
  *(void *)(this + 164) = 0;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x100000000) != 0)
  {
    char v4 = *((unsigned char *)a2 + 160);
    uint64_t v3 = 0x100000000;
    *(void *)(this + 164) = 0x100000000;
    *(unsigned char *)(this + 160) = v4;
    uint64_t v2 = *(void *)((char *)a2 + 164);
    if ((v2 & 0x100000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if ((v2 & 0x100000) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 28);
    v3 |= 0x100000uLL;
    *(void *)(this + 164) = v3;
    *(_DWORD *)(this + 112) = v5;
    uint64_t v2 = *(void *)((char *)a2 + 164);
  }
LABEL_6:
  if ((v2 & 0x80000) != 0)
  {
    int v6 = *((_DWORD *)a2 + 27);
    v3 |= 0x80000uLL;
    *(void *)(this + 164) = v3;
    *(_DWORD *)(this + 108) = v6;
    uint64_t v2 = *(void *)((char *)a2 + 164);
    if ((v2 & 0x1000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x20000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_40;
    }
  }
  else if ((v2 & 0x1000000) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 32);
  v3 |= 0x1000000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 128) = v7;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v8 = *((_DWORD *)a2 + 37);
  v3 |= 0x20000000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 148) = v8;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_10:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v9 = *((_DWORD *)a2 + 34);
  v3 |= 0x4000000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 136) = v9;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_11:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_42:
  int v10 = *((_DWORD *)a2 + 39);
  v3 |= 0x80000000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 156) = v10;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  int v11 = *((_DWORD *)a2 + 36);
  v3 |= 0x10000000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 144) = v11;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x200000) == 0)
  {
LABEL_13:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v12 = *((_DWORD *)a2 + 29);
  v3 |= 0x200000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 116) = v12;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x400000) == 0)
  {
LABEL_14:
    if ((v2 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_46;
  }
LABEL_45:
  int v13 = *((_DWORD *)a2 + 30);
  v3 |= 0x400000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 120) = v13;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v14 = *((void *)a2 + 5);
  v3 |= 0x10uLL;
  *(void *)(this + 164) = v3;
  *(void *)(this + 40) = v14;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v15 = *((void *)a2 + 4);
  v3 |= 8uLL;
  *(void *)(this + 164) = v3;
  *(void *)(this + 32) = v15;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 4) == 0)
  {
LABEL_17:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v16 = *((void *)a2 + 3);
  v3 |= 4uLL;
  *(void *)(this + 164) = v3;
  *(void *)(this + 24) = v16;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x8000) == 0)
  {
LABEL_18:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v17 = *((_DWORD *)a2 + 23);
  v3 |= 0x8000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 92) = v17;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x20000) == 0)
  {
LABEL_19:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_51;
  }
LABEL_50:
  int v18 = *((_DWORD *)a2 + 25);
  v3 |= 0x20000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 100) = v18;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x10000) == 0)
  {
LABEL_20:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_52;
  }
LABEL_51:
  int v19 = *((_DWORD *)a2 + 24);
  v3 |= 0x10000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 96) = v19;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x40000) == 0)
  {
LABEL_21:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_53;
  }
LABEL_52:
  int v20 = *((_DWORD *)a2 + 26);
  v3 |= 0x40000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 104) = v20;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x4000) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v21 = *((_DWORD *)a2 + 22);
  v3 |= 0x4000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 88) = v21;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_55;
  }
LABEL_54:
  int v22 = *((_DWORD *)a2 + 14);
  v3 |= 0x40uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 56) = v22;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x80) == 0)
  {
LABEL_24:
    if ((v2 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v23 = *((_DWORD *)a2 + 15);
  v3 |= 0x80uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 60) = v23;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x800) == 0)
  {
LABEL_25:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v24 = *((_DWORD *)a2 + 19);
  v3 |= 0x800uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 76) = v24;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x1000) == 0)
  {
LABEL_26:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v25 = *((_DWORD *)a2 + 20);
  v3 |= 0x1000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 80) = v25;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x2000) == 0)
  {
LABEL_27:
    if ((v2 & 0x100) == 0) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v26 = *((_DWORD *)a2 + 21);
  v3 |= 0x2000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 84) = v26;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x100) == 0)
  {
LABEL_28:
    if ((v2 & 0x200) == 0) {
      goto LABEL_29;
    }
    goto LABEL_60;
  }
LABEL_59:
  int v27 = *((_DWORD *)a2 + 16);
  v3 |= 0x100uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 64) = v27;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x200) == 0)
  {
LABEL_29:
    if ((v2 & 0x400) == 0) {
      goto LABEL_30;
    }
    goto LABEL_61;
  }
LABEL_60:
  int v28 = *((_DWORD *)a2 + 17);
  v3 |= 0x200uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 68) = v28;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x400) == 0)
  {
LABEL_30:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v29 = *((_DWORD *)a2 + 18);
  v3 |= 0x400uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 72) = v29;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_31:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v30 = *((_DWORD *)a2 + 35);
  v3 |= 0x8000000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 140) = v30;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x800000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v31 = *((_DWORD *)a2 + 31);
  v3 |= 0x800000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 124) = v31;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x20) == 0)
  {
LABEL_33:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v32 = *((void *)a2 + 6);
  v3 |= 0x20uLL;
  *(void *)(this + 164) = v3;
  *(void *)(this + 48) = v32;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v33 = *((_DWORD *)a2 + 33);
  v3 |= 0x2000000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 132) = v33;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_35:
    if ((v2 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v34 = *((_DWORD *)a2 + 38);
  v3 |= 0x40000000uLL;
  *(void *)(this + 164) = v3;
  *(_DWORD *)(this + 152) = v34;
  uint64_t v2 = *(void *)((char *)a2 + 164);
  if ((v2 & 1) == 0)
  {
LABEL_36:
    if ((v2 & 2) == 0) {
      return this;
    }
LABEL_68:
    uint64_t v36 = *((void *)a2 + 2);
    *(void *)(this + 164) = v3 | 2;
    *(void *)(this + 16) = v36;
    return this;
  }
LABEL_67:
  uint64_t v35 = *((void *)a2 + 1);
  v3 |= 1uLL;
  *(void *)(this + 164) = v3;
  *(void *)(this + 8) = v35;
  if ((*(void *)((unsigned char *)a2 + 164) & 2) != 0) {
    goto LABEL_68;
  }
  return this;
}

CMMsl *CMMsl::KappaZgResult::operator=(CMMsl *a1, const CMMsl::KappaZgResult *a2)
{
  if (a1 != a2)
  {
    CMMsl::KappaZgResult::KappaZgResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaZgResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KappaZgResult *a2, CMMsl::KappaZgResult *a3)
{
  uint64_t v3 = *(void *)((char *)this + 164);
  *(void *)((char *)this + 164) = *(void *)((char *)a2 + 164);
  *(void *)((char *)a2 + 164) = v3;
  LOBYTE(v3) = *((unsigned char *)this + 160);
  *((unsigned char *)this + 160) = *((unsigned char *)a2 + 160);
  *((unsigned char *)a2 + 160) = v3;
  LODWORD(v3) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v3;
  LODWORD(v3) = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v3;
  int v4 = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v4;
  int v5 = *((_DWORD *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((_DWORD *)a2 + 37) = v5;
  int v6 = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v6;
  int v7 = *((_DWORD *)this + 39);
  *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
  *((_DWORD *)a2 + 39) = v7;
  int v8 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v8;
  LODWORD(v3) = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v3;
  LODWORD(v3) = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v3;
  uint64_t v9 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v9;
  uint64_t v10 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v10;
  uint64_t v11 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v11;
  LODWORD(v11) = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v11;
  int v12 = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v12;
  LODWORD(v11) = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v11;
  int v13 = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v13;
  int v14 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v14;
  int v15 = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v15;
  LODWORD(v11) = *((_DWORD *)this + 15);
  *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = v11;
  int v16 = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v16;
  int v17 = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v17;
  int v18 = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v18;
  int v19 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v19;
  int v20 = *((_DWORD *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((_DWORD *)a2 + 17) = v20;
  int v21 = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v21;
  int v22 = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v22;
  LODWORD(v11) = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v11;
  uint64_t v23 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v23;
  int v24 = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v24;
  float result = *((float *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((float *)a2 + 38) = result;
  uint64_t v26 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v26;
  uint64_t v27 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v27;
  return result;
}

float CMMsl::KappaZgResult::KappaZgResult(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642E18;
  *(void *)(a1 + 164) = *(void *)(a2 + 164);
  *(void *)(a2 + 164) = 0;
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  float result = *(float *)(a2 + 152);
  *(float *)(a1 + 152) = result;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return result;
}

CMMsl *CMMsl::KappaZgResult::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::KappaZgResult::KappaZgResult((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::KappaZgResult *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::KappaZgResult::formatText(CMMsl::KappaZgResult *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x40) != 0)
  {
    PB::TextFormatter::format(a2, "configAccelThresholdNorm", *((float *)this + 14));
    uint64_t v5 = *(void *)((char *)this + 164);
    if ((v5 & 0x80) == 0)
    {
LABEL_3:
      if ((v5 & 0x100) == 0) {
        goto LABEL_4;
      }
      goto LABEL_40;
    }
  }
  else if ((v5 & 0x80) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "configHardware");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x100) == 0)
  {
LABEL_4:
    if ((v5 & 0x200) == 0) {
      goto LABEL_5;
    }
    goto LABEL_41;
  }
LABEL_40:
  PB::TextFormatter::format(a2, "configIx", *((float *)this + 16));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x200) == 0)
  {
LABEL_5:
    if ((v5 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_42;
  }
LABEL_41:
  PB::TextFormatter::format(a2, "configIy", *((float *)this + 17));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x400) == 0)
  {
LABEL_6:
    if ((v5 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_42:
  PB::TextFormatter::format(a2, "configIz", *((float *)this + 18));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x800) == 0)
  {
LABEL_7:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_44;
  }
LABEL_43:
  PB::TextFormatter::format(a2, "configLx", *((float *)this + 19));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x1000) == 0)
  {
LABEL_8:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_45;
  }
LABEL_44:
  PB::TextFormatter::format(a2, "configLy", *((float *)this + 20));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x2000) == 0)
  {
LABEL_9:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_46;
  }
LABEL_45:
  PB::TextFormatter::format(a2, "configLz", *((float *)this + 21));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x4000) == 0)
  {
LABEL_10:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_47;
  }
LABEL_46:
  PB::TextFormatter::format(a2, "configZgThreshold", *((float *)this + 22));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x8000) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_48;
  }
LABEL_47:
  PB::TextFormatter::format(a2, "debugCountOfAccelDataDrop");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x10000) == 0)
  {
LABEL_12:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_48:
  PB::TextFormatter::format(a2, "debugCountOfDmDataDrop");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x20000) == 0)
  {
LABEL_13:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_50;
  }
LABEL_49:
  PB::TextFormatter::format(a2, "debugMaxTimeBetweenAccelSample", *((float *)this + 25));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x40000) == 0)
  {
LABEL_14:
    if ((v5 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_51;
  }
LABEL_50:
  PB::TextFormatter::format(a2, "debugMaxTimeBetweenDmSample", *((float *)this + 26));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 1) == 0)
  {
LABEL_15:
    if ((v5 & 2) == 0) {
      goto LABEL_16;
    }
    goto LABEL_52;
  }
LABEL_51:
  PB::TextFormatter::format(a2, "epochFirstTimestamp");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 2) == 0)
  {
LABEL_16:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(a2, "epochLastTimestamp");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(a2, "freefallTpQualifier");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x80000) == 0)
  {
LABEL_18:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(a2, "metaCountOfFreefallImpactPassed");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x100000) == 0)
  {
LABEL_19:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(a2, "metaCountOfFreefallTimePassed");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x200000) == 0)
  {
LABEL_20:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(a2, "metaCountOfSigImpact");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x400000) == 0)
  {
LABEL_21:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(a2, "metaCountOfZgSegment");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x800000) == 0)
  {
LABEL_22:
    if ((v5 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(a2, "metaCrossingCount");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 4) == 0)
  {
LABEL_23:
    if ((v5 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(a2, "metaDtBwFirstAndLastFreeFall");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 8) == 0)
  {
LABEL_24:
    if ((v5 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(a2, "metaDtBwFirstFreeFall");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x10) == 0)
  {
LABEL_25:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(a2, "metaDtBwFirstSigImpact");
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(a2, "metaFreefallTime", *((float *)this + 32));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(a2, "metaFreefallTimeForImpact", *((float *)this + 33));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(a2, "metaMaxOfAccel", *((float *)this + 34));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(a2, "metaMaxPower", *((float *)this + 35));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(a2, "metaMaxZgSegmentTime", *((float *)this + 36));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(a2, "metaNormOfAccel", *((float *)this + 37));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(a2, "metaNormOfImpact", *((float *)this + 38));
  uint64_t v5 = *(void *)((char *)this + 164);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
LABEL_69:
  PB::TextFormatter::format(a2, "metaTotalZgTime", *((float *)this + 39));
  if ((*(void *)((unsigned char *)this + 164) & 0x20) != 0) {
LABEL_34:
  }
    PB::TextFormatter::format(a2, "timestamp");
LABEL_35:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KappaZgResult::readFrom(CMMsl::KappaZgResult *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (2)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
      {
        char v15 = 0;
        unsigned int v16 = 0;
        unint64_t v11 = 0;
        if (v2 > v3) {
          unint64_t v3 = v2;
        }
        while (v3 != v2)
        {
          unint64_t v17 = v2 + 1;
          char v18 = *(unsigned char *)(v8 + v2);
          *((void *)a2 + 1) = v17;
          v11 |= (unint64_t)(v18 & 0x7F) << v15;
          if ((v18 & 0x80) == 0) {
            goto LABEL_21;
          }
          v15 += 7;
          unint64_t v2 = v17;
          BOOL v14 = v16++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
        int v4 = 1;
        *((unsigned char *)a2 + 24) = 1;
      }
      else
      {
        char v9 = 0;
        unsigned int v10 = 0;
        unint64_t v11 = 0;
        while (1)
        {
          unint64_t v12 = v2 + 1;
          *((void *)a2 + 1) = v2 + 1;
          char v13 = *(unsigned char *)(v8 + v2);
          v11 |= (unint64_t)(v13 & 0x7F) << v9;
          if ((v13 & 0x80) == 0) {
            break;
          }
          v9 += 7;
          unint64_t v2 = v12;
          BOOL v14 = v10++ > 8;
          if (v14) {
            goto LABEL_19;
          }
        }
LABEL_21:
        if ((v11 & 7) != 4)
        {
          unint64_t v20 = v11 >> 3;
          switch((v11 >> 3))
          {
            case 1u:
              *(void *)((char *)this + 164) |= 0x100000000uLL;
              unint64_t v21 = *((void *)a2 + 1);
              if (v21 >= *((void *)a2 + 2))
              {
                BOOL v24 = 0;
                *((unsigned char *)a2 + 24) = 1;
              }
              else
              {
                unint64_t v22 = v21 + 1;
                int v23 = *(unsigned __int8 *)(*(void *)a2 + v21);
                *((void *)a2 + 1) = v22;
                BOOL v24 = v23 != 0;
              }
              *((unsigned char *)this + 160) = v24;
              goto LABEL_281;
            case 2u:
              *(void *)((char *)this + 164) |= 0x100000uLL;
              unint64_t v33 = *((void *)a2 + 1);
              unint64_t v34 = *((void *)a2 + 2);
              uint64_t v35 = *(void *)a2;
              if (v33 <= 0xFFFFFFFFFFFFFFF5 && v33 + 10 <= v34)
              {
                char v36 = 0;
                unsigned int v37 = 0;
                uint64_t v38 = 0;
                do
                {
                  unint64_t v39 = v33 + 1;
                  *((void *)a2 + 1) = v33 + 1;
                  char v40 = *(unsigned char *)(v35 + v33);
                  v38 |= (unint64_t)(v40 & 0x7F) << v36;
                  if ((v40 & 0x80) == 0) {
                    goto LABEL_293;
                  }
                  v36 += 7;
                  unint64_t v33 = v39;
                  BOOL v14 = v37++ > 8;
                }
                while (!v14);
LABEL_194:
                LODWORD(v38) = 0;
                goto LABEL_293;
              }
              char v159 = 0;
              unsigned int v160 = 0;
              uint64_t v38 = 0;
              if (v34 <= v33) {
                unint64_t v34 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v34 == v33)
                {
                  LODWORD(v38) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v161 = v33 + 1;
                  char v162 = *(unsigned char *)(v35 + v33);
                  *((void *)a2 + 1) = v161;
                  v38 |= (unint64_t)(v162 & 0x7F) << v159;
                  if (v162 < 0)
                  {
                    v159 += 7;
                    unint64_t v33 = v161;
                    BOOL v14 = v160++ > 8;
                    if (v14) {
                      goto LABEL_194;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    LODWORD(v38) = 0;
                  }
                }
                break;
              }
LABEL_293:
              *((_DWORD *)this + 28) = v38;
              goto LABEL_281;
            case 3u:
              *(void *)((char *)this + 164) |= 0x80000uLL;
              unint64_t v41 = *((void *)a2 + 1);
              unint64_t v42 = *((void *)a2 + 2);
              uint64_t v43 = *(void *)a2;
              if (v41 <= 0xFFFFFFFFFFFFFFF5 && v41 + 10 <= v42)
              {
                char v44 = 0;
                unsigned int v45 = 0;
                uint64_t v46 = 0;
                do
                {
                  unint64_t v47 = v41 + 1;
                  *((void *)a2 + 1) = v41 + 1;
                  char v48 = *(unsigned char *)(v43 + v41);
                  v46 |= (unint64_t)(v48 & 0x7F) << v44;
                  if ((v48 & 0x80) == 0) {
                    goto LABEL_297;
                  }
                  v44 += 7;
                  unint64_t v41 = v47;
                  BOOL v14 = v45++ > 8;
                }
                while (!v14);
LABEL_201:
                LODWORD(v46) = 0;
                goto LABEL_297;
              }
              char v163 = 0;
              unsigned int v164 = 0;
              uint64_t v46 = 0;
              if (v42 <= v41) {
                unint64_t v42 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v42 == v41)
                {
                  LODWORD(v46) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v165 = v41 + 1;
                  char v166 = *(unsigned char *)(v43 + v41);
                  *((void *)a2 + 1) = v165;
                  v46 |= (unint64_t)(v166 & 0x7F) << v163;
                  if (v166 < 0)
                  {
                    v163 += 7;
                    unint64_t v41 = v165;
                    BOOL v14 = v164++ > 8;
                    if (v14) {
                      goto LABEL_201;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    LODWORD(v46) = 0;
                  }
                }
                break;
              }
LABEL_297:
              *((_DWORD *)this + 27) = v46;
              goto LABEL_281;
            case 4u:
              *(void *)((char *)this + 164) |= 0x1000000uLL;
              unint64_t v49 = *((void *)a2 + 1);
              if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v49);
              goto LABEL_280;
            case 5u:
              *(void *)((char *)this + 164) |= 0x20000000uLL;
              unint64_t v50 = *((void *)a2 + 1);
              if (v50 > 0xFFFFFFFFFFFFFFFBLL || v50 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 37) = *(_DWORD *)(*(void *)a2 + v50);
              goto LABEL_280;
            case 6u:
              *(void *)((char *)this + 164) |= 0x4000000uLL;
              unint64_t v51 = *((void *)a2 + 1);
              if (v51 > 0xFFFFFFFFFFFFFFFBLL || v51 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 34) = *(_DWORD *)(*(void *)a2 + v51);
              goto LABEL_280;
            case 7u:
              *(void *)((char *)this + 164) |= 0x80000000uLL;
              unint64_t v52 = *((void *)a2 + 1);
              if (v52 > 0xFFFFFFFFFFFFFFFBLL || v52 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 39) = *(_DWORD *)(*(void *)a2 + v52);
              goto LABEL_280;
            case 8u:
              *(void *)((char *)this + 164) |= 0x10000000uLL;
              unint64_t v53 = *((void *)a2 + 1);
              if (v53 > 0xFFFFFFFFFFFFFFFBLL || v53 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 36) = *(_DWORD *)(*(void *)a2 + v53);
              goto LABEL_280;
            case 9u:
              *(void *)((char *)this + 164) |= 0x200000uLL;
              unint64_t v54 = *((void *)a2 + 1);
              unint64_t v55 = *((void *)a2 + 2);
              uint64_t v56 = *(void *)a2;
              if (v54 <= 0xFFFFFFFFFFFFFFF5 && v54 + 10 <= v55)
              {
                char v57 = 0;
                unsigned int v58 = 0;
                uint64_t v59 = 0;
                do
                {
                  unint64_t v60 = v54 + 1;
                  *((void *)a2 + 1) = v54 + 1;
                  char v61 = *(unsigned char *)(v56 + v54);
                  v59 |= (unint64_t)(v61 & 0x7F) << v57;
                  if ((v61 & 0x80) == 0) {
                    goto LABEL_301;
                  }
                  v57 += 7;
                  unint64_t v54 = v60;
                  BOOL v14 = v58++ > 8;
                }
                while (!v14);
LABEL_208:
                LODWORD(v59) = 0;
                goto LABEL_301;
              }
              char v167 = 0;
              unsigned int v168 = 0;
              uint64_t v59 = 0;
              if (v55 <= v54) {
                unint64_t v55 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v55 == v54)
                {
                  LODWORD(v59) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v169 = v54 + 1;
                  char v170 = *(unsigned char *)(v56 + v54);
                  *((void *)a2 + 1) = v169;
                  v59 |= (unint64_t)(v170 & 0x7F) << v167;
                  if (v170 < 0)
                  {
                    v167 += 7;
                    unint64_t v54 = v169;
                    BOOL v14 = v168++ > 8;
                    if (v14) {
                      goto LABEL_208;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    LODWORD(v59) = 0;
                  }
                }
                break;
              }
LABEL_301:
              *((_DWORD *)this + 29) = v59;
              goto LABEL_281;
            case 0xAu:
              *(void *)((char *)this + 164) |= 0x400000uLL;
              unint64_t v62 = *((void *)a2 + 1);
              unint64_t v63 = *((void *)a2 + 2);
              uint64_t v64 = *(void *)a2;
              if (v62 <= 0xFFFFFFFFFFFFFFF5 && v62 + 10 <= v63)
              {
                char v65 = 0;
                unsigned int v66 = 0;
                uint64_t v67 = 0;
                do
                {
                  unint64_t v68 = v62 + 1;
                  *((void *)a2 + 1) = v62 + 1;
                  char v69 = *(unsigned char *)(v64 + v62);
                  v67 |= (unint64_t)(v69 & 0x7F) << v65;
                  if ((v69 & 0x80) == 0) {
                    goto LABEL_305;
                  }
                  v65 += 7;
                  unint64_t v62 = v68;
                  BOOL v14 = v66++ > 8;
                }
                while (!v14);
LABEL_215:
                LODWORD(v67) = 0;
                goto LABEL_305;
              }
              char v171 = 0;
              unsigned int v172 = 0;
              uint64_t v67 = 0;
              if (v63 <= v62) {
                unint64_t v63 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v63 == v62)
                {
                  LODWORD(v67) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v173 = v62 + 1;
                  char v174 = *(unsigned char *)(v64 + v62);
                  *((void *)a2 + 1) = v173;
                  v67 |= (unint64_t)(v174 & 0x7F) << v171;
                  if (v174 < 0)
                  {
                    v171 += 7;
                    unint64_t v62 = v173;
                    BOOL v14 = v172++ > 8;
                    if (v14) {
                      goto LABEL_215;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    LODWORD(v67) = 0;
                  }
                }
                break;
              }
LABEL_305:
              *((_DWORD *)this + 30) = v67;
              goto LABEL_281;
            case 0xBu:
              *(void *)((char *)this + 164) |= 0x10uLL;
              unint64_t v70 = *((void *)a2 + 1);
              unint64_t v71 = *((void *)a2 + 2);
              uint64_t v72 = *(void *)a2;
              if (v70 <= 0xFFFFFFFFFFFFFFF5 && v70 + 10 <= v71)
              {
                char v73 = 0;
                unsigned int v74 = 0;
                uint64_t v75 = 0;
                do
                {
                  unint64_t v76 = v70 + 1;
                  *((void *)a2 + 1) = v70 + 1;
                  char v77 = *(unsigned char *)(v72 + v70);
                  v75 |= (unint64_t)(v77 & 0x7F) << v73;
                  if ((v77 & 0x80) == 0) {
                    goto LABEL_309;
                  }
                  v73 += 7;
                  unint64_t v70 = v76;
                  BOOL v14 = v74++ > 8;
                }
                while (!v14);
LABEL_222:
                uint64_t v75 = 0;
                goto LABEL_309;
              }
              char v175 = 0;
              unsigned int v176 = 0;
              uint64_t v75 = 0;
              if (v71 <= v70) {
                unint64_t v71 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v71 == v70)
                {
                  uint64_t v75 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v177 = v70 + 1;
                  char v178 = *(unsigned char *)(v72 + v70);
                  *((void *)a2 + 1) = v177;
                  v75 |= (unint64_t)(v178 & 0x7F) << v175;
                  if (v178 < 0)
                  {
                    v175 += 7;
                    unint64_t v70 = v177;
                    BOOL v14 = v176++ > 8;
                    if (v14) {
                      goto LABEL_222;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    uint64_t v75 = 0;
                  }
                }
                break;
              }
LABEL_309:
              *((void *)this + 5) = v75;
              goto LABEL_281;
            case 0xCu:
              *(void *)((char *)this + 164) |= 8uLL;
              unint64_t v78 = *((void *)a2 + 1);
              unint64_t v79 = *((void *)a2 + 2);
              uint64_t v80 = *(void *)a2;
              if (v78 <= 0xFFFFFFFFFFFFFFF5 && v78 + 10 <= v79)
              {
                char v81 = 0;
                unsigned int v82 = 0;
                uint64_t v83 = 0;
                do
                {
                  unint64_t v84 = v78 + 1;
                  *((void *)a2 + 1) = v78 + 1;
                  char v85 = *(unsigned char *)(v80 + v78);
                  v83 |= (unint64_t)(v85 & 0x7F) << v81;
                  if ((v85 & 0x80) == 0) {
                    goto LABEL_313;
                  }
                  v81 += 7;
                  unint64_t v78 = v84;
                  BOOL v14 = v82++ > 8;
                }
                while (!v14);
LABEL_229:
                uint64_t v83 = 0;
                goto LABEL_313;
              }
              char v179 = 0;
              unsigned int v180 = 0;
              uint64_t v83 = 0;
              if (v79 <= v78) {
                unint64_t v79 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v79 == v78)
                {
                  uint64_t v83 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v181 = v78 + 1;
                  char v182 = *(unsigned char *)(v80 + v78);
                  *((void *)a2 + 1) = v181;
                  v83 |= (unint64_t)(v182 & 0x7F) << v179;
                  if (v182 < 0)
                  {
                    v179 += 7;
                    unint64_t v78 = v181;
                    BOOL v14 = v180++ > 8;
                    if (v14) {
                      goto LABEL_229;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    uint64_t v83 = 0;
                  }
                }
                break;
              }
LABEL_313:
              *((void *)this + 4) = v83;
              goto LABEL_281;
            case 0xDu:
              *(void *)((char *)this + 164) |= 4uLL;
              unint64_t v86 = *((void *)a2 + 1);
              unint64_t v87 = *((void *)a2 + 2);
              uint64_t v88 = *(void *)a2;
              if (v86 <= 0xFFFFFFFFFFFFFFF5 && v86 + 10 <= v87)
              {
                char v89 = 0;
                unsigned int v90 = 0;
                uint64_t v91 = 0;
                do
                {
                  unint64_t v92 = v86 + 1;
                  *((void *)a2 + 1) = v86 + 1;
                  char v93 = *(unsigned char *)(v88 + v86);
                  v91 |= (unint64_t)(v93 & 0x7F) << v89;
                  if ((v93 & 0x80) == 0) {
                    goto LABEL_317;
                  }
                  v89 += 7;
                  unint64_t v86 = v92;
                  BOOL v14 = v90++ > 8;
                }
                while (!v14);
LABEL_236:
                uint64_t v91 = 0;
                goto LABEL_317;
              }
              char v183 = 0;
              unsigned int v184 = 0;
              uint64_t v91 = 0;
              if (v87 <= v86) {
                unint64_t v87 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v87 == v86)
                {
                  uint64_t v91 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v185 = v86 + 1;
                  char v186 = *(unsigned char *)(v88 + v86);
                  *((void *)a2 + 1) = v185;
                  v91 |= (unint64_t)(v186 & 0x7F) << v183;
                  if (v186 < 0)
                  {
                    v183 += 7;
                    unint64_t v86 = v185;
                    BOOL v14 = v184++ > 8;
                    if (v14) {
                      goto LABEL_236;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    uint64_t v91 = 0;
                  }
                }
                break;
              }
LABEL_317:
              *((void *)this + 3) = v91;
              goto LABEL_281;
            case 0xEu:
              *(void *)((char *)this + 164) |= 0x8000uLL;
              unint64_t v94 = *((void *)a2 + 1);
              unint64_t v95 = *((void *)a2 + 2);
              uint64_t v96 = *(void *)a2;
              if (v94 <= 0xFFFFFFFFFFFFFFF5 && v94 + 10 <= v95)
              {
                char v97 = 0;
                unsigned int v98 = 0;
                uint64_t v99 = 0;
                do
                {
                  unint64_t v100 = v94 + 1;
                  *((void *)a2 + 1) = v94 + 1;
                  char v101 = *(unsigned char *)(v96 + v94);
                  v99 |= (unint64_t)(v101 & 0x7F) << v97;
                  if ((v101 & 0x80) == 0) {
                    goto LABEL_321;
                  }
                  v97 += 7;
                  unint64_t v94 = v100;
                  BOOL v14 = v98++ > 8;
                }
                while (!v14);
LABEL_243:
                LODWORD(v99) = 0;
                goto LABEL_321;
              }
              char v187 = 0;
              unsigned int v188 = 0;
              uint64_t v99 = 0;
              if (v95 <= v94) {
                unint64_t v95 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v95 == v94)
                {
                  LODWORD(v99) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v189 = v94 + 1;
                  char v190 = *(unsigned char *)(v96 + v94);
                  *((void *)a2 + 1) = v189;
                  v99 |= (unint64_t)(v190 & 0x7F) << v187;
                  if (v190 < 0)
                  {
                    v187 += 7;
                    unint64_t v94 = v189;
                    BOOL v14 = v188++ > 8;
                    if (v14) {
                      goto LABEL_243;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    LODWORD(v99) = 0;
                  }
                }
                break;
              }
LABEL_321:
              *((_DWORD *)this + 23) = v99;
              goto LABEL_281;
            case 0xFu:
              *(void *)((char *)this + 164) |= 0x20000uLL;
              unint64_t v102 = *((void *)a2 + 1);
              if (v102 > 0xFFFFFFFFFFFFFFFBLL || v102 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 25) = *(_DWORD *)(*(void *)a2 + v102);
              goto LABEL_280;
            case 0x10u:
              *(void *)((char *)this + 164) |= 0x10000uLL;
              unint64_t v103 = *((void *)a2 + 1);
              unint64_t v104 = *((void *)a2 + 2);
              uint64_t v105 = *(void *)a2;
              if (v103 <= 0xFFFFFFFFFFFFFFF5 && v103 + 10 <= v104)
              {
                char v106 = 0;
                unsigned int v107 = 0;
                uint64_t v108 = 0;
                do
                {
                  unint64_t v109 = v103 + 1;
                  *((void *)a2 + 1) = v103 + 1;
                  char v110 = *(unsigned char *)(v105 + v103);
                  v108 |= (unint64_t)(v110 & 0x7F) << v106;
                  if ((v110 & 0x80) == 0) {
                    goto LABEL_325;
                  }
                  v106 += 7;
                  unint64_t v103 = v109;
                  BOOL v14 = v107++ > 8;
                }
                while (!v14);
LABEL_250:
                LODWORD(v108) = 0;
                goto LABEL_325;
              }
              char v191 = 0;
              unsigned int v192 = 0;
              uint64_t v108 = 0;
              if (v104 <= v103) {
                unint64_t v104 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v104 == v103)
                {
                  LODWORD(v108) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v193 = v103 + 1;
                  char v194 = *(unsigned char *)(v105 + v103);
                  *((void *)a2 + 1) = v193;
                  v108 |= (unint64_t)(v194 & 0x7F) << v191;
                  if (v194 < 0)
                  {
                    v191 += 7;
                    unint64_t v103 = v193;
                    BOOL v14 = v192++ > 8;
                    if (v14) {
                      goto LABEL_250;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    LODWORD(v108) = 0;
                  }
                }
                break;
              }
LABEL_325:
              *((_DWORD *)this + 24) = v108;
              goto LABEL_281;
            case 0x11u:
              *(void *)((char *)this + 164) |= 0x40000uLL;
              unint64_t v111 = *((void *)a2 + 1);
              if (v111 > 0xFFFFFFFFFFFFFFFBLL || v111 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 26) = *(_DWORD *)(*(void *)a2 + v111);
              goto LABEL_280;
            case 0x12u:
              *(void *)((char *)this + 164) |= 0x4000uLL;
              unint64_t v112 = *((void *)a2 + 1);
              if (v112 > 0xFFFFFFFFFFFFFFFBLL || v112 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 22) = *(_DWORD *)(*(void *)a2 + v112);
              goto LABEL_280;
            case 0x13u:
              *(void *)((char *)this + 164) |= 0x40uLL;
              unint64_t v113 = *((void *)a2 + 1);
              if (v113 > 0xFFFFFFFFFFFFFFFBLL || v113 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 14) = *(_DWORD *)(*(void *)a2 + v113);
              goto LABEL_280;
            case 0x14u:
              *(void *)((char *)this + 164) |= 0x80uLL;
              unint64_t v114 = *((void *)a2 + 1);
              unint64_t v115 = *((void *)a2 + 2);
              uint64_t v116 = *(void *)a2;
              if (v114 <= 0xFFFFFFFFFFFFFFF5 && v114 + 10 <= v115)
              {
                char v117 = 0;
                unsigned int v118 = 0;
                uint64_t v119 = 0;
                do
                {
                  unint64_t v120 = v114 + 1;
                  *((void *)a2 + 1) = v114 + 1;
                  char v121 = *(unsigned char *)(v116 + v114);
                  v119 |= (unint64_t)(v121 & 0x7F) << v117;
                  if ((v121 & 0x80) == 0) {
                    goto LABEL_329;
                  }
                  v117 += 7;
                  unint64_t v114 = v120;
                  BOOL v14 = v118++ > 8;
                }
                while (!v14);
LABEL_257:
                LODWORD(v119) = 0;
                goto LABEL_329;
              }
              char v195 = 0;
              unsigned int v196 = 0;
              uint64_t v119 = 0;
              if (v115 <= v114) {
                unint64_t v115 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v115 == v114)
                {
                  LODWORD(v119) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v197 = v114 + 1;
                  char v198 = *(unsigned char *)(v116 + v114);
                  *((void *)a2 + 1) = v197;
                  v119 |= (unint64_t)(v198 & 0x7F) << v195;
                  if (v198 < 0)
                  {
                    v195 += 7;
                    unint64_t v114 = v197;
                    BOOL v14 = v196++ > 8;
                    if (v14) {
                      goto LABEL_257;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    LODWORD(v119) = 0;
                  }
                }
                break;
              }
LABEL_329:
              *((_DWORD *)this + 15) = v119;
              goto LABEL_281;
            case 0x15u:
              *(void *)((char *)this + 164) |= 0x800uLL;
              unint64_t v122 = *((void *)a2 + 1);
              if (v122 > 0xFFFFFFFFFFFFFFFBLL || v122 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 19) = *(_DWORD *)(*(void *)a2 + v122);
              goto LABEL_280;
            case 0x16u:
              *(void *)((char *)this + 164) |= 0x1000uLL;
              unint64_t v123 = *((void *)a2 + 1);
              if (v123 > 0xFFFFFFFFFFFFFFFBLL || v123 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 20) = *(_DWORD *)(*(void *)a2 + v123);
              goto LABEL_280;
            case 0x17u:
              *(void *)((char *)this + 164) |= 0x2000uLL;
              unint64_t v124 = *((void *)a2 + 1);
              if (v124 > 0xFFFFFFFFFFFFFFFBLL || v124 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 21) = *(_DWORD *)(*(void *)a2 + v124);
              goto LABEL_280;
            case 0x18u:
              *(void *)((char *)this + 164) |= 0x100uLL;
              unint64_t v125 = *((void *)a2 + 1);
              if (v125 > 0xFFFFFFFFFFFFFFFBLL || v125 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 16) = *(_DWORD *)(*(void *)a2 + v125);
              goto LABEL_280;
            case 0x19u:
              *(void *)((char *)this + 164) |= 0x200uLL;
              unint64_t v126 = *((void *)a2 + 1);
              if (v126 > 0xFFFFFFFFFFFFFFFBLL || v126 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 17) = *(_DWORD *)(*(void *)a2 + v126);
              goto LABEL_280;
            case 0x1Au:
              *(void *)((char *)this + 164) |= 0x400uLL;
              unint64_t v127 = *((void *)a2 + 1);
              if (v127 > 0xFFFFFFFFFFFFFFFBLL || v127 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 18) = *(_DWORD *)(*(void *)a2 + v127);
              goto LABEL_280;
            case 0x1Bu:
              *(void *)((char *)this + 164) |= 0x8000000uLL;
              unint64_t v128 = *((void *)a2 + 1);
              if (v128 > 0xFFFFFFFFFFFFFFFBLL || v128 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 35) = *(_DWORD *)(*(void *)a2 + v128);
              goto LABEL_280;
            case 0x1Cu:
              *(void *)((char *)this + 164) |= 0x800000uLL;
              unint64_t v129 = *((void *)a2 + 1);
              unint64_t v130 = *((void *)a2 + 2);
              uint64_t v131 = *(void *)a2;
              if (v129 <= 0xFFFFFFFFFFFFFFF5 && v129 + 10 <= v130)
              {
                char v132 = 0;
                unsigned int v133 = 0;
                uint64_t v134 = 0;
                do
                {
                  unint64_t v135 = v129 + 1;
                  *((void *)a2 + 1) = v129 + 1;
                  char v136 = *(unsigned char *)(v131 + v129);
                  v134 |= (unint64_t)(v136 & 0x7F) << v132;
                  if ((v136 & 0x80) == 0) {
                    goto LABEL_333;
                  }
                  v132 += 7;
                  unint64_t v129 = v135;
                  BOOL v14 = v133++ > 8;
                }
                while (!v14);
LABEL_264:
                LODWORD(v134) = 0;
                goto LABEL_333;
              }
              char v199 = 0;
              unsigned int v200 = 0;
              uint64_t v134 = 0;
              if (v130 <= v129) {
                unint64_t v130 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v130 == v129)
                {
                  LODWORD(v134) = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v201 = v129 + 1;
                  char v202 = *(unsigned char *)(v131 + v129);
                  *((void *)a2 + 1) = v201;
                  v134 |= (unint64_t)(v202 & 0x7F) << v199;
                  if (v202 < 0)
                  {
                    v199 += 7;
                    unint64_t v129 = v201;
                    BOOL v14 = v200++ > 8;
                    if (v14) {
                      goto LABEL_264;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    LODWORD(v134) = 0;
                  }
                }
                break;
              }
LABEL_333:
              *((_DWORD *)this + 31) = v134;
              goto LABEL_281;
            case 0x1Du:
              *(void *)((char *)this + 164) |= 0x20uLL;
              unint64_t v137 = *((void *)a2 + 1);
              unint64_t v138 = *((void *)a2 + 2);
              uint64_t v139 = *(void *)a2;
              if (v137 <= 0xFFFFFFFFFFFFFFF5 && v137 + 10 <= v138)
              {
                char v140 = 0;
                unsigned int v141 = 0;
                uint64_t v142 = 0;
                do
                {
                  unint64_t v143 = v137 + 1;
                  *((void *)a2 + 1) = v137 + 1;
                  char v144 = *(unsigned char *)(v139 + v137);
                  v142 |= (unint64_t)(v144 & 0x7F) << v140;
                  if ((v144 & 0x80) == 0) {
                    goto LABEL_337;
                  }
                  v140 += 7;
                  unint64_t v137 = v143;
                  BOOL v14 = v141++ > 8;
                }
                while (!v14);
LABEL_271:
                uint64_t v142 = 0;
                goto LABEL_337;
              }
              char v203 = 0;
              unsigned int v204 = 0;
              uint64_t v142 = 0;
              if (v138 <= v137) {
                unint64_t v138 = *((void *)a2 + 1);
              }
              while (2)
              {
                if (v138 == v137)
                {
                  uint64_t v142 = 0;
                  *((unsigned char *)a2 + 24) = 1;
                }
                else
                {
                  unint64_t v205 = v137 + 1;
                  char v206 = *(unsigned char *)(v139 + v137);
                  *((void *)a2 + 1) = v205;
                  v142 |= (unint64_t)(v206 & 0x7F) << v203;
                  if (v206 < 0)
                  {
                    v203 += 7;
                    unint64_t v137 = v205;
                    BOOL v14 = v204++ > 8;
                    if (v14) {
                      goto LABEL_271;
                    }
                    continue;
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    uint64_t v142 = 0;
                  }
                }
                break;
              }
LABEL_337:
              *((void *)this + 6) = v142;
              goto LABEL_281;
            case 0x1Eu:
              *(void *)((char *)this + 164) |= 0x2000000uLL;
              unint64_t v145 = *((void *)a2 + 1);
              if (v145 > 0xFFFFFFFFFFFFFFFBLL || v145 + 4 > *((void *)a2 + 2)) {
                goto LABEL_171;
              }
              *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v145);
              goto LABEL_280;
            case 0x1Fu:
              *(void *)((char *)this + 164) |= 0x40000000uLL;
              unint64_t v146 = *((void *)a2 + 1);
              if (v146 <= 0xFFFFFFFFFFFFFFFBLL && v146 + 4 <= *((void *)a2 + 2))
              {
                *((_DWORD *)this + 38) = *(_DWORD *)(*(void *)a2 + v146);
LABEL_280:
                *((void *)a2 + 1) += 4;
              }
              else
              {
LABEL_171:
                *((unsigned char *)a2 + 24) = 1;
              }
              goto LABEL_281;
            default:
              if (v20 == 201)
              {
                *(void *)((char *)this + 164) |= 1uLL;
                unint64_t v147 = *((void *)a2 + 1);
                unint64_t v148 = *((void *)a2 + 2);
                uint64_t v149 = *(void *)a2;
                if (v147 > 0xFFFFFFFFFFFFFFF5 || v147 + 10 > v148)
                {
                  char v207 = 0;
                  unsigned int v208 = 0;
                  uint64_t v152 = 0;
                  if (v148 <= v147) {
                    unint64_t v148 = *((void *)a2 + 1);
                  }
                  while (1)
                  {
                    if (v148 == v147)
                    {
                      uint64_t v152 = 0;
                      *((unsigned char *)a2 + 24) = 1;
                      goto LABEL_341;
                    }
                    unint64_t v209 = v147 + 1;
                    char v210 = *(unsigned char *)(v149 + v147);
                    *((void *)a2 + 1) = v209;
                    v152 |= (unint64_t)(v210 & 0x7F) << v207;
                    if ((v210 & 0x80) == 0) {
                      break;
                    }
                    v207 += 7;
                    unint64_t v147 = v209;
                    BOOL v14 = v208++ > 8;
                    if (v14)
                    {
LABEL_278:
                      uint64_t v152 = 0;
                      goto LABEL_341;
                    }
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    uint64_t v152 = 0;
                  }
                }
                else
                {
                  char v150 = 0;
                  unsigned int v151 = 0;
                  uint64_t v152 = 0;
                  while (1)
                  {
                    unint64_t v153 = v147 + 1;
                    *((void *)a2 + 1) = v147 + 1;
                    char v154 = *(unsigned char *)(v149 + v147);
                    v152 |= (unint64_t)(v154 & 0x7F) << v150;
                    if ((v154 & 0x80) == 0) {
                      break;
                    }
                    v150 += 7;
                    unint64_t v147 = v153;
                    BOOL v14 = v151++ > 8;
                    if (v14) {
                      goto LABEL_278;
                    }
                  }
                }
LABEL_341:
                *((void *)this + 1) = v152;
              }
              else if (v20 == 202)
              {
                *(void *)((char *)this + 164) |= 2uLL;
                unint64_t v25 = *((void *)a2 + 1);
                unint64_t v26 = *((void *)a2 + 2);
                uint64_t v27 = *(void *)a2;
                if (v25 > 0xFFFFFFFFFFFFFFF5 || v25 + 10 > v26)
                {
                  char v155 = 0;
                  unsigned int v156 = 0;
                  uint64_t v30 = 0;
                  if (v26 <= v25) {
                    unint64_t v26 = *((void *)a2 + 1);
                  }
                  while (1)
                  {
                    if (v26 == v25)
                    {
                      uint64_t v30 = 0;
                      *((unsigned char *)a2 + 24) = 1;
                      goto LABEL_289;
                    }
                    unint64_t v157 = v25 + 1;
                    char v158 = *(unsigned char *)(v27 + v25);
                    *((void *)a2 + 1) = v157;
                    v30 |= (unint64_t)(v158 & 0x7F) << v155;
                    if ((v158 & 0x80) == 0) {
                      break;
                    }
                    v155 += 7;
                    unint64_t v25 = v157;
                    BOOL v14 = v156++ > 8;
                    if (v14)
                    {
LABEL_187:
                      uint64_t v30 = 0;
                      goto LABEL_289;
                    }
                  }
                  if (*((unsigned char *)a2 + 24)) {
                    uint64_t v30 = 0;
                  }
                }
                else
                {
                  char v28 = 0;
                  unsigned int v29 = 0;
                  uint64_t v30 = 0;
                  while (1)
                  {
                    unint64_t v31 = v25 + 1;
                    *((void *)a2 + 1) = v25 + 1;
                    char v32 = *(unsigned char *)(v27 + v25);
                    v30 |= (unint64_t)(v32 & 0x7F) << v28;
                    if ((v32 & 0x80) == 0) {
                      break;
                    }
                    v28 += 7;
                    unint64_t v25 = v31;
                    BOOL v14 = v29++ > 8;
                    if (v14) {
                      goto LABEL_187;
                    }
                  }
                }
LABEL_289:
                *((void *)this + 2) = v30;
              }
              else
              {
LABEL_19:
                uint64_t result = PB::Reader::skip(a2);
                if (!result) {
                  return result;
                }
              }
LABEL_281:
              unint64_t v2 = *((void *)a2 + 1);
              unint64_t v3 = *((void *)a2 + 2);
              int v4 = *((unsigned __int8 *)a2 + 24);
              if (v2 >= v3 || v4 != 0) {
                return v4 == 0;
              }
              continue;
          }
        }
        int v4 = 0;
      }
      break;
    }
  }
  return v4 == 0;
}

uint64_t CMMsl::KappaZgResult::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *(void *)(this + 164);
  if ((v4 & 0x100000000) != 0)
  {
    this = PB::Writer::write(a2);
    uint64_t v4 = *(void *)(v3 + 164);
    if ((v4 & 0x100000) == 0)
    {
LABEL_3:
      if ((v4 & 0x80000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_37;
    }
  }
  else if ((v4 & 0x100000) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80000) == 0)
  {
LABEL_4:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = PB::Writer::write(a2, *(float *)(v3 + 148));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_7:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = PB::Writer::write(a2, *(float *)(v3 + 136));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80000000) == 0)
  {
LABEL_8:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = PB::Writer::write(a2, *(float *)(v3 + 156));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = PB::Writer::write(a2, *(float *)(v3 + 144));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200000) == 0)
  {
LABEL_10:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400000) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 4) == 0)
  {
LABEL_14:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_48;
  }
LABEL_47:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000) == 0)
  {
LABEL_15:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_49;
  }
LABEL_48:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20000) == 0)
  {
LABEL_16:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = PB::Writer::write(a2, *(float *)(v3 + 100));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x10000) == 0)
  {
LABEL_17:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000) == 0)
  {
LABEL_18:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = PB::Writer::write(a2, *(float *)(v3 + 104));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x4000) == 0)
  {
LABEL_19:
    if ((v4 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = PB::Writer::write(a2, *(float *)(v3 + 88));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40) == 0)
  {
LABEL_20:
    if ((v4 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = PB::Writer::write(a2, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x80) == 0)
  {
LABEL_21:
    if ((v4 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800) == 0)
  {
LABEL_22:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_56;
  }
LABEL_55:
  this = PB::Writer::write(a2, *(float *)(v3 + 76));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x1000) == 0)
  {
LABEL_23:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_56:
  this = PB::Writer::write(a2, *(float *)(v3 + 80));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000) == 0)
  {
LABEL_24:
    if ((v4 & 0x100) == 0) {
      goto LABEL_25;
    }
    goto LABEL_58;
  }
LABEL_57:
  this = PB::Writer::write(a2, *(float *)(v3 + 84));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x100) == 0)
  {
LABEL_25:
    if ((v4 & 0x200) == 0) {
      goto LABEL_26;
    }
    goto LABEL_59;
  }
LABEL_58:
  this = PB::Writer::write(a2, *(float *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x200) == 0)
  {
LABEL_26:
    if ((v4 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_60;
  }
LABEL_59:
  this = PB::Writer::write(a2, *(float *)(v3 + 68));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x400) == 0)
  {
LABEL_27:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_61;
  }
LABEL_60:
  this = PB::Writer::write(a2, *(float *)(v3 + 72));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_28:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_62;
  }
LABEL_61:
  this = PB::Writer::write(a2, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x800000) == 0)
  {
LABEL_29:
    if ((v4 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_63;
  }
LABEL_62:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x20) == 0)
  {
LABEL_30:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_64;
  }
LABEL_63:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_65;
  }
LABEL_64:
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 164);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v4 & 1) == 0) {
      goto LABEL_33;
    }
LABEL_66:
    this = PB::Writer::writeVarInt(a2);
    if ((*(void *)(v3 + 164) & 2) == 0) {
      return this;
    }
    goto LABEL_67;
  }
LABEL_65:
  this = PB::Writer::write(a2, *(float *)(v3 + 152));
  uint64_t v4 = *(void *)(v3 + 164);
  if (v4) {
    goto LABEL_66;
  }
LABEL_33:
  if ((v4 & 2) == 0) {
    return this;
  }
LABEL_67:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::KappaZgResult::hash_value(CMMsl::KappaZgResult *this)
{
  uint64_t v1 = *(void *)((char *)this + 164);
  if ((v1 & 0x100000000) != 0)
  {
    uint64_t v2 = *((unsigned __int8 *)this + 160);
    if ((v1 & 0x100000) != 0)
    {
LABEL_3:
      uint64_t v57 = *((unsigned int *)this + 28);
      if ((v1 & 0x80000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_85;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 0x100000) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v57 = 0;
  if ((v1 & 0x80000) != 0)
  {
LABEL_4:
    uint64_t v56 = *((unsigned int *)this + 27);
    if ((v1 & 0x1000000) != 0) {
      goto LABEL_5;
    }
LABEL_86:
    uint64_t v55 = 0;
    if ((v1 & 0x20000000) != 0) {
      goto LABEL_8;
    }
LABEL_87:
    uint64_t v54 = 0;
    if ((v1 & 0x4000000) != 0) {
      goto LABEL_11;
    }
LABEL_88:
    uint64_t v53 = 0;
    if ((v1 & 0x80000000) != 0) {
      goto LABEL_14;
    }
LABEL_89:
    uint64_t v52 = 0;
    if ((v1 & 0x10000000) != 0) {
      goto LABEL_17;
    }
LABEL_90:
    uint64_t v12 = 0;
    if ((v1 & 0x200000) != 0) {
      goto LABEL_21;
    }
    goto LABEL_91;
  }
LABEL_85:
  uint64_t v56 = 0;
  if ((v1 & 0x1000000) == 0) {
    goto LABEL_86;
  }
LABEL_5:
  float v3 = *((float *)this + 32);
  uint64_t v4 = LODWORD(v3);
  if (v3 == 0.0) {
    uint64_t v4 = 0;
  }
  uint64_t v55 = v4;
  if ((v1 & 0x20000000) == 0) {
    goto LABEL_87;
  }
LABEL_8:
  float v5 = *((float *)this + 37);
  uint64_t v6 = LODWORD(v5);
  if (v5 == 0.0) {
    uint64_t v6 = 0;
  }
  uint64_t v54 = v6;
  if ((v1 & 0x4000000) == 0) {
    goto LABEL_88;
  }
LABEL_11:
  float v7 = *((float *)this + 34);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  uint64_t v53 = v8;
  if ((v1 & 0x80000000) == 0) {
    goto LABEL_89;
  }
LABEL_14:
  float v9 = *((float *)this + 39);
  uint64_t v10 = LODWORD(v9);
  if (v9 == 0.0) {
    uint64_t v10 = 0;
  }
  uint64_t v52 = v10;
  if ((v1 & 0x10000000) == 0) {
    goto LABEL_90;
  }
LABEL_17:
  float v11 = *((float *)this + 36);
  if (v11 == 0.0) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = LODWORD(v11);
  }
  if ((v1 & 0x200000) != 0)
  {
LABEL_21:
    uint64_t v13 = *((int *)this + 29);
    if ((v1 & 0x400000) != 0) {
      goto LABEL_22;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t v13 = 0;
  if ((v1 & 0x400000) != 0)
  {
LABEL_22:
    uint64_t v14 = *((unsigned int *)this + 30);
    if ((v1 & 0x10) != 0) {
      goto LABEL_23;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t v14 = 0;
  if ((v1 & 0x10) != 0)
  {
LABEL_23:
    uint64_t v15 = *((void *)this + 5);
    if ((v1 & 8) != 0) {
      goto LABEL_24;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t v15 = 0;
  if ((v1 & 8) != 0)
  {
LABEL_24:
    uint64_t v16 = *((void *)this + 4);
    if ((v1 & 4) != 0) {
      goto LABEL_25;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t v16 = 0;
  if ((v1 & 4) != 0)
  {
LABEL_25:
    uint64_t v17 = *((void *)this + 3);
    if ((v1 & 0x8000) != 0) {
      goto LABEL_26;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t v17 = 0;
  if ((v1 & 0x8000) != 0)
  {
LABEL_26:
    uint64_t v18 = *((unsigned int *)this + 23);
    if ((v1 & 0x20000) != 0) {
      goto LABEL_27;
    }
LABEL_97:
    uint64_t v20 = 0;
    if ((v1 & 0x10000) != 0) {
      goto LABEL_31;
    }
    goto LABEL_98;
  }
LABEL_96:
  uint64_t v18 = 0;
  if ((v1 & 0x20000) == 0) {
    goto LABEL_97;
  }
LABEL_27:
  float v19 = *((float *)this + 25);
  if (v19 == 0.0) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = LODWORD(v19);
  }
  if ((v1 & 0x10000) != 0)
  {
LABEL_31:
    uint64_t v21 = *((unsigned int *)this + 24);
    if ((v1 & 0x40000) != 0) {
      goto LABEL_32;
    }
LABEL_99:
    uint64_t v23 = 0;
    if ((v1 & 0x4000) != 0) {
      goto LABEL_36;
    }
LABEL_100:
    uint64_t v25 = 0;
    if ((v1 & 0x40) != 0) {
      goto LABEL_40;
    }
LABEL_101:
    uint64_t v27 = 0;
    if ((v1 & 0x80) != 0) {
      goto LABEL_44;
    }
    goto LABEL_102;
  }
LABEL_98:
  uint64_t v21 = 0;
  if ((v1 & 0x40000) == 0) {
    goto LABEL_99;
  }
LABEL_32:
  float v22 = *((float *)this + 26);
  if (v22 == 0.0) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = LODWORD(v22);
  }
  if ((v1 & 0x4000) == 0) {
    goto LABEL_100;
  }
LABEL_36:
  float v24 = *((float *)this + 22);
  if (v24 == 0.0) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = LODWORD(v24);
  }
  if ((v1 & 0x40) == 0) {
    goto LABEL_101;
  }
LABEL_40:
  float v26 = *((float *)this + 14);
  if (v26 == 0.0) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = LODWORD(v26);
  }
  if ((v1 & 0x80) != 0)
  {
LABEL_44:
    uint64_t v28 = *((int *)this + 15);
    if ((v1 & 0x800) != 0) {
      goto LABEL_45;
    }
LABEL_103:
    uint64_t v30 = 0;
    if ((v1 & 0x1000) != 0) {
      goto LABEL_49;
    }
LABEL_104:
    uint64_t v32 = 0;
    if ((v1 & 0x2000) != 0) {
      goto LABEL_53;
    }
LABEL_105:
    uint64_t v34 = 0;
    if ((v1 & 0x100) != 0) {
      goto LABEL_57;
    }
LABEL_106:
    uint64_t v36 = 0;
    if ((v1 & 0x200) != 0) {
      goto LABEL_61;
    }
LABEL_107:
    uint64_t v38 = 0;
    if ((v1 & 0x400) != 0) {
      goto LABEL_65;
    }
LABEL_108:
    uint64_t v40 = 0;
    if ((v1 & 0x8000000) != 0) {
      goto LABEL_69;
    }
LABEL_109:
    uint64_t v42 = 0;
    if ((v1 & 0x800000) != 0) {
      goto LABEL_73;
    }
    goto LABEL_110;
  }
LABEL_102:
  uint64_t v28 = 0;
  if ((v1 & 0x800) == 0) {
    goto LABEL_103;
  }
LABEL_45:
  float v29 = *((float *)this + 19);
  if (v29 == 0.0) {
    uint64_t v30 = 0;
  }
  else {
    uint64_t v30 = LODWORD(v29);
  }
  if ((v1 & 0x1000) == 0) {
    goto LABEL_104;
  }
LABEL_49:
  float v31 = *((float *)this + 20);
  if (v31 == 0.0) {
    uint64_t v32 = 0;
  }
  else {
    uint64_t v32 = LODWORD(v31);
  }
  if ((v1 & 0x2000) == 0) {
    goto LABEL_105;
  }
LABEL_53:
  float v33 = *((float *)this + 21);
  if (v33 == 0.0) {
    uint64_t v34 = 0;
  }
  else {
    uint64_t v34 = LODWORD(v33);
  }
  if ((v1 & 0x100) == 0) {
    goto LABEL_106;
  }
LABEL_57:
  float v35 = *((float *)this + 16);
  if (v35 == 0.0) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = LODWORD(v35);
  }
  if ((v1 & 0x200) == 0) {
    goto LABEL_107;
  }
LABEL_61:
  float v37 = *((float *)this + 17);
  if (v37 == 0.0) {
    uint64_t v38 = 0;
  }
  else {
    uint64_t v38 = LODWORD(v37);
  }
  if ((v1 & 0x400) == 0) {
    goto LABEL_108;
  }
LABEL_65:
  float v39 = *((float *)this + 18);
  if (v39 == 0.0) {
    uint64_t v40 = 0;
  }
  else {
    uint64_t v40 = LODWORD(v39);
  }
  if ((v1 & 0x8000000) == 0) {
    goto LABEL_109;
  }
LABEL_69:
  float v41 = *((float *)this + 35);
  if (v41 == 0.0) {
    uint64_t v42 = 0;
  }
  else {
    uint64_t v42 = LODWORD(v41);
  }
  if ((v1 & 0x800000) != 0)
  {
LABEL_73:
    uint64_t v43 = *((int *)this + 31);
    if ((v1 & 0x20) != 0) {
      goto LABEL_74;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t v43 = 0;
  if ((v1 & 0x20) != 0)
  {
LABEL_74:
    uint64_t v44 = *((void *)this + 6);
    if ((v1 & 0x2000000) != 0) {
      goto LABEL_75;
    }
LABEL_112:
    uint64_t v46 = 0;
    if ((v1 & 0x40000000) != 0) {
      goto LABEL_78;
    }
LABEL_113:
    uint64_t v48 = 0;
    if (v1) {
      goto LABEL_81;
    }
LABEL_114:
    uint64_t v49 = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_82;
    }
LABEL_115:
    uint64_t v50 = 0;
    return v57 ^ v2 ^ v56 ^ v55 ^ v54 ^ v53 ^ v52 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v20 ^ v21 ^ v23 ^ v25 ^ v27 ^ v28 ^ v30 ^ v32 ^ v34 ^ v36 ^ v38 ^ v40 ^ v42 ^ v43 ^ v44 ^ v46 ^ v48 ^ v49 ^ v50;
  }
LABEL_111:
  uint64_t v44 = 0;
  if ((v1 & 0x2000000) == 0) {
    goto LABEL_112;
  }
LABEL_75:
  float v45 = *((float *)this + 33);
  uint64_t v46 = LODWORD(v45);
  if (v45 == 0.0) {
    uint64_t v46 = 0;
  }
  if ((v1 & 0x40000000) == 0) {
    goto LABEL_113;
  }
LABEL_78:
  float v47 = *((float *)this + 38);
  uint64_t v48 = LODWORD(v47);
  if (v47 == 0.0) {
    uint64_t v48 = 0;
  }
  if ((v1 & 1) == 0) {
    goto LABEL_114;
  }
LABEL_81:
  uint64_t v49 = *((void *)this + 1);
  if ((v1 & 2) == 0) {
    goto LABEL_115;
  }
LABEL_82:
  uint64_t v50 = *((void *)this + 2);
  return v57 ^ v2 ^ v56 ^ v55 ^ v54 ^ v53 ^ v52 ^ v12 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v20 ^ v21 ^ v23 ^ v25 ^ v27 ^ v28 ^ v30 ^ v32 ^ v34 ^ v36 ^ v38 ^ v40 ^ v42 ^ v43 ^ v44 ^ v46 ^ v48 ^ v49 ^ v50;
}

void CMMsl::KeyboardAttached::~KeyboardAttached(CMMsl::KeyboardAttached *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KeyboardAttached::KeyboardAttached(uint64_t this, const CMMsl::KeyboardAttached *a2)
{
  *(void *)this = &unk_270642E50;
  *(_DWORD *)(this + 20) = 0;
  if (*((unsigned char *)a2 + 20))
  {
    uint64_t v3 = *((void *)a2 + 1);
    *(unsigned char *)(this + 20) = 1;
    *(void *)(this + 8) = v3;
    char v2 = 3;
    if ((*((unsigned char *)a2 + 20) & 2) == 0) {
      return this;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*((unsigned char *)a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *((unsigned char *)a2 + 16);
    *(unsigned char *)(this + 20) = v2;
    *(unsigned char *)(this + 16) = v4;
  }
  return this;
}

uint64_t CMMsl::KeyboardAttached::operator=(uint64_t a1, const CMMsl::KeyboardAttached *a2)
{
  if ((const CMMsl::KeyboardAttached *)a1 != a2)
  {
    CMMsl::KeyboardAttached::KeyboardAttached((uint64_t)v6, a2);
    int v3 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v9;
    int v9 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v7;
    uint64_t v7 = v4;
    LOBYTE(v3) = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v8;
    char v8 = v3;
    PB::Base::~Base((PB::Base *)v6);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::KeyboardAttached *a2, CMMsl::KeyboardAttached *a3)
{
  int v3 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v3;
  double result = *((double *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((double *)a2 + 1) = result;
  LOBYTE(v3) = *((unsigned char *)this + 16);
  *((unsigned char *)this + 16) = *((unsigned char *)a2 + 16);
  *((unsigned char *)a2 + 16) = v3;
  return result;
}

double CMMsl::KeyboardAttached::KeyboardAttached(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642E50;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

{
  double result;

  *(void *)a1 = &unk_270642E50;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KeyboardAttached::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v9[0] = &unk_270642E50;
    int v3 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a2 + 20) = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    char v5 = *(unsigned char *)(a2 + 16);
    int v6 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v3;
    int v11 = v6;
    uint64_t v7 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v4;
    v9[1] = v7;
    LOBYTE(v3) = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v5;
    char v10 = v3;
    PB::Base::~Base((PB::Base *)v9);
  }
  return a1;
}

uint64_t CMMsl::KeyboardAttached::formatText(CMMsl::KeyboardAttached *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "attached");
    char v5 = *((unsigned char *)this + 20);
  }
  if (v5) {
    PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KeyboardAttached::readFrom(CMMsl::KeyboardAttached *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_26;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *((unsigned char *)this + 20) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *((unsigned char *)this + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *((unsigned char *)this + 20) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
        {
          *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 8;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
      }
      else
      {
LABEL_26:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
      }
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_26;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KeyboardAttached::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 20);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(a2);
  }
  return this;
}

uint64_t CMMsl::KeyboardAttached::hash_value(CMMsl::KeyboardAttached *this)
{
  if (*((unsigned char *)this + 20))
  {
    double v1 = *((double *)this + 1);
    if (v1 == 0.0) {
      double v1 = 0.0;
    }
    if ((*((unsigned char *)this + 20) & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v2 = 0;
    return v2 ^ *(void *)&v1;
  }
  double v1 = 0.0;
  if ((*((unsigned char *)this + 20) & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = *((unsigned __int8 *)this + 16);
  return v2 ^ *(void *)&v1;
}

void CMMsl::KeyboardKeyPress::~KeyboardKeyPress(CMMsl::KeyboardKeyPress *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KeyboardKeyPress::KeyboardKeyPress(uint64_t this, const CMMsl::KeyboardKeyPress *a2)
{
  *(void *)this = &unk_270642E88;
  *(_DWORD *)(this + 20) = 0;
  if (*((unsigned char *)a2 + 20))
  {
    uint64_t v3 = *((void *)a2 + 1);
    *(unsigned char *)(this + 20) = 1;
    *(void *)(this + 8) = v3;
    char v2 = 3;
    if ((*((unsigned char *)a2 + 20) & 2) == 0) {
      return this;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*((unsigned char *)a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *((unsigned char *)a2 + 16);
    *(unsigned char *)(this + 20) = v2;
    *(unsigned char *)(this + 16) = v4;
  }
  return this;
}

uint64_t CMMsl::KeyboardKeyPress::operator=(uint64_t a1, const CMMsl::KeyboardKeyPress *a2)
{
  if ((const CMMsl::KeyboardKeyPress *)a1 != a2)
  {
    CMMsl::KeyboardKeyPress::KeyboardKeyPress((uint64_t)v6, a2);
    int v3 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v9;
    int v9 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v7;
    uint64_t v7 = v4;
    LOBYTE(v3) = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v8;
    char v8 = v3;
    PB::Base::~Base((PB::Base *)v6);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::KeyboardKeyPress *a2, CMMsl::KeyboardKeyPress *a3)
{
  int v3 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v3;
  double result = *((double *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((double *)a2 + 1) = result;
  LOBYTE(v3) = *((unsigned char *)this + 16);
  *((unsigned char *)this + 16) = *((unsigned char *)a2 + 16);
  *((unsigned char *)a2 + 16) = v3;
  return result;
}

double CMMsl::KeyboardKeyPress::KeyboardKeyPress(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642E88;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

{
  double result;

  *(void *)a1 = &unk_270642E88;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KeyboardKeyPress::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v9[0] = &unk_270642E88;
    int v3 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a2 + 20) = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    char v5 = *(unsigned char *)(a2 + 16);
    int v6 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v3;
    int v11 = v6;
    uint64_t v7 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v4;
    v9[1] = v7;
    LOBYTE(v3) = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v5;
    char v10 = v3;
    PB::Base::~Base((PB::Base *)v9);
  }
  return a1;
}

uint64_t CMMsl::KeyboardKeyPress::formatText(CMMsl::KeyboardKeyPress *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "keyPressedDown");
    char v5 = *((unsigned char *)this + 20);
  }
  if (v5) {
    PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KeyboardKeyPress::readFrom(CMMsl::KeyboardKeyPress *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_26;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *((unsigned char *)this + 20) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *((unsigned char *)this + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *((unsigned char *)this + 20) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
        {
          *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 8;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
      }
      else
      {
LABEL_26:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
      }
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_26;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KeyboardKeyPress::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 20);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(a2);
  }
  return this;
}

uint64_t CMMsl::KeyboardKeyPress::hash_value(CMMsl::KeyboardKeyPress *this)
{
  if (*((unsigned char *)this + 20))
  {
    double v1 = *((double *)this + 1);
    if (v1 == 0.0) {
      double v1 = 0.0;
    }
    if ((*((unsigned char *)this + 20) & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v2 = 0;
    return v2 ^ *(void *)&v1;
  }
  double v1 = 0.0;
  if ((*((unsigned char *)this + 20) & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = *((unsigned __int8 *)this + 16);
  return v2 ^ *(void *)&v1;
}

void CMMsl::KeyboardMotionFeatures::~KeyboardMotionFeatures(CMMsl::KeyboardMotionFeatures *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::KeyboardMotionFeatures::KeyboardMotionFeatures(CMMsl::KeyboardMotionFeatures *this, const CMMsl::KeyboardMotionFeatures *a2)
{
  *(void *)this = &unk_270642EC0;
  *((_DWORD *)this + 7) = 0;
  char v2 = *((unsigned char *)a2 + 28);
  if (v2)
  {
    uint64_t v4 = *((void *)a2 + 1);
    char v3 = 1;
    *((unsigned char *)this + 28) = 1;
    *((void *)this + 1) = v4;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 28) & 2) != 0)
  {
LABEL_5:
    LODWORD(v4) = *((_DWORD *)a2 + 4);
    v3 |= 2u;
    *((unsigned char *)this + 28) = v3;
    *((_DWORD *)this + 4) = v4;
    char v2 = *((unsigned char *)a2 + 28);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    LODWORD(v4) = *((_DWORD *)a2 + 5);
    v3 |= 4u;
    *((unsigned char *)this + 28) = v3;
    *((_DWORD *)this + 5) = v4;
    if ((*((unsigned char *)a2 + 28) & 8) == 0) {
      return *(float *)&v4;
    }
  }
  else if ((v2 & 8) == 0)
  {
    return *(float *)&v4;
  }
  LODWORD(v4) = *((_DWORD *)a2 + 6);
  *((unsigned char *)this + 28) = v3 | 8;
  *((_DWORD *)this + 6) = v4;
  return *(float *)&v4;
}

uint64_t CMMsl::KeyboardMotionFeatures::operator=(uint64_t a1, const CMMsl::KeyboardMotionFeatures *a2)
{
  if ((const CMMsl::KeyboardMotionFeatures *)a1 != a2)
  {
    CMMsl::KeyboardMotionFeatures::KeyboardMotionFeatures((CMMsl::KeyboardMotionFeatures *)&v9, a2);
    uint64_t v3 = v11;
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t v5 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v3;
    int v6 = *(_DWORD *)(a1 + 28);
    *(_DWORD *)(a1 + 28) = v13;
    int v13 = v6;
    uint64_t v10 = v4;
    uint64_t v11 = v5;
    int v7 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 24) = v12;
    int v12 = v7;
    PB::Base::~Base((PB::Base *)&v9);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::KeyboardMotionFeatures *a2, CMMsl::KeyboardMotionFeatures *a3)
{
  int v3 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v3;
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  LODWORD(v4) = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v4;
  LODWORD(v4) = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v4;
  float result = *((float *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((float *)a2 + 6) = result;
  return result;
}

float CMMsl::KeyboardMotionFeatures::KeyboardMotionFeatures(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642EC0;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  float result = *(float *)(a2 + 24);
  *(float *)(a1 + 24) = result;
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642EC0;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  float result = *(float *)(a2 + 24);
  *(float *)(a1 + 24) = result;
  return result;
}

uint64_t CMMsl::KeyboardMotionFeatures::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    int v3 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a2 + 28) = 0;
    int v4 = *(_DWORD *)(a2 + 24);
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    v9[0] = &unk_270642EC0;
    int v11 = *(_DWORD *)(a1 + 28);
    *(_DWORD *)(a1 + 28) = v3;
    v9[1] = v5;
    void v9[2] = v6;
    int v7 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 24) = v4;
    int v10 = v7;
    PB::Base::~Base((PB::Base *)v9);
  }
  return a1;
}

uint64_t CMMsl::KeyboardMotionFeatures::formatText(CMMsl::KeyboardMotionFeatures *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "accelFilterX", *((float *)this + 4));
    char v5 = *((unsigned char *)this + 28);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*((unsigned char *)this + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "accelFilterY", *((float *)this + 5));
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_11:
  PB::TextFormatter::format(a2, "accelFilterZ", *((float *)this + 6));
  if (*((unsigned char *)this + 28)) {
LABEL_5:
  }
    PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
LABEL_6:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KeyboardMotionFeatures::readFrom(CMMsl::KeyboardMotionFeatures *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_38;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 28) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_34;
        }
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
        unint64_t v2 = *((void *)a2 + 1) + 8;
        goto LABEL_37;
      case 2u:
        *((unsigned char *)this + 28) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_34;
        }
        *((_DWORD *)this + 4) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_36;
      case 3u:
        *((unsigned char *)this + 28) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_34;
        }
        *((_DWORD *)this + 5) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_36;
      case 4u:
        *((unsigned char *)this + 28) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 6) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_36:
          unint64_t v2 = *((void *)a2 + 1) + 4;
LABEL_37:
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_34:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      default:
        goto LABEL_19;
    }
LABEL_38:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::KeyboardMotionFeatures::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 28);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = PB::Writer::write(a2, *(float *)(v3 + 20));
      if ((*(unsigned char *)(v3 + 28) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    return this;
  }
LABEL_9:
  float v5 = *(float *)(v3 + 24);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::KeyboardMotionFeatures::hash_value(CMMsl::KeyboardMotionFeatures *this)
{
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    double v1 = 0.0;
    if ((*((unsigned char *)this + 28) & 2) != 0) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 28) & 4) != 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  double v1 = *((double *)this + 1);
  if (v1 == 0.0) {
    double v1 = 0.0;
  }
  if ((*((unsigned char *)this + 28) & 2) == 0) {
    goto LABEL_15;
  }
LABEL_3:
  float v2 = *((float *)this + 4);
  uint64_t v3 = LODWORD(v2);
  if (v2 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((unsigned char *)this + 28) & 4) != 0)
  {
LABEL_6:
    float v4 = *((float *)this + 5);
    uint64_t v5 = LODWORD(v4);
    if (v4 == 0.0) {
      uint64_t v5 = 0;
    }
    if ((*((unsigned char *)this + 28) & 8) != 0) {
      goto LABEL_9;
    }
LABEL_17:
    uint64_t v7 = 0;
    return v3 ^ *(void *)&v1 ^ v5 ^ v7;
  }
LABEL_16:
  uint64_t v5 = 0;
  if ((*((unsigned char *)this + 28) & 8) == 0) {
    goto LABEL_17;
  }
LABEL_9:
  float v6 = *((float *)this + 6);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  return v3 ^ *(void *)&v1 ^ v5 ^ v7;
}

void CMMsl::KeyboardMotionState::~KeyboardMotionState(CMMsl::KeyboardMotionState *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KeyboardMotionState::KeyboardMotionState(uint64_t this, const CMMsl::KeyboardMotionState *a2)
{
  *(void *)this = &unk_270642EF8;
  *(_DWORD *)(this + 20) = 0;
  if (*((unsigned char *)a2 + 20))
  {
    uint64_t v3 = *((void *)a2 + 1);
    *(unsigned char *)(this + 20) = 1;
    *(void *)(this + 8) = v3;
    char v2 = 3;
    if ((*((unsigned char *)a2 + 20) & 2) == 0) {
      return this;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*((unsigned char *)a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *((_DWORD *)a2 + 4);
    *(unsigned char *)(this + 20) = v2;
    *(_DWORD *)(this + 16) = v4;
  }
  return this;
}

const CMMsl::KeyboardMotionState *CMMsl::KeyboardMotionState::operator=(const CMMsl::KeyboardMotionState *a1, const CMMsl::KeyboardMotionState *a2)
{
  if (a1 != a2)
  {
    CMMsl::KeyboardMotionState::KeyboardMotionState((uint64_t)v7, a2);
    uint64_t v3 = v9;
    uint64_t v4 = *((void *)a1 + 1);
    uint64_t v5 = *((void *)a1 + 2);
    *((void *)a1 + 1) = v8;
    *((void *)a1 + 2) = v3;
    uint64_t v8 = v4;
    uint64_t v9 = v5;
    PB::Base::~Base((PB::Base *)v7);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::KeyboardMotionState *a2, CMMsl::KeyboardMotionState *a3)
{
  int v3 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v3;
  double result = *((double *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((double *)a2 + 1) = result;
  int v5 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v5;
  return result;
}

double CMMsl::KeyboardMotionState::KeyboardMotionState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642EF8;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

{
  double result;

  *(void *)a1 = &unk_270642EF8;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KeyboardMotionState::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v8[0] = &unk_270642EF8;
    uint64_t v3 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(_DWORD *)(a2 + 20) = 0;
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    v8[1] = v5;
    v8[2] = v6;
    PB::Base::~Base((PB::Base *)v8);
  }
  return a1;
}

uint64_t CMMsl::KeyboardMotionState::formatText(CMMsl::KeyboardMotionState *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "state");
    char v5 = *((unsigned char *)this + 20);
  }
  if (v5) {
    PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KeyboardMotionState::readFrom(CMMsl::KeyboardMotionState *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_26;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *((unsigned char *)this + 20) |= 2u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_47;
            }
            unint64_t v28 = v20++;
            char v29 = *(unsigned char *)(v21 + v28);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v29 & 0x7F) << v26;
            if ((v29 & 0x80) == 0) {
              break;
            }
            v26 += 7;
            BOOL v14 = v27++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              goto LABEL_46;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v24) = 0;
          }
LABEL_46:
          unint64_t v2 = v28 + 1;
        }
        else
        {
          char v22 = 0;
          unsigned int v23 = 0;
          uint64_t v24 = 0;
          while (1)
          {
            unint64_t v2 = v20 + 1;
            *((void *)a2 + 1) = v20 + 1;
            char v25 = *(unsigned char *)(v21 + v20);
            v24 |= (unint64_t)(v25 & 0x7F) << v22;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v22 += 7;
            unint64_t v20 = v2;
            BOOL v14 = v23++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
              break;
            }
          }
        }
LABEL_47:
        *((_DWORD *)this + 4) = v24;
      }
      else if ((v11 >> 3) == 1)
      {
        *((unsigned char *)this + 20) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
        {
          *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 8;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
      }
      else
      {
LABEL_26:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
      }
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_26;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KeyboardMotionState::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 20);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(a2);
  }
  return this;
}

uint64_t CMMsl::KeyboardMotionState::hash_value(CMMsl::KeyboardMotionState *this)
{
  if (*((unsigned char *)this + 20))
  {
    double v1 = *((double *)this + 1);
    if (v1 == 0.0) {
      double v1 = 0.0;
    }
    if ((*((unsigned char *)this + 20) & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v2 = 0;
    return v2 ^ *(void *)&v1;
  }
  double v1 = 0.0;
  if ((*((unsigned char *)this + 20) & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = *((unsigned int *)this + 4);
  return v2 ^ *(void *)&v1;
}

void CMMsl::KeyboardMotionTrackpad::~KeyboardMotionTrackpad(CMMsl::KeyboardMotionTrackpad *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::KeyboardMotionTrackpad::KeyboardMotionTrackpad(uint64_t this, const CMMsl::KeyboardMotionTrackpad *a2)
{
  *(void *)this = &unk_270642F30;
  *(_DWORD *)(this + 20) = 0;
  if (*((unsigned char *)a2 + 20))
  {
    uint64_t v3 = *((void *)a2 + 1);
    *(unsigned char *)(this + 20) = 1;
    *(void *)(this + 8) = v3;
    char v2 = 3;
    if ((*((unsigned char *)a2 + 20) & 2) == 0) {
      return this;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*((unsigned char *)a2 + 20) & 2) != 0)
  {
LABEL_5:
    char v4 = *((unsigned char *)a2 + 16);
    *(unsigned char *)(this + 20) = v2;
    *(unsigned char *)(this + 16) = v4;
  }
  return this;
}

uint64_t CMMsl::KeyboardMotionTrackpad::operator=(uint64_t a1, const CMMsl::KeyboardMotionTrackpad *a2)
{
  if ((const CMMsl::KeyboardMotionTrackpad *)a1 != a2)
  {
    CMMsl::KeyboardMotionTrackpad::KeyboardMotionTrackpad((uint64_t)v6, a2);
    int v3 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v9;
    int v9 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v7;
    uint64_t v7 = v4;
    LOBYTE(v3) = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v8;
    char v8 = v3;
    PB::Base::~Base((PB::Base *)v6);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::KeyboardMotionTrackpad *a2, CMMsl::KeyboardMotionTrackpad *a3)
{
  int v3 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v3;
  double result = *((double *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((double *)a2 + 1) = result;
  LOBYTE(v3) = *((unsigned char *)this + 16);
  *((unsigned char *)this + 16) = *((unsigned char *)a2 + 16);
  *((unsigned char *)a2 + 16) = v3;
  return result;
}

double CMMsl::KeyboardMotionTrackpad::KeyboardMotionTrackpad(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642F30;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

{
  double result;

  *(void *)a1 = &unk_270642F30;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return result;
}

uint64_t CMMsl::KeyboardMotionTrackpad::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v9[0] = &unk_270642F30;
    int v3 = *(_DWORD *)(a2 + 20);
    *(_DWORD *)(a2 + 20) = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    char v5 = *(unsigned char *)(a2 + 16);
    int v6 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v3;
    int v11 = v6;
    uint64_t v7 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v4;
    v9[1] = v7;
    LOBYTE(v3) = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v5;
    char v10 = v3;
    PB::Base::~Base((PB::Base *)v9);
  }
  return a1;
}

uint64_t CMMsl::KeyboardMotionTrackpad::formatText(CMMsl::KeyboardMotionTrackpad *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 20);
  if (v5)
  {
    PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
    char v5 = *((unsigned char *)this + 20);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(a2, "touchActive");
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::KeyboardMotionTrackpad::readFrom(CMMsl::KeyboardMotionTrackpad *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_26;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *((unsigned char *)this + 20) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *((unsigned char *)this + 16) = v21;
      }
      else if ((v11 >> 3) == 1)
      {
        *((unsigned char *)this + 20) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
        {
          *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 8;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
      }
      else
      {
LABEL_26:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
      }
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_26;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::KeyboardMotionTrackpad::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 20);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(a2);
  }
  return this;
}

uint64_t CMMsl::KeyboardMotionTrackpad::hash_value(CMMsl::KeyboardMotionTrackpad *this)
{
  if (*((unsigned char *)this + 20))
  {
    double v1 = *((double *)this + 1);
    if (v1 == 0.0) {
      double v1 = 0.0;
    }
    if ((*((unsigned char *)this + 20) & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v2 = 0;
    return v2 ^ *(void *)&v1;
  }
  double v1 = 0.0;
  if ((*((unsigned char *)this + 20) & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v2 = *((unsigned __int8 *)this + 16);
  return v2 ^ *(void *)&v1;
}

void CMMsl::LSLHeadingEstimation::~LSLHeadingEstimation(CMMsl::LSLHeadingEstimation *this)
{
  *(void *)this = &unk_270642F68;
  uint64_t v2 = (void *)*((void *)this + 7);
  if (v2)
  {
    *((void *)this + 8) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 4);
  if (v3)
  {
    *((void *)this + 5) = v3;
    operator delete(v3);
  }
  char v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::LSLHeadingEstimation::~LSLHeadingEstimation(this);
  JUMPOUT(0x25A2B2850);
}

CMMsl::LSLHeadingEstimation *CMMsl::LSLHeadingEstimation::LSLHeadingEstimation(CMMsl::LSLHeadingEstimation *this, const CMMsl::LSLHeadingEstimation *a2)
{
  *(void *)this = &unk_270642F68;
  *(_OWORD *)((char *)this + 8) = 0u;
  char v4 = (void *)((char *)this + 8);
  *(_OWORD *)((char *)this + 56) = 0u;
  char v5 = (void *)((char *)this + 56);
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 9) = 0;
  *((void *)this + 23) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 48) = 0;
  __int16 v6 = *((_WORD *)a2 + 96);
  if ((v6 & 0x4000) != 0)
  {
    int v8 = *((_DWORD *)a2 + 47);
    __int16 v7 = 0x4000;
    *((_WORD *)this + 96) = 0x4000;
    *((_DWORD *)this + 47) = v8;
    __int16 v6 = *((_WORD *)a2 + 96);
    if ((v6 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v7 = 0;
  if ((*((_WORD *)a2 + 96) & 0x1000) != 0)
  {
LABEL_5:
    uint64_t v9 = *((void *)a2 + 22);
    v7 |= 0x1000u;
    *((_WORD *)this + 96) = v7;
    *((void *)this + 22) = v9;
    __int16 v6 = *((_WORD *)a2 + 96);
  }
LABEL_6:
  if ((v6 & 0x40) != 0)
  {
    uint64_t v10 = *((void *)a2 + 16);
    *((_WORD *)this + 96) = v7 | 0x40;
    *((void *)this + 16) = v10;
  }
  if (this != a2)
  {
    sub_2572C73EC((void *)this + 4, *((char **)a2 + 4), *((char **)a2 + 5), (uint64_t)(*((void *)a2 + 5) - *((void *)a2 + 4)) >> 3);
    sub_2572C73EC(v4, *((char **)a2 + 1), *((char **)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 3);
    sub_2572C73EC(v5, *((char **)a2 + 7), *((char **)a2 + 8), (uint64_t)(*((void *)a2 + 8) - *((void *)a2 + 7)) >> 3);
  }
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 2) != 0)
  {
    uint64_t v14 = *((void *)a2 + 11);
    *((_WORD *)this + 96) |= 2u;
    *((void *)this + 11) = v14;
    __int16 v11 = *((_WORD *)a2 + 96);
    if ((v11 & 0x2000) == 0)
    {
LABEL_12:
      if ((v11 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((*((_WORD *)a2 + 96) & 0x2000) == 0)
  {
    goto LABEL_12;
  }
  int v15 = *((_DWORD *)a2 + 46);
  *((_WORD *)this + 96) |= 0x2000u;
  *((_DWORD *)this + 46) = v15;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 4) == 0)
  {
LABEL_13:
    if ((v11 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v16 = *((void *)a2 + 12);
  *((_WORD *)this + 96) |= 4u;
  *((void *)this + 12) = v16;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 0x10) == 0)
  {
LABEL_14:
    if ((v11 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v17 = *((void *)a2 + 14);
  *((_WORD *)this + 96) |= 0x10u;
  *((void *)this + 14) = v17;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 1) == 0)
  {
LABEL_15:
    if ((v11 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v18 = *((void *)a2 + 10);
  *((_WORD *)this + 96) |= 1u;
  *((void *)this + 10) = v18;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 8) == 0)
  {
LABEL_16:
    if ((v11 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v19 = *((void *)a2 + 13);
  *((_WORD *)this + 96) |= 8u;
  *((void *)this + 13) = v19;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 0x20) == 0)
  {
LABEL_17:
    if ((v11 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v20 = *((void *)a2 + 15);
  *((_WORD *)this + 96) |= 0x20u;
  *((void *)this + 15) = v20;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 0x800) == 0)
  {
LABEL_18:
    if ((v11 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v21 = *((void *)a2 + 21);
  *((_WORD *)this + 96) |= 0x800u;
  *((void *)this + 21) = v21;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 0x80) == 0)
  {
LABEL_19:
    if ((v11 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v22 = *((void *)a2 + 17);
  *((_WORD *)this + 96) |= 0x80u;
  *((void *)this + 17) = v22;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 0x100) == 0)
  {
LABEL_20:
    if ((v11 & 0x200) == 0) {
      goto LABEL_21;
    }
LABEL_34:
    uint64_t v24 = *((void *)a2 + 19);
    *((_WORD *)this + 96) |= 0x200u;
    *((void *)this + 19) = v24;
    if ((*((_WORD *)a2 + 96) & 0x400) == 0) {
      return this;
    }
    goto LABEL_22;
  }
LABEL_33:
  uint64_t v23 = *((void *)a2 + 18);
  *((_WORD *)this + 96) |= 0x100u;
  *((void *)this + 18) = v23;
  __int16 v11 = *((_WORD *)a2 + 96);
  if ((v11 & 0x200) != 0) {
    goto LABEL_34;
  }
LABEL_21:
  if ((v11 & 0x400) != 0)
  {
LABEL_22:
    uint64_t v12 = *((void *)a2 + 20);
    *((_WORD *)this + 96) |= 0x400u;
    *((void *)this + 20) = v12;
  }
  return this;
}

CMMsl *CMMsl::LSLHeadingEstimation::operator=(CMMsl *a1, const CMMsl::LSLHeadingEstimation *a2)
{
  if (a1 != a2)
  {
    CMMsl::LSLHeadingEstimation::LSLHeadingEstimation((CMMsl::LSLHeadingEstimation *)v5, a2);
    CMMsl::swap(a1, (CMMsl::LSLHeadingEstimation *)v5, v3);
    CMMsl::LSLHeadingEstimation::~LSLHeadingEstimation((CMMsl::LSLHeadingEstimation *)v5);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::LSLHeadingEstimation *a2, CMMsl::LSLHeadingEstimation *a3)
{
  int v3 = *((_DWORD *)this + 48);
  *((_DWORD *)this + 48) = *((_DWORD *)a2 + 48);
  *((_DWORD *)a2 + 48) = v3;
  uint64_t v4 = *((void *)this + 22);
  *((void *)this + 22) = *((void *)a2 + 22);
  *((void *)a2 + 22) = v4;
  uint64_t v5 = *((void *)this + 16);
  *((void *)this + 16) = *((void *)a2 + 16);
  *((void *)a2 + 16) = v5;
  uint64_t v6 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v6;
  uint64_t v7 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v7;
  uint64_t v8 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v8;
  uint64_t v9 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v9;
  uint64_t v10 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v10;
  uint64_t v11 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v11;
  uint64_t v12 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v12;
  uint64_t v13 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v13;
  uint64_t v14 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v14;
  uint64_t v15 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v15;
  uint64_t v16 = *((void *)this + 23);
  *((void *)this + 23) = *((void *)a2 + 23);
  *((void *)a2 + 23) = v16;
  uint64_t v17 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v17;
  uint64_t v18 = *((void *)this + 14);
  *((void *)this + 14) = *((void *)a2 + 14);
  *((void *)a2 + 14) = v18;
  uint64_t v19 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v19;
  uint64_t v20 = *((void *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((void *)a2 + 13) = v20;
  uint64_t v21 = *((void *)this + 15);
  *((void *)this + 15) = *((void *)a2 + 15);
  *((void *)a2 + 15) = v21;
  uint64_t v22 = *((void *)this + 21);
  *((void *)this + 21) = *((void *)a2 + 21);
  *((void *)a2 + 21) = v22;
  uint64_t v23 = *((void *)this + 17);
  *((void *)this + 17) = *((void *)a2 + 17);
  *((void *)a2 + 17) = v23;
  uint64_t v24 = *((void *)this + 18);
  *((void *)this + 18) = *((void *)a2 + 18);
  *((void *)a2 + 18) = v24;
  uint64_t v25 = *((void *)this + 19);
  *((void *)this + 19) = *((void *)a2 + 19);
  *((void *)a2 + 19) = v25;
  double result = *((double *)this + 20);
  *((void *)this + 20) = *((void *)a2 + 20);
  *((double *)a2 + 20) = result;
  return result;
}

uint64_t CMMsl::LSLHeadingEstimation::LSLHeadingEstimation(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642F68;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(void *)(a1 + 184) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_DWORD *)(a2 + 192) = 0;
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  sub_2572C7560(a1 + 32, (__n128 *)(a2 + 32));
  sub_2572C7560(a1 + 8, (__n128 *)(a2 + 8));
  sub_2572C7560(a1 + 56, (__n128 *)(a2 + 56));
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  return a1;
}

CMMsl *CMMsl::LSLHeadingEstimation::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::LSLHeadingEstimation::LSLHeadingEstimation((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::LSLHeadingEstimation *)v5, v3);
    CMMsl::LSLHeadingEstimation::~LSLHeadingEstimation((CMMsl::LSLHeadingEstimation *)v5);
  }
  return a1;
}

uint64_t CMMsl::LSLHeadingEstimation::formatText(CMMsl::LSLHeadingEstimation *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 96);
  if (v5)
  {
    PB::TextFormatter::format(a2, "altitude", *((double *)this + 10));
    __int16 v5 = *((_WORD *)this + 96);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 0x2000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_30;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "confidence", *((double *)this + 11));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 0x2000) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_31;
  }
LABEL_30:
  PB::TextFormatter::format(a2, "globalReferenceFrame");
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_31:
  PB::TextFormatter::format(a2, "latitude", *((double *)this + 12));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_32:
  PB::TextFormatter::format(a2, "locationTimestamp", *((double *)this + 13));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_33:
  PB::TextFormatter::format(a2, "longitude", *((double *)this + 14));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 0x20) == 0)
  {
LABEL_8:
    if ((v5 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  PB::TextFormatter::format(a2, "machContinuousLocationTimestamp", *((double *)this + 15));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 0x40) == 0)
  {
LABEL_9:
    if ((v5 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_35:
  PB::TextFormatter::format(a2, "machContinuousTimestamp", *((double *)this + 16));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 0x80) == 0)
  {
LABEL_10:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_36:
  PB::TextFormatter::format(a2, "polylinesLocation1Latitude", *((double *)this + 17));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 0x100) == 0)
  {
LABEL_11:
    if ((v5 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_37:
  PB::TextFormatter::format(a2, "polylinesLocation1Longitude", *((double *)this + 18));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 0x200) == 0)
  {
LABEL_12:
    if ((v5 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_39;
  }
LABEL_38:
  PB::TextFormatter::format(a2, "polylinesLocation2Latitude", *((double *)this + 19));
  __int16 v5 = *((_WORD *)this + 96);
  if ((v5 & 0x400) == 0)
  {
LABEL_13:
    if ((v5 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_39:
  PB::TextFormatter::format(a2, "polylinesLocation2Longitude", *((double *)this + 20));
  if ((*((_WORD *)this + 96) & 0x800) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(a2, "roadID");
LABEL_15:
  uint64_t v6 = (double *)*((void *)this + 1);
  uint64_t v7 = (double *)*((void *)this + 2);
  while (v6 != v7)
  {
    double v8 = *v6++;
    PB::TextFormatter::format(a2, "rotationFromGlobalToCameraFrame", v8);
  }
  uint64_t v9 = (double *)*((void *)this + 4);
  uint64_t v10 = (double *)*((void *)this + 5);
  while (v9 != v10)
  {
    double v11 = *v9++;
    PB::TextFormatter::format(a2, "rotationFromGlobalToDeviceFrame", v11);
  }
  uint64_t v12 = (double *)*((void *)this + 7);
  uint64_t v13 = (double *)*((void *)this + 8);
  while (v12 != v13)
  {
    double v14 = *v12++;
    PB::TextFormatter::format(a2, "rotationalAccuracyInRadians", v14);
  }
  __int16 v15 = *((_WORD *)this + 96);
  if ((v15 & 0x4000) != 0)
  {
    PB::TextFormatter::format(a2, "status");
    __int16 v15 = *((_WORD *)this + 96);
  }
  if ((v15 & 0x1000) != 0) {
    PB::TextFormatter::format(a2, "timestamp", *((double *)this + 22));
  }
  return MEMORY[0x270F587F0](a2);
}

BOOL CMMsl::LSLHeadingEstimation::readFrom(CMMsl::LSLHeadingEstimation *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 <= 0xFFFFFFFFFFFFFFF5 && v2 + 10 <= v3)
    {
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_21:
      int v19 = v11 & 7;
      if (v19 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *((_WORD *)this + 96) |= 0x4000u;
          unint64_t v20 = *((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
          uint64_t v22 = *(void *)a2;
          if (v20 <= 0xFFFFFFFFFFFFFFF5 && v20 + 10 <= v21)
          {
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            do
            {
              unint64_t v26 = v20 + 1;
              *((void *)a2 + 1) = v20 + 1;
              char v27 = *(unsigned char *)(v22 + v20);
              v25 |= (unint64_t)(v27 & 0x7F) << v23;
              if ((v27 & 0x80) == 0) {
                goto LABEL_210;
              }
              v23 += 7;
              unint64_t v20 = v26;
              BOOL v14 = v24++ > 8;
            }
            while (!v14);
LABEL_158:
            LODWORD(v25) = 0;
            goto LABEL_210;
          }
          char v98 = 0;
          unsigned int v99 = 0;
          uint64_t v25 = 0;
          if (v21 <= v20) {
            unint64_t v21 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v21 == v20)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v100 = v20 + 1;
              char v101 = *(unsigned char *)(v22 + v20);
              *((void *)a2 + 1) = v100;
              v25 |= (unint64_t)(v101 & 0x7F) << v98;
              if (v101 < 0)
              {
                v98 += 7;
                unint64_t v20 = v100;
                BOOL v14 = v99++ > 8;
                if (v14) {
                  goto LABEL_158;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v25) = 0;
              }
            }
            break;
          }
LABEL_210:
          *((_DWORD *)this + 47) = v25;
          goto LABEL_243;
        case 2u:
          *((_WORD *)this + 96) |= 0x1000u;
          unint64_t v28 = *((void *)a2 + 1);
          if (v28 > 0xFFFFFFFFFFFFFFF7 || v28 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 22) = *(void *)(*(void *)a2 + v28);
          goto LABEL_242;
        case 3u:
          *((_WORD *)this + 96) |= 0x40u;
          unint64_t v29 = *((void *)a2 + 1);
          if (v29 > 0xFFFFFFFFFFFFFFF7 || v29 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 16) = *(void *)(*(void *)a2 + v29);
          goto LABEL_242;
        case 4u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v30 = *((void *)a2 + 1);
            unint64_t v31 = *((void *)a2 + 2);
            while (v30 < v31 && !*((unsigned char *)a2 + 24))
            {
              float v33 = (char *)*((void *)this + 5);
              unint64_t v32 = *((void *)this + 6);
              if ((unint64_t)v33 >= v32)
              {
                float v35 = (char *)*((void *)this + 4);
                uint64_t v36 = (v33 - v35) >> 3;
                unint64_t v37 = v36 + 1;
                if ((unint64_t)(v36 + 1) >> 61) {
                  goto LABEL_252;
                }
                uint64_t v38 = v32 - (void)v35;
                if (v38 >> 2 > v37) {
                  unint64_t v37 = v38 >> 2;
                }
                if ((unint64_t)v38 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v39 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v39 = v37;
                }
                if (v39)
                {
                  unint64_t v39 = (unint64_t)sub_2572C7528(v39);
                  float v35 = (char *)*((void *)this + 4);
                  float v33 = (char *)*((void *)this + 5);
                }
                else
                {
                  uint64_t v40 = 0;
                }
                float v41 = (void *)(v39 + 8 * v36);
                *float v41 = 0;
                uint64_t v34 = v41 + 1;
                while (v33 != v35)
                {
                  uint64_t v42 = *((void *)v33 - 1);
                  v33 -= 8;
                  *--float v41 = v42;
                }
                *((void *)this + 4) = v41;
                *((void *)this + 5) = v34;
                *((void *)this + 6) = v39 + 8 * v40;
                if (v35) {
                  operator delete(v35);
                }
              }
              else
              {
                *(void *)float v33 = 0;
                uint64_t v34 = v33 + 8;
              }
              *((void *)this + 5) = v34;
              unint64_t v43 = *((void *)a2 + 1);
              if (v43 > 0xFFFFFFFFFFFFFFF7 || v43 + 8 > *((void *)a2 + 2)) {
                goto LABEL_179;
              }
              *(v34 - 1) = *(void *)(*(void *)a2 + v43);
              unint64_t v31 = *((void *)a2 + 2);
              unint64_t v30 = *((void *)a2 + 1) + 8;
              *((void *)a2 + 1) = v30;
            }
            goto LABEL_180;
          }
          unint64_t v103 = (char *)*((void *)this + 5);
          unint64_t v102 = *((void *)this + 6);
          if ((unint64_t)v103 >= v102)
          {
            char v117 = (char *)*((void *)this + 4);
            uint64_t v118 = (v103 - v117) >> 3;
            unint64_t v119 = v118 + 1;
            if ((unint64_t)(v118 + 1) >> 61) {
              goto LABEL_252;
            }
            uint64_t v120 = v102 - (void)v117;
            if (v120 >> 2 > v119) {
              unint64_t v119 = v120 >> 2;
            }
            if ((unint64_t)v120 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v121 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v121 = v119;
            }
            if (v121)
            {
              unint64_t v121 = (unint64_t)sub_2572C7528(v121);
              char v117 = (char *)*((void *)this + 4);
              unint64_t v103 = (char *)*((void *)this + 5);
            }
            else
            {
              uint64_t v122 = 0;
            }
            unint64_t v135 = (void *)(v121 + 8 * v118);
            *unint64_t v135 = 0;
            unint64_t v104 = v135 + 1;
            while (v103 != v117)
            {
              uint64_t v136 = *((void *)v103 - 1);
              v103 -= 8;
              *--unint64_t v135 = v136;
            }
            *((void *)this + 4) = v135;
            *((void *)this + 5) = v104;
            *((void *)this + 6) = v121 + 8 * v122;
            if (v117) {
              operator delete(v117);
            }
          }
          else
          {
            *(void *)unint64_t v103 = 0;
            unint64_t v104 = v103 + 8;
          }
          *((void *)this + 5) = v104;
          goto LABEL_238;
        case 5u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v44 = *((void *)a2 + 1);
            unint64_t v45 = *((void *)a2 + 2);
            while (v44 < v45 && !*((unsigned char *)a2 + 24))
            {
              float v47 = (char *)*((void *)this + 2);
              unint64_t v46 = *((void *)this + 3);
              if ((unint64_t)v47 >= v46)
              {
                uint64_t v49 = (char *)*((void *)this + 1);
                uint64_t v50 = (v47 - v49) >> 3;
                unint64_t v51 = v50 + 1;
                if ((unint64_t)(v50 + 1) >> 61) {
                  goto LABEL_252;
                }
                uint64_t v52 = v46 - (void)v49;
                if (v52 >> 2 > v51) {
                  unint64_t v51 = v52 >> 2;
                }
                if ((unint64_t)v52 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v53 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v53 = v51;
                }
                if (v53)
                {
                  unint64_t v53 = (unint64_t)sub_2572C7528(v53);
                  uint64_t v49 = (char *)*((void *)this + 1);
                  float v47 = (char *)*((void *)this + 2);
                }
                else
                {
                  uint64_t v54 = 0;
                }
                uint64_t v55 = (void *)(v53 + 8 * v50);
                *uint64_t v55 = 0;
                uint64_t v48 = v55 + 1;
                while (v47 != v49)
                {
                  uint64_t v56 = *((void *)v47 - 1);
                  v47 -= 8;
                  *--uint64_t v55 = v56;
                }
                *((void *)this + 1) = v55;
                *((void *)this + 2) = v48;
                *((void *)this + 3) = v53 + 8 * v54;
                if (v49) {
                  operator delete(v49);
                }
              }
              else
              {
                *(void *)float v47 = 0;
                uint64_t v48 = v47 + 8;
              }
              *((void *)this + 2) = v48;
              unint64_t v57 = *((void *)a2 + 1);
              if (v57 > 0xFFFFFFFFFFFFFFF7 || v57 + 8 > *((void *)a2 + 2)) {
                goto LABEL_179;
              }
              *(v48 - 1) = *(void *)(*(void *)a2 + v57);
              unint64_t v45 = *((void *)a2 + 2);
              unint64_t v44 = *((void *)a2 + 1) + 8;
              *((void *)a2 + 1) = v44;
            }
            goto LABEL_180;
          }
          char v106 = (char *)*((void *)this + 2);
          unint64_t v105 = *((void *)this + 3);
          if ((unint64_t)v106 >= v105)
          {
            unint64_t v123 = (char *)*((void *)this + 1);
            uint64_t v124 = (v106 - v123) >> 3;
            unint64_t v125 = v124 + 1;
            if ((unint64_t)(v124 + 1) >> 61) {
              goto LABEL_252;
            }
            uint64_t v126 = v105 - (void)v123;
            if (v126 >> 2 > v125) {
              unint64_t v125 = v126 >> 2;
            }
            if ((unint64_t)v126 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v127 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v127 = v125;
            }
            if (v127)
            {
              unint64_t v127 = (unint64_t)sub_2572C7528(v127);
              unint64_t v123 = (char *)*((void *)this + 1);
              char v106 = (char *)*((void *)this + 2);
            }
            else
            {
              uint64_t v128 = 0;
            }
            unint64_t v137 = (void *)(v127 + 8 * v124);
            *unint64_t v137 = 0;
            unint64_t v104 = v137 + 1;
            while (v106 != v123)
            {
              uint64_t v138 = *((void *)v106 - 1);
              v106 -= 8;
              *--unint64_t v137 = v138;
            }
            *((void *)this + 1) = v137;
            *((void *)this + 2) = v104;
            *((void *)this + 3) = v127 + 8 * v128;
            if (v123) {
              operator delete(v123);
            }
          }
          else
          {
            *(void *)char v106 = 0;
            unint64_t v104 = v106 + 8;
          }
          *((void *)this + 2) = v104;
          goto LABEL_238;
        case 6u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v58 = *((void *)a2 + 1);
            unint64_t v59 = *((void *)a2 + 2);
            while (v58 < v59 && !*((unsigned char *)a2 + 24))
            {
              char v61 = (char *)*((void *)this + 8);
              unint64_t v60 = *((void *)this + 9);
              if ((unint64_t)v61 >= v60)
              {
                unint64_t v63 = (char *)*((void *)this + 7);
                uint64_t v64 = (v61 - v63) >> 3;
                unint64_t v65 = v64 + 1;
                if ((unint64_t)(v64 + 1) >> 61) {
                  goto LABEL_252;
                }
                uint64_t v66 = v60 - (void)v63;
                if (v66 >> 2 > v65) {
                  unint64_t v65 = v66 >> 2;
                }
                if ((unint64_t)v66 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v67 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v67 = v65;
                }
                if (v67)
                {
                  unint64_t v67 = (unint64_t)sub_2572C7528(v67);
                  unint64_t v63 = (char *)*((void *)this + 7);
                  char v61 = (char *)*((void *)this + 8);
                }
                else
                {
                  uint64_t v68 = 0;
                }
                char v69 = (void *)(v67 + 8 * v64);
                *char v69 = 0;
                unint64_t v62 = v69 + 1;
                while (v61 != v63)
                {
                  uint64_t v70 = *((void *)v61 - 1);
                  v61 -= 8;
                  *--char v69 = v70;
                }
                *((void *)this + 7) = v69;
                *((void *)this + 8) = v62;
                *((void *)this + 9) = v67 + 8 * v68;
                if (v63) {
                  operator delete(v63);
                }
              }
              else
              {
                *(void *)char v61 = 0;
                unint64_t v62 = v61 + 8;
              }
              *((void *)this + 8) = v62;
              unint64_t v71 = *((void *)a2 + 1);
              if (v71 > 0xFFFFFFFFFFFFFFF7 || v71 + 8 > *((void *)a2 + 2))
              {
LABEL_179:
                *((unsigned char *)a2 + 24) = 1;
                break;
              }
              *(v62 - 1) = *(void *)(*(void *)a2 + v71);
              unint64_t v59 = *((void *)a2 + 2);
              unint64_t v58 = *((void *)a2 + 1) + 8;
              *((void *)a2 + 1) = v58;
            }
LABEL_180:
            PB::Reader::recallMark();
          }
          else
          {
            uint64_t v108 = (char *)*((void *)this + 8);
            unint64_t v107 = *((void *)this + 9);
            if ((unint64_t)v108 >= v107)
            {
              unint64_t v129 = (char *)*((void *)this + 7);
              uint64_t v130 = (v108 - v129) >> 3;
              unint64_t v131 = v130 + 1;
              if ((unint64_t)(v130 + 1) >> 61) {
LABEL_252:
              }
                sub_2570AFD0C();
              uint64_t v132 = v107 - (void)v129;
              if (v132 >> 2 > v131) {
                unint64_t v131 = v132 >> 2;
              }
              if ((unint64_t)v132 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v133 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v133 = v131;
              }
              if (v133)
              {
                unint64_t v133 = (unint64_t)sub_2572C7528(v133);
                unint64_t v129 = (char *)*((void *)this + 7);
                uint64_t v108 = (char *)*((void *)this + 8);
              }
              else
              {
                uint64_t v134 = 0;
              }
              uint64_t v139 = (void *)(v133 + 8 * v130);
              *uint64_t v139 = 0;
              unint64_t v104 = v139 + 1;
              while (v108 != v129)
              {
                uint64_t v140 = *((void *)v108 - 1);
                v108 -= 8;
                *--uint64_t v139 = v140;
              }
              *((void *)this + 7) = v139;
              *((void *)this + 8) = v104;
              *((void *)this + 9) = v133 + 8 * v134;
              if (v129) {
                operator delete(v129);
              }
            }
            else
            {
              *(void *)uint64_t v108 = 0;
              unint64_t v104 = v108 + 8;
            }
            *((void *)this + 8) = v104;
LABEL_238:
            unint64_t v141 = *((void *)a2 + 1);
            if (v141 <= 0xFFFFFFFFFFFFFFF7 && v141 + 8 <= *((void *)a2 + 2))
            {
              *(v104 - 1) = *(void *)(*(void *)a2 + v141);
LABEL_242:
              *((void *)a2 + 1) += 8;
            }
            else
            {
LABEL_240:
              *((unsigned char *)a2 + 24) = 1;
            }
          }
          break;
        case 7u:
          *((_WORD *)this + 96) |= 2u;
          unint64_t v72 = *((void *)a2 + 1);
          if (v72 > 0xFFFFFFFFFFFFFFF7 || v72 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 11) = *(void *)(*(void *)a2 + v72);
          goto LABEL_242;
        case 8u:
          *((_WORD *)this + 96) |= 0x2000u;
          unint64_t v73 = *((void *)a2 + 1);
          unint64_t v74 = *((void *)a2 + 2);
          uint64_t v75 = *(void *)a2;
          if (v73 <= 0xFFFFFFFFFFFFFFF5 && v73 + 10 <= v74)
          {
            char v76 = 0;
            unsigned int v77 = 0;
            uint64_t v78 = 0;
            do
            {
              unint64_t v79 = v73 + 1;
              *((void *)a2 + 1) = v73 + 1;
              char v80 = *(unsigned char *)(v75 + v73);
              v78 |= (unint64_t)(v80 & 0x7F) << v76;
              if ((v80 & 0x80) == 0) {
                goto LABEL_213;
              }
              v76 += 7;
              unint64_t v73 = v79;
              BOOL v14 = v77++ > 8;
            }
            while (!v14);
LABEL_171:
            LODWORD(v78) = 0;
            goto LABEL_213;
          }
          char v109 = 0;
          unsigned int v110 = 0;
          uint64_t v78 = 0;
          if (v74 <= v73) {
            unint64_t v74 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v74 == v73)
            {
              LODWORD(v78) = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v111 = v73 + 1;
              char v112 = *(unsigned char *)(v75 + v73);
              *((void *)a2 + 1) = v111;
              v78 |= (unint64_t)(v112 & 0x7F) << v109;
              if (v112 < 0)
              {
                v109 += 7;
                unint64_t v73 = v111;
                BOOL v14 = v110++ > 8;
                if (v14) {
                  goto LABEL_171;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                LODWORD(v78) = 0;
              }
            }
            break;
          }
LABEL_213:
          *((_DWORD *)this + 46) = v78;
          goto LABEL_243;
        case 9u:
          *((_WORD *)this + 96) |= 4u;
          unint64_t v81 = *((void *)a2 + 1);
          if (v81 > 0xFFFFFFFFFFFFFFF7 || v81 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 12) = *(void *)(*(void *)a2 + v81);
          goto LABEL_242;
        case 0xAu:
          *((_WORD *)this + 96) |= 0x10u;
          unint64_t v82 = *((void *)a2 + 1);
          if (v82 > 0xFFFFFFFFFFFFFFF7 || v82 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 14) = *(void *)(*(void *)a2 + v82);
          goto LABEL_242;
        case 0xBu:
          *((_WORD *)this + 96) |= 1u;
          unint64_t v83 = *((void *)a2 + 1);
          if (v83 > 0xFFFFFFFFFFFFFFF7 || v83 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 10) = *(void *)(*(void *)a2 + v83);
          goto LABEL_242;
        case 0xCu:
          *((_WORD *)this + 96) |= 8u;
          unint64_t v84 = *((void *)a2 + 1);
          if (v84 > 0xFFFFFFFFFFFFFFF7 || v84 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 13) = *(void *)(*(void *)a2 + v84);
          goto LABEL_242;
        case 0xDu:
          *((_WORD *)this + 96) |= 0x20u;
          unint64_t v85 = *((void *)a2 + 1);
          if (v85 > 0xFFFFFFFFFFFFFFF7 || v85 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 15) = *(void *)(*(void *)a2 + v85);
          goto LABEL_242;
        case 0xEu:
          *((_WORD *)this + 96) |= 0x800u;
          unint64_t v86 = *((void *)a2 + 1);
          unint64_t v87 = *((void *)a2 + 2);
          uint64_t v88 = *(void *)a2;
          if (v86 <= 0xFFFFFFFFFFFFFFF5 && v86 + 10 <= v87)
          {
            char v89 = 0;
            unsigned int v90 = 0;
            uint64_t v91 = 0;
            do
            {
              unint64_t v92 = v86 + 1;
              *((void *)a2 + 1) = v86 + 1;
              char v93 = *(unsigned char *)(v88 + v86);
              v91 |= (unint64_t)(v93 & 0x7F) << v89;
              if ((v93 & 0x80) == 0) {
                goto LABEL_216;
              }
              v89 += 7;
              unint64_t v86 = v92;
              BOOL v14 = v90++ > 8;
            }
            while (!v14);
LABEL_178:
            uint64_t v91 = 0;
            goto LABEL_216;
          }
          char v113 = 0;
          unsigned int v114 = 0;
          uint64_t v91 = 0;
          if (v87 <= v86) {
            unint64_t v87 = *((void *)a2 + 1);
          }
          while (2)
          {
            if (v87 == v86)
            {
              uint64_t v91 = 0;
              *((unsigned char *)a2 + 24) = 1;
            }
            else
            {
              unint64_t v115 = v86 + 1;
              char v116 = *(unsigned char *)(v88 + v86);
              *((void *)a2 + 1) = v115;
              v91 |= (unint64_t)(v116 & 0x7F) << v113;
              if (v116 < 0)
              {
                v113 += 7;
                unint64_t v86 = v115;
                BOOL v14 = v114++ > 8;
                if (v14) {
                  goto LABEL_178;
                }
                continue;
              }
              if (*((unsigned char *)a2 + 24)) {
                uint64_t v91 = 0;
              }
            }
            break;
          }
LABEL_216:
          *((void *)this + 21) = v91;
          goto LABEL_243;
        case 0xFu:
          *((_WORD *)this + 96) |= 0x80u;
          unint64_t v94 = *((void *)a2 + 1);
          if (v94 > 0xFFFFFFFFFFFFFFF7 || v94 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 17) = *(void *)(*(void *)a2 + v94);
          goto LABEL_242;
        case 0x10u:
          *((_WORD *)this + 96) |= 0x100u;
          unint64_t v95 = *((void *)a2 + 1);
          if (v95 > 0xFFFFFFFFFFFFFFF7 || v95 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 18) = *(void *)(*(void *)a2 + v95);
          goto LABEL_242;
        case 0x11u:
          *((_WORD *)this + 96) |= 0x200u;
          unint64_t v96 = *((void *)a2 + 1);
          if (v96 > 0xFFFFFFFFFFFFFFF7 || v96 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 19) = *(void *)(*(void *)a2 + v96);
          goto LABEL_242;
        case 0x12u:
          *((_WORD *)this + 96) |= 0x400u;
          unint64_t v97 = *((void *)a2 + 1);
          if (v97 > 0xFFFFFFFFFFFFFFF7 || v97 + 8 > *((void *)a2 + 2)) {
            goto LABEL_240;
          }
          *((void *)this + 20) = *(void *)(*(void *)a2 + v97);
          goto LABEL_242;
        default:
          goto LABEL_19;
      }
      goto LABEL_243;
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    do
    {
      if (v3 == v2)
      {
        int v4 = 1;
        *((unsigned char *)a2 + 24) = 1;
        return v4 == 0;
      }
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_21;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
    }
    while (!v14);
LABEL_19:
    if ((PB::Reader::skip(a2) & 1) == 0) {
      return 0;
    }
LABEL_243:
    unint64_t v2 = *((void *)a2 + 1);
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
}

uint64_t CMMsl::LSLHeadingEstimation::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 192);
  if ((v4 & 0x4000) == 0)
  {
    if ((*(_WORD *)(this + 192) & 0x1000) == 0) {
      goto LABEL_3;
    }
LABEL_28:
    this = PB::Writer::write(a2, *(double *)(v3 + 176));
    if ((*(_WORD *)(v3 + 192) & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 192);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_3:
  if ((v4 & 0x40) != 0) {
LABEL_4:
  }
    this = PB::Writer::write(a2, *(double *)(v3 + 128));
LABEL_5:
  __int16 v5 = *(double **)(v3 + 32);
  uint64_t v6 = *(double **)(v3 + 40);
  while (v5 != v6)
  {
    double v7 = *v5++;
    this = PB::Writer::write(a2, v7);
  }
  uint64_t v8 = *(double **)(v3 + 8);
  char v9 = *(double **)(v3 + 16);
  while (v8 != v9)
  {
    double v10 = *v8++;
    this = PB::Writer::write(a2, v10);
  }
  unint64_t v11 = *(double **)(v3 + 56);
  unint64_t v12 = *(double **)(v3 + 64);
  while (v11 != v12)
  {
    double v13 = *v11++;
    this = PB::Writer::write(a2, v13);
  }
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 2) != 0)
  {
    this = PB::Writer::write(a2, *(double *)(v3 + 88));
    __int16 v14 = *(_WORD *)(v3 + 192);
    if ((v14 & 0x2000) == 0)
    {
LABEL_16:
      if ((v14 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
  }
  else if ((*(_WORD *)(v3 + 192) & 0x2000) == 0)
  {
    goto LABEL_16;
  }
  this = PB::Writer::writeVarInt(a2);
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 4) == 0)
  {
LABEL_17:
    if ((v14 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = PB::Writer::write(a2, *(double *)(v3 + 96));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x10) == 0)
  {
LABEL_18:
    if ((v14 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = PB::Writer::write(a2, *(double *)(v3 + 112));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 1) == 0)
  {
LABEL_19:
    if ((v14 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = PB::Writer::write(a2, *(double *)(v3 + 80));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 8) == 0)
  {
LABEL_20:
    if ((v14 & 0x20) == 0) {
      goto LABEL_21;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = PB::Writer::write(a2, *(double *)(v3 + 104));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x20) == 0)
  {
LABEL_21:
    if ((v14 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = PB::Writer::write(a2, *(double *)(v3 + 120));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x800) == 0)
  {
LABEL_22:
    if ((v14 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = PB::Writer::writeVarInt(a2);
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x80) == 0)
  {
LABEL_23:
    if ((v14 & 0x100) == 0) {
      goto LABEL_24;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = PB::Writer::write(a2, *(double *)(v3 + 136));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x100) == 0)
  {
LABEL_24:
    if ((v14 & 0x200) == 0) {
      goto LABEL_25;
    }
LABEL_40:
    this = PB::Writer::write(a2, *(double *)(v3 + 152));
    if ((*(_WORD *)(v3 + 192) & 0x400) == 0) {
      return this;
    }
    goto LABEL_41;
  }
LABEL_39:
  this = PB::Writer::write(a2, *(double *)(v3 + 144));
  __int16 v14 = *(_WORD *)(v3 + 192);
  if ((v14 & 0x200) != 0) {
    goto LABEL_40;
  }
LABEL_25:
  if ((v14 & 0x400) == 0) {
    return this;
  }
LABEL_41:
  double v15 = *(double *)(v3 + 160);
  return PB::Writer::write(a2, v15);
}

uint64_t CMMsl::LSLHeadingEstimation::hash_value(CMMsl::LSLHeadingEstimation *this)
{
  __int16 v2 = *((_WORD *)this + 96);
  if ((v2 & 0x4000) != 0)
  {
    uint64_t v3 = *((int *)this + 47);
    if ((*((_WORD *)this + 96) & 0x1000) != 0)
    {
LABEL_3:
      if (*((double *)this + 22) == 0.0) {
        uint64_t v4 = 0;
      }
      else {
        uint64_t v4 = *((void *)this + 22);
      }
      if ((v2 & 0x40) != 0) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v5 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((_WORD *)this + 96) & 0x1000) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v4 = 0;
  if ((v2 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_7:
  if (*((double *)this + 16) == 0.0) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = *((void *)this + 16);
  }
LABEL_13:
  uint64_t v6 = PBHashBytes();
  uint64_t v7 = PBHashBytes();
  uint64_t v8 = PBHashBytes();
  __int16 v9 = *((_WORD *)this + 96);
  if ((v9 & 2) != 0)
  {
    double v10 = *((double *)this + 11);
    if (v10 == 0.0) {
      double v10 = 0.0;
    }
    if ((*((_WORD *)this + 96) & 0x2000) != 0)
    {
LABEL_15:
      uint64_t v11 = *((int *)this + 46);
      if ((v9 & 4) != 0) {
        goto LABEL_16;
      }
LABEL_48:
      double v12 = 0.0;
      if ((v9 & 0x10) != 0) {
        goto LABEL_19;
      }
LABEL_49:
      double v13 = 0.0;
      if (v9) {
        goto LABEL_22;
      }
LABEL_50:
      double v14 = 0.0;
      if ((v9 & 8) != 0) {
        goto LABEL_25;
      }
LABEL_51:
      double v15 = 0.0;
      if ((v9 & 0x20) != 0) {
        goto LABEL_28;
      }
LABEL_52:
      double v16 = 0.0;
      if ((*((_WORD *)this + 96) & 0x800) != 0) {
        goto LABEL_31;
      }
      goto LABEL_53;
    }
  }
  else
  {
    double v10 = 0.0;
    if ((*((_WORD *)this + 96) & 0x2000) != 0) {
      goto LABEL_15;
    }
  }
  uint64_t v11 = 0;
  if ((v9 & 4) == 0) {
    goto LABEL_48;
  }
LABEL_16:
  double v12 = *((double *)this + 12);
  if (v12 == 0.0) {
    double v12 = 0.0;
  }
  if ((v9 & 0x10) == 0) {
    goto LABEL_49;
  }
LABEL_19:
  double v13 = *((double *)this + 14);
  if (v13 == 0.0) {
    double v13 = 0.0;
  }
  if ((v9 & 1) == 0) {
    goto LABEL_50;
  }
LABEL_22:
  double v14 = *((double *)this + 10);
  if (v14 == 0.0) {
    double v14 = 0.0;
  }
  if ((v9 & 8) == 0) {
    goto LABEL_51;
  }
LABEL_25:
  double v15 = *((double *)this + 13);
  if (v15 == 0.0) {
    double v15 = 0.0;
  }
  if ((v9 & 0x20) == 0) {
    goto LABEL_52;
  }
LABEL_28:
  double v16 = *((double *)this + 15);
  if (v16 == 0.0) {
    double v16 = 0.0;
  }
  if ((*((_WORD *)this + 96) & 0x800) != 0)
  {
LABEL_31:
    uint64_t v17 = *((void *)this + 21);
    if ((v9 & 0x80) != 0) {
      goto LABEL_32;
    }
LABEL_54:
    double v18 = 0.0;
    if ((*((_WORD *)this + 96) & 0x100) != 0) {
      goto LABEL_35;
    }
LABEL_55:
    double v19 = 0.0;
    if ((*((_WORD *)this + 96) & 0x200) != 0) {
      goto LABEL_38;
    }
    goto LABEL_56;
  }
LABEL_53:
  uint64_t v17 = 0;
  if ((v9 & 0x80) == 0) {
    goto LABEL_54;
  }
LABEL_32:
  double v18 = *((double *)this + 17);
  if (v18 == 0.0) {
    double v18 = 0.0;
  }
  if ((*((_WORD *)this + 96) & 0x100) == 0) {
    goto LABEL_55;
  }
LABEL_35:
  double v19 = *((double *)this + 18);
  if (v19 == 0.0) {
    double v19 = 0.0;
  }
  if ((*((_WORD *)this + 96) & 0x200) != 0)
  {
LABEL_38:
    double v20 = *((double *)this + 19);
    if (v20 == 0.0) {
      double v20 = 0.0;
    }
    if ((*((_WORD *)this + 96) & 0x400) != 0) {
      goto LABEL_41;
    }
LABEL_57:
    double v21 = 0.0;
    return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ *(void *)&v10 ^ v11 ^ *(void *)&v12 ^ *(void *)&v13 ^ *(void *)&v14 ^ *(void *)&v15 ^ *(void *)&v16 ^ v17 ^ *(void *)&v18 ^ *(void *)&v19 ^ *(void *)&v20 ^ *(void *)&v21;
  }
LABEL_56:
  double v20 = 0.0;
  if ((*((_WORD *)this + 96) & 0x400) == 0) {
    goto LABEL_57;
  }
LABEL_41:
  double v21 = *((double *)this + 20);
  if (v21 == 0.0) {
    double v21 = 0.0;
  }
  return v4 ^ v3 ^ v5 ^ v6 ^ v7 ^ v8 ^ *(void *)&v10 ^ v11 ^ *(void *)&v12 ^ *(void *)&v13 ^ *(void *)&v14 ^ *(void *)&v15 ^ *(void *)&v16 ^ v17 ^ *(void *)&v18 ^ *(void *)&v19 ^ *(void *)&v20 ^ *(void *)&v21;
}

void CMMsl::LegacyALS5CHInput::~LegacyALS5CHInput(CMMsl::LegacyALS5CHInput *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::LegacyALS5CHInput::LegacyALS5CHInput(CMMsl::LegacyALS5CHInput *this, const CMMsl::LegacyALS5CHInput *a2)
{
  *(void *)this = &unk_270642FA0;
  *((_DWORD *)this + 10) = 0;
  char v2 = *((unsigned char *)a2 + 40);
  if (v2)
  {
    uint64_t v4 = *((void *)a2 + 1);
    char v3 = 1;
    *((unsigned char *)this + 40) = 1;
    *((void *)this + 1) = v4;
    char v2 = *((unsigned char *)a2 + 40);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 40) & 2) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 4);
    v3 |= 2u;
    *((unsigned char *)this + 40) = v3;
    *((_DWORD *)this + 4) = v5;
    char v2 = *((unsigned char *)a2 + 40);
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v6 = *((_DWORD *)a2 + 5);
    v3 |= 4u;
    *((unsigned char *)this + 40) = v3;
    *((_DWORD *)this + 5) = v6;
    char v2 = *((unsigned char *)a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 6);
  v3 |= 8u;
  *((unsigned char *)this + 40) = v3;
  *((_DWORD *)this + 6) = v7;
  char v2 = *((unsigned char *)a2 + 40);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v8 = *((_DWORD *)a2 + 7);
  v3 |= 0x10u;
  *((unsigned char *)this + 40) = v3;
  *((_DWORD *)this + 7) = v8;
  char v2 = *((unsigned char *)a2 + 40);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 0x40) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v9 = *((_DWORD *)a2 + 8);
  v3 |= 0x20u;
  *((unsigned char *)this + 40) = v3;
  *((_DWORD *)this + 8) = v9;
  if ((*((unsigned char *)a2 + 40) & 0x40) == 0) {
    return *(float *)&v4;
  }
LABEL_16:
  LODWORD(v4) = *((_DWORD *)a2 + 9);
  *((unsigned char *)this + 40) = v3 | 0x40;
  *((_DWORD *)this + 9) = v4;
  return *(float *)&v4;
}

uint64_t CMMsl::LegacyALS5CHInput::operator=(uint64_t a1, const CMMsl::LegacyALS5CHInput *a2)
{
  if ((const CMMsl::LegacyALS5CHInput *)a1 != a2)
  {
    CMMsl::LegacyALS5CHInput::LegacyALS5CHInput((CMMsl::LegacyALS5CHInput *)&v8, a2);
    int v3 = *(_DWORD *)(a1 + 40);
    *(_DWORD *)(a1 + 40) = v13;
    int v13 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v9;
    uint64_t v9 = v4;
    long long v5 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(a1 + 16) = v10;
    long long v10 = v5;
    int v6 = *(_DWORD *)(a1 + 32);
    *(_DWORD *)(a1 + 32) = v11;
    int v11 = v6;
    LODWORD(v4) = *(_DWORD *)(a1 + 36);
    *(_DWORD *)(a1 + 36) = v12;
    int v12 = v4;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::LegacyALS5CHInput *a2, CMMsl::LegacyALS5CHInput *a3)
{
  int v3 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v3;
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  int v5 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v5;
  int v6 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v6;
  int v7 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v7;
  int v8 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v8;
  int v9 = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v9;
  float result = *((float *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((float *)a2 + 9) = result;
  return result;
}

float CMMsl::LegacyALS5CHInput::LegacyALS5CHInput(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642FA0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  float result = *(float *)(a2 + 36);
  *(float *)(a1 + 36) = result;
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642FA0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  float result = *(float *)(a2 + 36);
  *(float *)(a1 + 36) = result;
  return result;
}

uint64_t CMMsl::LegacyALS5CHInput::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v12[0] = &unk_270642FA0;
    int v3 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a2 + 40) = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    int v5 = *(_DWORD *)(a2 + 32);
    int v6 = *(_DWORD *)(a2 + 36);
    int v16 = *(_DWORD *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v4;
    v12[1] = v7;
    long long v8 = *(_OWORD *)(a1 + 16);
    long long v9 = *(_OWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) = v3;
    *(_OWORD *)(a1 + 16) = v9;
    long long v13 = v8;
    int v10 = *(_DWORD *)(a1 + 32);
    *(_DWORD *)(a1 + 32) = v5;
    int v14 = v10;
    LODWORD(v8) = *(_DWORD *)(a1 + 36);
    *(_DWORD *)(a1 + 36) = v6;
    int v15 = v8;
    PB::Base::~Base((PB::Base *)v12);
  }
  return a1;
}

uint64_t CMMsl::LegacyALS5CHInput::formatText(CMMsl::LegacyALS5CHInput *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "ch0");
    char v5 = *((unsigned char *)this + 40);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*((unsigned char *)this + 40) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "ch1");
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 8) == 0)
  {
LABEL_4:
    if ((v5 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(a2, "ch2");
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_5:
    if ((v5 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(a2, "ch3");
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 0x20) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(a2, "ch4");
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(a2, "lux", *((float *)this + 9));
  if (*((unsigned char *)this + 40)) {
LABEL_8:
  }
    PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
LABEL_9:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::LegacyALS5CHInput::readFrom(CMMsl::LegacyALS5CHInput *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_26;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_21;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_26:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 40) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_68;
        }
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
        unint64_t v2 = *((void *)a2 + 1) + 8;
        goto LABEL_105;
      case 2u:
        *((unsigned char *)this + 40) |= 2u;
        unint64_t v21 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v22 = *(void *)a2;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_110;
            }
            unint64_t v53 = v21++;
            char v54 = *(unsigned char *)(v22 + v53);
            *((void *)a2 + 1) = v21;
            v25 |= (unint64_t)(v54 & 0x7F) << v51;
            if ((v54 & 0x80) == 0) {
              break;
            }
            v51 += 7;
            BOOL v14 = v52++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
LABEL_109:
              unint64_t v2 = v53 + 1;
              goto LABEL_110;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v25) = 0;
          }
          goto LABEL_109;
        }
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        do
        {
          unint64_t v2 = v21 + 1;
          *((void *)a2 + 1) = v21 + 1;
          char v26 = *(unsigned char *)(v22 + v21);
          v25 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            goto LABEL_110;
          }
          v23 += 7;
          unint64_t v21 = v2;
          BOOL v14 = v24++ > 8;
        }
        while (!v14);
        LODWORD(v25) = 0;
LABEL_110:
        *((_DWORD *)this + 4) = v25;
        break;
      case 3u:
        *((unsigned char *)this + 40) |= 4u;
        unint64_t v27 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v28 = *(void *)a2;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v55 = 0;
          unsigned int v56 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_115;
            }
            unint64_t v57 = v27++;
            char v58 = *(unsigned char *)(v28 + v57);
            *((void *)a2 + 1) = v27;
            v31 |= (unint64_t)(v58 & 0x7F) << v55;
            if ((v58 & 0x80) == 0) {
              break;
            }
            v55 += 7;
            BOOL v14 = v56++ > 8;
            if (v14)
            {
              LODWORD(v31) = 0;
LABEL_114:
              unint64_t v2 = v57 + 1;
              goto LABEL_115;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v31) = 0;
          }
          goto LABEL_114;
        }
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        do
        {
          unint64_t v2 = v27 + 1;
          *((void *)a2 + 1) = v27 + 1;
          char v32 = *(unsigned char *)(v28 + v27);
          v31 |= (unint64_t)(v32 & 0x7F) << v29;
          if ((v32 & 0x80) == 0) {
            goto LABEL_115;
          }
          v29 += 7;
          unint64_t v27 = v2;
          BOOL v14 = v30++ > 8;
        }
        while (!v14);
        LODWORD(v31) = 0;
LABEL_115:
        *((_DWORD *)this + 5) = v31;
        break;
      case 4u:
        *((unsigned char *)this + 40) |= 8u;
        unint64_t v33 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v34 = *(void *)a2;
        if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
        {
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v37 = 0;
          if (v2 <= v33) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v33)
            {
              LODWORD(v37) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_120;
            }
            unint64_t v61 = v33++;
            char v62 = *(unsigned char *)(v34 + v61);
            *((void *)a2 + 1) = v33;
            v37 |= (unint64_t)(v62 & 0x7F) << v59;
            if ((v62 & 0x80) == 0) {
              break;
            }
            v59 += 7;
            BOOL v14 = v60++ > 8;
            if (v14)
            {
              LODWORD(v37) = 0;
LABEL_119:
              unint64_t v2 = v61 + 1;
              goto LABEL_120;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v37) = 0;
          }
          goto LABEL_119;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        do
        {
          unint64_t v2 = v33 + 1;
          *((void *)a2 + 1) = v33 + 1;
          char v38 = *(unsigned char *)(v34 + v33);
          v37 |= (unint64_t)(v38 & 0x7F) << v35;
          if ((v38 & 0x80) == 0) {
            goto LABEL_120;
          }
          v35 += 7;
          unint64_t v33 = v2;
          BOOL v14 = v36++ > 8;
        }
        while (!v14);
        LODWORD(v37) = 0;
LABEL_120:
        *((_DWORD *)this + 6) = v37;
        break;
      case 5u:
        *((unsigned char *)this + 40) |= 0x10u;
        unint64_t v39 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v40 = *(void *)a2;
        if (v39 > 0xFFFFFFFFFFFFFFF5 || v39 + 10 > v2)
        {
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v43 = 0;
          if (v2 <= v39) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v39)
            {
              LODWORD(v43) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_125;
            }
            unint64_t v65 = v39++;
            char v66 = *(unsigned char *)(v40 + v65);
            *((void *)a2 + 1) = v39;
            v43 |= (unint64_t)(v66 & 0x7F) << v63;
            if ((v66 & 0x80) == 0) {
              break;
            }
            v63 += 7;
            BOOL v14 = v64++ > 8;
            if (v14)
            {
              LODWORD(v43) = 0;
LABEL_124:
              unint64_t v2 = v65 + 1;
              goto LABEL_125;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v43) = 0;
          }
          goto LABEL_124;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        do
        {
          unint64_t v2 = v39 + 1;
          *((void *)a2 + 1) = v39 + 1;
          char v44 = *(unsigned char *)(v40 + v39);
          v43 |= (unint64_t)(v44 & 0x7F) << v41;
          if ((v44 & 0x80) == 0) {
            goto LABEL_125;
          }
          v41 += 7;
          unint64_t v39 = v2;
          BOOL v14 = v42++ > 8;
        }
        while (!v14);
        LODWORD(v43) = 0;
LABEL_125:
        *((_DWORD *)this + 7) = v43;
        break;
      case 6u:
        *((unsigned char *)this + 40) |= 0x20u;
        unint64_t v45 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v46 = *(void *)a2;
        if (v45 > 0xFFFFFFFFFFFFFFF5 || v45 + 10 > v2)
        {
          char v67 = 0;
          unsigned int v68 = 0;
          uint64_t v49 = 0;
          if (v2 <= v45) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v45)
            {
              LODWORD(v49) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_130;
            }
            unint64_t v69 = v45++;
            char v70 = *(unsigned char *)(v46 + v69);
            *((void *)a2 + 1) = v45;
            v49 |= (unint64_t)(v70 & 0x7F) << v67;
            if ((v70 & 0x80) == 0) {
              break;
            }
            v67 += 7;
            BOOL v14 = v68++ > 8;
            if (v14)
            {
              LODWORD(v49) = 0;
LABEL_129:
              unint64_t v2 = v69 + 1;
              goto LABEL_130;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v49) = 0;
          }
          goto LABEL_129;
        }
        char v47 = 0;
        unsigned int v48 = 0;
        uint64_t v49 = 0;
        do
        {
          unint64_t v2 = v45 + 1;
          *((void *)a2 + 1) = v45 + 1;
          char v50 = *(unsigned char *)(v46 + v45);
          v49 |= (unint64_t)(v50 & 0x7F) << v47;
          if ((v50 & 0x80) == 0) {
            goto LABEL_130;
          }
          v47 += 7;
          unint64_t v45 = v2;
          BOOL v14 = v48++ > 8;
        }
        while (!v14);
        LODWORD(v49) = 0;
LABEL_130:
        *((_DWORD *)this + 8) = v49;
        break;
      case 7u:
        *((unsigned char *)this + 40) |= 0x40u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 9) = *(_DWORD *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 4;
LABEL_105:
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_68:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      default:
        goto LABEL_19;
    }
LABEL_21:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::LegacyALS5CHInput::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 40);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(this + 40) & 2) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    this = PB::Writer::writeVarInt(a2);
    if ((*(unsigned char *)(v3 + 40) & 0x40) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x40) == 0) {
    return this;
  }
LABEL_15:
  float v5 = *(float *)(v3 + 36);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::LegacyALS5CHInput::hash_value(CMMsl::LegacyALS5CHInput *this)
{
  if (*((unsigned char *)this + 40))
  {
    double v1 = *((double *)this + 1);
    if (v1 == 0.0) {
      double v1 = 0.0;
    }
    if ((*((unsigned char *)this + 40) & 2) != 0)
    {
LABEL_3:
      uint64_t v2 = *((int *)this + 4);
      if ((*((unsigned char *)this + 40) & 4) != 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else
  {
    double v1 = 0.0;
    if ((*((unsigned char *)this + 40) & 2) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  if ((*((unsigned char *)this + 40) & 4) != 0)
  {
LABEL_4:
    uint64_t v3 = *((int *)this + 5);
    if ((*((unsigned char *)this + 40) & 8) != 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 40) & 8) != 0)
  {
LABEL_5:
    uint64_t v4 = *((int *)this + 6);
    if ((*((unsigned char *)this + 40) & 0x10) != 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v4 = 0;
  if ((*((unsigned char *)this + 40) & 0x10) != 0)
  {
LABEL_6:
    uint64_t v5 = *((int *)this + 7);
    if ((*((unsigned char *)this + 40) & 0x20) != 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v5 = 0;
  if ((*((unsigned char *)this + 40) & 0x20) != 0)
  {
LABEL_7:
    uint64_t v6 = *((int *)this + 8);
    if ((*((unsigned char *)this + 40) & 0x40) != 0) {
      goto LABEL_8;
    }
LABEL_19:
    uint64_t v8 = 0;
    return v2 ^ *(void *)&v1 ^ v3 ^ v4 ^ v5 ^ v6 ^ v8;
  }
LABEL_18:
  uint64_t v6 = 0;
  if ((*((unsigned char *)this + 40) & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_8:
  float v7 = *((float *)this + 9);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  return v2 ^ *(void *)&v1 ^ v3 ^ v4 ^ v5 ^ v6 ^ v8;
}

void CMMsl::LiftToWakeFeaturesNeo::~LiftToWakeFeaturesNeo(CMMsl::LiftToWakeFeaturesNeo *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::LiftToWakeFeaturesNeo::LiftToWakeFeaturesNeo(CMMsl::LiftToWakeFeaturesNeo *this, const CMMsl::LiftToWakeFeaturesNeo *a2)
{
  *(void *)this = &unk_270642FD8;
  *((_DWORD *)this + 10) = 0;
  char v2 = *((unsigned char *)a2 + 40);
  if (v2)
  {
    uint64_t v4 = *((void *)a2 + 1);
    char v3 = 1;
    *((unsigned char *)this + 40) = 1;
    *((void *)this + 1) = v4;
    char v2 = *((unsigned char *)a2 + 40);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 40) & 8) != 0)
  {
LABEL_5:
    LODWORD(v4) = *((_DWORD *)a2 + 8);
    v3 |= 8u;
    *((unsigned char *)this + 40) = v3;
    *((_DWORD *)this + 8) = v4;
    char v2 = *((unsigned char *)a2 + 40);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *((void *)a2 + 2);
    v3 |= 2u;
    *((unsigned char *)this + 40) = v3;
    *((void *)this + 2) = v4;
    char v2 = *((unsigned char *)a2 + 40);
    if ((v2 & 4) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        return *(float *)&v4;
      }
      goto LABEL_12;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v4 = *((void *)a2 + 3);
  v3 |= 4u;
  *((unsigned char *)this + 40) = v3;
  *((void *)this + 3) = v4;
  if ((*((unsigned char *)a2 + 40) & 0x10) == 0) {
    return *(float *)&v4;
  }
LABEL_12:
  LODWORD(v4) = *((_DWORD *)a2 + 9);
  *((unsigned char *)this + 40) = v3 | 0x10;
  *((_DWORD *)this + 9) = v4;
  return *(float *)&v4;
}

uint64_t CMMsl::LiftToWakeFeaturesNeo::operator=(uint64_t a1, const CMMsl::LiftToWakeFeaturesNeo *a2)
{
  if ((const CMMsl::LiftToWakeFeaturesNeo *)a1 != a2)
  {
    CMMsl::LiftToWakeFeaturesNeo::LiftToWakeFeaturesNeo((CMMsl::LiftToWakeFeaturesNeo *)&v8, a2);
    long long v3 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v9;
    long long v9 = v3;
    *(void *)&long long v3 = v11;
    uint64_t v4 = *(void *)(a1 + 24);
    uint64_t v5 = *(void *)(a1 + 32);
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v3;
    int v6 = *(_DWORD *)(a1 + 40);
    *(_DWORD *)(a1 + 40) = v12;
    int v12 = v6;
    uint64_t v10 = v4;
    uint64_t v11 = v5;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::LiftToWakeFeaturesNeo *a2, CMMsl::LiftToWakeFeaturesNeo *a3)
{
  int v3 = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v3;
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  LODWORD(v4) = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v4;
  uint64_t v5 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v5;
  uint64_t v6 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v6;
  float result = *((float *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((float *)a2 + 9) = result;
  return result;
}

float CMMsl::LiftToWakeFeaturesNeo::LiftToWakeFeaturesNeo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270642FD8;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  float result = *(float *)(a2 + 36);
  *(float *)(a1 + 36) = result;
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270642FD8;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  float result = *(float *)(a2 + 36);
  *(float *)(a1 + 36) = result;
  return result;
}

uint64_t CMMsl::LiftToWakeFeaturesNeo::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    long long v9 = &unk_270642FD8;
    int v3 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a2 + 40) = 0;
    uint64_t v4 = *(void *)(a2 + 24);
    int v13 = *(_DWORD *)(a1 + 40);
    long long v5 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    long long v10 = v5;
    *(void *)&long long v5 = *(void *)(a1 + 24);
    uint64_t v6 = *(void *)(a1 + 32);
    *(void *)(a1 + 24) = v4;
    uint64_t v7 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 40) = v3;
    *(void *)(a1 + 32) = v7;
    uint64_t v11 = v5;
    uint64_t v12 = v6;
    PB::Base::~Base((PB::Base *)&v9);
  }
  return a1;
}

uint64_t CMMsl::LiftToWakeFeaturesNeo::formatText(CMMsl::LiftToWakeFeaturesNeo *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(a2, "gravityBufferDeltaToCurrentMax", *((float *)this + 8));
    char v5 = *((unsigned char *)this + 40);
    if ((v5 & 0x10) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*((unsigned char *)this + 40) & 0x10) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "gravityFilterDeltaToHeadUp", *((float *)this + 9));
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
  char v5 = *((unsigned char *)this + 40);
  if ((v5 & 2) == 0)
  {
LABEL_5:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "timestampGravityBufferFront", *((double *)this + 2));
  if ((*((unsigned char *)this + 40) & 4) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(a2, "timestampTimerRef", *((double *)this + 3));
LABEL_7:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::LiftToWakeFeaturesNeo::readFrom(CMMsl::LiftToWakeFeaturesNeo *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_42;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 40) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
        goto LABEL_35;
      case 2u:
        *((unsigned char *)this + 40) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((_DWORD *)this + 8) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_40;
      case 3u:
        *((unsigned char *)this + 40) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((void *)this + 2) = *(void *)(*(void *)a2 + v2);
        goto LABEL_35;
      case 4u:
        *((unsigned char *)this + 40) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_38;
        }
        *((void *)this + 3) = *(void *)(*(void *)a2 + v2);
LABEL_35:
        unint64_t v2 = *((void *)a2 + 1) + 8;
        goto LABEL_41;
      case 5u:
        *((unsigned char *)this + 40) |= 0x10u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 9) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_40:
          unint64_t v2 = *((void *)a2 + 1) + 4;
LABEL_41:
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_38:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      default:
        goto LABEL_19;
    }
LABEL_42:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::LiftToWakeFeaturesNeo::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 40);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 40) & 8) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = PB::Writer::write(a2, *(double *)(v3 + 24));
    if ((*(unsigned char *)(v3 + 40) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = PB::Writer::write(a2, *(double *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  float v5 = *(float *)(v3 + 36);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::LiftToWakeFeaturesNeo::hash_value(CMMsl::LiftToWakeFeaturesNeo *this)
{
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    double v1 = 0.0;
    if ((*((unsigned char *)this + 40) & 8) != 0) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) != 0) {
      goto LABEL_6;
    }
LABEL_19:
    double v4 = 0.0;
    if ((*((unsigned char *)this + 40) & 4) != 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
  double v1 = *((double *)this + 1);
  if (v1 == 0.0) {
    double v1 = 0.0;
  }
  if ((*((unsigned char *)this + 40) & 8) == 0) {
    goto LABEL_18;
  }
LABEL_3:
  float v2 = *((float *)this + 8);
  uint64_t v3 = LODWORD(v2);
  if (v2 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((unsigned char *)this + 40) & 2) == 0) {
    goto LABEL_19;
  }
LABEL_6:
  double v4 = *((double *)this + 2);
  if (v4 == 0.0) {
    double v4 = 0.0;
  }
  if ((*((unsigned char *)this + 40) & 4) != 0)
  {
LABEL_9:
    double v5 = *((double *)this + 3);
    if (v5 == 0.0) {
      double v5 = 0.0;
    }
    if ((*((unsigned char *)this + 40) & 0x10) != 0) {
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v7 = 0;
    return v3 ^ *(void *)&v1 ^ *(void *)&v4 ^ *(void *)&v5 ^ v7;
  }
LABEL_20:
  double v5 = 0.0;
  if ((*((unsigned char *)this + 40) & 0x10) == 0) {
    goto LABEL_21;
  }
LABEL_12:
  float v6 = *((float *)this + 9);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  return v3 ^ *(void *)&v1 ^ *(void *)&v4 ^ *(void *)&v5 ^ v7;
}

void CMMsl::LiftToWakeOnHeadStatus::~LiftToWakeOnHeadStatus(CMMsl::LiftToWakeOnHeadStatus *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

double CMMsl::LiftToWakeOnHeadStatus::LiftToWakeOnHeadStatus(CMMsl::LiftToWakeOnHeadStatus *this, const CMMsl::LiftToWakeOnHeadStatus *a2)
{
  *(void *)this = &unk_270643010;
  *((_DWORD *)this + 7) = 0;
  char v2 = *((unsigned char *)a2 + 28);
  if (v2)
  {
    double result = *((double *)a2 + 1);
    char v3 = 1;
    *((unsigned char *)this + 28) = 1;
    *((double *)this + 1) = result;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 28) & 4) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 6);
    v3 |= 4u;
    *((unsigned char *)this + 28) = v3;
    *((_DWORD *)this + 6) = v5;
    char v2 = *((unsigned char *)a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *((double *)a2 + 2);
    *((unsigned char *)this + 28) = v3 | 2;
    *((double *)this + 2) = result;
  }
  return result;
}

uint64_t CMMsl::LiftToWakeOnHeadStatus::operator=(uint64_t a1, const CMMsl::LiftToWakeOnHeadStatus *a2)
{
  if ((const CMMsl::LiftToWakeOnHeadStatus *)a1 != a2)
  {
    CMMsl::LiftToWakeOnHeadStatus::LiftToWakeOnHeadStatus((CMMsl::LiftToWakeOnHeadStatus *)&v6, a2);
    uint64_t v3 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v8;
    uint64_t v8 = v3;
    long long v4 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v7;
    long long v7 = v4;
    PB::Base::~Base((PB::Base *)&v6);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::LiftToWakeOnHeadStatus *a2, CMMsl::LiftToWakeOnHeadStatus *a3)
{
  int v3 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v3;
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  int v5 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v5;
  double result = *((double *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((double *)a2 + 2) = result;
  return result;
}

double CMMsl::LiftToWakeOnHeadStatus::LiftToWakeOnHeadStatus(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270643010;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  double result = *(double *)(a2 + 16);
  *(double *)(a1 + 16) = result;
  return result;
}

{
  double result;

  *(void *)a1 = &unk_270643010;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  double result = *(double *)(a2 + 16);
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t CMMsl::LiftToWakeOnHeadStatus::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    long long v7 = &unk_270643010;
    uint64_t v3 = *(void *)(a2 + 24);
    *(_DWORD *)(a2 + 28) = 0;
    uint64_t v9 = *(void *)(a1 + 24);
    long long v4 = *(_OWORD *)(a1 + 8);
    long long v5 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = v3;
    *(_OWORD *)(a1 + 8) = v5;
    long long v8 = v4;
    PB::Base::~Base((PB::Base *)&v7);
  }
  return a1;
}

uint64_t CMMsl::LiftToWakeOnHeadStatus::formatText(CMMsl::LiftToWakeOnHeadStatus *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(a2, "status");
    char v5 = *((unsigned char *)this + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
  if ((*((unsigned char *)this + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(a2, "timestampArrival", *((double *)this + 2));
LABEL_5:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::LiftToWakeOnHeadStatus::readFrom(CMMsl::LiftToWakeOnHeadStatus *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  for (int i = *((unsigned __int8 *)a2 + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)a2 + 24))
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
        if (v14) {
          goto LABEL_27;
        }
      }
      int i = 1;
      *((unsigned char *)a2 + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_27;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v19 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *((unsigned char *)this + 28) |= 2u;
      unint64_t v2 = *((void *)a2 + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
      {
        *((void *)this + 2) = *(void *)(*(void *)a2 + v2);
        goto LABEL_47;
      }
    }
    else
    {
      if (v19 == 2)
      {
        *((unsigned char *)this + 28) |= 4u;
        unint64_t v21 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v22 = *(void *)a2;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_52;
            }
            unint64_t v29 = v21++;
            char v30 = *(unsigned char *)(v22 + v29);
            *((void *)a2 + 1) = v21;
            v25 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_51;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_51:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)a2 + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_52:
        *((_DWORD *)this + 6) = v25;
        goto LABEL_53;
      }
      if (v19 != 1)
      {
LABEL_27:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
        goto LABEL_53;
      }
      *((unsigned char *)this + 28) |= 1u;
      unint64_t v2 = *((void *)a2 + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
      {
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
LABEL_47:
        unint64_t v2 = *((void *)a2 + 1) + 8;
        *((void *)a2 + 1) = v2;
        goto LABEL_53;
      }
    }
    *((unsigned char *)a2 + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)a2 + 2);
  }
  return i == 0;
}

uint64_t CMMsl::LiftToWakeOnHeadStatus::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 28);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(this + 28) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = PB::Writer::writeVarInt(a2);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = PB::Writer::write(a2, *(double *)(this + 8));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return this;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::LiftToWakeOnHeadStatus::hash_value(CMMsl::LiftToWakeOnHeadStatus *this)
{
  if (*((unsigned char *)this + 28))
  {
    double v1 = *((double *)this + 1);
    if (v1 == 0.0) {
      double v1 = 0.0;
    }
    if ((*((unsigned char *)this + 28) & 4) != 0)
    {
LABEL_3:
      uint64_t v2 = *((unsigned int *)this + 6);
      if ((*((unsigned char *)this + 28) & 2) != 0) {
        goto LABEL_4;
      }
LABEL_11:
      double v3 = 0.0;
      return v2 ^ *(void *)&v1 ^ *(void *)&v3;
    }
  }
  else
  {
    double v1 = 0.0;
    if ((*((unsigned char *)this + 28) & 4) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  if ((*((unsigned char *)this + 28) & 2) == 0) {
    goto LABEL_11;
  }
LABEL_4:
  double v3 = *((double *)this + 2);
  if (v3 == 0.0) {
    double v3 = 0.0;
  }
  return v2 ^ *(void *)&v1 ^ *(void *)&v3;
}

void CMMsl::LiftToWakeState::~LiftToWakeState(CMMsl::LiftToWakeState *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

double CMMsl::LiftToWakeState::LiftToWakeState(CMMsl::LiftToWakeState *this, const CMMsl::LiftToWakeState *a2)
{
  *(void *)this = &unk_270643048;
  *((_DWORD *)this + 7) = 0;
  char v2 = *((unsigned char *)a2 + 28);
  if (v2)
  {
    double result = *((double *)a2 + 1);
    char v3 = 1;
    *((unsigned char *)this + 28) = 1;
    *((double *)this + 1) = result;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 28) & 4) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 6);
    v3 |= 4u;
    *((unsigned char *)this + 28) = v3;
    *((_DWORD *)this + 6) = v5;
    char v2 = *((unsigned char *)a2 + 28);
  }
LABEL_6:
  if ((v2 & 2) != 0)
  {
    double result = *((double *)a2 + 2);
    *((unsigned char *)this + 28) = v3 | 2;
    *((double *)this + 2) = result;
  }
  return result;
}

uint64_t CMMsl::LiftToWakeState::operator=(uint64_t a1, const CMMsl::LiftToWakeState *a2)
{
  if ((const CMMsl::LiftToWakeState *)a1 != a2)
  {
    CMMsl::LiftToWakeState::LiftToWakeState((CMMsl::LiftToWakeState *)&v6, a2);
    uint64_t v3 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v8;
    uint64_t v8 = v3;
    long long v4 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v7;
    long long v7 = v4;
    PB::Base::~Base((PB::Base *)&v6);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::LiftToWakeState *a2, CMMsl::LiftToWakeState *a3)
{
  int v3 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v3;
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  int v5 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v5;
  double result = *((double *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((double *)a2 + 2) = result;
  return result;
}

double CMMsl::LiftToWakeState::LiftToWakeState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270643048;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  double result = *(double *)(a2 + 16);
  *(double *)(a1 + 16) = result;
  return result;
}

{
  double result;

  *(void *)a1 = &unk_270643048;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  double result = *(double *)(a2 + 16);
  *(double *)(a1 + 16) = result;
  return result;
}

uint64_t CMMsl::LiftToWakeState::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    long long v7 = &unk_270643048;
    uint64_t v3 = *(void *)(a2 + 24);
    *(_DWORD *)(a2 + 28) = 0;
    uint64_t v9 = *(void *)(a1 + 24);
    long long v4 = *(_OWORD *)(a1 + 8);
    long long v5 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = v3;
    *(_OWORD *)(a1 + 8) = v5;
    long long v8 = v4;
    PB::Base::~Base((PB::Base *)&v7);
  }
  return a1;
}

uint64_t CMMsl::LiftToWakeState::formatText(CMMsl::LiftToWakeState *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(a2, "state");
    char v5 = *((unsigned char *)this + 28);
    if ((v5 & 1) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
  if ((*((unsigned char *)this + 28) & 2) != 0) {
LABEL_4:
  }
    PB::TextFormatter::format(a2, "timestampGestureBegin", *((double *)this + 2));
LABEL_5:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::LiftToWakeState::readFrom(CMMsl::LiftToWakeState *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  for (int i = *((unsigned __int8 *)a2 + 24); v2 < v3 && i == 0; int i = *((unsigned __int8 *)a2 + 24))
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      while (v3 != v2)
      {
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_20;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
        if (v14) {
          goto LABEL_27;
        }
      }
      int i = 1;
      *((unsigned char *)a2 + 24) = 1;
      return i == 0;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_27;
      }
    }
LABEL_20:
    if ((v11 & 7) == 4)
    {
      int i = 0;
      return i == 0;
    }
    unint64_t v19 = v11 >> 3;
    if ((v11 >> 3) == 3)
    {
      *((unsigned char *)this + 28) |= 2u;
      unint64_t v2 = *((void *)a2 + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
      {
        *((void *)this + 2) = *(void *)(*(void *)a2 + v2);
        goto LABEL_47;
      }
    }
    else
    {
      if (v19 == 2)
      {
        *((unsigned char *)this + 28) |= 4u;
        unint64_t v21 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v22 = *(void *)a2;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              LODWORD(v25) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_52;
            }
            unint64_t v29 = v21++;
            char v30 = *(unsigned char *)(v22 + v29);
            *((void *)a2 + 1) = v21;
            v25 |= (unint64_t)(v30 & 0x7F) << v27;
            if ((v30 & 0x80) == 0) {
              break;
            }
            v27 += 7;
            BOOL v14 = v28++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              goto LABEL_51;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v25) = 0;
          }
LABEL_51:
          unint64_t v2 = v29 + 1;
        }
        else
        {
          char v23 = 0;
          unsigned int v24 = 0;
          uint64_t v25 = 0;
          while (1)
          {
            unint64_t v2 = v21 + 1;
            *((void *)a2 + 1) = v21 + 1;
            char v26 = *(unsigned char *)(v22 + v21);
            v25 |= (unint64_t)(v26 & 0x7F) << v23;
            if ((v26 & 0x80) == 0) {
              break;
            }
            v23 += 7;
            unint64_t v21 = v2;
            BOOL v14 = v24++ > 8;
            if (v14)
            {
              LODWORD(v25) = 0;
              break;
            }
          }
        }
LABEL_52:
        *((_DWORD *)this + 6) = v25;
        goto LABEL_53;
      }
      if (v19 != 1)
      {
LABEL_27:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
        goto LABEL_53;
      }
      *((unsigned char *)this + 28) |= 1u;
      unint64_t v2 = *((void *)a2 + 1);
      if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
      {
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
LABEL_47:
        unint64_t v2 = *((void *)a2 + 1) + 8;
        *((void *)a2 + 1) = v2;
        goto LABEL_53;
      }
    }
    *((unsigned char *)a2 + 24) = 1;
LABEL_53:
    unint64_t v3 = *((void *)a2 + 2);
  }
  return i == 0;
}

uint64_t CMMsl::LiftToWakeState::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 28);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(this + 28) & 4) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = PB::Writer::writeVarInt(a2);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = PB::Writer::write(a2, *(double *)(this + 8));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 4) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v4 & 2) == 0) {
    return this;
  }
LABEL_7:
  double v5 = *(double *)(v3 + 16);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::LiftToWakeState::hash_value(CMMsl::LiftToWakeState *this)
{
  if (*((unsigned char *)this + 28))
  {
    double v1 = *((double *)this + 1);
    if (v1 == 0.0) {
      double v1 = 0.0;
    }
    if ((*((unsigned char *)this + 28) & 4) != 0)
    {
LABEL_3:
      uint64_t v2 = *((unsigned int *)this + 6);
      if ((*((unsigned char *)this + 28) & 2) != 0) {
        goto LABEL_4;
      }
LABEL_11:
      double v3 = 0.0;
      return v2 ^ *(void *)&v1 ^ *(void *)&v3;
    }
  }
  else
  {
    double v1 = 0.0;
    if ((*((unsigned char *)this + 28) & 4) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  if ((*((unsigned char *)this + 28) & 2) == 0) {
    goto LABEL_11;
  }
LABEL_4:
  double v3 = *((double *)this + 2);
  if (v3 == 0.0) {
    double v3 = 0.0;
  }
  return v2 ^ *(void *)&v1 ^ *(void *)&v3;
}

void CMMsl::LiftToWakeStatusNeo::~LiftToWakeStatusNeo(CMMsl::LiftToWakeStatusNeo *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::LiftToWakeStatusNeo::LiftToWakeStatusNeo(uint64_t this, const CMMsl::LiftToWakeStatusNeo *a2)
{
  *(void *)this = &unk_270643080;
  *(_DWORD *)(this + 64) = 0;
  __int16 v2 = *((_WORD *)a2 + 32);
  if (v2)
  {
    uint64_t v4 = *((void *)a2 + 1);
    __int16 v3 = 1;
    *(_WORD *)(this + 64) = 1;
    *(void *)(this + 8) = v4;
    __int16 v2 = *((_WORD *)a2 + 32);
    if ((v2 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*((_WORD *)a2 + 32) & 0x800) != 0)
  {
LABEL_5:
    char v5 = *((unsigned char *)a2 + 60);
    v3 |= 0x800u;
    *(_WORD *)(this + 64) = v3;
    *(unsigned char *)(this + 60) = v5;
    __int16 v2 = *((_WORD *)a2 + 32);
  }
LABEL_6:
  if ((v2 & 0x400) != 0)
  {
    int v6 = *((_DWORD *)a2 + 14);
    v3 |= 0x400u;
    *(_WORD *)(this + 64) = v3;
    *(_DWORD *)(this + 56) = v6;
    __int16 v2 = *((_WORD *)a2 + 32);
    if ((v2 & 2) == 0)
    {
LABEL_8:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *((void *)a2 + 2);
  v3 |= 2u;
  *(_WORD *)(this + 64) = v3;
  *(void *)(this + 16) = v7;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x1000) == 0)
  {
LABEL_9:
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v8 = *((unsigned char *)a2 + 61);
  v3 |= 0x1000u;
  *(_WORD *)(this + 64) = v3;
  *(unsigned char *)(this + 61) = v8;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x40) == 0)
  {
LABEL_10:
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *((_DWORD *)a2 + 10);
  v3 |= 0x40u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 40) = v9;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x80) == 0)
  {
LABEL_11:
    if ((v2 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *((_DWORD *)a2 + 11);
  v3 |= 0x80u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 44) = v10;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x100) == 0)
  {
LABEL_12:
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *((_DWORD *)a2 + 12);
  v3 |= 0x100u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 48) = v11;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v12 = *((_DWORD *)a2 + 7);
  v3 |= 8u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 28) = v12;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v13 = *((_DWORD *)a2 + 8);
  v3 |= 0x10u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 32) = v13;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v14 = *((_DWORD *)a2 + 9);
  v3 |= 0x20u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 36) = v14;
  __int16 v2 = *((_WORD *)a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_16:
    if ((v2 & 0x200) == 0) {
      return this;
    }
LABEL_28:
    int v16 = *((_DWORD *)a2 + 13);
    *(_WORD *)(this + 64) = v3 | 0x200;
    *(_DWORD *)(this + 52) = v16;
    return this;
  }
LABEL_27:
  int v15 = *((_DWORD *)a2 + 6);
  v3 |= 4u;
  *(_WORD *)(this + 64) = v3;
  *(_DWORD *)(this + 24) = v15;
  if ((*((_WORD *)a2 + 32) & 0x200) != 0) {
    goto LABEL_28;
  }
  return this;
}

CMMsl *CMMsl::LiftToWakeStatusNeo::operator=(CMMsl *a1, const CMMsl::LiftToWakeStatusNeo *a2)
{
  if (a1 != a2)
  {
    CMMsl::LiftToWakeStatusNeo::LiftToWakeStatusNeo((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::LiftToWakeStatusNeo *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::LiftToWakeStatusNeo *a2, CMMsl::LiftToWakeStatusNeo *a3)
{
  int v3 = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v3;
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  LOBYTE(v3) = *((unsigned char *)this + 60);
  *((unsigned char *)this + 60) = *((unsigned char *)a2 + 60);
  *((unsigned char *)a2 + 60) = v3;
  int v5 = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v5;
  uint64_t v6 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v6;
  LOBYTE(v5) = *((unsigned char *)this + 61);
  *((unsigned char *)this + 61) = *((unsigned char *)a2 + 61);
  *((unsigned char *)a2 + 61) = v5;
  LODWORD(v6) = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v6;
  LODWORD(v6) = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v6;
  LODWORD(v6) = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v6;
  LODWORD(v6) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v6;
  LODWORD(v6) = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v6;
  float result = *((float *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((float *)a2 + 9) = result;
  int v8 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v8;
  int v9 = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v9;
  return result;
}

float CMMsl::LiftToWakeStatusNeo::LiftToWakeStatusNeo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270643080;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a2 + 64) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  float result = *(float *)(a2 + 36);
  *(float *)(a1 + 36) = result;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  return result;
}

CMMsl *CMMsl::LiftToWakeStatusNeo::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::LiftToWakeStatusNeo::LiftToWakeStatusNeo((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::LiftToWakeStatusNeo *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::LiftToWakeStatusNeo::formatText(CMMsl::LiftToWakeStatusNeo *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 4) != 0)
  {
    PB::TextFormatter::format(a2, "classificationType");
    __int16 v5 = *((_WORD *)this + 32);
    if ((v5 & 8) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v5 & 8) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "intervalSleepBeginToSleepDetected", *((float *)this + 7));
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(a2, "intervalSleepDetectedToGazeDetected", *((float *)this + 8));
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(a2, "intervalSleepDetectedToWakeDetected", *((float *)this + 9));
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(a2, "intervalWakeBeginToWakeDetected", *((float *)this + 10));
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(a2, "intervalWakeDetectedToGazeDetected", *((float *)this + 11));
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x800) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(a2, "intervalWakeDetectedToSleepDetected", *((float *)this + 12));
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x800) == 0)
  {
LABEL_9:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(a2, "shouldNotify");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x1000) == 0)
  {
LABEL_10:
    if ((v5 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(a2, "shouldNotifyStats");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x200) == 0)
  {
LABEL_11:
    if ((v5 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(a2, "sleepType");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 0x400) == 0)
  {
LABEL_12:
    if ((v5 & 1) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(a2, "state");
  __int16 v5 = *((_WORD *)this + 32);
  if ((v5 & 1) == 0)
  {
LABEL_13:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
  if ((*((_WORD *)this + 32) & 2) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(a2, "timestampGestureBegin", *((double *)this + 2));
LABEL_15:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::LiftToWakeStatusNeo::readFrom(CMMsl::LiftToWakeStatusNeo *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_116;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((_WORD *)this + 32) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_58;
        }
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
        goto LABEL_38;
      case 2u:
        *((_WORD *)this + 32) |= 0x800u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v21 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v20 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v21 = v20 != 0;
        }
        *((unsigned char *)this + 60) = v21;
        break;
      case 3u:
        *((_WORD *)this + 32) |= 0x400u;
        unint64_t v22 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v23 = *(void *)a2;
        if (v22 > 0xFFFFFFFFFFFFFFF5 || v22 + 10 > v2)
        {
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v26 = 0;
          if (v2 <= v22) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v22)
            {
              LODWORD(v26) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_105;
            }
            unint64_t v44 = v22++;
            char v45 = *(unsigned char *)(v23 + v44);
            *((void *)a2 + 1) = v22;
            v26 |= (unint64_t)(v45 & 0x7F) << v42;
            if ((v45 & 0x80) == 0) {
              break;
            }
            v42 += 7;
            BOOL v14 = v43++ > 8;
            if (v14)
            {
              LODWORD(v26) = 0;
LABEL_104:
              unint64_t v2 = v44 + 1;
              goto LABEL_105;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v26) = 0;
          }
          goto LABEL_104;
        }
        char v24 = 0;
        unsigned int v25 = 0;
        uint64_t v26 = 0;
        do
        {
          unint64_t v2 = v22 + 1;
          *((void *)a2 + 1) = v22 + 1;
          char v27 = *(unsigned char *)(v23 + v22);
          v26 |= (unint64_t)(v27 & 0x7F) << v24;
          if ((v27 & 0x80) == 0) {
            goto LABEL_105;
          }
          v24 += 7;
          unint64_t v22 = v2;
          BOOL v14 = v25++ > 8;
        }
        while (!v14);
        LODWORD(v26) = 0;
LABEL_105:
        *((_DWORD *)this + 14) = v26;
        break;
      case 4u:
        *((_WORD *)this + 32) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_58;
        }
        *((void *)this + 2) = *(void *)(*(void *)a2 + v2);
LABEL_38:
        unint64_t v2 = *((void *)a2 + 1) + 8;
        goto LABEL_100;
      case 5u:
        *((_WORD *)this + 32) |= 0x1000u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v29 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v28 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v29 = v28 != 0;
        }
        *((unsigned char *)this + 61) = v29;
        break;
      case 6u:
        *((_WORD *)this + 32) |= 0x40u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_58;
        }
        *((_DWORD *)this + 10) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_99;
      case 7u:
        *((_WORD *)this + 32) |= 0x80u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_58;
        }
        *((_DWORD *)this + 11) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_99;
      case 8u:
        *((_WORD *)this + 32) |= 0x100u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_58;
        }
        *((_DWORD *)this + 12) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_99;
      case 9u:
        *((_WORD *)this + 32) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_58;
        }
        *((_DWORD *)this + 7) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_99;
      case 0xAu:
        *((_WORD *)this + 32) |= 0x10u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_58;
        }
        *((_DWORD *)this + 8) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_99;
      case 0xBu:
        *((_WORD *)this + 32) |= 0x20u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 9) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_99:
          unint64_t v2 = *((void *)a2 + 1) + 4;
LABEL_100:
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_58:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 0xCu:
        *((_WORD *)this + 32) |= 4u;
        unint64_t v30 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v31 = *(void *)a2;
        if (v30 > 0xFFFFFFFFFFFFFFF5 || v30 + 10 > v2)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v34 = 0;
          if (v2 <= v30) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v30)
            {
              LODWORD(v34) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_110;
            }
            unint64_t v48 = v30++;
            char v49 = *(unsigned char *)(v31 + v48);
            *((void *)a2 + 1) = v30;
            v34 |= (unint64_t)(v49 & 0x7F) << v46;
            if ((v49 & 0x80) == 0) {
              break;
            }
            v46 += 7;
            BOOL v14 = v47++ > 8;
            if (v14)
            {
              LODWORD(v34) = 0;
LABEL_109:
              unint64_t v2 = v48 + 1;
              goto LABEL_110;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v34) = 0;
          }
          goto LABEL_109;
        }
        char v32 = 0;
        unsigned int v33 = 0;
        uint64_t v34 = 0;
        do
        {
          unint64_t v2 = v30 + 1;
          *((void *)a2 + 1) = v30 + 1;
          char v35 = *(unsigned char *)(v31 + v30);
          v34 |= (unint64_t)(v35 & 0x7F) << v32;
          if ((v35 & 0x80) == 0) {
            goto LABEL_110;
          }
          v32 += 7;
          unint64_t v30 = v2;
          BOOL v14 = v33++ > 8;
        }
        while (!v14);
        LODWORD(v34) = 0;
LABEL_110:
        *((_DWORD *)this + 6) = v34;
        break;
      case 0xDu:
        *((_WORD *)this + 32) |= 0x200u;
        unint64_t v36 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v37 = *(void *)a2;
        if (v36 > 0xFFFFFFFFFFFFFFF5 || v36 + 10 > v2)
        {
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v40 = 0;
          if (v2 <= v36) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v36)
            {
              LODWORD(v40) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_115;
            }
            unint64_t v52 = v36++;
            char v53 = *(unsigned char *)(v37 + v52);
            *((void *)a2 + 1) = v36;
            v40 |= (unint64_t)(v53 & 0x7F) << v50;
            if ((v53 & 0x80) == 0) {
              break;
            }
            v50 += 7;
            BOOL v14 = v51++ > 8;
            if (v14)
            {
              LODWORD(v40) = 0;
LABEL_114:
              unint64_t v2 = v52 + 1;
              goto LABEL_115;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v40) = 0;
          }
          goto LABEL_114;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        do
        {
          unint64_t v2 = v36 + 1;
          *((void *)a2 + 1) = v36 + 1;
          char v41 = *(unsigned char *)(v37 + v36);
          v40 |= (unint64_t)(v41 & 0x7F) << v38;
          if ((v41 & 0x80) == 0) {
            goto LABEL_115;
          }
          v38 += 7;
          unint64_t v36 = v2;
          BOOL v14 = v39++ > 8;
        }
        while (!v14);
        LODWORD(v40) = 0;
LABEL_115:
        *((_DWORD *)this + 13) = v40;
        break;
      default:
        goto LABEL_19;
    }
LABEL_116:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::LiftToWakeStatusNeo::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 64);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    __int16 v4 = *(_WORD *)(v3 + 64);
    if ((v4 & 0x800) == 0)
    {
LABEL_3:
      if ((v4 & 0x400) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(this + 64) & 0x800) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x400) == 0)
  {
LABEL_4:
    if ((v4 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 2) == 0)
  {
LABEL_5:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = PB::Writer::write(a2, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x1000) == 0)
  {
LABEL_6:
    if ((v4 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x40) == 0)
  {
LABEL_7:
    if ((v4 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = PB::Writer::write(a2, *(float *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x80) == 0)
  {
LABEL_8:
    if ((v4 & 0x100) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = PB::Writer::write(a2, *(float *)(v3 + 44));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x100) == 0)
  {
LABEL_9:
    if ((v4 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = PB::Writer::write(a2, *(float *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = PB::Writer::write(a2, *(float *)(v3 + 28));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = PB::Writer::write(a2, *(float *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 0x20) == 0)
  {
LABEL_12:
    if ((v4 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_WORD *)(v3 + 64) & 0x200) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_25:
  this = PB::Writer::write(a2, *(float *)(v3 + 36));
  __int16 v4 = *(_WORD *)(v3 + 64);
  if ((v4 & 4) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x200) == 0) {
    return this;
  }
LABEL_27:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::LiftToWakeStatusNeo::hash_value(CMMsl::LiftToWakeStatusNeo *this)
{
  __int16 v1 = *((_WORD *)this + 32);
  if (v1)
  {
    double v2 = *((double *)this + 1);
    if (v2 == 0.0) {
      double v2 = 0.0;
    }
    if ((*((_WORD *)this + 32) & 0x800) != 0)
    {
LABEL_3:
      uint64_t v3 = *((unsigned __int8 *)this + 60);
      if ((*((_WORD *)this + 32) & 0x400) != 0) {
        goto LABEL_4;
      }
      goto LABEL_33;
    }
  }
  else
  {
    double v2 = 0.0;
    if ((*((_WORD *)this + 32) & 0x800) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v3 = 0;
  if ((*((_WORD *)this + 32) & 0x400) != 0)
  {
LABEL_4:
    uint64_t v4 = *((unsigned int *)this + 14);
    if ((v1 & 2) != 0) {
      goto LABEL_5;
    }
LABEL_34:
    double v5 = 0.0;
    if ((*((_WORD *)this + 32) & 0x1000) != 0) {
      goto LABEL_8;
    }
    goto LABEL_35;
  }
LABEL_33:
  uint64_t v4 = 0;
  if ((v1 & 2) == 0) {
    goto LABEL_34;
  }
LABEL_5:
  double v5 = *((double *)this + 2);
  if (v5 == 0.0) {
    double v5 = 0.0;
  }
  if ((*((_WORD *)this + 32) & 0x1000) != 0)
  {
LABEL_8:
    uint64_t v6 = *((unsigned __int8 *)this + 61);
    if ((v1 & 0x40) != 0) {
      goto LABEL_9;
    }
LABEL_36:
    uint64_t v8 = 0;
    if ((v1 & 0x80) != 0) {
      goto LABEL_12;
    }
LABEL_37:
    uint64_t v10 = 0;
    if ((*((_WORD *)this + 32) & 0x100) != 0) {
      goto LABEL_15;
    }
LABEL_38:
    uint64_t v12 = 0;
    if ((v1 & 8) != 0) {
      goto LABEL_18;
    }
LABEL_39:
    uint64_t v14 = 0;
    if ((v1 & 0x10) != 0) {
      goto LABEL_21;
    }
LABEL_40:
    uint64_t v16 = 0;
    if ((v1 & 0x20) != 0) {
      goto LABEL_24;
    }
LABEL_41:
    uint64_t v18 = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_27;
    }
LABEL_42:
    uint64_t v19 = 0;
    if ((*((_WORD *)this + 32) & 0x200) != 0) {
      goto LABEL_28;
    }
LABEL_43:
    uint64_t v20 = 0;
    return v3 ^ *(void *)&v2 ^ v4 ^ *(void *)&v5 ^ v6 ^ v8 ^ v10 ^ v12 ^ v14 ^ v16 ^ v18 ^ v19 ^ v20;
  }
LABEL_35:
  uint64_t v6 = 0;
  if ((v1 & 0x40) == 0) {
    goto LABEL_36;
  }
LABEL_9:
  float v7 = *((float *)this + 10);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  if ((v1 & 0x80) == 0) {
    goto LABEL_37;
  }
LABEL_12:
  float v9 = *((float *)this + 11);
  uint64_t v10 = LODWORD(v9);
  if (v9 == 0.0) {
    uint64_t v10 = 0;
  }
  if ((*((_WORD *)this + 32) & 0x100) == 0) {
    goto LABEL_38;
  }
LABEL_15:
  float v11 = *((float *)this + 12);
  uint64_t v12 = LODWORD(v11);
  if (v11 == 0.0) {
    uint64_t v12 = 0;
  }
  if ((v1 & 8) == 0) {
    goto LABEL_39;
  }
LABEL_18:
  float v13 = *((float *)this + 7);
  uint64_t v14 = LODWORD(v13);
  if (v13 == 0.0) {
    uint64_t v14 = 0;
  }
  if ((v1 & 0x10) == 0) {
    goto LABEL_40;
  }
LABEL_21:
  float v15 = *((float *)this + 8);
  uint64_t v16 = LODWORD(v15);
  if (v15 == 0.0) {
    uint64_t v16 = 0;
  }
  if ((v1 & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_24:
  float v17 = *((float *)this + 9);
  uint64_t v18 = LODWORD(v17);
  if (v17 == 0.0) {
    uint64_t v18 = 0;
  }
  if ((v1 & 4) == 0) {
    goto LABEL_42;
  }
LABEL_27:
  uint64_t v19 = *((unsigned int *)this + 6);
  if ((*((_WORD *)this + 32) & 0x200) == 0) {
    goto LABEL_43;
  }
LABEL_28:
  uint64_t v20 = *((unsigned int *)this + 13);
  return v3 ^ *(void *)&v2 ^ v4 ^ *(void *)&v5 ^ v6 ^ v8 ^ v10 ^ v12 ^ v14 ^ v16 ^ v18 ^ v19 ^ v20;
}

void CMMsl::LocationOscarEmu::~LocationOscarEmu(CMMsl::LocationOscarEmu *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::LocationOscarEmu::LocationOscarEmu(uint64_t this, const CMMsl::LocationOscarEmu *a2)
{
  *(void *)this = &unk_2706430B8;
  *(_DWORD *)(this + 100) = 0;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 0x100) != 0)
  {
    uint64_t v4 = *((void *)a2 + 9);
    __int16 v3 = 256;
    *(_WORD *)(this + 100) = 256;
    *(void *)(this + 72) = v4;
    __int16 v2 = *((_WORD *)a2 + 50);
    if ((v2 & 0x1000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((*((_WORD *)a2 + 50) & 0x1000) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 24);
    v3 |= 0x1000u;
    *(_WORD *)(this + 100) = v3;
    *(_DWORD *)(this + 96) = v5;
    __int16 v2 = *((_WORD *)a2 + 50);
  }
LABEL_6:
  if ((v2 & 0x40) != 0)
  {
    uint64_t v6 = *((void *)a2 + 7);
    v3 |= 0x40u;
    *(_WORD *)(this + 100) = v3;
    *(void *)(this + 56) = v6;
    __int16 v2 = *((_WORD *)a2 + 50);
    if ((v2 & 0x80) == 0)
    {
LABEL_8:
      if ((v2 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((v2 & 0x80) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *((void *)a2 + 8);
  v3 |= 0x80u;
  *(_WORD *)(this + 100) = v3;
  *(void *)(this + 64) = v7;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 0x10) == 0)
  {
LABEL_9:
    if ((v2 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v8 = *((void *)a2 + 5);
  v3 |= 0x10u;
  *(_WORD *)(this + 100) = v3;
  *(void *)(this + 40) = v8;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 0x20) == 0)
  {
LABEL_10:
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v9 = *((void *)a2 + 6);
  v3 |= 0x20u;
  *(_WORD *)(this + 100) = v3;
  *(void *)(this + 48) = v9;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 8) == 0)
  {
LABEL_11:
    if ((v2 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v10 = *((void *)a2 + 4);
  v3 |= 8u;
  *(_WORD *)(this + 100) = v3;
  *(void *)(this + 32) = v10;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 1) == 0)
  {
LABEL_12:
    if ((v2 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v11 = *((void *)a2 + 1);
  v3 |= 1u;
  *(_WORD *)(this + 100) = v3;
  *(void *)(this + 8) = v11;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 0x200) == 0)
  {
LABEL_13:
    if ((v2 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v12 = *((void *)a2 + 10);
  v3 |= 0x200u;
  *(_WORD *)(this + 100) = v3;
  *(void *)(this + 80) = v12;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 2) == 0)
  {
LABEL_14:
    if ((v2 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v13 = *((void *)a2 + 2);
  v3 |= 2u;
  *(_WORD *)(this + 100) = v3;
  *(void *)(this + 16) = v13;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 4) == 0)
  {
LABEL_15:
    if ((v2 & 0x400) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v14 = *((void *)a2 + 3);
  v3 |= 4u;
  *(_WORD *)(this + 100) = v3;
  *(void *)(this + 24) = v14;
  __int16 v2 = *((_WORD *)a2 + 50);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      return this;
    }
LABEL_28:
    int v16 = *((_DWORD *)a2 + 23);
    *(_WORD *)(this + 100) = v3 | 0x800;
    *(_DWORD *)(this + 92) = v16;
    return this;
  }
LABEL_27:
  int v15 = *((_DWORD *)a2 + 22);
  v3 |= 0x400u;
  *(_WORD *)(this + 100) = v3;
  *(_DWORD *)(this + 88) = v15;
  if ((*((_WORD *)a2 + 50) & 0x800) != 0) {
    goto LABEL_28;
  }
  return this;
}

CMMsl *CMMsl::LocationOscarEmu::operator=(CMMsl *a1, const CMMsl::LocationOscarEmu *a2)
{
  if (a1 != a2)
  {
    CMMsl::LocationOscarEmu::LocationOscarEmu((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::LocationOscarEmu *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::LocationOscarEmu *a2, CMMsl::LocationOscarEmu *a3)
{
  int v3 = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v3;
  uint64_t v4 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v4;
  int v5 = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v5;
  uint64_t v6 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v6;
  uint64_t v7 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v7;
  uint64_t v8 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v8;
  uint64_t v9 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v9;
  uint64_t v10 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v10;
  uint64_t v11 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v11;
  uint64_t v12 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v12;
  uint64_t v13 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v13;
  double result = *((double *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((double *)a2 + 3) = result;
  int v15 = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v15;
  int v16 = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v16;
  return result;
}

double CMMsl::LocationOscarEmu::LocationOscarEmu(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_2706430B8;
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a2 + 100) = 0;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  double result = *(double *)(a2 + 24);
  *(double *)(a1 + 24) = result;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  return result;
}

CMMsl *CMMsl::LocationOscarEmu::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::LocationOscarEmu::LocationOscarEmu((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::LocationOscarEmu *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::LocationOscarEmu::formatText(CMMsl::LocationOscarEmu *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 50);
  if (v5)
  {
    PB::TextFormatter::format(a2, "altitude", *((double *)this + 1));
    __int16 v5 = *((_WORD *)this + 50);
    if ((v5 & 0x400) == 0)
    {
LABEL_3:
      if ((v5 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((*((_WORD *)this + 50) & 0x400) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "confidence");
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 2) == 0)
  {
LABEL_4:
    if ((v5 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(a2, "course", *((double *)this + 2));
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 4) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  PB::TextFormatter::format(a2, "courseAccuracy", *((double *)this + 3));
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  PB::TextFormatter::format(a2, "horizontalAccuracy", *((double *)this + 4));
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 0x10) == 0)
  {
LABEL_7:
    if ((v5 & 0x800) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  PB::TextFormatter::format(a2, "latitude", *((double *)this + 5));
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 0x800) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  PB::TextFormatter::format(a2, "locationLoggingEnabled");
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  PB::TextFormatter::format(a2, "longitude", *((double *)this + 6));
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  PB::TextFormatter::format(a2, "speed", *((double *)this + 7));
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 0x80) == 0)
  {
LABEL_11:
    if ((v5 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  PB::TextFormatter::format(a2, "speedAccuracy", *((double *)this + 8));
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 0x100) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  PB::TextFormatter::format(a2, "timestamp", *((double *)this + 9));
  __int16 v5 = *((_WORD *)this + 50);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 0x200) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_29:
  PB::TextFormatter::format(a2, "type");
  if ((*((_WORD *)this + 50) & 0x200) != 0) {
LABEL_14:
  }
    PB::TextFormatter::format(a2, "verticalAccuracy", *((double *)this + 10));
LABEL_15:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::LocationOscarEmu::readFrom(CMMsl::LocationOscarEmu *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_112;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((_WORD *)this + 50) |= 0x100u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 9) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 2u:
        *((_WORD *)this + 50) |= 0x1000u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v38 = 0;
          unsigned int v39 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_101;
            }
            unint64_t v40 = v20++;
            char v41 = *(unsigned char *)(v21 + v40);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v41 & 0x7F) << v38;
            if ((v41 & 0x80) == 0) {
              break;
            }
            v38 += 7;
            BOOL v14 = v39++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
LABEL_100:
              unint64_t v2 = v40 + 1;
              goto LABEL_101;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v24) = 0;
          }
          goto LABEL_100;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_101;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        LODWORD(v24) = 0;
LABEL_101:
        *((_DWORD *)this + 24) = v24;
        break;
      case 3u:
        *((_WORD *)this + 50) |= 0x40u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 7) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 4u:
        *((_WORD *)this + 50) |= 0x80u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 8) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 5u:
        *((_WORD *)this + 50) |= 0x10u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 5) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 6u:
        *((_WORD *)this + 50) |= 0x20u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 6) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 7u:
        *((_WORD *)this + 50) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 4) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 8u:
        *((_WORD *)this + 50) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 9u:
        *((_WORD *)this + 50) |= 0x200u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 10) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 0xAu:
        *((_WORD *)this + 50) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_59;
        }
        *((void *)this + 2) = *(void *)(*(void *)a2 + v2);
        goto LABEL_96;
      case 0xBu:
        *((_WORD *)this + 50) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
        {
          *((void *)this + 3) = *(void *)(*(void *)a2 + v2);
LABEL_96:
          unint64_t v2 = *((void *)a2 + 1) + 8;
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_59:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 0xCu:
        *((_WORD *)this + 50) |= 0x400u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v27 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v42 = 0;
          unsigned int v43 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_106;
            }
            unint64_t v44 = v26++;
            char v45 = *(unsigned char *)(v27 + v44);
            *((void *)a2 + 1) = v26;
            v30 |= (unint64_t)(v45 & 0x7F) << v42;
            if ((v45 & 0x80) == 0) {
              break;
            }
            v42 += 7;
            BOOL v14 = v43++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
LABEL_105:
              unint64_t v2 = v44 + 1;
              goto LABEL_106;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v30) = 0;
          }
          goto LABEL_105;
        }
        char v28 = 0;
        unsigned int v29 = 0;
        uint64_t v30 = 0;
        do
        {
          unint64_t v2 = v26 + 1;
          *((void *)a2 + 1) = v26 + 1;
          char v31 = *(unsigned char *)(v27 + v26);
          v30 |= (unint64_t)(v31 & 0x7F) << v28;
          if ((v31 & 0x80) == 0) {
            goto LABEL_106;
          }
          v28 += 7;
          unint64_t v26 = v2;
          BOOL v14 = v29++ > 8;
        }
        while (!v14);
        LODWORD(v30) = 0;
LABEL_106:
        *((_DWORD *)this + 22) = v30;
        break;
      case 0xDu:
        *((_WORD *)this + 50) |= 0x800u;
        unint64_t v32 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v33 = *(void *)a2;
        if (v32 > 0xFFFFFFFFFFFFFFF5 || v32 + 10 > v2)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v36 = 0;
          if (v2 <= v32) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v32)
            {
              LODWORD(v36) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_111;
            }
            unint64_t v48 = v32++;
            char v49 = *(unsigned char *)(v33 + v48);
            *((void *)a2 + 1) = v32;
            v36 |= (unint64_t)(v49 & 0x7F) << v46;
            if ((v49 & 0x80) == 0) {
              break;
            }
            v46 += 7;
            BOOL v14 = v47++ > 8;
            if (v14)
            {
              LODWORD(v36) = 0;
LABEL_110:
              unint64_t v2 = v48 + 1;
              goto LABEL_111;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v36) = 0;
          }
          goto LABEL_110;
        }
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        do
        {
          unint64_t v2 = v32 + 1;
          *((void *)a2 + 1) = v32 + 1;
          char v37 = *(unsigned char *)(v33 + v32);
          v36 |= (unint64_t)(v37 & 0x7F) << v34;
          if ((v37 & 0x80) == 0) {
            goto LABEL_111;
          }
          v34 += 7;
          unint64_t v32 = v2;
          BOOL v14 = v35++ > 8;
        }
        while (!v14);
        LODWORD(v36) = 0;
LABEL_111:
        *((_DWORD *)this + 23) = v36;
        break;
      default:
        goto LABEL_19;
    }
LABEL_112:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::LocationOscarEmu::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 100);
  if ((v4 & 0x100) != 0)
  {
    this = PB::Writer::write(a2, *(double *)(this + 72));
    __int16 v4 = *(_WORD *)(v3 + 100);
    if ((v4 & 0x1000) == 0)
    {
LABEL_3:
      if ((v4 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((*(_WORD *)(this + 100) & 0x1000) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x40) == 0)
  {
LABEL_4:
    if ((v4 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = PB::Writer::write(a2, *(double *)(v3 + 56));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x80) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = PB::Writer::write(a2, *(double *)(v3 + 64));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = PB::Writer::write(a2, *(double *)(v3 + 40));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = PB::Writer::write(a2, *(double *)(v3 + 48));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = PB::Writer::write(a2, *(double *)(v3 + 32));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 1) == 0)
  {
LABEL_9:
    if ((v4 & 0x200) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = PB::Writer::write(a2, *(double *)(v3 + 8));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x200) == 0)
  {
LABEL_10:
    if ((v4 & 2) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = PB::Writer::write(a2, *(double *)(v3 + 80));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 2) == 0)
  {
LABEL_11:
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = PB::Writer::write(a2, *(double *)(v3 + 16));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 4) == 0)
  {
LABEL_12:
    if ((v4 & 0x400) == 0) {
      goto LABEL_13;
    }
LABEL_26:
    this = PB::Writer::writeVarInt(a2);
    if ((*(_WORD *)(v3 + 100) & 0x800) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_25:
  this = PB::Writer::write(a2, *(double *)(v3 + 24));
  __int16 v4 = *(_WORD *)(v3 + 100);
  if ((v4 & 0x400) != 0) {
    goto LABEL_26;
  }
LABEL_13:
  if ((v4 & 0x800) == 0) {
    return this;
  }
LABEL_27:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::LocationOscarEmu::hash_value(CMMsl::LocationOscarEmu *this)
{
  __int16 v1 = *((_WORD *)this + 50);
  if ((v1 & 0x100) != 0)
  {
    double v2 = *((double *)this + 9);
    if (v2 == 0.0) {
      double v2 = 0.0;
    }
    if ((*((_WORD *)this + 50) & 0x1000) != 0)
    {
LABEL_3:
      uint64_t v3 = *((unsigned int *)this + 24);
      if ((v1 & 0x40) != 0) {
        goto LABEL_4;
      }
LABEL_37:
      double v4 = 0.0;
      if ((v1 & 0x80) != 0) {
        goto LABEL_7;
      }
LABEL_38:
      double v5 = 0.0;
      if ((v1 & 0x10) != 0) {
        goto LABEL_10;
      }
LABEL_39:
      double v6 = 0.0;
      if ((v1 & 0x20) != 0) {
        goto LABEL_13;
      }
LABEL_40:
      double v7 = 0.0;
      if ((v1 & 8) != 0) {
        goto LABEL_16;
      }
LABEL_41:
      double v8 = 0.0;
      if (v1) {
        goto LABEL_19;
      }
LABEL_42:
      double v9 = 0.0;
      if ((*((_WORD *)this + 50) & 0x200) != 0) {
        goto LABEL_22;
      }
LABEL_43:
      double v10 = 0.0;
      if ((v1 & 2) != 0) {
        goto LABEL_25;
      }
LABEL_44:
      double v11 = 0.0;
      if ((v1 & 4) != 0) {
        goto LABEL_28;
      }
LABEL_45:
      double v12 = 0.0;
      if ((*((_WORD *)this + 50) & 0x400) != 0) {
        goto LABEL_31;
      }
LABEL_46:
      uint64_t v13 = 0;
      if ((*((_WORD *)this + 50) & 0x800) != 0) {
        goto LABEL_32;
      }
LABEL_47:
      uint64_t v14 = 0;
      return v3 ^ *(void *)&v2 ^ *(void *)&v4 ^ *(void *)&v5 ^ *(void *)&v6 ^ *(void *)&v7 ^ *(void *)&v8 ^ *(void *)&v9 ^ *(void *)&v10 ^ *(void *)&v11 ^ *(void *)&v12 ^ v13 ^ v14;
    }
  }
  else
  {
    double v2 = 0.0;
    if ((*((_WORD *)this + 50) & 0x1000) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v3 = 0;
  if ((v1 & 0x40) == 0) {
    goto LABEL_37;
  }
LABEL_4:
  double v4 = *((double *)this + 7);
  if (v4 == 0.0) {
    double v4 = 0.0;
  }
  if ((v1 & 0x80) == 0) {
    goto LABEL_38;
  }
LABEL_7:
  double v5 = *((double *)this + 8);
  if (v5 == 0.0) {
    double v5 = 0.0;
  }
  if ((v1 & 0x10) == 0) {
    goto LABEL_39;
  }
LABEL_10:
  double v6 = *((double *)this + 5);
  if (v6 == 0.0) {
    double v6 = 0.0;
  }
  if ((v1 & 0x20) == 0) {
    goto LABEL_40;
  }
LABEL_13:
  double v7 = *((double *)this + 6);
  if (v7 == 0.0) {
    double v7 = 0.0;
  }
  if ((v1 & 8) == 0) {
    goto LABEL_41;
  }
LABEL_16:
  double v8 = *((double *)this + 4);
  if (v8 == 0.0) {
    double v8 = 0.0;
  }
  if ((v1 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_19:
  double v9 = *((double *)this + 1);
  if (v9 == 0.0) {
    double v9 = 0.0;
  }
  if ((*((_WORD *)this + 50) & 0x200) == 0) {
    goto LABEL_43;
  }
LABEL_22:
  double v10 = *((double *)this + 10);
  if (v10 == 0.0) {
    double v10 = 0.0;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_44;
  }
LABEL_25:
  double v11 = *((double *)this + 2);
  if (v11 == 0.0) {
    double v11 = 0.0;
  }
  if ((v1 & 4) == 0) {
    goto LABEL_45;
  }
LABEL_28:
  double v12 = *((double *)this + 3);
  if (v12 == 0.0) {
    double v12 = 0.0;
  }
  if ((*((_WORD *)this + 50) & 0x400) == 0) {
    goto LABEL_46;
  }
LABEL_31:
  uint64_t v13 = *((unsigned int *)this + 22);
  if ((*((_WORD *)this + 50) & 0x800) == 0) {
    goto LABEL_47;
  }
LABEL_32:
  uint64_t v14 = *((unsigned int *)this + 23);
  return v3 ^ *(void *)&v2 ^ *(void *)&v4 ^ *(void *)&v5 ^ *(void *)&v6 ^ *(void *)&v7 ^ *(void *)&v8 ^ *(void *)&v9 ^ *(void *)&v10 ^ *(void *)&v11 ^ *(void *)&v12 ^ v13 ^ v14;
}

void CMMsl::LockScreenStatus::~LockScreenStatus(CMMsl::LockScreenStatus *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::LockScreenStatus::LockScreenStatus(uint64_t this, const CMMsl::LockScreenStatus *a2)
{
  *(void *)this = &unk_2706430F0;
  *(_DWORD *)(this + 12) = 0;
  if (*((unsigned char *)a2 + 12))
  {
    char v2 = *((unsigned char *)a2 + 8);
    *(unsigned char *)(this + 12) = 1;
    *(unsigned char *)(this + 8) = v2;
  }
  return this;
}

uint64_t CMMsl::LockScreenStatus::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    double v7 = &unk_2706430F0;
    char v3 = *(unsigned char *)(a2 + 8);
    int v4 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 12) = *(unsigned char *)(a2 + 12) & 1;
    int v9 = v4;
    char v5 = *(unsigned char *)(a1 + 8);
    *(unsigned char *)(a1 + 8) = v3;
    char v8 = v5;
    PB::Base::~Base((PB::Base *)&v7);
  }
  return a1;
}

{
  int v3;
  char v4;
  int v5;
  void *v7;
  char v8;
  int v9;

  if (a1 != a2)
  {
    double v7 = &unk_2706430F0;
    char v3 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a2 + 12) = 0;
    int v4 = *(unsigned char *)(a2 + 8);
    char v5 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 12) = v3;
    int v9 = v5;
    LOBYTE(v3) = *(unsigned char *)(a1 + 8);
    *(unsigned char *)(a1 + 8) = v4;
    char v8 = v3;
    PB::Base::~Base((PB::Base *)&v7);
  }
  return a1;
}

uint64_t CMMsl::swap(uint64_t this, CMMsl::LockScreenStatus *a2, CMMsl::LockScreenStatus *a3)
{
  int v3 = *(_DWORD *)(this + 12);
  *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
  *((_DWORD *)a2 + 3) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 8);
  *(unsigned char *)(this + 8) = *((unsigned char *)a2 + 8);
  *((unsigned char *)a2 + 8) = v3;
  return this;
}

uint64_t CMMsl::LockScreenStatus::formatText(CMMsl::LockScreenStatus *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  if (*((unsigned char *)this + 12)) {
    PB::TextFormatter::format(a2, "lockScreen");
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::LockScreenStatus::readFrom(CMMsl::LockScreenStatus *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_24;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *((unsigned char *)this + 12) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        unint64_t v3 = *((void *)a2 + 2);
        if (v2 >= v3)
        {
          BOOL v20 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v19 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v20 = v19 != 0;
        }
        *((unsigned char *)this + 8) = v20;
      }
      else
      {
LABEL_24:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
        unint64_t v3 = *((void *)a2 + 2);
      }
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_24;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::LockScreenStatus::writeTo(uint64_t this, PB::Writer *a2)
{
  if (*(unsigned char *)(this + 12)) {
    return PB::Writer::write(a2);
  }
  return this;
}

uint64_t CMMsl::LockScreenStatus::hash_value(CMMsl::LockScreenStatus *this)
{
  if (*((unsigned char *)this + 12)) {
    return *((unsigned __int8 *)this + 8);
  }
  else {
    return 0;
  }
}

void CMMsl::MLBasedBioMotionClassification::~MLBasedBioMotionClassification(CMMsl::MLBasedBioMotionClassification *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_270643128;
  *((void *)this + 1) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::MLBasedBioMotionClassification::~MLBasedBioMotionClassification(this);
  JUMPOUT(0x25A2B2850);
}

void *CMMsl::MLBasedBioMotionClassification::MLBasedBioMotionClassification(void *this, const CMMsl::MLBasedBioMotionClassification *a2)
{
  *this = &unk_270643128;
  this[1] = 0;
  if (*((void *)a2 + 1)) {
    operator new();
  }
  return this;
}

const CMMsl::MLBasedBioMotionClassification *CMMsl::MLBasedBioMotionClassification::operator=(const CMMsl::MLBasedBioMotionClassification *a1, const CMMsl::MLBasedBioMotionClassification *a2)
{
  if (a1 != a2)
  {
    CMMsl::MLBasedBioMotionClassification::MLBasedBioMotionClassification(&v5, a2);
    uint64_t v3 = *((void *)a1 + 1);
    *((void *)a1 + 1) = v6;
    uint64_t v6 = v3;
    CMMsl::MLBasedBioMotionClassification::~MLBasedBioMotionClassification((CMMsl::MLBasedBioMotionClassification *)&v5);
  }
  return a1;
}

uint64_t CMMsl::swap(uint64_t this, CMMsl::MLBasedBioMotionClassification *a2, CMMsl::MLBasedBioMotionClassification *a3)
{
  uint64_t v3 = *(void *)(this + 8);
  *(void *)(this + 8) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v3;
  return this;
}

void *CMMsl::MLBasedBioMotionClassification::MLBasedBioMotionClassification(void *a1, uint64_t a2)
{
  *a1 = &unk_270643128;
  a1[1] = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  uint64_t v4 = a1[1];
  a1[1] = v3;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  return a1;
}

{
  uint64_t v3;
  uint64_t v4;

  *a1 = &unk_270643128;
  a1[1] = 0;
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  uint64_t v4 = a1[1];
  a1[1] = v3;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  return a1;
}

uint64_t CMMsl::MLBasedBioMotionClassification::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(a2 + 8);
    *(void *)(a2 + 8) = 0;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v3;
    v6[0] = &unk_270643128;
    v6[1] = v4;
    CMMsl::MLBasedBioMotionClassification::~MLBasedBioMotionClassification((CMMsl::MLBasedBioMotionClassification *)v6);
  }
  return a1;
}

uint64_t CMMsl::MLBasedBioMotionClassification::formatText(CMMsl::MLBasedBioMotionClassification *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  uint64_t v5 = *((void *)this + 1);
  if (v5) {
    (*(void (**)(uint64_t, PB::TextFormatter *, const char *))(*(void *)v5 + 32))(v5, a2, "super");
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::MLBasedBioMotionClassification::readFrom(CMMsl::MLBasedBioMotionClassification *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v7 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        unint64_t v11 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v12 = *(unsigned char *)(v7 + v2);
        v10 |= (unint64_t)(v12 & 0x7F) << v8;
        if ((v12 & 0x80) == 0) {
          break;
        }
        v8 += 7;
        unint64_t v2 = v11;
        BOOL v13 = v9++ > 8;
        if (v13) {
          goto LABEL_23;
        }
      }
LABEL_20:
      if ((v10 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v10 >> 3) == 1) {
        operator new();
      }
LABEL_23:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v14 = 0;
    unsigned int v15 = 0;
    unint64_t v10 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v16 = v2 + 1;
      char v17 = *(unsigned char *)(v7 + v2);
      *((void *)a2 + 1) = v16;
      v10 |= (unint64_t)(v17 & 0x7F) << v14;
      if ((v17 & 0x80) == 0) {
        goto LABEL_20;
      }
      v14 += 7;
      unint64_t v2 = v16;
      BOOL v13 = v15++ > 8;
      if (v13) {
        goto LABEL_23;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::MLBasedBioMotionClassification::writeTo(uint64_t this, PB::Writer *a2)
{
  unint64_t v2 = *(const PB::Base **)(this + 8);
  if (v2) {
    return PB::Writer::writeSubmessage(a2, v2);
  }
  return this;
}

CMMsl::BioMotionClassification *CMMsl::MLBasedBioMotionClassification::hash_value(CMMsl::MLBasedBioMotionClassification *this)
{
  uint64_t result = (CMMsl::BioMotionClassification *)*((void *)this + 1);
  if (result) {
    return (CMMsl::BioMotionClassification *)CMMsl::BioMotionClassification::hash_value(result);
  }
  return result;
}

uint64_t CMMsl::MLBasedBioMotionClassification::makeSuper(uint64_t this)
{
  if (!*(void *)(this + 8)) {
    operator new();
  }
  return this;
}

void CMMsl::MagicMountState::~MagicMountState(CMMsl::MagicMountState *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::MagicMountState::MagicMountState(uint64_t this, const CMMsl::MagicMountState *a2)
{
  *(void *)this = &unk_270643160;
  *(_DWORD *)(this + 20) = 0;
  if (*((unsigned char *)a2 + 20))
  {
    uint64_t v3 = *((void *)a2 + 1);
    *(unsigned char *)(this + 20) = 1;
    *(void *)(this + 8) = v3;
    char v2 = 3;
    if ((*((unsigned char *)a2 + 20) & 2) == 0) {
      return this;
    }
    goto LABEL_5;
  }
  char v2 = 2;
  if ((*((unsigned char *)a2 + 20) & 2) != 0)
  {
LABEL_5:
    int v4 = *((_DWORD *)a2 + 4);
    *(unsigned char *)(this + 20) = v2;
    *(_DWORD *)(this + 16) = v4;
  }
  return this;
}

const CMMsl::MagicMountState *CMMsl::MagicMountState::operator=(const CMMsl::MagicMountState *a1, const CMMsl::MagicMountState *a2)
{
  if (a1 != a2)
  {
    CMMsl::MagicMountState::MagicMountState((uint64_t)v6, a2);
    uint64_t v3 = *((void *)a1 + 1);
    *((void *)a1 + 1) = v7;
    uint64_t v7 = v3;
    uint64_t v4 = *((void *)a1 + 2);
    *((void *)a1 + 2) = v8;
    uint64_t v8 = v4;
    PB::Base::~Base((PB::Base *)v6);
  }
  return a1;
}

uint64_t CMMsl::swap(uint64_t this, CMMsl::MagicMountState *a2, CMMsl::MagicMountState *a3)
{
  int v3 = *(_DWORD *)(this + 20);
  *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v3;
  uint64_t v4 = *(void *)(this + 8);
  *(void *)(this + 8) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  LODWORD(v4) = *(_DWORD *)(this + 16);
  *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v4;
  return this;
}

uint64_t CMMsl::MagicMountState::MagicMountState(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_270643160;
  *(_DWORD *)(result + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

{
  *(void *)uint64_t result = &unk_270643160;
  *(_DWORD *)(result + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

uint64_t CMMsl::MagicMountState::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(a2 + 8);
    uint64_t v4 = *(void *)(a2 + 16);
    *(_DWORD *)(a2 + 20) = 0;
    uint64_t v5 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v3;
    v8[0] = &unk_270643160;
    v8[1] = v5;
    uint64_t v6 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v4;
    v8[2] = v6;
    PB::Base::~Base((PB::Base *)v8);
  }
  return a1;
}

uint64_t CMMsl::MagicMountState::formatText(CMMsl::MagicMountState *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 20);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "state");
    char v5 = *((unsigned char *)this + 20);
  }
  if (v5) {
    PB::TextFormatter::format(a2, "timestamp");
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::MagicMountState::readFrom(CMMsl::MagicMountState *this, PB::Reader *a2)
{
  unint64_t v3 = *((void *)a2 + 1);
  unint64_t v2 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v3 < v2 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v3 > 0xFFFFFFFFFFFFFFF5 || v3 + 10 > v2) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v3 + 1;
        *((void *)a2 + 1) = v3 + 1;
        char v13 = *(unsigned char *)(v8 + v3);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v3 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_30;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 2)
      {
        *((unsigned char *)this + 20) |= 2u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v27 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v2)
        {
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v30 = 0;
          if (v2 <= v26) {
            unint64_t v3 = *((void *)a2 + 1);
          }
          else {
            unint64_t v3 = *((void *)a2 + 2);
          }
          while (1)
          {
            if (v3 == v26)
            {
              LODWORD(v30) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_64;
            }
            unint64_t v38 = v26++;
            char v39 = *(unsigned char *)(v27 + v38);
            *((void *)a2 + 1) = v26;
            v30 |= (unint64_t)(v39 & 0x7F) << v36;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v36 += 7;
            BOOL v14 = v37++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              goto LABEL_63;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v30) = 0;
          }
LABEL_63:
          unint64_t v3 = v38 + 1;
        }
        else
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          while (1)
          {
            unint64_t v3 = v26 + 1;
            *((void *)a2 + 1) = v26 + 1;
            char v31 = *(unsigned char *)(v27 + v26);
            v30 |= (unint64_t)(v31 & 0x7F) << v28;
            if ((v31 & 0x80) == 0) {
              break;
            }
            v28 += 7;
            unint64_t v26 = v3;
            BOOL v14 = v29++ > 8;
            if (v14)
            {
              LODWORD(v30) = 0;
              break;
            }
          }
        }
LABEL_64:
        *((_DWORD *)this + 4) = v30;
      }
      else if ((v11 >> 3) == 1)
      {
        *((unsigned char *)this + 20) |= 1u;
        unint64_t v19 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v20 = *(void *)a2;
        if (v19 > 0xFFFFFFFFFFFFFFF5 || v19 + 10 > v2)
        {
          char v32 = 0;
          unsigned int v33 = 0;
          uint64_t v23 = 0;
          if (v2 <= v19) {
            unint64_t v3 = *((void *)a2 + 1);
          }
          else {
            unint64_t v3 = *((void *)a2 + 2);
          }
          while (1)
          {
            if (v3 == v19)
            {
              uint64_t v23 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_60;
            }
            unint64_t v34 = v19++;
            char v35 = *(unsigned char *)(v20 + v34);
            *((void *)a2 + 1) = v19;
            v23 |= (unint64_t)(v35 & 0x7F) << v32;
            if ((v35 & 0x80) == 0) {
              break;
            }
            v32 += 7;
            BOOL v14 = v33++ > 8;
            if (v14)
            {
              uint64_t v23 = 0;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v23 = 0;
          }
LABEL_59:
          unint64_t v3 = v34 + 1;
        }
        else
        {
          char v21 = 0;
          unsigned int v22 = 0;
          uint64_t v23 = 0;
          while (1)
          {
            unint64_t v3 = v19 + 1;
            *((void *)a2 + 1) = v19 + 1;
            char v24 = *(unsigned char *)(v20 + v19);
            v23 |= (unint64_t)(v24 & 0x7F) << v21;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v21 += 7;
            unint64_t v19 = v3;
            BOOL v14 = v22++ > 8;
            if (v14)
            {
              uint64_t v23 = 0;
              break;
            }
          }
        }
LABEL_60:
        *((void *)this + 1) = v23;
      }
      else
      {
LABEL_30:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v3 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
      }
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v3 >= v2 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    while (v2 != v3)
    {
      unint64_t v17 = v3 + 1;
      char v18 = *(unsigned char *)(v8 + v3);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v3 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_30;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::MagicMountState::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 20);
  if (v4)
  {
    this = PB::Writer::writeVarInt(a2);
    char v4 = *(unsigned char *)(v3 + 20);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::writeVarInt(a2);
  }
  return this;
}

uint64_t CMMsl::MagicMountState::hash_value(CMMsl::MagicMountState *this)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v1 = *((void *)this + 1);
    if ((*((unsigned char *)this + 20) & 2) != 0) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v2 = 0;
    return v2 ^ v1;
  }
  uint64_t v1 = 0;
  if ((*((unsigned char *)this + 20) & 2) == 0) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v2 = *((unsigned int *)this + 4);
  return v2 ^ v1;
}

void CMMsl::MagneticAccessoryType1::~MagneticAccessoryType1(CMMsl::MagneticAccessoryType1 *this)
{
  uint64_t v2 = *((void *)this + 1);
  *(void *)this = &unk_270643198;
  *((void *)this + 1) = 0;
  if (v2) {
    sub_2572C6E48(v2);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::MagneticAccessoryType1::~MagneticAccessoryType1(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::MagneticAccessoryType1::MagneticAccessoryType1(uint64_t this, const CMMsl::MagneticAccessoryType1 *a2)
{
  *(void *)this = &unk_270643198;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 24) = 0;
  if (*((void *)a2 + 1)) {
    operator new();
  }
  char v2 = *((unsigned char *)a2 + 24);
  if (v2)
  {
    int v3 = *((_DWORD *)a2 + 4);
    *(unsigned char *)(this + 24) |= 1u;
    *(_DWORD *)(this + 16) = v3;
    char v2 = *((unsigned char *)a2 + 24);
  }
  if ((v2 & 2) != 0)
  {
    char v4 = *((unsigned char *)a2 + 20);
    *(unsigned char *)(this + 24) |= 2u;
    *(unsigned char *)(this + 20) = v4;
  }
  return this;
}

uint64_t CMMsl::MagneticAccessoryType1::operator=(uint64_t a1, const CMMsl::MagneticAccessoryType1 *a2)
{
  if ((const CMMsl::MagneticAccessoryType1 *)a1 != a2)
  {
    CMMsl::MagneticAccessoryType1::MagneticAccessoryType1((uint64_t)&v6, a2);
    int v3 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 24) = v10;
    int v10 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v7;
    uint64_t v7 = v4;
    LODWORD(v4) = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v8;
    int v8 = v4;
    LOBYTE(v4) = *(unsigned char *)(a1 + 20);
    *(unsigned char *)(a1 + 20) = v9;
    char v9 = v4;
    CMMsl::MagneticAccessoryType1::~MagneticAccessoryType1((CMMsl::MagneticAccessoryType1 *)&v6);
  }
  return a1;
}

uint64_t CMMsl::swap(uint64_t this, CMMsl::MagneticAccessoryType1 *a2, CMMsl::MagneticAccessoryType1 *a3)
{
  int v3 = *(_DWORD *)(this + 24);
  *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v3;
  uint64_t v4 = *(void *)(this + 8);
  *(void *)(this + 8) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  LODWORD(v4) = *(_DWORD *)(this + 16);
  *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v4;
  LOBYTE(v4) = *(unsigned char *)(this + 20);
  *(unsigned char *)(this + 20) = *((unsigned char *)a2 + 20);
  *((unsigned char *)a2 + 20) = v4;
  return this;
}

uint64_t CMMsl::MagneticAccessoryType1::MagneticAccessoryType1(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270643198;
  *(void *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a2 + 24) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  if (v5) {
    sub_2572C6E48(v5);
  }
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  return a1;
}

uint64_t CMMsl::MagneticAccessoryType1::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    CMMsl::MagneticAccessoryType1::MagneticAccessoryType1((uint64_t)&v6, a2);
    int v3 = *(_DWORD *)(a1 + 24);
    *(_DWORD *)(a1 + 24) = v10;
    int v10 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v7;
    uint64_t v7 = v4;
    LODWORD(v4) = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v8;
    int v8 = v4;
    LOBYTE(v4) = *(unsigned char *)(a1 + 20);
    *(unsigned char *)(a1 + 20) = v9;
    char v9 = v4;
    CMMsl::MagneticAccessoryType1::~MagneticAccessoryType1((CMMsl::MagneticAccessoryType1 *)&v6);
  }
  return a1;
}

uint64_t CMMsl::MagneticAccessoryType1::formatText(CMMsl::MagneticAccessoryType1 *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 24);
  if (v5)
  {
    PB::TextFormatter::format(a2, "accessoryType");
    char v5 = *((unsigned char *)this + 24);
  }
  if ((v5 & 2) != 0) {
    PB::TextFormatter::format(a2, "isAttached");
  }
  if (*((void *)this + 1)) {
    PB::TextFormatter::format();
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::MagneticAccessoryType1::readFrom(CMMsl::MagneticAccessoryType1 *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_25;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      unint64_t v19 = v11 >> 3;
      if ((v11 >> 3) == 3)
      {
        *((unsigned char *)this + 24) |= 2u;
        unint64_t v22 = *((void *)a2 + 1);
        if (v22 >= *((void *)a2 + 2))
        {
          BOOL v25 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v23 = v22 + 1;
          int v24 = *(unsigned __int8 *)(*(void *)a2 + v22);
          *((void *)a2 + 1) = v23;
          BOOL v25 = v24 != 0;
        }
        *((unsigned char *)this + 20) = v25;
      }
      else if (v19 == 2)
      {
        *((unsigned char *)this + 24) |= 1u;
        unint64_t v26 = *((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        uint64_t v28 = *(void *)a2;
        if (v26 > 0xFFFFFFFFFFFFFFF5 || v26 + 10 > v27)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v31 = 0;
          if (v27 <= v26) {
            unint64_t v27 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v27 == v26)
            {
              LODWORD(v31) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_52;
            }
            unint64_t v36 = v26 + 1;
            char v37 = *(unsigned char *)(v28 + v26);
            *((void *)a2 + 1) = v36;
            v31 |= (unint64_t)(v37 & 0x7F) << v34;
            if ((v37 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            unint64_t v26 = v36;
            BOOL v14 = v35++ > 8;
            if (v14)
            {
LABEL_48:
              LODWORD(v31) = 0;
              goto LABEL_52;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v31) = 0;
          }
        }
        else
        {
          char v29 = 0;
          unsigned int v30 = 0;
          uint64_t v31 = 0;
          while (1)
          {
            unint64_t v32 = v26 + 1;
            *((void *)a2 + 1) = v26 + 1;
            char v33 = *(unsigned char *)(v28 + v26);
            v31 |= (unint64_t)(v33 & 0x7F) << v29;
            if ((v33 & 0x80) == 0) {
              break;
            }
            v29 += 7;
            unint64_t v26 = v32;
            BOOL v14 = v30++ > 8;
            if (v14) {
              goto LABEL_48;
            }
          }
        }
LABEL_52:
        *((_DWORD *)this + 4) = v31;
      }
      else
      {
        if (v19 == 1) {
          operator new();
        }
LABEL_25:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
      }
      unint64_t v2 = *((void *)a2 + 1);
      unint64_t v3 = *((void *)a2 + 2);
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || v4 != 0) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_25;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::MagneticAccessoryType1::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  if (*(void *)(this + 8)) {
    this = PB::Writer::write();
  }
  char v4 = *(unsigned char *)(v3 + 24);
  if (v4)
  {
    this = PB::Writer::writeVarInt(a2);
    char v4 = *(unsigned char *)(v3 + 24);
  }
  if ((v4 & 2) != 0)
  {
    return PB::Writer::write(a2);
  }
  return this;
}

unint64_t CMMsl::MagneticAccessoryType1::hash_value(CMMsl::MagneticAccessoryType1 *this)
{
  unint64_t v2 = *((void *)this + 1);
  if (v2) {
    unint64_t v2 = sub_2572C6F9C(v2);
  }
  if (*((unsigned char *)this + 24))
  {
    uint64_t v3 = *((unsigned int *)this + 4);
    if ((*((unsigned char *)this + 24) & 2) != 0) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v4 = 0;
    return v3 ^ v2 ^ v4;
  }
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 24) & 2) == 0) {
    goto LABEL_7;
  }
LABEL_5:
  uint64_t v4 = *((unsigned __int8 *)this + 20);
  return v3 ^ v2 ^ v4;
}

void CMMsl::MagneticAccessoryType2::~MagneticAccessoryType2(CMMsl::MagneticAccessoryType2 *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::MagneticAccessoryType2::MagneticAccessoryType2(uint64_t this, const CMMsl::MagneticAccessoryType2 *a2)
{
  *(void *)this = &unk_2706431D0;
  *(_DWORD *)(this + 12) = 0;
  if (*((unsigned char *)a2 + 12))
  {
    char v2 = *((unsigned char *)a2 + 8);
    *(unsigned char *)(this + 12) = 1;
    *(unsigned char *)(this + 8) = v2;
  }
  return this;
}

uint64_t CMMsl::MagneticAccessoryType2::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v7 = &unk_2706431D0;
    char v3 = *(unsigned char *)(a2 + 8);
    int v4 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 12) = *(unsigned char *)(a2 + 12) & 1;
    int v9 = v4;
    char v5 = *(unsigned char *)(a1 + 8);
    *(unsigned char *)(a1 + 8) = v3;
    char v8 = v5;
    PB::Base::~Base((PB::Base *)&v7);
  }
  return a1;
}

{
  int v3;
  char v4;
  int v5;
  void *v7;
  char v8;
  int v9;

  if (a1 != a2)
  {
    uint64_t v7 = &unk_2706431D0;
    char v3 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a2 + 12) = 0;
    int v4 = *(unsigned char *)(a2 + 8);
    char v5 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a1 + 12) = v3;
    int v9 = v5;
    LOBYTE(v3) = *(unsigned char *)(a1 + 8);
    *(unsigned char *)(a1 + 8) = v4;
    char v8 = v3;
    PB::Base::~Base((PB::Base *)&v7);
  }
  return a1;
}

uint64_t CMMsl::swap(uint64_t this, CMMsl::MagneticAccessoryType2 *a2, CMMsl::MagneticAccessoryType2 *a3)
{
  int v3 = *(_DWORD *)(this + 12);
  *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
  *((_DWORD *)a2 + 3) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 8);
  *(unsigned char *)(this + 8) = *((unsigned char *)a2 + 8);
  *((unsigned char *)a2 + 8) = v3;
  return this;
}

uint64_t CMMsl::MagneticAccessoryType2::formatText(CMMsl::MagneticAccessoryType2 *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  if (*((unsigned char *)this + 12)) {
    PB::TextFormatter::format(a2, "isCharging");
  }
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::MagneticAccessoryType2::readFrom(CMMsl::MagneticAccessoryType2 *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
        break;
      }
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_24;
        }
      }
LABEL_20:
      if ((v11 & 7) == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      if ((v11 >> 3) == 1)
      {
        *((unsigned char *)this + 12) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        unint64_t v3 = *((void *)a2 + 2);
        if (v2 >= v3)
        {
          BOOL v20 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v19 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v20 = v19 != 0;
        }
        *((unsigned char *)this + 8) = v20;
      }
      else
      {
LABEL_24:
        uint64_t result = PB::Reader::skip(a2);
        if (!result) {
          return result;
        }
        unint64_t v2 = *((void *)a2 + 1);
        unint64_t v3 = *((void *)a2 + 2);
      }
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    while (v3 != v2)
    {
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_20;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
      if (v14) {
        goto LABEL_24;
      }
    }
    int v4 = 1;
    *((unsigned char *)a2 + 24) = 1;
  }
  return v4 == 0;
}

uint64_t CMMsl::MagneticAccessoryType2::writeTo(uint64_t this, PB::Writer *a2)
{
  if (*(unsigned char *)(this + 12)) {
    return PB::Writer::write(a2);
  }
  return this;
}

uint64_t CMMsl::MagneticAccessoryType2::hash_value(CMMsl::MagneticAccessoryType2 *this)
{
  if (*((unsigned char *)this + 12)) {
    return *((unsigned __int8 *)this + 8);
  }
  else {
    return 0;
  }
}

void CMMsl::Magnetometer::~Magnetometer(CMMsl::Magnetometer *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::Magnetometer::Magnetometer(uint64_t this, const CMMsl::Magnetometer *a2)
{
  *(void *)this = &unk_270643208;
  *(_DWORD *)(this + 36) = 0;
  char v2 = *((unsigned char *)a2 + 36);
  if (v2)
  {
    uint64_t v4 = *((void *)a2 + 1);
    char v3 = 1;
    *(unsigned char *)(this + 36) = 1;
    *(void *)(this + 8) = v4;
    char v2 = *((unsigned char *)a2 + 36);
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 36) & 8) != 0)
  {
LABEL_5:
    int v5 = *((_DWORD *)a2 + 6);
    v3 |= 8u;
    *(unsigned char *)(this + 36) = v3;
    *(_DWORD *)(this + 24) = v5;
    char v2 = *((unsigned char *)a2 + 36);
  }
LABEL_6:
  if ((v2 & 0x10) != 0)
  {
    int v6 = *((_DWORD *)a2 + 7);
    v3 |= 0x10u;
    *(unsigned char *)(this + 36) = v3;
    *(_DWORD *)(this + 28) = v6;
    char v2 = *((unsigned char *)a2 + 36);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  int v7 = *((_DWORD *)a2 + 8);
  v3 |= 0x20u;
  *(unsigned char *)(this + 36) = v3;
  *(_DWORD *)(this + 32) = v7;
  char v2 = *((unsigned char *)a2 + 36);
  if ((v2 & 4) == 0)
  {
LABEL_9:
    if ((v2 & 2) == 0) {
      return this;
    }
LABEL_14:
    int v9 = *((_DWORD *)a2 + 4);
    *(unsigned char *)(this + 36) = v3 | 2;
    *(_DWORD *)(this + 16) = v9;
    return this;
  }
LABEL_13:
  int v8 = *((_DWORD *)a2 + 5);
  v3 |= 4u;
  *(unsigned char *)(this + 36) = v3;
  *(_DWORD *)(this + 20) = v8;
  if ((*((unsigned char *)a2 + 36) & 2) != 0) {
    goto LABEL_14;
  }
  return this;
}

uint64_t CMMsl::Magnetometer::operator=(uint64_t a1, const CMMsl::Magnetometer *a2)
{
  if ((const CMMsl::Magnetometer *)a1 != a2)
  {
    CMMsl::Magnetometer::Magnetometer((uint64_t)v8, a2);
    int v3 = *(_DWORD *)(a1 + 36);
    *(_DWORD *)(a1 + 36) = v12;
    int v12 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v9;
    uint64_t v9 = v4;
    long long v5 = *(_OWORD *)(a1 + 20);
    *(_OWORD *)(a1 + 20) = v11;
    long long v11 = v5;
    int v6 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v10;
    int v10 = v6;
    PB::Base::~Base((PB::Base *)v8);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::Magnetometer *a2, CMMsl::Magnetometer *a3)
{
  int v3 = *((_DWORD *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((_DWORD *)a2 + 9) = v3;
  uint64_t v4 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v4;
  LODWORD(v4) = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v4;
  LODWORD(v4) = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v4;
  LODWORD(v4) = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v4;
  float result = *((float *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((float *)a2 + 5) = result;
  int v6 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v6;
  return result;
}

float CMMsl::Magnetometer::Magnetometer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270643208;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a2 + 36) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  float result = *(float *)(a2 + 20);
  *(float *)(a1 + 20) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

{
  float result;

  *(void *)a1 = &unk_270643208;
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a2 + 36) = 0;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  float result = *(float *)(a2 + 20);
  *(float *)(a1 + 20) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return result;
}

uint64_t CMMsl::Magnetometer::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    v11[0] = &unk_270643208;
    int v3 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a2 + 36) = 0;
    uint64_t v4 = *(void *)(a2 + 8);
    int v5 = *(_DWORD *)(a2 + 16);
    int v14 = *(_DWORD *)(a1 + 36);
    uint64_t v6 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v4;
    v11[1] = v6;
    long long v7 = *(_OWORD *)(a1 + 20);
    long long v8 = *(_OWORD *)(a2 + 20);
    *(_DWORD *)(a1 + 36) = v3;
    *(_OWORD *)(a1 + 20) = v8;
    long long v13 = v7;
    int v9 = *(_DWORD *)(a1 + 16);
    *(_DWORD *)(a1 + 16) = v5;
    int v12 = v9;
    PB::Base::~Base((PB::Base *)v11);
  }
  return a1;
}

uint64_t CMMsl::Magnetometer::formatText(CMMsl::Magnetometer *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 36);
  if ((v5 & 2) != 0)
  {
    PB::TextFormatter::format(a2, "location");
    char v5 = *((unsigned char *)this + 36);
    if ((v5 & 4) == 0)
    {
LABEL_3:
      if ((v5 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((*((unsigned char *)this + 36) & 4) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "temperature", *((float *)this + 5));
  char v5 = *((unsigned char *)this + 36);
  if ((v5 & 1) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "timestamp", *((double *)this + 1));
  char v5 = *((unsigned char *)this + 36);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(a2, "x", *((float *)this + 6));
  char v5 = *((unsigned char *)this + 36);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_15:
  PB::TextFormatter::format(a2, "y", *((float *)this + 7));
  if ((*((unsigned char *)this + 36) & 0x20) != 0) {
LABEL_7:
  }
    PB::TextFormatter::format(a2, "z", *((float *)this + 8));
LABEL_8:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::Magnetometer::readFrom(CMMsl::Magnetometer *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_60;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 36) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFF7 || v2 + 8 > *((void *)a2 + 2)) {
          goto LABEL_37;
        }
        *((void *)this + 1) = *(void *)(*(void *)a2 + v2);
        unint64_t v2 = *((void *)a2 + 1) + 8;
        goto LABEL_54;
      case 2u:
        *((unsigned char *)this + 36) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_37;
        }
        *((_DWORD *)this + 6) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_53;
      case 3u:
        *((unsigned char *)this + 36) |= 0x10u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_37;
        }
        *((_DWORD *)this + 7) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_53;
      case 4u:
        *((unsigned char *)this + 36) |= 0x20u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_37;
        }
        *((_DWORD *)this + 8) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_53;
      case 5u:
        *((unsigned char *)this + 36) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 5) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_53:
          unint64_t v2 = *((void *)a2 + 1) + 4;
LABEL_54:
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_37:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 6u:
        *((unsigned char *)this + 36) |= 2u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_59;
            }
            unint64_t v28 = v20++;
            char v29 = *(unsigned char *)(v21 + v28);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v29 & 0x7F) << v26;
            if ((v29 & 0x80) == 0) {
              break;
            }
            v26 += 7;
            BOOL v14 = v27++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
LABEL_58:
              unint64_t v2 = v28 + 1;
              goto LABEL_59;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v24) = 0;
          }
          goto LABEL_58;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_59;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        LODWORD(v24) = 0;
LABEL_59:
        *((_DWORD *)this + 4) = v24;
        break;
      default:
        goto LABEL_19;
    }
LABEL_60:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::Magnetometer::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 36);
  if (v4)
  {
    this = PB::Writer::write(a2, *(double *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_3:
      if ((v4 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((*(unsigned char *)(this + 36) & 8) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 24));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x10) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  this = PB::Writer::write(a2, *(float *)(v3 + 28));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    this = PB::Writer::write(a2, *(float *)(v3 + 20));
    if ((*(unsigned char *)(v3 + 36) & 2) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_11:
  this = PB::Writer::write(a2, *(float *)(v3 + 32));
  char v4 = *(unsigned char *)(v3 + 36);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v4 & 2) == 0) {
    return this;
  }
LABEL_13:
  return PB::Writer::writeVarInt(a2);
}

uint64_t CMMsl::Magnetometer::hash_value(CMMsl::Magnetometer *this)
{
  if ((*((unsigned char *)this + 36) & 1) == 0)
  {
    double v1 = 0.0;
    if ((*((unsigned char *)this + 36) & 8) != 0) {
      goto LABEL_3;
    }
LABEL_19:
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 36) & 0x10) != 0) {
      goto LABEL_6;
    }
LABEL_20:
    uint64_t v5 = 0;
    if ((*((unsigned char *)this + 36) & 0x20) != 0) {
      goto LABEL_9;
    }
LABEL_21:
    uint64_t v7 = 0;
    if ((*((unsigned char *)this + 36) & 4) != 0) {
      goto LABEL_12;
    }
    goto LABEL_22;
  }
  double v1 = *((double *)this + 1);
  if (v1 == 0.0) {
    double v1 = 0.0;
  }
  if ((*((unsigned char *)this + 36) & 8) == 0) {
    goto LABEL_19;
  }
LABEL_3:
  float v2 = *((float *)this + 6);
  uint64_t v3 = LODWORD(v2);
  if (v2 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((unsigned char *)this + 36) & 0x10) == 0) {
    goto LABEL_20;
  }
LABEL_6:
  float v4 = *((float *)this + 7);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  if ((*((unsigned char *)this + 36) & 0x20) == 0) {
    goto LABEL_21;
  }
LABEL_9:
  float v6 = *((float *)this + 8);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  if ((*((unsigned char *)this + 36) & 4) != 0)
  {
LABEL_12:
    float v8 = *((float *)this + 5);
    uint64_t v9 = LODWORD(v8);
    if (v8 == 0.0) {
      uint64_t v9 = 0;
    }
    if ((*((unsigned char *)this + 36) & 2) != 0) {
      goto LABEL_15;
    }
LABEL_23:
    uint64_t v10 = 0;
    return v3 ^ *(void *)&v1 ^ v5 ^ v7 ^ v9 ^ v10;
  }
LABEL_22:
  uint64_t v9 = 0;
  if ((*((unsigned char *)this + 36) & 2) == 0) {
    goto LABEL_23;
  }
LABEL_15:
  uint64_t v10 = *((int *)this + 4);
  return v3 ^ *(void *)&v1 ^ v5 ^ v7 ^ v9 ^ v10;
}

void CMMsl::MagnetometerCalibratorFilterParameters::~MagnetometerCalibratorFilterParameters(CMMsl::MagnetometerCalibratorFilterParameters *this)
{
  *(void *)this = &unk_270643240;
  float v2 = (void *)*((void *)this + 10);
  if (v2)
  {
    *((void *)this + 11) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 7);
  if (v3)
  {
    *((void *)this + 8) = v3;
    operator delete(v3);
  }
  float v4 = (void *)*((void *)this + 4);
  if (v4)
  {
    *((void *)this + 5) = v4;
    operator delete(v4);
  }
  uint64_t v5 = (void *)*((void *)this + 1);
  if (v5)
  {
    *((void *)this + 2) = v5;
    operator delete(v5);
  }
  PB::Base::~Base(this);
}

{
  uint64_t vars8;

  CMMsl::MagnetometerCalibratorFilterParameters::~MagnetometerCalibratorFilterParameters(this);
  JUMPOUT(0x25A2B2850);
}

CMMsl::MagnetometerCalibratorFilterParameters *CMMsl::MagnetometerCalibratorFilterParameters::MagnetometerCalibratorFilterParameters(CMMsl::MagnetometerCalibratorFilterParameters *this, const CMMsl::MagnetometerCalibratorFilterParameters *a2)
{
  *(void *)this = &unk_270643240;
  *(_OWORD *)((char *)this + 8) = 0u;
  float v4 = (void *)((char *)this + 8);
  *(_OWORD *)((char *)this + 56) = 0u;
  uint64_t v5 = (void *)((char *)this + 56);
  *((_DWORD *)this + 28) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  if (*((unsigned char *)a2 + 112))
  {
    uint64_t v6 = *((void *)a2 + 13);
    *((unsigned char *)this + 112) = 1;
    *((void *)this + 13) = v6;
  }
  if (this != a2)
  {
    sub_2572C75B4((void *)this + 4, *((char **)a2 + 4), *((char **)a2 + 5), (uint64_t)(*((void *)a2 + 5) - *((void *)a2 + 4)) >> 2);
    sub_2572C75B4(v4, *((char **)a2 + 1), *((char **)a2 + 2), (uint64_t)(*((void *)a2 + 2) - *((void *)a2 + 1)) >> 2);
    sub_2572C75B4((void *)this + 10, *((char **)a2 + 10), *((char **)a2 + 11), (uint64_t)(*((void *)a2 + 11) - *((void *)a2 + 10)) >> 2);
    sub_2572C75B4(v5, *((char **)a2 + 7), *((char **)a2 + 8), (uint64_t)(*((void *)a2 + 8) - *((void *)a2 + 7)) >> 2);
  }
  return this;
}

CMMsl *CMMsl::MagnetometerCalibratorFilterParameters::operator=(CMMsl *a1, const CMMsl::MagnetometerCalibratorFilterParameters *a2)
{
  if (a1 != a2)
  {
    CMMsl::MagnetometerCalibratorFilterParameters::MagnetometerCalibratorFilterParameters((CMMsl::MagnetometerCalibratorFilterParameters *)v5, a2);
    CMMsl::swap(a1, (CMMsl::MagnetometerCalibratorFilterParameters *)v5, v3);
    CMMsl::MagnetometerCalibratorFilterParameters::~MagnetometerCalibratorFilterParameters((CMMsl::MagnetometerCalibratorFilterParameters *)v5);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::MagnetometerCalibratorFilterParameters *a2, CMMsl::MagnetometerCalibratorFilterParameters *a3)
{
  int v3 = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v3;
  double result = *((double *)this + 13);
  *((void *)this + 13) = *((void *)a2 + 13);
  *((double *)a2 + 13) = result;
  uint64_t v5 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v5;
  uint64_t v6 = *((void *)this + 5);
  *((void *)this + 5) = *((void *)a2 + 5);
  *((void *)a2 + 5) = v6;
  uint64_t v7 = *((void *)this + 6);
  *((void *)this + 6) = *((void *)a2 + 6);
  *((void *)a2 + 6) = v7;
  uint64_t v8 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v8;
  uint64_t v9 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v9;
  uint64_t v10 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v10;
  uint64_t v11 = *((void *)this + 10);
  *((void *)this + 10) = *((void *)a2 + 10);
  *((void *)a2 + 10) = v11;
  uint64_t v12 = *((void *)this + 11);
  *((void *)this + 11) = *((void *)a2 + 11);
  *((void *)a2 + 11) = v12;
  uint64_t v13 = *((void *)this + 12);
  *((void *)this + 12) = *((void *)a2 + 12);
  *((void *)a2 + 12) = v13;
  uint64_t v14 = *((void *)this + 7);
  *((void *)this + 7) = *((void *)a2 + 7);
  *((void *)a2 + 7) = v14;
  uint64_t v15 = *((void *)this + 8);
  *((void *)this + 8) = *((void *)a2 + 8);
  *((void *)a2 + 8) = v15;
  uint64_t v16 = *((void *)this + 9);
  *((void *)this + 9) = *((void *)a2 + 9);
  *((void *)a2 + 9) = v16;
  return result;
}

uint64_t CMMsl::MagnetometerCalibratorFilterParameters::MagnetometerCalibratorFilterParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270643240;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a2 + 112) = 0;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  sub_2572C7560(a1 + 32, (__n128 *)(a2 + 32));
  sub_2572C7560(a1 + 8, (__n128 *)(a2 + 8));
  sub_2572C7560(a1 + 80, (__n128 *)(a2 + 80));
  sub_2572C7560(a1 + 56, (__n128 *)(a2 + 56));
  return a1;
}

CMMsl *CMMsl::MagnetometerCalibratorFilterParameters::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::MagnetometerCalibratorFilterParameters::MagnetometerCalibratorFilterParameters((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::MagnetometerCalibratorFilterParameters *)v5, v3);
    CMMsl::MagnetometerCalibratorFilterParameters::~MagnetometerCalibratorFilterParameters((CMMsl::MagnetometerCalibratorFilterParameters *)v5);
  }
  return a1;
}

uint64_t CMMsl::MagnetometerCalibratorFilterParameters::formatText(CMMsl::MagnetometerCalibratorFilterParameters *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  uint64_t v5 = (float *)*((void *)this + 4);
  uint64_t v6 = (float *)*((void *)this + 5);
  while (v5 != v6)
  {
    float v7 = *v5++;
    PB::TextFormatter::format(a2, "biasEst", v7);
  }
  uint64_t v8 = (float *)*((void *)this + 1);
  uint64_t v9 = (float *)*((void *)this + 2);
  while (v8 != v9)
  {
    float v10 = *v8++;
    PB::TextFormatter::format(a2, "biasEstVar", v10);
  }
  uint64_t v11 = (float *)*((void *)this + 7);
  uint64_t v12 = (float *)*((void *)this + 8);
  while (v11 != v12)
  {
    float v13 = *v11++;
    PB::TextFormatter::format(a2, "residual", v13);
  }
  uint64_t v14 = (float *)*((void *)this + 10);
  uint64_t v15 = (float *)*((void *)this + 11);
  while (v14 != v15)
  {
    float v16 = *v14++;
    PB::TextFormatter::format(a2, "temperature", v16);
  }
  if (*((unsigned char *)this + 112)) {
    PB::TextFormatter::format(a2, "timestamp", *((double *)this + 13));
  }
  return MEMORY[0x270F587F0](a2);
}

BOOL CMMsl::MagnetometerCalibratorFilterParameters::readFrom(CMMsl::MagnetometerCalibratorFilterParameters *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 <= 0xFFFFFFFFFFFFFFF5 && v2 + 10 <= v3)
    {
      char v9 = 0;
      unsigned int v10 = 0;
      unint64_t v11 = 0;
      while (1)
      {
        unint64_t v12 = v2 + 1;
        *((void *)a2 + 1) = v2 + 1;
        char v13 = *(unsigned char *)(v8 + v2);
        v11 |= (unint64_t)(v13 & 0x7F) << v9;
        if ((v13 & 0x80) == 0) {
          break;
        }
        v9 += 7;
        unint64_t v2 = v12;
        BOOL v14 = v10++ > 8;
        if (v14) {
          goto LABEL_19;
        }
      }
LABEL_21:
      int v19 = v11 & 7;
      if (v19 == 4)
      {
        int v4 = 0;
        return v4 == 0;
      }
      switch((v11 >> 3))
      {
        case 1u:
          *((unsigned char *)this + 112) |= 1u;
          unint64_t v20 = *((void *)a2 + 1);
          if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)a2 + 2)) {
            goto LABEL_194;
          }
          *((void *)this + 13) = *(void *)(*(void *)a2 + v20);
          uint64_t v21 = *((void *)a2 + 1) + 8;
          goto LABEL_196;
        case 2u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v22 = *((void *)a2 + 1);
            unint64_t v23 = *((void *)a2 + 2);
            while (v22 < v23 && !*((unsigned char *)a2 + 24))
            {
              char v25 = (char *)*((void *)this + 5);
              unint64_t v24 = *((void *)this + 6);
              if ((unint64_t)v25 >= v24)
              {
                unsigned int v27 = (char *)*((void *)this + 4);
                uint64_t v28 = (v25 - v27) >> 2;
                unint64_t v29 = v28 + 1;
                if ((unint64_t)(v28 + 1) >> 62) {
                  goto LABEL_204;
                }
                uint64_t v30 = v24 - (void)v27;
                if (v30 >> 1 > v29) {
                  unint64_t v29 = v30 >> 1;
                }
                if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v31 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v31 = v29;
                }
                if (v31)
                {
                  unint64_t v31 = (unint64_t)sub_2572C76F0(v31);
                  unsigned int v27 = (char *)*((void *)this + 4);
                  char v25 = (char *)*((void *)this + 5);
                }
                else
                {
                  uint64_t v32 = 0;
                }
                char v33 = (_DWORD *)(v31 + 4 * v28);
                *char v33 = 0;
                char v26 = v33 + 1;
                while (v25 != v27)
                {
                  int v34 = *((_DWORD *)v25 - 1);
                  v25 -= 4;
                  *--char v33 = v34;
                }
                *((void *)this + 4) = v33;
                *((void *)this + 5) = v26;
                *((void *)this + 6) = v31 + 4 * v32;
                if (v27) {
                  operator delete(v27);
                }
              }
              else
              {
                *(_DWORD *)char v25 = 0;
                char v26 = v25 + 4;
              }
              *((void *)this + 5) = v26;
              unint64_t v35 = *((void *)a2 + 1);
              if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)a2 + 2)) {
                goto LABEL_122;
              }
              *(v26 - 1) = *(_DWORD *)(*(void *)a2 + v35);
              unint64_t v23 = *((void *)a2 + 2);
              unint64_t v22 = *((void *)a2 + 1) + 4;
              *((void *)a2 + 1) = v22;
            }
            goto LABEL_123;
          }
          unint64_t v79 = (char *)*((void *)this + 5);
          unint64_t v78 = *((void *)this + 6);
          if ((unint64_t)v79 >= v78)
          {
            unint64_t v87 = (char *)*((void *)this + 4);
            uint64_t v88 = (v79 - v87) >> 2;
            unint64_t v89 = v88 + 1;
            if ((unint64_t)(v88 + 1) >> 62) {
              goto LABEL_204;
            }
            uint64_t v90 = v78 - (void)v87;
            if (v90 >> 1 > v89) {
              unint64_t v89 = v90 >> 1;
            }
            if ((unint64_t)v90 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v91 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v91 = v89;
            }
            if (v91)
            {
              unint64_t v91 = (unint64_t)sub_2572C76F0(v91);
              unint64_t v87 = (char *)*((void *)this + 4);
              unint64_t v79 = (char *)*((void *)this + 5);
            }
            else
            {
              uint64_t v92 = 0;
            }
            unint64_t v111 = (_DWORD *)(v91 + 4 * v88);
            *unint64_t v111 = 0;
            char v80 = v111 + 1;
            while (v79 != v87)
            {
              int v112 = *((_DWORD *)v79 - 1);
              v79 -= 4;
              *--unint64_t v111 = v112;
            }
            *((void *)this + 4) = v111;
            *((void *)this + 5) = v80;
            *((void *)this + 6) = v91 + 4 * v92;
            if (v87) {
              operator delete(v87);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v79 = 0;
            char v80 = v79 + 4;
          }
          *((void *)this + 5) = v80;
          goto LABEL_192;
        case 3u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v36 = *((void *)a2 + 1);
            unint64_t v37 = *((void *)a2 + 2);
            while (v36 < v37 && !*((unsigned char *)a2 + 24))
            {
              char v39 = (char *)*((void *)this + 2);
              unint64_t v38 = *((void *)this + 3);
              if ((unint64_t)v39 >= v38)
              {
                char v41 = (char *)*((void *)this + 1);
                uint64_t v42 = (v39 - v41) >> 2;
                unint64_t v43 = v42 + 1;
                if ((unint64_t)(v42 + 1) >> 62) {
                  goto LABEL_204;
                }
                uint64_t v44 = v38 - (void)v41;
                if (v44 >> 1 > v43) {
                  unint64_t v43 = v44 >> 1;
                }
                if ((unint64_t)v44 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v45 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v45 = v43;
                }
                if (v45)
                {
                  unint64_t v45 = (unint64_t)sub_2572C76F0(v45);
                  char v41 = (char *)*((void *)this + 1);
                  char v39 = (char *)*((void *)this + 2);
                }
                else
                {
                  uint64_t v46 = 0;
                }
                unsigned int v47 = (_DWORD *)(v45 + 4 * v42);
                *unsigned int v47 = 0;
                unint64_t v40 = v47 + 1;
                while (v39 != v41)
                {
                  int v48 = *((_DWORD *)v39 - 1);
                  v39 -= 4;
                  *--unsigned int v47 = v48;
                }
                *((void *)this + 1) = v47;
                *((void *)this + 2) = v40;
                *((void *)this + 3) = v45 + 4 * v46;
                if (v41) {
                  operator delete(v41);
                }
              }
              else
              {
                *(_DWORD *)char v39 = 0;
                unint64_t v40 = v39 + 4;
              }
              *((void *)this + 2) = v40;
              unint64_t v49 = *((void *)a2 + 1);
              if (v49 > 0xFFFFFFFFFFFFFFFBLL || v49 + 4 > *((void *)a2 + 2)) {
                goto LABEL_122;
              }
              *(v40 - 1) = *(_DWORD *)(*(void *)a2 + v49);
              unint64_t v37 = *((void *)a2 + 2);
              unint64_t v36 = *((void *)a2 + 1) + 4;
              *((void *)a2 + 1) = v36;
            }
            goto LABEL_123;
          }
          unint64_t v82 = (char *)*((void *)this + 2);
          unint64_t v81 = *((void *)this + 3);
          if ((unint64_t)v82 >= v81)
          {
            char v93 = (char *)*((void *)this + 1);
            uint64_t v94 = (v82 - v93) >> 2;
            unint64_t v95 = v94 + 1;
            if ((unint64_t)(v94 + 1) >> 62) {
              goto LABEL_204;
            }
            uint64_t v96 = v81 - (void)v93;
            if (v96 >> 1 > v95) {
              unint64_t v95 = v96 >> 1;
            }
            if ((unint64_t)v96 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v97 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v97 = v95;
            }
            if (v97)
            {
              unint64_t v97 = (unint64_t)sub_2572C76F0(v97);
              char v93 = (char *)*((void *)this + 1);
              unint64_t v82 = (char *)*((void *)this + 2);
            }
            else
            {
              uint64_t v98 = 0;
            }
            char v113 = (_DWORD *)(v97 + 4 * v94);
            *char v113 = 0;
            char v80 = v113 + 1;
            while (v82 != v93)
            {
              int v114 = *((_DWORD *)v82 - 1);
              v82 -= 4;
              *--char v113 = v114;
            }
            *((void *)this + 1) = v113;
            *((void *)this + 2) = v80;
            *((void *)this + 3) = v97 + 4 * v98;
            if (v93) {
              operator delete(v93);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v82 = 0;
            char v80 = v82 + 4;
          }
          *((void *)this + 2) = v80;
          goto LABEL_192;
        case 4u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v50 = *((void *)a2 + 1);
            unint64_t v51 = *((void *)a2 + 2);
            while (v50 < v51 && !*((unsigned char *)a2 + 24))
            {
              char v53 = (char *)*((void *)this + 11);
              unint64_t v52 = *((void *)this + 12);
              if ((unint64_t)v53 >= v52)
              {
                char v55 = (char *)*((void *)this + 10);
                uint64_t v56 = (v53 - v55) >> 2;
                unint64_t v57 = v56 + 1;
                if ((unint64_t)(v56 + 1) >> 62) {
                  goto LABEL_204;
                }
                uint64_t v58 = v52 - (void)v55;
                if (v58 >> 1 > v57) {
                  unint64_t v57 = v58 >> 1;
                }
                if ((unint64_t)v58 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v59 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v59 = v57;
                }
                if (v59)
                {
                  unint64_t v59 = (unint64_t)sub_2572C76F0(v59);
                  char v55 = (char *)*((void *)this + 10);
                  char v53 = (char *)*((void *)this + 11);
                }
                else
                {
                  uint64_t v60 = 0;
                }
                unint64_t v61 = (_DWORD *)(v59 + 4 * v56);
                *unint64_t v61 = 0;
                char v54 = v61 + 1;
                while (v53 != v55)
                {
                  int v62 = *((_DWORD *)v53 - 1);
                  v53 -= 4;
                  *--unint64_t v61 = v62;
                }
                *((void *)this + 10) = v61;
                *((void *)this + 11) = v54;
                *((void *)this + 12) = v59 + 4 * v60;
                if (v55) {
                  operator delete(v55);
                }
              }
              else
              {
                *(_DWORD *)char v53 = 0;
                char v54 = v53 + 4;
              }
              *((void *)this + 11) = v54;
              unint64_t v63 = *((void *)a2 + 1);
              if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > *((void *)a2 + 2)) {
                goto LABEL_122;
              }
              *(v54 - 1) = *(_DWORD *)(*(void *)a2 + v63);
              unint64_t v51 = *((void *)a2 + 2);
              unint64_t v50 = *((void *)a2 + 1) + 4;
              *((void *)a2 + 1) = v50;
            }
            goto LABEL_123;
          }
          unint64_t v84 = (char *)*((void *)this + 11);
          unint64_t v83 = *((void *)this + 12);
          if ((unint64_t)v84 >= v83)
          {
            unsigned int v99 = (char *)*((void *)this + 10);
            uint64_t v100 = (v84 - v99) >> 2;
            unint64_t v101 = v100 + 1;
            if ((unint64_t)(v100 + 1) >> 62) {
              goto LABEL_204;
            }
            uint64_t v102 = v83 - (void)v99;
            if (v102 >> 1 > v101) {
              unint64_t v101 = v102 >> 1;
            }
            if ((unint64_t)v102 >= 0x7FFFFFFFFFFFFFFCLL) {
              unint64_t v103 = 0x3FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v103 = v101;
            }
            if (v103)
            {
              unint64_t v103 = (unint64_t)sub_2572C76F0(v103);
              unsigned int v99 = (char *)*((void *)this + 10);
              unint64_t v84 = (char *)*((void *)this + 11);
            }
            else
            {
              uint64_t v104 = 0;
            }
            unint64_t v115 = (_DWORD *)(v103 + 4 * v100);
            *unint64_t v115 = 0;
            char v80 = v115 + 1;
            while (v84 != v99)
            {
              int v116 = *((_DWORD *)v84 - 1);
              v84 -= 4;
              *--unint64_t v115 = v116;
            }
            *((void *)this + 10) = v115;
            *((void *)this + 11) = v80;
            *((void *)this + 12) = v103 + 4 * v104;
            if (v99) {
              operator delete(v99);
            }
          }
          else
          {
            *(_DWORD *)unint64_t v84 = 0;
            char v80 = v84 + 4;
          }
          *((void *)this + 11) = v80;
          goto LABEL_192;
        case 5u:
          if (v19 == 2)
          {
            if (PB::Reader::placeMark()) {
              return 0;
            }
            unint64_t v64 = *((void *)a2 + 1);
            unint64_t v65 = *((void *)a2 + 2);
            while (v64 < v65 && !*((unsigned char *)a2 + 24))
            {
              char v67 = (char *)*((void *)this + 8);
              unint64_t v66 = *((void *)this + 9);
              if ((unint64_t)v67 >= v66)
              {
                unint64_t v69 = (char *)*((void *)this + 7);
                uint64_t v70 = (v67 - v69) >> 2;
                unint64_t v71 = v70 + 1;
                if ((unint64_t)(v70 + 1) >> 62) {
                  goto LABEL_204;
                }
                uint64_t v72 = v66 - (void)v69;
                if (v72 >> 1 > v71) {
                  unint64_t v71 = v72 >> 1;
                }
                if ((unint64_t)v72 >= 0x7FFFFFFFFFFFFFFCLL) {
                  unint64_t v73 = 0x3FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v73 = v71;
                }
                if (v73)
                {
                  unint64_t v73 = (unint64_t)sub_2572C76F0(v73);
                  unint64_t v69 = (char *)*((void *)this + 7);
                  char v67 = (char *)*((void *)this + 8);
                }
                else
                {
                  uint64_t v74 = 0;
                }
                uint64_t v75 = (_DWORD *)(v73 + 4 * v70);
                *uint64_t v75 = 0;
                unsigned int v68 = v75 + 1;
                while (v67 != v69)
                {
                  int v76 = *((_DWORD *)v67 - 1);
                  v67 -= 4;
                  *--uint64_t v75 = v76;
                }
                *((void *)this + 7) = v75;
                *((void *)this + 8) = v68;
                *((void *)this + 9) = v73 + 4 * v74;
                if (v69) {
                  operator delete(v69);
                }
              }
              else
              {
                *(_DWORD *)char v67 = 0;
                unsigned int v68 = v67 + 4;
              }
              *((void *)this + 8) = v68;
              unint64_t v77 = *((void *)a2 + 1);
              if (v77 > 0xFFFFFFFFFFFFFFFBLL || v77 + 4 > *((void *)a2 + 2))
              {
LABEL_122:
                *((unsigned char *)a2 + 24) = 1;
                break;
              }
              *(v68 - 1) = *(_DWORD *)(*(void *)a2 + v77);
              unint64_t v65 = *((void *)a2 + 2);
              unint64_t v64 = *((void *)a2 + 1) + 4;
              *((void *)a2 + 1) = v64;
            }
LABEL_123:
            PB::Reader::recallMark();
          }
          else
          {
            unint64_t v86 = (char *)*((void *)this + 8);
            unint64_t v85 = *((void *)this + 9);
            if ((unint64_t)v86 >= v85)
            {
              unint64_t v105 = (char *)*((void *)this + 7);
              uint64_t v106 = (v86 - v105) >> 2;
              unint64_t v107 = v106 + 1;
              if ((unint64_t)(v106 + 1) >> 62) {
LABEL_204:
              }
                sub_2570AFD0C();
              uint64_t v108 = v85 - (void)v105;
              if (v108 >> 1 > v107) {
                unint64_t v107 = v108 >> 1;
              }
              if ((unint64_t)v108 >= 0x7FFFFFFFFFFFFFFCLL) {
                unint64_t v109 = 0x3FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v109 = v107;
              }
              if (v109)
              {
                unint64_t v109 = (unint64_t)sub_2572C76F0(v109);
                unint64_t v105 = (char *)*((void *)this + 7);
                unint64_t v86 = (char *)*((void *)this + 8);
              }
              else
              {
                uint64_t v110 = 0;
              }
              char v117 = (_DWORD *)(v109 + 4 * v106);
              *char v117 = 0;
              char v80 = v117 + 1;
              while (v86 != v105)
              {
                int v118 = *((_DWORD *)v86 - 1);
                v86 -= 4;
                *--char v117 = v118;
              }
              *((void *)this + 7) = v117;
              *((void *)this + 8) = v80;
              *((void *)this + 9) = v109 + 4 * v110;
              if (v105) {
                operator delete(v105);
              }
            }
            else
            {
              *(_DWORD *)unint64_t v86 = 0;
              char v80 = v86 + 4;
            }
            *((void *)this + 8) = v80;
LABEL_192:
            unint64_t v119 = *((void *)a2 + 1);
            if (v119 <= 0xFFFFFFFFFFFFFFFBLL && v119 + 4 <= *((void *)a2 + 2))
            {
              *(v80 - 1) = *(_DWORD *)(*(void *)a2 + v119);
              uint64_t v21 = *((void *)a2 + 1) + 4;
LABEL_196:
              *((void *)a2 + 1) = v21;
            }
            else
            {
LABEL_194:
              *((unsigned char *)a2 + 24) = 1;
            }
          }
          break;
        default:
          goto LABEL_19;
      }
      goto LABEL_197;
    }
    char v15 = 0;
    unsigned int v16 = 0;
    unint64_t v11 = 0;
    if (v2 > v3) {
      unint64_t v3 = v2;
    }
    do
    {
      if (v3 == v2)
      {
        int v4 = 1;
        *((unsigned char *)a2 + 24) = 1;
        return v4 == 0;
      }
      unint64_t v17 = v2 + 1;
      char v18 = *(unsigned char *)(v8 + v2);
      *((void *)a2 + 1) = v17;
      v11 |= (unint64_t)(v18 & 0x7F) << v15;
      if ((v18 & 0x80) == 0) {
        goto LABEL_21;
      }
      v15 += 7;
      unint64_t v2 = v17;
      BOOL v14 = v16++ > 8;
    }
    while (!v14);
LABEL_19:
    if ((PB::Reader::skip(a2) & 1) == 0) {
      return 0;
    }
LABEL_197:
    unint64_t v2 = *((void *)a2 + 1);
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
      return v4 == 0;
    }
  }
}

uint64_t CMMsl::MagnetometerCalibratorFilterParameters::writeTo(uint64_t this, PB::Writer *a2)
{
  unint64_t v3 = (void *)this;
  if (*(unsigned char *)(this + 112)) {
    this = PB::Writer::write(a2, *(double *)(this + 104));
  }
  int v4 = (float *)v3[4];
  uint64_t v5 = (float *)v3[5];
  while (v4 != v5)
  {
    float v6 = *v4++;
    this = PB::Writer::write(a2, v6);
  }
  float v7 = (float *)v3[1];
  uint64_t v8 = (float *)v3[2];
  while (v7 != v8)
  {
    float v9 = *v7++;
    this = PB::Writer::write(a2, v9);
  }
  unsigned int v10 = (float *)v3[10];
  unint64_t v11 = (float *)v3[11];
  while (v10 != v11)
  {
    float v12 = *v10++;
    this = PB::Writer::write(a2, v12);
  }
  BOOL v14 = (float *)v3[7];
  char v13 = (float *)v3[8];
  while (v14 != v13)
  {
    float v15 = *v14++;
    this = PB::Writer::write(a2, v15);
  }
  return this;
}

uint64_t CMMsl::MagnetometerCalibratorFilterParameters::hash_value(CMMsl::MagnetometerCalibratorFilterParameters *this)
{
  if (*((unsigned char *)this + 112))
  {
    if (*((double *)this + 13) == 0.0) {
      uint64_t v1 = 0;
    }
    else {
      uint64_t v1 = *((void *)this + 13);
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v2 = PBHashBytes() ^ v1;
  uint64_t v3 = PBHashBytes();
  uint64_t v4 = v2 ^ v3 ^ PBHashBytes();
  return v4 ^ PBHashBytes();
}

void CMMsl::MagnetometerReset::~MagnetometerReset(CMMsl::MagnetometerReset *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::MagnetometerReset::MagnetometerReset(uint64_t this, const CMMsl::MagnetometerReset *a2)
{
  *(void *)this = &unk_270643278;
  *(_DWORD *)(this + 44) = 0;
  char v2 = *((unsigned char *)a2 + 44);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *((void *)a2 + 3);
    char v3 = 4;
    *(unsigned char *)(this + 44) = 4;
    *(void *)(this + 24) = v4;
    char v2 = *((unsigned char *)a2 + 44);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 44) & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = *((void *)a2 + 2);
    v3 |= 2u;
    *(unsigned char *)(this + 44) = v3;
    *(void *)(this + 16) = v5;
    char v2 = *((unsigned char *)a2 + 44);
  }
LABEL_6:
  if (v2)
  {
    uint64_t v6 = *((void *)a2 + 1);
    v3 |= 1u;
    *(unsigned char *)(this + 44) = v3;
    *(void *)(this + 8) = v6;
    char v2 = *((unsigned char *)a2 + 44);
    if ((v2 & 8) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v7 = *((void *)a2 + 4);
  v3 |= 8u;
  *(unsigned char *)(this + 44) = v3;
  *(void *)(this + 32) = v7;
  char v2 = *((unsigned char *)a2 + 44);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_15;
  }
LABEL_14:
  char v8 = *((unsigned char *)a2 + 42);
  v3 |= 0x40u;
  *(unsigned char *)(this + 44) = v3;
  *(unsigned char *)(this + 42) = v8;
  char v2 = *((unsigned char *)a2 + 44);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x20) == 0) {
      return this;
    }
LABEL_16:
    char v10 = *((unsigned char *)a2 + 41);
    *(unsigned char *)(this + 44) = v3 | 0x20;
    *(unsigned char *)(this + 41) = v10;
    return this;
  }
LABEL_15:
  char v9 = *((unsigned char *)a2 + 40);
  v3 |= 0x10u;
  *(unsigned char *)(this + 44) = v3;
  *(unsigned char *)(this + 40) = v9;
  if ((*((unsigned char *)a2 + 44) & 0x20) != 0) {
    goto LABEL_16;
  }
  return this;
}

uint64_t CMMsl::MagnetometerReset::operator=(uint64_t a1, const CMMsl::MagnetometerReset *a2)
{
  if ((const CMMsl::MagnetometerReset *)a1 != a2)
  {
    CMMsl::MagnetometerReset::MagnetometerReset((uint64_t)&v8, a2);
    int v3 = *(_DWORD *)(a1 + 44);
    *(_DWORD *)(a1 + 44) = v15;
    int v15 = v3;
    uint64_t v4 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v10;
    uint64_t v10 = v4;
    long long v5 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v9;
    long long v9 = v5;
    uint64_t v6 = *(void *)(a1 + 32);
    *(void *)(a1 + 32) = v11;
    uint64_t v11 = v6;
    LOBYTE(v6) = *(unsigned char *)(a1 + 42);
    *(unsigned char *)(a1 + 42) = v14;
    char v14 = v6;
    LOBYTE(v6) = *(unsigned char *)(a1 + 40);
    *(unsigned char *)(a1 + 40) = v12;
    char v12 = v6;
    LOBYTE(v6) = *(unsigned char *)(a1 + 41);
    *(unsigned char *)(a1 + 41) = v13;
    char v13 = v6;
    PB::Base::~Base((PB::Base *)&v8);
  }
  return a1;
}

double CMMsl::swap(CMMsl *this, CMMsl::MagnetometerReset *a2, CMMsl::MagnetometerReset *a3)
{
  int v3 = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v3;
  double result = *((double *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((double *)a2 + 3) = result;
  uint64_t v5 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v5;
  uint64_t v6 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v6;
  uint64_t v7 = *((void *)this + 4);
  *((void *)this + 4) = *((void *)a2 + 4);
  *((void *)a2 + 4) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 42);
  *((unsigned char *)this + 42) = *((unsigned char *)a2 + 42);
  *((unsigned char *)a2 + 42) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 40);
  *((unsigned char *)this + 40) = *((unsigned char *)a2 + 40);
  *((unsigned char *)a2 + 40) = v7;
  LOBYTE(v7) = *((unsigned char *)this + 41);
  *((unsigned char *)this + 41) = *((unsigned char *)a2 + 41);
  *((unsigned char *)a2 + 41) = v7;
  return result;
}

double CMMsl::MagnetometerReset::MagnetometerReset(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270643278;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = 0;
  double result = *(double *)(a2 + 24);
  *(double *)(a1 + 24) = result;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return result;
}

{
  double result;

  *(void *)a1 = &unk_270643278;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = 0;
  double result = *(double *)(a2 + 24);
  *(double *)(a1 + 24) = result;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  return result;
}

uint64_t CMMsl::MagnetometerReset::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    char v14 = &unk_270643278;
    int v3 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a2 + 44) = 0;
    uint64_t v4 = *(void *)(a2 + 24);
    uint64_t v5 = *(void *)(a2 + 32);
    char v6 = *(unsigned char *)(a2 + 42);
    char v7 = *(unsigned char *)(a2 + 40);
    char v8 = *(unsigned char *)(a2 + 41);
    int v21 = *(_DWORD *)(a1 + 44);
    uint64_t v9 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v4;
    uint64_t v16 = v9;
    long long v10 = *(_OWORD *)(a1 + 8);
    long long v11 = *(_OWORD *)(a2 + 8);
    *(_DWORD *)(a1 + 44) = v3;
    *(_OWORD *)(a1 + 8) = v11;
    long long v15 = v10;
    uint64_t v12 = *(void *)(a1 + 32);
    *(void *)(a1 + 32) = v5;
    uint64_t v17 = v12;
    LOBYTE(v12) = *(unsigned char *)(a1 + 42);
    *(unsigned char *)(a1 + 42) = v6;
    char v20 = v12;
    LOBYTE(v12) = *(unsigned char *)(a1 + 40);
    *(unsigned char *)(a1 + 40) = v7;
    char v18 = v12;
    LOBYTE(v12) = *(unsigned char *)(a1 + 41);
    *(unsigned char *)(a1 + 41) = v8;
    char v19 = v12;
    PB::Base::~Base((PB::Base *)&v14);
  }
  return a1;
}

uint64_t CMMsl::MagnetometerReset::formatText(CMMsl::MagnetometerReset *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 44);
  if ((v5 & 0x10) != 0)
  {
    PB::TextFormatter::format(a2, "exitingSaturation");
    char v5 = *((unsigned char *)this + 44);
    if ((v5 & 0x20) == 0)
    {
LABEL_3:
      if ((v5 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((*((unsigned char *)this + 44) & 0x20) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "extendedSaturation");
  char v5 = *((unsigned char *)this + 44);
  if ((v5 & 0x40) == 0)
  {
LABEL_4:
    if ((v5 & 1) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  PB::TextFormatter::format(a2, "shiftInSaturation");
  char v5 = *((unsigned char *)this + 44);
  if ((v5 & 1) == 0)
  {
LABEL_5:
    if ((v5 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  PB::TextFormatter::format(a2, "timeSinceLastRemag");
  char v5 = *((unsigned char *)this + 44);
  if ((v5 & 2) == 0)
  {
LABEL_6:
    if ((v5 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(a2, "timeSinceLastRemagTrigger");
  char v5 = *((unsigned char *)this + 44);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_17:
  PB::TextFormatter::format(a2, "timestamp", *((double *)this + 3));
  if ((*((unsigned char *)this + 44) & 8) != 0) {
LABEL_8:
  }
    PB::TextFormatter::format(a2, "triggerCount");
LABEL_9:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::MagnetometerReset::readFrom(CMMsl::MagnetometerReset *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_26;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_21;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_26:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 44) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFF7 && v2 + 8 <= *((void *)a2 + 2))
        {
          *((void *)this + 3) = *(void *)(*(void *)a2 + v2);
          unint64_t v2 = *((void *)a2 + 1) + 8;
          *((void *)a2 + 1) = v2;
        }
        else
        {
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      case 2u:
        *((unsigned char *)this + 44) |= 2u;
        unint64_t v21 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v22 = *(void *)a2;
        if (v21 > 0xFFFFFFFFFFFFFFF5 || v21 + 10 > v2)
        {
          char v45 = 0;
          unsigned int v46 = 0;
          uint64_t v25 = 0;
          if (v2 <= v21) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v21)
            {
              uint64_t v25 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_90;
            }
            unint64_t v47 = v21++;
            char v48 = *(unsigned char *)(v22 + v47);
            *((void *)a2 + 1) = v21;
            v25 |= (unint64_t)(v48 & 0x7F) << v45;
            if ((v48 & 0x80) == 0) {
              break;
            }
            v45 += 7;
            BOOL v14 = v46++ > 8;
            if (v14)
            {
              uint64_t v25 = 0;
LABEL_89:
              unint64_t v2 = v47 + 1;
              goto LABEL_90;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v25 = 0;
          }
          goto LABEL_89;
        }
        char v23 = 0;
        unsigned int v24 = 0;
        uint64_t v25 = 0;
        do
        {
          unint64_t v2 = v21 + 1;
          *((void *)a2 + 1) = v21 + 1;
          char v26 = *(unsigned char *)(v22 + v21);
          v25 |= (unint64_t)(v26 & 0x7F) << v23;
          if ((v26 & 0x80) == 0) {
            goto LABEL_90;
          }
          v23 += 7;
          unint64_t v21 = v2;
          BOOL v14 = v24++ > 8;
        }
        while (!v14);
        uint64_t v25 = 0;
LABEL_90:
        *((void *)this + 2) = v25;
        break;
      case 3u:
        *((unsigned char *)this + 44) |= 1u;
        unint64_t v27 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v28 = *(void *)a2;
        if (v27 > 0xFFFFFFFFFFFFFFF5 || v27 + 10 > v2)
        {
          char v49 = 0;
          unsigned int v50 = 0;
          uint64_t v31 = 0;
          if (v2 <= v27) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v27)
            {
              uint64_t v31 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_95;
            }
            unint64_t v51 = v27++;
            char v52 = *(unsigned char *)(v28 + v51);
            *((void *)a2 + 1) = v27;
            v31 |= (unint64_t)(v52 & 0x7F) << v49;
            if ((v52 & 0x80) == 0) {
              break;
            }
            v49 += 7;
            BOOL v14 = v50++ > 8;
            if (v14)
            {
              uint64_t v31 = 0;
LABEL_94:
              unint64_t v2 = v51 + 1;
              goto LABEL_95;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v31 = 0;
          }
          goto LABEL_94;
        }
        char v29 = 0;
        unsigned int v30 = 0;
        uint64_t v31 = 0;
        do
        {
          unint64_t v2 = v27 + 1;
          *((void *)a2 + 1) = v27 + 1;
          char v32 = *(unsigned char *)(v28 + v27);
          v31 |= (unint64_t)(v32 & 0x7F) << v29;
          if ((v32 & 0x80) == 0) {
            goto LABEL_95;
          }
          v29 += 7;
          unint64_t v27 = v2;
          BOOL v14 = v30++ > 8;
        }
        while (!v14);
        uint64_t v31 = 0;
LABEL_95:
        *((void *)this + 1) = v31;
        break;
      case 4u:
        *((unsigned char *)this + 44) |= 8u;
        unint64_t v33 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v34 = *(void *)a2;
        if (v33 > 0xFFFFFFFFFFFFFFF5 || v33 + 10 > v2)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v37 = 0;
          if (v2 <= v33) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v33)
            {
              uint64_t v37 = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_100;
            }
            unint64_t v55 = v33++;
            char v56 = *(unsigned char *)(v34 + v55);
            *((void *)a2 + 1) = v33;
            v37 |= (unint64_t)(v56 & 0x7F) << v53;
            if ((v56 & 0x80) == 0) {
              break;
            }
            v53 += 7;
            BOOL v14 = v54++ > 8;
            if (v14)
            {
              uint64_t v37 = 0;
LABEL_99:
              unint64_t v2 = v55 + 1;
              goto LABEL_100;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            uint64_t v37 = 0;
          }
          goto LABEL_99;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        do
        {
          unint64_t v2 = v33 + 1;
          *((void *)a2 + 1) = v33 + 1;
          char v38 = *(unsigned char *)(v34 + v33);
          v37 |= (unint64_t)(v38 & 0x7F) << v35;
          if ((v38 & 0x80) == 0) {
            goto LABEL_100;
          }
          v35 += 7;
          unint64_t v33 = v2;
          BOOL v14 = v36++ > 8;
        }
        while (!v14);
        uint64_t v37 = 0;
LABEL_100:
        *((void *)this + 4) = v37;
        break;
      case 5u:
        *((unsigned char *)this + 44) |= 0x40u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v40 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v39 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v40 = v39 != 0;
        }
        *((unsigned char *)this + 42) = v40;
        break;
      case 6u:
        *((unsigned char *)this + 44) |= 0x10u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v42 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v41 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v42 = v41 != 0;
        }
        *((unsigned char *)this + 40) = v42;
        break;
      case 7u:
        *((unsigned char *)this + 44) |= 0x20u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 >= *((void *)a2 + 2))
        {
          BOOL v44 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          int v43 = *(unsigned __int8 *)(*(void *)a2 + v2++);
          *((void *)a2 + 1) = v2;
          BOOL v44 = v43 != 0;
        }
        *((unsigned char *)this + 41) = v44;
        break;
      default:
        goto LABEL_19;
    }
LABEL_21:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::MagnetometerReset::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 44);
  if ((v4 & 4) != 0)
  {
    this = PB::Writer::write(a2, *(double *)(this + 24));
    char v4 = *(unsigned char *)(v3 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((*(unsigned char *)(this + 44) & 2) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 1) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = PB::Writer::writeVarInt(a2);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    this = PB::Writer::write(a2);
    if ((*(unsigned char *)(v3 + 44) & 0x20) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = PB::Writer::write(a2);
  char v4 = *(unsigned char *)(v3 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v4 & 0x20) == 0) {
    return this;
  }
LABEL_15:
  return PB::Writer::write(a2);
}

uint64_t CMMsl::MagnetometerReset::hash_value(CMMsl::MagnetometerReset *this)
{
  if ((*((unsigned char *)this + 44) & 4) != 0)
  {
    double v1 = *((double *)this + 3);
    if (v1 == 0.0) {
      double v1 = 0.0;
    }
    if ((*((unsigned char *)this + 44) & 2) != 0)
    {
LABEL_3:
      uint64_t v2 = *((void *)this + 2);
      if (*((unsigned char *)this + 44)) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else
  {
    double v1 = 0.0;
    if ((*((unsigned char *)this + 44) & 2) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v2 = 0;
  if (*((unsigned char *)this + 44))
  {
LABEL_4:
    uint64_t v3 = *((void *)this + 1);
    if ((*((unsigned char *)this + 44) & 8) != 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 44) & 8) != 0)
  {
LABEL_5:
    uint64_t v4 = *((void *)this + 4);
    if ((*((unsigned char *)this + 44) & 0x40) != 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v4 = 0;
  if ((*((unsigned char *)this + 44) & 0x40) != 0)
  {
LABEL_6:
    uint64_t v5 = *((unsigned __int8 *)this + 42);
    if ((*((unsigned char *)this + 44) & 0x10) != 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t v6 = 0;
    if ((*((unsigned char *)this + 44) & 0x20) != 0) {
      goto LABEL_8;
    }
LABEL_17:
    uint64_t v7 = 0;
    return v2 ^ *(void *)&v1 ^ v3 ^ v4 ^ v5 ^ v6 ^ v7;
  }
LABEL_15:
  uint64_t v5 = 0;
  if ((*((unsigned char *)this + 44) & 0x10) == 0) {
    goto LABEL_16;
  }
LABEL_7:
  uint64_t v6 = *((unsigned __int8 *)this + 40);
  if ((*((unsigned char *)this + 44) & 0x20) == 0) {
    goto LABEL_17;
  }
LABEL_8:
  uint64_t v7 = *((unsigned __int8 *)this + 41);
  return v2 ^ *(void *)&v1 ^ v3 ^ v4 ^ v5 ^ v6 ^ v7;
}

void CMMsl::MapsRouteHintData::~MapsRouteHintData(CMMsl::MapsRouteHintData *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

uint64_t CMMsl::MapsRouteHintData::MapsRouteHintData(uint64_t this, const CMMsl::MapsRouteHintData *a2)
{
  *(void *)this = &unk_2706432B0;
  *(_DWORD *)(this + 20) = 0;
  __int16 v2 = *((_WORD *)a2 + 10);
  if ((v2 & 0x80) != 0)
  {
    char v4 = *((unsigned char *)a2 + 15);
    __int16 v3 = 128;
    *(_WORD *)(this + 20) = 128;
    *(unsigned char *)(this + 15) = v4;
    __int16 v2 = *((_WORD *)a2 + 10);
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  __int16 v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_5:
    char v5 = *((unsigned char *)a2 + 9);
    v3 |= 2u;
    *(_WORD *)(this + 20) = v3;
    *(unsigned char *)(this + 9) = v5;
    __int16 v2 = *((_WORD *)a2 + 10);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    char v6 = *((unsigned char *)a2 + 11);
    v3 |= 8u;
    *(_WORD *)(this + 20) = v3;
    *(unsigned char *)(this + 11) = v6;
    __int16 v2 = *((_WORD *)a2 + 10);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  char v7 = *((unsigned char *)a2 + 13);
  v3 |= 0x20u;
  *(_WORD *)(this + 20) = v3;
  *(unsigned char *)(this + 13) = v7;
  __int16 v2 = *((_WORD *)a2 + 10);
  if ((v2 & 0x40) == 0)
  {
LABEL_9:
    if ((v2 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
LABEL_16:
  char v8 = *((unsigned char *)a2 + 14);
  v3 |= 0x40u;
  *(_WORD *)(this + 20) = v3;
  *(unsigned char *)(this + 14) = v8;
  __int16 v2 = *((_WORD *)a2 + 10);
  if ((v2 & 0x10) == 0)
  {
LABEL_10:
    if ((v2 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v9 = *((unsigned char *)a2 + 12);
  v3 |= 0x10u;
  *(_WORD *)(this + 20) = v3;
  *(unsigned char *)(this + 12) = v9;
  __int16 v2 = *((_WORD *)a2 + 10);
  if ((v2 & 0x100) == 0)
  {
LABEL_11:
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v10 = *((unsigned char *)a2 + 16);
  v3 |= 0x100u;
  *(_WORD *)(this + 20) = v3;
  *(unsigned char *)(this + 16) = v10;
  __int16 v2 = *((_WORD *)a2 + 10);
  if ((v2 & 4) == 0)
  {
LABEL_12:
    if ((v2 & 1) == 0) {
      return this;
    }
LABEL_20:
    char v12 = *((unsigned char *)a2 + 8);
    *(_WORD *)(this + 20) = v3 | 1;
    *(unsigned char *)(this + 8) = v12;
    return this;
  }
LABEL_19:
  char v11 = *((unsigned char *)a2 + 10);
  v3 |= 4u;
  *(_WORD *)(this + 20) = v3;
  *(unsigned char *)(this + 10) = v11;
  if (*((_WORD *)a2 + 10)) {
    goto LABEL_20;
  }
  return this;
}

uint64_t CMMsl::MapsRouteHintData::operator=(uint64_t a1, const CMMsl::MapsRouteHintData *a2)
{
  if ((const CMMsl::MapsRouteHintData *)a1 != a2)
  {
    CMMsl::MapsRouteHintData::MapsRouteHintData((uint64_t)v6, a2);
    int v3 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v9;
    int v9 = v3;
    LOBYTE(v3) = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v8;
    char v8 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v7;
    uint64_t v7 = v4;
    PB::Base::~Base((PB::Base *)v6);
  }
  return a1;
}

uint64_t CMMsl::swap(uint64_t this, CMMsl::MapsRouteHintData *a2, CMMsl::MapsRouteHintData *a3)
{
  int v3 = *(_DWORD *)(this + 20);
  *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 15);
  *(unsigned char *)(this + 15) = *((unsigned char *)a2 + 15);
  *((unsigned char *)a2 + 15) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 9);
  *(unsigned char *)(this + 9) = *((unsigned char *)a2 + 9);
  *((unsigned char *)a2 + 9) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 11);
  *(unsigned char *)(this + 11) = *((unsigned char *)a2 + 11);
  *((unsigned char *)a2 + 11) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 13);
  *(unsigned char *)(this + 13) = *((unsigned char *)a2 + 13);
  *((unsigned char *)a2 + 13) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 14);
  *(unsigned char *)(this + 14) = *((unsigned char *)a2 + 14);
  *((unsigned char *)a2 + 14) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 12);
  *(unsigned char *)(this + 12) = *((unsigned char *)a2 + 12);
  *((unsigned char *)a2 + 12) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 16);
  *(unsigned char *)(this + 16) = *((unsigned char *)a2 + 16);
  *((unsigned char *)a2 + 16) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 10);
  *(unsigned char *)(this + 10) = *((unsigned char *)a2 + 10);
  *((unsigned char *)a2 + 10) = v3;
  LOBYTE(v3) = *(unsigned char *)(this + 8);
  *(unsigned char *)(this + 8) = *((unsigned char *)a2 + 8);
  *((unsigned char *)a2 + 8) = v3;
  return this;
}

uint64_t CMMsl::MapsRouteHintData::MapsRouteHintData(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = &unk_2706432B0;
  *(_DWORD *)(result + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a2 + 20) = 0;
  *(unsigned char *)(result + 15) = *(unsigned char *)(a2 + 15);
  *(unsigned char *)(result + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(result + 11) = *(unsigned char *)(a2 + 11);
  *(unsigned char *)(result + 13) = *(unsigned char *)(a2 + 13);
  *(unsigned char *)(result + 14) = *(unsigned char *)(a2 + 14);
  *(unsigned char *)(result + 12) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(result + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(result + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(result + 8) = *(unsigned char *)(a2 + 8);
  return result;
}

uint64_t CMMsl::MapsRouteHintData::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    CMMsl::MapsRouteHintData::MapsRouteHintData((uint64_t)v6, a2);
    int v3 = *(_DWORD *)(a1 + 20);
    *(_DWORD *)(a1 + 20) = v9;
    int v9 = v3;
    LOBYTE(v3) = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v8;
    char v8 = v3;
    uint64_t v4 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v7;
    uint64_t v7 = v4;
    PB::Base::~Base((PB::Base *)v6);
  }
  return a1;
}

uint64_t CMMsl::MapsRouteHintData::formatText(CMMsl::MapsRouteHintData *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  __int16 v5 = *((_WORD *)this + 10);
  if (v5)
  {
    PB::TextFormatter::format(a2, "isAppleMapsRoutingActive");
    __int16 v5 = *((_WORD *)this + 10);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "isBicycleRouting");
  __int16 v5 = *((_WORD *)this + 10);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  PB::TextFormatter::format(a2, "isBicycleRoutingActive");
  __int16 v5 = *((_WORD *)this + 10);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  PB::TextFormatter::format(a2, "isPedestrianRouting");
  __int16 v5 = *((_WORD *)this + 10);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  PB::TextFormatter::format(a2, "isPedestrianRoutingActive");
  __int16 v5 = *((_WORD *)this + 10);
  if ((v5 & 0x20) == 0)
  {
LABEL_7:
    if ((v5 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  PB::TextFormatter::format(a2, "isStepTypeBicycle");
  __int16 v5 = *((_WORD *)this + 10);
  if ((v5 & 0x40) == 0)
  {
LABEL_8:
    if ((v5 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  PB::TextFormatter::format(a2, "isStepTypePedestrian");
  __int16 v5 = *((_WORD *)this + 10);
  if ((v5 & 0x80) == 0)
  {
LABEL_9:
    if ((v5 & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_21:
  PB::TextFormatter::format(a2, "isVehicularRouting");
  if ((*((_WORD *)this + 10) & 0x100) != 0) {
LABEL_10:
  }
    PB::TextFormatter::format(a2, "isVehicularRoutingActive");
LABEL_11:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::MapsRouteHintData::readFrom(CMMsl::MapsRouteHintData *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 < v3 && v4 == 0)
  {
    while (1)
    {
      uint64_t v8 = *(void *)a2;
      if (v2 <= 0xFFFFFFFFFFFFFFF5 && v2 + 10 <= v3) {
        break;
      }
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_24;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      unint64_t v3 = *((void *)a2 + 2);
LABEL_21:
      int v4 = *((unsigned __int8 *)a2 + 24);
      if (v2 >= v3 || *((unsigned char *)a2 + 24)) {
        return v4 == 0;
      }
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_24:
    if ((v11 & 7) != 4)
    {
      switch((v11 >> 3))
      {
        case 1u:
          *((_WORD *)this + 10) |= 0x80u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v21 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v20 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v21 = v20 != 0;
          }
          *((unsigned char *)this + 15) = v21;
          goto LABEL_21;
        case 2u:
          *((_WORD *)this + 10) |= 2u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v23 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v22 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v23 = v22 != 0;
          }
          *((unsigned char *)this + 9) = v23;
          goto LABEL_21;
        case 3u:
          *((_WORD *)this + 10) |= 8u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v25 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v24 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v25 = v24 != 0;
          }
          *((unsigned char *)this + 11) = v25;
          goto LABEL_21;
        case 4u:
          *((_WORD *)this + 10) |= 0x20u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v27 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v26 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v27 = v26 != 0;
          }
          *((unsigned char *)this + 13) = v27;
          goto LABEL_21;
        case 5u:
          *((_WORD *)this + 10) |= 0x40u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v29 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v28 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v29 = v28 != 0;
          }
          *((unsigned char *)this + 14) = v29;
          goto LABEL_21;
        case 6u:
          *((_WORD *)this + 10) |= 0x10u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v31 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v30 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v31 = v30 != 0;
          }
          *((unsigned char *)this + 12) = v31;
          goto LABEL_21;
        case 7u:
          *((_WORD *)this + 10) |= 0x100u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v33 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v32 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v33 = v32 != 0;
          }
          *((unsigned char *)this + 16) = v33;
          goto LABEL_21;
        case 8u:
          *((_WORD *)this + 10) |= 4u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v35 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v34 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v35 = v34 != 0;
          }
          *((unsigned char *)this + 10) = v35;
          goto LABEL_21;
        case 9u:
          *((_WORD *)this + 10) |= 1u;
          unint64_t v2 = *((void *)a2 + 1);
          unint64_t v3 = *((void *)a2 + 2);
          if (v2 >= v3)
          {
            BOOL v37 = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            int v36 = *(unsigned __int8 *)(*(void *)a2 + v2++);
            *((void *)a2 + 1) = v2;
            BOOL v37 = v36 != 0;
          }
          *((unsigned char *)this + 8) = v37;
          goto LABEL_21;
        default:
          goto LABEL_19;
      }
    }
    int v4 = 0;
  }
  return v4 == 0;
}

uint64_t CMMsl::MapsRouteHintData::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  __int16 v4 = *(_WORD *)(this + 20);
  if ((v4 & 0x80) != 0)
  {
    this = PB::Writer::write(a2);
    __int16 v4 = *(_WORD *)(v3 + 20);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x20) == 0)
  {
LABEL_5:
    if ((v4 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x40) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 0x100) == 0)
  {
LABEL_8:
    if ((v4 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    this = PB::Writer::write(a2);
    if ((*(_WORD *)(v3 + 20) & 1) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = PB::Writer::write(a2);
  __int16 v4 = *(_WORD *)(v3 + 20);
  if ((v4 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v4 & 1) == 0) {
    return this;
  }
LABEL_19:
  return PB::Writer::write(a2);
}

uint64_t CMMsl::MapsRouteHintData::hash_value(CMMsl::MapsRouteHintData *this)
{
  __int16 v1 = *((_WORD *)this + 10);
  if ((v1 & 0x80) != 0)
  {
    uint64_t v2 = *((unsigned __int8 *)this + 15);
    if ((v1 & 2) != 0)
    {
LABEL_3:
      uint64_t v3 = *((unsigned __int8 *)this + 9);
      if ((v1 & 8) != 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_3;
    }
  }
  uint64_t v3 = 0;
  if ((v1 & 8) != 0)
  {
LABEL_4:
    uint64_t v4 = *((unsigned __int8 *)this + 11);
    if ((v1 & 0x20) != 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v4 = 0;
  if ((v1 & 0x20) != 0)
  {
LABEL_5:
    uint64_t v5 = *((unsigned __int8 *)this + 13);
    if ((v1 & 0x40) != 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v5 = 0;
  if ((v1 & 0x40) != 0)
  {
LABEL_6:
    uint64_t v6 = *((unsigned __int8 *)this + 14);
    if ((v1 & 0x10) != 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v6 = 0;
  if ((v1 & 0x10) != 0)
  {
LABEL_7:
    uint64_t v7 = *((unsigned __int8 *)this + 12);
    if ((*((_WORD *)this + 10) & 0x100) != 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v7 = 0;
  if ((*((_WORD *)this + 10) & 0x100) != 0)
  {
LABEL_8:
    uint64_t v8 = *((unsigned __int8 *)this + 16);
    if ((v1 & 4) != 0) {
      goto LABEL_9;
    }
LABEL_18:
    uint64_t v9 = 0;
    if (v1) {
      goto LABEL_10;
    }
LABEL_19:
    uint64_t v10 = 0;
    return v3 ^ v2 ^ v4 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10;
  }
LABEL_17:
  uint64_t v8 = 0;
  if ((v1 & 4) == 0) {
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v9 = *((unsigned __int8 *)this + 10);
  if ((v1 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_10:
  uint64_t v10 = *((unsigned __int8 *)this + 8);
  return v3 ^ v2 ^ v4 ^ v5 ^ v6 ^ v7 ^ v8 ^ v9 ^ v10;
}

void CMMsl::MetsInfo::~MetsInfo(CMMsl::MetsInfo *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::MetsInfo::MetsInfo(CMMsl::MetsInfo *this, const CMMsl::MetsInfo *a2)
{
  *(void *)this = &unk_2706432E8;
  *((_DWORD *)this + 7) = 0;
  char v2 = *((unsigned char *)a2 + 28);
  if (v2)
  {
    float result = *((float *)a2 + 2);
    char v3 = 1;
    *((unsigned char *)this + 28) = 1;
    *((float *)this + 2) = result;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v3 = 0;
  if ((*((unsigned char *)a2 + 28) & 4) != 0)
  {
LABEL_5:
    float result = *((float *)a2 + 4);
    v3 |= 4u;
    *((unsigned char *)this + 28) = v3;
    *((float *)this + 4) = result;
    char v2 = *((unsigned char *)a2 + 28);
  }
LABEL_6:
  if ((v2 & 8) != 0)
  {
    float result = *((float *)a2 + 5);
    v3 |= 8u;
    *((unsigned char *)this + 28) = v3;
    *((float *)this + 5) = result;
    char v2 = *((unsigned char *)a2 + 28);
    if ((v2 & 0x10) == 0)
    {
LABEL_8:
      if ((v2 & 2) == 0) {
        return result;
      }
LABEL_12:
      float result = *((float *)a2 + 3);
      *((unsigned char *)this + 28) = v3 | 2;
      *((float *)this + 3) = result;
      return result;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_8;
  }
  int v5 = *((_DWORD *)a2 + 6);
  v3 |= 0x10u;
  *((unsigned char *)this + 28) = v3;
  *((_DWORD *)this + 6) = v5;
  if ((*((unsigned char *)a2 + 28) & 2) != 0) {
    goto LABEL_12;
  }
  return result;
}

uint64_t CMMsl::MetsInfo::operator=(uint64_t a1, const CMMsl::MetsInfo *a2)
{
  if ((const CMMsl::MetsInfo *)a1 != a2)
  {
    CMMsl::MetsInfo::MetsInfo((CMMsl::MetsInfo *)&v6, a2);
    uint64_t v3 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = v8;
    uint64_t v8 = v3;
    long long v4 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v7;
    long long v7 = v4;
    PB::Base::~Base((PB::Base *)&v6);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::MetsInfo *a2, CMMsl::MetsInfo *a3)
{
  int v3 = *((_DWORD *)this + 7);
  *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
  *((_DWORD *)a2 + 7) = v3;
  int v4 = *((_DWORD *)this + 2);
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_DWORD *)a2 + 2) = v4;
  int v5 = *((_DWORD *)this + 4);
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v5;
  int v6 = *((_DWORD *)this + 5);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *((_DWORD *)a2 + 5) = v6;
  int v7 = *((_DWORD *)this + 6);
  *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
  *((_DWORD *)a2 + 6) = v7;
  float result = *((float *)this + 3);
  *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
  *((float *)a2 + 3) = result;
  return result;
}

float CMMsl::MetsInfo::MetsInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_2706432E8;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  float result = *(float *)(a2 + 12);
  *(float *)(a1 + 12) = result;
  return result;
}

{
  float result;

  *(void *)a1 = &unk_2706432E8;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = 0;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  float result = *(float *)(a2 + 12);
  *(float *)(a1 + 12) = result;
  return result;
}

uint64_t CMMsl::MetsInfo::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    int v7 = &unk_2706432E8;
    uint64_t v3 = *(void *)(a2 + 24);
    *(_DWORD *)(a2 + 28) = 0;
    uint64_t v9 = *(void *)(a1 + 24);
    long long v4 = *(_OWORD *)(a1 + 8);
    long long v5 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = v3;
    *(_OWORD *)(a1 + 8) = v5;
    long long v8 = v4;
    PB::Base::~Base((PB::Base *)&v7);
  }
  return a1;
}

uint64_t CMMsl::MetsInfo::formatText(CMMsl::MetsInfo *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  char v5 = *((unsigned char *)this + 28);
  if (v5)
  {
    PB::TextFormatter::format(a2, "mets", *((float *)this + 2));
    char v5 = *((unsigned char *)this + 28);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((*((unsigned char *)this + 28) & 2) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "metsDiff", *((float *)this + 3));
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  PB::TextFormatter::format(a2, "metsHR", *((float *)this + 4));
  char v5 = *((unsigned char *)this + 28);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_13:
  PB::TextFormatter::format(a2, "metsWR", *((float *)this + 5));
  if ((*((unsigned char *)this + 28) & 0x10) != 0) {
LABEL_6:
  }
    PB::TextFormatter::format(a2, "source");
LABEL_7:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::MetsInfo::readFrom(CMMsl::MetsInfo *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3)
    {
      char v15 = 0;
      unsigned int v16 = 0;
      unint64_t v11 = 0;
      if (v2 > v3) {
        unint64_t v3 = v2;
      }
      do
      {
        if (v3 == v2)
        {
          int v4 = 1;
          *((unsigned char *)a2 + 24) = 1;
          return v4 == 0;
        }
        unint64_t v17 = v2 + 1;
        char v18 = *(unsigned char *)(v8 + v2);
        *((void *)a2 + 1) = v17;
        v11 |= (unint64_t)(v18 & 0x7F) << v15;
        if ((v18 & 0x80) == 0) {
          goto LABEL_21;
        }
        v15 += 7;
        unint64_t v2 = v17;
        BOOL v14 = v16++ > 8;
      }
      while (!v14);
LABEL_19:
      uint64_t result = PB::Reader::skip(a2);
      if (!result) {
        return result;
      }
      unint64_t v2 = *((void *)a2 + 1);
      goto LABEL_56;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4) {
      break;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((unsigned char *)this + 28) |= 1u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_41;
        }
        *((_DWORD *)this + 2) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_50;
      case 2u:
        *((unsigned char *)this + 28) |= 4u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_41;
        }
        *((_DWORD *)this + 4) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_50;
      case 3u:
        *((unsigned char *)this + 28) |= 8u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 > 0xFFFFFFFFFFFFFFFBLL || v2 + 4 > *((void *)a2 + 2)) {
          goto LABEL_41;
        }
        *((_DWORD *)this + 5) = *(_DWORD *)(*(void *)a2 + v2);
        goto LABEL_50;
      case 4u:
        *((unsigned char *)this + 28) |= 0x10u;
        unint64_t v20 = *((void *)a2 + 1);
        unint64_t v2 = *((void *)a2 + 2);
        uint64_t v21 = *(void *)a2;
        if (v20 > 0xFFFFFFFFFFFFFFF5 || v20 + 10 > v2)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v24 = 0;
          if (v2 <= v20) {
            unint64_t v2 = *((void *)a2 + 1);
          }
          while (1)
          {
            if (v2 == v20)
            {
              LODWORD(v24) = 0;
              *((unsigned char *)a2 + 24) = 1;
              goto LABEL_55;
            }
            unint64_t v28 = v20++;
            char v29 = *(unsigned char *)(v21 + v28);
            *((void *)a2 + 1) = v20;
            v24 |= (unint64_t)(v29 & 0x7F) << v26;
            if ((v29 & 0x80) == 0) {
              break;
            }
            v26 += 7;
            BOOL v14 = v27++ > 8;
            if (v14)
            {
              LODWORD(v24) = 0;
LABEL_54:
              unint64_t v2 = v28 + 1;
              goto LABEL_55;
            }
          }
          if (*((unsigned char *)a2 + 24)) {
            LODWORD(v24) = 0;
          }
          goto LABEL_54;
        }
        char v22 = 0;
        unsigned int v23 = 0;
        uint64_t v24 = 0;
        do
        {
          unint64_t v2 = v20 + 1;
          *((void *)a2 + 1) = v20 + 1;
          char v25 = *(unsigned char *)(v21 + v20);
          v24 |= (unint64_t)(v25 & 0x7F) << v22;
          if ((v25 & 0x80) == 0) {
            goto LABEL_55;
          }
          v22 += 7;
          unint64_t v20 = v2;
          BOOL v14 = v23++ > 8;
        }
        while (!v14);
        LODWORD(v24) = 0;
LABEL_55:
        *((_DWORD *)this + 6) = v24;
        break;
      case 5u:
        *((unsigned char *)this + 28) |= 2u;
        unint64_t v2 = *((void *)a2 + 1);
        if (v2 <= 0xFFFFFFFFFFFFFFFBLL && v2 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 3) = *(_DWORD *)(*(void *)a2 + v2);
LABEL_50:
          unint64_t v2 = *((void *)a2 + 1) + 4;
          *((void *)a2 + 1) = v2;
        }
        else
        {
LABEL_41:
          *((unsigned char *)a2 + 24) = 1;
        }
        break;
      default:
        goto LABEL_19;
    }
LABEL_56:
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  int v4 = 0;
  return v4 == 0;
}

uint64_t CMMsl::MetsInfo::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  char v4 = *(unsigned char *)(this + 28);
  if (v4)
  {
    this = PB::Writer::write(a2, *(float *)(this + 8));
    char v4 = *(unsigned char *)(v3 + 28);
    if ((v4 & 4) == 0)
    {
LABEL_3:
      if ((v4 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(unsigned char *)(this + 28) & 4) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(float *)(v3 + 16));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 8) == 0)
  {
LABEL_4:
    if ((v4 & 0x10) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = PB::Writer::writeVarInt(a2);
    if ((*(unsigned char *)(v3 + 28) & 2) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = PB::Writer::write(a2, *(float *)(v3 + 20));
  char v4 = *(unsigned char *)(v3 + 28);
  if ((v4 & 0x10) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v4 & 2) == 0) {
    return this;
  }
LABEL_11:
  float v5 = *(float *)(v3 + 12);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::MetsInfo::hash_value(CMMsl::MetsInfo *this)
{
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    uint64_t v1 = 0;
    if ((*((unsigned char *)this + 28) & 4) != 0) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 28) & 8) != 0) {
      goto LABEL_6;
    }
LABEL_17:
    uint64_t v5 = 0;
    if ((*((unsigned char *)this + 28) & 0x10) != 0) {
      goto LABEL_9;
    }
    goto LABEL_18;
  }
  float v9 = *((float *)this + 2);
  uint64_t v1 = LODWORD(v9);
  if (v9 == 0.0) {
    uint64_t v1 = 0;
  }
  if ((*((unsigned char *)this + 28) & 4) == 0) {
    goto LABEL_16;
  }
LABEL_3:
  float v2 = *((float *)this + 4);
  uint64_t v3 = LODWORD(v2);
  if (v2 == 0.0) {
    uint64_t v3 = 0;
  }
  if ((*((unsigned char *)this + 28) & 8) == 0) {
    goto LABEL_17;
  }
LABEL_6:
  float v4 = *((float *)this + 5);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  if ((*((unsigned char *)this + 28) & 0x10) != 0)
  {
LABEL_9:
    uint64_t v6 = *((unsigned int *)this + 6);
    if ((*((unsigned char *)this + 28) & 2) != 0) {
      goto LABEL_10;
    }
LABEL_19:
    uint64_t v8 = 0;
    return v3 ^ v1 ^ v5 ^ v6 ^ v8;
  }
LABEL_18:
  uint64_t v6 = 0;
  if ((*((unsigned char *)this + 28) & 2) == 0) {
    goto LABEL_19;
  }
LABEL_10:
  float v7 = *((float *)this + 3);
  uint64_t v8 = LODWORD(v7);
  if (v7 == 0.0) {
    uint64_t v8 = 0;
  }
  return v3 ^ v1 ^ v5 ^ v6 ^ v8;
}

void CMMsl::MobilityBoutMetrics::~MobilityBoutMetrics(CMMsl::MobilityBoutMetrics *this)
{
  PB::Base::~Base(this);
  JUMPOUT(0x25A2B2850);
}

float CMMsl::MobilityBoutMetrics::MobilityBoutMetrics(CMMsl::MobilityBoutMetrics *this, const CMMsl::MobilityBoutMetrics *a2)
{
  *(void *)this = &unk_270643320;
  *((void *)this + 23) = 0;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 4) != 0)
  {
    uint64_t v4 = *((void *)a2 + 3);
    uint64_t v3 = 4;
    *((void *)this + 23) = 4;
    *((void *)this + 3) = v4;
    uint64_t v2 = *((void *)a2 + 23);
    if ((v2 & 1) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = 0;
  if (v2)
  {
LABEL_5:
    uint64_t v4 = *((void *)a2 + 1);
    v3 |= 1uLL;
    *((void *)this + 23) = v3;
    *((void *)this + 1) = v4;
    uint64_t v2 = *((void *)a2 + 23);
  }
LABEL_6:
  if ((v2 & 0x200000) != 0)
  {
    int v5 = *((_DWORD *)a2 + 26);
    v3 |= 0x200000uLL;
    *((void *)this + 23) = v3;
    *((_DWORD *)this + 26) = v5;
    uint64_t v2 = *((void *)a2 + 23);
    if ((v2 & 0x1000000000) == 0)
    {
LABEL_8:
      if ((v2 & 0x100000000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x1000000000) == 0)
  {
    goto LABEL_8;
  }
  LODWORD(v4) = *((_DWORD *)a2 + 41);
  v3 |= 0x1000000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 41) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x100000000000) == 0)
  {
LABEL_9:
    if ((v2 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_53;
  }
LABEL_52:
  char v6 = *((unsigned char *)a2 + 181);
  v3 |= 0x100000000000uLL;
  *((void *)this + 23) = v3;
  *((unsigned char *)this + 181) = v6;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x800) == 0)
  {
LABEL_10:
    if ((v2 & 0x10000000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_54;
  }
LABEL_53:
  LODWORD(v4) = *((_DWORD *)a2 + 16);
  v3 |= 0x800uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 16) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x10000000000) == 0)
  {
LABEL_11:
    if ((v2 & 0x2000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_55;
  }
LABEL_54:
  char v7 = *((unsigned char *)a2 + 177);
  v3 |= 0x10000000000uLL;
  *((void *)this + 23) = v3;
  *((unsigned char *)this + 177) = v7;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x2000000) == 0)
  {
LABEL_12:
    if ((v2 & 0x80000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_56;
  }
LABEL_55:
  LODWORD(v4) = *((_DWORD *)a2 + 30);
  v3 |= 0x2000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 30) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x80000000000) == 0)
  {
LABEL_13:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_57;
  }
LABEL_56:
  char v8 = *((unsigned char *)a2 + 180);
  v3 |= 0x80000000000uLL;
  *((void *)this + 23) = v3;
  *((unsigned char *)this + 180) = v8;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x4000) == 0)
  {
LABEL_14:
    if ((v2 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v9 = *((_DWORD *)a2 + 19);
  v3 |= 0x4000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 19) = v9;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 2) == 0)
  {
LABEL_15:
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_59;
  }
LABEL_58:
  uint64_t v4 = *((void *)a2 + 2);
  v3 |= 2uLL;
  *((void *)this + 23) = v3;
  *((void *)this + 2) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 8) == 0)
  {
LABEL_16:
    if ((v2 & 0x8000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_60;
  }
LABEL_59:
  LODWORD(v4) = *((_DWORD *)a2 + 8);
  v3 |= 8uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 8) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x8000000000) == 0)
  {
LABEL_17:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_61;
  }
LABEL_60:
  char v10 = *((unsigned char *)a2 + 176);
  v3 |= 0x8000000000uLL;
  *((void *)this + 23) = v3;
  *((unsigned char *)this + 176) = v10;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x2000) == 0)
  {
LABEL_18:
    if ((v2 & 0x200000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_62;
  }
LABEL_61:
  int v11 = *((_DWORD *)a2 + 18);
  v3 |= 0x2000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 18) = v11;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x200000000) == 0)
  {
LABEL_19:
    if ((v2 & 0x4000000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_63;
  }
LABEL_62:
  int v12 = *((_DWORD *)a2 + 38);
  v3 |= 0x200000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 38) = v12;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x4000000000) == 0)
  {
LABEL_20:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_64;
  }
LABEL_63:
  int v13 = *((_DWORD *)a2 + 43);
  v3 |= 0x4000000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 43) = v13;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x100000) == 0)
  {
LABEL_21:
    if ((v2 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_65;
  }
LABEL_64:
  int v14 = *((_DWORD *)a2 + 25);
  v3 |= 0x100000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 25) = v14;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x20000) == 0)
  {
LABEL_22:
    if ((v2 & 0x10000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_66;
  }
LABEL_65:
  int v15 = *((_DWORD *)a2 + 22);
  v3 |= 0x20000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 22) = v15;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x10000) == 0)
  {
LABEL_23:
    if ((v2 & 0x40000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v16 = *((_DWORD *)a2 + 21);
  v3 |= 0x10000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 21) = v16;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x40000) == 0)
  {
LABEL_24:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v17 = *((_DWORD *)a2 + 23);
  v3 |= 0x40000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 23) = v17;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x80000) == 0)
  {
LABEL_25:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v18 = *((_DWORD *)a2 + 24);
  v3 |= 0x80000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 24) = v18;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x8000) == 0)
  {
LABEL_26:
    if ((v2 & 0x400) == 0) {
      goto LABEL_27;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v19 = *((_DWORD *)a2 + 20);
  v3 |= 0x8000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 20) = v19;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x400) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v20 = *((_DWORD *)a2 + 15);
  v3 |= 0x400uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 15) = v20;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x2000000000) == 0)
  {
LABEL_28:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_72;
  }
LABEL_71:
  int v21 = *((_DWORD *)a2 + 42);
  v3 |= 0x2000000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 42) = v21;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x1000) == 0)
  {
LABEL_29:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v22 = *((_DWORD *)a2 + 17);
  v3 |= 0x1000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 17) = v22;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x20000000) == 0)
  {
LABEL_30:
    if ((v2 & 0x10) == 0) {
      goto LABEL_31;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v23 = *((_DWORD *)a2 + 34);
  v3 |= 0x20000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 34) = v23;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x10) == 0)
  {
LABEL_31:
    if ((v2 & 0x400000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v24 = *((_DWORD *)a2 + 9);
  v3 |= 0x10uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 9) = v24;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x400000000) == 0)
  {
LABEL_32:
    if ((v2 & 0x20000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_76;
  }
LABEL_75:
  LODWORD(v4) = *((_DWORD *)a2 + 39);
  v3 |= 0x400000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 39) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_33:
    if ((v2 & 0x800000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_77;
  }
LABEL_76:
  char v25 = *((unsigned char *)a2 + 178);
  v3 |= 0x20000000000uLL;
  *((void *)this + 23) = v3;
  *((unsigned char *)this + 178) = v25;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x800000000) == 0)
  {
LABEL_34:
    if ((v2 & 0x40000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_78;
  }
LABEL_77:
  LODWORD(v4) = *((_DWORD *)a2 + 40);
  v3 |= 0x800000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 40) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x40000000000) == 0)
  {
LABEL_35:
    if ((v2 & 0x20) == 0) {
      goto LABEL_36;
    }
    goto LABEL_79;
  }
LABEL_78:
  char v26 = *((unsigned char *)a2 + 179);
  v3 |= 0x40000000000uLL;
  *((void *)this + 23) = v3;
  *((unsigned char *)this + 179) = v26;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x20) == 0)
  {
LABEL_36:
    if ((v2 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v27 = *((_DWORD *)a2 + 10);
  v3 |= 0x20uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 10) = v27;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x80) == 0)
  {
LABEL_37:
    if ((v2 & 0x4000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_81;
  }
LABEL_80:
  LODWORD(v4) = *((_DWORD *)a2 + 12);
  v3 |= 0x80uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 12) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x4000000) == 0)
  {
LABEL_38:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_82;
  }
LABEL_81:
  LODWORD(v4) = *((_DWORD *)a2 + 31);
  v3 |= 0x4000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 31) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x8000000) == 0)
  {
LABEL_39:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_83;
  }
LABEL_82:
  LODWORD(v4) = *((_DWORD *)a2 + 32);
  v3 |= 0x8000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 32) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x10000000) == 0)
  {
LABEL_40:
    if ((v2 & 0x40) == 0) {
      goto LABEL_41;
    }
    goto LABEL_84;
  }
LABEL_83:
  LODWORD(v4) = *((_DWORD *)a2 + 33);
  v3 |= 0x10000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 33) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x40) == 0)
  {
LABEL_41:
    if ((v2 & 0x100) == 0) {
      goto LABEL_42;
    }
    goto LABEL_85;
  }
LABEL_84:
  LODWORD(v4) = *((_DWORD *)a2 + 11);
  v3 |= 0x40uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 11) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x100) == 0)
  {
LABEL_42:
    if ((v2 & 0x200) == 0) {
      goto LABEL_43;
    }
    goto LABEL_86;
  }
LABEL_85:
  LODWORD(v4) = *((_DWORD *)a2 + 13);
  v3 |= 0x100uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 13) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x200) == 0)
  {
LABEL_43:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_87;
  }
LABEL_86:
  LODWORD(v4) = *((_DWORD *)a2 + 14);
  v3 |= 0x200uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 14) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x400000) == 0)
  {
LABEL_44:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_88;
  }
LABEL_87:
  LODWORD(v4) = *((_DWORD *)a2 + 27);
  v3 |= 0x400000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 27) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x800000) == 0)
  {
LABEL_45:
    if ((v2 & 0x1000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_89;
  }
LABEL_88:
  LODWORD(v4) = *((_DWORD *)a2 + 28);
  v3 |= 0x800000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 28) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x1000000) == 0)
  {
LABEL_46:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_90;
  }
LABEL_89:
  LODWORD(v4) = *((_DWORD *)a2 + 29);
  v3 |= 0x1000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 29) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x40000000) == 0)
  {
LABEL_47:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_91;
  }
LABEL_90:
  LODWORD(v4) = *((_DWORD *)a2 + 35);
  v3 |= 0x40000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 35) = v4;
  uint64_t v2 = *((void *)a2 + 23);
  if ((v2 & 0x80000000) == 0)
  {
LABEL_48:
    if ((v2 & 0x100000000) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_92;
  }
LABEL_91:
  LODWORD(v4) = *((_DWORD *)a2 + 36);
  v3 |= 0x80000000uLL;
  *((void *)this + 23) = v3;
  *((_DWORD *)this + 36) = v4;
  if ((*((void *)a2 + 23) & 0x100000000) == 0) {
    return *(float *)&v4;
  }
LABEL_92:
  LODWORD(v4) = *((_DWORD *)a2 + 37);
  *((void *)this + 23) = v3 | 0x100000000;
  *((_DWORD *)this + 37) = v4;
  return *(float *)&v4;
}

CMMsl *CMMsl::MobilityBoutMetrics::operator=(CMMsl *a1, const CMMsl::MobilityBoutMetrics *a2)
{
  if (a1 != a2)
  {
    CMMsl::MobilityBoutMetrics::MobilityBoutMetrics((CMMsl::MobilityBoutMetrics *)v5, a2);
    CMMsl::swap(a1, (CMMsl::MobilityBoutMetrics *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

float CMMsl::swap(CMMsl *this, CMMsl::MobilityBoutMetrics *a2, CMMsl::MobilityBoutMetrics *a3)
{
  uint64_t v3 = *((void *)this + 23);
  *((void *)this + 23) = *((void *)a2 + 23);
  *((void *)a2 + 23) = v3;
  uint64_t v4 = *((void *)this + 3);
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)a2 + 3) = v4;
  uint64_t v5 = *((void *)this + 1);
  *((void *)this + 1) = *((void *)a2 + 1);
  *((void *)a2 + 1) = v5;
  LODWORD(v3) = *((_DWORD *)this + 26);
  *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
  *((_DWORD *)a2 + 26) = v3;
  LODWORD(v5) = *((_DWORD *)this + 41);
  *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
  *((_DWORD *)a2 + 41) = v5;
  LOBYTE(v3) = *((unsigned char *)this + 181);
  *((unsigned char *)this + 181) = *((unsigned char *)a2 + 181);
  *((unsigned char *)a2 + 181) = v3;
  LODWORD(v5) = *((_DWORD *)this + 16);
  *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
  *((_DWORD *)a2 + 16) = v5;
  LOBYTE(v3) = *((unsigned char *)this + 177);
  *((unsigned char *)this + 177) = *((unsigned char *)a2 + 177);
  *((unsigned char *)a2 + 177) = v3;
  LODWORD(v5) = *((_DWORD *)this + 30);
  *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
  *((_DWORD *)a2 + 30) = v5;
  LOBYTE(v3) = *((unsigned char *)this + 180);
  *((unsigned char *)this + 180) = *((unsigned char *)a2 + 180);
  *((unsigned char *)a2 + 180) = v3;
  LODWORD(v3) = *((_DWORD *)this + 19);
  *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
  *((_DWORD *)a2 + 19) = v3;
  uint64_t v6 = *((void *)this + 2);
  *((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + 2) = v6;
  LODWORD(v6) = *((_DWORD *)this + 8);
  *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
  *((_DWORD *)a2 + 8) = v6;
  LOBYTE(v3) = *((unsigned char *)this + 176);
  *((unsigned char *)this + 176) = *((unsigned char *)a2 + 176);
  *((unsigned char *)a2 + 176) = v3;
  LODWORD(v3) = *((_DWORD *)this + 18);
  *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
  *((_DWORD *)a2 + 18) = v3;
  LODWORD(v3) = *((_DWORD *)this + 38);
  *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
  *((_DWORD *)a2 + 38) = v3;
  LODWORD(v3) = *((_DWORD *)this + 43);
  *((_DWORD *)this + 43) = *((_DWORD *)a2 + 43);
  *((_DWORD *)a2 + 43) = v3;
  LODWORD(v3) = *((_DWORD *)this + 25);
  *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
  *((_DWORD *)a2 + 25) = v3;
  LODWORD(v3) = *((_DWORD *)this + 22);
  *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 22) = v3;
  LODWORD(v3) = *((_DWORD *)this + 21);
  *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
  *((_DWORD *)a2 + 21) = v3;
  LODWORD(v3) = *((_DWORD *)this + 23);
  *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
  *((_DWORD *)a2 + 23) = v3;
  LODWORD(v3) = *((_DWORD *)this + 24);
  *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
  *((_DWORD *)a2 + 24) = v3;
  LODWORD(v3) = *((_DWORD *)this + 20);
  *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
  *((_DWORD *)a2 + 20) = v3;
  LODWORD(v3) = *((_DWORD *)this + 15);
  *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
  *((_DWORD *)a2 + 15) = v3;
  LODWORD(v3) = *((_DWORD *)this + 42);
  *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
  *((_DWORD *)a2 + 42) = v3;
  LODWORD(v3) = *((_DWORD *)this + 17);
  *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
  *((_DWORD *)a2 + 17) = v3;
  LODWORD(v3) = *((_DWORD *)this + 34);
  *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
  *((_DWORD *)a2 + 34) = v3;
  LODWORD(v3) = *((_DWORD *)this + 9);
  *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
  *((_DWORD *)a2 + 9) = v3;
  LODWORD(v6) = *((_DWORD *)this + 39);
  *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
  *((_DWORD *)a2 + 39) = v6;
  LOBYTE(v3) = *((unsigned char *)this + 178);
  *((unsigned char *)this + 178) = *((unsigned char *)a2 + 178);
  *((unsigned char *)a2 + 178) = v3;
  LODWORD(v6) = *((_DWORD *)this + 40);
  *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
  *((_DWORD *)a2 + 40) = v6;
  LOBYTE(v3) = *((unsigned char *)this + 179);
  *((unsigned char *)this + 179) = *((unsigned char *)a2 + 179);
  *((unsigned char *)a2 + 179) = v3;
  LODWORD(v3) = *((_DWORD *)this + 10);
  *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
  *((_DWORD *)a2 + 10) = v3;
  LODWORD(v6) = *((_DWORD *)this + 12);
  *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
  *((_DWORD *)a2 + 12) = v6;
  LODWORD(v6) = *((_DWORD *)this + 31);
  *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
  *((_DWORD *)a2 + 31) = v6;
  LODWORD(v6) = *((_DWORD *)this + 32);
  *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
  *((_DWORD *)a2 + 32) = v6;
  LODWORD(v6) = *((_DWORD *)this + 33);
  *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
  *((_DWORD *)a2 + 33) = v6;
  LODWORD(v6) = *((_DWORD *)this + 11);
  *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
  *((_DWORD *)a2 + 11) = v6;
  LODWORD(v6) = *((_DWORD *)this + 13);
  *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
  *((_DWORD *)a2 + 13) = v6;
  LODWORD(v6) = *((_DWORD *)this + 14);
  *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
  *((_DWORD *)a2 + 14) = v6;
  LODWORD(v6) = *((_DWORD *)this + 27);
  *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
  *((_DWORD *)a2 + 27) = v6;
  LODWORD(v6) = *((_DWORD *)this + 28);
  *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
  *((_DWORD *)a2 + 28) = v6;
  LODWORD(v6) = *((_DWORD *)this + 29);
  *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
  *((_DWORD *)a2 + 29) = v6;
  LODWORD(v6) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
  *((_DWORD *)a2 + 35) = v6;
  LODWORD(v6) = *((_DWORD *)this + 36);
  *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
  *((_DWORD *)a2 + 36) = v6;
  float result = *((float *)this + 37);
  *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
  *((float *)a2 + 37) = result;
  return result;
}

float CMMsl::MobilityBoutMetrics::MobilityBoutMetrics(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &unk_270643320;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = 0;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  *(unsigned char *)(a1 + 181) = *(unsigned char *)(a2 + 181);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  *(unsigned char *)(a1 + 178) = *(unsigned char *)(a2 + 178);
  *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 179) = *(unsigned char *)(a2 + 179);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  float result = *(float *)(a2 + 148);
  *(float *)(a1 + 148) = result;
  return result;
}

CMMsl *CMMsl::MobilityBoutMetrics::operator=(CMMsl *a1, uint64_t a2)
{
  if (a1 != (CMMsl *)a2)
  {
    CMMsl::MobilityBoutMetrics::MobilityBoutMetrics((uint64_t)v5, a2);
    CMMsl::swap(a1, (CMMsl::MobilityBoutMetrics *)v5, v3);
    PB::Base::~Base((PB::Base *)v5);
  }
  return a1;
}

uint64_t CMMsl::MobilityBoutMetrics::formatText(CMMsl::MobilityBoutMetrics *this, PB::TextFormatter *a2, const char *a3)
{
  PB::TextFormatter::beginObject(a2, a3);
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 8) != 0)
  {
    PB::TextFormatter::format(a2, "asymmetryPercentage", *((float *)this + 8));
    uint64_t v5 = *((void *)this + 23);
    if ((v5 & 0x8000000000) == 0)
    {
LABEL_3:
      if ((v5 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_52;
    }
  }
  else if ((v5 & 0x8000000000) == 0)
  {
    goto LABEL_3;
  }
  PB::TextFormatter::format(a2, "asymmetryPercentageIsValid");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_4:
    if ((v5 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_53;
  }
LABEL_52:
  PB::TextFormatter::format(a2, "asymmetryPercentageRejectionStatus");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x20) == 0)
  {
LABEL_5:
    if ((v5 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_54;
  }
LABEL_53:
  PB::TextFormatter::format(a2, "boundaryType");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x40) == 0)
  {
LABEL_6:
    if ((v5 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_55;
  }
LABEL_54:
  PB::TextFormatter::format(a2, "cycleTimeEntropy", *((float *)this + 11));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x80) == 0)
  {
LABEL_7:
    if ((v5 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_56;
  }
LABEL_55:
  PB::TextFormatter::format(a2, "cycleTimeMean", *((float *)this + 12));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x100) == 0)
  {
LABEL_8:
    if ((v5 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_57;
  }
LABEL_56:
  PB::TextFormatter::format(a2, "cycleTimePoincareSD1", *((float *)this + 13));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x200) == 0)
  {
LABEL_9:
    if ((v5 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_58;
  }
LABEL_57:
  PB::TextFormatter::format(a2, "cycleTimePoincareSD2", *((float *)this + 14));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x400) == 0)
  {
LABEL_10:
    if ((v5 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_59;
  }
LABEL_58:
  PB::TextFormatter::format(a2, "deviceSide");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x800) == 0)
  {
LABEL_11:
    if ((v5 & 0x10000000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_60;
  }
LABEL_59:
  PB::TextFormatter::format(a2, "doubleSupportPercentage", *((float *)this + 16));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x10000000000) == 0)
  {
LABEL_12:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_61;
  }
LABEL_60:
  PB::TextFormatter::format(a2, "doubleSupportPercentageIsValid");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x1000) == 0)
  {
LABEL_13:
    if ((v5 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_62;
  }
LABEL_61:
  PB::TextFormatter::format(a2, "doubleSupportPercentageRejectionStatus");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 1) == 0)
  {
LABEL_14:
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
    goto LABEL_63;
  }
LABEL_62:
  PB::TextFormatter::format(a2, "endTime", *((double *)this + 1));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 2) == 0)
  {
LABEL_15:
    if ((v5 & 0x20000000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_64;
  }
LABEL_63:
  PB::TextFormatter::format(a2, "invalidGradePercentage", *((double *)this + 2));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x20000000000) == 0)
  {
LABEL_16:
    if ((v5 & 0x40000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_65;
  }
LABEL_64:
  PB::TextFormatter::format(a2, "isHeightSet");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x40000000000) == 0)
  {
LABEL_17:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_66;
  }
LABEL_65:
  PB::TextFormatter::format(a2, "isWeightSet");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x2000) == 0)
  {
LABEL_18:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_67;
  }
LABEL_66:
  PB::TextFormatter::format(a2, "numGaitMetrics");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x4000) == 0)
  {
LABEL_19:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_68;
  }
LABEL_67:
  PB::TextFormatter::format(a2, "rejectionStatus");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x8000) == 0)
  {
LABEL_20:
    if ((v5 & 0x10000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_69;
  }
LABEL_68:
  PB::TextFormatter::format(a2, "segmentsRejectedByIsCadenceConcordant");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x10000) == 0)
  {
LABEL_21:
    if ((v5 & 0x20000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_70;
  }
LABEL_69:
  PB::TextFormatter::format(a2, "segmentsRejectedByIsFeasibleWalkingSpeed");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x20000) == 0)
  {
LABEL_22:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_71;
  }
LABEL_70:
  PB::TextFormatter::format(a2, "segmentsRejectedByIsNotRunning");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x40000) == 0)
  {
LABEL_23:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_72;
  }
LABEL_71:
  PB::TextFormatter::format(a2, "segmentsRejectedByIsPendular");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x80000) == 0)
  {
LABEL_24:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_73;
  }
LABEL_72:
  PB::TextFormatter::format(a2, "segmentsRejectedByIsSufficientVerticalTwist");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x100000) == 0)
  {
LABEL_25:
    if ((v5 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_74;
  }
LABEL_73:
  PB::TextFormatter::format(a2, "segmentsRejectedByIsSwingStanceCycle");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 4) == 0)
  {
LABEL_26:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_75;
  }
LABEL_74:
  PB::TextFormatter::format(a2, "startTime", *((double *)this + 3));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x200000) == 0)
  {
LABEL_27:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_76;
  }
LABEL_75:
  PB::TextFormatter::format(a2, "stepCount");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x400000) == 0)
  {
LABEL_28:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_77;
  }
LABEL_76:
  PB::TextFormatter::format(a2, "stepIndexOfHarmonicityAP", *((float *)this + 27));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x800000) == 0)
  {
LABEL_29:
    if ((v5 & 0x1000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_78;
  }
LABEL_77:
  PB::TextFormatter::format(a2, "stepIndexOfHarmonicityML", *((float *)this + 28));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x1000000) == 0)
  {
LABEL_30:
    if ((v5 & 0x2000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_79;
  }
LABEL_78:
  PB::TextFormatter::format(a2, "stepIndexOfHarmonicityVT", *((float *)this + 29));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x2000000) == 0)
  {
LABEL_31:
    if ((v5 & 0x4000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_80;
  }
LABEL_79:
  PB::TextFormatter::format(a2, "stepLength", *((float *)this + 30));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_32:
    if ((v5 & 0x80000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_81;
  }
LABEL_80:
  PB::TextFormatter::format(a2, "stepLengthEntropy", *((float *)this + 31));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x80000000000) == 0)
  {
LABEL_33:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_82;
  }
LABEL_81:
  PB::TextFormatter::format(a2, "stepLengthIsValid");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_34:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_83;
  }
LABEL_82:
  PB::TextFormatter::format(a2, "stepLengthPoincareSD1", *((float *)this + 32));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_35:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_84;
  }
LABEL_83:
  PB::TextFormatter::format(a2, "stepLengthPoincareSD2", *((float *)this + 33));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_36:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_85;
  }
LABEL_84:
  PB::TextFormatter::format(a2, "stepLengthRejectionStatus");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_37:
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_86;
  }
LABEL_85:
  PB::TextFormatter::format(a2, "swingIndexOfHarmonicityAP", *((float *)this + 35));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x80000000) == 0)
  {
LABEL_38:
    if ((v5 & 0x100000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_87;
  }
LABEL_86:
  PB::TextFormatter::format(a2, "swingIndexOfHarmonicityML", *((float *)this + 36));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x100000000) == 0)
  {
LABEL_39:
    if ((v5 & 0x200000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_88;
  }
LABEL_87:
  PB::TextFormatter::format(a2, "swingIndexOfHarmonicityVT", *((float *)this + 37));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x200000000) == 0)
  {
LABEL_40:
    if ((v5 & 0x400000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_89;
  }
LABEL_88:
  PB::TextFormatter::format(a2, "terminationReason");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x400000000) == 0)
  {
LABEL_41:
    if ((v5 & 0x800000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_90;
  }
LABEL_89:
  PB::TextFormatter::format(a2, "userHeight", *((float *)this + 39));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x800000000) == 0)
  {
LABEL_42:
    if ((v5 & 0x1000000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_91;
  }
LABEL_90:
  PB::TextFormatter::format(a2, "userWeight", *((float *)this + 40));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x1000000000) == 0)
  {
LABEL_43:
    if ((v5 & 0x100000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_92;
  }
LABEL_91:
  PB::TextFormatter::format(a2, "walkingSpeed", *((float *)this + 41));
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x100000000000) == 0)
  {
LABEL_44:
    if ((v5 & 0x2000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_93;
  }
LABEL_92:
  PB::TextFormatter::format(a2, "walkingSpeedIsValid");
  uint64_t v5 = *((void *)this + 23);
  if ((v5 & 0x2000000000) == 0)
  {
LABEL_45:
    if ((v5 & 0x4000000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
LABEL_93:
  PB::TextFormatter::format(a2, "walkingSpeedRejectionStatus");
  if ((*((void *)this + 23) & 0x4000000000) != 0) {
LABEL_46:
  }
    PB::TextFormatter::format(a2, "workoutType");
LABEL_47:
  return MEMORY[0x270F587F0](a2);
}

uint64_t CMMsl::MobilityBoutMetrics::readFrom(CMMsl::MobilityBoutMetrics *this, PB::Reader *a2)
{
  unint64_t v2 = *((void *)a2 + 1);
  unint64_t v3 = *((void *)a2 + 2);
  int v4 = *((unsigned __int8 *)a2 + 24);
  if (v2 >= v3 || v4 != 0) {
    return v4 == 0;
  }
  while (1)
  {
    uint64_t v8 = *(void *)a2;
    if (v2 > 0xFFFFFFFFFFFFFFF5 || v2 + 10 > v3) {
      break;
    }
    char v9 = 0;
    unsigned int v10 = 0;
    unint64_t v11 = 0;
    while (1)
    {
      unint64_t v12 = v2 + 1;
      *((void *)a2 + 1) = v2 + 1;
      char v13 = *(unsigned char *)(v8 + v2);
      v11 |= (unint64_t)(v13 & 0x7F) << v9;
      if ((v13 & 0x80) == 0) {
        break;
      }
      v9 += 7;
      unint64_t v2 = v12;
      BOOL v14 = v10++ > 8;
      if (v14) {
        goto LABEL_19;
      }
    }
LABEL_21:
    if ((v11 & 7) == 4)
    {
      int v4 = 0;
      return v4 == 0;
    }
    switch((v11 >> 3))
    {
      case 1u:
        *((void *)this + 23) |= 4uLL;
        unint64_t v20 = *((void *)a2 + 1);
        if (v20 > 0xFFFFFFFFFFFFFFF7 || v20 + 8 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((void *)this + 3) = *(void *)(*(void *)a2 + v20);
        goto LABEL_61;
      case 2u:
        *((void *)this + 23) |= 1uLL;
        unint64_t v21 = *((void *)a2 + 1);
        if (v21 > 0xFFFFFFFFFFFFFFF7 || v21 + 8 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((void *)this + 1) = *(void *)(*(void *)a2 + v21);
        goto LABEL_61;
      case 3u:
        *((void *)this + 23) |= 0x200000uLL;
        unint64_t v22 = *((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        uint64_t v24 = *(void *)a2;
        if (v22 <= 0xFFFFFFFFFFFFFFF5 && v22 + 10 <= v23)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          do
          {
            unint64_t v28 = v22 + 1;
            *((void *)a2 + 1) = v22 + 1;
            char v29 = *(unsigned char *)(v24 + v22);
            v27 |= (unint64_t)(v29 & 0x7F) << v25;
            if ((v29 & 0x80) == 0) {
              goto LABEL_363;
            }
            v25 += 7;
            unint64_t v22 = v28;
            BOOL v14 = v26++ > 8;
          }
          while (!v14);
LABEL_227:
          LODWORD(v27) = 0;
          goto LABEL_363;
        }
        char v203 = 0;
        unsigned int v204 = 0;
        uint64_t v27 = 0;
        if (v23 <= v22) {
          unint64_t v23 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v23 == v22)
          {
            LODWORD(v27) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v205 = v22 + 1;
            char v206 = *(unsigned char *)(v24 + v22);
            *((void *)a2 + 1) = v205;
            v27 |= (unint64_t)(v206 & 0x7F) << v203;
            if (v206 < 0)
            {
              v203 += 7;
              unint64_t v22 = v205;
              BOOL v14 = v204++ > 8;
              if (v14) {
                goto LABEL_227;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v27) = 0;
            }
          }
          break;
        }
LABEL_363:
        *((_DWORD *)this + 26) = v27;
        goto LABEL_355;
      case 4u:
        *((void *)this + 23) |= 0x1000000000uLL;
        unint64_t v30 = *((void *)a2 + 1);
        if (v30 > 0xFFFFFFFFFFFFFFFBLL || v30 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 41) = *(_DWORD *)(*(void *)a2 + v30);
        goto LABEL_353;
      case 5u:
        *((void *)this + 23) |= 0x100000000000uLL;
        unint64_t v31 = *((void *)a2 + 1);
        if (v31 >= *((void *)a2 + 2))
        {
          BOOL v34 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v32 = v31 + 1;
          int v33 = *(unsigned __int8 *)(*(void *)a2 + v31);
          *((void *)a2 + 1) = v32;
          BOOL v34 = v33 != 0;
        }
        *((unsigned char *)this + 181) = v34;
        goto LABEL_355;
      case 6u:
        *((void *)this + 23) |= 0x800uLL;
        unint64_t v35 = *((void *)a2 + 1);
        if (v35 > 0xFFFFFFFFFFFFFFFBLL || v35 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 16) = *(_DWORD *)(*(void *)a2 + v35);
        goto LABEL_353;
      case 7u:
        *((void *)this + 23) |= 0x10000000000uLL;
        unint64_t v36 = *((void *)a2 + 1);
        if (v36 >= *((void *)a2 + 2))
        {
          BOOL v39 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v37 = v36 + 1;
          int v38 = *(unsigned __int8 *)(*(void *)a2 + v36);
          *((void *)a2 + 1) = v37;
          BOOL v39 = v38 != 0;
        }
        *((unsigned char *)this + 177) = v39;
        goto LABEL_355;
      case 8u:
        *((void *)this + 23) |= 0x2000000uLL;
        unint64_t v40 = *((void *)a2 + 1);
        if (v40 > 0xFFFFFFFFFFFFFFFBLL || v40 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 30) = *(_DWORD *)(*(void *)a2 + v40);
        goto LABEL_353;
      case 9u:
        *((void *)this + 23) |= 0x80000000000uLL;
        unint64_t v41 = *((void *)a2 + 1);
        if (v41 >= *((void *)a2 + 2))
        {
          BOOL v44 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v42 = v41 + 1;
          int v43 = *(unsigned __int8 *)(*(void *)a2 + v41);
          *((void *)a2 + 1) = v42;
          BOOL v44 = v43 != 0;
        }
        *((unsigned char *)this + 180) = v44;
        goto LABEL_355;
      case 0xAu:
        *((void *)this + 23) |= 0x4000uLL;
        unint64_t v45 = *((void *)a2 + 1);
        unint64_t v46 = *((void *)a2 + 2);
        uint64_t v47 = *(void *)a2;
        if (v45 <= 0xFFFFFFFFFFFFFFF5 && v45 + 10 <= v46)
        {
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          do
          {
            unint64_t v51 = v45 + 1;
            *((void *)a2 + 1) = v45 + 1;
            char v52 = *(unsigned char *)(v47 + v45);
            v50 |= (unint64_t)(v52 & 0x7F) << v48;
            if ((v52 & 0x80) == 0) {
              goto LABEL_367;
            }
            v48 += 7;
            unint64_t v45 = v51;
            BOOL v14 = v49++ > 8;
          }
          while (!v14);
LABEL_240:
          LODWORD(v50) = 0;
          goto LABEL_367;
        }
        char v207 = 0;
        unsigned int v208 = 0;
        uint64_t v50 = 0;
        if (v46 <= v45) {
          unint64_t v46 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v46 == v45)
          {
            LODWORD(v50) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v209 = v45 + 1;
            char v210 = *(unsigned char *)(v47 + v45);
            *((void *)a2 + 1) = v209;
            v50 |= (unint64_t)(v210 & 0x7F) << v207;
            if (v210 < 0)
            {
              v207 += 7;
              unint64_t v45 = v209;
              BOOL v14 = v208++ > 8;
              if (v14) {
                goto LABEL_240;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v50) = 0;
            }
          }
          break;
        }
LABEL_367:
        *((_DWORD *)this + 19) = v50;
        goto LABEL_355;
      case 0xBu:
        *((void *)this + 23) |= 2uLL;
        unint64_t v53 = *((void *)a2 + 1);
        if (v53 > 0xFFFFFFFFFFFFFFF7 || v53 + 8 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((void *)this + 2) = *(void *)(*(void *)a2 + v53);
LABEL_61:
        uint64_t v54 = *((void *)a2 + 1) + 8;
        goto LABEL_354;
      case 0xCu:
        *((void *)this + 23) |= 8uLL;
        unint64_t v55 = *((void *)a2 + 1);
        if (v55 > 0xFFFFFFFFFFFFFFFBLL || v55 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 8) = *(_DWORD *)(*(void *)a2 + v55);
        goto LABEL_353;
      case 0xDu:
        *((void *)this + 23) |= 0x8000000000uLL;
        unint64_t v56 = *((void *)a2 + 1);
        if (v56 >= *((void *)a2 + 2))
        {
          BOOL v59 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v57 = v56 + 1;
          int v58 = *(unsigned __int8 *)(*(void *)a2 + v56);
          *((void *)a2 + 1) = v57;
          BOOL v59 = v58 != 0;
        }
        *((unsigned char *)this + 176) = v59;
        goto LABEL_355;
      case 0xEu:
        *((void *)this + 23) |= 0x2000uLL;
        unint64_t v60 = *((void *)a2 + 1);
        unint64_t v61 = *((void *)a2 + 2);
        uint64_t v62 = *(void *)a2;
        if (v60 <= 0xFFFFFFFFFFFFFFF5 && v60 + 10 <= v61)
        {
          char v63 = 0;
          unsigned int v64 = 0;
          uint64_t v65 = 0;
          do
          {
            unint64_t v66 = v60 + 1;
            *((void *)a2 + 1) = v60 + 1;
            char v67 = *(unsigned char *)(v62 + v60);
            v65 |= (unint64_t)(v67 & 0x7F) << v63;
            if ((v67 & 0x80) == 0) {
              goto LABEL_371;
            }
            v63 += 7;
            unint64_t v60 = v66;
            BOOL v14 = v64++ > 8;
          }
          while (!v14);
LABEL_249:
          LODWORD(v65) = 0;
          goto LABEL_371;
        }
        char v211 = 0;
        unsigned int v212 = 0;
        uint64_t v65 = 0;
        if (v61 <= v60) {
          unint64_t v61 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v61 == v60)
          {
            LODWORD(v65) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v213 = v60 + 1;
            char v214 = *(unsigned char *)(v62 + v60);
            *((void *)a2 + 1) = v213;
            v65 |= (unint64_t)(v214 & 0x7F) << v211;
            if (v214 < 0)
            {
              v211 += 7;
              unint64_t v60 = v213;
              BOOL v14 = v212++ > 8;
              if (v14) {
                goto LABEL_249;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v65) = 0;
            }
          }
          break;
        }
LABEL_371:
        *((_DWORD *)this + 18) = v65;
        goto LABEL_355;
      case 0xFu:
        *((void *)this + 23) |= 0x200000000uLL;
        unint64_t v68 = *((void *)a2 + 1);
        unint64_t v69 = *((void *)a2 + 2);
        uint64_t v70 = *(void *)a2;
        if (v68 <= 0xFFFFFFFFFFFFFFF5 && v68 + 10 <= v69)
        {
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v73 = 0;
          do
          {
            unint64_t v74 = v68 + 1;
            *((void *)a2 + 1) = v68 + 1;
            char v75 = *(unsigned char *)(v70 + v68);
            v73 |= (unint64_t)(v75 & 0x7F) << v71;
            if ((v75 & 0x80) == 0) {
              goto LABEL_375;
            }
            v71 += 7;
            unint64_t v68 = v74;
            BOOL v14 = v72++ > 8;
          }
          while (!v14);
LABEL_256:
          LODWORD(v73) = 0;
          goto LABEL_375;
        }
        char v215 = 0;
        unsigned int v216 = 0;
        uint64_t v73 = 0;
        if (v69 <= v68) {
          unint64_t v69 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v69 == v68)
          {
            LODWORD(v73) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v217 = v68 + 1;
            char v218 = *(unsigned char *)(v70 + v68);
            *((void *)a2 + 1) = v217;
            v73 |= (unint64_t)(v218 & 0x7F) << v215;
            if (v218 < 0)
            {
              v215 += 7;
              unint64_t v68 = v217;
              BOOL v14 = v216++ > 8;
              if (v14) {
                goto LABEL_256;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v73) = 0;
            }
          }
          break;
        }
LABEL_375:
        *((_DWORD *)this + 38) = v73;
        goto LABEL_355;
      case 0x10u:
        *((void *)this + 23) |= 0x4000000000uLL;
        unint64_t v76 = *((void *)a2 + 1);
        unint64_t v77 = *((void *)a2 + 2);
        uint64_t v78 = *(void *)a2;
        if (v76 <= 0xFFFFFFFFFFFFFFF5 && v76 + 10 <= v77)
        {
          char v79 = 0;
          unsigned int v80 = 0;
          uint64_t v81 = 0;
          do
          {
            unint64_t v82 = v76 + 1;
            *((void *)a2 + 1) = v76 + 1;
            char v83 = *(unsigned char *)(v78 + v76);
            v81 |= (unint64_t)(v83 & 0x7F) << v79;
            if ((v83 & 0x80) == 0) {
              goto LABEL_379;
            }
            v79 += 7;
            unint64_t v76 = v82;
            BOOL v14 = v80++ > 8;
          }
          while (!v14);
LABEL_263:
          LODWORD(v81) = 0;
          goto LABEL_379;
        }
        char v219 = 0;
        unsigned int v220 = 0;
        uint64_t v81 = 0;
        if (v77 <= v76) {
          unint64_t v77 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v77 == v76)
          {
            LODWORD(v81) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v221 = v76 + 1;
            char v222 = *(unsigned char *)(v78 + v76);
            *((void *)a2 + 1) = v221;
            v81 |= (unint64_t)(v222 & 0x7F) << v219;
            if (v222 < 0)
            {
              v219 += 7;
              unint64_t v76 = v221;
              BOOL v14 = v220++ > 8;
              if (v14) {
                goto LABEL_263;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v81) = 0;
            }
          }
          break;
        }
LABEL_379:
        *((_DWORD *)this + 43) = v81;
        goto LABEL_355;
      case 0x11u:
        *((void *)this + 23) |= 0x100000uLL;
        unint64_t v84 = *((void *)a2 + 1);
        unint64_t v85 = *((void *)a2 + 2);
        uint64_t v86 = *(void *)a2;
        if (v84 <= 0xFFFFFFFFFFFFFFF5 && v84 + 10 <= v85)
        {
          char v87 = 0;
          unsigned int v88 = 0;
          uint64_t v89 = 0;
          do
          {
            unint64_t v90 = v84 + 1;
            *((void *)a2 + 1) = v84 + 1;
            char v91 = *(unsigned char *)(v86 + v84);
            v89 |= (unint64_t)(v91 & 0x7F) << v87;
            if ((v91 & 0x80) == 0) {
              goto LABEL_383;
            }
            v87 += 7;
            unint64_t v84 = v90;
            BOOL v14 = v88++ > 8;
          }
          while (!v14);
LABEL_270:
          LODWORD(v89) = 0;
          goto LABEL_383;
        }
        char v223 = 0;
        unsigned int v224 = 0;
        uint64_t v89 = 0;
        if (v85 <= v84) {
          unint64_t v85 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v85 == v84)
          {
            LODWORD(v89) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v225 = v84 + 1;
            char v226 = *(unsigned char *)(v86 + v84);
            *((void *)a2 + 1) = v225;
            v89 |= (unint64_t)(v226 & 0x7F) << v223;
            if (v226 < 0)
            {
              v223 += 7;
              unint64_t v84 = v225;
              BOOL v14 = v224++ > 8;
              if (v14) {
                goto LABEL_270;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v89) = 0;
            }
          }
          break;
        }
LABEL_383:
        *((_DWORD *)this + 25) = v89;
        goto LABEL_355;
      case 0x12u:
        *((void *)this + 23) |= 0x20000uLL;
        unint64_t v92 = *((void *)a2 + 1);
        unint64_t v93 = *((void *)a2 + 2);
        uint64_t v94 = *(void *)a2;
        if (v92 <= 0xFFFFFFFFFFFFFFF5 && v92 + 10 <= v93)
        {
          char v95 = 0;
          unsigned int v96 = 0;
          uint64_t v97 = 0;
          do
          {
            unint64_t v98 = v92 + 1;
            *((void *)a2 + 1) = v92 + 1;
            char v99 = *(unsigned char *)(v94 + v92);
            v97 |= (unint64_t)(v99 & 0x7F) << v95;
            if ((v99 & 0x80) == 0) {
              goto LABEL_387;
            }
            v95 += 7;
            unint64_t v92 = v98;
            BOOL v14 = v96++ > 8;
          }
          while (!v14);
LABEL_277:
          LODWORD(v97) = 0;
          goto LABEL_387;
        }
        char v227 = 0;
        unsigned int v228 = 0;
        uint64_t v97 = 0;
        if (v93 <= v92) {
          unint64_t v93 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v93 == v92)
          {
            LODWORD(v97) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v229 = v92 + 1;
            char v230 = *(unsigned char *)(v94 + v92);
            *((void *)a2 + 1) = v229;
            v97 |= (unint64_t)(v230 & 0x7F) << v227;
            if (v230 < 0)
            {
              v227 += 7;
              unint64_t v92 = v229;
              BOOL v14 = v228++ > 8;
              if (v14) {
                goto LABEL_277;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v97) = 0;
            }
          }
          break;
        }
LABEL_387:
        *((_DWORD *)this + 22) = v97;
        goto LABEL_355;
      case 0x13u:
        *((void *)this + 23) |= 0x10000uLL;
        unint64_t v100 = *((void *)a2 + 1);
        unint64_t v101 = *((void *)a2 + 2);
        uint64_t v102 = *(void *)a2;
        if (v100 <= 0xFFFFFFFFFFFFFFF5 && v100 + 10 <= v101)
        {
          char v103 = 0;
          unsigned int v104 = 0;
          uint64_t v105 = 0;
          do
          {
            unint64_t v106 = v100 + 1;
            *((void *)a2 + 1) = v100 + 1;
            char v107 = *(unsigned char *)(v102 + v100);
            v105 |= (unint64_t)(v107 & 0x7F) << v103;
            if ((v107 & 0x80) == 0) {
              goto LABEL_391;
            }
            v103 += 7;
            unint64_t v100 = v106;
            BOOL v14 = v104++ > 8;
          }
          while (!v14);
LABEL_284:
          LODWORD(v105) = 0;
          goto LABEL_391;
        }
        char v231 = 0;
        unsigned int v232 = 0;
        uint64_t v105 = 0;
        if (v101 <= v100) {
          unint64_t v101 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v101 == v100)
          {
            LODWORD(v105) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v233 = v100 + 1;
            char v234 = *(unsigned char *)(v102 + v100);
            *((void *)a2 + 1) = v233;
            v105 |= (unint64_t)(v234 & 0x7F) << v231;
            if (v234 < 0)
            {
              v231 += 7;
              unint64_t v100 = v233;
              BOOL v14 = v232++ > 8;
              if (v14) {
                goto LABEL_284;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v105) = 0;
            }
          }
          break;
        }
LABEL_391:
        *((_DWORD *)this + 21) = v105;
        goto LABEL_355;
      case 0x14u:
        *((void *)this + 23) |= 0x40000uLL;
        unint64_t v108 = *((void *)a2 + 1);
        unint64_t v109 = *((void *)a2 + 2);
        uint64_t v110 = *(void *)a2;
        if (v108 <= 0xFFFFFFFFFFFFFFF5 && v108 + 10 <= v109)
        {
          char v111 = 0;
          unsigned int v112 = 0;
          uint64_t v113 = 0;
          do
          {
            unint64_t v114 = v108 + 1;
            *((void *)a2 + 1) = v108 + 1;
            char v115 = *(unsigned char *)(v110 + v108);
            v113 |= (unint64_t)(v115 & 0x7F) << v111;
            if ((v115 & 0x80) == 0) {
              goto LABEL_395;
            }
            v111 += 7;
            unint64_t v108 = v114;
            BOOL v14 = v112++ > 8;
          }
          while (!v14);
LABEL_291:
          LODWORD(v113) = 0;
          goto LABEL_395;
        }
        char v235 = 0;
        unsigned int v236 = 0;
        uint64_t v113 = 0;
        if (v109 <= v108) {
          unint64_t v109 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v109 == v108)
          {
            LODWORD(v113) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v237 = v108 + 1;
            char v238 = *(unsigned char *)(v110 + v108);
            *((void *)a2 + 1) = v237;
            v113 |= (unint64_t)(v238 & 0x7F) << v235;
            if (v238 < 0)
            {
              v235 += 7;
              unint64_t v108 = v237;
              BOOL v14 = v236++ > 8;
              if (v14) {
                goto LABEL_291;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v113) = 0;
            }
          }
          break;
        }
LABEL_395:
        *((_DWORD *)this + 23) = v113;
        goto LABEL_355;
      case 0x15u:
        *((void *)this + 23) |= 0x80000uLL;
        unint64_t v116 = *((void *)a2 + 1);
        unint64_t v117 = *((void *)a2 + 2);
        uint64_t v118 = *(void *)a2;
        if (v116 <= 0xFFFFFFFFFFFFFFF5 && v116 + 10 <= v117)
        {
          char v119 = 0;
          unsigned int v120 = 0;
          uint64_t v121 = 0;
          do
          {
            unint64_t v122 = v116 + 1;
            *((void *)a2 + 1) = v116 + 1;
            char v123 = *(unsigned char *)(v118 + v116);
            v121 |= (unint64_t)(v123 & 0x7F) << v119;
            if ((v123 & 0x80) == 0) {
              goto LABEL_399;
            }
            v119 += 7;
            unint64_t v116 = v122;
            BOOL v14 = v120++ > 8;
          }
          while (!v14);
LABEL_298:
          LODWORD(v121) = 0;
          goto LABEL_399;
        }
        char v239 = 0;
        unsigned int v240 = 0;
        uint64_t v121 = 0;
        if (v117 <= v116) {
          unint64_t v117 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v117 == v116)
          {
            LODWORD(v121) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v241 = v116 + 1;
            char v242 = *(unsigned char *)(v118 + v116);
            *((void *)a2 + 1) = v241;
            v121 |= (unint64_t)(v242 & 0x7F) << v239;
            if (v242 < 0)
            {
              v239 += 7;
              unint64_t v116 = v241;
              BOOL v14 = v240++ > 8;
              if (v14) {
                goto LABEL_298;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v121) = 0;
            }
          }
          break;
        }
LABEL_399:
        *((_DWORD *)this + 24) = v121;
        goto LABEL_355;
      case 0x16u:
        *((void *)this + 23) |= 0x8000uLL;
        unint64_t v124 = *((void *)a2 + 1);
        unint64_t v125 = *((void *)a2 + 2);
        uint64_t v126 = *(void *)a2;
        if (v124 <= 0xFFFFFFFFFFFFFFF5 && v124 + 10 <= v125)
        {
          char v127 = 0;
          unsigned int v128 = 0;
          uint64_t v129 = 0;
          do
          {
            unint64_t v130 = v124 + 1;
            *((void *)a2 + 1) = v124 + 1;
            char v131 = *(unsigned char *)(v126 + v124);
            v129 |= (unint64_t)(v131 & 0x7F) << v127;
            if ((v131 & 0x80) == 0) {
              goto LABEL_403;
            }
            v127 += 7;
            unint64_t v124 = v130;
            BOOL v14 = v128++ > 8;
          }
          while (!v14);
LABEL_305:
          LODWORD(v129) = 0;
          goto LABEL_403;
        }
        char v243 = 0;
        unsigned int v244 = 0;
        uint64_t v129 = 0;
        if (v125 <= v124) {
          unint64_t v125 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v125 == v124)
          {
            LODWORD(v129) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v245 = v124 + 1;
            char v246 = *(unsigned char *)(v126 + v124);
            *((void *)a2 + 1) = v245;
            v129 |= (unint64_t)(v246 & 0x7F) << v243;
            if (v246 < 0)
            {
              v243 += 7;
              unint64_t v124 = v245;
              BOOL v14 = v244++ > 8;
              if (v14) {
                goto LABEL_305;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v129) = 0;
            }
          }
          break;
        }
LABEL_403:
        *((_DWORD *)this + 20) = v129;
        goto LABEL_355;
      case 0x17u:
        *((void *)this + 23) |= 0x400uLL;
        unint64_t v132 = *((void *)a2 + 1);
        unint64_t v133 = *((void *)a2 + 2);
        uint64_t v134 = *(void *)a2;
        if (v132 <= 0xFFFFFFFFFFFFFFF5 && v132 + 10 <= v133)
        {
          char v135 = 0;
          unsigned int v136 = 0;
          uint64_t v137 = 0;
          do
          {
            unint64_t v138 = v132 + 1;
            *((void *)a2 + 1) = v132 + 1;
            char v139 = *(unsigned char *)(v134 + v132);
            v137 |= (unint64_t)(v139 & 0x7F) << v135;
            if ((v139 & 0x80) == 0) {
              goto LABEL_407;
            }
            v135 += 7;
            unint64_t v132 = v138;
            BOOL v14 = v136++ > 8;
          }
          while (!v14);
LABEL_312:
          LODWORD(v137) = 0;
          goto LABEL_407;
        }
        char v247 = 0;
        unsigned int v248 = 0;
        uint64_t v137 = 0;
        if (v133 <= v132) {
          unint64_t v133 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v133 == v132)
          {
            LODWORD(v137) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v249 = v132 + 1;
            char v250 = *(unsigned char *)(v134 + v132);
            *((void *)a2 + 1) = v249;
            v137 |= (unint64_t)(v250 & 0x7F) << v247;
            if (v250 < 0)
            {
              v247 += 7;
              unint64_t v132 = v249;
              BOOL v14 = v248++ > 8;
              if (v14) {
                goto LABEL_312;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v137) = 0;
            }
          }
          break;
        }
LABEL_407:
        *((_DWORD *)this + 15) = v137;
        goto LABEL_355;
      case 0x18u:
        *((void *)this + 23) |= 0x2000000000uLL;
        unint64_t v140 = *((void *)a2 + 1);
        unint64_t v141 = *((void *)a2 + 2);
        uint64_t v142 = *(void *)a2;
        if (v140 <= 0xFFFFFFFFFFFFFFF5 && v140 + 10 <= v141)
        {
          char v143 = 0;
          unsigned int v144 = 0;
          uint64_t v145 = 0;
          do
          {
            unint64_t v146 = v140 + 1;
            *((void *)a2 + 1) = v140 + 1;
            char v147 = *(unsigned char *)(v142 + v140);
            v145 |= (unint64_t)(v147 & 0x7F) << v143;
            if ((v147 & 0x80) == 0) {
              goto LABEL_411;
            }
            v143 += 7;
            unint64_t v140 = v146;
            BOOL v14 = v144++ > 8;
          }
          while (!v14);
LABEL_319:
          LODWORD(v145) = 0;
          goto LABEL_411;
        }
        char v251 = 0;
        unsigned int v252 = 0;
        uint64_t v145 = 0;
        if (v141 <= v140) {
          unint64_t v141 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v141 == v140)
          {
            LODWORD(v145) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v253 = v140 + 1;
            char v254 = *(unsigned char *)(v142 + v140);
            *((void *)a2 + 1) = v253;
            v145 |= (unint64_t)(v254 & 0x7F) << v251;
            if (v254 < 0)
            {
              v251 += 7;
              unint64_t v140 = v253;
              BOOL v14 = v252++ > 8;
              if (v14) {
                goto LABEL_319;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v145) = 0;
            }
          }
          break;
        }
LABEL_411:
        *((_DWORD *)this + 42) = v145;
        goto LABEL_355;
      case 0x19u:
        *((void *)this + 23) |= 0x1000uLL;
        unint64_t v148 = *((void *)a2 + 1);
        unint64_t v149 = *((void *)a2 + 2);
        uint64_t v150 = *(void *)a2;
        if (v148 <= 0xFFFFFFFFFFFFFFF5 && v148 + 10 <= v149)
        {
          char v151 = 0;
          unsigned int v152 = 0;
          uint64_t v153 = 0;
          do
          {
            unint64_t v154 = v148 + 1;
            *((void *)a2 + 1) = v148 + 1;
            char v155 = *(unsigned char *)(v150 + v148);
            v153 |= (unint64_t)(v155 & 0x7F) << v151;
            if ((v155 & 0x80) == 0) {
              goto LABEL_415;
            }
            v151 += 7;
            unint64_t v148 = v154;
            BOOL v14 = v152++ > 8;
          }
          while (!v14);
LABEL_326:
          LODWORD(v153) = 0;
          goto LABEL_415;
        }
        char v255 = 0;
        unsigned int v256 = 0;
        uint64_t v153 = 0;
        if (v149 <= v148) {
          unint64_t v149 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v149 == v148)
          {
            LODWORD(v153) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v257 = v148 + 1;
            char v258 = *(unsigned char *)(v150 + v148);
            *((void *)a2 + 1) = v257;
            v153 |= (unint64_t)(v258 & 0x7F) << v255;
            if (v258 < 0)
            {
              v255 += 7;
              unint64_t v148 = v257;
              BOOL v14 = v256++ > 8;
              if (v14) {
                goto LABEL_326;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v153) = 0;
            }
          }
          break;
        }
LABEL_415:
        *((_DWORD *)this + 17) = v153;
        goto LABEL_355;
      case 0x1Au:
        *((void *)this + 23) |= 0x20000000uLL;
        unint64_t v156 = *((void *)a2 + 1);
        unint64_t v157 = *((void *)a2 + 2);
        uint64_t v158 = *(void *)a2;
        if (v156 <= 0xFFFFFFFFFFFFFFF5 && v156 + 10 <= v157)
        {
          char v159 = 0;
          unsigned int v160 = 0;
          uint64_t v161 = 0;
          do
          {
            unint64_t v162 = v156 + 1;
            *((void *)a2 + 1) = v156 + 1;
            char v163 = *(unsigned char *)(v158 + v156);
            v161 |= (unint64_t)(v163 & 0x7F) << v159;
            if ((v163 & 0x80) == 0) {
              goto LABEL_419;
            }
            v159 += 7;
            unint64_t v156 = v162;
            BOOL v14 = v160++ > 8;
          }
          while (!v14);
LABEL_333:
          LODWORD(v161) = 0;
          goto LABEL_419;
        }
        char v259 = 0;
        unsigned int v260 = 0;
        uint64_t v161 = 0;
        if (v157 <= v156) {
          unint64_t v157 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v157 == v156)
          {
            LODWORD(v161) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v261 = v156 + 1;
            char v262 = *(unsigned char *)(v158 + v156);
            *((void *)a2 + 1) = v261;
            v161 |= (unint64_t)(v262 & 0x7F) << v259;
            if (v262 < 0)
            {
              v259 += 7;
              unint64_t v156 = v261;
              BOOL v14 = v260++ > 8;
              if (v14) {
                goto LABEL_333;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v161) = 0;
            }
          }
          break;
        }
LABEL_419:
        *((_DWORD *)this + 34) = v161;
        goto LABEL_355;
      case 0x1Bu:
        *((void *)this + 23) |= 0x10uLL;
        unint64_t v164 = *((void *)a2 + 1);
        unint64_t v165 = *((void *)a2 + 2);
        uint64_t v166 = *(void *)a2;
        if (v164 <= 0xFFFFFFFFFFFFFFF5 && v164 + 10 <= v165)
        {
          char v167 = 0;
          unsigned int v168 = 0;
          uint64_t v169 = 0;
          do
          {
            unint64_t v170 = v164 + 1;
            *((void *)a2 + 1) = v164 + 1;
            char v171 = *(unsigned char *)(v166 + v164);
            v169 |= (unint64_t)(v171 & 0x7F) << v167;
            if ((v171 & 0x80) == 0) {
              goto LABEL_423;
            }
            v167 += 7;
            unint64_t v164 = v170;
            BOOL v14 = v168++ > 8;
          }
          while (!v14);
LABEL_340:
          LODWORD(v169) = 0;
          goto LABEL_423;
        }
        char v263 = 0;
        unsigned int v264 = 0;
        uint64_t v169 = 0;
        if (v165 <= v164) {
          unint64_t v165 = *((void *)a2 + 1);
        }
        while (2)
        {
          if (v165 == v164)
          {
            LODWORD(v169) = 0;
            *((unsigned char *)a2 + 24) = 1;
          }
          else
          {
            unint64_t v265 = v164 + 1;
            char v266 = *(unsigned char *)(v166 + v164);
            *((void *)a2 + 1) = v265;
            v169 |= (unint64_t)(v266 & 0x7F) << v263;
            if (v266 < 0)
            {
              v263 += 7;
              unint64_t v164 = v265;
              BOOL v14 = v264++ > 8;
              if (v14) {
                goto LABEL_340;
              }
              continue;
            }
            if (*((unsigned char *)a2 + 24)) {
              LODWORD(v169) = 0;
            }
          }
          break;
        }
LABEL_423:
        *((_DWORD *)this + 9) = v169;
        goto LABEL_355;
      case 0x1Cu:
        *((void *)this + 23) |= 0x400000000uLL;
        unint64_t v172 = *((void *)a2 + 1);
        if (v172 > 0xFFFFFFFFFFFFFFFBLL || v172 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 39) = *(_DWORD *)(*(void *)a2 + v172);
        goto LABEL_353;
      case 0x1Du:
        *((void *)this + 23) |= 0x20000000000uLL;
        unint64_t v173 = *((void *)a2 + 1);
        if (v173 >= *((void *)a2 + 2))
        {
          BOOL v176 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v174 = v173 + 1;
          int v175 = *(unsigned __int8 *)(*(void *)a2 + v173);
          *((void *)a2 + 1) = v174;
          BOOL v176 = v175 != 0;
        }
        *((unsigned char *)this + 178) = v176;
        goto LABEL_355;
      case 0x1Eu:
        *((void *)this + 23) |= 0x800000000uLL;
        unint64_t v177 = *((void *)a2 + 1);
        if (v177 > 0xFFFFFFFFFFFFFFFBLL || v177 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 40) = *(_DWORD *)(*(void *)a2 + v177);
        goto LABEL_353;
      case 0x1Fu:
        *((void *)this + 23) |= 0x40000000000uLL;
        unint64_t v178 = *((void *)a2 + 1);
        if (v178 >= *((void *)a2 + 2))
        {
          BOOL v181 = 0;
          *((unsigned char *)a2 + 24) = 1;
        }
        else
        {
          unint64_t v179 = v178 + 1;
          int v180 = *(unsigned __int8 *)(*(void *)a2 + v178);
          *((void *)a2 + 1) = v179;
          BOOL v181 = v180 != 0;
        }
        *((unsigned char *)this + 179) = v181;
        goto LABEL_355;
      case 0x20u:
        *((void *)this + 23) |= 0x20uLL;
        unint64_t v182 = *((void *)a2 + 1);
        unint64_t v183 = *((void *)a2 + 2);
        uint64_t v184 = *(void *)a2;
        if (v182 <= 0xFFFFFFFFFFFFFFF5 && v182 + 10 <= v183)
        {
          char v185 = 0;
          unsigned int v186 = 0;
          uint64_t v187 = 0;
          do
          {
            unint64_t v188 = v182 + 1;
            *((void *)a2 + 1) = v182 + 1;
            char v189 = *(unsigned char *)(v184 + v182);
            v187 |= (unint64_t)(v189 & 0x7F) << v185;
            if ((v189 & 0x80) == 0) {
              goto LABEL_427;
            }
            v185 += 7;
            unint64_t v182 = v188;
            BOOL v14 = v186++ > 8;
          }
          while (!v14);
LABEL_351:
          LODWORD(v187) = 0;
          goto LABEL_427;
        }
        char v267 = 0;
        unsigned int v268 = 0;
        uint64_t v187 = 0;
        if (v183 <= v182) {
          unint64_t v183 = *((void *)a2 + 1);
        }
        break;
      case 0x21u:
        *((void *)this + 23) |= 0x80uLL;
        unint64_t v190 = *((void *)a2 + 1);
        if (v190 > 0xFFFFFFFFFFFFFFFBLL || v190 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 12) = *(_DWORD *)(*(void *)a2 + v190);
        goto LABEL_353;
      case 0x22u:
        *((void *)this + 23) |= 0x4000000uLL;
        unint64_t v191 = *((void *)a2 + 1);
        if (v191 > 0xFFFFFFFFFFFFFFFBLL || v191 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 31) = *(_DWORD *)(*(void *)a2 + v191);
        goto LABEL_353;
      case 0x23u:
        *((void *)this + 23) |= 0x8000000uLL;
        unint64_t v192 = *((void *)a2 + 1);
        if (v192 > 0xFFFFFFFFFFFFFFFBLL || v192 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 32) = *(_DWORD *)(*(void *)a2 + v192);
        goto LABEL_353;
      case 0x24u:
        *((void *)this + 23) |= 0x10000000uLL;
        unint64_t v193 = *((void *)a2 + 1);
        if (v193 > 0xFFFFFFFFFFFFFFFBLL || v193 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 33) = *(_DWORD *)(*(void *)a2 + v193);
        goto LABEL_353;
      case 0x25u:
        *((void *)this + 23) |= 0x40uLL;
        unint64_t v194 = *((void *)a2 + 1);
        if (v194 > 0xFFFFFFFFFFFFFFFBLL || v194 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 11) = *(_DWORD *)(*(void *)a2 + v194);
        goto LABEL_353;
      case 0x26u:
        *((void *)this + 23) |= 0x100uLL;
        unint64_t v195 = *((void *)a2 + 1);
        if (v195 > 0xFFFFFFFFFFFFFFFBLL || v195 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 13) = *(_DWORD *)(*(void *)a2 + v195);
        goto LABEL_353;
      case 0x27u:
        *((void *)this + 23) |= 0x200uLL;
        unint64_t v196 = *((void *)a2 + 1);
        if (v196 > 0xFFFFFFFFFFFFFFFBLL || v196 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 14) = *(_DWORD *)(*(void *)a2 + v196);
        goto LABEL_353;
      case 0x28u:
        *((void *)this + 23) |= 0x400000uLL;
        unint64_t v197 = *((void *)a2 + 1);
        if (v197 > 0xFFFFFFFFFFFFFFFBLL || v197 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 27) = *(_DWORD *)(*(void *)a2 + v197);
        goto LABEL_353;
      case 0x29u:
        *((void *)this + 23) |= 0x800000uLL;
        unint64_t v198 = *((void *)a2 + 1);
        if (v198 > 0xFFFFFFFFFFFFFFFBLL || v198 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 28) = *(_DWORD *)(*(void *)a2 + v198);
        goto LABEL_353;
      case 0x2Au:
        *((void *)this + 23) |= 0x1000000uLL;
        unint64_t v199 = *((void *)a2 + 1);
        if (v199 > 0xFFFFFFFFFFFFFFFBLL || v199 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 29) = *(_DWORD *)(*(void *)a2 + v199);
        goto LABEL_353;
      case 0x2Bu:
        *((void *)this + 23) |= 0x40000000uLL;
        unint64_t v200 = *((void *)a2 + 1);
        if (v200 > 0xFFFFFFFFFFFFFFFBLL || v200 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 35) = *(_DWORD *)(*(void *)a2 + v200);
        goto LABEL_353;
      case 0x2Cu:
        *((void *)this + 23) |= 0x80000000uLL;
        unint64_t v201 = *((void *)a2 + 1);
        if (v201 > 0xFFFFFFFFFFFFFFFBLL || v201 + 4 > *((void *)a2 + 2)) {
          goto LABEL_220;
        }
        *((_DWORD *)this + 36) = *(_DWORD *)(*(void *)a2 + v201);
        goto LABEL_353;
      case 0x2Du:
        *((void *)this + 23) |= 0x100000000uLL;
        unint64_t v202 = *((void *)a2 + 1);
        if (v202 <= 0xFFFFFFFFFFFFFFFBLL && v202 + 4 <= *((void *)a2 + 2))
        {
          *((_DWORD *)this + 37) = *(_DWORD *)(*(void *)a2 + v202);
LABEL_353:
          uint64_t v54 = *((void *)a2 + 1) + 4;
LABEL_354:
          *((void *)a2 + 1) = v54;
        }
        else
        {
LABEL_220:
          *((unsigned char *)a2 + 24) = 1;
        }
        goto LABEL_355;
      default:
        goto LABEL_19;
    }
    while (1)
    {
      if (v183 == v182)
      {
        LODWORD(v187) = 0;
        *((unsigned char *)a2 + 24) = 1;
        goto LABEL_427;
      }
      unint64_t v269 = v182 + 1;
      char v270 = *(unsigned char *)(v184 + v182);
      *((void *)a2 + 1) = v269;
      v187 |= (unint64_t)(v270 & 0x7F) << v267;
      if ((v270 & 0x80) == 0) {
        break;
      }
      v267 += 7;
      unint64_t v182 = v269;
      BOOL v14 = v268++ > 8;
      if (v14) {
        goto LABEL_351;
      }
    }
    if (*((unsigned char *)a2 + 24)) {
      LODWORD(v187) = 0;
    }
LABEL_427:
    *((_DWORD *)this + 10) = v187;
LABEL_355:
    unint64_t v2 = *((void *)a2 + 1);
    unint64_t v3 = *((void *)a2 + 2);
    int v4 = *((unsigned __int8 *)a2 + 24);
    if (v2 >= v3 || v4 != 0) {
      return v4 == 0;
    }
  }
  char v15 = 0;
  unsigned int v16 = 0;
  unint64_t v11 = 0;
  if (v2 > v3) {
    unint64_t v3 = v2;
  }
  do
  {
    if (v3 == v2)
    {
      int v4 = 1;
      *((unsigned char *)a2 + 24) = 1;
      return v4 == 0;
    }
    unint64_t v17 = v2 + 1;
    char v18 = *(unsigned char *)(v8 + v2);
    *((void *)a2 + 1) = v17;
    v11 |= (unint64_t)(v18 & 0x7F) << v15;
    if ((v18 & 0x80) == 0) {
      goto LABEL_21;
    }
    v15 += 7;
    unint64_t v2 = v17;
    BOOL v14 = v16++ > 8;
  }
  while (!v14);
LABEL_19:
  uint64_t result = PB::Reader::skip(a2);
  if (result) {
    goto LABEL_355;
  }
  return result;
}

uint64_t CMMsl::MobilityBoutMetrics::writeTo(uint64_t this, PB::Writer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *(void *)(this + 184);
  if ((v4 & 4) != 0)
  {
    this = PB::Writer::write(a2, *(double *)(this + 24));
    uint64_t v4 = *(void *)(v3 + 184);
    if ((v4 & 1) == 0)
    {
LABEL_3:
      if ((v4 & 0x200000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_49;
    }
  }
  else if ((v4 & 1) == 0)
  {
    goto LABEL_3;
  }
  this = PB::Writer::write(a2, *(double *)(v3 + 8));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200000) == 0)
  {
LABEL_4:
    if ((v4 & 0x1000000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000000000) == 0)
  {
LABEL_5:
    if ((v4 & 0x100000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = PB::Writer::write(a2, *(float *)(v3 + 164));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100000000000) == 0)
  {
LABEL_6:
    if ((v4 & 0x800) == 0) {
      goto LABEL_7;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800) == 0)
  {
LABEL_7:
    if ((v4 & 0x10000000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = PB::Writer::write(a2, *(float *)(v3 + 64));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000000000) == 0)
  {
LABEL_8:
    if ((v4 & 0x2000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000000) == 0)
  {
LABEL_9:
    if ((v4 & 0x80000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = PB::Writer::write(a2, *(float *)(v3 + 120));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000000000) == 0)
  {
LABEL_10:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_56;
  }
LABEL_55:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000) == 0)
  {
LABEL_11:
    if ((v4 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_57;
  }
LABEL_56:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 2) == 0)
  {
LABEL_12:
    if ((v4 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_58;
  }
LABEL_57:
  this = PB::Writer::write(a2, *(double *)(v3 + 16));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x8000000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_59;
  }
LABEL_58:
  this = PB::Writer::write(a2, *(float *)(v3 + 32));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000000000) == 0)
  {
LABEL_14:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_60;
  }
LABEL_59:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000) == 0)
  {
LABEL_15:
    if ((v4 & 0x200000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_61;
  }
LABEL_60:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200000000) == 0)
  {
LABEL_16:
    if ((v4 & 0x4000000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_62;
  }
LABEL_61:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000000000) == 0)
  {
LABEL_17:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_63;
  }
LABEL_62:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100000) == 0)
  {
LABEL_18:
    if ((v4 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_64;
  }
LABEL_63:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000) == 0)
  {
LABEL_19:
    if ((v4 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_65;
  }
LABEL_64:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000) == 0)
  {
LABEL_20:
    if ((v4 & 0x40000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_66;
  }
LABEL_65:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000) == 0)
  {
LABEL_21:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_67;
  }
LABEL_66:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000) == 0)
  {
LABEL_22:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_68;
  }
LABEL_67:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000) == 0)
  {
LABEL_23:
    if ((v4 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_69;
  }
LABEL_68:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400) == 0)
  {
LABEL_24:
    if ((v4 & 0x2000000000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_70;
  }
LABEL_69:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x2000000000) == 0)
  {
LABEL_25:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_71;
  }
LABEL_70:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000) == 0)
  {
LABEL_26:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_72;
  }
LABEL_71:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_27:
    if ((v4 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_73;
  }
LABEL_72:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10) == 0)
  {
LABEL_28:
    if ((v4 & 0x400000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_74;
  }
LABEL_73:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400000000) == 0)
  {
LABEL_29:
    if ((v4 & 0x20000000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_75;
  }
LABEL_74:
  this = PB::Writer::write(a2, *(float *)(v3 + 156));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20000000000) == 0)
  {
LABEL_30:
    if ((v4 & 0x800000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_76;
  }
LABEL_75:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800000000) == 0)
  {
LABEL_31:
    if ((v4 & 0x40000000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_77;
  }
LABEL_76:
  this = PB::Writer::write(a2, *(float *)(v3 + 160));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000000000) == 0)
  {
LABEL_32:
    if ((v4 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_78;
  }
LABEL_77:
  this = PB::Writer::write(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x20) == 0)
  {
LABEL_33:
    if ((v4 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_79;
  }
LABEL_78:
  this = PB::Writer::writeVarInt(a2);
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80) == 0)
  {
LABEL_34:
    if ((v4 & 0x4000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_80;
  }
LABEL_79:
  this = PB::Writer::write(a2, *(float *)(v3 + 48));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_35:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_81;
  }
LABEL_80:
  this = PB::Writer::write(a2, *(float *)(v3 + 124));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_36:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_82;
  }
LABEL_81:
  this = PB::Writer::write(a2, *(float *)(v3 + 128));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_37:
    if ((v4 & 0x40) == 0) {
      goto LABEL_38;
    }
    goto LABEL_83;
  }
LABEL_82:
  this = PB::Writer::write(a2, *(float *)(v3 + 132));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40) == 0)
  {
LABEL_38:
    if ((v4 & 0x100) == 0) {
      goto LABEL_39;
    }
    goto LABEL_84;
  }
LABEL_83:
  this = PB::Writer::write(a2, *(float *)(v3 + 44));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x100) == 0)
  {
LABEL_39:
    if ((v4 & 0x200) == 0) {
      goto LABEL_40;
    }
    goto LABEL_85;
  }
LABEL_84:
  this = PB::Writer::write(a2, *(float *)(v3 + 52));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x200) == 0)
  {
LABEL_40:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_86;
  }
LABEL_85:
  this = PB::Writer::write(a2, *(float *)(v3 + 56));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x400000) == 0)
  {
LABEL_41:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_87;
  }
LABEL_86:
  this = PB::Writer::write(a2, *(float *)(v3 + 108));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x800000) == 0)
  {
LABEL_42:
    if ((v4 & 0x1000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_88;
  }
LABEL_87:
  this = PB::Writer::write(a2, *(float *)(v3 + 112));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x1000000) == 0)
  {
LABEL_43:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_89;
  }
LABEL_88:
  this = PB::Writer::write(a2, *(float *)(v3 + 116));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_44:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_45;
    }
LABEL_90:
    this = PB::Writer::write(a2, *(float *)(v3 + 144));
    if ((*(void *)(v3 + 184) & 0x100000000) == 0) {
      return this;
    }
    goto LABEL_91;
  }
LABEL_89:
  this = PB::Writer::write(a2, *(float *)(v3 + 140));
  uint64_t v4 = *(void *)(v3 + 184);
  if ((v4 & 0x80000000) != 0) {
    goto LABEL_90;
  }
LABEL_45:
  if ((v4 & 0x100000000) == 0) {
    return this;
  }
LABEL_91:
  float v5 = *(float *)(v3 + 148);
  return PB::Writer::write(a2, v5);
}

uint64_t CMMsl::MobilityBoutMetrics::hash_value(CMMsl::MobilityBoutMetrics *this)
{
  uint64_t v1 = *((void *)this + 23);
  if ((v1 & 4) == 0)
  {
    uint64_t v2 = 0;
    if (v1) {
      goto LABEL_3;
    }
LABEL_93:
    double v72 = 0.0;
    if ((v1 & 0x200000) != 0) {
      goto LABEL_6;
    }
    goto LABEL_94;
  }
  if (*((double *)this + 3) == 0.0) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *((void *)this + 3);
  }
  if ((v1 & 1) == 0) {
    goto LABEL_93;
  }
LABEL_3:
  double v3 = *((double *)this + 1);
  if (v3 == 0.0) {
    double v3 = 0.0;
  }
  double v72 = v3;
  if ((v1 & 0x200000) != 0)
  {
LABEL_6:
    uint64_t v71 = *((unsigned int *)this + 26);
    if ((v1 & 0x1000000000) != 0) {
      goto LABEL_7;
    }
LABEL_95:
    uint64_t v70 = 0;
    if ((v1 & 0x100000000000) != 0) {
      goto LABEL_10;
    }
    goto LABEL_96;
  }
LABEL_94:
  uint64_t v71 = 0;
  if ((v1 & 0x1000000000) == 0) {
    goto LABEL_95;
  }
LABEL_7:
  float v4 = *((float *)this + 41);
  uint64_t v5 = LODWORD(v4);
  if (v4 == 0.0) {
    uint64_t v5 = 0;
  }
  uint64_t v70 = v5;
  if ((v1 & 0x100000000000) != 0)
  {
LABEL_10:
    uint64_t v69 = *((unsigned __int8 *)this + 181);
    if ((v1 & 0x800) != 0) {
      goto LABEL_11;
    }
LABEL_97:
    uint64_t v68 = 0;
    if ((v1 & 0x10000000000) != 0) {
      goto LABEL_14;
    }
    goto LABEL_98;
  }
LABEL_96:
  uint64_t v69 = 0;
  if ((v1 & 0x800) == 0) {
    goto LABEL_97;
  }
LABEL_11:
  float v6 = *((float *)this + 16);
  uint64_t v7 = LODWORD(v6);
  if (v6 == 0.0) {
    uint64_t v7 = 0;
  }
  uint64_t v68 = v7;
  if ((v1 & 0x10000000000) != 0)
  {
LABEL_14:
    uint64_t v67 = *((unsigned __int8 *)this + 177);
    if ((v1 & 0x2000000) != 0) {
      goto LABEL_15;
    }
LABEL_99:
    uint64_t v66 = 0;
    if ((v1 & 0x80000000000) != 0) {
      goto LABEL_18;
    }
    goto LABEL_100;
  }
LABEL_98:
  uint64_t v67 = 0;
  if ((v1 & 0x2000000) == 0) {
    goto LABEL_99;
  }
LABEL_15:
  float v8 = *((float *)this + 30);
  uint64_t v9 = LODWORD(v8);
  if (v8 == 0.0) {
    uint64_t v9 = 0;
  }
  uint64_t v66 = v9;
  if ((v1 & 0x80000000000) != 0)
  {
LABEL_18:
    uint64_t v65 = *((unsigned __int8 *)this + 180);
    if ((v1 & 0x4000) != 0) {
      goto LABEL_19;
    }
    goto LABEL_101;
  }
LABEL_100:
  uint64_t v65 = 0;
  if ((v1 & 0x4000) != 0)
  {
LABEL_19:
    uint64_t v64 = *((unsigned int *)this + 19);
    if ((v1 & 2) != 0) {
      goto LABEL_20;
    }
LABEL_102:
    double v63 = 0.0;
    if ((v1 & 8) != 0) {
      goto LABEL_23;
    }
LABEL_103:
    uint64_t v62 = 0;
    if ((v1 & 0x8000000000) != 0) {
      goto LABEL_26;
    }
    goto LABEL_104;
  }
LABEL_101:
  uint64_t v64 = 0;
  if ((v1 & 2) == 0) {
    goto LABEL_102;
  }
LABEL_20:
  double v10 = *((double *)this + 2);
  if (v10 == 0.0) {
    double v10 = 0.0;
  }
  double v63 = v10;
  if ((v1 & 8) == 0) {
    goto LABEL_103;
  }
LABEL_23:
  float v11 = *((float *)this + 8);
  uint64_t v12 = LODWORD(v11);
  if (v11 == 0.0) {
    uint64_t v12 = 0;
  }
  uint64_t v62 = v12;
  if ((v1 & 0x8000000000) != 0)
  {
LABEL_26:
    uint64_t v61 = *((unsigned __int8 *)this + 176);
    if ((v1 & 0x2000) != 0) {
      goto LABEL_27;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t v61 = 0;
  if ((v1 & 0x2000) != 0)
  {
LABEL_27:
    uint64_t v60 = *((unsigned int *)this + 18);
    if ((v1 & 0x200000000) != 0) {
      goto LABEL_28;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t v60 = 0;
  if ((v1 & 0x200000000) != 0)
  {
LABEL_28:
    uint64_t v59 = *((unsigned int *)this + 38);
    if ((v1 & 0x4000000000) != 0) {
      goto LABEL_29;
    }
    goto LABEL_107;
  }
LABEL_106:
  uint64_t v59 = 0;
  if ((v1 & 0x4000000000) != 0)
  {
LABEL_29:
    uint64_t v58 = *((unsigned int *)this + 43);
    if ((v1 & 0x100000) != 0) {
      goto LABEL_30;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t v58 = 0;
  if ((v1 & 0x100000) != 0)
  {
LABEL_30:
    uint64_t v57 = *((unsigned int *)this + 25);
    if ((v1 & 0x20000) != 0) {
      goto LABEL_31;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t v57 = 0;
  if ((v1 & 0x20000) != 0)
  {
LABEL_31:
    uint64_t v56 = *((unsigned int *)this + 22);
    if ((v1 & 0x10000) != 0) {
      goto LABEL_32;
    }
    goto LABEL_110;
  }
LABEL_109:
  uint64_t v56 = 0;
  if ((v1 & 0x10000) != 0)
  {
LABEL_32:
    uint64_t v55 = *((unsigned int *)this + 21);
    if ((v1 & 0x40000) != 0) {
      goto LABEL_33;
    }
    goto LABEL_111;
  }
LABEL_110:
  uint64_t v55 = 0;
  if ((v1 & 0x40000) != 0)
  {
LABEL_33:
    uint64_t v13 = *((unsigned int *)this + 23);
    if ((v1 & 0x80000) != 0) {
      goto LABEL_34;
    }
    goto LABEL_112;
  }
LABEL_111:
  uint64_t v13 = 0;
  if ((v1 & 0x80000) != 0)
  {
LABEL_34:
    uint64_t v14 = *((unsigned int *)this + 24);
    if ((v1 & 0x8000) != 0) {
      goto LABEL_35;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t v14 = 0;
  if ((v1 & 0x8000) != 0)
  {
LABEL_35:
    uint64_t v15 = *((unsigned int *)this + 20);
    if ((v1 & 0x400) != 0) {
      goto LABEL_36;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t v15 = 0;
  if ((v1 & 0x400) != 0)
  {
LABEL_36:
    uint64_t v16 = *((unsigned int *)this + 15);
    if ((v1 & 0x2000000000) != 0) {
      goto LABEL_37;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t v16 = 0;
  if ((v1 & 0x2000000000) != 0)
  {
LABEL_37:
    uint64_t v17 = *((unsigned int *)this + 42);
    if ((v1 & 0x1000) != 0) {
      goto LABEL_38;
    }
    goto LABEL_116;
  }
LABEL_115:
  uint64_t v17 = 0;
  if ((v1 & 0x1000) != 0)
  {
LABEL_38:
    uint64_t v18 = *((unsigned int *)this + 17);
    if ((v1 & 0x20000000) != 0) {
      goto LABEL_39;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t v18 = 0;
  if ((v1 & 0x20000000) != 0)
  {
LABEL_39:
    uint64_t v19 = *((unsigned int *)this + 34);
    if ((v1 & 0x10) != 0) {
      goto LABEL_40;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t v19 = 0;
  if ((v1 & 0x10) != 0)
  {
LABEL_40:
    uint64_t v20 = *((unsigned int *)this + 9);
    if ((v1 & 0x400000000) != 0) {
      goto LABEL_41;
    }
LABEL_119:
    uint64_t v22 = 0;
    if ((v1 & 0x20000000000) != 0) {
      goto LABEL_44;
    }
    goto LABEL_120;
  }
LABEL_118:
  uint64_t v20 = 0;
  if ((v1 & 0x400000000) == 0) {
    goto LABEL_119;
  }
LABEL_41:
  float v21 = *((float *)this + 39);
  uint64_t v22 = LODWORD(v21);
  if (v21 == 0.0) {
    uint64_t v22 = 0;
  }
  if ((v1 & 0x20000000000) != 0)
  {
LABEL_44:
    uint64_t v23 = *((unsigned __int8 *)this + 178);
    if ((v1 & 0x800000000) != 0) {
      goto LABEL_45;
    }
LABEL_121:
    uint64_t v25 = 0;
    if ((v1 & 0x40000000000) != 0) {
      goto LABEL_48;
    }
    goto LABEL_122;
  }
LABEL_120:
  uint64_t v23 = 0;
  if ((v1 & 0x800000000) == 0) {
    goto LABEL_121;
  }
LABEL_45:
  float v24 = *((float *)this + 40);
  uint64_t v25 = LODWORD(v24);
  if (v24 == 0.0) {
    uint64_t v25 = 0;
  }
  if ((v1 & 0x40000000000) != 0)
  {
LABEL_48:
    uint64_t v26 = *((unsigned __int8 *)this + 179);
    if ((v1 & 0x20) != 0) {
      goto LABEL_49;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t v26 = 0;
  if ((v1 & 0x20) != 0)
  {
LABEL_49:
    uint64_t v27 = *((unsigned int *)this + 10);
    if ((v1 & 0x80) != 0) {
      goto LABEL_50;
    }
LABEL_124:
    uint64_t v29 = 0;
    if ((v1 & 0x4000000) != 0) {
      goto LABEL_53;
    }
LABEL_125:
    uint64_t v31 = 0;
    if ((v1 & 0x8000000) != 0) {
      goto LABEL_56;
    }
LABEL_126:
    uint64_t v33 = 0;
    if ((v1 & 0x10000000) != 0) {
      goto LABEL_59;
    }
LABEL_127:
    uint64_t v35 = 0;
    if ((v1 & 0x40) != 0) {
      goto LABEL_62;
    }
LABEL_128:
    uint64_t v37 = 0;
    if ((v1 & 0x100) != 0) {
      goto LABEL_65;
    }
LABEL_129:
    uint64_t v39 = 0;
    if ((v1 & 0x200) != 0) {
      goto LABEL_68;
    }
LABEL_130:
    uint64_t v41 = 0;
    if ((v1 & 0x400000) != 0) {
      goto LABEL_71;
    }
LABEL_131:
    uint64_t v43 = 0;
    if ((v1 & 0x800000) != 0) {
      goto LABEL_74;
    }
LABEL_132:
    uint64_t v45 = 0;
    if ((v1 & 0x1000000) != 0) {
      goto LABEL_77;
    }
LABEL_133:
    uint64_t v47 = 0;
    if ((v1 & 0x40000000) != 0) {
      goto LABEL_80;
    }
LABEL_134:
    uint64_t v49 = 0;
    if ((v1 & 0x80000000) != 0) {
      goto LABEL_83;
    }
    goto LABEL_135;
  }
LABEL_123:
  uint64_t v27 = 0;
  if ((v1 & 0x80) == 0) {
    goto LABEL_124;
  }
LABEL_50:
  float v28 = *((float *)this + 12);
  uint64_t v29 = LODWORD(v28);
  if (v28 == 0.0) {
    uint64_t v29 = 0;
  }
  if ((v1 & 0x4000000) == 0) {
    goto LABEL_125;
  }
LABEL_53:
  float v30 = *((float *)this + 31);
  uint64_t v31 = LODWORD(v30);
  if (v30 == 0.0) {
    uint64_t v31 = 0;
  }
  if ((v1 & 0x8000000) == 0) {
    goto LABEL_126;
  }
LABEL_56:
  float v32 = *((float *)this + 32);
  uint64_t v33 = LODWORD(v32);
  if (v32 == 0.0) {
    uint64_t v33 = 0;
  }
  if ((v1 & 0x10000000) == 0) {
    goto LABEL_127;
  }
LABEL_59:
  float v34 = *((float *)this + 33);
  uint64_t v35 = LODWORD(v34);
  if (v34 == 0.0) {
    uint64_t v35 = 0;
  }
  if ((v1 & 0x40) == 0) {
    goto LABEL_128;
  }
LABEL_62:
  float v36 = *((float *)this + 11);
  uint64_t v37 = LODWORD(v36);
  if (v36 == 0.0) {
    uint64_t v37 = 0;
  }
  if ((v1 & 0x100) == 0) {
    goto LABEL_129;
  }
LABEL_65:
  float v38 = *((float *)this + 13);
  uint64_t v39 = LODWORD(v38);
  if (v38 == 0.0) {
    uint64_t v39 = 0;
  }
  if ((v1 & 0x200) == 0) {
    goto LABEL_130;
  }
LABEL_68:
  float v40 = *((float *)this + 14);
  uint64_t v41 = LODWORD(v40);
  if (v40 == 0.0) {
    uint64_t v41 = 0;
  }
  if ((v1 & 0x400000) == 0) {
    goto LABEL_131;
  }
LABEL_71:
  float v42 = *((float *)this + 27);
  uint64_t v43 = LODWORD(v42);
  if (v42 == 0.0) {
    uint64_t v43 = 0;
  }
  if ((v1 & 0x800000) == 0) {
    goto LABEL_132;
  }
LABEL_74:
  float v44 = *((float *)this + 28);
  uint64_t v45 = LODWORD(v44);
  if (v44 == 0.0) {
    uint64_t v45 = 0;
  }
  if ((v1 & 0x1000000) == 0) {
    goto LABEL_133;
  }
LABEL_77:
  float v46 = *((float *)this + 29);
  uint64_t v47 = LODWORD(v46);
  if (v46 == 0.0) {
    uint64_t v47 = 0;
  }
  if ((v1 & 0x40000000) == 0) {
    goto LABEL_134;
  }
LABEL_80:
  float v48 = *((float *)this + 35);
  uint64_t v49 = LODWORD(v48);
  if (v48 == 0.0) {
    uint64_t v49 = 0;
  }
  if ((v1 & 0x80000000) != 0)
  {
LABEL_83:
    float v50 = *((float *)this + 36);
    uint64_t v51 = LODWORD(v50);
    if (v50 == 0.0) {
      uint64_t v51 = 0;
    }
    if ((v1 & 0x100000000) != 0) {
      goto LABEL_86;
    }
LABEL_136:
    uint64_t v53 = 0;
    return *(void *)&v72 ^ v2 ^ v71 ^ v70 ^ v69 ^ v68 ^ v67 ^ v66 ^ v65 ^ v64 ^ *(void *)&v63 ^ v62 ^ v61 ^ v60 ^ v59 ^ v58 ^ v57 ^ v56 ^ v55 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v19 ^ v20 ^ v22 ^ v23 ^ v25 ^ v26 ^ v27 ^ v29 ^ v31 ^ v33 ^ v35 ^ v37 ^ v39 ^ v41 ^ v43 ^ v45 ^ v47 ^ v49 ^ v51 ^ v53;
  }
LABEL_135:
  uint64_t v51 = 0;
  if ((v1 & 0x100000000) == 0) {
    goto LABEL_136;
  }
LABEL_86:
  float v52 = *((float *)this + 37);
  uint64_t v53 = LODWORD(v52);
  if (v52 == 0.0) {
    uint64_t v53 = 0;
  }
  return *(void *)&v72 ^ v2 ^ v71 ^ v70 ^ v69 ^ v68 ^ v67 ^ v66 ^ v65 ^ v64 ^ *(void *)&v63 ^ v62 ^ v61 ^ v60 ^ v59 ^ v58 ^ v57 ^ v56 ^ v55 ^ v13 ^ v14 ^ v15 ^ v16 ^ v17 ^ v18 ^ v19 ^ v20 ^ v22 ^ v23 ^ v25 ^ v26 ^ v27 ^ v29 ^ v31 ^ v33 ^ v35 ^ v37 ^ v39 ^ v41 ^ v43 ^ v45 ^ v47 ^ v49 ^ v51 ^ v53;
}