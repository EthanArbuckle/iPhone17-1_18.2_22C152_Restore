void *assignWithCopy for SignInCommand.Request(void *a1, void *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for IdMSAccount();
  v6 = *(int *)(v5 + 20);
  v7 = v5;
  v44 = v5;
  v8 = (char *)a1 + v6;
  v9 = (char *)a2 + v6;
  v10 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(v7 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(void *)v13;
  v15 = *((void *)v13 + 1);
  v16 = *((void *)v13 + 2);
  v17 = *((void *)v13 + 3);
  v18 = *((void *)v13 + 4);
  v19 = *((void *)v13 + 5);
  v20 = *((void *)v13 + 7);
  v41 = *((void *)v13 + 6);
  v42 = *((void *)v13 + 8);
  v43 = v13[72];
  sub_247FABF8C(*(void *)v13, v15, v16, v17, v18, v19, v41, v20, v42, v43);
  v21 = *(void *)v12;
  v22 = *((void *)v12 + 1);
  v23 = *((void *)v12 + 2);
  v24 = *((void *)v12 + 3);
  v25 = *((void *)v12 + 4);
  v26 = *((void *)v12 + 5);
  v27 = *((void *)v12 + 6);
  v28 = *((void *)v12 + 7);
  v29 = *((void *)v12 + 8);
  v30 = v12[72];
  *(void *)v12 = v14;
  *((void *)v12 + 1) = v15;
  *((void *)v12 + 2) = v16;
  *((void *)v12 + 3) = v17;
  *((void *)v12 + 4) = v18;
  *((void *)v12 + 5) = v19;
  *((void *)v12 + 6) = v41;
  *((void *)v12 + 7) = v20;
  *((void *)v12 + 8) = v42;
  v12[72] = v43;
  sub_247FAC1EC(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  *(void *)((char *)a1 + *(int *)(v44 + 28)) = *(void *)((char *)a2 + *(int *)(v44 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[5];
  v32 = (void *)((char *)a1 + v31);
  v33 = (void *)((char *)a2 + v31);
  *v32 = *(void *)((char *)a2 + v31);
  v32[1] = *(void *)((char *)a2 + v31 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[2] = v33[2];
  v32[3] = v33[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[4] = v33[4];
  v32[5] = v33[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[6] = v33[6];
  v32[7] = v33[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32[8] = v33[8];
  v32[9] = v33[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = v33 + 10;
  v35 = v33[11];
  if (v32[11] >> 60 != 15)
  {
    if (v35 >> 60 != 15)
    {
      v37 = *v34;
      sub_247FB6C20(v37, v35);
      v38 = v32[10];
      v39 = v32[11];
      v32[10] = v37;
      v32[11] = v35;
      sub_247FB6CCC(v38, v39);
      goto LABEL_8;
    }
    sub_248007220((uint64_t)(v32 + 10));
    goto LABEL_6;
  }
  if (v35 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)v32 + 5) = *(_OWORD *)v34;
    goto LABEL_8;
  }
  v36 = *v34;
  sub_247FB6C20(v36, v35);
  v32[10] = v36;
  v32[11] = v35;
LABEL_8:
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for SignInCommand.Request(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v9 = v8[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  uint64_t v12 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = v8[6];
  v14 = (_OWORD *)((char *)a1 + v13);
  v15 = (_OWORD *)((char *)a2 + v13);
  long long v16 = v15[3];
  v14[2] = v15[2];
  v14[3] = v16;
  *(_OWORD *)((char *)v14 + 57) = *(_OWORD *)((char *)v15 + 57);
  long long v17 = v15[1];
  _OWORD *v14 = *v15;
  v14[1] = v17;
  *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
  uint64_t v18 = a3[5];
  uint64_t v19 = a3[6];
  v20 = (_OWORD *)((char *)a1 + v18);
  v21 = (_OWORD *)((char *)a2 + v18);
  long long v22 = v21[1];
  _OWORD *v20 = *v21;
  v20[1] = v22;
  long long v23 = v21[5];
  v20[4] = v21[4];
  v20[5] = v23;
  long long v24 = v21[3];
  v20[2] = v21[2];
  v20[3] = v24;
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *assignWithTake for SignInCommand.Request(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  uint64_t v15 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  long long v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *((void *)v18 + 8);
  char v20 = v18[72];
  uint64_t v21 = *(void *)v17;
  uint64_t v22 = *((void *)v17 + 1);
  uint64_t v23 = *((void *)v17 + 2);
  uint64_t v24 = *((void *)v17 + 3);
  uint64_t v25 = *((void *)v17 + 4);
  uint64_t v26 = *((void *)v17 + 5);
  uint64_t v27 = *((void *)v17 + 6);
  uint64_t v28 = *((void *)v17 + 7);
  uint64_t v29 = *((void *)v17 + 8);
  char v30 = v17[72];
  long long v31 = *((_OWORD *)v18 + 1);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v31;
  long long v32 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v32;
  *((void *)v17 + 8) = v19;
  v17[72] = v20;
  sub_247FAC1EC(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[5];
  v34 = (void *)((char *)a1 + v33);
  v35 = (void *)((char *)a2 + v33);
  uint64_t v36 = *(void *)((char *)a2 + v33 + 8);
  void *v34 = *(void *)((char *)a2 + v33);
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = v35[3];
  v34[2] = v35[2];
  v34[3] = v37;
  swift_bridgeObjectRelease();
  uint64_t v38 = v35[5];
  v34[4] = v35[4];
  v34[5] = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = v35[7];
  v34[6] = v35[6];
  v34[7] = v39;
  swift_bridgeObjectRelease();
  uint64_t v40 = v35[9];
  v34[8] = v35[8];
  v34[9] = v40;
  swift_bridgeObjectRelease();
  v41 = v35 + 10;
  unint64_t v42 = v34[11];
  if (v42 >> 60 != 15)
  {
    unint64_t v43 = v35[11];
    if (v43 >> 60 != 15)
    {
      uint64_t v44 = v34[10];
      v34[10] = *v41;
      v34[11] = v43;
      sub_247FB6CCC(v44, v42);
      goto LABEL_6;
    }
    sub_248007220((uint64_t)(v34 + 10));
  }
  *((_OWORD *)v34 + 5) = *(_OWORD *)v41;
LABEL_6:
  uint64_t v45 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v45) = *((unsigned char *)a2 + v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInCommand.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_248022DE8);
}

uint64_t sub_248022DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IdMSAccount();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SignInCommand.Request(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_248022EC0);
}

uint64_t sub_248022EC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for IdMSAccount();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_248022F80()
{
  uint64_t result = type metadata accessor for IdMSAccount();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SignInCommand.Response(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    uint64_t *v4 = *a2;
    v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = type metadata accessor for IdMSAccount();
    uint64_t v12 = *(int *)(v11 + 20);
    char v30 = (char *)v4 + v12;
    uint64_t v31 = v11;
    uint64_t v28 = (char *)a2 + v12;
    uint64_t v13 = sub_248174700();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v30, v28, v13);
    uint64_t v14 = *(int *)(v11 + 24);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    uint64_t v19 = *((void *)v16 + 2);
    uint64_t v20 = *((void *)v16 + 3);
    uint64_t v21 = *((void *)v16 + 4);
    uint64_t v22 = *((void *)v16 + 5);
    uint64_t v23 = *((void *)v16 + 7);
    uint64_t v27 = *((void *)v16 + 6);
    uint64_t v29 = *((void *)v16 + 8);
    LOBYTE(v30) = v16[72];
    sub_247FABF8C(*(void *)v16, v18, v19, v20, v21, v22, v27, v23, v29, (char)v30);
    *(void *)uint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    *((void *)v15 + 2) = v19;
    *((void *)v15 + 3) = v20;
    *((void *)v15 + 4) = v21;
    *((void *)v15 + 5) = v22;
    *((void *)v15 + 6) = v27;
    *((void *)v15 + 7) = v23;
    *((void *)v15 + 8) = v29;
    v15[72] = (char)v30;
    *(uint64_t *)((char *)v4 + *(int *)(v31 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v31 + 28));
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SignInCommand.Response(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for IdMSAccount();
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = sub_248174700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = a1 + *(int *)(v2 + 24);
  sub_247FAC1EC(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(unsigned char *)(v5 + 72));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SignInCommand.Response(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = type metadata accessor for IdMSAccount();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v28 = (char *)a1 + v11;
  uint64_t v29 = v10;
  uint64_t v26 = (char *)a2 + v11;
  uint64_t v12 = sub_248174700();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v28, v26, v12);
  uint64_t v13 = *(int *)(v10 + 24);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 1);
  uint64_t v17 = *((void *)v15 + 2);
  uint64_t v18 = *((void *)v15 + 3);
  uint64_t v19 = *((void *)v15 + 4);
  uint64_t v20 = *((void *)v15 + 5);
  uint64_t v22 = *((void *)v15 + 6);
  uint64_t v21 = *((void *)v15 + 7);
  uint64_t v25 = *(void *)v15;
  uint64_t v27 = *((void *)v15 + 8);
  LOBYTE(v28) = v15[72];
  sub_247FABF8C(*(void *)v15, v16, v17, v18, v19, v20, v22, v21, v27, (char)v28);
  *(void *)uint64_t v14 = v25;
  *((void *)v14 + 1) = v16;
  *((void *)v14 + 2) = v17;
  *((void *)v14 + 3) = v18;
  *((void *)v14 + 4) = v19;
  *((void *)v14 + 5) = v20;
  *((void *)v14 + 6) = v22;
  *((void *)v14 + 7) = v21;
  *((void *)v14 + 8) = v27;
  v14[72] = (char)v28;
  *(void *)((char *)a1 + *(int *)(v29 + 28)) = *(void *)((char *)a2 + *(int *)(v29 + 28));
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SignInCommand.Response(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for IdMSAccount();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = v5;
  uint64_t v35 = v5;
  uint64_t v8 = (char *)a1 + v6;
  uint64_t v9 = (char *)a2 + v6;
  uint64_t v10 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *((void *)v13 + 1);
  uint64_t v16 = *((void *)v13 + 2);
  uint64_t v17 = *((void *)v13 + 3);
  uint64_t v18 = *((void *)v13 + 4);
  uint64_t v19 = *((void *)v13 + 5);
  uint64_t v20 = *((void *)v13 + 7);
  uint64_t v32 = *((void *)v13 + 6);
  uint64_t v33 = *((void *)v13 + 8);
  char v34 = v13[72];
  sub_247FABF8C(*(void *)v13, v15, v16, v17, v18, v19, v32, v20, v33, v34);
  uint64_t v21 = *(void *)v12;
  uint64_t v22 = *((void *)v12 + 1);
  uint64_t v23 = *((void *)v12 + 2);
  uint64_t v24 = *((void *)v12 + 3);
  uint64_t v25 = *((void *)v12 + 4);
  uint64_t v26 = *((void *)v12 + 5);
  uint64_t v27 = *((void *)v12 + 6);
  uint64_t v28 = *((void *)v12 + 7);
  uint64_t v29 = *((void *)v12 + 8);
  char v30 = v12[72];
  *(void *)uint64_t v12 = v14;
  *((void *)v12 + 1) = v15;
  *((void *)v12 + 2) = v16;
  *((void *)v12 + 3) = v17;
  *((void *)v12 + 4) = v18;
  *((void *)v12 + 5) = v19;
  *((void *)v12 + 6) = v32;
  *((void *)v12 + 7) = v20;
  *((void *)v12 + 8) = v33;
  v12[72] = v34;
  sub_247FAC1EC(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  *(void *)((char *)a1 + *(int *)(v35 + 28)) = *(void *)((char *)a2 + *(int *)(v35 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for SignInCommand.Response(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v9 = v8[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  long long v16 = v15[3];
  v14[2] = v15[2];
  v14[3] = v16;
  *(_OWORD *)((char *)v14 + 57) = *(_OWORD *)((char *)v15 + 57);
  long long v17 = v15[1];
  _OWORD *v14 = *v15;
  v14[1] = v17;
  *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for SignInCommand.Response(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  long long v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *((void *)v18 + 8);
  char v20 = v18[72];
  uint64_t v21 = *(void *)v17;
  uint64_t v22 = *((void *)v17 + 1);
  uint64_t v23 = *((void *)v17 + 2);
  uint64_t v24 = *((void *)v17 + 3);
  uint64_t v25 = *((void *)v17 + 4);
  uint64_t v26 = *((void *)v17 + 5);
  uint64_t v27 = *((void *)v17 + 6);
  uint64_t v28 = *((void *)v17 + 7);
  uint64_t v29 = *((void *)v17 + 8);
  char v30 = v17[72];
  long long v31 = *((_OWORD *)v18 + 1);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v31;
  long long v32 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v32;
  *((void *)v17 + 8) = v19;
  v17[72] = v20;
  sub_247FAC1EC(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInCommand.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_248023940);
}

uint64_t sub_248023940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IdMSAccount();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SignInCommand.Response(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_248023A14);
}

uint64_t sub_248023A14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for IdMSAccount();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_248023AD0()
{
  uint64_t result = type metadata accessor for IdMSAccount();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SignInCommand.Response.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248023C34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInCommand.Response.CodingKeys()
{
  return &type metadata for SignInCommand.Response.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SignInCommand.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248023D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInCommand.Request.CodingKeys()
{
  return &type metadata for SignInCommand.Request.CodingKeys;
}

unint64_t sub_248023D74()
{
  unint64_t result = qword_2692D7550;
  if (!qword_2692D7550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7550);
  }
  return result;
}

unint64_t sub_248023DCC()
{
  unint64_t result = qword_2692D7558;
  if (!qword_2692D7558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7558);
  }
  return result;
}

unint64_t sub_248023E24()
{
  unint64_t result = qword_2692D7560;
  if (!qword_2692D7560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7560);
  }
  return result;
}

unint64_t sub_248023E7C()
{
  unint64_t result = qword_2692D7568;
  if (!qword_2692D7568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7568);
  }
  return result;
}

unint64_t sub_248023ED4()
{
  unint64_t result = qword_2692D7570;
  if (!qword_2692D7570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7570);
  }
  return result;
}

unint64_t sub_248023F2C()
{
  unint64_t result = qword_2692D7578;
  if (!qword_2692D7578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7578);
  }
  return result;
}

uint64_t sub_248023F80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C75736552707273 && a2 == 0xEA00000000007374 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C616E69467369 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E696D7265547369 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24802414C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248191030)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24802423C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2480242A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D7490);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Building.map(_:)(uint64_t (*a1)(uint64_t))
{
  return a1(v1);
}

uint64_t Building.then(if:_:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t (*a2)(uint64_t)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (a1()) {
    return a2(v4);
  }
  else {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v4, a3);
  }
}

uint64_t Building.then(if:_:or:)(uint64_t (*a1)(void), uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (a1()) {
    return a3(v5);
  }
  else {
    return a5(v5);
  }
}

uint64_t dispatch thunk of Building.build()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DefaultBuilding.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t CryptographicIdentity<>.signature<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248024A2C(v15, (uint64_t)v14);
  if (!v6)
  {
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16))(a1, a3, a5, v11, a4);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v5;
}

uint64_t CryptographicIdentity<>.isValidSignature<A>(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v19[0] = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v17 = (char *)v19 - v16;
  sub_248024BF0(a4, (uint64_t)v19 - v16);
  LOBYTE(a8) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(a8 + 24))(a1, a2, a3, a5, v19[0], AssociatedTypeWitness, a8);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
  return a8 & 1;
}

uint64_t sub_248024770@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  char v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t CryptographicIdentity.info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_248024A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = sub_248175700();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - v8, v2 + *(int *)(a1 + 36), v6);
  uint64_t v10 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v9, v5);
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for CryptographicIdentity.MissingPrivateKey();
  swift_getWitnessTable();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_248024BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v12 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_248175700();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - v7, v2 + *(int *)(a1 + 40), v5);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v8, AssociatedTypeWitness);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  type metadata accessor for CryptographicIdentity.MissingPublicKey();
  swift_getWitnessTable();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_248024DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24802753C(v2 + *(int *)(a1 + 44), (uint64_t)v7);
  uint64_t v8 = sub_248174EF0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  }
  sub_247FB33D4((uint64_t)v7, qword_2692D5930);
  type metadata accessor for CryptographicIdentity.MissingSymmetricKey();
  swift_getWitnessTable();
  swift_allocError();
  return swift_willThrow();
}

BOOL CryptographicIdentity.isForSigning.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_248175700();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - v6, v1 + *(int *)(a1 + 36), v4);
  BOOL v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v7, 1, v3) != 1;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

BOOL CryptographicIdentity.isForSignatureValidation.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_248175700();
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_248175700();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v21 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - v15, v2 + *(int *)(a1 + 36), v13);
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v16, 1, v4);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v2, a1);
  if (v4 == 1)
  {
    uint64_t v18 = v21;
    uint64_t v17 = v22;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v9, &v12[*(int *)(a1 + 40)], v22);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a1);
    BOOL v19 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v9, 1, AssociatedTypeWitness) != 1;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a1);
    return 0;
  }
  return v19;
}

uint64_t sub_24802539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 16);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v9;
  *(unsigned char *)(a5 + 16) = v10;
  uint64_t v11 = (int *)type metadata accessor for CryptographicIdentity();
  uint64_t v12 = a5 + v11[9];
  uint64_t v13 = sub_248175700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12, a2, v13);
  uint64_t v14 = a5 + v11[10];
  swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_248175700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a3, v15);
  uint64_t v16 = a5 + v11[11];
  return sub_248025734(a4, v16);
}

uint64_t CryptographicIdentity.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v19 = (uint64_t)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_248175700();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = sub_248175700();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = *(void *)(a1 + 8);
  char v14 = *(unsigned char *)(a1 + 16);
  v21[0] = *(void *)a1;
  v21[1] = v13;
  char v22 = v14;
  uint64_t v15 = (int *)type metadata accessor for CryptographicIdentity();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1 + v15[9], v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, a1 + v15[10], v5);
  uint64_t v16 = v19;
  sub_248025734(a1 + v15[11], v19);
  return sub_24802539C((uint64_t)v21, (uint64_t)v12, (uint64_t)v8, v16, v20);
}

uint64_t type metadata accessor for CryptographicIdentity()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_248025734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t static CryptographicIdentity.newIdentity(ofKind:withID:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v31 = a6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  MEMORY[0x270FA5388](v10 - 8);
  char v30 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a5 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_248175700();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v34 = (uint64_t)&v27 - v14;
  uint64_t v15 = sub_248175700();
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v19 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v22 = *a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  if (!v6)
  {
    v32[0] = v28;
    v32[1] = v29;
    char v33 = v22;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v18, v21, a4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v18, 0, 1, a4);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v12 + 32);
    swift_bridgeObjectRetain();
    v24(a4, v12);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, a4);
    uint64_t v25 = sub_248174EF0();
    uint64_t v26 = (uint64_t)v30;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v30, 1, 1, v25);
    return sub_24802539C((uint64_t)v32, (uint64_t)v18, v34, v26, v31);
  }
  return result;
}

uint64_t CryptographicIdentity.Info.init(id:kind:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a3;
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = v4;
  return result;
}

uint64_t CryptographicIdentity.exportedPublicKeyMaterial()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  v23[1] = *(void *)(a1 + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_248175700();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v23 - v10;
  uint64_t v12 = sub_248175700();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v23 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v2 + 8);
  char v19 = *(unsigned char *)(v2 + 16);
  v25[0] = *(void *)v2;
  v25[1] = v18;
  char v26 = v19;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v15, 1, 1, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v2 + *(int *)(a1 + 40), v8);
  uint64_t v20 = sub_248174EF0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  sub_24802539C((uint64_t)v25, (uint64_t)v15, (uint64_t)v11, (uint64_t)v6, (uint64_t)v17);
  uint64_t v21 = type metadata accessor for CryptographicIdentity();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v24, v17, v21);
  return swift_bridgeObjectRetain();
}

uint64_t sub_248025D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CryptographicIdentity();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t CryptographicIdentity.exportedFullKeyMaterial()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  uint64_t v6 = type metadata accessor for CryptographicIdentity();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a2, v4, v6);
}

uint64_t sub_248025EC8()
{
  unint64_t v0 = sub_248175A30();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_248025F18(char a1)
{
  uint64_t result = 1868983913;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4B65746176697270;
      break;
    case 2:
      uint64_t result = 0x654B63696C627570;
      break;
    case 3:
      uint64_t result = 0x697274656D6D7973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248025FB4(char a1)
{
  uint64_t result = 1868983913;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4B65746176697270;
      break;
    case 2:
      uint64_t result = 0x654B63696C627570;
      break;
    case 3:
      uint64_t result = 0x697274656D6D7973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248026050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D338];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2480260C4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_248026130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_2480261A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_248026210@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_248025EC8();
  *a1 = result;
  return result;
}

uint64_t sub_248026248@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_248025F18(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_248026278()
{
  return sub_248025FB4(*v0);
}

uint64_t sub_248026284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_248025F14(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_2480262B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_247FD17FC();
  *a1 = result;
  return result;
}

uint64_t sub_2480262E0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248026334(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CryptographicIdentity.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v56 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  v58 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  v57 = &v49[-v10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_248175700();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  uint64_t v60 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v55 = &v49[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  v62 = &v49[-v15];
  uint64_t v16 = sub_248175700();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v63 = v16;
  uint64_t v64 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = &v49[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v18);
  char v22 = &v49[-v21];
  uint64_t v66 = a2;
  uint64_t v67 = a3;
  type metadata accessor for CryptographicIdentity.CodingKeys();
  swift_getWitnessTable();
  uint64_t v23 = sub_248175B40();
  uint64_t v65 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = &v49[-v24];
  uint64_t v26 = a1[3];
  v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  uint64_t v27 = (uint64_t)v69;
  sub_248175F20();
  if (!v27)
  {
    v54 = v20;
    v69 = v22;
    uint64_t v28 = v66;
    uint64_t v29 = v67;
    type metadata accessor for CryptographicIdentity.Info();
    LOBYTE(v70) = 0;
    swift_getWitnessTable();
    sub_248175AF0();
    long long v30 = v71;
    int v31 = v72;
    LOBYTE(v70) = 1;
    sub_248016918();
    uint64_t v32 = sub_248175AA0();
    int v50 = v31;
    long long v51 = v30;
    v52 = v25;
    uint64_t v53 = v23;
    long long v70 = v71;
    MEMORY[0x270FA5388](v32);
    *(void *)&v49[-16] = v28;
    *(void *)&v49[-8] = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7598);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    sub_248024770((void (*)(char *, char *))sub_248026D28, (uint64_t)&v49[-32], v33, v28, (uint64_t)&v73, (uint64_t)v69);
    sub_247FB846C(v70, *((unint64_t *)&v70 + 1));
    LOBYTE(v70) = 2;
    uint64_t v34 = sub_248175AA0();
    long long v70 = v71;
    MEMORY[0x270FA5388](v34);
    uint64_t v35 = v67;
    *(void *)&v49[-16] = v66;
    *(void *)&v49[-8] = v35;
    sub_248024770((void (*)(char *, char *))sub_248026E30, (uint64_t)&v49[-32], v33, AssociatedTypeWitness, (uint64_t)&v73, (uint64_t)v62);
    sub_247FB846C(v70, *((unint64_t *)&v70 + 1));
    LOBYTE(v70) = 3;
    sub_248175AA0();
    unint64_t v37 = *((void *)&v71 + 1);
    uint64_t v38 = v60;
    if (*((void *)&v71 + 1) >> 60 == 15)
    {
      uint64_t v39 = sub_248174EF0();
      uint64_t v40 = (uint64_t)v57;
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v57, 1, 1, v39);
    }
    else
    {
      uint64_t v41 = v71;
      long long v70 = v71;
      sub_247FB6C20(v71, *((unint64_t *)&v71 + 1));
      uint64_t v40 = (uint64_t)v57;
      sub_248174EE0();
      uint64_t v42 = sub_248174EF0();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v40, 0, 1, v42);
      sub_247FB846C(v41, v37);
    }
    uint64_t v43 = v56;
    uint64_t v44 = (uint64_t)v58;
    uint64_t v45 = *((void *)&v51 + 1);
    uint64_t v46 = v51;
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v52, v53);
    *(void *)&long long v71 = v46;
    *((void *)&v71 + 1) = v45;
    unsigned __int8 v72 = v50;
    uint64_t v47 = (uint64_t)v54;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v64 + 32))(v54, v69, v63);
    uint64_t v48 = (uint64_t)v55;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v38 + 32))(v55, v62, v59);
    sub_248025734(v40, v44);
    sub_24802539C((uint64_t)&v71, v47, v48, v44, v43);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
}

uint64_t type metadata accessor for CryptographicIdentity.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.Info()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_248026C8C(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  uint64_t v9 = *(void *)(*(void *)(a3 + 8) + 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 16);
  sub_247FB6C20(*a1, v8);
  uint64_t result = v10(v7, v8, a2, v9);
  if (v4) {
    *a4 = v4;
  }
  return result;
}

uint64_t sub_248026D28(uint64_t *a1, void *a2)
{
  return sub_248026C8C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_248026D48(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 16);
  sub_247FB6C20(v5, v6);
  uint64_t result = v9(v5, v6, AssociatedTypeWitness, v8);
  if (v4) {
    *a4 = v4;
  }
  return result;
}

uint64_t sub_248026E30(uint64_t *a1, void *a2)
{
  return sub_248026D48(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t CryptographicIdentity.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v64 = a2;
  uint64_t v59 = *(void *)(v7 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v56 = sub_248175700();
  uint64_t v58 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v60 = (char *)&v53 - v8;
  uint64_t v9 = sub_248175700();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x270FA5388](v9);
  v61 = (char *)&v53 - v10;
  type metadata accessor for CryptographicIdentity.CodingKeys();
  swift_getWitnessTable();
  uint64_t v11 = sub_248175C20();
  uint64_t v65 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v53 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = v67;
  uint64_t v15 = v11;
  sub_248175F60();
  unint64_t v16 = *(void *)(v14 + 8);
  char v17 = *(unsigned char *)(v14 + 16);
  uint64_t v68 = *(void *)v14;
  unint64_t v69 = v16;
  char v70 = v17;
  char v71 = 0;
  type metadata accessor for CryptographicIdentity.Info();
  swift_getWitnessTable();
  uint64_t v18 = v66;
  sub_248175BE0();
  if (v18)
  {
    uint64_t v19 = v65;
  }
  else
  {
    uint64_t v20 = v13;
    uint64_t v66 = v7;
    uint64_t v21 = v15;
    uint64_t v22 = v63;
    uint64_t v23 = v64;
    uint64_t v24 = v14 + *(int *)(v64 + 36);
    uint64_t v25 = v61;
    uint64_t v26 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v24, v63);
    uint64_t v27 = *(void *)(v6 - 8);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v6);
    uint64_t v29 = v25;
    uint64_t v54 = v6;
    if (v28 == 1)
    {
      uint64_t v30 = v26;
      uint64_t v31 = 0;
      unint64_t v32 = 0xF000000000000000;
    }
    else
    {
      uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)(v59 + 8) + 8))(v6);
      uint64_t v29 = v25;
      uint64_t v31 = v33;
      uint64_t v22 = v6;
      unint64_t v32 = v34;
      uint64_t v30 = v27;
    }
    uint64_t v15 = v21;
    uint64_t v13 = v20;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v22);
    uint64_t v68 = v31;
    unint64_t v69 = v32;
    char v71 = 1;
    sub_2480168C4();
    sub_248175B90();
    sub_247FB846C(v31, v32);
    uint64_t v35 = v60;
    uint64_t v36 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v60, v67 + *(int *)(v23 + 40), v56);
    uint64_t v37 = AssociatedTypeWitness;
    uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v35, 1, AssociatedTypeWitness) == 1)
    {
      uint64_t v39 = 0;
      unint64_t v40 = 0xF000000000000000;
      uint64_t v19 = v65;
      uint64_t v41 = v36;
      uint64_t v42 = v58;
    }
    else
    {
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v37);
      uint64_t v35 = v60;
      uint64_t v45 = v37;
      uint64_t v39 = v44;
      unint64_t v40 = v46;
      uint64_t v42 = v38;
      uint64_t v41 = v45;
      uint64_t v19 = v65;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v41);
    uint64_t v68 = v39;
    unint64_t v69 = v40;
    char v71 = 2;
    sub_248175B90();
    sub_247FB846C(v39, v40);
    uint64_t v47 = v55;
    sub_24802753C(v67 + *(int *)(v64 + 44), v55);
    uint64_t v48 = sub_248174EF0();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48);
    if (v50 == 1)
    {
      sub_247FB33D4(v47, qword_2692D5930);
    }
    else
    {
      MEMORY[0x270FA5388](v50);
      uint64_t v51 = v66;
      *(&v53 - 4) = v54;
      *(&v53 - 3) = v51;
      *(&v53 - 2) = (uint64_t)v13;
      sub_248174ED0();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v13, v15);
}

uint64_t sub_24802753C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2480275A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_2480276A0(a1, a2);
  unint64_t v4 = v3;
  type metadata accessor for CryptographicIdentity.CodingKeys();
  swift_getWitnessTable();
  sub_248175C20();
  sub_2480168C4();
  sub_248175BE0();
  return sub_247FB6CCC(v2, v4);
}

uint64_t sub_248027680(uint64_t a1, uint64_t a2)
{
  return sub_2480275A4(a1, a2);
}

uint64_t sub_2480276A0(uint64_t a1, uint64_t a2)
{
  v8[3] = MEMORY[0x263F8D3E8];
  v8[4] = MEMORY[0x263F07B80];
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = __swift_project_boxed_opaque_existential_1(v8, MEMORY[0x263F8D3E8]);
  unint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (v4 = (unsigned char *)v2[1], uint64_t v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_24802CE78(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_24802CFC0((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_24802CF3C((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t sub_24802775C(unint64_t a1, unint64_t a2)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7A48);
  if (swift_dynamicCast())
  {
    sub_247FB8480(v38, (uint64_t)&v41);
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    sub_2481746B0();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_247FB33D4((uint64_t)v38, qword_2692D7A50);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_2481758D0();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_24802D03C(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    uint64_t v11 = sub_2481751E0();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v11 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_24802D0A0(v11);
  *((void *)&v38[0] + 1) = v12;
  MEMORY[0x270FA5388](*(void *)&v38[0]);
  unint64_t v13 = (unint64_t)sub_24802C180((void *(*)(uint64_t *__return_ptr, char *, char *))sub_248030578);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_2481747A0();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_24802C104(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_248175210();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_2481758D0();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_24802C104(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_2481751F0();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_2481747B0();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_2481747B0();
    sub_247FB846C(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_247FB846C((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t static CryptographicIdentity.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v120 = a2;
  uint64_t v7 = sub_248174EF0();
  uint64_t v102 = *(void *)(v7 - 8);
  uint64_t v103 = v7;
  MEMORY[0x270FA5388](v7);
  v98 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v99 = (uint64_t)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D75A0);
  MEMORY[0x270FA5388](v100);
  uint64_t v101 = (uint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v105 = sub_248175700();
  uint64_t v112 = *(void *)(v105 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v105);
  v107 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v104 = (char *)&v96 - v14;
  uint64_t v15 = type metadata accessor for CryptographicIdentity();
  uint64_t v117 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  v116 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  v111 = (char *)&v96 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v118 = (char *)&v96 - v21;
  MEMORY[0x270FA5388](v20);
  v114 = (char *)&v96 - v22;
  uint64_t v23 = sub_248175700();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  unint64_t v29 = (char *)&v96 - v28;
  uint64_t v119 = v15;
  uint64_t v30 = *(int *)(v15 + 36);
  uint64_t v113 = a1;
  char v31 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31((char *)&v96 - v28, a1 + v30, v23);
  uint64_t v32 = *(void *)(a3 - 8);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v29, 1, a3) == 1)
  {
    v108 = 0;
    unint64_t v109 = 0xF000000000000000;
    uint64_t v34 = v24;
    uint64_t v35 = v23;
  }
  else
  {
    v108 = (void (*)(char *, uint64_t, uint64_t))(*(uint64_t (**)(uint64_t))(*(void *)(v115 + 8)
                                                                                             + 8))(a3);
    unint64_t v109 = v36;
    uint64_t v34 = v32;
    uint64_t v35 = a3;
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v35);
  v31(v27, v120 + *(int *)(v119 + 36), v23);
  unsigned int v37 = v33(v27, 1, a3);
  uint64_t v106 = a3;
  if (v37 == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    unint64_t v38 = v109;
    uint64_t v39 = v113;
    if (v109 >> 60 == 15)
    {
      char v40 = 1;
      uint64_t v41 = v119;
      uint64_t v43 = v116;
      uint64_t v42 = v117;
      uint64_t v44 = v114;
      uint64_t v45 = v112;
      goto LABEL_14;
    }
    uint64_t v46 = 0;
    unint64_t v48 = 0xF000000000000000;
    uint64_t v41 = v119;
    uint64_t v42 = v117;
    uint64_t v44 = v114;
    uint64_t v45 = v112;
    goto LABEL_12;
  }
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(*(void *)(v115 + 8) + 8))(a3);
  unint64_t v48 = v47;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v27, a3);
  unint64_t v38 = v109;
  uint64_t v39 = v113;
  if (v109 >> 60 != 15)
  {
    uint64_t v41 = v119;
    uint64_t v42 = v117;
    uint64_t v44 = v114;
    uint64_t v45 = v112;
    if (v48 >> 60 != 15)
    {
      uint64_t v83 = (uint64_t)v108;
      sub_247FB8458((uint64_t)v108, v109);
      char v40 = sub_24802CAF4(v83, v38, v46, v48);
      sub_247FB846C(v46, v48);
      sub_247FB846C(v83, v38);
      sub_247FB846C(v83, v38);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v41 = v119;
  uint64_t v42 = v117;
  uint64_t v44 = v114;
  uint64_t v45 = v112;
  if (v48 >> 60 != 15)
  {
LABEL_12:
    sub_247FB846C((uint64_t)v108, v38);
    sub_247FB846C(v46, v48);
    char v40 = 0;
    goto LABEL_13;
  }
  char v40 = 1;
LABEL_13:
  uint64_t v43 = v116;
LABEL_14:
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v49(v44, v39, v41);
  uint64_t v50 = v118;
  v49(v118, v120, v41);
  if ((v40 & 1) == 0)
  {
    uint64_t v59 = v44;
    uint64_t v60 = *(void (**)(char *, uint64_t))(v42 + 8);
    v60(v50, v41);
    v60(v59, v41);
    v61 = v111;
LABEL_35:
    v49(v61, v39, v41);
    v49(v43, v120, v41);
LABEL_36:
    v60(v43, v41);
    v60(v61, v41);
LABEL_37:
    char v82 = 0;
    return v82 & 1;
  }
  v108 = v49;
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v52 = v104;
  uint64_t v53 = v105;
  v51(v104, &v44[*(int *)(v41 + 40)], v105);
  uint64_t v54 = AssociatedTypeWitness;
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
  if (v56(v52, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v97 = 0;
    unint64_t v109 = 0xF000000000000000;
    uint64_t v57 = v45;
    uint64_t v58 = v53;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v63 = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(AssociatedTypeWitness);
    uint64_t v54 = AssociatedTypeWitness;
    uint64_t v97 = v63;
    unint64_t v109 = v64;
    uint64_t v57 = v55;
    uint64_t v58 = AssociatedTypeWitness;
  }
  uint64_t v65 = v53;
  (*(void (**)(char *, uint64_t))(v57 + 8))(v52, v58);
  uint64_t v66 = v107;
  v51(v107, &v118[*(int *)(v119 + 40)], v65);
  if (v56(v66, 1, v54) == 1)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v66, v65);
    uint64_t v67 = 0;
    unint64_t v68 = 0xF000000000000000;
    uint64_t v49 = v108;
    unint64_t v69 = v109;
    char v70 = v118;
    uint64_t v41 = v119;
    v61 = v111;
    uint64_t v39 = v113;
    if (v109 >> 60 != 15) {
      goto LABEL_32;
    }
    goto LABEL_24;
  }
  uint64_t v71 = swift_getAssociatedConformanceWitness();
  uint64_t v72 = v54;
  uint64_t v67 = (*(uint64_t (**)(uint64_t))(*(void *)(v71 + 8) + 8))(v54);
  unint64_t v68 = v73;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v66, v72);
  uint64_t v49 = v108;
  unint64_t v69 = v109;
  v61 = v111;
  if (v109 >> 60 == 15)
  {
    char v70 = v118;
    uint64_t v41 = v119;
    uint64_t v39 = v113;
LABEL_24:
    uint64_t v60 = *(void (**)(char *, uint64_t))(v117 + 8);
    v60(v70, v41);
    v60(v114, v41);
    if (v68 >> 60 != 15)
    {
      unint64_t v89 = v109;
      uint64_t v88 = v97;
      goto LABEL_34;
    }
    sub_247FB846C(v97, v109);
    v49(v61, v39, v41);
    uint64_t v43 = v116;
    v49(v116, v120, v41);
    goto LABEL_26;
  }
  if (v68 >> 60 == 15)
  {
    char v70 = v118;
    uint64_t v41 = v119;
    uint64_t v39 = v113;
LABEL_32:
    unint64_t v84 = v68;
    uint64_t v85 = v67;
    uint64_t v86 = v97;
    sub_247FB6C20(v97, v69);
    uint64_t v60 = *(void (**)(char *, uint64_t))(v117 + 8);
    v87 = v70;
    uint64_t v88 = v86;
    uint64_t v67 = v85;
    unint64_t v68 = v84;
    v61 = v111;
    v60(v87, v41);
    v60(v114, v41);
    unint64_t v89 = v109;
    sub_247FB846C(v88, v109);
LABEL_34:
    sub_247FB846C(v88, v89);
    sub_247FB846C(v67, v68);
    uint64_t v43 = v116;
    goto LABEL_35;
  }
  uint64_t v92 = v97;
  sub_247FB8458(v97, v109);
  char v93 = sub_24802CAF4(v92, v69, v67, v68);
  sub_247FB846C(v67, v68);
  sub_247FB846C(v92, v69);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v117 + 8);
  uint64_t v41 = v119;
  v60(v118, v119);
  v60(v114, v41);
  sub_247FB846C(v92, v69);
  v49(v61, v113, v41);
  uint64_t v43 = v116;
  v49(v116, v120, v41);
  if ((v93 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_26:
  uint64_t v74 = *(int *)(v41 + 44);
  v75 = v43;
  uint64_t v76 = (uint64_t)&v43[v74];
  uint64_t v77 = v101;
  uint64_t v78 = v101 + *(int *)(v100 + 48);
  sub_24802753C((uint64_t)&v61[v74], v101);
  sub_24802753C(v76, v78);
  uint64_t v79 = v102;
  uint64_t v80 = v103;
  v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
  if (v81(v77, 1, v103) != 1)
  {
    uint64_t v91 = v99;
    sub_24802753C(v77, v99);
    if (v81(v78, 1, v80) != 1)
    {
      v94 = v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v98, v78, v80);
      sub_248030518(&qword_2692D75A8, MEMORY[0x263F04620]);
      char v82 = sub_248175100();
      v95 = *(void (**)(char *, uint64_t))(v79 + 8);
      v95(v94, v80);
      v60(v116, v41);
      v60(v61, v41);
      v95((char *)v91, v80);
      sub_247FB33D4(v77, qword_2692D5930);
      return v82 & 1;
    }
    v60(v116, v41);
    v60(v61, v41);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v91, v80);
    goto LABEL_41;
  }
  v60(v75, v41);
  v60(v61, v41);
  if (v81(v78, 1, v80) != 1)
  {
LABEL_41:
    sub_247FB33D4(v77, &qword_2692D75A0);
    goto LABEL_37;
  }
  sub_247FB33D4(v77, qword_2692D5930);
  char v82 = 1;
  return v82 & 1;
}

uint64_t CryptographicIdentity.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v41 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v40 = (uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(*(void *)(a2 + 24) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_248175700();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v36 - v10;
  uint64_t v12 = sub_248175700();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v36 - v14;
  uint64_t v16 = *(int *)(a2 + 36);
  uint64_t v39 = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v2 + v16, v12);
  uint64_t v17 = *(void *)(v6 - 8);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v6);
  v36[1] = v7;
  if (v18 == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_248175E80();
  }
  else
  {
    uint64_t v19 = (*(uint64_t (**)(uint64_t))(*(void *)(v7 + 8) + 8))(v6);
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v6);
    sub_248175E80();
    sub_247FB6C20(v19, v21);
    sub_2481747E0();
    sub_247FB6CCC(v19, v21);
    sub_247FB6CCC(v19, v21);
  }
  uint64_t v22 = v38;
  uint64_t v23 = v39;
  uint64_t v24 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v11, v39 + *(int *)(a2 + 40), v38);
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v22);
    uint64_t v26 = v41;
    sub_248175E80();
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(AssociatedTypeWitness);
    unint64_t v30 = v29;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, AssociatedTypeWitness);
    uint64_t v26 = v41;
    sub_248175E80();
    sub_247FB6C20(v28, v30);
    sub_2481747E0();
    sub_247FB6CCC(v28, v30);
    sub_247FB6CCC(v28, v30);
  }
  uint64_t v31 = v40;
  sub_24802753C(v23 + *(int *)(a2 + 44), v40);
  uint64_t v32 = sub_248174EF0();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32);
  if (v34 == 1) {
    return sub_247FB33D4(v31, qword_2692D5930);
  }
  MEMORY[0x270FA5388](v34);
  v36[-2] = v26;
  sub_248174ED0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
}

uint64_t CryptographicIdentity.hashValue.getter(uint64_t a1)
{
  sub_248175E50();
  CryptographicIdentity.hash(into:)((uint64_t)v3, a1);
  return sub_248175EC0();
}

uint64_t sub_248028F3C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CryptographicIdentity.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_248028F5C(void *a1, uint64_t a2)
{
  return CryptographicIdentity.encode(to:)(a1, a2);
}

uint64_t sub_248028F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CryptographicIdentity.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_248028F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24802B284(a1, a2, a3, (void (*)(unsigned char *, uint64_t))CryptographicIdentity.hash(into:));
}

uint64_t CryptographicIdentity.Info.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void CryptographicIdentity.Info.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

BOOL static CryptographicIdentity.Info.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CryptographicIdentity.Info.Kind.hash(into:)()
{
  return sub_248175E70();
}

uint64_t sub_24802901C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E756D6D6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E6F73726570 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646E756F42706573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_248029174(char a1)
{
  return *(void *)&aCommunalperson[8 * a1];
}

BOOL sub_24802918C(char *a1, char *a2)
{
  return sub_247FC5EB8(*a1, *a2);
}

uint64_t sub_2480291A0()
{
  return sub_247FC64B0();
}

uint64_t sub_2480291AC()
{
  return sub_247FC5EC8();
}

uint64_t sub_2480291B8()
{
  return sub_248175EC0();
}

uint64_t sub_248029200()
{
  return sub_248029174(*v0);
}

uint64_t sub_24802920C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24802901C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24802923C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_247FD1804();
  *a1 = result;
  return result;
}

uint64_t sub_248029268(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2480292BC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_248029310@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  return sub_248029478(a1, (uint64_t (*)(void, void))sub_247F9B600, a2);
}

uint64_t sub_248029328(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24802937C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_2480293D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248029424(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_248029478@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(void, void)@<X4>, unsigned char *a3@<X8>)
{
  char v4 = a2(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_2480294C4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248029518(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CryptographicIdentity.Info.Kind.encode(to:)(void *a1)
{
  BOOL v2 = v1;
  uint64_t v4 = type metadata accessor for CryptographicIdentity.Info.Kind.SepBoundCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v34 = v4;
  uint64_t v5 = sub_248175C20();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v30 = (char *)&v21 - v6;
  uint64_t v7 = type metadata accessor for CryptographicIdentity.Info.Kind.PersonalCodingKeys();
  uint64_t v8 = swift_getWitnessTable();
  uint64_t v29 = v7;
  uint64_t v27 = v8;
  uint64_t v28 = sub_248175C20();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v25 = (char *)&v21 - v9;
  type metadata accessor for CryptographicIdentity.Info.Kind.CommunalCodingKeys();
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = sub_248175C20();
  uint64_t v22 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  unint64_t v21 = (char *)&v21 - v10;
  type metadata accessor for CryptographicIdentity.Info.Kind.CodingKeys();
  swift_getWitnessTable();
  uint64_t v35 = sub_248175C20();
  uint64_t v11 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v13 = (char *)&v21 - v12;
  int v14 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  if (v14)
  {
    if (v14 == 1)
    {
      char v37 = 1;
      uint64_t v15 = v25;
      uint64_t v16 = v35;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v16);
    }
    char v38 = 2;
    unint64_t v20 = v30;
    uint64_t v19 = v35;
    sub_248175B50();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v32);
  }
  else
  {
    char v36 = 0;
    int v18 = v21;
    uint64_t v19 = v35;
    sub_248175B50();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t CryptographicIdentity.Info.Kind.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t CryptographicIdentity.Info.Kind.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v7 = type metadata accessor for CryptographicIdentity.Info.Kind.SepBoundCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v52 = v7;
  uint64_t v45 = sub_248175B40();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v50 = (char *)&v36 - v8;
  uint64_t v9 = type metadata accessor for CryptographicIdentity.Info.Kind.PersonalCodingKeys();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v9;
  uint64_t v43 = sub_248175B40();
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  unint64_t v47 = (char *)&v36 - v10;
  type metadata accessor for CryptographicIdentity.Info.Kind.CommunalCodingKeys();
  uint64_t v46 = swift_getWitnessTable();
  uint64_t v41 = sub_248175B40();
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v56 = a3;
  type metadata accessor for CryptographicIdentity.Info.Kind.CodingKeys();
  swift_getWitnessTable();
  uint64_t v13 = sub_248175B40();
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v36 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v16 = v61;
  sub_248175F20();
  if (v16) {
    goto LABEL_11;
  }
  char v37 = v12;
  uint64_t v39 = a2;
  uint64_t v38 = 0;
  v61 = a1;
  uint64_t v17 = v55;
  *(void *)&long long v57 = sub_248175B30();
  sub_248175330();
  swift_getWitnessTable();
  *(void *)&long long v59 = sub_248175780();
  *((void *)&v59 + 1) = v18;
  *(void *)&long long v60 = v19;
  *((void *)&v60 + 1) = v20;
  sub_248175770();
  swift_getWitnessTable();
  sub_248175590();
  int v21 = v57;
  if (v57 == 3 || (long long v36 = v59, v57 = v59, v58 = v60, (sub_2481755A0() & 1) == 0))
  {
    uint64_t v25 = sub_2481758A0();
    swift_allocError();
    uint64_t v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v27 = type metadata accessor for CryptographicIdentity.Info.Kind();
    sub_248175A60();
    sub_248175880();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    goto LABEL_9;
  }
  if (!v21)
  {
    LOBYTE(v57) = 0;
    unint64_t v30 = v37;
    uint64_t v31 = v38;
    sub_248175A50();
    if (!v31)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v41);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v17);
      uint64_t v34 = v53;
      goto LABEL_20;
    }
LABEL_9:
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v15, v17);
    goto LABEL_10;
  }
  if (v21 != 1)
  {
    LOBYTE(v57) = 2;
    uint64_t v32 = v50;
    uint64_t v33 = v38;
    sub_248175A50();
    uint64_t v34 = v53;
    uint64_t v35 = v54;
    if (v33)
    {
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v17);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v45);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v17);
LABEL_20:
    unsigned char *v34 = v21;
    uint64_t v28 = (uint64_t)v61;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  LOBYTE(v57) = 1;
  uint64_t v22 = v47;
  uint64_t v23 = v38;
  sub_248175A50();
  uint64_t v24 = v54;
  if (!v23)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v43);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v17);
    uint64_t v34 = v53;
    goto LABEL_20;
  }
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v17);
LABEL_10:
  a1 = v61;
LABEL_11:
  uint64_t v28 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_24802A184()
{
  return sub_248175EC0();
}

uint64_t sub_24802A1C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return CryptographicIdentity.Info.Kind.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_24802A1E0(void *a1)
{
  return CryptographicIdentity.Info.Kind.encode(to:)(a1);
}

uint64_t CryptographicIdentity.Info.intoSalt()()
{
  unint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  swift_bridgeObjectRetain();
  return sub_24802775C(v1, v2);
}

BOOL static CryptographicIdentity.Info.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_248175CE0();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t CryptographicIdentity.Info.hash(into:)()
{
  return sub_248175E70();
}

BOOL sub_24802A2F4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24802A304()
{
  return sub_248175E70();
}

uint64_t sub_24802A32C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24802A3F8()
{
  return sub_248175EC0();
}

uint64_t sub_24802A440(char a1)
{
  if (a1) {
    return 1684957547;
  }
  else {
    return 25705;
  }
}

BOOL sub_24802A464(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24802A2F4(*a1, *a2);
}

uint64_t sub_24802A478()
{
  return sub_24802A3F8();
}

uint64_t sub_24802A488()
{
  return sub_24802A304();
}

uint64_t sub_24802A498()
{
  return sub_248175EC0();
}

uint64_t sub_24802A4E0()
{
  return sub_24802A440(*v0);
}

uint64_t sub_24802A4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24802A32C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24802A520@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24802D140();
  *a1 = result;
  return result;
}

uint64_t sub_24802A54C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24802A5A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CryptographicIdentity.Info.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v11[1] = *(void *)(a2 + 24);
  v11[2] = v4;
  type metadata accessor for CryptographicIdentity.Info.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_248175C20();
  uint64_t v12 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v11 - v6;
  v11[3] = *(void *)v2;
  int v14 = *(unsigned __int8 *)(v2 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  char v17 = 0;
  uint64_t v8 = v13;
  sub_248175BB0();
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v5);
  }
  uint64_t v10 = v12;
  char v16 = v14;
  char v15 = 1;
  type metadata accessor for CryptographicIdentity.Info.Kind();
  swift_getWitnessTable();
  sub_248175BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v5);
}

uint64_t CryptographicIdentity.Info.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t CryptographicIdentity.Info.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v16 = a2;
  type metadata accessor for CryptographicIdentity.Info.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_248175B40();
  uint64_t v17 = *(void *)(v4 - 8);
  uint64_t v18 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v7 = v17;
  uint64_t v8 = v18;
  char v21 = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  uint64_t v15 = v9;
  type metadata accessor for CryptographicIdentity.Info.Kind();
  char v19 = 1;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v8);
  char v12 = v20;
  uint64_t v13 = v16;
  *char v16 = v15;
  v13[1] = v11;
  *((unsigned char *)v13 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24802AAAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CryptographicIdentity.Info.init(from:)(a1, a2);
}

uint64_t sub_24802AACC(void *a1, uint64_t a2)
{
  return CryptographicIdentity.Info.encode(to:)(a1, a2);
}

uint64_t sub_24802AAF0()
{
  return sub_248175EC0();
}

uint64_t CryptographicIdentity.ExportedMaterial.hash(into:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CryptographicIdentity();
  return CryptographicIdentity.hash(into:)(a1, v2);
}

uint64_t sub_24802AB78(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x797469746E656469 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_248175CE0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24802AC00()
{
  return 0x797469746E656469;
}

uint64_t sub_24802AC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24802AB78(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24802AC4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_247F9B600();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24802AC7C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24802ACD0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t CryptographicIdentity.ExportedMaterial.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v8 = *(void *)(a2 + 16);
  type metadata accessor for CryptographicIdentity.ExportedMaterial.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_248175C20();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  type metadata accessor for CryptographicIdentity();
  swift_getWitnessTable();
  sub_248175BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CryptographicIdentity.ExportedMaterial.hashValue.getter()
{
  sub_248175E50();
  uint64_t v0 = type metadata accessor for CryptographicIdentity();
  CryptographicIdentity.hash(into:)((uint64_t)v2, v0);
  return sub_248175EC0();
}

uint64_t CryptographicIdentity.ExportedMaterial.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = type metadata accessor for CryptographicIdentity();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v25 = (char *)&v18 - v4;
  type metadata accessor for CryptographicIdentity.ExportedMaterial.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_248175B40();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for CryptographicIdentity.ExportedMaterial();
  uint64_t v19 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = v26;
  sub_248175F20();
  if (!v11)
  {
    uint64_t v18 = v10;
    uint64_t v26 = v8;
    uint64_t v12 = v21;
    uint64_t v14 = v23;
    uint64_t v13 = v24;
    swift_getWitnessTable();
    uint64_t v15 = v22;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v15);
    char v16 = v18;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v25, v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v20, v16, v26);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24802B220@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CryptographicIdentity.ExportedMaterial.init(from:)(a1, a2);
}

uint64_t sub_24802B240(void *a1, uint64_t a2)
{
  return CryptographicIdentity.ExportedMaterial.encode(to:)(a1, a2);
}

uint64_t sub_24802B258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CryptographicIdentity.ExportedMaterial.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_24802B26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24802B284(a1, a2, a3, (void (*)(unsigned char *, uint64_t))CryptographicIdentity.ExportedMaterial.hash(into:));
}

uint64_t sub_24802B284(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  sub_248175E50();
  a4(v7, a2);
  return sub_248175EC0();
}

uint64_t CryptographicIdentity<>.encrypt<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  v20[3] = a3;
  v20[1] = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D75B0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_248174EF0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_248024DE0(a1, (uint64_t)v13);
  if (!v4)
  {
    uint64_t v15 = a4;
    uint64_t v16 = sub_248174DB0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
    uint64_t v17 = sub_248174DA0();
    uint64_t v19 = v18;
    sub_247FB33D4((uint64_t)v9, &qword_2692D75B0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t *v15 = v17;
    v15[1] = v19;
  }
  return result;
}

uint64_t CryptographicIdentity<>.decrypt<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  v22[1] = a4;
  uint64_t v10 = sub_248174EF0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_248024DE0(a2, (uint64_t)v13);
  if (!v5)
  {
    uint64_t v15 = a5;
    uint64_t v16 = sub_24802D148(a1, a3);
    unint64_t v18 = v17;
    uint64_t v19 = sub_248174D90();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t result = sub_247FB6CCC(v16, v18);
    uint64_t *v15 = v19;
    v15[1] = v21;
  }
  return result;
}

uint64_t CryptographicIdentity<>.derived(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v83 = a1;
  uint64_t v79 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v78 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = a3;
  uint64_t v77 = *(void *)(a3 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v80 = *(void *)(v77 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_248175700();
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v76 = (char *)&v62 - v12;
  uint64_t v13 = sub_248175700();
  MEMORY[0x270FA5388](v13 - 8);
  v75 = (char *)&v62 - v14;
  uint64_t v15 = sub_248174EF0();
  uint64_t v71 = *(void *)(v15 - 8);
  uint64_t v72 = v15;
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_248174EC0();
  uint64_t v70 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = AssociatedTypeWitness;
  uint64_t v81 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v85 = (uint64_t)&v62 - v23;
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v91;
  sub_248024A2C(a2, (uint64_t)v26);
  if (v27) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(v4, a2);
  }
  uint64_t v67 = v21;
  uint64_t v65 = v18;
  uint64_t v91 = v4;
  unint64_t v69 = v26;
  uint64_t v68 = v24;
  uint64_t v66 = v17;
  uint64_t v28 = v84;
  sub_248024BF0(a2, v85);
  uint64_t v63 = a2;
  unint64_t v30 = *(uint64_t (**)(uint64_t))(*(void *)(v80 + 8) + 8);
  uint64_t v83 = 0;
  uint64_t v31 = v30(v9);
  unint64_t v33 = v32;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 8) + 8) + 8))(v28);
  unint64_t v37 = v36;
  uint64_t v86 = v31;
  unint64_t v87 = v33;
  sub_247FB6C20(v31, v33);
  sub_24802C6AC(v35, v37);
  unint64_t v38 = v37;
  uint64_t v39 = v91;
  sub_247FB6CCC(v35, v38);
  sub_247FB6CCC(v31, v33);
  uint64_t v80 = v86;
  unint64_t v64 = v87;
  unint64_t v41 = *(void *)v39;
  unint64_t v40 = *(void *)(v39 + 8);
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_24802775C(v41, v40);
  unint64_t v44 = v43;
  uint64_t v45 = v67;
  uint64_t v46 = v83;
  uint64_t v82 = v9;
  sub_248174F50();
  uint64_t v47 = v68;
  if (v46)
  {
    sub_247FB6CCC(v42, v44);
    sub_247FB6CCC(v80, v64);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v85, v84);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v69, v82);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v39, v63);
  }
  else
  {
    sub_248174FE0();
    uint64_t v48 = v45;
    uint64_t v83 = 0;
    unint64_t v49 = v64;
    uint64_t v86 = v80;
    unint64_t v87 = v64;
    uint64_t v89 = v42;
    unint64_t v90 = v44;
    unint64_t v50 = v44;
    sub_248030518(qword_2692D75B8, MEMORY[0x263F047F8]);
    sub_247FBB1CC();
    uint64_t v51 = v66;
    sub_248174EB0();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v48, v65);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v85, v84);
    sub_247FB6CCC(v42, v50);
    sub_247FB6CCC(v80, v49);
    unint64_t v52 = *(void *)(v39 + 8);
    char v53 = *(unsigned char *)(v39 + 16);
    uint64_t v86 = *(void *)v39;
    unint64_t v87 = v52;
    char v88 = v53;
    uint64_t v54 = (uint64_t)v75;
    uint64_t v55 = v82;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v75, v69, v82);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v54, 0, 1, v55);
    uint64_t v56 = v63;
    uint64_t v57 = (uint64_t)v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v76, v39 + *(int *)(v63 + 40), v74);
    long long v58 = *(void (**)(uint64_t, uint64_t))(*(void *)(v56 - 8) + 8);
    swift_bridgeObjectRetain();
    v58(v39, v56);
    uint64_t v60 = v71;
    uint64_t v59 = v72;
    uint64_t v61 = (uint64_t)v78;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v78, v51, v72);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v61, 0, 1, v59);
    return sub_24802539C((uint64_t)&v86, v54, v57, v61, v79);
  }
}

uint64_t sub_24802BE90@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_247FB6C20(a2, a3);
      uint64_t v10 = (char *)sub_248174660();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_248174690();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_248174680();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x24802C0F4);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_247FB6CCC(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      unint64_t v17 = (char *)sub_248174660();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_248174690();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_248174680();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_24802C104(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_248175220();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x24C5736F0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

char *sub_24802C180(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  v16[2] = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)unint64_t v1 = xmmword_24817F760;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_248174660() && __OFSUB__((int)v4, sub_248174690())) {
        goto LABEL_24;
      }
      sub_2481746A0();
      swift_allocObject();
      uint64_t v13 = sub_248174640();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_24802C56C((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_248174770();
      uint64_t result = sub_24802C56C(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        *unint64_t v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        *unint64_t v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      *unint64_t v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

unsigned char *sub_24802C484@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_24802CE78(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_24802CFC0((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_24802CF3C((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

void *sub_24802C4FC(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_24802C56C(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_248174660();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  uint64_t result = (char *)sub_248174690();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_248174680();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_24802C620@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_248175860();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24802C6AC(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x263EF8340];
  v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_247FB6C20(a1, a2);
      sub_247FB6C20(v5, v6);
      sub_24802C8D0((int)v5, v5 >> 32);
      sub_247FB6CCC(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_247FB6C20(a1, a2);
      swift_retain();
      swift_retain();
      sub_24802C8D0(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_247FB6C20(a1, a2);
      sub_2481747B0();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_24802C8D0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_248174660();
  if (!result || (uint64_t result = sub_248174690(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_248174680();
      return sub_2481747B0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24802C964(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_24802BE90((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_24802CA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_248174660();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_248174690();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_248174680();
  sub_24802BE90(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_24802CAF4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x24802CD5CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_247FB6C20(a3, a4);
                  sub_247FB6C20(a1, a2);
                  char v17 = sub_24802CA3C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_247FB6CCC(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_247FB6C20(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_24802CA3C(v21, v22, v20, a3, a4);
                  sub_247FB6CCC(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_247FB6C20(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_247FB6C20(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_24802C964(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_247FB6CCC(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_24802CD8C()
{
  return sub_248175E60();
}

uint64_t type metadata accessor for CryptographicIdentity.Info.Kind.SepBoundCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.Info.Kind.PersonalCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.Info.Kind.CommunalCodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.Info.Kind.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.Info.Kind()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.Info.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.ExportedMaterial.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.ExportedMaterial()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24802CE78(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_24802CF3C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_2481746A0();
  swift_allocObject();
  uint64_t result = sub_248174650();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_24802CFC0(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_2481746A0();
  swift_allocObject();
  uint64_t result = sub_248174650();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_248174790();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

unsigned char *sub_24802D03C(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_24802CE78(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_24802CFC0((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_24802CF3C((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_24802D0A0(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result <= 14)
    {
      if (result < 0) {
        __break(1u);
      }
      else {
        return 0;
      }
    }
    else
    {
      sub_2481746A0();
      swift_allocObject();
      sub_248174670();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_248174790();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_24802D140()
{
  return 2;
}

uint64_t sub_24802D148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_248175580() >= 28)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
    return sub_2481747F0();
  }
  else
  {
    uint64_t v7 = sub_248174DC0();
    sub_248030518(&qword_2692D7A40, MEMORY[0x263F04548]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v7 - 8) + 104))(v8, *MEMORY[0x263F04538], v7);
    return swift_willThrow();
  }
}

uint64_t sub_24802D2E0(void *a1)
{
  return sub_24802D434(a1);
}

uint64_t sub_24802D320()
{
  return swift_getWitnessTable();
}

uint64_t sub_24802D33C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24802D358(void *a1)
{
  return sub_24802D434(a1);
}

uint64_t sub_24802D398(void *a1)
{
  return sub_24802D434(a1);
}

uint64_t sub_24802D3D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24802D3F4(void *a1)
{
  return sub_24802D434(a1);
}

uint64_t sub_24802D434(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_24802D494()
{
  return swift_getWitnessTable();
}

void sub_24802D4B0()
{
  sub_248175700();
  if (v0 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    sub_248175700();
    if (v1 <= 0x3F)
    {
      sub_24802DE7C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_24802D604(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v37 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  unsigned int v38 = v9;
  unsigned int v39 = v6;
  if (v6 <= v9) {
    unsigned int v6 = v9;
  }
  uint64_t v10 = *(void *)(sub_248174EF0() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v6 <= v13) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v6;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v5) {
    uint64_t v16 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v4 + 64) + 1;
  }
  if (v8) {
    uint64_t v17 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = *(void *)(v10 + 64);
  if (v12) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v17 + v20;
  if (a2 <= v15) {
    goto LABEL_45;
  }
  uint64_t v24 = v22 + ((v23 + ((v16 + ((v18 + 17) & ~v18) + v19) & ~v19)) & ~v20);
  char v25 = 8 * v24;
  if (v24 <= 3)
  {
    unsigned int v27 = ((a2 - v15 + ~(-1 << v25)) >> v25) + 1;
    if (HIWORD(v27))
    {
      int v26 = *(_DWORD *)((char *)a1 + v24);
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_35;
    }
    if (v27 > 0xFF)
    {
      int v26 = *(unsigned __int16 *)((char *)a1 + v24);
      if (!*(unsigned __int16 *)((char *)a1 + v24)) {
        goto LABEL_45;
      }
      goto LABEL_35;
    }
    if (v27 < 2)
    {
LABEL_45:
      if ((v14 & 0x80000000) == 0)
      {
        unint64_t v31 = *((void *)a1 + 1);
        if (v31 >= 0xFFFFFFFF) {
          LODWORD(v31) = -1;
        }
        return (v31 + 1);
      }
      uint64_t v33 = ((unint64_t)a1 + v18 + 17) & ~v18;
      if (v39 == v15)
      {
        if (v5 >= 2)
        {
          unsigned int v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v33, v5, v37);
          goto LABEL_62;
        }
        return 0;
      }
      uint64_t v35 = (v33 + v16 + v19) & ~v19;
      if (v38 == v15)
      {
        if (v8 < 2) {
          return 0;
        }
        unsigned int v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v35, v8, AssociatedTypeWitness);
      }
      else
      {
        if (v12 < 2) {
          return 0;
        }
        unsigned int v34 = (*(uint64_t (**)(uint64_t))(v11 + 48))((v23 + v35) & ~v20);
      }
LABEL_62:
      if (v34 >= 2) {
        return v34 - 1;
      }
      else {
        return 0;
      }
    }
  }
  int v26 = *((unsigned __int8 *)a1 + v24);
  if (!*((unsigned char *)a1 + v24)) {
    goto LABEL_45;
  }
LABEL_35:
  int v28 = (v26 - 1) << v25;
  if (v24 > 3) {
    int v28 = 0;
  }
  if (v24)
  {
    if (v24 <= 3) {
      int v29 = v24;
    }
    else {
      int v29 = 4;
    }
    switch(v29)
    {
      case 2:
        int v30 = *a1;
        break;
      case 3:
        int v30 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v30 = *(_DWORD *)a1;
        break;
      default:
        int v30 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v30 = 0;
  }
  return v15 + (v30 | v28) + 1;
}

void sub_24802D9B0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v42 = v5;
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v41 = *(void *)(a4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v7 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = v7;
  }
  int v12 = 0;
  uint64_t v13 = *(void *)(sub_248174EF0() - 8);
  uint64_t v14 = v13;
  unsigned int v15 = *(_DWORD *)(v13 + 84);
  if (v15) {
    unsigned int v16 = v15 - 1;
  }
  else {
    unsigned int v16 = 0;
  }
  uint64_t v17 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v20 = *(void *)(v13 + 64);
  if (v11 <= v16) {
    unsigned int v21 = v16;
  }
  else {
    unsigned int v21 = v11;
  }
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = v21;
  }
  if (v6) {
    uint64_t v23 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v5 + 64) + 1;
  }
  if (v9) {
    uint64_t v24 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v24 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v25 = v24 + v19;
  if (v15) {
    uint64_t v26 = v20;
  }
  else {
    uint64_t v26 = v20 + 1;
  }
  size_t v27 = v26 + ((v25 + ((v23 + ((v17 + 17) & ~v17) + v18) & ~v18)) & ~v19);
  if (a3 > v22)
  {
    if (v27 <= 3)
    {
      unsigned int v28 = ((a3 - v22 + ~(-1 << (8 * v27))) >> (8 * v27)) + 1;
      if (HIWORD(v28))
      {
        int v12 = 4;
      }
      else if (v28 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v28 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  if (v22 < a2)
  {
    unsigned int v29 = ~v22 + a2;
    if (v27 < 4)
    {
      int v30 = (v29 >> (8 * v27)) + 1;
      if (v27)
      {
        int v32 = v29 & ~(-1 << (8 * v27));
        bzero(a1, v27);
        if (v27 == 3)
        {
          *a1 = v32;
          *((unsigned char *)a1 + 2) = BYTE2(v32);
        }
        else if (v27 == 2)
        {
          *a1 = v32;
        }
        else
        {
          *(unsigned char *)a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v27);
      *(_DWORD *)a1 = v29;
      int v30 = 1;
    }
    switch(v12)
    {
      case 1:
        *((unsigned char *)a1 + v27) = v30;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v27) = v30;
        return;
      case 3:
        goto LABEL_75;
      case 4:
        *(_DWORD *)((char *)a1 + v27) = v30;
        return;
      default:
        return;
    }
  }
  uint64_t v31 = ~v19;
  switch(v12)
  {
    case 1:
      *((unsigned char *)a1 + v27) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 2:
      *(_WORD *)((char *)a1 + v27) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 3:
LABEL_75:
      __break(1u);
      JUMPOUT(0x24802DE54);
    case 4:
      *(_DWORD *)((char *)a1 + v27) = 0;
      goto LABEL_47;
    default:
LABEL_47:
      if (!a2) {
        return;
      }
LABEL_48:
      if ((v21 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0)
        {
          *((unsigned char *)a1 + 16) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
        return;
      }
      uint64_t v33 = ((unint64_t)a1 + v17 + 17) & ~v17;
      if (v7 == v22)
      {
        if (v6 < 2) {
          return;
        }
        uint64_t v34 = a2 + 1;
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
        uint64_t v36 = v6;
        uint64_t v37 = v41;
        goto LABEL_57;
      }
      uint64_t v33 = (v33 + v23 + v18) & ~v18;
      if (v10 == v22)
      {
        if (v9 < 2) {
          return;
        }
        uint64_t v34 = a2 + 1;
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
        uint64_t v36 = v9;
        uint64_t v37 = AssociatedTypeWitness;
LABEL_57:
        v35(v33, v34, v36, v37);
        return;
      }
      if (v15 >= 2)
      {
        uint64_t v38 = (v25 + v33) & v31;
        unsigned int v39 = *(void (**)(uint64_t, void))(v14 + 56);
        v39(v38, a2 + 1);
      }
      return;
  }
}

void sub_24802DE7C()
{
  if (!qword_26B13BE50)
  {
    sub_248174EF0();
    unint64_t v0 = sub_248175700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B13BE50);
    }
  }
}

uint64_t sub_24802DED8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24802DF10(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_24802DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_24802DFA8(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24802DFF0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24802E034()
{
  uint64_t result = type metadata accessor for CryptographicIdentity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24802E0C4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  if (*(_DWORD *)(v5 + 84)) {
    uint64_t v7 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v7 = *(void *)(v5 + 64) + 1;
  }
  uint64_t v40 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  size_t __n = v7;
  uint64_t v42 = v8;
  uint64_t v10 = v9;
  unint64_t v11 = (v7 + ((v6 + 17) & ~(unint64_t)v6) + v9) & ~(unint64_t)v9;
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v12 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  else {
    uint64_t v12 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 1;
  }
  uint64_t v13 = sub_248174EF0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v44 = v14;
  uint64_t v45 = v13;
  unint64_t v15 = *(_DWORD *)(v14 + 80);
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v16 = *(void *)(v14 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v14 + 64) + 1;
  }
  unint64_t v17 = v9 | v6 | v15;
  if (v17 > 7
    || ((v9 | v6 | *(_DWORD *)(v14 + 80)) & 0x100000) != 0
    || v16
     + ((v12 + *(_DWORD *)(v14 + 80) + v11) & ~(unint64_t)*(_DWORD *)(v14 + 80)) > 0x18)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    uint64_t v21 = v20 + ((v17 & 0xF8 ^ 0x1F8) & (v17 + 16));
    swift_retain();
  }
  else
  {
    size_t v38 = v16;
    unint64_t v39 = ~(unint64_t)v9;
    uint64_t v22 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v22;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v23 = (uint64_t)a2 + v6;
    uint64_t v24 = (void *)((a1 + v6 + 17) & ~(unint64_t)v6);
    uint64_t v25 = (char *)((v23 + 17) & ~(unint64_t)v6);
    uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain();
    uint64_t v21 = a1;
    if (v26(v25, 1, v40))
    {
      size_t v27 = __n;
      memcpy(v24, v25, __n);
      uint64_t v29 = v42;
      size_t v28 = v12;
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v5 + 16))(v24, v25, v40);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v24, 0, 1, v40);
      uint64_t v29 = v42;
      size_t v28 = v12;
      size_t v27 = __n;
    }
    uint64_t v30 = ~v15;
    uint64_t v31 = &v25[v27];
    int v32 = (void *)(((unint64_t)v24 + v27 + v10) & v39);
    uint64_t v33 = (char *)((unint64_t)&v31[v10] & v39);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v33, 1, AssociatedTypeWitness))
    {
      memcpy(v32, v33, v28);
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v29 + 16))(v32, v33, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v32, 0, 1, AssociatedTypeWitness);
    }
    uint64_t v34 = &v33[v28];
    uint64_t v35 = (void *)(((unint64_t)v32 + v28 + v15) & v30);
    uint64_t v36 = (const void *)((unint64_t)&v34[v15] & v30);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v44 + 48))(v36, 1, v45))
    {
      memcpy(v35, v36, v38);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v44 + 16))(v35, v36, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v35, 0, 1, v45);
    }
  }
  return v21;
}

uint64_t sub_24802E4B0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  }
  int v7 = *(_DWORD *)(v5 + 84);
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10;
  uint64_t v12 = v8 + v6;
  if (!v7) {
    ++v12;
  }
  unint64_t v13 = (v12 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v13, 1, AssociatedTypeWitness)) {
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  }
  int v14 = *(_DWORD *)(v11 + 84);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v16 = sub_248174EF0();
  uint64_t v21 = *(void *)(v16 - 8);
  uint64_t v17 = v15 + v13;
  if (!v14) {
    ++v17;
  }
  unint64_t v18 = (v17 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v18, 1, v16);
  if (!result)
  {
    uint64_t v20 = *(uint64_t (**)(unint64_t, uint64_t))(v21 + 8);
    return v20(v18, v16);
  }
  return result;
}

uint64_t sub_24802E70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (void *)((v7 + 17 + a1) & ~v7);
  int v9 = (const void *)((v7 + 17 + a2) & ~v7);
  uint64_t v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  swift_bridgeObjectRetain();
  if (v10(v9, 1, v5))
  {
    int v11 = *(_DWORD *)(v6 + 84);
    size_t v12 = *(void *)(v6 + 64);
    if (v11) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v12 + 1;
    }
    memcpy(v8, v9, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v8, v9, v5);
    uint64_t v15 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v14 = v6 + 56;
    v15(v8, 0, 1, v5);
    int v11 = *(_DWORD *)(v14 + 28);
    size_t v12 = *(void *)(v14 + 8);
  }
  if (!v11) {
    ++v12;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (void *)(((unint64_t)v8 + v12 + v18) & ~v18);
  uint64_t v20 = (const void *)(((unint64_t)v9 + v12 + v18) & ~v18);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v20, 1, AssociatedTypeWitness))
  {
    int v21 = *(_DWORD *)(v17 + 84);
    size_t v22 = *(void *)(v17 + 64);
    if (v21) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v22 + 1;
    }
    memcpy(v19, v20, v23);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v19, v20, AssociatedTypeWitness);
    uint64_t v25 = *(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56);
    uint64_t v24 = v17 + 56;
    v25(v19, 0, 1, AssociatedTypeWitness);
    int v21 = *(_DWORD *)(v24 + 28);
    size_t v22 = *(void *)(v24 + 8);
  }
  if (v21) {
    size_t v26 = v22;
  }
  else {
    size_t v26 = v22 + 1;
  }
  uint64_t v27 = sub_248174EF0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = (void *)(((unint64_t)v19 + v26 + v29) & ~v29);
  uint64_t v31 = (const void *)(((unint64_t)v20 + v26 + v29) & ~v29);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v31, 1, v27))
  {
    if (*(_DWORD *)(v28 + 84)) {
      size_t v32 = *(void *)(v28 + 64);
    }
    else {
      size_t v32 = *(void *)(v28 + 64) + 1;
    }
    memcpy(v30, v31, v32);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v30, v31, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v27);
  }
  return a1;
}

uint64_t sub_24802EA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  int v9 = (void *)((v8 + 17 + a1) & ~v8);
  uint64_t v10 = (void *)((v8 + 17 + a2) & ~v8);
  int v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(v9, 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v10, v6);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    int v14 = *(_DWORD *)(v7 + 84);
    size_t v15 = *(void *)(v7 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v9, v10, v16);
LABEL_12:
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v17 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v7 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  int v21 = (void *)(((unint64_t)v9 + v17 + v20) & ~v20);
  size_t v22 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  size_t v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v24 = v23(v21, 1, AssociatedTypeWitness);
  int v25 = v23(v22, 1, AssociatedTypeWitness);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v21, v22, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, AssociatedTypeWitness);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v21, v22, AssociatedTypeWitness);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v21, AssociatedTypeWitness);
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  if (v26) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  memcpy(v21, v22, v28);
LABEL_26:
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v29 = *(void *)(v19 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v19 + 64) + 1;
  }
  uint64_t v30 = sub_248174EF0();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = (void *)(((unint64_t)v21 + v29 + v32) & ~v32);
  uint64_t v34 = (void *)(((unint64_t)v22 + v29 + v32) & ~v32);
  uint64_t v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 48);
  int v36 = v35(v33, 1, v30);
  int v37 = v35(v34, 1, v30);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 16))(v33, v34, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v30);
      return a1;
    }
    int v38 = *(_DWORD *)(v31 + 84);
    size_t v39 = *(void *)(v31 + 64);
  }
  else
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v31 + 24))(v33, v34, v30);
      return a1;
    }
    uint64_t v41 = *(void (**)(void *, uint64_t))(v31 + 8);
    uint64_t v40 = v31 + 8;
    v41(v33, v30);
    int v38 = *(_DWORD *)(v40 + 76);
    size_t v39 = *(void *)(v40 + 56);
  }
  if (v38) {
    size_t v42 = v39;
  }
  else {
    size_t v42 = v39 + 1;
  }
  memcpy(v33, v34, v42);
  return a1;
}

uint64_t sub_24802EEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void *)((v6 + 17 + a1) & ~v6);
  uint64_t v8 = (const void *)((v6 + 17 + a2) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
    if (v9) {
      size_t v11 = v10;
    }
    else {
      size_t v11 = v10 + 1;
    }
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    int v13 = *(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56);
    uint64_t v12 = v5 + 56;
    v13(v7, 0, 1, v4);
    int v9 = *(_DWORD *)(v12 + 28);
    size_t v10 = *(void *)(v12 + 8);
  }
  if (!v9) {
    ++v10;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = (void *)(((unint64_t)v7 + v10 + v16) & ~v16);
  uint64_t v18 = (const void *)(((unint64_t)v8 + v10 + v16) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v18, 1, AssociatedTypeWitness))
  {
    int v19 = *(_DWORD *)(v15 + 84);
    size_t v20 = *(void *)(v15 + 64);
    if (v19) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v20 + 1;
    }
    memcpy(v17, v18, v21);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v17, v18, AssociatedTypeWitness);
    size_t v23 = *(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56);
    uint64_t v22 = v15 + 56;
    v23(v17, 0, 1, AssociatedTypeWitness);
    int v19 = *(_DWORD *)(v22 + 28);
    size_t v20 = *(void *)(v22 + 8);
  }
  if (v19) {
    size_t v24 = v20;
  }
  else {
    size_t v24 = v20 + 1;
  }
  uint64_t v25 = sub_248174EF0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  size_t v28 = (void *)(((unint64_t)v17 + v24 + v27) & ~v27);
  uint64_t v29 = (const void *)(((unint64_t)v18 + v24 + v27) & ~v27);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48))(v29, 1, v25))
  {
    if (*(_DWORD *)(v26 + 84)) {
      size_t v30 = *(void *)(v26 + 64);
    }
    else {
      size_t v30 = *(void *)(v26 + 64) + 1;
    }
    memcpy(v28, v29, v30);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v26 + 32))(v28, v29, v25);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v28, 0, 1, v25);
  }
  return a1;
}

uint64_t sub_24802F1DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  size_t v10 = (void *)((v9 + 17 + a1) & ~v9);
  size_t v11 = (void *)((v9 + 17 + a2) & ~v9);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v13 = v12(v10, 1, v7);
  int v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v10, v11, v17);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v18 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v18 = *(void *)(v8 + 64) + 1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (void *)(((unint64_t)v10 + v18 + v21) & ~v21);
  size_t v23 = (void *)(((unint64_t)v11 + v18 + v21) & ~v21);
  size_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v25 = v24(v22, 1, AssociatedTypeWitness);
  int v26 = v24(v23, 1, AssociatedTypeWitness);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v22, v23, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v22, 0, 1, AssociatedTypeWitness);
      goto LABEL_26;
    }
    int v27 = *(_DWORD *)(v20 + 84);
    size_t v28 = *(void *)(v20 + 64);
  }
  else
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v22, v23, AssociatedTypeWitness);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v22, AssociatedTypeWitness);
    int v27 = *(_DWORD *)(v20 + 84);
    size_t v28 = *(void *)(v20 + 64);
  }
  if (v27) {
    size_t v29 = v28;
  }
  else {
    size_t v29 = v28 + 1;
  }
  memcpy(v22, v23, v29);
LABEL_26:
  if (*(_DWORD *)(v20 + 84)) {
    uint64_t v30 = *(void *)(v20 + 64);
  }
  else {
    uint64_t v30 = *(void *)(v20 + 64) + 1;
  }
  uint64_t v31 = sub_248174EF0();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v34 = (void *)(((unint64_t)v22 + v30 + v33) & ~v33);
  uint64_t v35 = (void *)(((unint64_t)v23 + v30 + v33) & ~v33);
  int v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  int v37 = v36(v34, 1, v31);
  int v38 = v36(v35, 1, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 32))(v34, v35, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v31);
      return a1;
    }
    int v39 = *(_DWORD *)(v32 + 84);
    size_t v40 = *(void *)(v32 + 64);
  }
  else
  {
    if (!v38)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 40))(v34, v35, v31);
      return a1;
    }
    size_t v42 = *(void (**)(void *, uint64_t))(v32 + 8);
    uint64_t v41 = v32 + 8;
    v42(v34, v31);
    int v39 = *(_DWORD *)(v41 + 76);
    size_t v40 = *(void *)(v41 + 56);
  }
  if (v39) {
    size_t v43 = v40;
  }
  else {
    size_t v43 = v40 + 1;
  }
  memcpy(v34, v35, v43);
  return a1;
}

uint64_t sub_24802F650(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  if (v5) {
    unsigned int v6 = v5 - 1;
  }
  else {
    unsigned int v6 = 0;
  }
  uint64_t v37 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  unsigned int v38 = v9;
  unsigned int v39 = v6;
  if (v6 <= v9) {
    unsigned int v6 = v9;
  }
  uint64_t v10 = *(void *)(sub_248174EF0() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v6 <= v13) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v6;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v5) {
    uint64_t v16 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v16 = *(void *)(v4 + 64) + 1;
  }
  if (v8) {
    uint64_t v17 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v20 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v21 = *(void *)(v10 + 64);
  if (v12) {
    uint64_t v22 = v21;
  }
  else {
    uint64_t v22 = v21 + 1;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v17 + v20;
  if (a2 <= v15) {
    goto LABEL_45;
  }
  uint64_t v24 = v22 + ((v23 + ((v16 + ((v18 + 17) & ~v18) + v19) & ~v19)) & ~v20);
  char v25 = 8 * v24;
  if (v24 <= 3)
  {
    unsigned int v27 = ((a2 - v15 + ~(-1 << v25)) >> v25) + 1;
    if (HIWORD(v27))
    {
      int v26 = *(_DWORD *)((char *)a1 + v24);
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_35;
    }
    if (v27 > 0xFF)
    {
      int v26 = *(unsigned __int16 *)((char *)a1 + v24);
      if (!*(unsigned __int16 *)((char *)a1 + v24)) {
        goto LABEL_45;
      }
      goto LABEL_35;
    }
    if (v27 < 2)
    {
LABEL_45:
      if ((v14 & 0x80000000) == 0)
      {
        unint64_t v31 = *((void *)a1 + 1);
        if (v31 >= 0xFFFFFFFF) {
          LODWORD(v31) = -1;
        }
        return (v31 + 1);
      }
      uint64_t v33 = ((unint64_t)a1 + v18 + 17) & ~v18;
      if (v39 == v15)
      {
        if (v5 >= 2)
        {
          unsigned int v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v33, v5, v37);
          goto LABEL_62;
        }
        return 0;
      }
      uint64_t v35 = (v33 + v16 + v19) & ~v19;
      if (v38 == v15)
      {
        if (v8 < 2) {
          return 0;
        }
        unsigned int v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v35, v8, AssociatedTypeWitness);
      }
      else
      {
        if (v12 < 2) {
          return 0;
        }
        unsigned int v34 = (*(uint64_t (**)(uint64_t))(v11 + 48))((v23 + v35) & ~v20);
      }
LABEL_62:
      if (v34 >= 2) {
        return v34 - 1;
      }
      else {
        return 0;
      }
    }
  }
  int v26 = *((unsigned __int8 *)a1 + v24);
  if (!*((unsigned char *)a1 + v24)) {
    goto LABEL_45;
  }
LABEL_35:
  int v28 = (v26 - 1) << v25;
  if (v24 > 3) {
    int v28 = 0;
  }
  if (v24)
  {
    if (v24 <= 3) {
      int v29 = v24;
    }
    else {
      int v29 = 4;
    }
    switch(v29)
    {
      case 2:
        int v30 = *a1;
        break;
      case 3:
        int v30 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v30 = *(_DWORD *)a1;
        break;
      default:
        int v30 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v30 = 0;
  }
  return v15 + (v30 | v28) + 1;
}

void sub_24802F9FC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v42 = v5;
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v41 = *(void *)(a4 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9) {
    unsigned int v10 = v9 - 1;
  }
  else {
    unsigned int v10 = 0;
  }
  if (v7 <= v10) {
    unsigned int v11 = v10;
  }
  else {
    unsigned int v11 = v7;
  }
  int v12 = 0;
  uint64_t v13 = *(void *)(sub_248174EF0() - 8);
  uint64_t v14 = v13;
  unsigned int v15 = *(_DWORD *)(v13 + 84);
  if (v15) {
    unsigned int v16 = v15 - 1;
  }
  else {
    unsigned int v16 = 0;
  }
  uint64_t v17 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v20 = *(void *)(v13 + 64);
  if (v11 <= v16) {
    unsigned int v21 = v16;
  }
  else {
    unsigned int v21 = v11;
  }
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = v21;
  }
  if (v6) {
    uint64_t v23 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v5 + 64) + 1;
  }
  if (v9) {
    uint64_t v24 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v24 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v25 = v24 + v19;
  if (v15) {
    uint64_t v26 = v20;
  }
  else {
    uint64_t v26 = v20 + 1;
  }
  size_t v27 = v26 + ((v25 + ((v23 + ((v17 + 17) & ~v17) + v18) & ~v18)) & ~v19);
  if (a3 > v22)
  {
    if (v27 <= 3)
    {
      unsigned int v28 = ((a3 - v22 + ~(-1 << (8 * v27))) >> (8 * v27)) + 1;
      if (HIWORD(v28))
      {
        int v12 = 4;
      }
      else if (v28 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v28 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  if (v22 < a2)
  {
    unsigned int v29 = ~v22 + a2;
    if (v27 < 4)
    {
      int v30 = (v29 >> (8 * v27)) + 1;
      if (v27)
      {
        int v32 = v29 & ~(-1 << (8 * v27));
        bzero(a1, v27);
        if (v27 == 3)
        {
          *a1 = v32;
          *((unsigned char *)a1 + 2) = BYTE2(v32);
        }
        else if (v27 == 2)
        {
          *a1 = v32;
        }
        else
        {
          *(unsigned char *)a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v27);
      *(_DWORD *)a1 = v29;
      int v30 = 1;
    }
    switch(v12)
    {
      case 1:
        *((unsigned char *)a1 + v27) = v30;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v27) = v30;
        return;
      case 3:
        goto LABEL_75;
      case 4:
        *(_DWORD *)((char *)a1 + v27) = v30;
        return;
      default:
        return;
    }
  }
  uint64_t v31 = ~v19;
  switch(v12)
  {
    case 1:
      *((unsigned char *)a1 + v27) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 2:
      *(_WORD *)((char *)a1 + v27) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 3:
LABEL_75:
      __break(1u);
      JUMPOUT(0x24802FEA0);
    case 4:
      *(_DWORD *)((char *)a1 + v27) = 0;
      goto LABEL_47;
    default:
LABEL_47:
      if (!a2) {
        return;
      }
LABEL_48:
      if ((v21 & 0x80000000) == 0)
      {
        if ((a2 & 0x80000000) != 0)
        {
          *((unsigned char *)a1 + 16) = 0;
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
        return;
      }
      uint64_t v33 = ((unint64_t)a1 + v17 + 17) & ~v17;
      if (v7 == v22)
      {
        if (v6 < 2) {
          return;
        }
        uint64_t v34 = a2 + 1;
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
        uint64_t v36 = v6;
        uint64_t v37 = v41;
        goto LABEL_57;
      }
      uint64_t v33 = (v33 + v23 + v18) & ~v18;
      if (v10 == v22)
      {
        if (v9 < 2) {
          return;
        }
        uint64_t v34 = a2 + 1;
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
        uint64_t v36 = v9;
        uint64_t v37 = AssociatedTypeWitness;
LABEL_57:
        v35(v33, v34, v36, v37);
        return;
      }
      if (v15 >= 2)
      {
        uint64_t v38 = (v25 + v33) & v31;
        unsigned int v39 = *(void (**)(uint64_t, void))(v14 + 56);
        v39(v38, a2 + 1);
      }
      return;
  }
}

uint64_t dispatch thunk of RawCryptoRepresentation.rawRepresentation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RawCryptoRepresentation.init(rawRepresentation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AsymmetricKey.complimentaryKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PrivateAsymmetricKey.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PrivateSigningKey.signature<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PublicSigningKey.isValidSignature<A>(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

unsigned char *sub_24802FF80(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24803001CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_248030044(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248030110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_248030138(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248030204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_24803022C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480302F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_248030320()
{
  return swift_getWitnessTable();
}

uint64_t sub_24803033C()
{
  return swift_getWitnessTable();
}

uint64_t sub_248030358()
{
  return swift_getWitnessTable();
}

uint64_t sub_248030374()
{
  return swift_getWitnessTable();
}

uint64_t sub_248030390()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480303AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480303C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480303E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_248030400()
{
  return swift_getWitnessTable();
}

uint64_t sub_24803041C()
{
  return swift_getWitnessTable();
}

uint64_t sub_248030438()
{
  return swift_getWitnessTable();
}

uint64_t sub_248030454()
{
  return swift_getWitnessTable();
}

uint64_t sub_248030470()
{
  return swift_getWitnessTable();
}

uint64_t sub_24803048C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480304A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480304C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480304E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480304FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_248030518(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for CryptographicIdentity.MissingSymmetricKey()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_248030578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  uint64_t result = sub_24802C4FC((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_2480305E4, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_2480305E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24802C620(a1, a2);
}

uint64_t type metadata accessor for CryptographicIdentity.MissingPublicKey()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CryptographicIdentity.MissingPrivateKey()
{
  return __swift_instantiateGenericMetadata();
}

void sub_248030638()
{
}

void sub_248030644()
{
}

void sub_248030650(const char *a1)
{
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B13B730);
  oslog = sub_248174B70();
  os_log_type_t v3 = sub_2481755D0();
  if (os_log_type_enabled(oslog, v3))
  {
    unsigned int v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v7 = v5;
    *(_DWORD *)unsigned int v4 = 136315138;
    sub_247FB6D24(0xD00000000000001ALL, 0x80000002481910C0, &v7);
    sub_248175730();
    _os_log_impl(&dword_247F93000, oslog, v3, a1, v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v5, -1, -1);
    MEMORY[0x24C574E00](v4, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_2480307F4()
{
  unint64_t v1 = *(void **)(v0 + 24);
  if (v1) {
    objc_msgSend(v1, sel_invalidate);
  }

  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t type metadata accessor for AISDaemonConnection()
{
  return self;
}

uint64_t sub_24803086C()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_24803088C, 0, 0);
}

uint64_t sub_24803088C()
{
  v0[2] = 0;
  uint64_t v1 = (void *)sub_248030C9C();
  v0[4] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = v0 + 2;
  *(void *)(v2 + 24) = v1;
  id v3 = v1;
  unsigned int v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  void *v4 = v0;
  uint64_t v5 = MEMORY[0x263F8EE60];
  v4[1] = sub_24803099C;
  return MEMORY[0x270FA2360](v4, 0, 0, 0xD000000000000013, 0x80000002481910A0, sub_248030F00, v2, v5 + 8);
}

uint64_t sub_24803099C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_248030B20;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_248030AB8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_248030AB8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_248030B20()
{
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248030B94(int a1, void *a2, id a3)
{
  if (a3)
  {
    id v4 = objc_msgSend(a3, sel_remoteObjectProxy);
    sub_248175760();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7BE8);
    int v5 = swift_dynamicCast();
    uint64_t v6 = v8;
    if (!v5) {
      uint64_t v6 = 0;
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a2 = v6;
  swift_unknownObjectRelease();
  if (*a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5BA0);
    return sub_248175360();
  }
  else
  {
    sub_248030F08();
    swift_allocError();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5BA0);
    return sub_248175350();
  }
}

uint64_t sub_248030C9C()
{
  uint64_t result = *(void *)(v0 + 24);
  if (!result)
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void *)(v0 + 16);
    if (v3)
    {
      id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08D68]), sel_initWithListenerEndpoint_, v3);
    }
    else
    {
      id v5 = objc_allocWithZone(MEMORY[0x263F08D68]);
      uint64_t v6 = (void *)sub_248175130();
      id v4 = objc_msgSend(v5, sel_initWithMachServiceName_options_, v6, 4096);
    }
    id v7 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26FC59370);
    sub_2480D5240();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24817B010;
    *(void *)(inited + 32) = type metadata accessor for SignOutContext();
    sub_2480D4F98(inited);
    swift_setDeallocating();
    objc_msgSend(v4, sel_setRemoteObjectInterface_, v7);

    unsigned int v16 = sub_248030638;
    uint64_t v17 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v13 = 1107296256;
    uint64_t v14 = sub_2480360BC;
    unsigned int v15 = &block_descriptor_7;
    uint64_t v9 = _Block_copy(&aBlock);
    objc_msgSend(v4, sel_setInterruptionHandler_, v9);
    _Block_release(v9);
    unsigned int v16 = sub_248030644;
    uint64_t v17 = 0;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v13 = 1107296256;
    uint64_t v14 = sub_2480360BC;
    unsigned int v15 = &block_descriptor_14;
    uint64_t v10 = _Block_copy(&aBlock);
    objc_msgSend(v4, sel_setInvalidationHandler_, v10);
    _Block_release(v10);
    objc_msgSend(v4, sel_resume);
    uint64_t v11 = *(void **)(v2 + 24);
    *(void *)(v2 + 24) = v4;

    return *(void *)(v2 + 24);
  }
  return result;
}

uint64_t sub_248030F00(int a1)
{
  return sub_248030B94(a1, *(void **)(v1 + 16), *(id *)(v1 + 24));
}

unint64_t sub_248030F08()
{
  unint64_t result = qword_2692D7BE0;
  if (!qword_2692D7BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7BE0);
  }
  return result;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unsigned char *storeEnumTagSinglePayload for AISDaemonConnection.AISDaemonConnectionError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x248031010);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AISDaemonConnection.AISDaemonConnectionError()
{
  return &type metadata for AISDaemonConnection.AISDaemonConnectionError;
}

unint64_t sub_24803104C()
{
  unint64_t result = qword_2692D7BF0;
  if (!qword_2692D7BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7BF0);
  }
  return result;
}

id SimpleSetupModelExchange.queue.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t SimpleSetupModelExchange.init(queue:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t SimpleSetupModelExchange.receiveModelUpdate(_:with:)()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_248031104()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t sub_24803112C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of SetupModelExchange.queue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SetupModelExchange.receiveModelUpdate(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t initializeBufferWithCopyOfBuffer for SimpleSetupModelExchange(uint64_t a1, long long *a2)
{
  uint64_t v3 = *((void *)a2 + 2);
  long long v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(void *)(a1 + 16) = v3;
  id v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for SimpleSetupModelExchange(id *a1)
{
  return swift_release();
}

uint64_t assignWithCopy for SimpleSetupModelExchange(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SimpleSetupModelExchange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleSetupModelExchange(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleSetupModelExchange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleSetupModelExchange()
{
  return &type metadata for SimpleSetupModelExchange;
}

id sub_248031350()
{
  return objc_msgSend(*v0, sel_disablePSCreateAndForgetLink);
}

uint64_t dispatch thunk of AISAKURLBagProtocol.disablePSCreateAndForgetLink.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of BluetoothBase.activate()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_247FCB950;
  return v7(a1, a2);
}

uint64_t dispatch thunk of BluetoothBase.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_24803148C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t result = sub_248175ED0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_248031550(char *__dst, char *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v5 + 64) <= 8uLL) {
    uint64_t v6 = 8;
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if ((unint64_t)(v6 + 1) > 0x51) {
    uint64_t v7 = v6 + 1;
  }
  else {
    uint64_t v7 = 81;
  }
  if (v7 <= 3)
  {
    unsigned int v11 = ((1 << (8 * v7)) | 6u) >> (8 * v7);
    int v9 = *(_DWORD *)(v5 + 80);
    if (v11 > 0xFFFB)
    {
      if ((unint64_t)(v7 + 4) > 0x18 || (v9 & 0x1000F8) != 0) {
        goto LABEL_30;
      }
      unsigned int v13 = *(_DWORD *)&__src[v7];
      unsigned int v14 = v13 - 4;
      if (v13 < 4) {
        goto LABEL_43;
      }
      goto LABEL_33;
    }
    int v10 = v9 & 0x1000F8;
    if (v11 > 0xFB)
    {
      if ((unint64_t)(v7 + 2) > 0x18 || v10 != 0) {
        goto LABEL_30;
      }
      unsigned int v13 = *(unsigned __int16 *)&__src[v7];
      unsigned int v14 = v13 - 4;
      if (v13 < 4) {
        goto LABEL_43;
      }
      goto LABEL_33;
    }
    unint64_t v8 = v7 + 1;
  }
  else
  {
    unint64_t v8 = v7 + 1;
    int v9 = *(_DWORD *)(v5 + 80);
    int v10 = v9 & 0x1000F8;
  }
  if (v8 > 0x18 || v10 != 0)
  {
LABEL_30:
    uint64_t v17 = *(char **)__src;
    *(void *)uint64_t v4 = *(void *)__src;
    uint64_t v4 = &v17[((v9 & 0xF8 | 7u) + 16) & ~(unint64_t)(v9 & 0xF8 | 7u)];
    swift_retain();
    return v4;
  }
  unsigned int v13 = __src[v7];
  unsigned int v14 = v13 - 4;
  if (v13 < 4) {
    goto LABEL_43;
  }
LABEL_33:
  if (v7 <= 3) {
    uint64_t v19 = v7;
  }
  else {
    uint64_t v19 = 4;
  }
  switch(v19)
  {
    case 1:
      int v20 = *__src;
      goto LABEL_41;
    case 2:
      int v20 = *(unsigned __int16 *)__src;
      goto LABEL_41;
    case 3:
      int v20 = *(unsigned __int16 *)__src | (__src[2] << 16);
      goto LABEL_41;
    case 4:
      int v20 = *(_DWORD *)__src;
LABEL_41:
      int v21 = (v20 | (v14 << (8 * v7))) + 4;
      unsigned int v13 = v20 + 4;
      if (v7 < 4) {
        unsigned int v13 = v21;
      }
      break;
    default:
      break;
  }
LABEL_43:
  switch(v13)
  {
    case 0u:
      unsigned int v22 = __src[8];
      if (v22 >= 2) {
        unsigned int v22 = *(_DWORD *)__src + 2;
      }
      if (v22 == 1)
      {
        uint64_t v23 = *(void *)__src;
        id v24 = *(id *)__src;
        *(void *)uint64_t v4 = v23;
        char v25 = 1;
      }
      else
      {
        char v25 = 0;
      }
      v4[8] = v25;
      if (v7 > 3) {
        goto LABEL_73;
      }
      unsigned int v42 = ((1 << (8 * v7)) | 6u) >> (8 * v7);
      if (v42 > 0xFFFB)
      {
        *(_DWORD *)&v4[v7] = 0;
      }
      else
      {
        if (v42 > 0xFB)
        {
          *(_WORD *)&v4[v7] = 0;
          return v4;
        }
LABEL_73:
        v4[v7] = 0;
      }
      return v4;
    case 1u:
      id v32 = *(id *)__src;
      uint64_t v33 = *((void *)__src + 1);
      uint64_t v34 = *((void *)__src + 2);
      uint64_t v35 = *((void *)__src + 3);
      uint64_t v36 = *((void *)__src + 4);
      char v37 = __src[40];
      sub_248031B18(*(void *)__src, v33, v34, v35, v36, v37);
      *(void *)uint64_t v4 = v32;
      *((void *)v4 + 1) = v33;
      *((void *)v4 + 2) = v34;
      *((void *)v4 + 3) = v35;
      *((void *)v4 + 4) = v36;
      v4[40] = v37;
      if (v7 > 3) {
        goto LABEL_63;
      }
      unsigned int v38 = ((1 << (8 * v7)) | 6u) >> (8 * v7);
      if (v38 > 0xFFFB)
      {
        *(_DWORD *)&v4[v7] = 1;
      }
      else
      {
        if (v38 > 0xFB)
        {
          *(_WORD *)&v4[v7] = 1;
          return v4;
        }
LABEL_63:
        v4[v7] = 1;
      }
      return v4;
    case 2u:
      unsigned int v26 = __src[v6];
      unsigned int v27 = v26 - 2;
      if (v26 < 2) {
        goto LABEL_92;
      }
      if (v6 <= 3) {
        uint64_t v28 = v6;
      }
      else {
        uint64_t v28 = 4;
      }
      switch(v28)
      {
        case 1:
          int v29 = *__src;
          break;
        case 2:
          int v29 = *(unsigned __int16 *)__src;
          break;
        case 3:
          int v29 = *(unsigned __int16 *)__src | (__src[2] << 16);
          break;
        case 4:
          int v29 = *(_DWORD *)__src;
          break;
        default:
          goto LABEL_92;
      }
      if (v6 < 4)
      {
        if ((v29 | (v27 << (8 * v6))) == 0xFFFFFFFF)
        {
LABEL_93:
          id v51 = *(id *)__src;
          id v52 = *(id *)__src;
          *(void *)uint64_t v4 = v51;
          char v53 = 1;
          goto LABEL_96;
        }
      }
      else
      {
        unsigned int v26 = v29 + 2;
LABEL_92:
        if (v26 == 1) {
          goto LABEL_93;
        }
      }
      (*(void (**)(char *, char *))(v5 + 16))(__dst, __src);
      char v53 = 0;
LABEL_96:
      v4[v6] = v53;
      if (v7 > 3) {
        goto LABEL_97;
      }
      unsigned int v54 = ((1 << (8 * v7)) | 6u) >> (8 * v7);
      if (v54 > 0xFFFB)
      {
        *(_DWORD *)&v4[v7] = 2;
        return v4;
      }
      if (v54 <= 0xFB) {
LABEL_97:
      }
        v4[v7] = 2;
      else {
        *(_WORD *)&v4[v7] = 2;
      }
      return v4;
    case 3u:
      unsigned int v39 = __src[80];
      if (v39 >= 2) {
        unsigned int v39 = *(_DWORD *)__src + 2;
      }
      id v40 = *(id *)__src;
      if (v39 == 1)
      {
        id v41 = v40;
        *(void *)uint64_t v4 = v40;
        v4[80] = 1;
        if (v7 > 3)
        {
LABEL_82:
          v4[v7] = 3;
          return v4;
        }
      }
      else
      {
        uint64_t v43 = *((void *)__src + 1);
        uint64_t v44 = *((void *)__src + 2);
        *(void *)__dst = v40;
        *((void *)__dst + 1) = v43;
        uint64_t v45 = *((void *)__src + 3);
        uint64_t v46 = *((void *)__src + 4);
        *((void *)__dst + 2) = v44;
        *((void *)__dst + 3) = v45;
        *((void *)__dst + 4) = v46;
        uint64_t v47 = *((void *)__src + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v47)
        {
          *((void *)v4 + 5) = *((void *)__src + 5);
          *((void *)v4 + 6) = v47;
          uint64_t v48 = *((void *)__src + 8);
          *((void *)v4 + 7) = *((void *)__src + 7);
          *((void *)v4 + 8) = v48;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v49 = *(_OWORD *)(__src + 56);
          *(_OWORD *)(v4 + 40) = *(_OWORD *)(__src + 40);
          *(_OWORD *)(v4 + 56) = v49;
        }
        *((void *)v4 + 9) = *((void *)__src + 9);
        v4[80] = 0;
        swift_bridgeObjectRetain();
        if (v7 > 3) {
          goto LABEL_82;
        }
      }
      unsigned int v50 = ((1 << (8 * v7)) | 6u) >> (8 * v7);
      if (v50 > 0xFFFB)
      {
        *(_DWORD *)&v4[v7] = 3;
        return v4;
      }
      if (v50 > 0xFB)
      {
        *(_WORD *)&v4[v7] = 3;
        return v4;
      }
      goto LABEL_82;
    default:
      if (v7 > 3) {
        goto LABEL_58;
      }
      unsigned int v30 = ((1 << (8 * v7)) | 6u) >> (8 * v7);
      uint64_t v31 = 2;
      if (v30 > 0xFFFB) {
        uint64_t v31 = 4;
      }
      if (v30 <= 0xFB) {
LABEL_58:
      }
        uint64_t v31 = 1;
      memcpy(__dst, __src, v31 + v7);
      return v4;
  }
}

uint64_t sub_248031B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

void sub_248031B2C(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  uint64_t v4 = 81;
  if (v3 + 1 > 0x51) {
    uint64_t v4 = v3 + 1;
  }
  if (v4 > 3) {
    goto LABEL_8;
  }
  unsigned int v5 = ((1 << (8 * v4)) | 6u) >> (8 * v4);
  if (v5 > 0xFFFB)
  {
    unsigned int v6 = *(_DWORD *)&a1[v4];
    unsigned int v7 = v6 - 4;
    if (v6 < 4) {
      goto LABEL_23;
    }
    goto LABEL_13;
  }
  if (v5 > 0xFB)
  {
    unsigned int v6 = *(unsigned __int16 *)&a1[v4];
    unsigned int v7 = v6 - 4;
    if (v6 < 4) {
      goto LABEL_23;
    }
  }
  else
  {
LABEL_8:
    unsigned int v6 = a1[v4];
    unsigned int v7 = v6 - 4;
    if (v6 < 4) {
      goto LABEL_23;
    }
  }
LABEL_13:
  if (v4 <= 3) {
    uint64_t v8 = v4;
  }
  else {
    uint64_t v8 = 4;
  }
  switch(v8)
  {
    case 1:
      int v9 = *a1;
      goto LABEL_21;
    case 2:
      int v9 = *(unsigned __int16 *)a1;
      goto LABEL_21;
    case 3:
      int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      goto LABEL_21;
    case 4:
      int v9 = *(_DWORD *)a1;
LABEL_21:
      int v10 = (v9 | (v7 << (8 * v4))) + 4;
      unsigned int v6 = v9 + 4;
      if (v4 < 4) {
        unsigned int v6 = v10;
      }
      break;
    default:
      break;
  }
LABEL_23:
  switch(v6)
  {
    case 0u:
      unsigned int v11 = a1[8];
      if (v11 >= 2) {
        unsigned int v11 = *(_DWORD *)a1 + 2;
      }
      if (v11 == 1) {
        goto LABEL_51;
      }
      break;
    case 1u:
      uint64_t v16 = *(void *)a1;
      uint64_t v17 = *((void *)a1 + 1);
      uint64_t v18 = *((void *)a1 + 2);
      uint64_t v19 = *((void *)a1 + 3);
      uint64_t v20 = *((void *)a1 + 4);
      char v21 = a1[40];
      sub_248031E60(v16, v17, v18, v19, v20, v21);
      break;
    case 2u:
      unsigned int v12 = a1[v3];
      unsigned int v13 = v12 - 2;
      if (v12 >= 2)
      {
        if (v3 <= 3) {
          uint64_t v14 = v3;
        }
        else {
          uint64_t v14 = 4;
        }
        switch(v14)
        {
          case 1:
            int v15 = *a1;
            goto LABEL_48;
          case 2:
            int v15 = *(unsigned __int16 *)a1;
            goto LABEL_48;
          case 3:
            int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_48;
          case 4:
            int v15 = *(_DWORD *)a1;
LABEL_48:
            int v24 = (v15 | (v13 << (8 * v3))) + 2;
            unsigned int v12 = v15 + 2;
            if (v3 < 4) {
              unsigned int v12 = v24;
            }
            break;
          default:
            break;
        }
      }
      if (v12 == 1)
      {
LABEL_51:
        uint64_t v23 = *(void **)a1;
        goto LABEL_52;
      }
      char v25 = *(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
      v25();
      break;
    case 3u:
      unsigned int v22 = a1[80];
      if (v22 >= 2) {
        unsigned int v22 = *(_DWORD *)a1 + 2;
      }
      uint64_t v23 = *(void **)a1;
      if (v22 == 1)
      {
LABEL_52:
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)a1 + 6))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      break;
    default:
      return;
  }
}

uint64_t sub_248031E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

char *sub_248031E74(char *__dst, char *__src, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if ((unint64_t)(v5 + 1) > 0x51) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 81;
  }
  if (v6 > 3) {
    goto LABEL_10;
  }
  unsigned int v7 = ((1 << (8 * v6)) | 6u) >> (8 * v6);
  if (v7 > 0xFFFB)
  {
    unsigned int v8 = *(_DWORD *)&__src[v6];
    unsigned int v9 = v8 - 4;
    if (v8 < 4) {
      goto LABEL_25;
    }
    goto LABEL_15;
  }
  if (v7 <= 0xFB)
  {
LABEL_10:
    unsigned int v8 = __src[v6];
    unsigned int v9 = v8 - 4;
    if (v8 < 4) {
      goto LABEL_25;
    }
LABEL_15:
    if (v6 <= 3) {
      uint64_t v10 = v6;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *__src;
        goto LABEL_23;
      case 2:
        int v11 = *(unsigned __int16 *)__src;
        goto LABEL_23;
      case 3:
        int v11 = *(unsigned __int16 *)__src | (__src[2] << 16);
        goto LABEL_23;
      case 4:
        int v11 = *(_DWORD *)__src;
LABEL_23:
        int v12 = (v11 | (v9 << (8 * v6))) + 4;
        unsigned int v8 = v11 + 4;
        if (v6 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        goto LABEL_25;
    }
    goto LABEL_25;
  }
  unsigned int v8 = *(unsigned __int16 *)&__src[v6];
  unsigned int v9 = v8 - 4;
  if (v8 >= 4) {
    goto LABEL_15;
  }
LABEL_25:
  switch(v8)
  {
    case 0u:
      unsigned int v13 = __src[8];
      if (v13 >= 2) {
        unsigned int v13 = *(_DWORD *)__src + 2;
      }
      if (v13 == 1)
      {
        uint64_t v14 = *(void *)__src;
        id v15 = *(id *)__src;
        *(void *)__dst = v14;
        char v16 = 1;
      }
      else
      {
        char v16 = 0;
      }
      __dst[8] = v16;
      if (v6 > 3) {
        goto LABEL_55;
      }
      unsigned int v34 = ((1 << (8 * v6)) | 6u) >> (8 * v6);
      if (v34 > 0xFFFB)
      {
        *(_DWORD *)&__dst[v6] = 0;
      }
      else
      {
        if (v34 > 0xFB)
        {
          *(_WORD *)&__dst[v6] = 0;
          return __dst;
        }
LABEL_55:
        __dst[v6] = 0;
      }
      return __dst;
    case 1u:
      id v23 = *(id *)__src;
      uint64_t v24 = *((void *)__src + 1);
      uint64_t v25 = *((void *)__src + 2);
      uint64_t v26 = *((void *)__src + 3);
      uint64_t v27 = *((void *)__src + 4);
      char v28 = __src[40];
      sub_248031B18(*(void *)__src, v24, v25, v26, v27, v28);
      *(void *)__dst = v23;
      *((void *)__dst + 1) = v24;
      *((void *)__dst + 2) = v25;
      *((void *)__dst + 3) = v26;
      *((void *)__dst + 4) = v27;
      __dst[40] = v28;
      if (v6 > 3) {
        goto LABEL_45;
      }
      int v29 = 1;
      unsigned int v30 = ((1 << (8 * v6)) | 6u) >> (8 * v6);
      if (v30 > 0xFFFB) {
        goto LABEL_82;
      }
      if (v30 > 0xFB) {
        *(_WORD *)&__dst[v6] = 1;
      }
      else {
LABEL_45:
      }
        __dst[v6] = 1;
      return __dst;
    case 2u:
      unsigned int v17 = __src[v5];
      unsigned int v18 = v17 - 2;
      if (v17 >= 2)
      {
        if (v5 <= 3) {
          uint64_t v19 = v5;
        }
        else {
          uint64_t v19 = 4;
        }
        switch(v19)
        {
          case 1:
            int v20 = *__src;
            goto LABEL_71;
          case 2:
            int v20 = *(unsigned __int16 *)__src;
            goto LABEL_71;
          case 3:
            int v20 = *(unsigned __int16 *)__src | (__src[2] << 16);
            goto LABEL_71;
          case 4:
            int v20 = *(_DWORD *)__src;
LABEL_71:
            int v43 = (v20 | (v18 << (8 * v5))) + 2;
            unsigned int v17 = v20 + 2;
            if (v5 < 4) {
              unsigned int v17 = v43;
            }
            break;
          default:
            break;
        }
      }
      if (v17 == 1)
      {
        id v44 = *(id *)__src;
        id v45 = *(id *)__src;
        *(void *)__dst = v44;
        char v46 = 1;
      }
      else
      {
        (*(void (**)(char *, char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(__dst, __src);
        char v46 = 0;
      }
      __dst[v5] = v46;
      if (v6 > 3) {
        goto LABEL_77;
      }
      unsigned int v47 = ((1 << (8 * v6)) | 6u) >> (8 * v6);
      if (v47 > 0xFFFB)
      {
        int v29 = 2;
        goto LABEL_82;
      }
      if (v47 <= 0xFB) {
LABEL_77:
      }
        __dst[v6] = 2;
      else {
        *(_WORD *)&__dst[v6] = 2;
      }
      return __dst;
    case 3u:
      unsigned int v31 = __src[80];
      if (v31 >= 2) {
        unsigned int v31 = *(_DWORD *)__src + 2;
      }
      id v32 = *(id *)__src;
      if (v31 == 1)
      {
        id v33 = v32;
        *(void *)__dst = v32;
        __dst[80] = 1;
        if (v6 > 3)
        {
LABEL_63:
          __dst[v6] = 3;
          return __dst;
        }
      }
      else
      {
        uint64_t v35 = *((void *)__src + 1);
        uint64_t v36 = *((void *)__src + 2);
        *(void *)__dst = v32;
        *((void *)__dst + 1) = v35;
        uint64_t v37 = *((void *)__src + 3);
        uint64_t v38 = *((void *)__src + 4);
        *((void *)__dst + 2) = v36;
        *((void *)__dst + 3) = v37;
        *((void *)__dst + 4) = v38;
        uint64_t v39 = *((void *)__src + 6);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39)
        {
          *((void *)__dst + 5) = *((void *)__src + 5);
          *((void *)__dst + 6) = v39;
          uint64_t v40 = *((void *)__src + 8);
          *((void *)__dst + 7) = *((void *)__src + 7);
          *((void *)__dst + 8) = v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v41 = *(_OWORD *)(__src + 56);
          *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
          *(_OWORD *)(__dst + 56) = v41;
        }
        *((void *)__dst + 9) = *((void *)__src + 9);
        __dst[80] = 0;
        swift_bridgeObjectRetain();
        if (v6 > 3) {
          goto LABEL_63;
        }
      }
      unsigned int v42 = ((1 << (8 * v6)) | 6u) >> (8 * v6);
      if (v42 <= 0xFFFB)
      {
        if (v42 > 0xFB)
        {
          *(_WORD *)&__dst[v6] = 3;
          return __dst;
        }
        goto LABEL_63;
      }
      int v29 = 3;
LABEL_82:
      *(_DWORD *)&__dst[v6] = v29;
      return __dst;
    default:
      if (v6 > 3) {
        goto LABEL_40;
      }
      unsigned int v21 = ((1 << (8 * v6)) | 6u) >> (8 * v6);
      uint64_t v22 = 2;
      if (v21 > 0xFFFB) {
        uint64_t v22 = 4;
      }
      if (v21 <= 0xFB) {
LABEL_40:
      }
        uint64_t v22 = 1;
      memcpy(__dst, __src, v22 + v6);
      return __dst;
  }
}

char *sub_2480323B0(char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst == (char *)__src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if ((unint64_t)(v7 + 1) > 0x51) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 81;
  }
  if (v8 > 3) {
    goto LABEL_11;
  }
  unsigned int v9 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
  if (v9 > 0xFFFB)
  {
    unsigned int v10 = *(_DWORD *)&__dst[v8];
    unsigned int v11 = v10 - 4;
    if (v10 < 4) {
      goto LABEL_26;
    }
    goto LABEL_16;
  }
  if (v9 <= 0xFB)
  {
LABEL_11:
    unsigned int v10 = __dst[v8];
    unsigned int v11 = v10 - 4;
    if (v10 < 4) {
      goto LABEL_26;
    }
LABEL_16:
    if (v8 <= 3) {
      uint64_t v12 = v8;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *__dst;
        goto LABEL_24;
      case 2:
        int v13 = *(unsigned __int16 *)__dst;
        goto LABEL_24;
      case 3:
        int v13 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_24;
      case 4:
        int v13 = *(_DWORD *)__dst;
LABEL_24:
        int v14 = (v13 | (v11 << (8 * v8))) + 4;
        unsigned int v10 = v13 + 4;
        if (v8 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        goto LABEL_26;
    }
    goto LABEL_26;
  }
  unsigned int v10 = *(unsigned __int16 *)&__dst[v8];
  unsigned int v11 = v10 - 4;
  if (v10 >= 4) {
    goto LABEL_16;
  }
LABEL_26:
  switch(v10)
  {
    case 0u:
      unsigned int v15 = __dst[8];
      if (v15 >= 2) {
        unsigned int v15 = *(_DWORD *)__dst + 2;
      }
      if (v15 == 1) {
        goto LABEL_53;
      }
      goto LABEL_30;
    case 1u:
      sub_248031E60(*(void *)__dst, *((void *)__dst + 1), *((void *)__dst + 2), *((void *)__dst + 3), *((void *)__dst + 4), __dst[40]);
      if (v8 > 3) {
        goto LABEL_60;
      }
      goto LABEL_58;
    case 2u:
      unsigned int v16 = __dst[v7];
      unsigned int v17 = v16 - 2;
      if (v16 < 2) {
        goto LABEL_52;
      }
      if (v7 <= 3) {
        uint64_t v18 = v7;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *__dst;
          break;
        case 2:
          int v19 = *(unsigned __int16 *)__dst;
          break;
        case 3:
          int v19 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          break;
        case 4:
          int v19 = *(_DWORD *)__dst;
          break;
        default:
          goto LABEL_52;
      }
      if (v7 < 4)
      {
        if ((v19 | (v17 << (8 * v7))) == 0xFFFFFFFF) {
          goto LABEL_53;
        }
LABEL_57:
        (*(void (**)(char *, uint64_t))(v6 + 8))(__dst, v5);
        if (v8 > 3) {
          goto LABEL_60;
        }
        goto LABEL_58;
      }
      unsigned int v16 = v19 + 2;
LABEL_52:
      if (v16 != 1) {
        goto LABEL_57;
      }
LABEL_53:
      unsigned int v21 = *(void **)__dst;
LABEL_54:

      if (v8 > 3)
      {
LABEL_60:
        unsigned int v23 = __src[v8];
        unsigned int v24 = v23 - 4;
        if (v23 < 4) {
          goto LABEL_75;
        }
        goto LABEL_65;
      }
LABEL_58:
      unsigned int v22 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
      if (v22 > 0xFFFB)
      {
        unsigned int v23 = *(_DWORD *)&__src[v8];
        unsigned int v24 = v23 - 4;
        if (v23 < 4) {
          goto LABEL_75;
        }
      }
      else
      {
        if (v22 <= 0xFB) {
          goto LABEL_60;
        }
        unsigned int v23 = *(unsigned __int16 *)&__src[v8];
        unsigned int v24 = v23 - 4;
        if (v23 < 4) {
          goto LABEL_75;
        }
      }
LABEL_65:
      if (v8 <= 3) {
        uint64_t v25 = v8;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *__src;
          goto LABEL_73;
        case 2:
          int v26 = *(unsigned __int16 *)__src;
          goto LABEL_73;
        case 3:
          int v26 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_73;
        case 4:
          int v26 = *(_DWORD *)__src;
LABEL_73:
          int v27 = (v26 | (v24 << (8 * v8))) + 4;
          unsigned int v23 = v26 + 4;
          if (v8 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
LABEL_75:
      switch(v23)
      {
        case 0u:
          unsigned int v28 = __src[8];
          if (v28 >= 2) {
            unsigned int v28 = *(_DWORD *)__src + 2;
          }
          if (v28 == 1)
          {
            int v29 = *(void **)__src;
            id v30 = v29;
            *(void *)__dst = v29;
            char v31 = 1;
          }
          else
          {
            char v31 = 0;
          }
          __dst[8] = v31;
          if (v8 > 3) {
            goto LABEL_105;
          }
          unsigned int v49 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          if (v49 > 0xFFFB)
          {
            *(_DWORD *)&__dst[v8] = 0;
          }
          else
          {
            if (v49 > 0xFB)
            {
              *(_WORD *)&__dst[v8] = 0;
              return __dst;
            }
LABEL_105:
            __dst[v8] = 0;
          }
          return __dst;
        case 1u:
          uint64_t v38 = *(void *)__src;
          uint64_t v39 = *((void *)__src + 1);
          uint64_t v40 = *((void *)__src + 2);
          uint64_t v41 = *((void *)__src + 3);
          uint64_t v42 = *((void *)__src + 4);
          char v43 = __src[40];
          sub_248031B18(v38, v39, v40, v41, v42, v43);
          *(void *)__dst = v38;
          *((void *)__dst + 1) = v39;
          *((void *)__dst + 2) = v40;
          *((void *)__dst + 3) = v41;
          *((void *)__dst + 4) = v42;
          __dst[40] = v43;
          if (v8 > 3) {
            goto LABEL_95;
          }
          int v44 = 1;
          unsigned int v45 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          if (v45 > 0xFFFB) {
            goto LABEL_133;
          }
          if (v45 > 0xFB) {
            *(_WORD *)&__dst[v8] = 1;
          }
          else {
LABEL_95:
          }
            __dst[v8] = 1;
          return __dst;
        case 2u:
          unsigned int v32 = __src[v7];
          unsigned int v33 = v32 - 2;
          if (v32 < 2) {
            goto LABEL_123;
          }
          if (v7 <= 3) {
            uint64_t v34 = v7;
          }
          else {
            uint64_t v34 = 4;
          }
          switch(v34)
          {
            case 1:
              int v35 = *__src;
              break;
            case 2:
              int v35 = *(unsigned __int16 *)__src;
              break;
            case 3:
              int v35 = *(unsigned __int16 *)__src | (__src[2] << 16);
              break;
            case 4:
              int v35 = *(_DWORD *)__src;
              break;
            default:
              goto LABEL_123;
          }
          if (v7 < 4)
          {
            if ((v35 | (v33 << (8 * v7))) == 0xFFFFFFFF)
            {
LABEL_124:
              char v53 = *(void **)__src;
              id v54 = v53;
              *(void *)__dst = v53;
              char v55 = 1;
              goto LABEL_127;
            }
          }
          else
          {
            unsigned int v32 = v35 + 2;
LABEL_123:
            if (v32 == 1) {
              goto LABEL_124;
            }
          }
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
          char v55 = 0;
LABEL_127:
          __dst[v7] = v55;
          if (v8 > 3) {
            goto LABEL_128;
          }
          unsigned int v56 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          if (v56 > 0xFFFB)
          {
            int v44 = 2;
            goto LABEL_133;
          }
          if (v56 <= 0xFB) {
LABEL_128:
          }
            __dst[v8] = 2;
          else {
            *(_WORD *)&__dst[v8] = 2;
          }
          return __dst;
        case 3u:
          unsigned int v46 = __src[80];
          if (v46 >= 2) {
            unsigned int v46 = *(_DWORD *)__src + 2;
          }
          unsigned int v47 = *(void **)__src;
          if (v46 == 1)
          {
            id v48 = v47;
            *(void *)__dst = v47;
            __dst[80] = 1;
            if (v8 > 3)
            {
LABEL_113:
              __dst[v8] = 3;
              return __dst;
            }
          }
          else
          {
            *(void *)__dst = v47;
            *((void *)__dst + 1) = *((void *)__src + 1);
            *((void *)__dst + 2) = *((void *)__src + 2);
            *((void *)__dst + 3) = *((void *)__src + 3);
            *((void *)__dst + 4) = *((void *)__src + 4);
            uint64_t v50 = *((void *)__src + 6);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v50)
            {
              *((void *)__dst + 5) = *((void *)__src + 5);
              *((void *)__dst + 6) = *((void *)__src + 6);
              *((void *)__dst + 7) = *((void *)__src + 7);
              *((void *)__dst + 8) = *((void *)__src + 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v51 = *(_OWORD *)(__src + 56);
              *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
              *(_OWORD *)(__dst + 56) = v51;
            }
            *((void *)__dst + 9) = *((void *)__src + 9);
            __dst[80] = 0;
            swift_bridgeObjectRetain();
            if (v8 > 3) {
              goto LABEL_113;
            }
          }
          unsigned int v52 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          if (v52 <= 0xFFFB)
          {
            if (v52 > 0xFB)
            {
              *(_WORD *)&__dst[v8] = 3;
              return __dst;
            }
            goto LABEL_113;
          }
          int v44 = 3;
LABEL_133:
          *(_DWORD *)&__dst[v8] = v44;
          break;
        default:
          if (v8 > 3) {
            goto LABEL_90;
          }
          unsigned int v36 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          uint64_t v37 = 2;
          if (v36 > 0xFFFB) {
            uint64_t v37 = 4;
          }
          if (v36 <= 0xFB) {
LABEL_90:
          }
            uint64_t v37 = 1;
          memcpy(__dst, __src, v37 + v8);
          return __dst;
      }
      return __dst;
    case 3u:
      unsigned int v20 = __dst[80];
      if (v20 >= 2) {
        unsigned int v20 = *(_DWORD *)__dst + 2;
      }
      unsigned int v21 = *(void **)__dst;
      if (v20 == 1) {
        goto LABEL_54;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)__dst + 6))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (v8 > 3) {
        goto LABEL_60;
      }
      goto LABEL_58;
    default:
LABEL_30:
      if (v8 <= 3) {
        goto LABEL_58;
      }
      goto LABEL_60;
  }
}

char *sub_248032BAC(char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if ((unint64_t)(v4 + 1) > 0x51) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 81;
  }
  if (v5 > 3) {
    goto LABEL_10;
  }
  unsigned int v6 = ((1 << (8 * v5)) | 6u) >> (8 * v5);
  if (v6 > 0xFFFB)
  {
    unsigned int v7 = *(_DWORD *)&a2[v5];
    unsigned int v8 = v7 - 4;
    if (v7 < 4) {
      goto LABEL_25;
    }
    goto LABEL_15;
  }
  if (v6 <= 0xFB)
  {
LABEL_10:
    unsigned int v7 = a2[v5];
    unsigned int v8 = v7 - 4;
    if (v7 < 4) {
      goto LABEL_25;
    }
LABEL_15:
    if (v5 <= 3) {
      uint64_t v9 = v5;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_23;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_23;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_23;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_23:
        int v11 = (v10 | (v8 << (8 * v5))) + 4;
        unsigned int v7 = v10 + 4;
        if (v5 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        goto LABEL_25;
    }
    goto LABEL_25;
  }
  unsigned int v7 = *(unsigned __int16 *)&a2[v5];
  unsigned int v8 = v7 - 4;
  if (v7 >= 4) {
    goto LABEL_15;
  }
LABEL_25:
  switch(v7)
  {
    case 0u:
      unsigned int v12 = a2[8];
      if (v12 >= 2) {
        unsigned int v12 = *(_DWORD *)a2 + 2;
      }
      if (v12 == 1)
      {
        *(void *)__dst = *(void *)a2;
        char v13 = 1;
      }
      else
      {
        char v13 = 0;
      }
      __dst[8] = v13;
      if (v5 <= 3)
      {
        unsigned int v25 = ((1 << (8 * v5)) | 6u) >> (8 * v5);
        if (v25 > 0xFFFB)
        {
          *(_DWORD *)&__dst[v5] = 0;
          return __dst;
        }
        if (v25 > 0xFB)
        {
          *(_WORD *)&__dst[v5] = 0;
          return __dst;
        }
      }
      __dst[v5] = 0;
      return __dst;
    case 1u:
      long long v20 = *((_OWORD *)a2 + 1);
      *(_OWORD *)__dst = *(_OWORD *)a2;
      *((_OWORD *)__dst + 1) = v20;
      *(_OWORD *)(__dst + 25) = *(_OWORD *)(a2 + 25);
      if (v5 > 3) {
        goto LABEL_45;
      }
      int v21 = 1;
      unsigned int v22 = ((1 << (8 * v5)) | 6u) >> (8 * v5);
      if (v22 > 0xFFFB) {
        goto LABEL_79;
      }
      if (v22 > 0xFB) {
        *(_WORD *)&__dst[v5] = 1;
      }
      else {
LABEL_45:
      }
        __dst[v5] = 1;
      return __dst;
    case 2u:
      unsigned int v14 = a2[v4];
      unsigned int v15 = v14 - 2;
      if (v14 >= 2)
      {
        if (v4 <= 3) {
          uint64_t v16 = v4;
        }
        else {
          uint64_t v16 = 4;
        }
        switch(v16)
        {
          case 1:
            int v17 = *a2;
            goto LABEL_68;
          case 2:
            int v17 = *(unsigned __int16 *)a2;
            goto LABEL_68;
          case 3:
            int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_68;
          case 4:
            int v17 = *(_DWORD *)a2;
LABEL_68:
            int v29 = (v17 | (v15 << (8 * v4))) + 2;
            unsigned int v14 = v17 + 2;
            if (v4 < 4) {
              unsigned int v14 = v29;
            }
            break;
          default:
            break;
        }
      }
      if (v14 == 1)
      {
        *(void *)__dst = *(void *)a2;
        char v30 = 1;
      }
      else
      {
        (*(void (**)(char *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(__dst);
        char v30 = 0;
      }
      __dst[v4] = v30;
      if (v5 > 3) {
        goto LABEL_74;
      }
      unsigned int v31 = ((1 << (8 * v5)) | 6u) >> (8 * v5);
      if (v31 > 0xFFFB)
      {
        int v21 = 2;
        goto LABEL_79;
      }
      if (v31 <= 0xFB) {
LABEL_74:
      }
        __dst[v5] = 2;
      else {
        *(_WORD *)&__dst[v5] = 2;
      }
      return __dst;
    case 3u:
      unsigned int v23 = a2[80];
      if (v23 >= 2) {
        unsigned int v23 = *(_DWORD *)a2 + 2;
      }
      if (v23 == 1)
      {
        *(void *)__dst = *(void *)a2;
        char v24 = 1;
      }
      else
      {
        char v24 = 0;
        long long v26 = *((_OWORD *)a2 + 3);
        *((_OWORD *)__dst + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)__dst + 3) = v26;
        *((_OWORD *)__dst + 4) = *((_OWORD *)a2 + 4);
        long long v27 = *((_OWORD *)a2 + 1);
        *(_OWORD *)__dst = *(_OWORD *)a2;
        *((_OWORD *)__dst + 1) = v27;
      }
      __dst[80] = v24;
      if (v5 > 3) {
        goto LABEL_59;
      }
      unsigned int v28 = ((1 << (8 * v5)) | 6u) >> (8 * v5);
      if (v28 <= 0xFFFB)
      {
        if (v28 > 0xFB)
        {
          *(_WORD *)&__dst[v5] = 3;
          return __dst;
        }
LABEL_59:
        __dst[v5] = 3;
        return __dst;
      }
      int v21 = 3;
LABEL_79:
      *(_DWORD *)&__dst[v5] = v21;
      return __dst;
    default:
      if (v5 > 3) {
        goto LABEL_40;
      }
      unsigned int v18 = ((1 << (8 * v5)) | 6u) >> (8 * v5);
      uint64_t v19 = 2;
      if (v18 > 0xFFFB) {
        uint64_t v19 = 4;
      }
      if (v18 <= 0xFB) {
LABEL_40:
      }
        uint64_t v19 = 1;
      memcpy(__dst, a2, v19 + v5);
      return __dst;
  }
}

char *sub_24803301C(char *__dst, char *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(void *)(v6 + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(v6 + 64);
  }
  if ((unint64_t)(v7 + 1) > 0x51) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 81;
  }
  if (v8 > 3) {
    goto LABEL_11;
  }
  unsigned int v9 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
  if (v9 > 0xFFFB)
  {
    unsigned int v10 = *(_DWORD *)&__dst[v8];
    unsigned int v11 = v10 - 4;
    if (v10 < 4) {
      goto LABEL_26;
    }
    goto LABEL_16;
  }
  if (v9 <= 0xFB)
  {
LABEL_11:
    unsigned int v10 = __dst[v8];
    unsigned int v11 = v10 - 4;
    if (v10 < 4) {
      goto LABEL_26;
    }
LABEL_16:
    if (v8 <= 3) {
      uint64_t v12 = v8;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *__dst;
        goto LABEL_24;
      case 2:
        int v13 = *(unsigned __int16 *)__dst;
        goto LABEL_24;
      case 3:
        int v13 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_24;
      case 4:
        int v13 = *(_DWORD *)__dst;
LABEL_24:
        int v14 = (v13 | (v11 << (8 * v8))) + 4;
        unsigned int v10 = v13 + 4;
        if (v8 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        goto LABEL_26;
    }
    goto LABEL_26;
  }
  unsigned int v10 = *(unsigned __int16 *)&__dst[v8];
  unsigned int v11 = v10 - 4;
  if (v10 >= 4) {
    goto LABEL_16;
  }
LABEL_26:
  switch(v10)
  {
    case 0u:
      unsigned int v15 = __dst[8];
      if (v15 >= 2) {
        unsigned int v15 = *(_DWORD *)__dst + 2;
      }
      if (v15 == 1) {
        goto LABEL_53;
      }
      goto LABEL_30;
    case 1u:
      sub_248031E60(*(void *)__dst, *((void *)__dst + 1), *((void *)__dst + 2), *((void *)__dst + 3), *((void *)__dst + 4), __dst[40]);
      if (v8 > 3) {
        goto LABEL_60;
      }
      goto LABEL_58;
    case 2u:
      unsigned int v16 = __dst[v7];
      unsigned int v17 = v16 - 2;
      if (v16 < 2) {
        goto LABEL_52;
      }
      if (v7 <= 3) {
        uint64_t v18 = v7;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *__dst;
          break;
        case 2:
          int v19 = *(unsigned __int16 *)__dst;
          break;
        case 3:
          int v19 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          break;
        case 4:
          int v19 = *(_DWORD *)__dst;
          break;
        default:
          goto LABEL_52;
      }
      if (v7 < 4)
      {
        if ((v19 | (v17 << (8 * v7))) == 0xFFFFFFFF) {
          goto LABEL_53;
        }
LABEL_57:
        (*(void (**)(char *, uint64_t))(v6 + 8))(__dst, v5);
        if (v8 > 3) {
          goto LABEL_60;
        }
        goto LABEL_58;
      }
      unsigned int v16 = v19 + 2;
LABEL_52:
      if (v16 != 1) {
        goto LABEL_57;
      }
LABEL_53:
      int v21 = *(void **)__dst;
LABEL_54:

      if (v8 > 3)
      {
LABEL_60:
        unsigned int v23 = __src[v8];
        unsigned int v24 = v23 - 4;
        if (v23 < 4) {
          goto LABEL_75;
        }
        goto LABEL_65;
      }
LABEL_58:
      unsigned int v22 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
      if (v22 > 0xFFFB)
      {
        unsigned int v23 = *(_DWORD *)&__src[v8];
        unsigned int v24 = v23 - 4;
        if (v23 < 4) {
          goto LABEL_75;
        }
      }
      else
      {
        if (v22 <= 0xFB) {
          goto LABEL_60;
        }
        unsigned int v23 = *(unsigned __int16 *)&__src[v8];
        unsigned int v24 = v23 - 4;
        if (v23 < 4) {
          goto LABEL_75;
        }
      }
LABEL_65:
      if (v8 <= 3) {
        uint64_t v25 = v8;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *__src;
          goto LABEL_73;
        case 2:
          int v26 = *(unsigned __int16 *)__src;
          goto LABEL_73;
        case 3:
          int v26 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_73;
        case 4:
          int v26 = *(_DWORD *)__src;
LABEL_73:
          int v27 = (v26 | (v24 << (8 * v8))) + 4;
          unsigned int v23 = v26 + 4;
          if (v8 < 4) {
            unsigned int v23 = v27;
          }
          break;
        default:
          break;
      }
LABEL_75:
      switch(v23)
      {
        case 0u:
          unsigned int v28 = __src[8];
          if (v28 >= 2) {
            unsigned int v28 = *(_DWORD *)__src + 2;
          }
          if (v28 == 1)
          {
            *(void *)__dst = *(void *)__src;
            char v29 = 1;
          }
          else
          {
            char v29 = 0;
          }
          __dst[8] = v29;
          if (v8 <= 3)
          {
            unsigned int v41 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
            if (v41 > 0xFFFB)
            {
              *(_DWORD *)&__dst[v8] = 0;
              return __dst;
            }
            if (v41 > 0xFB)
            {
              *(_WORD *)&__dst[v8] = 0;
              return __dst;
            }
          }
          __dst[v8] = 0;
          return __dst;
        case 1u:
          long long v36 = *((_OWORD *)__src + 1);
          *(_OWORD *)__dst = *(_OWORD *)__src;
          *((_OWORD *)__dst + 1) = v36;
          *(_OWORD *)(__dst + 25) = *(_OWORD *)(__src + 25);
          if (v8 > 3) {
            goto LABEL_95;
          }
          int v37 = 1;
          unsigned int v38 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          if (v38 > 0xFFFB) {
            goto LABEL_130;
          }
          if (v38 > 0xFB) {
            *(_WORD *)&__dst[v8] = 1;
          }
          else {
LABEL_95:
          }
            __dst[v8] = 1;
          return __dst;
        case 2u:
          unsigned int v30 = __src[v7];
          unsigned int v31 = v30 - 2;
          if (v30 < 2) {
            goto LABEL_120;
          }
          if (v7 <= 3) {
            uint64_t v32 = v7;
          }
          else {
            uint64_t v32 = 4;
          }
          switch(v32)
          {
            case 1:
              int v33 = *__src;
              break;
            case 2:
              int v33 = *(unsigned __int16 *)__src;
              break;
            case 3:
              int v33 = *(unsigned __int16 *)__src | (__src[2] << 16);
              break;
            case 4:
              int v33 = *(_DWORD *)__src;
              break;
            default:
              goto LABEL_120;
          }
          if (v7 < 4)
          {
            if ((v33 | (v31 << (8 * v7))) == 0xFFFFFFFF)
            {
LABEL_121:
              *(void *)__dst = *(void *)__src;
              char v45 = 1;
              goto LABEL_124;
            }
          }
          else
          {
            unsigned int v30 = v33 + 2;
LABEL_120:
            if (v30 == 1) {
              goto LABEL_121;
            }
          }
          (*(void (**)(char *, char *, uint64_t))(v6 + 32))(__dst, __src, v5);
          char v45 = 0;
LABEL_124:
          __dst[v7] = v45;
          if (v8 > 3) {
            goto LABEL_125;
          }
          unsigned int v46 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          if (v46 > 0xFFFB)
          {
            int v37 = 2;
            goto LABEL_130;
          }
          if (v46 <= 0xFB) {
LABEL_125:
          }
            __dst[v8] = 2;
          else {
            *(_WORD *)&__dst[v8] = 2;
          }
          break;
        case 3u:
          unsigned int v39 = __src[80];
          if (v39 >= 2) {
            unsigned int v39 = *(_DWORD *)__src + 2;
          }
          if (v39 == 1)
          {
            *(void *)__dst = *(void *)__src;
            char v40 = 1;
          }
          else
          {
            char v40 = 0;
            long long v42 = *((_OWORD *)__src + 3);
            *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
            *((_OWORD *)__dst + 3) = v42;
            *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
            long long v43 = *((_OWORD *)__src + 1);
            *(_OWORD *)__dst = *(_OWORD *)__src;
            *((_OWORD *)__dst + 1) = v43;
          }
          __dst[80] = v40;
          if (v8 > 3) {
            goto LABEL_109;
          }
          unsigned int v44 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          if (v44 <= 0xFFFB)
          {
            if (v44 > 0xFB)
            {
              *(_WORD *)&__dst[v8] = 3;
              return __dst;
            }
LABEL_109:
            __dst[v8] = 3;
            return __dst;
          }
          int v37 = 3;
LABEL_130:
          *(_DWORD *)&__dst[v8] = v37;
          return __dst;
        default:
          if (v8 > 3) {
            goto LABEL_90;
          }
          unsigned int v34 = ((1 << (8 * v8)) | 6u) >> (8 * v8);
          uint64_t v35 = 2;
          if (v34 > 0xFFFB) {
            uint64_t v35 = 4;
          }
          if (v34 <= 0xFB) {
LABEL_90:
          }
            uint64_t v35 = 1;
          memcpy(__dst, __src, v35 + v8);
          return __dst;
      }
      return __dst;
    case 3u:
      unsigned int v20 = __dst[80];
      if (v20 >= 2) {
        unsigned int v20 = *(_DWORD *)__dst + 2;
      }
      int v21 = *(void **)__dst;
      if (v20 == 1) {
        goto LABEL_54;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)__dst + 6))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (v8 > 3) {
        goto LABEL_60;
      }
      goto LABEL_58;
    default:
LABEL_30:
      if (v8 <= 3) {
        goto LABEL_58;
      }
      goto LABEL_60;
  }
}

uint64_t sub_248033744(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 <= 8) {
    unint64_t v3 = 8;
  }
  if (v3 + 1 > 0x51) {
    uint64_t v4 = v3 + 1;
  }
  else {
    uint64_t v4 = 81;
  }
  if (v4 > 3)
  {
    int v5 = 5;
LABEL_10:
    char v7 = 8;
    goto LABEL_11;
  }
  unsigned int v6 = ((1 << (8 * v4)) | 6u) >> (8 * v4);
  if (v6 > 0xFFFB) {
    goto LABEL_14;
  }
  int v5 = v6 + 4;
  if (v6 <= 0xFB) {
    goto LABEL_10;
  }
  char v7 = 16;
LABEL_11:
  unsigned int v8 = (1 << v7) - v5;
  if ((v8 & 0x80000000) == 0)
  {
    if (v4 > 3) {
      goto LABEL_18;
    }
LABEL_15:
    unsigned int v9 = ((1 << (8 * v4)) | 6u) >> (8 * v4);
    uint64_t v10 = 2;
    if (v9 > 0xFFFB) {
      uint64_t v10 = 4;
    }
    if (v9 > 0xFB) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_14:
  unsigned int v8 = 0x7FFFFFFF;
  if (v4 <= 3) {
    goto LABEL_15;
  }
LABEL_18:
  uint64_t v10 = 1;
LABEL_19:
  if (!a2) {
    return 0;
  }
  if (a2 <= v8) {
    goto LABEL_38;
  }
  uint64_t v11 = v10 + v4;
  char v12 = 8 * v11;
  if (v11 <= 3)
  {
    unsigned int v14 = ((a2 - v8 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v14))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_38;
      }
      goto LABEL_30;
    }
    if (v14 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_38;
      }
      goto LABEL_30;
    }
    if (v14 < 2)
    {
LABEL_38:
      if (v8)
      {
        if (v4 <= 3)
        {
          unsigned int v22 = ((1 << (8 * v4)) | 6u) >> (8 * v4);
          if (v22 > 0xFFFB)
          {
            unsigned int v17 = *(_DWORD *)((char *)a1 + v4);
            unsigned int v18 = ~v17;
LABEL_48:
            unsigned int v25 = 0x7FFFFFFF;
LABEL_49:
            if (v25 > v18) {
              return -v17;
            }
            else {
              return 0;
            }
          }
          int v20 = v22 + 4;
          if (v22 > 0xFB)
          {
            int v24 = *(unsigned __int16 *)((char *)a1 + v4);
            unsigned int v17 = v24 | 0xFFFF0000;
            unsigned int v18 = v24 ^ 0xFFFF;
            char v19 = 16;
          }
          else
          {
            int v23 = *((unsigned __int8 *)a1 + v4);
            unsigned int v17 = v23 | 0xFFFFFF00;
            unsigned int v18 = v23 ^ 0xFF;
            char v19 = 8;
          }
        }
        else
        {
          int v16 = *((unsigned __int8 *)a1 + v4);
          unsigned int v17 = v16 | 0xFFFFFF00;
          unsigned int v18 = v16 ^ 0xFF;
          char v19 = 8;
          int v20 = 5;
        }
        unsigned int v25 = (1 << v19) - v20;
        if ((v25 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        goto LABEL_48;
      }
      return 0;
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_38;
  }
LABEL_30:
  int v15 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v15 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v11 | v15) + 1;
}

void sub_2480339B8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  if (v5 + 1 > 0x51) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 81;
  }
  char v7 = 8 * v6;
  if (v6 > 3)
  {
    int v8 = 5;
LABEL_8:
    char v9 = 8;
    goto LABEL_9;
  }
  unsigned int v11 = ((1 << v7) | 6u) >> v7;
  if (v11 > 0xFFFB) {
    goto LABEL_15;
  }
  int v8 = v11 + 4;
  if (v11 <= 0xFB) {
    goto LABEL_8;
  }
  char v9 = 16;
LABEL_9:
  unsigned int v10 = (1 << v9) - v8;
  if ((v10 & 0x80000000) == 0)
  {
    if (v6 > 3) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_15:
  unsigned int v10 = 0x7FFFFFFF;
  if (v6 > 3)
  {
LABEL_19:
    uint64_t v13 = 1;
    goto LABEL_20;
  }
LABEL_16:
  unsigned int v12 = ((1 << v7) | 6u) >> v7;
  uint64_t v13 = 2;
  if (v12 > 0xFFFB) {
    uint64_t v13 = 4;
  }
  if (v12 <= 0xFB) {
    goto LABEL_19;
  }
LABEL_20:
  size_t v14 = v13 + v6;
  if (a3 <= v10)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v18 = ((a3 - v10 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v18))
    {
      int v15 = 4;
    }
    else if (v18 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (v10 < a2)
  {
    unsigned int v16 = ~v10 + a2;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v14)
      {
        int v19 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        return;
      case 3:
        goto LABEL_56;
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_40;
    case 3:
LABEL_56:
      __break(1u);
      JUMPOUT(0x248033C68);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_39;
    default:
LABEL_39:
      if (!a2) {
        return;
      }
LABEL_40:
      int v20 = -a2;
      if (v6 > 3) {
        goto LABEL_41;
      }
      unsigned int v21 = ((1 << v7) | 6u) >> v7;
      if (v21 > 0xFFFB)
      {
        *(_DWORD *)&a1[v6] = v20;
      }
      else if (v21 <= 0xFB)
      {
LABEL_41:
        a1[v6] = v20;
      }
      else
      {
        *(_WORD *)&a1[v6] = v20;
      }
      return;
  }
}

uint64_t sub_248033C90(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  uint64_t v3 = 81;
  if (v2 + 1 > 0x51) {
    uint64_t v3 = v2 + 1;
  }
  if (v3 > 3) {
    goto LABEL_6;
  }
  unsigned int v5 = ((1 << (8 * v3)) | 6u) >> (8 * v3);
  if (v5 > 0xFFFB)
  {
    uint64_t v4 = *(unsigned int *)&a1[v3];
  }
  else
  {
    if (v5 <= 0xFB)
    {
LABEL_6:
      uint64_t v4 = a1[v3];
      goto LABEL_11;
    }
    uint64_t v4 = *(unsigned __int16 *)&a1[v3];
  }
LABEL_11:
  int v6 = v4 - 4;
  if (v4 >= 4)
  {
    if (v3 <= 3) {
      uint64_t v7 = v3;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_20;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_20;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_20;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_20:
        unsigned int v9 = (v8 | (v6 << (8 * v3))) + 4;
        LODWORD(v4) = v8 + 4;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v9;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_248033D98(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  if (v5 + 1 > 0x51) {
    size_t v6 = v5 + 1;
  }
  else {
    size_t v6 = 81;
  }
  if (a2 > 3)
  {
    unsigned int v7 = a2 - 4;
    if (v6 < 4)
    {
      int v9 = (v7 >> (8 * v6)) + 4;
      v7 &= ~(-1 << (8 * v6));
      unsigned int v10 = (int *)&a1[v6];
      unsigned int v11 = ((1 << (8 * v6)) | 6u) >> (8 * v6);
      if (v11 > 0xFFFB)
      {
        int *v10 = v9;
      }
      else if (v11 > 0xFB)
      {
        *(_WORD *)unsigned int v10 = v9;
      }
      else
      {
        *(unsigned char *)unsigned int v10 = v9;
      }
    }
    else
    {
      a1[v6] = 4;
    }
    if (v6 <= 3) {
      int v12 = v6;
    }
    else {
      int v12 = 4;
    }
    bzero(a1, v6);
    switch(v12)
    {
      case 2:
        *(_WORD *)a1 = v7;
        break;
      case 3:
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
        break;
      case 4:
        *(_DWORD *)a1 = v7;
        break;
      default:
        *a1 = v7;
        break;
    }
  }
  else
  {
    if (v6 > 3)
    {
LABEL_8:
      a1[v6] = a2;
      return;
    }
    unsigned int v8 = ((1 << (8 * v6)) | 6u) >> (8 * v6);
    if (v8 > 0xFFFB)
    {
      *(_DWORD *)&a1[v6] = a2;
    }
    else
    {
      if (v8 <= 0xFB) {
        goto LABEL_8;
      }
      *(_WORD *)&a1[v6] = a2;
    }
  }
}

uint64_t type metadata accessor for BluetoothBaseState()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for BluetoothBasePairingState(uint64_t a1)
{
  return sub_248031E60(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for BluetoothBasePairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_248031B18(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for BluetoothBasePairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_248031B18(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  sub_248031E60(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for BluetoothBasePairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = v4;
  sub_248031E60(v5, v7, v6, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for BluetoothBasePairingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BluetoothBasePairingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_248034144(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_24803414C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BluetoothBasePairingState()
{
  return &type metadata for BluetoothBasePairingState;
}

uint64_t RepairReport.accountID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RepairReport.altDSID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RepairReport.repairedSymptoms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RepairReport.newSymptomReport.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_2480354C0(v2, v3);
}

__n128 RepairReport.init(accountID:repairedSymptoms:newSymptomReport:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v4 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a4 + 32) = v4;
  long long v5 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a4 + 48) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a4 + 64) = v5;
  __n128 result = *(__n128 *)a3;
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 88) = *(_OWORD *)a3;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v8;
  *(void *)(a4 + 80) = a2;
  *(_OWORD *)(a4 + 104) = v7;
  return result;
}

__n128 RepairReport.init(altDSID:repairedSymptoms:newSymptomReport:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  __n128 result = *(__n128 *)a4;
  long long v6 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a5 + 88) = *(_OWORD *)a4;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 80) = a3;
  *(_OWORD *)(a5 + 104) = v6;
  return result;
}

uint64_t RepairReport.hash(into:)(long long *a1)
{
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[11];
  uint64_t v5 = v1[12];
  uint64_t v6 = v1[14];
  uint64_t v8 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247FDEAB0(a1, v3);
  swift_bridgeObjectRelease();
  if (!v5) {
    return sub_248175E80();
  }
  sub_248175E80();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  sub_247FDEDB8((uint64_t)a1, v6);
  return sub_247FE0708(v8, v5);
}

uint64_t sub_248034418()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x49746E756F636361;
  }
}

uint64_t sub_248034480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248035DE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480344A8(uint64_t a1)
{
  unint64_t v2 = sub_248035510();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480344E4(uint64_t a1)
{
  unint64_t v2 = sub_248035510();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RepairReport.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7C80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v26 = v1[1];
  long long v27 = v7;
  long long v8 = v1[2];
  long long v24 = v1[3];
  long long v25 = v8;
  uint64_t v10 = *((void *)v1 + 8);
  uint64_t v9 = *((void *)v1 + 9);
  uint64_t v11 = *((void *)v1 + 10);
  uint64_t v22 = *((void *)v1 + 11);
  uint64_t v23 = v11;
  uint64_t v21 = *((void *)v1 + 12);
  uint64_t v20 = *((void *)v1 + 13);
  uint64_t v19 = *((void *)v1 + 14);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248035510();
  sub_248175F60();
  long long v29 = v27;
  long long v30 = v26;
  long long v31 = v25;
  long long v32 = v24;
  uint64_t v33 = v10;
  uint64_t v34 = v9;
  char v35 = 0;
  sub_24801607C();
  uint64_t v12 = v28;
  sub_248175BE0();
  if (!v12)
  {
    uint64_t v13 = v19;
    uint64_t v14 = v20;
    uint64_t v15 = v21;
    uint64_t v16 = v22;
    *(void *)&long long v29 = v23;
    char v35 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7C90);
    sub_248035564(&qword_2692D7C98, (void (*)(void))sub_247FF3D48);
    sub_248175BE0();
    *(void *)&long long v29 = v16;
    *((void *)&v29 + 1) = v15;
    *(void *)&long long v30 = v14;
    *((void *)&v30 + 1) = v13;
    char v35 = 2;
    sub_247FE0AEC();
    sub_248175B90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t RepairReport.hashValue.getter()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[11];
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247FDEAB0(v6, v1);
  swift_bridgeObjectRelease();
  sub_248175E80();
  if (v2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    sub_247FDEDB8((uint64_t)v6, v3);
    sub_247FE0708(v5, v2);
  }
  return sub_248175EC0();
}

uint64_t RepairReport.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7CA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248035510();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v51 = 0;
  sub_248016124();
  sub_248175AF0();
  uint64_t v9 = v42;
  uint64_t v35 = v43;
  uint64_t v36 = v41;
  uint64_t v37 = v44;
  uint64_t v10 = v46;
  uint64_t v33 = v47;
  uint64_t v34 = v45;
  uint64_t v40 = v48;
  long long v31 = a2;
  uint64_t v32 = v49;
  uint64_t v11 = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7C90);
  char v51 = 1;
  sub_248035564(&qword_2692D7CA8, (void (*)(void))sub_247FF3DF0);
  uint64_t v39 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_248175AF0();
  uint64_t v30 = v11;
  uint64_t v12 = v41;
  char v51 = 2;
  sub_247FE0E2C();
  uint64_t v29 = v12;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  sub_248175AA0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v42;
  uint64_t v28 = v41;
  uint64_t v27 = v42;
  uint64_t v14 = v43;
  uint64_t v26 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = v40;
  swift_bridgeObjectRetain();
  uint64_t v16 = v30;
  swift_bridgeObjectRetain();
  uint64_t v17 = v29;
  swift_bridgeObjectRetain();
  uint64_t v18 = v28;
  v25[1] = v14;
  sub_2480354C0(v28, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v37;
  swift_bridgeObjectRelease();
  uint64_t v20 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v31;
  *long long v31 = v36;
  v21[1] = v20;
  void v21[2] = v35;
  v21[3] = v19;
  uint64_t v22 = v38;
  v21[4] = v34;
  v21[5] = v22;
  v21[6] = v33;
  v21[7] = v15;
  v21[8] = v32;
  v21[9] = v16;
  v21[10] = v17;
  v21[11] = v18;
  uint64_t v23 = v27;
  v21[12] = v27;
  v21[13] = v14;
  v21[14] = v26;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_247FE0708(v28, v23);
}

uint64_t sub_248034E40@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RepairReport.init(from:)(a1, a2);
}

uint64_t sub_248034E58(void *a1)
{
  return RepairReport.encode(to:)(a1);
}

uint64_t sub_248034E7C()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[11];
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247FDEAB0(v6, v1);
  swift_bridgeObjectRelease();
  sub_248175E80();
  if (v2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    sub_247FDEDB8((uint64_t)v6, v3);
    sub_247FE0708(v5, v2);
  }
  return sub_248175EC0();
}

void __swiftcall RepairReport.into()(AISRepairReport *__return_ptr retstr)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    uint64_t v23 = *(void *)(v1 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_248175910();
    uint64_t v5 = sub_24801559C(v2);
    uint64_t v7 = v6;
    char v9 = v8 & 1;
    do
    {
      if (v5 < 0 || v5 >= 1 << *(unsigned char *)(v2 + 32))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
      if (((*(void *)(v2 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(v2 + 36) != v7) {
        goto LABEL_18;
      }
      uint64_t v17 = *(void *)(v2 + 48) + 96 * v5;
      unint64_t v18 = *(void *)(v17 + 80);
      if (v18 <= 3) {
        uint64_t v10 = qword_2481809F0[v18];
      }
      else {
        uint64_t v10 = 0;
      }
      uint64_t v11 = *(unsigned __int8 *)(v17 + 88);
      id v12 = objc_allocWithZone((Class)AISSymptom);
      swift_bridgeObjectRetain();
      uint64_t v13 = (void *)sub_248175130();
      swift_bridgeObjectRelease();
      objc_msgSend(v12, sel_initWithAltDSID_priority_problemFlag_errorInfo_, v13, v11, v10, sub_248175D60());
      swift_unknownObjectRelease();

      sub_2481758F0();
      sub_248175920();
      sub_248175930();
      sub_248175900();
      uint64_t v14 = sub_248015640(v5, v7, v9 & 1, v2);
      uint64_t v5 = v14;
      uint64_t v7 = v15;
      char v9 = v16 & 1;
      --v4;
    }
    while (v4);
    sub_248017DF4(v14, v15, v16 & 1);
    swift_bridgeObjectRelease();
    if (!v23) {
      goto LABEL_14;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    if (!v3)
    {
LABEL_14:
      uint64_t v19 = 0;
      goto LABEL_15;
    }
  }
  uint64_t v19 = (void *)SymptomReport.into()();
LABEL_15:
  id v20 = objc_allocWithZone((Class)AISRepairReport);
  uint64_t v21 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  sub_2480355D4();
  uint64_t v22 = (void *)sub_2481752E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_initWithAltDSID_repairedSymptoms_symptomReport_, v21, v22, v19);
}

BOOL _s12AppleIDSetup12RepairReportV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[10];
  uint64_t v2 = a1[11];
  uint64_t v5 = a1[12];
  uint64_t v4 = a1[13];
  uint64_t v6 = a1[14];
  uint64_t v8 = a2[10];
  uint64_t v7 = a2[11];
  uint64_t v10 = a2[12];
  uint64_t v9 = a2[13];
  uint64_t v11 = a2[14];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v12 = sub_248175CE0(), result = 0, (v12 & 1) != 0))
  {
    if ((sub_24815D8AC(v3, v8) & 1) == 0) {
      return 0;
    }
    if (v5)
    {
      if (v10)
      {
        if (v2 == v7 && v5 == v10 || (sub_248175CE0() & 1) != 0)
        {
          sub_2480354C0(v2, v5);
          sub_2480354C0(v2, v5);
          sub_2480354C0(v7, v10);
          char v14 = sub_2480BC92C(v9, v11, v4, v6);
          sub_247FE0708(v7, v10);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          sub_247FE0708(v2, v5);
          return (v14 & 1) != 0;
        }
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v15 = v2;
        uint64_t v16 = v5;
        goto LABEL_16;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    else if (!v10)
    {
      return 1;
    }
    sub_2480354C0(v7, v10);
    sub_247FE0708(v2, v5);
    uint64_t v15 = v7;
    uint64_t v16 = v10;
LABEL_16:
    sub_247FE0708(v15, v16);
    return 0;
  }
  return result;
}

uint64_t sub_2480354C0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_248035510()
{
  unint64_t result = qword_2692D7C88;
  if (!qword_2692D7C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7C88);
  }
  return result;
}

uint64_t sub_248035564(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D7C90);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2480355D4()
{
  unint64_t result = qword_2692D7CB0;
  if (!qword_2692D7CB0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2692D7CB0);
  }
  return result;
}

unint64_t sub_248035614(void *a1)
{
  a1[1] = sub_247FE0E80();
  a1[2] = sub_247FE0BE8();
  unint64_t result = sub_24803564C();
  a1[3] = result;
  return result;
}

unint64_t sub_24803564C()
{
  unint64_t result = qword_2692D7CB8;
  if (!qword_2692D7CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7CB8);
  }
  return result;
}

unint64_t sub_2480356A4()
{
  unint64_t result = qword_2692D7CC0;
  if (!qword_2692D7CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7CC0);
  }
  return result;
}

uint64_t destroy for RepairReport(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 96);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for RepairReport(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  a1[10] = a2[10];
  uint64_t v9 = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    a1[11] = a2[11];
    a1[12] = v9;
    uint64_t v11 = a2[13];
    uint64_t v10 = a2[14];
    a1[13] = v11;
    a1[14] = v10;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
    *(_OWORD *)(a1 + 13) = v12;
  }
  return a1;
}

void *assignWithCopy for RepairReport(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 11;
  uint64_t v5 = a2 + 11;
  uint64_t v6 = a2[12];
  if (a1[12])
  {
    if (v6)
    {
      a1[11] = a2[11];
      a1[12] = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[13] = a2[13];
      swift_retain();
      swift_release();
      a1[14] = a2[14];
      swift_retain();
      swift_release();
    }
    else
    {
      sub_24800716C((uint64_t)(a1 + 11));
      long long v7 = *(_OWORD *)(a2 + 13);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 13) = v7;
    }
  }
  else if (v6)
  {
    a1[11] = a2[11];
    a1[12] = a2[12];
    a1[13] = a2[13];
    a1[14] = a2[14];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 13);
    _OWORD *v4 = *v5;
    *(_OWORD *)(a1 + 13) = v8;
  }
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for RepairReport(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 96)) {
    goto LABEL_5;
  }
  uint64_t v9 = *(void *)(a2 + 96);
  if (!v9)
  {
    sub_24800716C(a1 + 88);
LABEL_5:
    long long v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    return a1;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairReport(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepairReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairReport()
{
  return &type metadata for RepairReport;
}

unsigned char *storeEnumTagSinglePayload for RepairReport.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248035CA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairReport.CodingKeys()
{
  return &type metadata for RepairReport.CodingKeys;
}

unint64_t sub_248035CDC()
{
  unint64_t result = qword_2692D7CC8;
  if (!qword_2692D7CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7CC8);
  }
  return result;
}

unint64_t sub_248035D34()
{
  unint64_t result = qword_2692D7CD0;
  if (!qword_2692D7CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7CD0);
  }
  return result;
}

unint64_t sub_248035D8C()
{
  unint64_t result = qword_2692D7CD8;
  if (!qword_2692D7CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7CD8);
  }
  return result;
}

uint64_t sub_248035DE0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000044;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002481910E0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248191100)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_248035F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2481753D0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2481753C0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_247FB33D4(a1, &qword_2692D9520);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_248175340();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_2480360BC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_248036100()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_2692D7CE0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2692D7CE0);
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2692D6A78);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t SharingBaseServiceType.rawValue.getter()
{
  return sub_248175160();
}

uint64_t SharingBaseServiceType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_248175A30();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_248036230()
{
  uint64_t v0 = sub_248175160();
  uint64_t v2 = v1;
  if (v0 == sub_248175160() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_248175CE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2480362C4()
{
  return sub_248175EC0();
}

uint64_t sub_24803632C()
{
  sub_248175160();
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248036388()
{
  return sub_248175EC0();
}

uint64_t sub_2480363EC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_248175A30();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_248036440@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_248175160();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_248036474()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80B8);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80C0);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(v0 + 16) = result;
  qword_2692D7CF8 = v0;
  return result;
}

void *sub_2480364D8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 112) + 24);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_248040C6C((void **)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  swift_release();
  return v2;
}

uint64_t SharingServerBase.advertisementRate.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t SharingServerBase.fixedPin.getter()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingServerBase.targetAuthTag.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2480365D0()
{
  swift_beginAccess();
  return *(unsigned int *)(v0 + 168);
}

uint64_t sub_248036604(int a1)
{
  uint64_t result = swift_beginAccess();
  *(_DWORD *)(v1 + 168) = a1;
  return result;
}

uint64_t (*sub_248036644())()
{
  return j__swift_endAccess;
}

uint64_t SharingServerBase.deviceActionType.getter()
{
  return *(unsigned __int8 *)(v0 + 172);
}

uint64_t SharingServerBase.legacySymptomReport.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[22];
  uint64_t v3 = v1[23];
  uint64_t v4 = v1[24];
  uint64_t v5 = v1[25];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_2480354C0(v2, v3);
}

uint64_t SharingServerBase.stateHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_retain();
  return v1;
}

uint64_t SharingServerBase.tags.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_2480366F0()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 232);
  if (v1)
  {
    uint64_t v2 = qword_2692D4DA0;
    id v3 = v1;
    if (v2 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_248174B90();
    __swift_project_value_buffer(v4, (uint64_t)qword_2692D7CE0);
    id v5 = v3;
    swift_retain();
    uint64_t v6 = sub_248174B70();
    os_log_type_t v7 = sub_2481755C0();
    if (os_log_type_enabled(v6, v7))
    {
      os_log_type_t v21 = v7;
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412546;
      long long v10 = sub_2480364D8();
      sub_248175730();
      *uint64_t v9 = v10;
      swift_release();
      *(_WORD *)(v8 + 12) = 2112;
      id v17 = v5;
      sub_248175730();
      v9[1] = v1;

      _os_log_impl(&dword_247F93000, v6, v21, "Disabling needs setup on service: %@ with session: %@", (uint8_t *)v8, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v9, -1, -1);
      MEMORY[0x24C574E00](v8, -1, -1);
    }
    else
    {

      swift_release();
    }
    unint64_t v18 = sub_2480364D8();
    if (v18)
    {
      uint64_t v19 = v18;
      objc_msgSend(v18, sel_setNeedsSetup_, 0);
    }
    goto LABEL_16;
  }
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_248174B90();
  __swift_project_value_buffer(v11, (uint64_t)qword_2692D7CE0);
  swift_retain();
  long long v12 = sub_248174B70();
  os_log_type_t v13 = sub_2481755C0();
  if (os_log_type_enabled(v12, v13))
  {
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)char v14 = 138412290;
    uint64_t v16 = sub_2480364D8();
    sub_248175730();
    void *v15 = v16;
    swift_release();
    _os_log_impl(&dword_247F93000, v12, v13, "Enabling needs setup on service: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v15, -1, -1);
    MEMORY[0x24C574E00](v14, -1, -1);
  }
  else
  {

    swift_release();
  }
  id v20 = sub_2480364D8();
  if (v20)
  {
    id v5 = v20;
    objc_msgSend(v20, sel_setNeedsSetup_, 1);
LABEL_16:
  }
}

void *sub_248036AE0()
{
  uint64_t v0 = (void *)sub_248040D68();
  id v1 = v0;
  return v0;
}

uint64_t sub_248036B0C(uint64_t a1)
{
  id v3 = *(void (**)(uint64_t, uint64_t, unsigned char *))(v1 + 208);
  swift_beginAccess();
  type metadata accessor for AnyTransportBuilder();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, v1 + 240, v4);
  v3(v1, a1, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_248036C28@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  type metadata accessor for AnyTransportBuilder();
  uint64_t v3 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v1 + 240, v3);
}

uint64_t SharingServerBase.__allocating_init(queue:advertisementRate:fixedPin:targetAuthTag:pinType:serviceType:deviceActionType:legacySymptomReport:service:tags:stateHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, char a9, uint64_t *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  swift_allocObject();
  uint64_t v19 = sub_248040F30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14);

  return v19;
}

uint64_t SharingServerBase.init(queue:advertisementRate:fixedPin:targetAuthTag:pinType:serviceType:deviceActionType:legacySymptomReport:service:tags:stateHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, char a9, uint64_t *a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14 = sub_248040F30(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, (uint64_t)a11, a12, a13, a14);

  return v14;
}

id sub_248036E10(id *a1)
{
  return objc_msgSend(*a1, sel_invalidate);
}

uint64_t SharingServerBase.deinit()
{
  uint64_t v1 = v0;
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  __swift_project_value_buffer(v2, (uint64_t)qword_2692D7CE0);
  uint64_t v3 = sub_248174B70();
  os_log_type_t v4 = sub_2481755B0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_247F93000, v3, v4, "SharingServerBase deallocated", v5, 2u);
    MEMORY[0x24C574E00](v5, -1, -1);
  }

  sub_24803993C(1);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE0708(*(void *)(v1 + 176), *(void *)(v1 + 184));
  swift_release();
  swift_bridgeObjectRelease();

  type metadata accessor for AnyTransportBuilder();
  uint64_t v6 = type metadata accessor for BluetoothBaseState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v1 + 240, v6);

  swift_defaultActor_destroy();
  return v1;
}

uint64_t SharingServerBase.__deallocating_deinit()
{
  SharingServerBase.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_248037008()
{
  *(void *)(v1 + 1056) = v0;
  *(void *)(v1 + 1064) = *v0;
  return MEMORY[0x270FA2498](sub_248037050, v0, 0);
}

uint64_t sub_248037050()
{
  sub_248036C28(v0 + 272);
  if (*(unsigned char *)(v0 + 353) != 4
    || *(unsigned char *)(v0 + 352)
    || (int8x16_t v1 = vorrq_s8(vorrq_s8(*(int8x16_t *)(v0 + 288), *(int8x16_t *)(v0 + 320)), vorrq_s8(*(int8x16_t *)(v0 + 304), *(int8x16_t *)(v0 + 336))), *(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | *(void *)(v0 + 280) | *(void *)(v0 + 272)))
  {
    type metadata accessor for AnyTransportBuilder();
    uint64_t v18 = type metadata accessor for BluetoothBaseState();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v0 + 272, v18);
    type metadata accessor for SharingServerBase.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v19 = 3;
    swift_willThrow();
    id v20 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 1064);
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    type metadata accessor for AnyTransportBuilder();
    uint64_t v5 = type metadata accessor for BluetoothBaseState();
    *(void *)(v0 + 1072) = v5;
    uint64_t v6 = *(void *)(v5 - 8);
    os_log_type_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    *(void *)(v0 + 1080) = v7;
    *(void *)(v0 + 1088) = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v0 + 272, v5);
    *(void *)(v0 + 360) = 1;
    *(_OWORD *)(v0 + 368) = 0u;
    *(_OWORD *)(v0 + 384) = 0u;
    *(_OWORD *)(v0 + 400) = 0u;
    *(_OWORD *)(v0 + 416) = 0u;
    *(_OWORD *)(v0 + 425) = 0u;
    *(unsigned char *)(v0 + 441) = 4;
    sub_248040DF4(v0 + 360);
    v7(v0 + 360, v5);
    uint64_t v8 = sub_2480364D8();
    if (v8)
    {
      uint64_t v9 = v8;
      objc_msgSend(v8, sel_setDispatchQueue_, *(void *)(*(void *)(v0 + 1056) + 120));
    }
    long long v10 = sub_2480364D8();
    if (v10)
    {
      uint64_t v11 = v10;
      sub_248175160();
      long long v12 = (void *)sub_248175130();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_setLabel_, v12);
    }
    os_log_type_t v13 = sub_2480364D8();
    if (v13)
    {
      uint64_t v14 = v13;
      objc_msgSend(v13, sel_setAdvertiseRate_, *(void *)(*(void *)(v0 + 1056) + 128));
    }
    uint64_t v15 = sub_2480364D8();
    if (v15)
    {
      uint64_t v16 = v15;
      if (*(void *)(*(void *)(v0 + 1056) + 144)) {
        id v17 = (void *)sub_248175130();
      }
      else {
        id v17 = 0;
      }
      objc_msgSend(v16, sel_setFixedPIN_, v17);
    }
    uint64_t v22 = sub_2480364D8();
    if (v22)
    {
      uint64_t v23 = v22;
      uint64_t v24 = *(void *)(v0 + 1056);
      long long v25 = *(void **)(v24 + 160);
      if (v25)
      {
        unint64_t v26 = *(void *)(v24 + 152);
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_24802775C(v26, (unint64_t)v25);
        unint64_t v29 = v28;
        long long v25 = (void *)sub_2481747C0();
        sub_247FB6CCC(v27, v29);
      }
      objc_msgSend(v23, sel_setTargetAuthTag_, v25);
    }
    uint64_t v30 = sub_2480364D8();
    if (v30)
    {
      long long v31 = v30;
      sub_248175160();
      uint64_t v32 = (void *)sub_248175130();
      swift_bridgeObjectRelease();
      objc_msgSend(v31, sel_setIdentifier_, v32);
    }
    uint64_t v33 = sub_2480364D8();
    if (v33)
    {
      uint64_t v34 = v33;
      objc_msgSend(v33, sel_setNeedsSetup_, 1);
    }
    uint64_t v35 = sub_2480364D8();
    if (v35)
    {
      uint64_t v36 = v35;
      objc_msgSend(v35, sel_setDeviceActionType_, *(unsigned __int8 *)(*(void *)(v0 + 1056) + 172));
    }
    uint64_t v37 = sub_2480364D8();
    if (v37)
    {
      uint64_t v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D08);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_24817B010;
      *(void *)(v0 + 1040) = 0x6C7070612E6D6F63;
      *(void *)(v0 + 1048) = 0xEF6E696D64612E65;
      sub_248175810();
      *(void *)(inited + 96) = MEMORY[0x263F8D4F8];
      *(unsigned char *)(inited + 72) = 1;
      sub_247FB49B0(inited);
      uint64_t v40 = (void *)sub_248174FF0();
      swift_bridgeObjectRelease();
      objc_msgSend(v38, sel_setPairSetupACL_, v40);
    }
    uint64_t v41 = sub_2480364D8();
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v43 = *(void *)(v0 + 1056);
      swift_beginAccess();
      if ((*(_DWORD *)(v43 + 168) & 0x80000000) != 0) {
        return sub_2481759B0();
      }
      objc_msgSend(v42, sel_setPinType_);
    }
    uint64_t v44 = sub_2480364D8();
    if (v44)
    {
      uint64_t v45 = v44;
      objc_msgSend(v44, sel_setSessionFlags_, 1);
    }
    uint64_t v46 = sub_2480364D8();
    if (v46)
    {
      uint64_t v47 = v46;
      uint64_t v48 = swift_allocObject();
      swift_weakInit();
      uint64_t v49 = (void *)swift_allocObject();
      v49[2] = v3;
      v49[3] = v4;
      v49[4] = v48;
      *(void *)(v0 + 480) = sub_248041108;
      *(void *)(v0 + 488) = v49;
      *(void *)(v0 + 448) = MEMORY[0x263EF8330];
      *(void *)(v0 + 456) = 1107296256;
      *(void *)(v0 + 464) = sub_248038358;
      *(void *)(v0 + 472) = &block_descriptor_8;
      uint64_t v50 = _Block_copy((const void *)(v0 + 448));
      swift_release();
      objc_msgSend(v47, sel_setShowPINHandlerEx_, v50);
      _Block_release(v50);
    }
    char v51 = sub_2480364D8();
    if (v51)
    {
      unsigned int v52 = v51;
      uint64_t v53 = swift_allocObject();
      swift_weakInit();
      id v54 = (void *)swift_allocObject();
      v54[2] = v3;
      v54[3] = v4;
      v54[4] = v53;
      *(void *)(v0 + 528) = sub_24804115C;
      *(void *)(v0 + 536) = v54;
      *(void *)(v0 + 496) = MEMORY[0x263EF8330];
      *(void *)(v0 + 504) = 1107296256;
      *(void *)(v0 + 512) = sub_2480360BC;
      *(void *)(v0 + 520) = &block_descriptor_10;
      char v55 = _Block_copy((const void *)(v0 + 496));
      swift_release();
      objc_msgSend(v52, sel_setHidePINHandler_, v55);
      _Block_release(v55);
    }
    unsigned int v56 = sub_2480364D8();
    if (v56)
    {
      uint64_t v57 = v56;
      uint64_t v58 = swift_allocObject();
      swift_weakInit();
      uint64_t v59 = (void *)swift_allocObject();
      v59[2] = v3;
      v59[3] = v4;
      v59[4] = v58;
      *(void *)(v0 + 576) = sub_2480411B4;
      *(void *)(v0 + 584) = v59;
      *(void *)(v0 + 544) = MEMORY[0x263EF8330];
      *(void *)(v0 + 552) = 1107296256;
      *(void *)(v0 + 560) = sub_248038470;
      *(void *)(v0 + 568) = &block_descriptor_17;
      uint64_t v60 = _Block_copy((const void *)(v0 + 544));
      swift_release();
      objc_msgSend(v57, sel_setSessionStartedHandler_, v60);
      _Block_release(v60);
    }
    uint64_t v61 = sub_2480364D8();
    if (v61)
    {
      uint64_t v62 = v61;
      uint64_t v63 = swift_allocObject();
      swift_weakInit();
      unint64_t v64 = (void *)swift_allocObject();
      v64[2] = v3;
      v64[3] = v4;
      v64[4] = v63;
      *(void *)(v0 + 624) = sub_2480411F8;
      *(void *)(v0 + 632) = v64;
      *(void *)(v0 + 592) = MEMORY[0x263EF8330];
      *(void *)(v0 + 600) = 1107296256;
      *(void *)(v0 + 608) = sub_2480388C8;
      *(void *)(v0 + 616) = &block_descriptor_24;
      uint64_t v65 = _Block_copy((const void *)(v0 + 592));
      swift_release();
      objc_msgSend(v62, sel_setSessionEndedHandler_, v65);
      _Block_release(v65);
    }
    uint64_t v66 = sub_2480364D8();
    if (v66)
    {
      uint64_t v67 = v66;
      uint64_t v68 = swift_allocObject();
      swift_weakInit();
      unint64_t v69 = (void *)swift_allocObject();
      v69[2] = v3;
      v69[3] = v4;
      v69[4] = v68;
      *(void *)(v0 + 672) = sub_248041204;
      *(void *)(v0 + 680) = v69;
      *(void *)(v0 + 640) = MEMORY[0x263EF8330];
      *(void *)(v0 + 648) = 1107296256;
      *(void *)(v0 + 656) = sub_248038470;
      *(void *)(v0 + 664) = &block_descriptor_31;
      uint64_t v70 = _Block_copy((const void *)(v0 + 640));
      swift_release();
      objc_msgSend(v67, sel_setSessionSecuredHandler_, v70);
      _Block_release(v70);
    }
    uint64_t v71 = sub_2480364D8();
    if (v71)
    {
      uint64_t v72 = v71;
      uint64_t v73 = swift_allocObject();
      swift_weakInit();
      uint64_t v74 = (void *)swift_allocObject();
      v74[2] = v3;
      v74[3] = v4;
      v74[4] = v73;
      *(void *)(v0 + 720) = sub_248041248;
      *(void *)(v0 + 728) = v74;
      *(void *)(v0 + 688) = MEMORY[0x263EF8330];
      *(void *)(v0 + 696) = 1107296256;
      *(void *)(v0 + 704) = sub_2480360BC;
      *(void *)(v0 + 712) = &block_descriptor_38;
      v75 = _Block_copy((const void *)(v0 + 688));
      swift_release();
      objc_msgSend(v72, sel_setInvalidationHandler_, v75);
      _Block_release(v75);
    }
    uint64_t v76 = sub_2480364D8();
    if (v76)
    {
      uint64_t v77 = v76;
      uint64_t v78 = swift_allocObject();
      swift_weakInit();
      uint64_t v79 = (void *)swift_allocObject();
      v79[2] = v3;
      v79[3] = v4;
      v79[4] = v78;
      *(void *)(v0 + 768) = sub_2480412A0;
      *(void *)(v0 + 776) = v79;
      *(void *)(v0 + 736) = MEMORY[0x263EF8330];
      *(void *)(v0 + 744) = 1107296256;
      *(void *)(v0 + 752) = sub_2480360BC;
      *(void *)(v0 + 760) = &block_descriptor_45;
      uint64_t v80 = _Block_copy((const void *)(v0 + 736));
      swift_release();
      objc_msgSend(v77, sel_setInterruptionHandler_, v80);
      _Block_release(v80);
    }
    uint64_t v81 = sub_2480364D8();
    if (v81)
    {
      uint64_t v82 = v81;
      uint64_t v83 = swift_allocObject();
      swift_weakInit();
      uint64_t v84 = (void *)swift_allocObject();
      v84[2] = v3;
      v84[3] = v4;
      v84[4] = v83;
      *(void *)(v0 + 816) = sub_2480412F8;
      *(void *)(v0 + 824) = v84;
      *(void *)(v0 + 784) = MEMORY[0x263EF8330];
      *(void *)(v0 + 792) = 1107296256;
      *(void *)(v0 + 800) = sub_248038E88;
      *(void *)(v0 + 808) = &block_descriptor_52;
      uint64_t v85 = _Block_copy((const void *)(v0 + 784));
      swift_release();
      objc_msgSend(v82, sel_setErrorHandler_, v85);
      _Block_release(v85);
    }
    uint64_t v86 = sub_2480364D8();
    if (v86)
    {
      unint64_t v87 = v86;
      *(void *)(v0 + 864) = sub_248038EF4;
      *(void *)(v0 + 872) = 0;
      *(void *)(v0 + 832) = MEMORY[0x263EF8330];
      *(void *)(v0 + 840) = 1107296256;
      *(void *)(v0 + 848) = sub_248039254;
      *(void *)(v0 + 856) = &block_descriptor_55;
      char v88 = _Block_copy((const void *)(v0 + 832));
      objc_msgSend(v87, sel_setPeerDisconnectedHandler_, v88);
      _Block_release(v88);
    }
    uint64_t v89 = sub_2480364D8();
    if (v89)
    {
      unint64_t v90 = v89;
      *(void *)(v0 + 912) = sub_248039368;
      *(void *)(v0 + 920) = 0;
      *(void *)(v0 + 880) = MEMORY[0x263EF8330];
      *(void *)(v0 + 888) = 1107296256;
      *(void *)(v0 + 896) = sub_248038E88;
      *(void *)(v0 + 904) = &block_descriptor_58;
      uint64_t v91 = _Block_copy((const void *)(v0 + 880));
      objc_msgSend(v90, sel_setPairSetupCompletionHandler_, v91);
      _Block_release(v91);
    }
    uint64_t v92 = sub_2480364D8();
    if (v92)
    {
      char v93 = v92;
      uint64_t v94 = swift_allocObject();
      swift_weakInit();
      v95 = (void *)swift_allocObject();
      v95[2] = v3;
      v95[3] = v4;
      v95[4] = v94;
      *(void *)(v0 + 960) = sub_248041334;
      *(void *)(v0 + 968) = v95;
      *(void *)(v0 + 928) = MEMORY[0x263EF8330];
      *(void *)(v0 + 936) = 1107296256;
      *(void *)(v0 + 944) = sub_2480396DC;
      *(void *)(v0 + 952) = &block_descriptor_65;
      uint64_t v96 = _Block_copy((const void *)(v0 + 928));
      swift_release();
      objc_msgSend(v93, sel_setReceivedRequestHandler_, v96);
      _Block_release(v96);
    }
    uint64_t v97 = sub_2480364D8();
    *(void *)(v0 + 1096) = v97;
    if (v97)
    {
      v98 = v97;
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 24) = sub_248038080;
      *(void *)(v0 + 1008) = swift_continuation_init();
      *(void *)(v0 + 976) = MEMORY[0x263EF8330];
      *(void *)(v0 + 984) = 0x40000000;
      *(void *)(v0 + 992) = sub_24803989C;
      *(void *)(v0 + 1000) = &block_descriptor_66;
      objc_msgSend(v98, sel_activateWithCompletion_, v0 + 976);
      return MEMORY[0x270FA23F0](v0 + 16);
    }
    uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v100 = *(void *)(v0 + 1072);
    *(void *)(v0 + 184) = 2;
    *(_OWORD *)(v0 + 192) = 0u;
    *(_OWORD *)(v0 + 208) = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
    *(_OWORD *)(v0 + 240) = 0u;
    *(_OWORD *)(v0 + 249) = 0u;
    *(unsigned char *)(v0 + 265) = 4;
    sub_248040DF4(v0 + 184);
    v99(v0 + 184, v100);
    id v20 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v20();
}

uint64_t sub_248038080()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 1104) = v2;
  uint64_t v3 = *(void *)(v1 + 1056);
  if (v2) {
    uint64_t v4 = sub_24803825C;
  }
  else {
    uint64_t v4 = sub_2480381A0;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2480381A0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
  uint64_t v2 = *(void *)(v0 + 1072);
  *(void *)(v0 + 184) = 2;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 249) = 0u;
  *(unsigned char *)(v0 + 265) = 4;
  sub_248040DF4(v0 + 184);
  v1(v0 + 184, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24803825C()
{
  uint64_t v1 = *(void **)(v0 + 1096);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2480382D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a4;
  return MEMORY[0x270FA2498](sub_2480382F4, a4, 0);
}

uint64_t sub_2480382F4()
{
  sub_248041358(v0[3], v0[4]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_248038358(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v4 = sub_248175160();
  uint64_t v6 = v5;
  swift_retain();
  v3(a2, v4, v6);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480383D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA2498](sub_248043E40, a4, 0);
}

uint64_t sub_2480383F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_248038410, a4, 0);
}

uint64_t sub_248038410()
{
  sub_248039CE8(*(void **)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_248038470(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_2480384D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v30 = *MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_248174B90();
  __swift_project_value_buffer(v9, (uint64_t)qword_2692D7CE0);
  id v10 = a1;
  id v11 = a2;
  id v12 = v10;
  id v13 = a2;
  uint64_t v14 = sub_248174B70();
  os_log_type_t v15 = sub_2481755C0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v27 = a3 + 16;
    unint64_t v28 = v8;
    uint64_t v16 = swift_slowAlloc();
    id v17 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 138412546;
    uint64_t v29 = (uint64_t)v12;
    id v18 = v12;
    sub_248175730();
    *id v17 = v12;

    *(_WORD *)(v16 + 12) = 2112;
    if (a2)
    {
      id v19 = a2;
      uint64_t v20 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v29 = v20;
      sub_248175730();
    }
    else
    {
      uint64_t v29 = 0;
      sub_248175730();
      uint64_t v20 = 0;
    }
    v17[1] = v20;

    _os_log_impl(&dword_247F93000, v14, v15, "sessionEndedHandler called with session: %@ and error: %@", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v17, -1, -1);
    MEMORY[0x24C574E00](v16, -1, -1);

    uint64_t v8 = v28;
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v23 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
    uint64_t v24 = (void *)swift_allocObject();
    v24[2] = 0;
    v24[3] = 0;
    v24[4] = v22;
    v24[5] = v12;
    v24[6] = a2;
    id v25 = v12;
    id v26 = a2;
    sub_247FFC0C4((uint64_t)v8, (uint64_t)&unk_2692D8058, (uint64_t)v24);
    return swift_release();
  }
  return result;
}

uint64_t sub_248038848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_248038868, a4, 0);
}

uint64_t sub_248038868()
{
  sub_24804143C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2480388C8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

uint64_t sub_248038954(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_248174B90();
  __swift_project_value_buffer(v15, (uint64_t)qword_2692D7CE0);
  id v16 = a1;
  id v17 = sub_248174B70();
  os_log_type_t v18 = sub_2481755C0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v34 = a7;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v35 = a6;
    uint64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = a5;
    uint64_t v22 = (void *)v21;
    *(_DWORD *)uint64_t v20 = 138412290;
    id v36 = v16;
    id v23 = v16;
    uint64_t v33 = a2 + 16;
    uint64_t v24 = v14;
    id v25 = v23;
    a7 = v34;
    sub_248175730();
    *uint64_t v22 = v16;

    uint64_t v14 = v24;
    _os_log_impl(&dword_247F93000, v17, v18, v32, v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v22, -1, -1);
    MEMORY[0x24C574E00](v20, -1, -1);
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v27 = result;
    uint64_t v28 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v14, 1, 1, v28);
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = v27;
    v29[5] = v16;
    id v30 = v16;
    sub_247FFC0C4((uint64_t)v14, a7, (uint64_t)v29);
    return swift_release();
  }
  return result;
}

uint64_t sub_248038C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_248038C20, a4, 0);
}

uint64_t sub_248038C20()
{
  sub_24803AB50(*(void **)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248038C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_248043F3C, a4, 0);
}

uint64_t sub_248038CA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)(v4 + 16) = a4;
  *(void *)(v4 + 24) = *a4;
  return MEMORY[0x270FA2498](sub_248038CE8, 0, 0);
}

uint64_t sub_248038CE8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for SharingServerBase.Failure();
  swift_getWitnessTable();
  *(void *)(v0 + 32) = swift_allocError();
  *uint64_t v2 = 4;
  return MEMORY[0x270FA2498](sub_248038D98, v1, 0);
}

uint64_t sub_248038D98()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_24803B180(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_248038E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_248038E28, a4, 0);
}

uint64_t sub_248038E28()
{
  sub_24803B180(*(void **)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_248038E88(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_248038EF4(uint64_t a1, void *a2)
{
  v24[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_2481748C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_248174B90();
  __swift_project_value_buffer(v8, (uint64_t)qword_2692D7CE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  id v9 = a2;
  id v10 = a2;
  id v11 = sub_248174B70();
  os_log_type_t v12 = sub_2481755C0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v24[0] = v22;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_2480434B0();
    uint64_t v14 = sub_248175C30();
    uint64_t v23 = sub_247FB6D24(v14, v15, v24);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_WORD *)(v13 + 12) = 2112;
    if (a2)
    {
      id v16 = a2;
      uint64_t v17 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v23 = v17;
      sub_248175730();
    }
    else
    {
      uint64_t v23 = 0;
      sub_248175730();
      uint64_t v17 = 0;
    }
    os_log_type_t v18 = v21;
    void *v21 = v17;

    _os_log_impl(&dword_247F93000, v11, v12, "peerDisconnectedHandler called for peer: %s with error: %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v18, -1, -1);
    uint64_t v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v19, -1, -1);
    MEMORY[0x24C574E00](v13, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_248039254(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_2481748C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(void (**)(char *, void *))(a1 + 32);
  sub_2481748A0();
  swift_retain();
  id v10 = a3;
  v9(v8, a3);
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_248039368(void *a1)
{
  sub_24803DBF8(a1);
}

void sub_2480393C0(void *a1)
{
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  __swift_project_value_buffer(v2, (uint64_t)qword_2692D7CE0);
  id v3 = a1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  uint64_t v5 = sub_248174B70();
  os_log_type_t v6 = sub_2481755D0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = v16;
    *(_DWORD *)uint64_t v7 = 138412802;
    id v9 = v4;
    sub_248175730();
    void *v8 = v4;

    *(_WORD *)(v7 + 12) = 1024;
    sub_248175730();
    *(_WORD *)(v7 + 18) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_248175020();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    sub_247FB6D24(v10, v12, &v17);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v5, v6, "receivedRequestHandler called: %@ flags: %u request: %s", (uint8_t *)v7, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v16, -1, -1);
    MEMORY[0x24C574E00](v7, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v13 = sub_248174B70();
  os_log_type_t v14 = sub_2481755C0();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v15 = 0;
    _os_log_impl(&dword_247F93000, v13, v14, "Interacting with modern device, ignoring received sharing request", v15, 2u);
    MEMORY[0x24C574E00](v15, -1, -1);
  }
}

uint64_t SFSession.peerSupportsAppleIDSetup.getter()
{
  return 1;
}

void sub_2480396DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v7 = *(void (**)(void))(a1 + 32);
  sub_248175010();
  uint64_t v8 = _Block_copy(a5);
  *(void *)(swift_allocObject() + 16) = v8;
  swift_retain();
  id v9 = a2;
  v7();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
}

void sub_2480397E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v7 = (void *)sub_248174720();
    if (a3)
    {
LABEL_3:
      uint64_t v8 = sub_248174FF0();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = 0;
LABEL_6:
  id v9 = (id)v8;
  (*(void (**)(uint64_t, uint64_t, void *))(a4 + 16))(a4, a1, v7);
}

uint64_t sub_24803989C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return MEMORY[0x270FA2410](v2, v4);
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

void sub_248039934()
{
}

void sub_24803993C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_248174B90();
  __swift_project_value_buffer(v7, (uint64_t)qword_2692D7CE0);
  uint64_t v8 = sub_248174B70();
  os_log_type_t v9 = sub_2481755B0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v12 = sub_248175FB0();
    uint64_t v19 = sub_247FB6D24(v12, v13, &v20);
    sub_248175730();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 1024;
    LODWORD(v19) = a1 & 1;
    sub_248175730();
    _os_log_impl(&dword_247F93000, v8, v9, "Invalidating %s for deinit: %{BOOL}d", (uint8_t *)v10, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v11, -1, -1);
    MEMORY[0x24C574E00](v10, -1, -1);
  }

  if (a1)
  {
    os_log_type_t v14 = sub_248174B70();
    os_log_type_t v15 = sub_2481755C0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_247F93000, v14, v15, "Not changing to invalidated state, we are deinitialized", v16, 2u);
      MEMORY[0x24C574E00](v16, -1, -1);
    }
  }
  else
  {
    uint64_t v17 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
    os_log_type_t v18 = (void *)swift_allocObject();
    v18[2] = 0;
    v18[3] = 0;
    v18[4] = v2;
    swift_retain();
    sub_247FFC0C4((uint64_t)v6, (uint64_t)&unk_2692D8098, (uint64_t)v18);
    swift_release();
  }
}

uint64_t sub_248039C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_248039C88, a4, 0);
}

uint64_t sub_248039C88()
{
  sub_24803B230();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248039CE8(void *a1)
{
  id v2 = a1;
  sub_248040D9C(a1);

  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_248174B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_2692D7CE0);
  id v4 = v2;
  uint64_t v5 = sub_248174B70();
  os_log_type_t v6 = sub_2481755B0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    uint64_t v12 = (uint64_t)v4;
    id v8 = v4;
    sub_248175730();
    void *v11 = a1;

    _os_log_impl(&dword_247F93000, v5, v6, "Communicating with modern OS, running tag exchange with session: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v11, -1, -1);
    MEMORY[0x24C574E00](v7, -1, -1);
  }
  else
  {
  }
  sub_248039F4C(v4);
  uint64_t v12 = 3;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  memset(v16, 0, 25);
  v16[25] = 4;
  sub_248040DF4((uint64_t)&v12);
  type metadata accessor for AnyTransportBuilder();
  uint64_t v9 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v9 - 8) + 8))(&v12, v9);
}

uint64_t sub_248039F4C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_2481753D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for SharingServerBase();
  uint64_t WitnessTable = swift_getWitnessTable();
  id v8 = (void *)swift_allocObject();
  v8[2] = v1;
  v8[3] = WitnessTable;
  v8[4] = v1;
  void v8[5] = a1;
  swift_retain_n();
  id v9 = a1;
  sub_248035F38((uint64_t)v5, (uint64_t)&unk_2692D7F88, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_24803A0B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_24803A0D4, a4, 0);
}

uint64_t sub_24803A0D4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 224);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_24803A1B8;
  int8x16_t v3 = *(int8x16_t *)(v0 + 24);
  *(int8x16_t *)(v2 + 24) = vextq_s8(v3, v3, 8uLL);
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 40) = *(void *)v3.i64[0];
  return MEMORY[0x270FA2498](sub_24803A378, v3.i64[0], 0);
}

uint64_t sub_24803A1B8(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 24);
    *(unsigned char *)(v4 + 48) = a1 & 1;
    return MEMORY[0x270FA2498](sub_24803A308, v8, 0);
  }
}

uint64_t sub_24803A308()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24803A32C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return MEMORY[0x270FA2498](sub_24803A378, v2, 0);
}

uint64_t sub_24803A378()
{
  uint64_t v1 = *(void *)(v0 + 32);
  type metadata accessor for SharingServerBase();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  long long v4 = *(_OWORD *)(v0 + 16);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_24803A4A8;
  uint64_t v6 = MEMORY[0x263F8D4F8];
  return MEMORY[0x270FA2360](v0 + 72, v1, WitnessTable, 0xD000000000000015, 0x8000000248191470, sub_248042BA4, v3, v6);
}

uint64_t sub_24803A4A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 32);
    long long v4 = sub_24803A5EC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 32);
    swift_task_dealloc();
    long long v4 = sub_24803A5D0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24803A5D0()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_24803A5EC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_24803A654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_248174B90();
  __swift_project_value_buffer(v4, (uint64_t)qword_2692D7CE0);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_248174B70();
  os_log_type_t v6 = sub_2481755C0();
  if (!os_log_type_enabled(v5, v6))
  {

    swift_bridgeObjectRelease_n();
    if (a3) {
      goto LABEL_5;
    }
LABEL_9:
    long long v24 = 0u;
    long long v25 = 0u;
LABEL_16:
    sub_247FB33D4((uint64_t)&v24, (uint64_t *)&unk_26B13BED0);
    goto LABEL_17;
  }
  uint64_t v7 = (uint8_t *)swift_slowAlloc();
  uint64_t v8 = swift_slowAlloc();
  v23[0] = v8;
  *(_DWORD *)uint64_t v7 = 136315138;
  *(void *)&long long v24 = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F78);
  uint64_t v9 = sub_248175190();
  *(void *)&long long v24 = sub_247FB6D24(v9, v10, v23);
  sub_248175730();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_247F93000, v5, v6, "Received tag exchange response: %s", v7, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24C574E00](v8, -1, -1);
  MEMORY[0x24C574E00](v7, -1, -1);

  if (!a3) {
    goto LABEL_9;
  }
LABEL_5:
  sub_248175810();
  if (*(void *)(a3 + 16) && (unint64_t v11 = sub_247FB6460((uint64_t)v23), (v12 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a3 + 56) + 32 * v11, (uint64_t)&v24);
  }
  else
  {
    long long v24 = 0u;
    long long v25 = 0u;
  }
  sub_247FB84B0((uint64_t)v23);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    int v13 = LOBYTE(v23[0]);
    long long v14 = sub_248174B70();
    os_log_type_t v15 = sub_2481755B0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 67109120;
      LODWORD(v23[0]) = v13;
      sub_248175730();
      _os_log_impl(&dword_247F93000, v14, v15, "Tag exchange resulted in peer deciding to accept: %{BOOL}d", v16, 8u);
      MEMORY[0x24C574E00](v16, -1, -1);
    }

    LOBYTE(v23[0]) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F70);
    return sub_248175360();
  }
LABEL_17:
  os_log_type_t v18 = sub_248174B70();
  os_log_type_t v19 = sub_2481755D0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_247F93000, v18, v19, "Failed to parse tag exchange response", v20, 2u);
    MEMORY[0x24C574E00](v20, -1, -1);
  }

  sub_247FE1388();
  uint64_t v21 = swift_allocError();
  *(_OWORD *)uint64_t v22 = 0u;
  *(_OWORD *)(v22 + 16) = 0u;
  *(_OWORD *)(v22 + 32) = 0u;
  *(unsigned char *)(v22 + 48) = 4;
  v23[0] = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F70);
  return sub_248175350();
}

uint64_t sub_24803AA6C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  os_log_type_t v6 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  if (a3)
  {
    uint64_t v7 = sub_248175010();
    if (!v4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v7 = 0;
  if (a4) {
LABEL_3:
  }
    uint64_t v4 = sub_248175010();
LABEL_4:
  swift_retain();
  id v8 = a2;
  v6(a2, v7, v4);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24803AB50(void *a1)
{
  id v2 = a1;
  sub_248040D9C(a1);

  type metadata accessor for AnyTransportBuilder();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  sub_24812F060((void (*)(unsigned char *))sub_248042B80, (uint64_t)v5);
  v5[81] = 2;
  sub_248040DF4((uint64_t)v5);
  uint64_t v3 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v3 - 8) + 8))(v5, v3);
}

void sub_24803AC5C(void *a1@<X0>, uint64_t *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v40 = a3;
  uint64_t v4 = type metadata accessor for MessageSessionTransport();
  uint64_t v5 = sub_248175700();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v36 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v7);
  uint64_t v39 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  os_log_type_t v15 = (char *)v36 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v41 = (char *)v36 - v16;
  id v17 = objc_msgSend(a1, sel_messageSessionTemplate);
  if (!v17)
  {
    type metadata accessor for SharingServerBase.Failure();
    swift_getWitnessTable();
    uint64_t v19 = swift_allocError();
    unsigned char *v21 = 1;
    swift_willThrow();
    goto LABEL_5;
  }
  id v18 = v17;
  MessageSessionTransport.init(templateSession:identifier:)(v18, 0xD000000000000040, 0x8000000248191420, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    type metadata accessor for SharingServerBase.Failure();
    swift_getWitnessTable();
    uint64_t v19 = swift_allocError();
    unsigned char *v20 = 2;
    swift_willThrow();

LABEL_5:
    *uint64_t v42 = v19;
    return;
  }
  uint64_t v42 = (uint64_t *)v18;
  uint64_t v22 = v41;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v41, v9, v4);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_248174B90();
  __swift_project_value_buffer(v23, (uint64_t)qword_2692D7CE0);
  long long v24 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v24(v15, v22, v4);
  long long v25 = sub_248174B70();
  os_log_type_t v26 = sub_2481755B0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    os_log_t v37 = v25;
    uint64_t v28 = (uint8_t *)v27;
    uint64_t v38 = swift_slowAlloc();
    uint64_t v44 = v38;
    *(_DWORD *)uint64_t v28 = 136315138;
    v36[1] = v28 + 4;
    v24(v39, v15, v4);
    uint64_t v29 = sub_248175190();
    uint64_t v43 = sub_247FB6D24(v29, v30, &v44);
    sub_248175730();
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v15, v4);
    os_log_t v32 = v37;
    _os_log_impl(&dword_247F93000, v37, v26, "Created transport for message session: %s", v28, 0xCu);
    uint64_t v33 = v38;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v28, -1, -1);
  }
  else
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v10 + 8);
    v31(v15, v4);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v35 = v41;
  TransportBuilding.into()(v4, WitnessTable, v40);

  v31(v35, v4);
}

uint64_t sub_24803B180(void *a1)
{
  uint64_t v4 = a1;
  char v5 = 1;
  char v6 = 0;
  id v1 = a1;
  sub_248040DF4((uint64_t)&v4);
  type metadata accessor for AnyTransportBuilder();
  uint64_t v2 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8))(&v4, v2);
}

uint64_t sub_24803B230()
{
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_248174B90();
  __swift_project_value_buffer(v0, (uint64_t)qword_2692D7CE0);
  id v1 = sub_248174B70();
  os_log_type_t v2 = sub_2481755C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_247F93000, v1, v2, "Invalidating sharing service.", v3, 2u);
    MEMORY[0x24C574E00](v3, -1, -1);
  }

  uint64_t v4 = sub_2480364D8();
  objc_msgSend(v4, sel_invalidate);

  uint64_t v7 = 6;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  memset(v11, 0, 25);
  v11[25] = 4;
  sub_248040DF4((uint64_t)&v7);
  type metadata accessor for AnyTransportBuilder();
  uint64_t v5 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v5 - 8) + 8))(&v7, v5);
}

unint64_t sub_24803B3D4()
{
  return 0xD000000000000022;
}

unint64_t sub_24803B3F0(unint64_t result)
{
  if (result >= 0xF) {
    return 15;
  }
  return result;
}

uint64_t sub_24803B400(uint64_t result)
{
  return result;
}

uint64_t sub_24803B408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6E8];
  return MEMORY[0x270F9F940](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24803B47C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D6D8];
  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_24803B4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6D8];
  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24803B558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6D8];
  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

unint64_t sub_24803B5C8@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24803B3F0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24803B5F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24803B400(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_24803B620(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270EF2670](a1, WitnessTable);
}

uint64_t sub_24803B674(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v3 = swift_getWitnessTable();
  unint64_t v4 = sub_248042A7C();
  return MEMORY[0x270EF2658](a1, WitnessTable, v3, v4);
}

unint64_t sub_24803B700()
{
  return 0xD000000000000022;
}

uint64_t sub_24803B720(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v5 = sub_248042A7C();
  return MEMORY[0x270EEE458](a1, a2, WitnessTable, v5);
}

uint64_t sub_24803B794()
{
  os_log_type_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[132] = v2;
  v3[133] = *v2;
  return MEMORY[0x270FA2498](sub_248037050, v2, 0);
}

void sub_24803B868()
{
}

id SharingClientBase.base.getter()
{
  return *(id *)(v0 + 112);
}

id SharingClientBase.queue.getter()
{
  return *(id *)(v0 + 120);
}

uint64_t SharingClientBase.fixedPin.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

id SharingClientBase.peerDevice.getter()
{
  return *(id *)(v0 + 144);
}

uint64_t SharingClientBase.filter.getter()
{
  uint64_t v1 = *(void *)(v0 + 152);
  sub_247F98D10(v1);
  return v1;
}

uint64_t SharingClientBase.stateHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_retain();
  return v1;
}

uint64_t sub_24803B93C(uint64_t a1)
{
  uint64_t v3 = *v1;
  type metadata accessor for MessageSessionTransport();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - v6;
  long long v8 = (void (*)(uint64_t *, uint64_t, char *))v1[21];
  long long v9 = (char *)v1 + *(void *)(v3 + 160);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  v8(v1, a1, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24803BAA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 160);
  swift_beginAccess();
  type metadata accessor for MessageSessionTransport();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SharingClientBase.__allocating_init(base:queue:fixedPin:serviceType:peerDevice:filter:stateHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17 = swift_allocObject();
  SharingClientBase.init(base:queue:fixedPin:serviceType:peerDevice:filter:stateHandler:)(a1, a2, a3, a4, v18, a6, a7, a8, a9, a10);
  return v17;
}

void *SharingClientBase.init(base:queue:fixedPin:serviceType:peerDevice:filter:stateHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_defaultActor_initialize();
  type metadata accessor for MessageSessionTransport();
  type metadata accessor for BluetoothBaseState();
  swift_storeEnumTagMultiPayload();
  v10[14] = a1;
  v10[15] = a2;
  v10[16] = a3;
  v10[17] = a4;
  v10[18] = a6;
  v10[19] = a7;
  v10[20] = a8;
  v10[21] = a9;
  v10[22] = a10;
  return v10;
}

uint64_t SharingClientBase.deinit()
{
  uint64_t v1 = v0;
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  __swift_project_value_buffer(v2, (uint64_t)qword_2692D7CE0);
  uint64_t v3 = sub_248174B70();
  os_log_type_t v4 = sub_2481755B0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl(&dword_247F93000, v3, v4, "SharingClientBase deallocated", v5, 2u);
    MEMORY[0x24C574E00](v5, -1, -1);
  }

  sub_24803E6B4(1);
  swift_bridgeObjectRelease();

  sub_247F98D68(*(void *)(v1 + 152));
  swift_release();
  uint64_t v6 = v1 + *(void *)(*(void *)v1 + 160);
  type metadata accessor for MessageSessionTransport();
  uint64_t v7 = type metadata accessor for BluetoothBaseState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_defaultActor_destroy();
  return v1;
}

uint64_t SharingClientBase.__deallocating_deinit()
{
  SharingClientBase.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24803BEE8()
{
  v1[63] = v0;
  uint64_t v2 = *v0;
  v1[64] = *(void *)(*v0 + 80);
  v1[65] = *(void *)(v2 + 88);
  type metadata accessor for MessageSessionTransport();
  uint64_t v3 = type metadata accessor for BluetoothBaseState();
  v1[66] = v3;
  v1[67] = *(void *)(v3 - 8);
  v1[68] = swift_task_alloc();
  v1[69] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24803BFF8, v0, 0);
}

uint64_t sub_24803BFF8()
{
  uint64_t v1 = v0[69];
  uint64_t v2 = v0[67];
  uint64_t v3 = v0[66];
  sub_24803BAA8(v1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[70] = v5;
  v0[71] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v6 = v0[68];
    uint64_t v7 = v0[66];
    long long v8 = (void *)v0[63];
    swift_storeEnumTagMultiPayload();
    sub_248041A60(v6);
    v5(v6, v7);
    long long v9 = (void *)v8[14];
    objc_msgSend(v9, sel_setDispatchQueue_, v8[15]);
    sub_248175160();
    long long v10 = (void *)sub_248175130();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setLabel_, v10);

    if (v8[17]) {
      uint64_t v11 = (void *)sub_248175130();
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v15 = v0[65];
    uint64_t v17 = v0[63];
    uint64_t v16 = v0[64];
    objc_msgSend(v9, sel_setFixedPIN_, v11, v0 + 22);

    objc_msgSend(v9, sel_setPeerDevice_, *(void *)(v17 + 144));
    sub_248175160();
    uint64_t v18 = (void *)sub_248175130();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setServiceIdentifier_, v18);

    objc_msgSend(v9, sel_setSessionFlags_, 4097);
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v16;
    v20[3] = v15;
    void v20[4] = v19;
    v0[56] = sub_248041BEC;
    v0[57] = v20;
    v0[52] = MEMORY[0x263EF8330];
    v0[53] = 1107296256;
    v0[54] = sub_24803CF80;
    v0[55] = &block_descriptor_76;
    uint64_t v21 = _Block_copy(v0 + 52);
    swift_release();
    objc_msgSend(v9, sel_setPromptForPINHandler_, v21);
    _Block_release(v21);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    uint64_t v23 = (void *)swift_allocObject();
    void v23[2] = v16;
    v23[3] = v15;
    v23[4] = v22;
    v0[14] = sub_248041BF8;
    v0[15] = v23;
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 1107296256;
    v0[12] = sub_248038358;
    v0[13] = &block_descriptor_83;
    long long v24 = _Block_copy(v0 + 10);
    swift_release();
    objc_msgSend(v9, sel_setShowPINHandlerEx_, v24);
    _Block_release(v24);
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    os_log_type_t v26 = (void *)swift_allocObject();
    v26[2] = v16;
    v26[3] = v15;
    v26[4] = v25;
    v0[20] = sub_248041C34;
    v0[21] = v26;
    v0[16] = MEMORY[0x263EF8330];
    v0[17] = 1107296256;
    v0[18] = sub_2480360BC;
    v0[19] = &block_descriptor_90;
    uint64_t v27 = _Block_copy(v0 + 16);
    swift_release();
    objc_msgSend(v9, sel_setHidePINHandler_, v27);
    _Block_release(v27);
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = v16;
    v29[3] = v15;
    v29[4] = v28;
    v0[26] = sub_248041C8C;
    v0[27] = v29;
    v0[22] = MEMORY[0x263EF8330];
    v0[23] = 1107296256;
    v0[24] = sub_2480360BC;
    v0[25] = &block_descriptor_97;
    unint64_t v30 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v9, sel_setSessionStartedHandler_, v30);
    _Block_release(v30);
    uint64_t v31 = swift_allocObject();
    swift_weakInit();
    os_log_t v32 = (void *)swift_allocObject();
    void v32[2] = v16;
    v32[3] = v15;
    v32[4] = v31;
    v0[32] = sub_248041D1C;
    v0[33] = v32;
    v0[28] = MEMORY[0x263EF8330];
    v0[29] = 1107296256;
    v0[30] = sub_2480360BC;
    v0[31] = &block_descriptor_104;
    uint64_t v33 = _Block_copy(v0 + 28);
    swift_release();
    objc_msgSend(v9, sel_setInvalidationHandler_, v33);
    _Block_release(v33);
    uint64_t v34 = swift_allocObject();
    swift_weakInit();
    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = v16;
    v35[3] = v15;
    v35[4] = v34;
    v0[38] = sub_248041D74;
    v0[39] = v35;
    v0[34] = MEMORY[0x263EF8330];
    v0[35] = 1107296256;
    v0[36] = sub_2480360BC;
    v0[37] = &block_descriptor_111;
    id v36 = _Block_copy(v0 + 34);
    swift_release();
    objc_msgSend(v9, sel_setInterruptionHandler_, v36);
    _Block_release(v36);
    uint64_t v37 = swift_allocObject();
    swift_weakInit();
    uint64_t v38 = (void *)swift_allocObject();
    long long v38[2] = v16;
    v38[3] = v15;
    v38[4] = v37;
    v0[44] = sub_248041DCC;
    v0[45] = v38;
    v0[40] = MEMORY[0x263EF8330];
    v0[41] = 1107296256;
    v0[42] = sub_248038E88;
    v0[43] = &block_descriptor_118;
    uint64_t v39 = _Block_copy(v0 + 40);
    swift_release();
    objc_msgSend(v9, sel_setErrorHandler_, v39);
    _Block_release(v39);
    v0[50] = sub_248039368;
    v0[51] = 0;
    v0[46] = MEMORY[0x263EF8330];
    v0[47] = 1107296256;
    v0[48] = sub_248038E88;
    v0[49] = &block_descriptor_121;
    uint64_t v40 = _Block_copy(v0 + 46);
    objc_msgSend(v9, sel_setPairSetupCompletionHandler_, v40);
    _Block_release(v40);
    v0[2] = v0;
    v0[3] = sub_24803C8F8;
    uint64_t v41 = swift_continuation_init();
    v0[58] = MEMORY[0x263EF8330];
    v0[59] = 0x40000000;
    v0[60] = sub_24803989C;
    v0[61] = &block_descriptor_122;
    v0[62] = v41;
    objc_msgSend(v9, sel_activateWithCompletion_);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    type metadata accessor for SharingClientBase.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v12 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
}

uint64_t sub_24803C8F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 576) = v2;
  uint64_t v3 = *(void *)(v1 + 504);
  if (v2) {
    os_log_type_t v4 = sub_24803CC3C;
  }
  else {
    os_log_type_t v4 = sub_24803CA18;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24803CA18()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[70];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[66];
  swift_storeEnumTagMultiPayload();
  sub_248041A60(v2);
  v1(v2, v3);
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[73] = v4;
  void *v4 = v0;
  v4[1] = sub_24803CB08;
  uint64_t v5 = v0[63];
  v4[23] = v5;
  return MEMORY[0x270FA2498](sub_24803DE4C, v5, 0);
}

uint64_t sub_24803CB08()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24803CC3C()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24803CCBC(int a1, int a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_248174B90();
  __swift_project_value_buffer(v7, (uint64_t)qword_2692D7CE0);
  long long v8 = sub_248174B70();
  os_log_type_t v9 = sub_2481755C0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 67109376;
    int v16 = a1;
    sub_248175730();
    *(_WORD *)(v10 + 8) = 1024;
    int v16 = a2;
    sub_248175730();
    _os_log_impl(&dword_247F93000, v8, v9, "promptForPINHandler called with flags: %u and throttleSeconds: %d", (uint8_t *)v10, 0xEu);
    MEMORY[0x24C574E00](v10, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = 0;
    *(void *)(v14 + 24) = 0;
    *(void *)(v14 + 32) = v12;
    *(_DWORD *)(v14 + 40) = a1;
    *(_DWORD *)(v14 + 44) = a2;
    sub_247FFC0C4((uint64_t)v6, (uint64_t)&unk_2692D7FF8, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_24803CEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(_DWORD *)(v6 + 24) = a5;
  *(_DWORD *)(v6 + 28) = a6;
  *(void *)(v6 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24803CF18, a4, 0);
}

uint64_t sub_24803CF18()
{
  sub_24803EB94(*(unsigned int *)(v0 + 24), *(_DWORD *)(v0 + 28), *(void **)(*(void *)(v0 + 16) + 112));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24803CF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_24803CFE0(int a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a4 + 16;
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_248174B90();
  __swift_project_value_buffer(v16, (uint64_t)qword_2692D7CE0);
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_248174B70();
  os_log_type_t v18 = sub_2481755C0();
  BOOL v19 = os_log_type_enabled(v17, v18);
  int v28 = a1;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    v27[1] = v15;
    uint64_t v22 = v21;
    v31[0] = v21;
    *(_DWORD *)uint64_t v20 = 67109378;
    LODWORD(v30) = a1;
    sub_248175730();
    *(_WORD *)(v20 + 8) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_247FB6D24(v29, a3, v31);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, v17, v18, "showPINHandlerEx called with flags: %u and password: %s", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v22, -1, -1);
    MEMORY[0x24C574E00](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v24 = result;
    uint64_t v25 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0;
    *(void *)(v26 + 24) = 0;
    *(void *)(v26 + 32) = v24;
    *(_DWORD *)(v26 + 40) = v28;
    *(void *)(v26 + 48) = v29;
    *(void *)(v26 + 56) = a3;
    swift_bridgeObjectRetain();
    sub_247FFC0C4((uint64_t)v14, a8, v26);
    return swift_release();
  }
  return result;
}

uint64_t sub_24803D2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a4;
  return MEMORY[0x270FA2498](sub_24803D2E4, a4, 0);
}

uint64_t sub_24803D2E4()
{
  sub_24804320C(v0[3], v0[4]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24803D348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA2498](sub_24803D364, a4, 0);
}

uint64_t sub_24803D364()
{
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_248174B90();
  __swift_project_value_buffer(v1, (uint64_t)qword_2692D7CE0);
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755D0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_247F93000, v2, v3, "Received PIN hide but not supported yet", v4, 2u);
    MEMORY[0x24C574E00](v4, -1, -1);
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24803D478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24803D498, a4, 0);
}

uint64_t sub_24803D498()
{
  sub_24803EA7C(*(void **)(*(void *)(v0 + 16) + 112));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24803D4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_248043F40, a4, 0);
}

uint64_t sub_24803D51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), const char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_248174B90();
  __swift_project_value_buffer(v13, (uint64_t)qword_2692D7CE0);
  uint64_t v14 = sub_248174B70();
  os_log_type_t v15 = a4();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_247F93000, v14, v15, a5, v16, 2u);
    MEMORY[0x24C574E00](v16, -1, -1);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    uint64_t v19 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    void v20[4] = v18;
    sub_247FFC0C4((uint64_t)v12, a7, (uint64_t)v20);
    return swift_release();
  }
  return result;
}

uint64_t sub_24803D6FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  *(void *)(v4 + 16) = a4;
  *(void *)(v4 + 24) = *a4;
  return MEMORY[0x270FA2498](sub_24803D744, 0, 0);
}

uint64_t sub_24803D744()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for SharingClientBase.Failure();
  swift_getWitnessTable();
  *(void *)(v0 + 32) = swift_allocError();
  *uint64_t v2 = 4;
  return MEMORY[0x270FA2498](sub_24803D7F4, v1, 0);
}

uint64_t sub_24803D7F4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_24803F61C(v1);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24803D864(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_248174B90();
  __swift_project_value_buffer(v12, (uint64_t)qword_2692D7CE0);
  id v13 = a1;
  id v14 = a1;
  os_log_type_t v15 = sub_248174B70();
  os_log_type_t v16 = sub_2481755D0();
  if (os_log_type_enabled(v15, v16))
  {
    v27[1] = a5;
    uint64_t v17 = a6;
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 138412290;
    if (a1)
    {
      id v20 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v28 = v21;
      sub_248175730();
    }
    else
    {
      uint64_t v28 = 0;
      sub_248175730();
      uint64_t v21 = 0;
    }
    *uint64_t v19 = v21;

    _os_log_impl(&dword_247F93000, v15, v16, "errorHandler called: %@", v18, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v19, -1, -1);
    MEMORY[0x24C574E00](v18, -1, -1);

    a6 = v17;
  }
  else
  {
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v23 = result;
    if (a1)
    {
      uint64_t v24 = sub_2481753D0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 1, 1, v24);
      uint64_t v25 = (void *)swift_allocObject();
      void v25[2] = 0;
      v25[3] = 0;
      v25[4] = v23;
      v25[5] = a1;
      id v26 = a1;
      sub_247FFC0C4((uint64_t)v11, a6, (uint64_t)v25);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24803DB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_24803DB98, a4, 0);
}

uint64_t sub_24803DB98()
{
  sub_24803F61C(*(void **)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24803DBF8(void *a1)
{
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  __swift_project_value_buffer(v2, (uint64_t)qword_2692D7CE0);
  id v3 = a1;
  id v4 = a1;
  oslog = sub_248174B70();
  os_log_type_t v5 = sub_2481755C0();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    if (a1)
    {
      id v8 = a1;
      uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
      sub_248175730();
    }
    else
    {
      sub_248175730();
      uint64_t v9 = 0;
    }
    *uint64_t v7 = v9;

    _os_log_impl(&dword_247F93000, oslog, v5, "pairSetupCompletionHandler called with error: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v7, -1, -1);
    MEMORY[0x24C574E00](v6, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_24803DE2C()
{
  *(void *)(v1 + 184) = v0;
  return MEMORY[0x270FA2498](sub_24803DE4C, v0, 0);
}

uint64_t sub_24803DE4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 18;
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_248174B90();
  v0[24] = __swift_project_value_buffer(v3, (uint64_t)qword_2692D7CE0);
  swift_retain_n();
  id v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755C0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[23];
  if (v6)
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    id v14 = (void *)swift_slowAlloc();
    *(_DWORD *)id v8 = 138412290;
    uint64_t v9 = *(void **)(v7 + 112);
    v1[18] = v9;
    id v10 = v9;
    sub_248175730();
    void *v14 = v9;
    swift_release_n();
    _os_log_impl(&dword_247F93000, v4, v5, "Attempting to pair verify base: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v14, -1, -1);
    MEMORY[0x24C574E00](v8, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v11 = *(void **)(v1[23] + 112);
  v1[25] = v11;
  v1[2] = v1;
  v1[3] = sub_24803E0D8;
  uint64_t v12 = swift_continuation_init();
  v1[18] = MEMORY[0x263EF8330];
  v1[19] = 0x40000000;
  v1[20] = sub_24803989C;
  v1[21] = &block_descriptor_188;
  v1[22] = v12;
  objc_msgSend(v11, sel_pairVerifyWithFlags_completion_, 8, v2);
  return MEMORY[0x270FA23F0](v1 + 2);
}

uint64_t sub_24803E0D8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 208) = v2;
  uint64_t v3 = *(void *)(v1 + 184);
  if (v2) {
    id v4 = sub_24803E260;
  }
  else {
    id v4 = sub_24803E1F8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24803E1F8()
{
  sub_24803EEF4(*(void *)(v0 + 200));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24803E260()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 18;
  uint64_t v3 = (void *)v1[26];
  swift_willThrow();
  id v4 = v3;
  id v5 = v3;
  uint64_t v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755D0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = (void *)v1[26];
  if (v8)
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)id v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v1[18] = v13;
    sub_248175730();
    void *v11 = v13;

    _os_log_impl(&dword_247F93000, v6, v7, "Failed to pair verify with error: %@, attempting pair setup", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v11, -1, -1);
    MEMORY[0x24C574E00](v10, -1, -1);
  }
  else
  {
  }
  id v14 = (void *)v1[25];

  v1[10] = v1;
  v1[11] = sub_24803E4A8;
  uint64_t v15 = swift_continuation_init();
  v1[18] = MEMORY[0x263EF8330];
  v1[19] = 0x40000000;
  v1[20] = sub_24803989C;
  v1[21] = &block_descriptor_189;
  v1[22] = v15;
  objc_msgSend(v14, sel_pairSetupWithFlags_completion_, 8, v2);
  return MEMORY[0x270FA23F0](v1 + 10);
}

uint64_t sub_24803E4A8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 112);
  *(void *)(*v0 + 216) = v2;
  uint64_t v3 = *(void *)(v1 + 184);
  if (v2) {
    id v4 = sub_24803E638;
  }
  else {
    id v4 = sub_24803E5C8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24803E5C8()
{
  sub_24803EEF4(*(void *)(v0 + 200));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24803E638()
{
  uint64_t v1 = *(void **)(v0 + 208);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_24803E6AC()
{
}

void sub_24803E6B4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_248174B90();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_2692D7CE0);
  swift_retain_n();
  uint64_t v9 = sub_248174B70();
  os_log_type_t v10 = sub_2481755B0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v23[1] = v8;
    uint64_t v12 = v11;
    v23[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 138412546;
    char v13 = a1;
    id v14 = v6;
    uint64_t v15 = *(void **)(v2 + 112);
    uint64_t v25 = v15;
    id v16 = v15;
    sub_248175730();
    uint64_t v17 = v23[0];
    *(void *)v23[0] = v15;
    uint64_t v6 = v14;
    a1 = v13;
    swift_release_n();
    *(_WORD *)(v12 + 12) = 1024;
    int v24 = v13 & 1;
    sub_248175730();
    _os_log_impl(&dword_247F93000, v9, v10, "Invalidating %@ for deinit: %{BOOL}d", (uint8_t *)v12, 0x12u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v17, -1, -1);
    MEMORY[0x24C574E00](v12, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  objc_msgSend(*(id *)(v2 + 112), sel_invalidate);
  if (a1)
  {
    uint64_t v18 = sub_248174B70();
    os_log_type_t v19 = sub_2481755C0();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v20 = 0;
      _os_log_impl(&dword_247F93000, v18, v19, "Not changing to invalidated state, we are deinitialized", v20, 2u);
      MEMORY[0x24C574E00](v20, -1, -1);
    }
  }
  else
  {
    uint64_t v21 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = 0;
    v22[3] = 0;
    v22[4] = v2;
    swift_retain();
    sub_247FFC0C4((uint64_t)v6, (uint64_t)&unk_2692D8008, (uint64_t)v22);
    swift_release();
  }
}

uint64_t sub_24803E9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_24803EA1C, a4, 0);
}

uint64_t sub_24803EA1C()
{
  sub_24803F518();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24803EA7C(void *a1)
{
  type metadata accessor for MessageSessionTransport();
  uint64_t v2 = type metadata accessor for BluetoothBaseState();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v6 - v4;
  swift_storeEnumTagMultiPayload();
  sub_248041A60((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24803F740(a1);
}

uint64_t sub_24803EB94(uint64_t a1, int a2, void *a3)
{
  type metadata accessor for MessageSessionTransport();
  uint64_t v6 = type metadata accessor for BluetoothBaseState();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)uint64_t v9 = (a1 << 32) | 1;
  *(_OWORD *)(v9 + 8) = __PAIR128__((uint64_t)a2 >> 31, a2) * 0xDE0B6B3A7640000;
  *((void *)v9 + 3) = sub_248042B78;
  *((void *)v9 + 4) = v10;
  v9[40] = 1;
  swift_storeEnumTagMultiPayload();
  id v11 = a3;
  sub_248041A60((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_24803ED18(uint64_t a1, unint64_t a2, void *a3)
{
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_248174B90();
  __swift_project_value_buffer(v6, (uint64_t)qword_2692D7CE0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_248174B70();
  os_log_type_t v8 = sub_2481755B0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v12 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_247FB6D24(a1, a2, &v12);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, v7, v8, "Trying pair setup with pin: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v10, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v11 = (void *)sub_248175130();
  objc_msgSend(a3, sel_pairSetupTryPIN_, v11);
}

uint64_t sub_24803EEF4(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 88);
  type metadata accessor for MessageSessionTransport();
  uint64_t v5 = type metadata accessor for BluetoothBaseState();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v8 = &v10[-v7];
  uint64_t v11 = v3;
  uint64_t v12 = v4;
  uint64_t v13 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  sub_24812F060((void (*)(unsigned char *))sub_248042B1C, (uint64_t)v8);
  swift_storeEnumTagMultiPayload();
  sub_248041A60((uint64_t)v8);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_24803F060(void *a1@<X0>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  uint64_t v4 = type metadata accessor for MessageSessionTransport();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  os_log_t v32 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v30 - v8;
  uint64_t v10 = sub_248175700();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v30 - v12;
  id v14 = objc_msgSend(a1, sel_messageSessionTemplate);
  if (!v14)
  {
    type metadata accessor for SharingClientBase.Failure();
    swift_getWitnessTable();
    uint64_t v17 = swift_allocError();
    *os_log_type_t v19 = 1;
    swift_willThrow();
    goto LABEL_5;
  }
  id v15 = v14;
  MessageSessionTransport.init(templateSession:identifier:)(v15, 0xD000000000000040, 0x8000000248191420, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    type metadata accessor for SharingClientBase.Failure();
    id v16 = v15;
    swift_getWitnessTable();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = 2;
    swift_willThrow();

LABEL_5:
    uint64_t *v34 = v17;
    return;
  }
  uint64_t v20 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v33, v13, v4);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_248174B90();
  __swift_project_value_buffer(v21, (uint64_t)qword_2692D7CE0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v22(v9, v20, v4);
  uint64_t v23 = sub_248174B70();
  os_log_type_t v24 = sub_2481755B0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v36 = v33;
    uint64_t v34 = (uint64_t *)v15;
    *(_DWORD *)uint64_t v25 = 136315138;
    v30[1] = v25 + 4;
    os_log_t v31 = v23;
    v22(v32, (uint64_t)v9, v4);
    uint64_t v26 = sub_248175190();
    uint64_t v35 = sub_247FB6D24(v26, v27, &v36);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    os_log_t v28 = v31;
    _os_log_impl(&dword_247F93000, v31, v24, "Created transport for message session: %s", v25, 0xCu);
    uint64_t v29 = v33;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v29, -1, -1);
    MEMORY[0x24C574E00](v25, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
}

uint64_t sub_24803F518()
{
  type metadata accessor for MessageSessionTransport();
  uint64_t v0 = type metadata accessor for BluetoothBaseState();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - v2;
  swift_storeEnumTagMultiPayload();
  sub_248041A60((uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_24803F61C(void *a1)
{
  type metadata accessor for MessageSessionTransport();
  uint64_t v2 = type metadata accessor for BluetoothBaseState();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - v4;
  *(void *)uint64_t v5 = a1;
  v5[8] = 1;
  swift_storeEnumTagMultiPayload();
  id v6 = a1;
  sub_248041A60((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_24803F740(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = (void *)sub_248175130();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24817B010;
  unint64_t aBlock = 0xD000000000000010;
  unint64_t v12 = 0x80000002481913A0;
  sub_248175810();
  *(void *)(inited + 96) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 72) = 1;
  sub_247FB49B0(inited);
  uint64_t v7 = (void *)sub_248174FF0();
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = *(void *)(v4 + 80);
  v9[3] = *(void *)(v4 + 88);
  v9[4] = v8;
  id v15 = sub_248042AD0;
  id v16 = v9;
  unint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v12 = 1107296256;
  uint64_t v13 = sub_248040094;
  id v14 = &block_descriptor_162;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(a1, sel_registerRequestID_options_handler_, v5, v7, v10);
  _Block_release(v10);
}

void sub_24803F94C(uint64_t a1, uint64_t a2, void (*a3)(void, void, void))
{
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_248174B90();
  __swift_project_value_buffer(v5, (uint64_t)qword_2692D7CE0);
  swift_bridgeObjectRetain_n();
  id v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755C0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = a3;
    uint64_t v9 = swift_slowAlloc();
    v42[0] = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_248175020();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)&long long v43 = sub_247FB6D24(v10, v12, v42);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v6, v7, "Received tag exchange request: %s", v8, 0xCu);
    swift_arrayDestroy();
    uint64_t v13 = v9;
    a3 = v40;
    MEMORY[0x24C574E00](v13, -1, -1);
    MEMORY[0x24C574E00](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_248175810();
  if (*(void *)(a2 + 16) && (unint64_t v14 = sub_247FB6460((uint64_t)v42), (v15 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a2 + 56) + 32 * v14, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  sub_247FB84B0((uint64_t)v42);
  if (*((void *)&v44 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F68);
    if (swift_dynamicCast())
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_24804028C(1936154996);
        swift_bridgeObjectRetain();
        id v16 = sub_248174B70();
        os_log_type_t v17 = sub_2481755C0();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v18 = swift_slowAlloc();
          uint64_t v41 = a3;
          uint64_t v19 = swift_slowAlloc();
          *(void *)&long long v43 = v19;
          *(_DWORD *)uint64_t v18 = 136315394;
          uint64_t v20 = swift_bridgeObjectRetain();
          uint64_t v21 = MEMORY[0x24C5737F0](v20, MEMORY[0x263F06F78]);
          unint64_t v23 = v22;
          swift_bridgeObjectRelease();
          sub_247FB6D24(v21, v23, (uint64_t *)&v43);
          sub_248175730();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v18 + 12) = 1024;
          sub_248175730();
          _os_log_impl(&dword_247F93000, v16, v17, "Evaluated tags: %s with filter and decided: %{BOOL}d", (uint8_t *)v18, 0x12u);
          swift_arrayDestroy();
          uint64_t v24 = v19;
          a3 = v41;
          MEMORY[0x24C574E00](v24, -1, -1);
          MEMORY[0x24C574E00](v18, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D08);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24817B010;
        *(void *)&long long v43 = 0xD000000000000010;
        *((void *)&v43 + 1) = 0x80000002481913A0;
        sub_248175810();
        uint64_t v36 = MEMORY[0x263F8D4F8];
        *(void *)(inited + 96) = MEMORY[0x263F8D4F8];
        *(unsigned char *)(inited + 72) = 1;
        unint64_t v37 = sub_247FB49B0(inited);
        uint64_t v38 = swift_initStackObject();
        *(_OWORD *)(v38 + 16) = xmmword_24817B010;
        *(void *)&long long v43 = 0x747065636361;
        *((void *)&v43 + 1) = 0xE600000000000000;
        sub_248175810();
        *(void *)(v38 + 96) = v36;
        *(unsigned char *)(v38 + 72) = 1;
        unint64_t v39 = sub_247FB49B0(v38);
        a3(0, v37, v39);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_247FB33D4((uint64_t)&v43, (uint64_t *)&unk_26B13BED0);
  }
  uint64_t v25 = sub_248174B70();
  os_log_type_t v26 = sub_2481755D0();
  if (os_log_type_enabled(v25, v26))
  {
    unint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v27 = 0;
    _os_log_impl(&dword_247F93000, v25, v26, "Failed to parse tag exchange request", v27, 2u);
    MEMORY[0x24C574E00](v27, -1, -1);
  }

  sub_247FE1388();
  os_log_t v28 = (void *)swift_allocError();
  *(_OWORD *)uint64_t v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(_OWORD *)(v29 + 32) = 0u;
  *(unsigned char *)(v29 + 48) = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D08);
  uint64_t v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = xmmword_24817B010;
  *(void *)&long long v43 = 0xD000000000000010;
  *((void *)&v43 + 1) = 0x80000002481913A0;
  sub_248175810();
  uint64_t v31 = MEMORY[0x263F8D4F8];
  *(void *)(v30 + 96) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(v30 + 72) = 1;
  unint64_t v32 = sub_247FB49B0(v30);
  uint64_t v33 = swift_initStackObject();
  *(_OWORD *)(v33 + 16) = xmmword_24817B010;
  *(void *)&long long v43 = 0x747065636361;
  *((void *)&v43 + 1) = 0xE600000000000000;
  sub_248175810();
  *(void *)(v33 + 96) = v31;
  *(unsigned char *)(v33 + 72) = 0;
  unint64_t v34 = sub_247FB49B0(v33);
  a3(v28, v32, v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_248040094(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, void *, uint64_t), uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v6 = sub_248175010();
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = sub_248175010();
  uint64_t v8 = _Block_copy(a4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  swift_retain();
  v5(v6, v7, sub_248042B14, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_2480401A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a1) {
    uint64_t v7 = (void *)sub_248174720();
  }
  else {
    uint64_t v7 = 0;
  }
  if (a2) {
    a2 = (void *)sub_248174FF0();
  }
  if (a3) {
    uint64_t v8 = sub_248174FF0();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = (id)v8;
  (*(void (**)(uint64_t, void *, void *))(a4 + 16))(a4, v7, a2);
}

uint64_t sub_24804028C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v5 = (unint64_t *)(result + 40);
    char v6 = 1;
    uint64_t v7 = 1 - v2;
    do
    {
      if ((v6 & 1) == 0)
      {
        char v6 = 0;
LABEL_11:
        swift_bridgeObjectRelease();
        return v6 & 1;
      }
      uint64_t v8 = *(uint64_t (**)(uint64_t, unint64_t))(v3 + 152);
      if (v8)
      {
        uint64_t v9 = *(v5 - 1);
        unint64_t v10 = *v5;
        sub_247FB6C20(v9, *v5);
        char v6 = v8(v9, v10);
        uint64_t result = sub_247FB6CCC(v9, v10);
        if (!v7) {
          goto LABEL_11;
        }
      }
      else
      {
        char v6 = 1;
        if (!v7) {
          goto LABEL_11;
        }
      }
      v5 += 2;
      ++v7;
    }
    while (v7 != 1);
    __break(1u);
  }
  else
  {
    char v6 = 1;
    return v6 & 1;
  }
  return result;
}

BOOL sub_248040360(char *a1, char *a2)
{
  return sub_247FC5EB8(*a1, *a2);
}

uint64_t sub_24804036C()
{
  return sub_247FC64B0();
}

uint64_t sub_248040374()
{
  return sub_247FC5EC8();
}

uint64_t sub_24804037C()
{
  return sub_248175EC0();
}

uint64_t SharingClientBase.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_2480403C8()
{
  return SharingClientBase.unownedExecutor.getter();
}

uint64_t sub_2480403E4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_247FCB950;
  return sub_24803BEE8();
}

void sub_248040474()
{
}

id BLEDevice.into()()
{
  uint64_t v1 = sub_2481748C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D28);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v14 = (char *)&v24 - v13;
  if (!*(void *)(v0 + 8))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  sub_248174860();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_6:
    id v16 = &qword_2692D7D20;
    uint64_t v15 = (uint64_t)v7;
    goto LABEL_7;
  }
  sub_248041E08((uint64_t)v7, (uint64_t)v14);
  sub_248041E70((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v12, 1, v1) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v12, v1);
    id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F6C210]), sel_init);
    unint64_t v23 = (void *)sub_248174880();
    objc_msgSend(v21, sel_setIdentifier_, v23);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    sub_247FB33D4((uint64_t)v14, &qword_2692D7D28);
    return v21;
  }
  sub_247FB33D4((uint64_t)v14, &qword_2692D7D28);
  uint64_t v15 = (uint64_t)v12;
  id v16 = &qword_2692D7D28;
LABEL_7:
  sub_247FB33D4(v15, v16);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_248174B90();
  __swift_project_value_buffer(v17, (uint64_t)qword_2692D7CE0);
  uint64_t v18 = sub_248174B70();
  os_log_type_t v19 = sub_2481755D0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_247F93000, v18, v19, "Cannot transform BLEDevice: into SFDevice", v20, 2u);
    MEMORY[0x24C574E00](v20, -1, -1);
  }

  return 0;
}

uint64_t DiscoveryModel.FlowKind.into()()
{
  if (*v0 == 1) {
    return 43;
  }
  else {
    return 32;
  }
}

uint64_t sub_248040898(void (*a1)(uint64_t *__return_ptr, BOOL), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  BOOL v9 = sub_2480409E4();
  a1(&v17, v9);
  uint64_t v10 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80A0);
  uint64_t v11 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80A8);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 24) = 0;
  *(void *)(v12 + 16) = v10;
  *(void *)(v11 + 24) = v12;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80B0);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 32) = 0;
  *(void *)(v14 + 16) = sub_248043D1C;
  *(void *)(v14 + 24) = v13;
  *(void *)(v11 + 16) = v14;
  uint64_t v15 = *(void *)(v5 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v15 + 24));
  sub_248043D20((void *)(v15 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v15 + 24));
  swift_release();
  swift_release();
  return v11;
}

BOOL sub_2480409E4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_248040D48((void *)(v1 + 16), &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v6;
  swift_release();
  if (v2)
  {
    swift_retain();
    sub_248040AEC();
    uint64_t v3 = *(void *)(v0 + 16);
    MEMORY[0x270FA5388](v4);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
    sub_248043D20((void *)(v3 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
    swift_release();
    swift_release();
  }
  return v2 != 0;
}

void sub_248040AEC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_248040C6C((void **)(v1 + 16), &v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v7;
  swift_release();
  uint64_t v7 = 0;
  uint64_t v3 = *(void *)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_248043D80((id *)(v3 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  swift_release();

  uint64_t v4 = *(void *)(v0 + 16);
  swift_retain();
  swift_release();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 32));
  sub_248040C9C((void *)(v4 + 16), (uint64_t (**)(uint64_t *))&v7);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 32));
  uint64_t v5 = (void (*)(void **))v7;
  swift_release();
  if (v5)
  {
    if (v2)
    {
      uint64_t v7 = v2;
      id v6 = v2;
      sub_247F98D10((uint64_t)v5);
      v5(&v7);
      sub_247F98D68((uint64_t)v5);
      sub_247F98D68((uint64_t)v5);
    }
    else
    {
      sub_247F98D68((uint64_t)v5);
    }
  }
  else
  {
  }
}

id sub_248040C6C@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

void *sub_248040C9C@<X0>(void *result@<X0>, uint64_t (**a2)(uint64_t *)@<X8>)
{
  uint64_t v2 = result;
  uint64_t v5 = *result;
  uint64_t v4 = (uint64_t (*)(uint64_t *))result[1];
  if (*result)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    uint64_t result = (void *)swift_allocObject();
    uint64_t v4 = (uint64_t (*)(uint64_t *))result;
    result[2] = sub_248043DC8;
    result[3] = v6;
    uint64_t v7 = sub_248043D1C;
  }
  else
  {
    uint64_t v7 = 0;
  }
  *uint64_t v2 = 0;
  v2[1] = 0;
  *a2 = v7;
  a2[1] = v4;
  return result;
}

uint64_t sub_248040D48@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_248040D68()
{
  swift_beginAccess();
  return *(void *)(v0 + 232);
}

void sub_248040D9C(void *a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 232);
  *(void *)(v1 + 232) = a1;
  id v4 = a1;

  sub_2480366F0();
}

uint64_t sub_248040DF4(uint64_t a1)
{
  swift_beginAccess();
  type metadata accessor for AnyTransportBuilder();
  uint64_t v3 = type metadata accessor for BluetoothBaseState();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + 240, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v1 + 240, a1, v3);
  swift_endAccess();
  sub_248036B0C((uint64_t)v6);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_248040F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, char a9, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v33 = a7;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v27 = a3;
  uint64_t v34 = a14;
  uint64_t v31 = a6;
  uint64_t v32 = a13;
  uint64_t v30 = a12;
  uint64_t v18 = *a10;
  uint64_t v17 = a10[1];
  uint64_t v19 = a10[2];
  uint64_t v20 = a10[3];
  uint64_t v21 = swift_defaultActor_initialize();
  *(_OWORD *)(v14 + 232) = 0u;
  *(_OWORD *)(v14 + 305) = 0u;
  *(_OWORD *)(v14 + 280) = 0u;
  *(_OWORD *)(v14 + 296) = 0u;
  *(_OWORD *)(v14 + 248) = 0u;
  *(_OWORD *)(v14 + 264) = 0u;
  *(unsigned char *)(v14 + 321) = 4;
  *(void *)(v14 + 328) = 0;
  if (qword_2692D4DA8 != -1) {
    uint64_t v21 = swift_once();
  }
  MEMORY[0x270FA5388](v21);
  v26[2] = a11;
  *(void *)(v14 + 112) = sub_248040898((void (*)(uint64_t *__return_ptr, BOOL))sub_248043CD8, (uint64_t)v26, (uint64_t)sub_248036E10, 0);
  *(void *)(v14 + 120) = a1;
  uint64_t v22 = v27;
  *(void *)(v14 + 128) = a2;
  *(void *)(v14 + 136) = v22;
  uint64_t v23 = v29;
  *(void *)(v14 + 144) = v28;
  *(void *)(v14 + 152) = v23;
  *(void *)(v14 + 160) = v31;
  *(_DWORD *)(v14 + 168) = v33;
  *(unsigned char *)(v14 + 172) = a9;
  *(void *)(v14 + 176) = v18;
  *(void *)(v14 + 184) = v17;
  *(void *)(v14 + 192) = v19;
  *(void *)(v14 + 200) = v20;
  uint64_t v24 = v30;
  *(void *)(v14 + 208) = v32;
  *(void *)(v14 + 216) = v34;
  *(void *)(v14 + 224) = v24;
  return v14;
}

uint64_t type metadata accessor for SharingServerBase.Failure()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2480410D0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_248041108(int a1, uint64_t a2, unint64_t a3)
{
  return sub_24803CFE0(a1, a2, a3, v3[4], v3[2], v3[3], (uint64_t)&unk_26FC40800, (uint64_t)&unk_2692D8088);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_24804115C()
{
  return sub_24803D51C(v0[4], v0[2], v0[3], MEMORY[0x263F90278], "hidePINHandler called", (uint64_t)&unk_26FC407D8, (uint64_t)&unk_2692D8078);
}

uint64_t sub_2480411B4(void *a1)
{
  return sub_248038954(a1, v1[4], v1[2], v1[3], "sessionStartedHandler called with session: %@", (uint64_t)&unk_26FC407B0, (uint64_t)&unk_2692D8068);
}

uint64_t sub_2480411F8(void *a1, void *a2)
{
  return sub_2480384D8(a1, a2, *(void *)(v2 + 32));
}

uint64_t sub_248041204(void *a1)
{
  return sub_248038954(a1, v1[4], v1[2], v1[3], "sessionSecuredHandler called with session: %@", (uint64_t)&unk_26FC40760, (uint64_t)&unk_2692D8048);
}

uint64_t sub_248041248()
{
  return sub_24803D51C(v0[4], v0[2], v0[3], MEMORY[0x263F90278], "invalidationHandler called", (uint64_t)&unk_26FC40738, (uint64_t)&unk_2692D8038);
}

uint64_t sub_2480412A0()
{
  return sub_24803D51C(v0[4], v0[2], v0[3], MEMORY[0x263F90280], "interruptionHandler called", (uint64_t)&unk_26FC40710, (uint64_t)&unk_2692D8028);
}

uint64_t sub_2480412F8(void *a1)
{
  return sub_24803D864(a1, v1[4], v1[2], v1[3], (uint64_t)&unk_26FC406E8, (uint64_t)&unk_2692D8018);
}

void sub_248041334(void *a1)
{
}

uint64_t type metadata accessor for SharingClientBase.Failure()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_248041358(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(unsigned int *)(v2 + 168);
  v8[0] = a1;
  v8[1] = a2;
  v8[3] = 0;
  v8[4] = 0;
  v8[2] = v5;
  char v9 = 0;
  char v10 = 1;
  swift_bridgeObjectRetain();
  sub_248040DF4((uint64_t)v8);
  type metadata accessor for AnyTransportBuilder();
  uint64_t v6 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(void *, uint64_t))(*(void *)(v6 - 8) + 8))(v8, v6);
}

uint64_t sub_24804143C()
{
  sub_248040D9C(0);
  uint64_t v2 = 4;
  long long v3 = 0u;
  long long v4 = 0u;
  long long v5 = 0u;
  memset(v6, 0, 25);
  v6[25] = 4;
  sub_248040DF4((uint64_t)&v2);
  type metadata accessor for AnyTransportBuilder();
  uint64_t v0 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v0 - 8) + 8))(&v2, v0);
}

void sub_2480414FC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v35 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F70);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = v6;
  uint64_t v36 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DA0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_248174B90();
  __swift_project_value_buffer(v7, (uint64_t)qword_2692D7CE0);
  swift_bridgeObjectRetain_n();
  id v8 = a2;
  char v9 = sub_248174B70();
  os_log_type_t v10 = sub_2481755C0();
  BOOL v11 = os_log_type_enabled(v9, v10);
  id v33 = v8;
  if (v11)
  {
    uint64_t v12 = swift_slowAlloc();
    *(void *)&long long v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v40 = v32;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x24C5737F0](v13, MEMORY[0x263F06F78]);
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_247FB6D24(v14, v16, &v40);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t v39 = (uint64_t)v8;
    id v17 = v8;
    sub_248175730();
    uint64_t v18 = v31;
    *(void *)long long v31 = v8;

    _os_log_impl(&dword_247F93000, v9, v10, "Exchanging tags: %s with session: %@", (uint8_t *)v12, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v18, -1, -1);
    uint64_t v19 = v32;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v19, -1, -1);
    MEMORY[0x24C574E00](v12, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = sub_248175130();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D08);
  uint64_t inited = swift_initStackObject();
  long long v31 = xmmword_24817B010;
  *(_OWORD *)(inited + 16) = xmmword_24817B010;
  uint64_t v40 = 0xD000000000000010;
  unint64_t v41 = 0x80000002481913A0;
  sub_248175810();
  *(void *)(inited + 96) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(inited + 72) = 1;
  sub_247FB49B0(inited);
  uint64_t v21 = (void *)sub_248174FF0();
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = v31;
  uint64_t v40 = 1936154996;
  unint64_t v41 = 0xE400000000000000;
  sub_248175810();
  *(void *)(v22 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F68);
  *(void *)(v22 + 72) = a1;
  swift_bridgeObjectRetain();
  sub_247FB49B0(v22);
  uint64_t v23 = (void *)sub_248174FF0();
  swift_bridgeObjectRelease();
  uint64_t v25 = v36;
  uint64_t v24 = v37;
  uint64_t v26 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v35, v38);
  unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v28 + v27, v25, v26);
  long long v44 = sub_248042C74;
  uint64_t v45 = v28;
  uint64_t v40 = MEMORY[0x263EF8330];
  unint64_t v41 = 1107296256;
  uint64_t v42 = sub_24803AA6C;
  long long v43 = &block_descriptor_176;
  uint64_t v29 = _Block_copy(&v40);
  swift_release();
  uint64_t v30 = (void *)v32;
  objc_msgSend(v33, sel_sendRequestID_options_request_responseHandler_, v32, v21, v23, v29);
  _Block_release(v29);
}

uint64_t sub_248041A60(uint64_t a1)
{
  uint64_t v3 = *v1;
  type metadata accessor for MessageSessionTransport();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-v6];
  id v8 = (char *)v1 + *(void *)(v3 + 160);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 24))(v8, a1, v4);
  swift_endAccess();
  sub_24803B93C((uint64_t)v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_248041BEC(int a1, int a2)
{
  return sub_24803CCBC(a1, a2);
}

uint64_t sub_248041BF8(int a1, uint64_t a2, unint64_t a3)
{
  return sub_24803CFE0(a1, a2, a3, v3[4], v3[2], v3[3], (uint64_t)&unk_26FC40648, (uint64_t)&unk_2692D7FE8);
}

uint64_t sub_248041C34()
{
  return sub_24803D51C(v0[4], v0[2], v0[3], MEMORY[0x263F90278], "hidePINHandler called", (uint64_t)&unk_26FC40620, (uint64_t)&unk_2692D7FD8);
}

uint64_t sub_248041C8C()
{
  return sub_24803D51C(v0[4], v0[2], v0[3], MEMORY[0x263F90278], "sessionStartedHandler called", (uint64_t)&unk_26FC405F8, (uint64_t)&unk_2692D7FC8);
}

uint64_t sub_248041CE4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_248041D1C()
{
  return sub_24803D51C(v0[4], v0[2], v0[3], MEMORY[0x263F90278], "invalidationHandler called", (uint64_t)&unk_26FC405D0, (uint64_t)&unk_2692D7FB8);
}

uint64_t sub_248041D74()
{
  return sub_24803D51C(v0[4], v0[2], v0[3], MEMORY[0x263F90280], "interruptionHandler called", (uint64_t)&unk_26FC405A8, (uint64_t)&unk_2692D7FA8);
}

uint64_t sub_248041DCC(void *a1)
{
  return sub_24803D864(a1, v1[4], v1[2], v1[3], (uint64_t)&unk_26FC40580, (uint64_t)&unk_2692D7F98);
}

uint64_t sub_248041E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248041E70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_248041EDC()
{
  unint64_t result = qword_2692D7D30[0];
  if (!qword_2692D7D30[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2692D7D30);
  }
  return result;
}

uint64_t sub_248041F30()
{
  return swift_getWitnessTable();
}

uint64_t sub_248041F4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_248041F68@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_2480365D0();
  *a1 = result;
  return result;
}

uint64_t sub_248041F94(int *a1)
{
  return sub_248036604(*a1);
}

uint64_t sub_248041FBC()
{
  return 16;
}

__n128 sub_248041FC8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

id sub_248041FD4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = (void *)sub_248040D68();
  *a1 = v2;
  return v2;
}

void sub_248042010(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_248040D9C(v1);
}

uint64_t sub_248042060()
{
  return 16;
}

__n128 sub_24804206C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_248042078@<X0>(uint64_t a1@<X8>)
{
  return sub_248036C28(a1);
}

uint64_t sub_24804209C(uint64_t a1)
{
  return sub_248040DF4(a1);
}

uint64_t sub_2480420C0()
{
  return 16;
}

__n128 sub_2480420CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2480420D8@<X0>(uint64_t a1@<X8>)
{
  return sub_24803BAA8(a1);
}

uint64_t sub_2480420FC(uint64_t a1)
{
  return sub_248041A60(a1);
}

uint64_t sub_248042120()
{
  return 16;
}

__n128 sub_24804212C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

unsigned char *storeEnumTagSinglePayload for SharingBaseServiceType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2480421D4);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingBaseServiceType()
{
  return &type metadata for SharingBaseServiceType;
}

uint64_t sub_24804220C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SharingServerBase()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SharingServerBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SharingServerBase);
}

uint64_t dispatch thunk of SharingServerBase.pinType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of SharingServerBase.pinType.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of SharingServerBase.pinType.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of SharingServerBase.session.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of SharingServerBase.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of SharingServerBase.__allocating_init(queue:advertisementRate:fixedPin:targetAuthTag:pinType:serviceType:deviceActionType:legacySymptomReport:service:tags:stateHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t dispatch thunk of SharingServerBase.activate()()
{
  unsigned int v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 344) + **(int **)(*(void *)v0 + 344));
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_247FD79D0;
  return v4();
}

uint64_t dispatch thunk of SharingServerBase.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t sub_248042544()
{
  type metadata accessor for MessageSessionTransport();
  uint64_t result = type metadata accessor for BluetoothBaseState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SharingClientBase()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SharingClientBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SharingClientBase);
}

uint64_t dispatch thunk of SharingClientBase.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of SharingClientBase.__allocating_init(base:queue:fixedPin:serviceType:peerDevice:filter:stateHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of SharingClientBase.activate()()
{
  unsigned int v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 200) + **(int **)(*(void *)v0 + 200));
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *id v2 = v1;
  v2[1] = sub_247FCB950;
  return v4();
}

uint64_t dispatch thunk of SharingClientBase.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

unsigned char *sub_2480427B0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24804287CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_2480428A4(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_248042934(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248042A00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

uint64_t sub_248042A28()
{
  return swift_getWitnessTable();
}

uint64_t sub_248042A44()
{
  return swift_getWitnessTable();
}

uint64_t sub_248042A60()
{
  return swift_getWitnessTable();
}

unint64_t sub_248042A7C()
{
  unint64_t result = qword_2692D7F60;
  if (!qword_2692D7F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7F60);
  }
  return result;
}

void sub_248042AD0(uint64_t a1, uint64_t a2, void (*a3)(void, void, void))
{
}

uint64_t sub_248042ADC()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_248042B14(uint64_t a1, void *a2, uint64_t a3)
{
  sub_2480401A8(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_248042B1C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24803F060(*(void **)(v2 + 32), a1, a2);
}

uint64_t sub_248042B40()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_248042B78(uint64_t a1, unint64_t a2)
{
  sub_24803ED18(a1, a2, *(void **)(v2 + 16));
}

void sub_248042B80(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24803AC5C(*(void **)(v2 + 32), a1, a2);
}

void sub_248042BA4(uint64_t a1)
{
  sub_2480414FC(*(void *)(v1 + 24), *(void **)(v1 + 32), a1);
}

uint64_t sub_248042BE0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F70);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_248042C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F70);
  return sub_24803A654(a1, a2, a3);
}

uint64_t sub_248042D04(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_247FD79D0;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24803A0D4, v5, 0);
}

uint64_t sub_248042DBC()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_247FD79D0;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x270FA2498](sub_24803DB98, v3, 0);
}

uint64_t sub_248042E68()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_248042E70()
{
  uint64_t v2 = *(void **)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[2] = v2;
  v3[3] = *v2;
  return MEMORY[0x270FA2498](sub_24803D744, 0, 0);
}

uint64_t sub_248042F40()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_248042F48()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_248043F40, v2, 0);
}

uint64_t sub_248042FF0()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_248042FF8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_24803D498, v2, 0);
}

uint64_t sub_2480430A0()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_2480430A8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  return MEMORY[0x270FA2498](sub_24803D364, v2, 0);
}

uint64_t sub_248043154()
{
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[3] = v4;
  v5[4] = v3;
  v5[1] = sub_247FD79D0;
  v5[2] = v2;
  return MEMORY[0x270FA2498](sub_24803D2E4, v2, 0);
}

uint64_t sub_24804320C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MessageSessionTransport();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v9 - v6;
  *(void *)uint64_t v7 = a1;
  *((void *)v7 + 1) = a2;
  *((void *)v7 + 3) = 0;
  *((void *)v7 + 4) = 0;
  *((void *)v7 + 2) = 1;
  v7[40] = 0;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_248041A60((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24804333C()
{
  return objectdestroy_196Tm(48);
}

uint64_t sub_248043344()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  uint64_t v4 = *(void *)(v0 + 40);
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[3] = v4;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_24803CF18, v2, 0);
}

uint64_t sub_2480433F8()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_248043400()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FCB950;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_24803EA1C, v2, 0);
}

void sub_2480434A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2480397E4(a1, a2, a3, *(void *)(v3 + 16));
}

unint64_t sub_2480434B0()
{
  unint64_t result = qword_2692D5BF8;
  if (!qword_2692D5BF8)
  {
    sub_2481748C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5BF8);
  }
  return result;
}

uint64_t objectdestroy_192Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_248043554()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_247FD79D0;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x270FA2498](sub_248038E28, v3, 0);
}

uint64_t sub_248043600()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_248043608()
{
  uint64_t v2 = *(void **)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[2] = v2;
  v3[3] = *v2;
  return MEMORY[0x270FA2498](sub_248038CE8, 0, 0);
}

uint64_t sub_2480436D8()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_2480436E0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_248043F3C, v2, 0);
}

uint64_t sub_24804378C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_247FD79D0;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x270FA2498](sub_248038C20, v3, 0);
}

uint64_t sub_248043838()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_248043888()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_248038868, v2, 0);
}

uint64_t objectdestroy_178Tm()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24804397C()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_247FD79D0;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x270FA2498](sub_248038410, v3, 0);
}

uint64_t sub_248043A28()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_248043A30()
{
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  return MEMORY[0x270FA2498](sub_248043E40, v2, 0);
}

uint64_t objectdestroy_212Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_248043B24()
{
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[3] = v4;
  v5[4] = v3;
  v5[1] = sub_247FD79D0;
  v5[2] = v2;
  return MEMORY[0x270FA2498](sub_2480382F4, v2, 0);
}

uint64_t sub_248043BDC()
{
  return objectdestroy_196Tm(40);
}

uint64_t objectdestroy_196Tm(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_248043C30()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FD79D0;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_248039C88, v2, 0);
}

id sub_248043CD8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

uint64_t sub_248043CE4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248043D20(void *a1)
{
  return sub_248043D38(a1);
}

uint64_t sub_248043D38(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_release();
  *a1 = v3;
  return swift_retain();
}

id sub_248043D80(id *a1)
{
  uint64_t v3 = **(void ***)(v1 + 16);

  *a1 = v3;
  return v3;
}

uint64_t sub_248043DC8(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return v2(&v4);
}

uint64_t sub_248043E04(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = *a1;
  return v2(&v4);
}

uint64_t sub_248043F90()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_completed);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_248044024()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80C8);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80D0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  os_log_type_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v11 = (unsigned char *)(v0 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_completed);
  swift_beginAccess();
  unsigned char *v11 = 1;
  uint64_t v12 = v0 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_cachedContinuation;
  swift_beginAccess();
  sub_24804425C(v12, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_2480442C4((uint64_t)v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  sub_248175360();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
  swift_beginAccess();
  sub_248044324((uint64_t)v4, v12);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24804425C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2480442C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_248044324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2480443D4()
{
  v1[5] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  v1[6] = swift_task_alloc();
  sub_2481753A0();
  v1[7] = sub_248175390();
  uint64_t v3 = sub_248175340();
  v1[8] = v3;
  v1[9] = v2;
  return MEMORY[0x270FA2498](sub_24804449C, v3, v2);
}

uint64_t sub_24804449C()
{
  uint64_t v1 = (unsigned char *)(v0[5] + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_completed);
  swift_beginAccess();
  if (*v1)
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[5];
    uint64_t v5 = OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_cachedTask;
    if (*(void *)(v4 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_cachedTask))
    {
      uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_cachedTask);
    }
    else
    {
      uint64_t v7 = v0[6];
      uint64_t v8 = sub_2481753D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
      uint64_t v9 = swift_allocObject();
      swift_unknownObjectWeakInit();
      os_log_type_t v10 = (void *)swift_allocObject();
      v10[2] = 0;
      v10[3] = 0;
      v10[4] = v9;
      uint64_t v6 = sub_247FFC0C4(v7, (uint64_t)&unk_2692D80F8, (uint64_t)v10);
      *(void *)(v4 + v5) = v6;
      swift_retain();
      swift_release();
    }
    v0[10] = v6;
    swift_retain();
    BOOL v11 = (void *)swift_task_alloc();
    v0[11] = v11;
    void *v11 = v0;
    v11[1] = sub_248044698;
    return MEMORY[0x270FA1FD0]();
  }
}

uint64_t sub_248044698()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return MEMORY[0x270FA2498](sub_2480447DC, v3, v2);
}

uint64_t sub_2480447DC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248044844()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2480449E4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  sub_2481753A0();
  v2[4] = sub_248175390();
  uint64_t v4 = sub_248175340();
  return MEMORY[0x270FA2498](sub_248044A7C, v4, v3);
}

uint64_t sub_248044A7C()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = (const void *)v0[2];
  swift_release();
  v0[5] = _Block_copy(v2);
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  void *v4 = v0;
  v4[1] = sub_248044B2C;
  return sub_2480443D4();
}

uint64_t sub_248044B2C()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 40);
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  id v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_248044C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a4;
  return MEMORY[0x270FA2498](sub_248044C84, 0, 0);
}

uint64_t sub_248044C84()
{
  uint64_t v1 = v0[8] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x24C574EC0](v1);
  v0[9] = v2;
  if (!v2)
  {
LABEL_4:
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  id v3 = (void *)v2;
  uint64_t v4 = (unsigned char *)(v2 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_completed);
  swift_beginAccess();
  if (*v4 == 1)
  {

    goto LABEL_4;
  }
  uint64_t v7 = swift_task_alloc();
  v0[10] = v7;
  *(void *)(v7 + 16) = v3;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[11] = v8;
  void *v8 = v0;
  v8[1] = sub_248044DFC;
  return MEMORY[0x270FA2318]();
}

uint64_t sub_248044DFC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_248044F14, 0, 0);
}

uint64_t sub_248044F14()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248044F74()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_248044FB4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FCB950;
  v3[8] = v2;
  return MEMORY[0x270FA2498](sub_248044C84, 0, 0);
}

uint64_t sub_248045060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80C8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80D0);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a2 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_cachedContinuation;
  swift_beginAccess();
  sub_248044324((uint64_t)v6, v9);
  return swift_endAccess();
}

id AISFlowTask.__deallocating_deinit()
{
  if (*(void *)&v0[OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_cachedTask])
  {
    swift_retain();
    sub_2481754A0();
    swift_release();
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISFlowTask();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AISFlowTask()
{
  uint64_t result = qword_2692D8110;
  if (!qword_2692D8110) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id AISFlowTask.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id AISFlowTask.init()()
{
  id v1 = &v0[OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_cachedContinuation];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D80D0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_cachedTask] = 0;
  v0[OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_completed] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for AISFlowTask();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t AISFlowTaskInfoProtocol_Internal.complete(after:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_2481753D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a2;
  v9[5] = v2;
  v9[6] = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_247FFC0C4((uint64_t)v7, (uint64_t)&unk_2692D8108, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_2480455DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 120) = a4;
  *(void *)(v5 + 128) = a5;
  return MEMORY[0x270FA2498](sub_2480455FC, 0, 0);
}

uint64_t sub_2480455FC()
{
  if (objc_msgSend(*(id *)(v0 + 120), sel_completed))
  {
    id v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(void **)(v0 + 128);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_248045738;
    uint64_t v4 = swift_continuation_init();
    *(void *)(v0 + 80) = MEMORY[0x263EF8330];
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_248045D90;
    *(void *)(v0 + 104) = &block_descriptor_0;
    *(void *)(v0 + 112) = v4;
    objc_msgSend(v3, sel_waitUntilLoadedWithCompletionHandler_, v0 + 80);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
}

uint64_t sub_248045738()
{
  return MEMORY[0x270FA2498](sub_248045818, 0, 0);
}

uint64_t sub_248045818()
{
  objc_msgSend(*(id *)(v0 + 120), sel_complete);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248045880()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2480458C8()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_247FD79D0;
  *(_OWORD *)(v2 + 120) = v3;
  return MEMORY[0x270FA2498](sub_2480455FC, 0, 0);
}

uint64_t sub_248045974@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  long long v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_completed);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_2480459C8(char *a1, void *a2)
{
  char v2 = *a1;
  long long v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC12AppleIDSetup11AISFlowTask_completed);
  uint64_t result = swift_beginAccess();
  *long long v3 = v2;
  return result;
}

uint64_t sub_248045A18()
{
  return type metadata accessor for AISFlowTask();
}

void sub_248045A20()
{
  sub_248045C48();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AISFlowTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISFlowTask);
}

uint64_t dispatch thunk of AISFlowTask.completed.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AISFlowTask.complete()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of AISFlowTask.waitUntilLoaded()()
{
  char v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0xB8);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_247FD79D0;
  return v5();
}

void sub_248045C48()
{
  if (!qword_2692D8128)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D80D0);
    unint64_t v0 = sub_248175700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2692D8128);
    }
  }
}

uint64_t sub_248045CA4()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248045CE4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_247FD79D0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2692D8130 + dword_2692D8130);
  return v5(v2, v3);
}

uint64_t sub_248045D90(uint64_t a1)
{
  return MEMORY[0x270FA2400](*(void *)(a1 + 32));
}

uint64_t sub_248045D9C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692DB1E0 + dword_2692DB1E0);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_27Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_248045EA0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2692DB1E8 + dword_2692DB1E8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_248045F6C(uint64_t a1)
{
  return sub_248045060(a1, *(void *)(v1 + 16));
}

uint64_t FamilyCircleProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FamilyCircleProvider.init()()
{
  return v0;
}

uint64_t sub_248045F8C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_2692D8150 + dword_2692D8150);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24804602C;
  return v3();
}

uint64_t sub_24804602C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_24804612C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return MEMORY[0x270FA2410](a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return MEMORY[0x270FA2410](a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;
  return swift_continuation_throwingResume();
}

uint64_t FamilyCircleProvider.deinit()
{
  return v0;
}

uint64_t FamilyCircleProvider.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t sub_248046204()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_2692D8150 + dword_2692D8150);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2480468F4;
  return v3();
}

uint64_t sub_2480462A4()
{
  return MEMORY[0x270FA2498](sub_2480462C0, 0, 0);
}

uint64_t sub_2480462C0()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F3BF48]), sel_init);
  v0[16] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_2480463DC;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_24804612C;
  v0[13] = &block_descriptor_1;
  v0[14] = v2;
  objc_msgSend(v1, sel_startRequestWithCompletionHandler_, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_2480463DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 136) = v1;
  if (v1) {
    uint64_t v2 = sub_248046554;
  }
  else {
    uint64_t v2 = sub_2480464EC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480464EC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_248046554()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t dispatch thunk of FamilyCircleProviderProtocol.fetchFamilyCircle()(uint64_t a1, uint64_t a2)
{
  id v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_2480468F8;
  return v7(a1, a2);
}

uint64_t type metadata accessor for FamilyCircleProvider()
{
  return self;
}

uint64_t method lookup function for FamilyCircleProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FamilyCircleProvider);
}

uint64_t dispatch thunk of FamilyCircleProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of FamilyCircleProvider.fetchFamilyCircle()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 88) + **(int **)(*(void *)v0 + 88));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_2480467F8;
  return v4();
}

uint64_t sub_2480467F8(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

id SimpleRepairModelExchange.queue.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t SimpleRepairModelExchange.init(queue:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t SimpleRepairModelExchange.receiveModelUpdate(_:with:)()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of RepairModelExchange.queue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RepairModelExchange.receiveModelUpdate(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

ValueMetadata *type metadata accessor for SimpleRepairModelExchange()
{
  return &type metadata for SimpleRepairModelExchange;
}

uint64_t Message.Metrics.epochsByStage.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Message.Metrics.epochsByStage.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v1 = a1;
  return result;
}

uint64_t (*Message.Metrics.epochsByStage.modify())()
{
  return nullsub_1;
}

uint64_t Message.Metrics.init(epochsByStage:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Message.Metrics.init(sourceSendEpoch:destinationReceiveEpoch:destinationSendEpoch:sourceReceiveEpoch:)@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for Message.Metrics.EpochStage();
  swift_getTupleTypeMetadata2();
  sub_248175310();
  swift_getWitnessTable();
  uint64_t v4 = sub_248175030();
  type metadata accessor for Message.Metrics();
  Message.Metrics.updatingEpoch(for:to:)(&v3);
  Message.Metrics.updatingEpoch(for:to:)(&v4);
  Message.Metrics.updatingEpoch(for:to:)(&v3);
  uint64_t result = Message.Metrics.updatingEpoch(for:to:)(&v4);
  *a1 = v4;
  return result;
}

uint64_t Message.Metrics.updatingEpoch(for:to:)@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  type metadata accessor for Message.Metrics.EpochStage();
  swift_getWitnessTable();
  sub_248175050();
  return sub_248175090();
}

uint64_t Message.Metrics.sourceSendEpoch.getter(uint64_t a1)
{
  return sub_248046C50(a1, 0);
}

uint64_t Message.Metrics.destinationReceiveEpoch.getter(uint64_t a1)
{
  return sub_248046C50(a1, 1);
}

uint64_t Message.Metrics.destinationSendEpoch.getter(uint64_t a1)
{
  return sub_248046C50(a1, 2);
}

uint64_t Message.Metrics.sourceReceiveEpoch.getter(uint64_t a1)
{
  return sub_248046C50(a1, 3);
}

uint64_t sub_248046C50(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  char v7 = a2;
  uint64_t v4 = type metadata accessor for Message.Metrics.EpochStage();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x24C573570](&v8, &v7, v3, v4, MEMORY[0x263F8E970], WitnessTable);
  return v8;
}

unint64_t Message.Metrics.onewaySendDuration.getter(uint64_t a1)
{
  return sub_248046D28(a1, (uint64_t (*)(void))Message.Metrics.sourceSendEpoch.getter, Message.Metrics.destinationReceiveEpoch.getter);
}

unint64_t Message.Metrics.onewayReceiveDuration.getter(uint64_t a1)
{
  return sub_248046D28(a1, (uint64_t (*)(void))Message.Metrics.destinationSendEpoch.getter, Message.Metrics.sourceReceiveEpoch.getter);
}

unint64_t sub_248046D28(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = a2();
  if (v6) {
    return 0;
  }
  unint64_t v7 = v5;
  unint64_t result = a3(a1);
  if (v9) {
    return 0;
  }
  if (result >= v7) {
    return 1000000000000000 * (result - v7);
  }
  __break(1u);
  return result;
}

unint64_t Message.Metrics.destinationProcessingDuration.getter(uint64_t a1)
{
  return sub_248046D28(a1, (uint64_t (*)(void))Message.Metrics.destinationReceiveEpoch.getter, Message.Metrics.destinationSendEpoch.getter);
}

uint64_t Message.Metrics.roundtripDuration.getter(uint64_t a1)
{
  unint64_t v2 = Message.Metrics.onewaySendDuration.getter(a1);
  if (v4) {
    return 0;
  }
  unint64_t v5 = v2;
  uint64_t v6 = v3;
  unint64_t v7 = Message.Metrics.onewayReceiveDuration.getter(a1);
  if (v9) {
    return 0;
  }
  else {
    return MEMORY[0x24C574470](v5, v6, v7, v8);
  }
}

uint64_t Message.Metrics.updateEpoch(for:to:)()
{
  uint64_t result = Message.Metrics.updatingEpoch(for:to:)(&v2);
  *uint64_t v0 = v2;
  return result;
}

uint64_t static Message.Metrics.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = type metadata accessor for Message.Metrics.EpochStage();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = MEMORY[0x263F8E970];
  uint64_t v7 = MEMORY[0x263F8E990];
  return MEMORY[0x270F9D1F0](v2, v3, v4, v6, WitnessTable, v7);
}

uint64_t Message.Metrics.hash(into:)()
{
  type metadata accessor for Message.Metrics.EpochStage();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_248175060();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24804700C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x79427368636F7065 && a2 == 0xED00006567617453)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_248175CE0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2480470B8()
{
  return 0x79427368636F7065;
}

uint64_t sub_2480470DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24804700C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_248047110(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248047164(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t Message.Metrics.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v10[0] = *(void *)(a2 + 24);
  v10[1] = v4;
  _s7MetricsV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v5 = sub_248175C20();
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v10 - v6;
  uint64_t v8 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  uint64_t v14 = v8;
  type metadata accessor for Message.Metrics.EpochStage();
  swift_getWitnessTable();
  sub_248175050();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v13 = MEMORY[0x263F8E978];
  swift_getWitnessTable();
  sub_248175BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v5);
}

uint64_t Message.Metrics.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t Message.Metrics.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  _s7MetricsV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v13 = sub_248175B40();
  uint64_t v11 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v5 = (char *)&v10 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F20();
  if (!v2)
  {
    uint64_t v7 = v11;
    uint64_t v6 = v12;
    type metadata accessor for Message.Metrics.EpochStage();
    swift_getWitnessTable();
    sub_248175050();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v15 = MEMORY[0x263F8E9A0];
    swift_getWitnessTable();
    uint64_t v8 = v13;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v8);
    *uint64_t v6 = v16;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_248047660@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Message.Metrics.init(from:)(a1, a2);
}

uint64_t sub_248047680(void *a1, uint64_t a2)
{
  return Message.Metrics.encode(to:)(a1, a2);
}

uint64_t sub_248047698(uint64_t *a1, uint64_t *a2)
{
  return static Message.Metrics.== infix(_:_:)(a1, a2);
}

uint64_t sub_2480476AC()
{
  return sub_248175EC0();
}

BOOL static Message.Metrics.EpochStage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Message.Metrics.EpochStage.hash(into:)()
{
  return sub_248175E70();
}

uint64_t sub_248047730(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6553656372756F73 && a2 == 0xEA0000000000646ELL;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002481915D0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEF646E65536E6F69 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6552656372756F73 && a2 == 0xED00006576696563)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_248047938(char a1)
{
  unint64_t result = 0x6553656372756F73;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x74616E6974736564;
      break;
    case 3:
      unint64_t result = 0x6552656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2480479EC()
{
  return sub_248047938(*v0);
}

uint64_t sub_2480479F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248047730(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248047A28(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248047A7C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_248047AD0@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  return sub_248047CE0(a1, (uint64_t (*)(void, void))sub_247F9B600, a2);
}

uint64_t sub_248047AE8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248047B3C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_248047B90(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248047BE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_248047C38(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248047C8C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_248047CE0@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(void, void)@<X4>, unsigned char *a3@<X8>)
{
  char v4 = a2(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_248047D2C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_248047D80(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t Message.Metrics.EpochStage.encode(to:)(void *a1)
{
  uint64_t v3 = _s7MetricsV10EpochStageO23SourceReceiveCodingKeysOMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v42 = v3;
  uint64_t v4 = sub_248175C20();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (char *)&v23 - v5;
  uint64_t v6 = _s7MetricsV10EpochStageO25DestinationSendCodingKeysOMa();
  uint64_t v36 = swift_getWitnessTable();
  uint64_t v37 = v6;
  uint64_t v7 = sub_248175C20();
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  id v33 = (char *)&v23 - v8;
  uint64_t v9 = _s7MetricsV10EpochStageO28DestinationReceiveCodingKeysOMa();
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = v9;
  uint64_t v10 = sub_248175C20();
  uint64_t v29 = *(void *)(v10 - 8);
  uint64_t v30 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v28 = (char *)&v23 - v11;
  _s7MetricsV10EpochStageO20SourceSendCodingKeysOMa();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v12 = sub_248175C20();
  uint64_t v25 = *(void *)(v12 - 8);
  uint64_t v26 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v24 = (char *)&v23 - v13;
  _s7MetricsV10EpochStageO10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v14 = sub_248175C20();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)&v23 - v16;
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  switch(v18)
  {
    case 1:
      char v44 = 1;
      uint64_t v19 = v28;
      sub_248175B50();
      uint64_t v21 = v29;
      uint64_t v20 = v30;
      break;
    case 2:
      char v45 = 2;
      uint64_t v19 = v33;
      sub_248175B50();
      uint64_t v21 = v34;
      uint64_t v20 = v35;
      break;
    case 3:
      char v46 = 3;
      uint64_t v19 = v38;
      sub_248175B50();
      uint64_t v21 = v39;
      uint64_t v20 = v40;
      break;
    default:
      char v43 = 0;
      uint64_t v19 = v24;
      sub_248175B50();
      uint64_t v21 = v25;
      uint64_t v20 = v26;
      break;
  }
  (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t Message.Metrics.EpochStage.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t Message.Metrics.EpochStage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v57 = a4;
  uint64_t v70 = _s7MetricsV10EpochStageO23SourceReceiveCodingKeysOMa();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_248175B40();
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v63 = (char *)&v45 - v8;
  uint64_t v9 = _s7MetricsV10EpochStageO25DestinationSendCodingKeysOMa();
  uint64_t v61 = swift_getWitnessTable();
  uint64_t v62 = v9;
  uint64_t v54 = sub_248175B40();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  unsigned int v56 = (char *)&v45 - v10;
  uint64_t v11 = _s7MetricsV10EpochStageO28DestinationReceiveCodingKeysOMa();
  uint64_t v59 = swift_getWitnessTable();
  uint64_t v60 = v11;
  uint64_t v52 = sub_248175B40();
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  char v55 = (char *)&v45 - v12;
  _s7MetricsV10EpochStageO20SourceSendCodingKeysOMa();
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v50 = sub_248175B40();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v14 = (char *)&v45 - v13;
  uint64_t v69 = a3;
  _s7MetricsV10EpochStageO10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v15 = sub_248175B40();
  uint64_t v67 = *(void *)(v15 - 8);
  uint64_t v68 = v15;
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v45 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = (uint64_t)v75;
  sub_248175F20();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v46 = v14;
  uint64_t v48 = a2;
  uint64_t v47 = 0;
  v75 = a1;
  uint64_t v19 = v68;
  uint64_t v20 = v17;
  *(void *)&long long v71 = sub_248175B30();
  sub_248175330();
  swift_getWitnessTable();
  *(void *)&long long v73 = sub_248175780();
  *((void *)&v73 + 1) = v21;
  *(void *)&long long v74 = v22;
  *((void *)&v74 + 1) = v23;
  sub_248175770();
  swift_getWitnessTable();
  sub_248175590();
  char v24 = v71;
  uint64_t v25 = v19;
  if (v71 == 4 || (v45 = v73, v71 = v73, v72 = v74, char v26 = v24, (sub_2481755A0() & 1) == 0))
  {
    uint64_t v34 = sub_2481758A0();
    swift_allocError();
    uint64_t v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v36 = type metadata accessor for Message.Metrics.EpochStage();
    sub_248175A60();
    sub_248175880();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x263F8DCB0], v34);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v25);
    a1 = v75;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v27 = v20;
  uint64_t v28 = v66;
  uint64_t v29 = v65;
  uint64_t v30 = v63;
  switch((int)v67)
  {
    case 1:
      uint64_t v38 = v67;
      LOBYTE(v71) = 1;
      uint64_t v39 = v55;
      uint64_t v40 = v47;
      sub_248175A50();
      unint64_t v41 = v57;
      if (v40) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v52);
      goto LABEL_20;
    case 2:
      uint64_t v38 = v67;
      LOBYTE(v71) = 2;
      uint64_t v42 = v56;
      uint64_t v43 = v47;
      sub_248175A50();
      unint64_t v41 = v57;
      if (v43) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v54);
      goto LABEL_20;
    case 3:
      uint64_t v38 = v67;
      LOBYTE(v71) = 3;
      uint64_t v44 = v47;
      sub_248175A50();
      unint64_t v41 = v57;
      if (v44)
      {
LABEL_16:
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v19);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v28);
LABEL_20:
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v19);
      goto LABEL_21;
    default:
      uint64_t v31 = v67;
      LOBYTE(v71) = 0;
      uint64_t v32 = v46;
      uint64_t v33 = v47;
      sub_248175A50();
      if (v33)
      {
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v19);
LABEL_17:
        a1 = v75;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v50);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v19);
      unint64_t v41 = v57;
LABEL_21:
      unsigned char *v41 = v26;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
      break;
  }
  return result;
}

uint64_t sub_248048C10()
{
  return sub_248175EC0();
}

uint64_t sub_248048C4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return Message.Metrics.EpochStage.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_248048C6C(void *a1)
{
  return Message.Metrics.EpochStage.encode(to:)(a1);
}

uint64_t static UInt64.epoch(for:)()
{
  uint64_t result = sub_248174820();
  double v2 = v1 * 1000.0;
  if ((~*(void *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v2 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 < 1.84467441e19) {
    return (unint64_t)v2;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Message.Metrics.EpochStage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for Message.Metrics()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s7MetricsV10CodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s7MetricsV10EpochStageO23SourceReceiveCodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s7MetricsV10EpochStageO25DestinationSendCodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s7MetricsV10EpochStageO28DestinationReceiveCodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s7MetricsV10EpochStageO20SourceSendCodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t _s7MetricsV10EpochStageO10CodingKeysOMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_248048DB4(void *a1)
{
  return sub_24802D434(a1);
}

uint64_t sub_248048DF4()
{
  return swift_getWitnessTable();
}

uint64_t sub_248048E10()
{
  return swift_getWitnessTable();
}

uint64_t sub_248048E2C(void *a1)
{
  return sub_24802D434(a1);
}

unsigned char *sub_248048E70(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248048F3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_248048F64(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x248049000);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248049028()
{
  return swift_getWitnessTable();
}

uint64_t sub_248049044()
{
  return swift_getWitnessTable();
}

uint64_t sub_248049060()
{
  return swift_getWitnessTable();
}

uint64_t sub_24804907C()
{
  return swift_getWitnessTable();
}

uint64_t sub_248049098()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480490B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480490D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480490EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_248049108()
{
  return swift_getWitnessTable();
}

uint64_t sub_248049124()
{
  return swift_getWitnessTable();
}

uint64_t sub_248049140()
{
  return swift_getWitnessTable();
}

uint64_t sub_24804915C()
{
  return swift_getWitnessTable();
}

uint64_t sub_248049178()
{
  return swift_getWitnessTable();
}

uint64_t sub_248049194()
{
  return swift_getWitnessTable();
}

uint64_t TransportBuilding.into()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v9, a1);
}

uint64_t AnyTransport.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FF649C(v1, a1);
}

uint64_t AnyTransport.wrappedValue.setter(long long *a1)
{
  __swift_destroy_boxed_opaque_existential_1(v1);
  return sub_247FB8480(a1, v1);
}

uint64_t (*AnyTransport.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t AnyTransport.messageSessionTemplate.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t AnyTransport.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  a4[3] = a2;
  a4[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v7(boxed_opaque_existential_1, a1, a2);
}

uint64_t AnyTransport.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_248049400, 0, 0);
}

uint64_t sub_248049400()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = (void *)v0[5];
  uint64_t v4 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v1, v4);
  unsigned int v6 = (void *)swift_task_alloc();
  v0[6] = v6;
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  *unsigned int v6 = v0;
  v6[1] = sub_247FCD270;
  uint64_t v9 = v0[2];
  uint64_t v10 = v0[3];
  return sub_2480494C0(v9, (uint64_t)v5, v10, v7, v4, v8, v3);
}

uint64_t sub_2480494C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[6] = a5;
  v7[7] = a7;
  v7[4] = a3;
  v7[5] = a4;
  v7[2] = a1;
  v7[3] = a2;
  v7[8] = *(void *)(a4 - 8);
  v7[9] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[10] = AssociatedTypeWitness;
  v7[11] = *(void *)(AssociatedTypeWitness - 8);
  v7[12] = swift_task_alloc();
  v7[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_248049608, 0, 0);
}

uint64_t sub_248049608()
{
  uint64_t v8 = v0[7];
  (*(void (**)(void, void, void))(v0[8] + 16))(v0[9], v0[4], v0[5]);
  swift_dynamicCast();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 32) + **(int **)(v8 + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_248049748;
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  return v7(v2, v3, v4, v5);
}

uint64_t sub_248049748()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_24804990C;
  }
  else
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    uint64_t v3 = sub_248049874;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_248049874()
{
  swift_dynamicCast();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24804990C()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

Swift::Void __swiftcall AnyTransport.invalidate()()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  __swift_project_boxed_opaque_existential_1(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2);
}

uint64_t sub_248049A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  void v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FCB950;
  return MEMORY[0x270FA2498](sub_248049400, 0, 0);
}

uint64_t Transport.into()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  a3[3] = a1;
  a3[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
  unsigned int v6 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32);
  return v6(boxed_opaque_existential_1, v3, a1);
}

uint64_t TransportBuilding.buildAny()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  if (!v3)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    a3[3] = AssociatedTypeWitness;
    a3[4] = AssociatedConformanceWitness;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v8 + 32))(boxed_opaque_existential_1, v10, AssociatedTypeWitness);
  }
  return result;
}

uint64_t (*AnyTransportBuilder.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t AnyTransportBuilder.init<A>(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  a4[3] = a2;
  a4[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
  uint64_t v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v7(boxed_opaque_existential_1, a1, a2);
}

__n128 AnyTransportBuilder.onReceive(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(v4 + 24);
  uint64_t v10 = *(void *)(v4 + 32);
  uint64_t v11 = __swift_project_boxed_opaque_existential_1((void *)v4, v9);
  uint64_t v15 = v9;
  uint64_t v16 = v10;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v14);
  sub_248049DB8((uint64_t)v11, a1, a2, *(void *)(a3 + 16), v9, *(void *)(a3 + 24), v10);
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_247FB8480(&v14, v4);
  __n128 result = *(__n128 *)v4;
  long long v13 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v4;
  *(_OWORD *)(a4 + 16) = v13;
  *(void *)(a4 + 32) = *(void *)(v4 + 32);
  return result;
}

uint64_t sub_248049DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v13 + 16))((char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15[2] = a2;
  v15[3] = a3;
  swift_retain();
  v15[0] = a4;
  swift_getFunctionTypeMetadata();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v15[0] = swift_getAssociatedTypeWitness();
  swift_getFunctionTypeMetadata();
  swift_dynamicCast();
  (*(void (**)(void, void, uint64_t, uint64_t))(a7 + 24))(v15[0], v15[1], a5, a7);
  return swift_release();
}

__n128 AnyTransportBuilder.onInvalidation(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v4 + 32);
  uint64_t v10 = __swift_project_boxed_opaque_existential_1((void *)v4, v8);
  MEMORY[0x270FA5388](v10);
  (*(void (**)(char *))(v12 + 16))((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32);
  uint64_t v18 = v8;
  uint64_t v19 = v9;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v17);
  v13(a1, a2, v8, v9);
  sub_247FB8480(&v17, v4);
  __n128 result = *(__n128 *)v4;
  long long v15 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a3 = *(_OWORD *)v4;
  *(_OWORD *)(a3 + 16) = v15;
  *(void *)(a3 + 32) = *(void *)(v4 + 32);
  return result;
}

uint64_t AnyTransportBuilder.build()(uint64_t a1)
{
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(v1, v3);
  return sub_24804A13C((uint64_t)v5, *(void *)(a1 + 16), v3, *(void *)(a1 + 24), v4);
}

uint64_t sub_24804A13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v9 + 16))((char *)&v12[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = TransportBuilding.buildAny()(a3, a5, v12);
  if (!v5)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    type metadata accessor for AnyTransport();
    type metadata accessor for AnyTransport();
    return swift_dynamicCast();
  }
  return result;
}

uint64_t sub_24804A304(uint64_t a1)
{
  AnyTransportBuilder.build()(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
}

uint64_t CustomTransport.onReceive(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_247F98D68(*(void *)v3);
  uint64_t v7 = *(void *)(v3 + 32);
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = *(_OWORD *)(v3 + 16);
  *(void *)(a3 + 32) = v7;
  return swift_retain();
}

uint64_t CustomTransport.onInvalidation(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v8 = v3[1];
  sub_247F98D68(v3[2]);
  uint64_t v9 = v3[4];
  *a3 = v7;
  a3[1] = v8;
  a3[2] = a1;
  a3[3] = a2;
  a3[4] = v9;
  return swift_retain();
}

uint64_t CustomTransport.interface(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v8 = *v2;
  uint64_t v5 = *((void *)v2 + 2);
  uint64_t v6 = *((void *)v2 + 3);
  swift_release();
  *(_OWORD *)a2 = v8;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = a1;
  return swift_retain();
}

uint64_t CustomTransport.build()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = v2[1];
  long long v21 = *v2;
  long long v22 = v8;
  uint64_t v23 = *((void *)v2 + 4);
  if ((void)v21 && v23)
  {
    uint64_t v9 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = 0;
    *(void *)(v10 + 24) = 0;
    uint64_t v11 = *(void *)(a1 + 16);
    uint64_t v12 = *(void *)(a1 + 24);
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v12;
    long long v13 = v22;
    *(_OWORD *)(v10 + 48) = v21;
    *(_OWORD *)(v10 + 64) = v13;
    *(void *)(v10 + 80) = v23;
    sub_24804B754((uint64_t *)&v21);
    uint64_t v14 = sub_24804B560((uint64_t)v7, (uint64_t)&unk_2692D8588, v10);
    sub_247FB33D4((uint64_t)v7, &qword_2692D9520);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v11;
    *(void *)(v15 + 24) = v12;
    long long v16 = v22;
    *(_OWORD *)(v15 + 32) = v21;
    *(_OWORD *)(v15 + 48) = v16;
    *(void *)(v15 + 64) = v23;
    sub_24804B754((uint64_t *)&v21);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
    sub_248175370();
    swift_getTupleTypeMetadata2();
    sub_248175430();
    uint64_t result = sub_2481753F0();
    uint64_t v18 = v23;
    long long v19 = v22;
    *(_OWORD *)a2 = v21;
    *(_OWORD *)(a2 + 16) = v19;
    *(void *)(a2 + 32) = v18;
    *(void *)(a2 + 40) = 0;
    *(unsigned char *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = v14;
  }
  else
  {
    sub_24804A740((uint64_t *)&v21);
    type metadata accessor for CustomTransport.Failure();
    swift_getWitnessTable();
    swift_allocError();
    void *v20 = 0xD00000000000001DLL;
    v20[1] = 0x80000002481915F0;
    return swift_willThrow();
  }
  return result;
}

uint64_t *sub_24804A740(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  sub_247F98D68(*a1);
  sub_247F98D68(v2);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CustomTransport.Failure()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24804A7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  long long v6[4] = a4;
  v6[7] = *(void *)(a5 - 8);
  v6[8] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v7 = sub_248175ED0();
  v6[9] = v7;
  v6[10] = *(void *)(v7 - 8);
  v6[11] = swift_task_alloc();
  uint64_t v8 = sub_248175370();
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_getTupleTypeMetadata2();
  sub_248175700();
  v6[16] = swift_task_alloc();
  uint64_t v9 = sub_248175460();
  v6[17] = v9;
  v6[18] = *(void *)(v9 - 8);
  v6[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24804AA10, 0, 0);
}

uint64_t sub_24804AA10()
{
  uint64_t v1 = v0[4] + 32;
  type metadata accessor for CustomTransport.Interface();
  uint64_t v2 = sub_248175700();
  uint64_t v3 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32);
  v3(v0 + 3, v1, v2);
  uint64_t v4 = ((uint64_t (*)(void *, void *, uint64_t))v3)(v0 + 2, v0 + 3, v2);
  if (v0[2])
  {
    sub_248175470();
    sub_248175440();
    uint64_t v8 = (void *)swift_task_alloc();
    v0[20] = v8;
    void *v8 = v0;
    v8[1] = sub_24804AB78;
    uint64_t v4 = v0[16];
    uint64_t v7 = v0[17];
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x270FA1F68](v4, v5, v6, v7);
}

uint64_t sub_24804AB78()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24804AC74, 0, 0);
}

uint64_t sub_24804AC74()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 144) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v7 = *(void *)(v0 + 32);
    long long v12 = *(_OWORD *)(v0 + 40);
    (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 104) + 32))(*(void *)(v0 + 112), v2 + *(int *)(v1 + 48), *(void *)(v0 + 96));
    (*(void (**)(uint64_t, uint64_t, void))(v6 + 32))(v5, v2, v12);
    uint64_t v8 = swift_task_alloc();
    *(void *)(v0 + 168) = v8;
    *(_OWORD *)(v8 + 16) = v12;
    *(void *)(v8 + 32) = v7;
    *(void *)(v8 + 40) = v5;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_24804AE6C;
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 40);
    return static Result<>.catching<A>(_:)(v10, (int *)&unk_2692D8940, v8, v11);
  }
}

uint64_t sub_24804AE6C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  uint64_t v2 = *(void *)(*(void *)v0 + 56);
  uint64_t v3 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x270FA2498](sub_24804AFE0, 0, 0);
}

uint64_t sub_24804AFE0()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_2480BFECC(v4, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[20] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24804AB78;
  uint64_t v8 = v0[16];
  uint64_t v9 = v0[17];
  return MEMORY[0x270FA1F68](v8, 0, 0, v9);
}

uint64_t sub_24804B0DC()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  if (*(void *)(v0 + 64)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 88, 7);
}

uint64_t sub_24804B13C(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_247FCB950;
  return sub_24804A7A8(a1, v6, v7, (uint64_t)(v1 + 6), v4, v5);
}

uint64_t sub_24804B204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(void *)(a4 - 8);
  v4[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24804B2BC, 0, 0);
}

void sub_24804B2BC()
{
  uint64_t v1 = **(int ***)(v0 + 24);
  if (v1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 48) + 16))(*(void *)(v0 + 56), *(void *)(v0 + 32), *(void *)(v0 + 40));
    uint64_t v5 = (void (*)(uint64_t, uint64_t))((char *)v1 + *v1);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_24804B3C0;
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 16);
    v5(v4, v3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24804B3C0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24804B4FC, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24804B4FC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24804B560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_247FBB338(a1, (uint64_t)v8, &qword_2692D9520);
  uint64_t v9 = sub_2481753D0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_247FB33D4((uint64_t)v8, &qword_2692D9520);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_248175340();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2481753C0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    void v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t *sub_24804B754(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  sub_247F98D10(*a1);
  sub_247F98D10(v2);
  swift_retain();
  return a1;
}

uint64_t sub_24804B7A4()
{
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24804B7FC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 48);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_24804B834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CustomTransport.build()(a1, a2);
}

uint64_t CustomTransport.Interface.__allocating_init(receiver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CustomTransport.Interface.init(receiver:)(a1, a2);
  return v4;
}

uint64_t sub_24804B89C(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8918);
  uint64_t v3 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8920);
  uint64_t v6 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8928);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8910);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  char v24 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D88F8);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F580], v22);
  sub_248175480();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v2 + *(void *)(*(void *)v2 + 96), v8, v23);
  sub_247FBB338((uint64_t)v14, (uint64_t)v12, &qword_2692D8928);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v2 + *(void *)(*(void *)v2 + 104), v12, v15);
    uint64_t v18 = (void *)(v2 + *(void *)(*(void *)v2 + 112));
    uint64_t v19 = v21;
    *uint64_t v18 = v20;
    v18[1] = v19;
    sub_247FB33D4((uint64_t)v14, &qword_2692D8928);
    return v2;
  }
  return result;
}

uint64_t CustomTransport.Interface.init(receiver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v26 = *v2;
  uint64_t v24 = *(void *)(v26 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175370();
  swift_getTupleTypeMetadata2();
  uint64_t v23 = sub_248175400();
  uint64_t v3 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v21 = (char *)&v19 - v4;
  uint64_t v25 = sub_248175470();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_248175430();
  uint64_t v8 = sub_248175700();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v19 - v13;
  uint64_t v15 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v19 - v13, 1, 1, v7);
  uint64_t v27 = v24;
  uint64_t v28 = *(void *)(v26 + 88);
  uint64_t v29 = v14;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v21, *MEMORY[0x263F8F580], v23);
  sub_248175480();
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))((uint64_t)v2 + *(void *)(*v2 + 96), v6, v25);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))((uint64_t)v2 + *(void *)(*v2 + 104), v12, v7);
    long long v17 = (uint64_t *)((char *)v2 + *(void *)(*v2 + 112));
    uint64_t v18 = v20;
    *long long v17 = v19;
    v17[1] = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    return (uint64_t)v2;
  }
  return result;
}

uint64_t sub_24804BFD8(uint64_t a1, uint64_t a2)
{
  sub_247FB33D4(a2, &qword_2692D8928);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8910);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, v4);
}

uint64_t sub_24804C0A8(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175370();
  swift_getTupleTypeMetadata2();
  uint64_t v4 = sub_248175430();
  uint64_t v5 = sub_248175700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a2, v5);
  uint64_t v8 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, a1, v4);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  return v6(a2, 0, 1, v4);
}

uint64_t sub_24804C1E4(uint64_t a1)
{
  return sub_24804C0A8(a1, *(void *)(v1 + 32));
}

uint64_t sub_24804C1F0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return MEMORY[0x270FA2498](sub_24804C23C, 0, 0);
}

uint64_t sub_24804C23C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  v2[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = *(void *)(v1 + 80);
  *uint64_t v3 = v0;
  v3[1] = sub_24804C330;
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v5, 0, 0, 0xD000000000000013, 0x8000000248191610, sub_24804C8A4, v2, v4);
}

uint64_t sub_24804C330()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24804C46C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24804C46C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24804C4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D88F8);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8900);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = &v8[*(int *)(v6 + 56)];
  sub_247FBB338(a3, (uint64_t)v8, &qword_2692D85C0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8908);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, a1, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8910);
  sub_248175410();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_24804C68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a3;
  uint64_t v15 = a1;
  uint64_t v3 = *(void *)(*(void *)a2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v4 = sub_248175370();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = sub_2481753E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t v12 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v7, v14, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v12, v15, v4);
  sub_248175430();
  sub_248175410();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24804C8A4(uint64_t a1)
{
  return sub_24804C68C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24804C8AC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24804C8D0, 0, 0);
}

uint64_t sub_24804C8D0()
{
  uint64_t v1 = (int **)(v0[4] + *(void *)(*(void *)v0[4] + 112));
  uint64_t v2 = *v1;
  v0[5] = v1[1];
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)v2 + *v2);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24804C9D0;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  return v7(v4, v5);
}

uint64_t sub_24804C9D0()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24804CB48;
  }
  else {
    uint64_t v2 = sub_24804CAE4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24804CAE4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24804CB48()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t CustomTransport.Interface.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175370();
  swift_getTupleTypeMetadata2();
  uint64_t v2 = sub_248175470();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v4 = sub_248175430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return v0;
}

uint64_t CustomTransport.Interface.__deallocating_deinit()
{
  CustomTransport.Interface.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t CustomTransport.Interface<>.init(receiver:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85B0);
  swift_allocObject();
  return sub_24804B89C((uint64_t)&unk_2692D85A8, v4);
}

uint64_t sub_24804CDCC(uint64_t a1, uint64_t a2, int *a3)
{
  v3[2] = a1;
  uint64_t v6 = sub_248174850();
  v3[3] = v6;
  v3[4] = *(void *)(v6 - 8);
  v3[5] = swift_task_alloc();
  uint64_t v7 = sub_2481748C0();
  v3[6] = v7;
  v3[7] = *(void *)(v7 - 8);
  v3[8] = swift_task_alloc();
  type metadata accessor for V1Command(0);
  uint64_t v8 = swift_task_alloc();
  v3[9] = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  v3[10] = v9;
  uint64_t v10 = a2 + *(int *)(v9 + 44);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v11 = (void *)swift_task_alloc();
  v3[11] = v11;
  void *v11 = v3;
  v11[1] = sub_24804CFBC;
  return v13(v8, v10);
}

uint64_t sub_24804CFBC()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24804D390;
  }
  else {
    uint64_t v2 = sub_24804D0D0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24804D0D0()
{
  sub_2481748B0();
  unint64_t v2 = sub_247FB851C(MEMORY[0x263F8EE78]);
  unint64_t v3 = sub_247FB651C(0);
  if ((v4 & 1) == 0) {
    goto LABEL_4;
  }
  unint64_t v0 = v3;
  unint64_t v23 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_25;
  }
  while (1)
  {
    sub_24804E204(v0, v2);
    swift_bridgeObjectRelease();
LABEL_4:
    unint64_t v5 = sub_247FB651C(1u);
    if (v6)
    {
      unint64_t v0 = v5;
      unint64_t v23 = v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24804E76C();
      }
      sub_24804E204(v0, v2);
      swift_bridgeObjectRelease();
    }
    unint64_t v7 = sub_247FB651C(2u);
    if (v8)
    {
      unint64_t v0 = v7;
      unint64_t v23 = v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24804E76C();
      }
      sub_24804E204(v0, v2);
      swift_bridgeObjectRelease();
    }
    unint64_t v9 = sub_247FB651C(3u);
    if (v10)
    {
      unint64_t v0 = v9;
      unint64_t v23 = v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24804E76C();
      }
      sub_24804E204(v0, v2);
      swift_bridgeObjectRelease();
    }
    sub_248174830();
    sub_248174820();
    double v12 = v11 * 1000.0;
    if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v12 <= -1.0) {
      goto LABEL_23;
    }
    if (v12 < 1.84467441e19) {
      break;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    sub_24804E76C();
    unint64_t v2 = v23;
  }
  uint64_t v13 = v1[9];
  uint64_t v14 = (int *)v1[10];
  uint64_t v16 = v1[7];
  uint64_t v15 = v1[8];
  uint64_t v22 = v1[6];
  uint64_t v17 = v1[2];
  uint64_t v18 = (unint64_t)v12;
  (*(void (**)(void, void))(v1[4] + 8))(v1[5], v1[3]);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_247FB8004(v18, 0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_24804F8C0(v13, v17 + v14[11]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v17, v15, v22);
  *(unsigned char *)(v17 + v14[9]) = 1;
  *(void *)(v17 + v14[10]) = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v1[1];
  return v20();
}

uint64_t sub_24804D390()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t CustomTransport.Interface<>.receiveIncoming(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = sub_248174850();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = sub_2481748C0();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24804D56C, 0, 0);
}

uint64_t sub_24804D56C()
{
  sub_2481748B0();
  unint64_t v2 = sub_247FB851C(MEMORY[0x263F8EE78]);
  unint64_t v3 = sub_247FB651C(0);
  if ((v4 & 1) == 0) {
    goto LABEL_4;
  }
  unint64_t v0 = v3;
  unint64_t v27 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_25;
  }
  while (1)
  {
    sub_24804E204(v0, v2);
    swift_bridgeObjectRelease();
LABEL_4:
    unint64_t v5 = sub_247FB651C(1u);
    if (v6)
    {
      unint64_t v0 = v5;
      unint64_t v27 = v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24804E76C();
      }
      sub_24804E204(v0, v2);
      swift_bridgeObjectRelease();
    }
    unint64_t v7 = sub_247FB651C(2u);
    if (v8)
    {
      unint64_t v0 = v7;
      unint64_t v27 = v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24804E76C();
      }
      sub_24804E204(v0, v2);
      swift_bridgeObjectRelease();
    }
    unint64_t v9 = sub_247FB651C(3u);
    if (v10)
    {
      unint64_t v0 = v9;
      unint64_t v27 = v2;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_24804E76C();
      }
      sub_24804E204(v0, v2);
      swift_bridgeObjectRelease();
    }
    sub_248174830();
    sub_248174820();
    double v12 = v11 * 1000.0;
    if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (v12 <= -1.0) {
      goto LABEL_23;
    }
    if (v12 < 1.84467441e19) {
      break;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    sub_24804E76C();
    unint64_t v2 = v27;
  }
  uint64_t v13 = v1[13];
  uint64_t v14 = v1[10];
  uint64_t v15 = (int *)v1[11];
  uint64_t v16 = v1[8];
  uint64_t v17 = v1[9];
  uint64_t v26 = v1[4];
  uint64_t v18 = v1[3];
  uint64_t v19 = (unint64_t)v12;
  (*(void (**)(void, void))(v1[6] + 8))(v1[7], v1[5]);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_247FB8004(v19, 0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_24804E9F0(v18, v13 + v15[11]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v13, v14, v16);
  *(unsigned char *)(v13 + v15[9]) = 1;
  *(void *)(v13 + v15[10]) = v2;
  uint64_t v21 = swift_task_alloc();
  v1[14] = v21;
  *(void *)(v21 + 16) = v26;
  *(void *)(v21 + 24) = v13;
  uint64_t v22 = (void *)swift_task_alloc();
  v1[15] = v22;
  *uint64_t v22 = v1;
  v22[1] = sub_24804D8A0;
  uint64_t v24 = v1[11];
  uint64_t v23 = v1[12];
  return MEMORY[0x270FA2360](v23, 0, 0, 0xD000000000000013, 0x8000000248191610, sub_24804EA54, v21, v24);
}

uint64_t sub_24804D8A0()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v2 = sub_24804DA90;
  }
  else
  {
    swift_task_dealloc();
    unint64_t v2 = sub_24804D9BC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24804D9BC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[2];
  sub_247FB33D4(v0[13], &qword_2692D85C0);
  sub_24804E9F0(v1 + *(int *)(v2 + 44), v3);
  sub_247FB33D4(v1, &qword_2692D85C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24804DA90()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_task_dealloc();
  sub_247FB33D4(v1, &qword_2692D85C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t CustomTransport.Activated.base.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  sub_247F98D10(v2);
  sub_247F98D10(v4);
  return swift_retain();
}

void *CustomTransport.Activated.messageSessionTemplate.getter()
{
  uint64_t v0 = (void *)sub_24804E8FC();
  id v1 = v0;
  return v0;
}

void CustomTransport.Activated.messageSessionTemplate.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
}

uint64_t (*CustomTransport.Activated.messageSessionTemplate.modify())()
{
  return nullsub_1;
}

uint64_t CustomTransport.Activated.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = *(void *)(v3 + 32);
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = v5;
  *(unsigned char *)(v4 + 56) = *(unsigned char *)(v3 + 48);
  return MEMORY[0x270FA2498](sub_24804DC40, 0, 0);
}

uint64_t sub_24804DC40(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(v3 + 56))
  {
    type metadata accessor for CustomTransport.Failure();
    swift_getWitnessTable();
    swift_allocError();
    void *v4 = 0;
    v4[1] = 0;
    swift_willThrow();
    uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 40);
    if (v7)
    {
      uint64_t v8 = swift_task_alloc();
      *(void *)(v3 + 48) = v8;
      *(void *)uint64_t v8 = v3;
      *(void *)(v8 + 8) = sub_247FCD270;
      long long v9 = *(_OWORD *)(v3 + 16);
      *(void *)(v8 + 32) = v7;
      *(_OWORD *)(v8 + 16) = v9;
      a1 = sub_24804C8D0;
      a2 = 0;
      a3 = 0;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
}

Swift::Void __swiftcall CustomTransport.Activated.invalidate()()
{
  if (v0[4])
  {
    uint64_t v1 = *v0;
    uint64_t v2 = v0[2];
    id v4 = (id)v0[5];
    uint64_t v3 = v0[7];
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
    sub_248175370();
    swift_getTupleTypeMetadata2();
    sub_248175430();
    sub_248175420();
    if (v3)
    {
      swift_retain();
      sub_2481754A0();
      swift_release_n();
    }
    sub_247F98D68(v1);
    sub_247F98D68(v2);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void *sub_24804DEC4()
{
  uint64_t v0 = (void *)sub_24804E8FC();
  id v1 = v0;
  return v0;
}

uint64_t sub_24804DEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *(void *)uint64_t v8 = v4;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 8) = sub_247FD79D0;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 40) = *(void *)(v3 + 32);
  *(unsigned char *)(v8 + 56) = *(unsigned char *)(v3 + 48);
  return MEMORY[0x270FA2498](sub_24804DC40, 0, 0);
}

void sub_24804DFBC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)v0[5];
  sub_247F98D10(*v0);
  sub_247F98D10(v1);
  swift_retain();
  swift_retain();
  id v3 = v2;
  CustomTransport.Activated.invalidate()();
}

uint64_t sub_24804E04C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_247FC3E44;
  return v6(a1);
}

uint64_t sub_24804E128(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_24804F9F0;
  return v6(a1);
}

unint64_t sub_24804E204(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_2481757B0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_248175E50();
        sub_248175E70();
        uint64_t result = sub_248175EC0();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          double v11 = (unsigned char *)(v10 + v3);
          double v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            unsigned char *v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            void *v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void *sub_24804E3C0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5B00);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2481759E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v28 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_247FBB220(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v29);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = v19;
    v21[1] = v18;
    uint64_t v22 = *(void *)(v4 + 56) + v20;
    uint64_t v23 = v30;
    long long v24 = v29[1];
    *(_OWORD *)uint64_t v22 = v29[0];
    *(_OWORD *)(v22 + 16) = v24;
    *(void *)(v22 + 32) = v23;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v28;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_24804E5B8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AC0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2481759E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_24804E76C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_2481759E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_24804E8FC()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_24804E904()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24804E93C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  return sub_24804CDCC(a1, a2, v6);
}

uint64_t sub_24804E9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for V1Command(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24804EA54(uint64_t a1)
{
  return sub_24804C4D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24804EA5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24804EA78(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24804EAB4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24804EAD0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of Transport.messageSessionTemplate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Transport.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247FD79D0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of Transport.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of TransportBuilding.onReceive(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of TransportBuilding.onInvalidation(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t *sub_24804EC74(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t sub_24804EC9C(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t type metadata accessor for AnyTransport()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24804ECF8(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t sub_24804ED50(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24804ED98(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for AnyTransportBuilder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24804EDF8(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  return swift_release();
}

void *sub_24804EE4C(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  a1[4] = a2[4];
  swift_retain();
  return a1;
}

void *sub_24804EEC8(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_15;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
LABEL_15:
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_24804EFB8(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      goto LABEL_15;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_15;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_release();
LABEL_15:
  a1[4] = a2[4];
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CustomTransport()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24804F0A0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175370();
  swift_getTupleTypeMetadata2();
  uint64_t result = sub_248175470();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_248175430();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for CustomTransport.Interface()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for CustomTransport.Interface(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CustomTransport.Interface);
}

uint64_t dispatch thunk of CustomTransport.Interface.__allocating_init(receiver:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of CustomTransport.Interface.receiveIncoming(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 152) + **(int **)(*(void *)v2 + 152));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FD79D0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of CustomTransport.Interface.receiveOutgoing(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 160) + **(int **)(*(void *)v2 + 160));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FD79D0;
  return v8(a1, a2);
}

uint64_t sub_24804F424(uint64_t a1)
{
  if (*(void *)a1) {
    swift_release();
  }
  if (*(void *)(a1 + 16)) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t sub_24804F488(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  id v8 = v7;
  swift_retain();
  return a1;
}

uint64_t sub_24804F528(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v9;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    goto LABEL_15;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
LABEL_15:
  *(void *)(a1 + 32) = a2[4];
  swift_retain();
  swift_release();
  uint64_t v10 = *(void **)(a1 + 40);
  uint64_t v11 = (void *)a2[5];
  *(void *)(a1 + 40) = v11;
  id v12 = v11;

  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_24804F64C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v9;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    goto LABEL_15;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  swift_release();
LABEL_15:
  swift_release();
  uint64_t v10 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);

  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  swift_release();
  return a1;
}

uint64_t sub_24804F73C(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_24804F798(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for CustomTransport.Activated()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24804F814(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_24804F864(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_24804F8B8(uint64_t a1)
{
  return sub_24804BFD8(a1, *(void *)(v1 + 16));
}

uint64_t sub_24804F8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for V1Command(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24804F924(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_247FCB950;
  return sub_24804B204(a1, v6, v5, v4);
}

_UNKNOWN **sub_24804F9F8()
{
  return &off_26BA85428;
}

uint64_t sub_24804FA04(char *a1, char *a2)
{
  return sub_2481207F8(*a1, *a2);
}

uint64_t sub_24804FA10()
{
  return sub_248175EC0();
}

uint64_t sub_24804FAA4()
{
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24804FB24()
{
  return sub_248175EC0();
}

uint64_t sub_24804FBB4@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_248175A30();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_24804FC14(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x4F64696C61766E69;
  if (*v1) {
    unint64_t v2 = 0xD000000000000014;
  }
  unint64_t v3 = 0x8000000248190270;
  if (!*v1) {
    unint64_t v3 = 0xEE00736E6F697470;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24804FC64(uint64_t a1)
{
  *(void *)&v16[0] = sub_248175160();
  *((void *)&v16[0] + 1) = v2;
  swift_bridgeObjectRetain();
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v3 = sub_247FB6460((uint64_t)v17), (v4 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v3, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  sub_247FB84B0((uint64_t)v17);
  v15[0] = sub_248175160();
  v15[1] = v5;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v6 = sub_247FB6460((uint64_t)v17), (v7 & 1) != 0)) {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v6, (uint64_t)v16);
  }
  else {
    memset(v16, 0, sizeof(v16));
  }
  swift_bridgeObjectRelease();
  sub_247FB84B0((uint64_t)v17);
  uint64_t v8 = *((void *)&v20 + 1);
  sub_24804FE50((uint64_t)v16, (uint64_t)v17);
  uint64_t v9 = v8 | v18;
  sub_24804FEB8((uint64_t)v17);
  if (!v9)
  {
    swift_bridgeObjectRelease();
    char v10 = 1;
LABEL_14:
    sub_24804FF18();
    swift_allocError();
    *int64_t v13 = v10;
    swift_willThrow();
    goto LABEL_15;
  }
  uint64_t v11 = *((void *)&v20 + 1);
  sub_24804FE50((uint64_t)v16, (uint64_t)v15);
  uint64_t v12 = v15[3];
  sub_24804FEB8((uint64_t)v15);
  if (v11 && v12)
  {
    swift_bridgeObjectRelease();
    char v10 = 0;
    goto LABEL_14;
  }
LABEL_15:
  sub_24804FEB8((uint64_t)v16);
  sub_24804FEB8((uint64_t)&v19);
  return a1;
}

uint64_t sub_24804FE20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24804FC64(*v1);
  if (!v2) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_24804FE50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24804FEB8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24804FF18()
{
  unint64_t result = qword_2692D8950;
  if (!qword_2692D8950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8950);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IDSMessageOptionsError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248050038);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSMessageOptionsError()
{
  return &type metadata for IDSMessageOptionsError;
}

ValueMetadata *type metadata accessor for IDSMessageOptions()
{
  return &type metadata for IDSMessageOptions;
}

ValueMetadata *type metadata accessor for IDSMessageOptions.Builder()
{
  return &type metadata for IDSMessageOptions.Builder;
}

unint64_t sub_248050094()
{
  unint64_t result = qword_2692D8958;
  if (!qword_2692D8958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8958);
  }
  return result;
}

uint64_t AISSetupContext.into(relaxed:)@<X0>(int a1@<W0>, unsigned char *a2@<X8>)
{
  LODWORD(v3) = a1;
  v196 = a2;
  uint64_t v208 = *MEMORY[0x263EF8340];
  uint64_t v4 = type metadata accessor for SignInModel();
  MEMORY[0x270FA5388](v4 - 8);
  v190 = &v165[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  v194 = &v165[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  v188 = &v165[-v9];
  uint64_t v187 = type metadata accessor for AuthenticationModel();
  uint64_t v10 = MEMORY[0x270FA5388](v187);
  v189 = &v165[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  v195 = &v165[-v12];
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_248174B90();
  unint64_t v14 = (void *)__swift_project_value_buffer(v13, (uint64_t)qword_2692D6A78);
  id v15 = v2;
  uint64_t v16 = sub_248174B70();
  int v17 = sub_2481755B0();
  uint64_t v18 = &selRef_stringValue;
  if (os_log_type_enabled(v16, (os_log_type_t)v17))
  {
    BOOL v185 = v17;
    os_log_t v186 = v16;
    v192 = v14;
    uint64_t v19 = swift_slowAlloc();
    v193 = (void *)swift_slowAlloc();
    uint64_t v184 = swift_slowAlloc();
    *(void *)&long long v202 = v184;
    *(_DWORD *)uint64_t v19 = 67113218;
    LODWORD(v191) = v3;
    LODWORD(v198[0]) = v3 & 1;
    uint64_t v183 = (uint64_t)v198 + 4;
    sub_248175730();
    *(_WORD *)(v19 + 8) = 2080;
    id v20 = objc_msgSend(v15, sel_requiredServiceTypes);
    type metadata accessor for AIDAServiceType(0);
    sub_248053B4C();
    sub_248175530();

    uint64_t v21 = sub_248175540();
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    *(void *)&v198[0] = sub_247FB6D24(v21, v23, (uint64_t *)&v202);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 18) = 2080;
    id v24 = objc_msgSend(v15, (SEL)&selRef_credential + 7);
    sub_248175530();

    uint64_t v25 = sub_248175540();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    *(void *)&v198[0] = sub_247FB6D24(v25, v27, (uint64_t *)&v202);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 28) = 1024;
    LODWORD(v23) = objc_msgSend(v15, sel_shouldBackgroundDesiredServices);

    LODWORD(v198[0]) = v23;
    sub_248175730();

    *(_WORD *)(v19 + 34) = 2112;
    id v28 = objc_msgSend(v15, sel_messageSessionTemplate);
    id v29 = v28;
    if (v28) {
      *(void *)&v198[0] = v28;
    }
    else {
      *(void *)&v198[0] = 0;
    }
    sub_248175730();
    void *v193 = v29;

    *(_WORD *)(v19 + 44) = 2112;
    id v30 = objc_msgSend(v15, sel_bleDevice);
    id v31 = v30;
    if (v30) {
      *(void *)&v198[0] = v30;
    }
    else {
      *(void *)&v198[0] = 0;
    }
    sub_248175730();
    uint64_t v32 = 0x296C6C756E28;
    v193[1] = v31;

    *(_WORD *)(v19 + 54) = 2048;
    id v33 = objc_msgSend(v15, sel_localRole);

    *(void *)&v198[0] = v33;
    sub_248175730();

    *(_WORD *)(v19 + 64) = 2048;
    id v34 = objc_msgSend(v15, sel_localRole);

    *(void *)&v198[0] = v34;
    sub_248175730();

    *(_WORD *)(v19 + 74) = 2080;
    id v35 = objc_msgSend(v15, sel_fixedPIN);
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v37 = sub_248175160();
      unint64_t v39 = v38;
    }
    else
    {
      unint64_t v39 = 0xE600000000000000;
      uint64_t v37 = 0x296C6C756E28;
    }
    *(void *)&v198[0] = sub_247FB6D24(v37, v39, (uint64_t *)&v202);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 84) = 2080;
    id v40 = objc_msgSend(v15, sel_targetAuthTag);
    if (v40)
    {
      unint64_t v41 = v40;
      uint64_t v42 = sub_248175160();
      unint64_t v44 = v43;
    }
    else
    {
      unint64_t v44 = 0xE600000000000000;
      uint64_t v42 = 0x296C6C756E28;
    }
    *(void *)&v198[0] = sub_247FB6D24(v42, v44, (uint64_t *)&v202);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 94) = 1024;
    unsigned int v45 = objc_msgSend(v15, sel_pinType);

    LODWORD(v198[0]) = v45;
    sub_248175730();

    *(_WORD *)(v19 + 100) = 2048;
    id v46 = objc_msgSend(v15, sel_deviceUserKind);

    *(void *)&v198[0] = v46;
    sub_248175730();

    *(_WORD *)(v19 + 110) = 1024;
    unsigned int v47 = objc_msgSend(v15, sel_shouldCreateDeviceUser);

    LODWORD(v198[0]) = v47;
    sub_248175730();

    *(_WORD *)(v19 + 116) = 1024;
    unsigned int v48 = objc_msgSend(v15, sel_shouldSkipConfirmation);

    LODWORD(v198[0]) = v48;
    sub_248175730();

    *(_WORD *)(v19 + 122) = 2080;
    id v49 = objc_msgSend(v15, sel_candidateAccount);
    if (v49
      && (uint64_t v50 = v49, v51 = objc_msgSend(v49, sel_altDSID), v50, v51))
    {
      uint64_t v52 = sub_248175160();
      unint64_t v54 = v53;
    }
    else
    {
      unint64_t v54 = 0xE600000000000000;
      uint64_t v52 = 0x296C6C756E28;
    }
    *(void *)&v198[0] = sub_247FB6D24(v52, v54, (uint64_t *)&v202);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 132) = 2080;
    id v55 = objc_msgSend(v15, sel_candidateAccount);
    if (v55)
    {
      unsigned int v56 = v55;
      id v57 = objc_msgSend(v55, sel_username);

      if (v57)
      {
        uint64_t v58 = sub_248175160();
        unint64_t v60 = v59;
      }
      else
      {
        unint64_t v60 = 0xE600000000000000;
        uint64_t v58 = 0x296C6C756E28;
      }
    }
    else
    {
      unint64_t v60 = 0xE600000000000000;
      uint64_t v58 = 0x296C6C756E28;
    }
    *(void *)&v198[0] = sub_247FB6D24(v58, v60, (uint64_t *)&v202);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 142) = 2080;
    id v61 = objc_msgSend(v15, sel_serverDeviceModel);
    if (v61)
    {
      uint64_t v62 = v61;
      uint64_t v32 = sub_248175160();
      unint64_t v64 = v63;
    }
    else
    {
      unint64_t v64 = 0xE600000000000000;
    }
    *(void *)&v198[0] = sub_247FB6D24(v32, v64, (uint64_t *)&v202);
    sub_248175730();

    swift_bridgeObjectRelease();
    os_log_t v65 = v186;
    _os_log_impl(&dword_247F93000, v186, (os_log_type_t)v185, "Converting objc setup context with properties (relaxed: %{BOOL}d): {\n  requiredServiceTypes:%s,\n  desiredServiceTypes:%s,\n  shouldBackgroundDesiredServices:%{BOOL}d,\n  messageSessionTemplate:%@,\n  bleDevice:%@,\n  localRole:%lu,\n  remoteRole:%lu,\n  fixedPIN:%s,\n  targetAuthTag:%s,\n  pinType:%d,\n  deviceUserKind:%lu,\n  shouldCreateDeviceUser:%{BOOL}d,\n  shouldSkipConfirmation:%{BOOL}d,\n  candidateAltDSID:%s,\n  candidateUserName:%s,\n"
      "  serverDeviceModel:%s\n"
      "}",
      (uint8_t *)v19,
      0x98u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    uint64_t v66 = v193;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v66, -1, -1);
    uint64_t v3 = v184;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v3, -1, -1);
    MEMORY[0x24C574E00](v19, -1, -1);

    LOBYTE(v3) = (_BYTE)v191;
    uint64_t v18 = &selRef_stringValue;
  }
  else
  {
  }
  id v67 = objc_msgSend(v15, sel_remoteRole);
  id v68 = [v15 v18[74]];
  AISSetupContextRemoteRole.into(with:)(v15, (uint64_t)objc_msgSend(v15, sel_remoteRole), (uint64_t)&v202);
  id v191 = (id)*((void *)&v202 + 1);
  v192 = (void *)v202;
  v193 = (void *)v203;
  if ((v203 & 0xFFFFFF00FFFF0000) == 0xFFFF00FFFF0000
    && ((DWORD2(v203) | ((unint64_t)WORD6(v203) << 32)) & 0xF800000000) == 0)
  {
    uint64_t v69 = v15;
    uint64_t v70 = sub_248174B70();
    os_log_type_t v71 = sub_2481755D0();
    if (os_log_type_enabled(v70, v71))
    {
      long long v72 = (uint8_t *)swift_slowAlloc();
      long long v73 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v72 = 138412290;
      *(void *)&long long v202 = v69;
      long long v74 = v69;
      sub_248175730();
      *long long v73 = v69;

      _os_log_impl(&dword_247F93000, v70, v71, "Failed to convert %@ into SetupContext, remote role is invalid", v72, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v73, -1, -1);
      MEMORY[0x24C574E00](v72, -1, -1);
    }
    else
    {

      uint64_t v70 = v69;
    }

    uint64_t v118 = type metadata accessor for SetupModel();
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v196, 1, 1, v118);
  }
  uint64_t v184 = (uint64_t)v67;
  os_log_t v186 = (os_log_t)(DWORD2(v203) | ((unint64_t)WORD6(v203) << 32));
  BOOL v185 = v68 != 0;
  if (v3)
  {
    id v75 = objc_msgSend(v15, sel_requiredServiceTypes);
    type metadata accessor for AIDAServiceType(0);
    sub_248053B4C();
    uint64_t v76 = sub_248175530();

    uint64_t v77 = *(void *)(v76 + 16);
    swift_bridgeObjectRelease();
    if (!v77)
    {
      id v78 = objc_msgSend(v15, sel_desiredServiceTypes);
      uint64_t v79 = sub_248175530();

      uint64_t v80 = *(void *)(v79 + 16);
      swift_bridgeObjectRelease();
      if (!v80)
      {
        uint64_t v81 = sub_248174B70();
        uint64_t v82 = sub_2481755E0();
        if (os_log_type_enabled(v81, (os_log_type_t)v82))
        {
          uint64_t v83 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v83 = 0;
          _os_log_impl(&dword_247F93000, v81, (os_log_type_t)v82, "Invalid AISSetupContext provided, no required/desired services specified. Defaulting for now (will be an error in the future).", v83, 2u);
          MEMORY[0x24C574E00](v83, -1, -1);
        }

        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEB0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24817B010;
        uint64_t v85 = (void *)*MEMORY[0x263F26D28];
        *(void *)(inited + 32) = *MEMORY[0x263F26D28];
        id v86 = v85;
        sub_248056BD8(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        unint64_t v87 = (void *)sub_248175510();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_setRequiredServiceTypes_, v87);

        uint64_t v88 = swift_initStackObject();
        *(_OWORD *)(v88 + 16) = xmmword_24817A5E0;
        uint64_t v89 = (void *)*MEMORY[0x263F26D48];
        *(void *)(v88 + 32) = *MEMORY[0x263F26D48];
        unint64_t v90 = (void *)*MEMORY[0x263F26D38];
        *(void *)(v88 + 40) = *MEMORY[0x263F26D38];
        id v91 = v89;
        id v92 = v90;
        sub_248056BD8(v88);
        swift_setDeallocating();
        swift_arrayDestroy();
        char v93 = (void *)sub_248175510();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_setDesiredServiceTypes_, v93);
      }
    }
  }
  uint64_t v94 = v15;
  v95 = sub_248174B70();
  os_log_type_t v96 = sub_2481755C0();
  if (os_log_type_enabled(v95, v96))
  {
    uint64_t v97 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v97 = 67109120;
    LODWORD(v202) = [v94 supportsSplitAccounts];
    sub_248175730();

    _os_log_impl(&dword_247F93000, v95, v96, "supportsSplitAccounts: %{BOOL}d", v97, 8u);
    MEMORY[0x24C574E00](v97, -1, -1);
  }
  else
  {

    v95 = v94;
  }

  if ([v94 shouldCreateDeviceUser]
    && ![v94 deviceUserKind])
  {
    v98 = sub_248174B70();
    os_log_type_t v99 = sub_2481755B0();
    if (os_log_type_enabled(v98, v99))
    {
      uint64_t v100 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v100 = 0;
      _os_log_impl(&dword_247F93000, v98, v99, "When asked to create user and user kind is specified as none, we will default to auto.", v100, 2u);
      MEMORY[0x24C574E00](v100, -1, -1);
    }

    [v94 setDeviceUserKind:1];
  }
  id v101 = [v94 candidateAccount];
  if (!v101) {
    goto LABEL_58;
  }
  uint64_t v102 = v101;
  id v103 = objc_msgSend(v101, sel_altDSID);

  if (!v103) {
    goto LABEL_58;
  }
  uint64_t v104 = sub_248175160();
  uint64_t v106 = v105;

  id v107 = [v94 candidateAccount];
  if (!v107
    || (v108 = v107,
        id v109 = objc_msgSend(v107, sel_username),
        v108,
        !v109))
  {
    swift_bridgeObjectRelease();
LABEL_58:
    uint64_t v104 = 0;
    uint64_t v106 = 0;
    uint64_t v180 = 0;
    uint64_t v181 = 0;
    goto LABEL_59;
  }
  uint64_t v110 = sub_248175160();
  uint64_t v180 = v111;
  uint64_t v181 = v110;

  id v112 = [v94 candidateAccount];
  if (v112)
  {
    uint64_t v113 = v112;
    id v114 = objc_msgSend(v112, sel_formattedShortName);

    if (v114)
    {
      uint64_t v115 = sub_248175160();
      uint64_t v117 = v116;

      goto LABEL_60;
    }
  }
LABEL_59:
  uint64_t v115 = 0;
  uint64_t v117 = 0;
LABEL_60:
  sub_247FE4184(v192, v191, (uint64_t)v193, (unint64_t)v186);
  id v120 = [v94 fixedPIN];
  if (v120)
  {
    v121 = v120;
    uint64_t v122 = sub_248175160();
    uint64_t v176 = v123;
    uint64_t v177 = v122;
  }
  else
  {
    uint64_t v176 = 0;
    uint64_t v177 = 0;
  }
  id v124 = [v94 targetAuthTag];
  if (v124)
  {
    v125 = v124;
    uint64_t v126 = sub_248175160();
    uint64_t v174 = v127;
    uint64_t v175 = v126;
  }
  else
  {
    uint64_t v174 = 0;
    uint64_t v175 = 0;
  }
  unsigned int v128 = [v94 pinType];
  int v129 = 0;
  uint64_t v130 = v128;
  uint64_t v131 = 4;
  switch(v128)
  {
    case 1u:
      goto LABEL_72;
    case 2u:
      uint64_t v131 = 6;
      goto LABEL_72;
    case 3u:
      uint64_t v131 = 8;
LABEL_72:
      int v129 = 1;
      uint64_t v130 = v131;
      break;
    case 4u:
      break;
    case 5u:
      uint64_t v130 = 0;
      int v129 = 0;
      break;
    case 8u:
      uint64_t v130 = 2;
      int v129 = 2;
      break;
    default:
      int v129 = 2;
      uint64_t v130 = 1;
      break;
  }
  unsigned int v169 = [v94 shouldSkipConfirmation];
  uint64_t v182 = v104;
  uint64_t v183 = v106;
  uint64_t v178 = v117;
  uint64_t v179 = v115;
  int v173 = v129;
  uint64_t v172 = v130;
  if (v106)
  {
    swift_bridgeObjectRetain();
    uint64_t v170 = v117;
    uint64_t v171 = v115;
  }
  else
  {
    uint64_t v170 = 0;
    uint64_t v171 = 0;
  }
  BOOL v168 = v68 == 0;
  uint64_t v132 = type metadata accessor for IdMSAccount();
  v133 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56);
  uint64_t v134 = (uint64_t)v188;
  v133(v188, 1, 1, v132);
  unsigned int v166 = [v94 supportsSplitAccounts];
  uint64_t v135 = (uint64_t)v189;
  v133(v189, 1, 1, v132);
  v136 = (int *)v187;
  v137 = (_OWORD *)(v135 + *(int *)(v187 + 20));
  v137[3] = 0u;
  v137[4] = 0u;
  v137[1] = 0u;
  v137[2] = 0u;
  _OWORD *v137 = 0u;
  v138 = (void *)(v135 + v136[7]);
  void *v138 = 0;
  v138[1] = 0;
  uint64_t v139 = v136[8];
  *(void *)(v135 + v139) = MEMORY[0x263F8EE78];
  v167 = v94;
  uint64_t v140 = v136[9];
  *(unsigned char *)(v135 + v140) = 0;
  v141 = (void *)(v135 + v136[11]);
  void *v141 = 0;
  v141[1] = 0;
  sub_247F9805C(v134, v135);
  *(unsigned char *)(v135 + v136[6]) = 1;
  uint64_t v142 = v135 + v136[10];
  *(_OWORD *)(v142 + 48) = 0u;
  *(_OWORD *)(v142 + 64) = 0u;
  *(_OWORD *)(v142 + 16) = 0u;
  *(_OWORD *)(v142 + 32) = 0u;
  *(_OWORD *)uint64_t v142 = 0u;
  *(unsigned char *)(v142 + 80) = 12;
  swift_bridgeObjectRelease();
  void *v138 = 0;
  v138[1] = 0;
  *(unsigned char *)(v135 + v140) = v166;
  swift_bridgeObjectRelease();
  *(void *)(v135 + v139) = MEMORY[0x263F8EE78];
  sub_2480570A0(v135, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  v133(v194, 1, 1, v132);
  long long v206 = 0u;
  long long v207 = 0u;
  long long v204 = 0u;
  long long v205 = 0u;
  long long v202 = 0u;
  long long v203 = 0u;
  v143 = v167;
  id v144 = [v167 requiredServiceTypes];
  type metadata accessor for AIDAServiceType(0);
  sub_248053B4C();
  uint64_t v145 = sub_248175530();

  id v146 = [v143 desiredServiceTypes];
  uint64_t v147 = sub_248175530();

  char v148 = [v143 shouldBackgroundDesiredServices];
  id v149 = [v143 deviceUserKind];
  unsigned int v150 = [v143 shouldCreateDeviceUser];
  unsigned int v151 = 0;
  uint64_t v152 = v168 | 0x200;
  char v153 = 3;
  switch((unint64_t)v149)
  {
    case 0uLL:
      goto LABEL_81;
    case 1uLL:
      char v153 = 1;
      goto LABEL_80;
    case 2uLL:
      unsigned int v151 = 1;
      goto LABEL_81;
    case 3uLL:
      char v153 = 2;
LABEL_80:
      unsigned int v151 = v150 ^ 1;
LABEL_81:
      v200[0] = v151;
      v200[1] = 0;
      BOOL v154 = ((v184 - 1) & 0xFFFFFFFFFFFFFFFDLL) != 0;
      char v201 = v153;
      char v199 = 0;
      memset(v198, 0, sizeof(v198));
      memset(v197, 0, sizeof(v197));
      v155 = v190;
      SignInModel.init(account:srpResults:requiredServices:desiredServices:shouldBackgroundDesiredServices:suppressCloudDataProtectionSetup:deviceUserKind:state:peerDeviceLocaleInfo:serverDeviceModel:)((uint64_t)v194, &v202, v145, v147, v148, 0, v200, v198, (uint64_t)v190, v197, 0, 0);
      id v157 = v191;
      v156 = v192;
      v158 = v193;
      os_log_t v159 = v186;
      sub_248053BA4(v192, v191, (uint64_t)v193, (unint64_t)v186);
      v160 = v196;
      unsigned char *v196 = v185;
      *((void *)v160 + 1) = v156;
      *((void *)v160 + 2) = v157;
      *((void *)v160 + 3) = v158;
      *((_WORD *)v160 + 18) = WORD2(v159);
      *((_DWORD *)v160 + 8) = v159;
      *(_OWORD *)(v160 + 40) = 0u;
      *(_OWORD *)(v160 + 56) = 0u;
      *(_OWORD *)(v160 + 72) = 0u;
      v160[88] = -1;
      v160[96] = 0;
      v160[97] = v154;
      uint64_t v161 = v174;
      *((void *)v160 + 13) = v175;
      *((void *)v160 + 14) = v161;
      uint64_t v162 = v176;
      *((void *)v160 + 15) = v177;
      *((void *)v160 + 16) = v162;
      *((void *)v160 + 17) = v172;
      v160[144] = v173;
      v160[145] = v169;
      *((void *)v160 + 19) = 0;
      *((void *)v160 + 20) = 0;
      *((void *)v160 + 21) = v152;
      *((void *)v160 + 22) = 0;
      *((void *)v160 + 23) = 0;
      *((void *)v160 + 24) = 0;
      *(_OWORD *)(v160 + 200) = xmmword_24817D830;
      v160[216] = 0;
      *((_OWORD *)v160 + 14) = 0u;
      *((_OWORD *)v160 + 15) = 0u;
      uint64_t v163 = v170;
      *((void *)v160 + 32) = v171;
      *((void *)v160 + 33) = v163;
      uint64_t v164 = type metadata accessor for SetupModel();
      *((void *)v160 + 34) = 0;
      *((void *)v160 + 35) = 0;
      sub_2480570A0((uint64_t)v195, (uint64_t)&v160[*(int *)(v164 + 32)], (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
      sub_2480570A0((uint64_t)v155, (uint64_t)&v160[*(int *)(v164 + 36)], (uint64_t (*)(void))type metadata accessor for SignInModel);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v160, 0, 1, v164);
      uint64_t result = sub_247F982A0(v182, v183);
      break;
    default:
      sub_2481759C0();
      __break(1u);
      JUMPOUT(0x24805189CLL);
  }
  return result;
}

uint64_t SetupContext.Builder.MissingExpectedValue.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

double SetupContext.Builder.init()@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = MEMORY[0x263F8EE88];
  *(void *)a1 = MEMORY[0x263F8EE88];
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 40) = 1;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  *(_WORD *)(a1 + 76) = 192;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = 1;
  *(_WORD *)(a1 + 120) = 2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 160) = &type metadata for AutomaticSetupModelExchange;
  *(void *)(a1 + 168) = &protocol witness table for AutomaticSetupModelExchange;
  uint64_t v3 = (void *)swift_allocObject();
  *(void *)(a1 + 136) = v3;
  v3[2] = &unk_2692DC090;
  v3[3] = 0;
  v3[4] = &unk_2692DC098;
  v3[5] = 0;
  v3[6] = &unk_2692DC0A0;
  v3[7] = 0;
  v3[8] = &unk_2692DC0A8;
  v3[9] = 0;
  v3[10] = &unk_2692DC0B0;
  v3[11] = 0;
  v3[12] = &unk_2692DC0B8;
  v3[13] = 0;
  v3[14] = &unk_2692DC0C0;
  v3[15] = 0;
  v3[16] = &unk_2692DC0C8;
  v3[17] = 0;
  v3[18] = &unk_2692DC0D0;
  v3[19] = 0;
  v3[21] = 0;
  v3[22] = 0;
  v3[20] = &unk_2692DC0D8;
  v3[23] = &unk_2692DC0E0;
  v3[24] = 0;
  v3[25] = &unk_2692DC0E8;
  v3[26] = 0;
  v3[27] = &unk_2692DC0F0;
  v3[28] = 0;
  v3[29] = &unk_2692DC0F8;
  v3[30] = 0;
  v3[31] = &unk_2692DC100;
  v3[32] = 0;
  v3[33] = &unk_2692DC108;
  v3[34] = 0;
  v3[35] = &unk_2692DC110;
  v3[36] = 0;
  v3[37] = &unk_2692DC118;
  v3[38] = 0;
  v3[39] = &unk_2692DC120;
  v3[40] = 0;
  v3[41] = &unk_2692DC128;
  v3[42] = 0;
  v3[43] = &unk_2692DC130;
  v3[44] = 0;
  v3[45] = &unk_2692DC138;
  v3[46] = 0;
  v3[47] = &unk_2692DC140;
  v3[48] = 0;
  v3[49] = &unk_2692DC148;
  v3[50] = 0;
  v3[51] = &unk_2692DC150;
  v3[52] = 0;
  v3[53] = &unk_2692DC158;
  v3[54] = 0;
  v3[55] = &unk_2692DC160;
  v3[56] = 0;
  v3[57] = &unk_2692DC168;
  v3[58] = 0;
  v3[59] = &unk_2692DC170;
  v3[60] = 0;
  v3[61] = &unk_2692DC178;
  v3[62] = 0;
  v3[63] = &unk_2692DC180;
  v3[64] = 0;
  v3[65] = &unk_2692DC188;
  v3[66] = 0;
  v3[67] = &unk_2692DC190;
  v3[68] = 0;
  v3[69] = &unk_2692DC198;
  v3[70] = 0;
  v3[71] = &unk_2692DC1A0;
  unsigned char v3[72] = 0;
  v3[73] = &unk_2692DC1A8;
  v3[74] = 0;
  v3[75] = &unk_2692DC1B0;
  v3[76] = 0;
  v3[77] = &unk_2692DC1B8;
  v3[78] = 0;
  v3[79] = &unk_2692DC1C0;
  v3[80] = 0;
  v3[81] = &unk_2692DC1C8;
  v3[82] = 0;
  v3[83] = &unk_2692DC1D0;
  v3[84] = 0;
  v3[85] = &unk_2692DC1D8;
  v3[86] = 0;
  v3[87] = &unk_2692DC1E0;
  v3[88] = 0;
  *(unsigned char *)(a1 + 256) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  return result;
}

void *SetupContext.Builder.requireServices(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_248051D98(v5);
  sub_24805664C(a1);
  return memcpy(a2, v2, 0x118uLL);
}

void sub_248051D98(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_248053EC4(&v13, *(id *)(*(void *)(a1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  swift_release();
}

void *SetupContext.Builder.desireServices(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_248051D98(v5);
  sub_24805664C(a1);
  return memcpy(a2, v2, 0x118uLL);
}

void *SetupContext.Builder.requireService(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_248053EC4(&v5, a1);

  return memcpy(a2, v2, 0x118uLL);
}

void *SetupContext.Builder.desireService(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_248053EC4(&v5, a1);

  return memcpy(a2, v2, 0x118uLL);
}

void *SetupContext.Builder.backgroundDesiredServices(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  v2[16] = a1;
  return memcpy(a2, v2, 0x118uLL);
}

void *SetupContext.Builder.candidateAccountID(_:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[3];
  uint64_t v14 = a1[2];
  uint64_t v15 = *a1;
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[7];
  uint64_t v12 = a1[6];
  uint64_t v13 = a1[4];
  uint64_t v7 = a1[9];
  uint64_t v8 = v2[23];
  uint64_t v10 = v2[22];
  uint64_t v11 = a1[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247F982A0(v10, v8);
  v2[22] = v15;
  v2[23] = v3;
  v2[24] = v14;
  v2[25] = v4;
  v2[26] = v13;
  v2[27] = v5;
  v2[28] = v12;
  v2[29] = v6;
  v2[30] = v11;
  v2[31] = v7;
  return memcpy(a2, v2, 0x118uLL);
}

void *SetupContext.Builder.enableManualSetup()@<X0>(void *a1@<X8>)
{
  v1[41] = 0;
  return memcpy(a1, v1, 0x118uLL);
}

void *SetupContext.Builder.restrictManualSetup()@<X0>(void *a1@<X8>)
{
  v1[41] = 1;
  return memcpy(a1, v1, 0x118uLL);
}

void *SetupContext.Builder.enableProximitySetup()@<X0>(void *a1@<X8>)
{
  sub_247FE51A0(*(void **)(v1 + 48), *(id *)(v1 + 56), *(void *)(v1 + 64), *(unsigned int *)(v1 + 72) | ((unint64_t)*(unsigned __int16 *)(v1 + 76) << 32));
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 48) = 1;
  *(_WORD *)(v1 + 76) = 192;
  *(_DWORD *)(v1 + 72) = 0;
  swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 104) = 0;
  *(void *)(v1 + 112) = 1;
  *(unsigned char *)(v1 + 120) = 2;
  return memcpy(a1, (const void *)v1, 0x118uLL);
}

void *SetupContext.Builder._enableProximitySetup(withTargetAuthTag:withCodeType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *a3;
  char v9 = *((unsigned char *)a3 + 8);
  sub_247FE51A0(*(void **)(v4 + 48), *(id *)(v4 + 56), *(void *)(v4 + 64), *(unsigned int *)(v4 + 72) | ((unint64_t)*(unsigned __int16 *)(v4 + 76) << 32));
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 48) = 1;
  *(_WORD *)(v4 + 76) = 192;
  *(_DWORD *)(v4 + 72) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 96) = a1;
  *(void *)(v4 + 104) = a2;
  *(void *)(v4 + 112) = v8;
  *(unsigned char *)(v4 + 120) = v9;
  return memcpy(a4, (const void *)v4, 0x118uLL);
}

void *SetupContext.Builder.preEstablishedServer(with:shouldSkipConfirmation:)@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  return sub_248052314(a1, a2, 0x8000000000, a3);
}

void *SetupContext.Builder.preEstablishedClient(with:shouldSkipConfirmation:)@<X0>(void *a1@<X0>, char a2@<W1>, void *a3@<X8>)
{
  return sub_248052314(a1, a2, 0x4000000000, a3);
}

void *sub_248052314@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  char v9 = *(void **)(v4 + 48);
  uint64_t v10 = *(void **)(v4 + 56);
  uint64_t v11 = *(void *)(v4 + 64);
  unint64_t v12 = *(unsigned int *)(v4 + 72) | ((unint64_t)*(unsigned __int16 *)(v4 + 76) << 32);
  id v13 = a1;
  sub_247FE51A0(v9, v10, v11, v12);
  *(void *)(v4 + 56) = 0;
  *(void *)(v4 + 64) = 0;
  *(void *)(v4 + 48) = a1;
  *(_WORD *)(v4 + 76) = WORD2(a3);
  *(_DWORD *)(v4 + 72) = a3;
  *(unsigned char *)(v4 + 121) = a2;
  return memcpy(a4, (const void *)v4, 0x118uLL);
}

void *SetupContext.Builder.restrictProximitySetup()@<X0>(void *a1@<X8>)
{
  sub_247FE51A0(*(void **)(v1 + 48), *(id *)(v1 + 56), *(void *)(v1 + 64), *(unsigned int *)(v1 + 72) | ((unint64_t)*(unsigned __int16 *)(v1 + 76) << 32));
  *(void *)(v1 + 48) = 0;
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(_WORD *)(v1 + 76) = 192;
  *(_DWORD *)(v1 + 72) = 0;
  return memcpy(a1, (const void *)v1, 0x118uLL);
}

void *SetupContext.Builder.shouldSkipConfirmation(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  v2[121] = a1;
  return memcpy(a2, v2, 0x118uLL);
}

void *SetupContext.Builder.supportsSplitAccounts(_:)@<X0>(char a1@<W0>, void *a2@<X8>)
{
  v2[256] = a1;
  return memcpy(a2, v2, 0x118uLL);
}

void *SetupContext.Builder._userKind(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  char v8 = *(unsigned char *)(a1 + 16);
  char v9 = *(unsigned char *)(v2 + 40);
  sub_247FE42A8(*(void *)a1, v5, v8);
  sub_247FE52C4(v6, v7, v9);
  *(void *)(v2 + 24) = v4;
  *(void *)(v2 + 32) = v5;
  *(unsigned char *)(v2 + 40) = v8;
  return memcpy(a2, (const void *)v2, 0x118uLL);
}

void *SetupContext.Builder._fixedPin(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[10] = a1;
  v3[11] = a2;
  return memcpy(a3, v3, 0x118uLL);
}

void *SetupContext.Builder._serverDeviceModel(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[33] = a1;
  v3[34] = a2;
  return memcpy(a3, v3, 0x118uLL);
}

void *SetupContext.Builder._proximitySetupClient(for:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)v2;
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  int v15 = *((_DWORD *)a1 + 6);
  unint64_t v6 = *((unsigned __int16 *)a1 + 8) | ((unint64_t)*((unsigned __int8 *)a1 + 20) << 32);
  unint64_t v7 = ((unint64_t)*((unsigned __int8 *)a1 + 29) << 40) | ((unint64_t)*((unsigned __int8 *)a1 + 28) << 32);
  char v8 = *(void **)(v2 + 48);
  char v9 = *(void **)(v2 + 56);
  uint64_t v10 = *(void *)(v2 + 64);
  unsigned int v12 = *(_DWORD *)(v2 + 72);
  uint64_t v11 = v2 + 72;
  unint64_t v13 = v12 | ((unint64_t)*(unsigned __int16 *)(v11 + 4) << 32);
  swift_bridgeObjectRetain();
  sub_247FE51A0(v8, v9, v10, v13);
  v3[6] = v5;
  v3[7] = v4;
  v3[8] = v6;
  *(_WORD *)(v11 + 4) = WORD2(v7);
  *(_DWORD *)uint64_t v11 = v15;
  return memcpy(a2, v3, 0x118uLL);
}

void *SetupContext.Builder._proximitySetupClientIntercept()@<X0>(void *a1@<X8>)
{
  sub_247FE51A0(*(void **)(v1 + 48), *(id *)(v1 + 56), *(void *)(v1 + 64), *(unsigned int *)(v1 + 72) | ((unint64_t)*(unsigned __int16 *)(v1 + 76) << 32));
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  *(void *)(v1 + 48) = 2;
  *(_WORD *)(v1 + 76) = 192;
  *(_DWORD *)(v1 + 72) = 0;
  return memcpy(a1, (const void *)v1, 0x118uLL);
}

void *SetupContext.Builder._context(_:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;

  v3[16] = a1;
  sub_248056F98((uint64_t)(v3 + 17), (uint64_t)v22);
  if (v23)
  {
    id v6 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8968);
    if (swift_dynamicCast())
    {
      memcpy(__dst, __src, 0x2B8uLL);
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_248174B90();
      __swift_project_value_buffer(v7, (uint64_t)qword_2692D6A78);
      char v8 = sub_248174B70();
      os_log_type_t v9 = sub_2481755C0();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v11 = swift_slowAlloc();
        v18[0] = v11;
        *(_DWORD *)uint64_t v10 = 136315138;
        swift_beginAccess();
        memcpy(v20, __dst, sizeof(v20));
        memcpy(v19, __dst, sizeof(v19));
        sub_247FFC498((uint64_t)v20);
        uint64_t v12 = sub_248175190();
        *(void *)uint64_t v19 = sub_247FB6D24(v12, v13, v18);
        sub_248175730();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_247F93000, v8, v9, "Applying main queue override on exchange: %s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v11, -1, -1);
        MEMORY[0x24C574E00](v10, -1, -1);
      }

      sub_248003BB0();
      uint64_t v14 = sub_248175630();
      swift_beginAccess();
      int v15 = *(void **)&__dst[10];
      *(void *)&__dst[10] = v14;

      *(_OWORD *)uint64_t v19 = __dst[0];
      *(_OWORD *)&v19[16] = __dst[1];
      *(_OWORD *)&v19[32] = __dst[2];
      *(_OWORD *)&v19[48] = __dst[3];
      *(_OWORD *)&v19[64] = __dst[4];
      *(_OWORD *)&v19[80] = __dst[5];
      *(_OWORD *)&v19[96] = __dst[6];
      *(_OWORD *)&v19[112] = __dst[7];
      *(_OWORD *)&v19[128] = __dst[8];
      *(_OWORD *)&v19[144] = __dst[9];
      *(_OWORD *)&v19[168] = *(_OWORD *)((char *)&__dst[10] + 8);
      *(_OWORD *)&v19[184] = *(_OWORD *)((char *)&__dst[11] + 8);
      *(_OWORD *)&v19[200] = *(_OWORD *)((char *)&__dst[12] + 8);
      *(_OWORD *)&v19[216] = *(_OWORD *)((char *)&__dst[13] + 8);
      *(_OWORD *)&v19[232] = *(_OWORD *)((char *)&__dst[14] + 8);
      *(_OWORD *)&v19[248] = *(_OWORD *)((char *)&__dst[15] + 8);
      *(void *)&v19[160] = v14;
      *(void *)&v19[264] = *((void *)&__dst[16] + 1);
      *(_OWORD *)&v19[272] = __dst[17];
      *(_OWORD *)&v19[288] = __dst[18];
      *(_OWORD *)&v19[304] = __dst[19];
      *(_OWORD *)&v19[320] = __dst[20];
      *(_OWORD *)&v19[336] = __dst[21];
      *(_OWORD *)&v19[352] = __dst[22];
      *(_OWORD *)&v19[368] = __dst[23];
      *(_OWORD *)&v19[384] = __dst[24];
      *(_OWORD *)&v19[400] = __dst[25];
      *(_OWORD *)&v19[416] = __dst[26];
      *(_OWORD *)&v19[432] = __dst[27];
      *(_OWORD *)&v19[448] = __dst[28];
      *(_OWORD *)&v19[464] = __dst[29];
      *(_OWORD *)&v19[480] = __dst[30];
      *(_OWORD *)&v19[496] = __dst[31];
      *(_OWORD *)&v19[512] = __dst[32];
      *(_OWORD *)&v19[528] = __dst[33];
      *(_OWORD *)&v19[544] = __dst[34];
      *(_OWORD *)&v19[560] = __dst[35];
      *(_OWORD *)&v19[576] = __dst[36];
      *(_OWORD *)&v19[592] = __dst[37];
      *(_OWORD *)&v19[608] = __dst[38];
      *(_OWORD *)&v19[624] = __dst[39];
      *(_OWORD *)&v19[640] = __dst[40];
      *(_OWORD *)&v19[656] = __dst[41];
      *(_OWORD *)&v19[672] = __dst[42];
      *(void *)&v19[688] = *(void *)&__dst[43];
      v18[3] = (uint64_t)&type metadata for AutomaticSetupModelExchange;
      v18[4] = (uint64_t)&protocol witness table for AutomaticSetupModelExchange;
      v18[0] = swift_allocObject();
      memcpy((void *)(v18[0] + 16), v19, 0x2B8uLL);
      sub_247FFC498((uint64_t)v19);
      sub_247FB33D4((uint64_t)(v3 + 17), &qword_2692D8960);
      sub_248057000((uint64_t)v18, (uint64_t)(v3 + 17));
      memcpy(v20, __dst, sizeof(v20));
      sub_247FFC788((uint64_t)v20);
    }
  }
  else
  {
    id v16 = a1;
    sub_247FB33D4((uint64_t)v22, &qword_2692D8960);
  }
  return memcpy(a2, v3, 0x118uLL);
}

void *SetupContext.Builder.modelExchange<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  v10[3] = a2;
  v10[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  sub_247FB33D4((uint64_t)v4 + 136, &qword_2692D8960);
  sub_248057000((uint64_t)v10, (uint64_t)v4 + 136);
  return memcpy(a4, v4, 0x118uLL);
}

uint64_t SetupContext.Builder.build()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7010);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for SetupModel();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = &v18[-v12];
  uint64_t v14 = *(void **)(v1 + 128);
  if (v14)
  {
    id v15 = v14;
    AISSetupContext.into(relaxed:)(1, v6);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_247FB33D4((uint64_t)v6, &qword_2692D7010);
      sub_248057184();
      swift_allocError();
      swift_willThrow();

      return sub_248057108(v2);
    }

    sub_2480570A0((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SetupModel);
  }
  else
  {
    sub_248057068(v1, (uint64_t)v18);
    sub_248052E28((uint64_t)v13);
  }
  sub_2480570A0((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SetupModel);
  sub_248056F98(v2 + 136, (uint64_t)v18);
  sub_248057108(v2);
  sub_2480570A0((uint64_t)v11, a1, (uint64_t (*)(void))type metadata accessor for SetupModel);
  uint64_t v17 = type metadata accessor for SetupContext();
  return sub_248057000((uint64_t)v18, a1 + *(int *)(v17 + 20));
}

uint64_t sub_248052E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v42[-v11];
  unint64_t v13 = *(void **)(v1 + 48);
  uint64_t v14 = *(void **)(v1 + 56);
  uint64_t v15 = *(void *)(v1 + 64);
  uint64_t v16 = *(unsigned __int16 *)(v1 + 76);
  unint64_t v17 = *(unsigned int *)(v1 + 72) | (unint64_t)(v16 << 32);
  unsigned int v56 = v12;
  id v62 = v13;
  id v61 = v14;
  uint64_t v60 = v15;
  unint64_t v59 = v17;
  BOOL v43 = (v16 >> 6) >= 2u;
  int v48 = *(unsigned __int8 *)(v1 + 41);
  uint64_t v54 = v48 ^ 1u | 0x200;
  uint64_t v53 = *(void *)(v1 + 80);
  uint64_t v58 = *(void *)(v1 + 88);
  uint64_t v49 = *(void *)(v1 + 96);
  uint64_t v57 = *(void *)(v1 + 104);
  uint64_t v52 = *(void *)(v1 + 112);
  int v51 = *(unsigned __int8 *)(v1 + 120);
  int v50 = *(unsigned __int8 *)(v1 + 121);
  uint64_t v18 = *(void *)(v1 + 272);
  uint64_t v55 = *(void *)(v2 + 264);
  uint64_t v47 = v18;
  uint64_t v19 = type metadata accessor for IdMSAccount();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  unint64_t v44 = v21;
  uint64_t v45 = v20 + 56;
  v21(v6, 1, 1, v19);
  v21(v10, 1, 1, v19);
  unint64_t v22 = &v10[v7[5]];
  v22[3] = 0u;
  v22[4] = 0u;
  v22[1] = 0u;
  void v22[2] = 0u;
  *unint64_t v22 = 0u;
  uint64_t v23 = &v10[v7[7]];
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v24 = v7[8];
  *(void *)&v10[v24] = MEMORY[0x263F8EE78];
  uint64_t v25 = v7[9];
  v10[v25] = 0;
  unint64_t v26 = &v10[v7[11]];
  *unint64_t v26 = 0;
  v26[1] = 0;
  sub_247FE4184(v62, v61, v60, v59);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v27 = v6;
  sub_247F9805C((uint64_t)v6, (uint64_t)v10);
  v10[v7[6]] = 1;
  id v28 = &v10[v7[10]];
  *((_OWORD *)v28 + 3) = 0u;
  *((_OWORD *)v28 + 4) = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  *((_OWORD *)v28 + 2) = 0u;
  *(_OWORD *)id v28 = 0u;
  v28[80] = 12;
  swift_bridgeObjectRelease();
  *uint64_t v23 = 0;
  v23[1] = 0;
  v10[v25] = 0;
  swift_bridgeObjectRelease();
  *(void *)&v10[v24] = MEMORY[0x263F8EE78];
  id v46 = type metadata accessor for AuthenticationModel;
  uint64_t v29 = (uint64_t)v56;
  sub_2480570A0((uint64_t)v10, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  uint64_t v30 = (uint64_t)v27;
  v44(v27, 1, 1, v19);
  memset(v68, 0, sizeof(v68));
  uint64_t v31 = *(void *)v2;
  uint64_t v32 = *(void *)(v2 + 8);
  LOBYTE(v27) = *(unsigned char *)(v2 + 16);
  uint64_t v34 = *(void *)(v2 + 24);
  uint64_t v33 = *(void *)(v2 + 32);
  LOBYTE(v25) = *(unsigned char *)(v2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE42A8(v34, v33, v25);
  sub_248057108(v2);
  v66[0] = v34;
  v66[1] = v33;
  char v67 = v25;
  char v65 = 0;
  memset(v64, 0, sizeof(v64));
  uint64_t v35 = type metadata accessor for SetupModel();
  memset(v63, 0, sizeof(v63));
  SignInModel.init(account:srpResults:requiredServices:desiredServices:shouldBackgroundDesiredServices:suppressCloudDataProtectionSetup:deviceUserKind:state:peerDeviceLocaleInfo:serverDeviceModel:)(v30, v68, v31, v32, (char)v27, 0, v66, v64, a1 + *(int *)(v35 + 36), v63, 0, 0);
  *(unsigned char *)a1 = v48;
  id v36 = v61;
  *(void *)(a1 + 8) = v62;
  *(void *)(a1 + 16) = v36;
  *(void *)(a1 + 24) = v60;
  int v37 = v59;
  *(_WORD *)(a1 + 36) = WORD2(v59);
  *(_DWORD *)(a1 + 32) = v37;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(unsigned char *)(a1 + 88) = -1;
  *(unsigned char *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 97) = v43;
  *(_DWORD *)(a1 + 98) = v64[0];
  *(_WORD *)(a1 + 102) = WORD2(v64[0]);
  uint64_t v38 = v57;
  *(void *)(a1 + 104) = v49;
  *(void *)(a1 + 112) = v38;
  uint64_t v39 = v58;
  *(void *)(a1 + 120) = v53;
  *(void *)(a1 + 128) = v39;
  *(void *)(a1 + 136) = v52;
  *(unsigned char *)(a1 + 144) = v51;
  *(unsigned char *)(a1 + 145) = v50;
  *(_DWORD *)(a1 + 146) = v63[0];
  *(_WORD *)(a1 + 150) = WORD2(v63[0]);
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = v54;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(_OWORD *)(a1 + 200) = xmmword_24817D830;
  *(unsigned char *)(a1 + 216) = 0;
  *(_DWORD *)(a1 + 217) = v68[0];
  *(_DWORD *)(a1 + 220) = *(_DWORD *)((char *)v68 + 3);
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  uint64_t v40 = v47;
  *(void *)(a1 + 272) = v55;
  *(void *)(a1 + 280) = v40;
  return sub_2480570A0(v29, a1 + *(int *)(v35 + 32), (uint64_t (*)(void))v46);
}

uint64_t sub_2480533E8@<X0>(uint64_t a1@<X8>)
{
  return SetupContext.Builder.build()(a1);
}

AppleIDSetup::SetupModel::LocalRole __swiftcall AISSetupContextLocalRole.into()()
{
  *uint64_t v1 = v0 != 0;
  return (char)v0;
}

void AISSetupContextRemoteRole.into(with:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2)
  {
    case 0:
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      goto LABEL_11;
    case 1:
      id v9 = objc_msgSend(a1, sel_bleDevice);
      if (v9)
      {
        uint64_t v10 = v9;
        id v11 = objc_msgSend(v9, sel_identifier);
        if (v11)
        {
          uint64_t v12 = v11;
          uint64_t v13 = sub_248175160();
          uint64_t v15 = v14;
        }
        else
        {
          uint64_t v13 = 0;
          uint64_t v15 = 0;
        }
        unsigned int v24 = objc_msgSend(v10, sel_proximityServicePSM);
        id v25 = objc_msgSend(v10, sel_nearbyActionType);
        unsigned int v26 = objc_msgSend(v10, sel_nearbyActionFlags);
        AISDeviceClass.init(deviceClass:)((Swift::UInt8)objc_msgSend(v10, sel_nearbyActionDeviceClass));

        *(void *)a3 = v13;
        *(void *)(a3 + 8) = v15;
        *(void *)(a3 + 16) = v24 | ((void)v25 << 32);
        *(_WORD *)(a3 + 28) = v27;
        *(_DWORD *)(a3 + 24) = v26;
        return;
      }
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v18 = sub_248174B90();
      __swift_project_value_buffer(v18, (uint64_t)qword_2692D6A78);
      uint64_t v5 = sub_248174B70();
      os_log_type_t v19 = sub_2481755D0();
      if (os_log_type_enabled(v5, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        uint64_t v21 = "Failed to convert bleClient into SetupModel.RemoteRole: missing BLE Device on context";
        goto LABEL_28;
      }
      goto LABEL_30;
    case 2:
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 1;
LABEL_11:
      *(_DWORD *)(a3 + 24) = 0;
      *(_WORD *)(a3 + 28) = 192;
      return;
    case 3:
      id v16 = objc_msgSend(a1, sel_messageSessionTemplate);
      if (v16)
      {
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)a3 = v16;
        *(_DWORD *)(a3 + 24) = 0;
        *(_WORD *)(a3 + 28) = 64;
        return;
      }
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_248174B90();
      __swift_project_value_buffer(v22, (uint64_t)qword_2692D6A78);
      uint64_t v5 = sub_248174B70();
      os_log_type_t v19 = sub_2481755D0();
      if (!os_log_type_enabled(v5, v19)) {
        goto LABEL_30;
      }
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      uint64_t v21 = "Failed to convert preEstablishedClient into SetupModel.RemoteRole: missing messageSessionTemplate on context";
      goto LABEL_28;
    case 4:
      id v17 = objc_msgSend(a1, sel_messageSessionTemplate);
      if (v17)
      {
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)a3 = v17;
        *(_DWORD *)(a3 + 24) = 0;
        *(_WORD *)(a3 + 28) = 128;
      }
      else
      {
        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v23 = sub_248174B90();
        __swift_project_value_buffer(v23, (uint64_t)qword_2692D6A78);
        uint64_t v5 = sub_248174B70();
        os_log_type_t v19 = sub_2481755D0();
        if (os_log_type_enabled(v5, v19))
        {
          uint64_t v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v20 = 0;
          uint64_t v21 = "Failed to convert preEstablishedServer into SetupModel.RemoteRole: missing messageSessionTemplate on context";
LABEL_28:
          _os_log_impl(&dword_247F93000, v5, v19, v21, v20, 2u);
          uint64_t v8 = v20;
LABEL_29:
          MEMORY[0x24C574E00](v8, -1, -1);
        }
LABEL_30:

        *(void *)a3 = 0;
        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0xFFFF00FFFF0000;
        *(_WORD *)(a3 + 28) = 0;
        *(_DWORD *)(a3 + 24) = 0;
      }
      return;
    default:
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_248174B90();
      __swift_project_value_buffer(v4, (uint64_t)qword_2692D6A78);
      uint64_t v5 = sub_248174B70();
      os_log_type_t v6 = sub_2481755D0();
      if (!os_log_type_enabled(v5, v6)) {
        goto LABEL_30;
      }
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 134217984;
      sub_248175730();
      _os_log_impl(&dword_247F93000, v5, v6, "Failed to convert unknown AISSetupContextRemoteRole into SetupModel.RemoteRole: %lu", v7, 0xCu);
      uint64_t v8 = v7;
      goto LABEL_29;
  }
}

id AISSetupContextDeviceUserKind.into(with:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id result = objc_msgSend(a1, sel_shouldCreateDeviceUser);
  uint64_t v6 = result ^ 1;
  switch(a2)
  {
    case 0:
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      char v7 = 3;
      break;
    case 1:
      *(void *)a3 = v6;
      *(void *)(a3 + 8) = 0;
      char v7 = 1;
      break;
    case 2:
      *(_OWORD *)a3 = xmmword_248177B60;
      char v7 = 3;
      break;
    case 3:
      *(void *)a3 = v6;
      *(void *)(a3 + 8) = 0;
      char v7 = 2;
      break;
    default:
      sub_2481759C0();
      __break(1u);
      JUMPOUT(0x248053980);
  }
  *(unsigned char *)(a3 + 16) = v7;
  return result;
}

uint64_t AISSetupContextDeviceUserKind.into(onlyPersona:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  switch(a2)
  {
    case 0:
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      char v3 = 3;
      break;
    case 1:
      *(void *)a3 = result & 1;
      *(void *)(a3 + 8) = 0;
      char v3 = 1;
      break;
    case 2:
      *(_OWORD *)a3 = xmmword_248177B60;
      char v3 = 3;
      break;
    case 3:
      *(void *)a3 = result & 1;
      *(void *)(a3 + 8) = 0;
      char v3 = 2;
      break;
    default:
      sub_2481759C0();
      __break(1u);
      JUMPOUT(0x248053A54);
  }
  *(unsigned char *)(a3 + 16) = v3;
  return result;
}

void sub_248053A64(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_248175730();
  *a1 = v7;
  uint64_t v8 = *a2;
  if (*a2)
  {
    void *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t sub_248053B1C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_248053B4C()
{
  unint64_t result = qword_26B13BE70;
  if (!qword_26B13BE70)
  {
    type metadata accessor for AIDAServiceType(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13BE70);
  }
  return result;
}

void sub_248053BA4(void *a1, id a2, uint64_t a3, unint64_t a4)
{
  if ((a3 & 0xFFFFFF00FFFF0000) != 0xFFFF00FFFF0000 || (a4 & 0xF800000000) != 0) {
    sub_247FE51A0(a1, a2, a3, a4);
  }
}

uint64_t sub_248053BCC(unint64_t *a1, unint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = *v2;
  sub_248175E50();
  switch(a2)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_248175E70();
      swift_bridgeObjectRetain();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_247FDE2AC((uint64_t)v18, a2);
      break;
  }
  uint64_t v7 = sub_248175EC0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18[0] = *v3;
    *char v3 = 0x8000000000000000;
    sub_247FEFB98(a2);
    sub_248054FB4(a2, v9, isUniquelyReferenced_nonNull_native);
    *char v3 = v18[0];
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v10 = ~v8;
  while (2)
  {
    uint64_t v11 = *(void *)(v6 + 48);
    unint64_t v12 = *(void *)(v11 + 8 * v9);
    switch(v12)
    {
      case 0uLL:
        if (a2) {
          goto LABEL_16;
        }
        sub_247FEFBA8(0);
        unint64_t v16 = 0;
        goto LABEL_22;
      case 1uLL:
        if (a2 != 1) {
          goto LABEL_16;
        }
        sub_247FEFBA8(1uLL);
        unint64_t v16 = 1;
        goto LABEL_22;
      case 2uLL:
        if (a2 != 2) {
          goto LABEL_16;
        }
        sub_247FEFBA8(2uLL);
        unint64_t v16 = 2;
        goto LABEL_22;
      case 3uLL:
        if (a2 != 3) {
          goto LABEL_16;
        }
        sub_247FEFBA8(3uLL);
        unint64_t v16 = 3;
LABEL_22:
        sub_247FEFBA8(v16);
        swift_bridgeObjectRelease();
        goto LABEL_23;
      default:
        if (a2 < 4)
        {
LABEL_16:
          sub_247FEFB98(a2);
          sub_247FEFB98(v12);
          sub_247FEFBA8(v12);
          sub_247FEFBA8(a2);
LABEL_17:
          unint64_t v9 = (v9 + 1) & v10;
          if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_21;
          }
          continue;
        }
        sub_247FEFB98(*(void *)(v11 + 8 * v9));
        sub_247FEFB98(a2);
        sub_247FEFB98(v12);
        char v13 = sub_24815D598(v12, a2);
        sub_247FEFBA8(v12);
        sub_247FEFBA8(a2);
        sub_247FEFBA8(v12);
        if ((v13 & 1) == 0) {
          goto LABEL_17;
        }
        swift_bridgeObjectRelease();
        sub_247FEFBA8(a2);
LABEL_23:
        unint64_t v17 = *(void *)(*(void *)(*v3 + 48) + 8 * v9);
        *a1 = v17;
        sub_247FEFB98(v17);
        return 0;
    }
  }
}

uint64_t sub_248053EC4(void *a1, void *a2)
{
  char v3 = v2;
  uint64_t v6 = *v2;
  sub_248175160();
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  uint64_t v7 = sub_248175EC0();
  swift_bridgeObjectRelease();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v3;
    *char v3 = 0x8000000000000000;
    id v24 = a2;
    sub_24805525C((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *char v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  uint64_t v10 = sub_248175160();
  uint64_t v12 = v11;
  if (v10 == sub_248175160() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_248175CE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      uint64_t v16 = ~v8;
      do
      {
        unint64_t v9 = (v9 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v17 = sub_248175160();
        uint64_t v19 = v18;
        if (v17 == sub_248175160() && v19 == v20) {
          goto LABEL_16;
        }
        char v22 = sub_248175CE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  unsigned int v26 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  id v27 = v26;
  return 0;
}

uint64_t sub_2480540F0(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *v2;
  sub_248175E50();
  long long v6 = *(_OWORD *)(a2 + 16);
  v33[0] = *(_OWORD *)a2;
  v33[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v33[2] = *(_OWORD *)(a2 + 32);
  v33[3] = v7;
  v33[4] = *(_OWORD *)(a2 + 64);
  unint64_t v8 = *(void *)(a2 + 80);
  long long v9 = v33[0];
  swift_bridgeObjectRetain();
  sub_2480181D4((uint64_t)v33);
  sub_2481751A0();
  sub_248018240((uint64_t)v33);
  uint64_t v28 = a1;
  id v27 = v2;
  switch(v8)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_247FDE2AC((uint64_t)v32, v8);
      sub_247FEFBA8(v8);
      break;
  }
  int v30 = *(unsigned __int8 *)(a2 + 88);
  sub_248175E80();
  uint64_t v10 = sub_248175EC0();
  uint64_t v11 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v31 = ~v11;
    while (1)
    {
      uint64_t v14 = *(void *)(v5 + 48) + 96 * v12;
      unint64_t v13 = *(void *)(v14 + 80);
      int v15 = *(unsigned __int8 *)(v14 + 88);
      BOOL v16 = *(void *)v14 == (void)v9 && *(void *)(v14 + 8) == *((void *)&v9 + 1);
      if (!v16 && (sub_248175CE0() & 1) == 0) {
        goto LABEL_9;
      }
      switch(v13)
      {
        case 0uLL:
          if (!v8) {
            goto LABEL_24;
          }
          goto LABEL_7;
        case 1uLL:
          if (v8 == 1) {
            goto LABEL_24;
          }
          goto LABEL_7;
        case 2uLL:
          if (v8 == 2) {
            goto LABEL_24;
          }
          goto LABEL_7;
        case 3uLL:
          if (v8 != 3) {
            goto LABEL_7;
          }
LABEL_24:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_247FEFB98(v13);
          sub_247FEFBA8(v13);
          sub_247FEFBA8(v13);
          goto LABEL_25;
        default:
          if (v8 < 4)
          {
LABEL_7:
            sub_247FEFB98(v8);
            sub_247FEFB98(v13);
            sub_247FEFBA8(v13);
            unint64_t v13 = v8;
LABEL_8:
            sub_247FEFBA8(v13);
            goto LABEL_9;
          }
          sub_247FEFB98(v8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_247FEFB98(v13);
          sub_247FEFB98(v13);
          char v29 = sub_24815D598(v13, v8);
          sub_247FEFBA8(v13);
          sub_247FEFBA8(v8);
          if ((v29 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_8;
          }
LABEL_25:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_247FEFBA8(v13);
          if (v15 == v30)
          {
            swift_bridgeObjectRelease();
            sub_24805BA58(a2);
            uint64_t v17 = *(void *)(*v27 + 48) + 96 * v12;
            uint64_t v18 = *(void *)(v17 + 8);
            uint64_t v19 = *(void *)(v17 + 16);
            uint64_t v20 = *(void *)(v17 + 72);
            unint64_t v21 = *(void *)(v17 + 80);
            char v22 = *(unsigned char *)(v17 + 88);
            *(void *)uint64_t v28 = *(void *)v17;
            *(void *)(v28 + 8) = v18;
            *(void *)(v28 + 16) = v19;
            *(_OWORD *)(v28 + 24) = *(_OWORD *)(v17 + 24);
            *(_OWORD *)(v28 + 40) = *(_OWORD *)(v17 + 40);
            *(_OWORD *)(v28 + 56) = *(_OWORD *)(v17 + 56);
            *(void *)(v28 + 72) = v20;
            *(void *)(v28 + 80) = v21;
            *(unsigned char *)(v28 + 88) = v22;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_247FEFB98(v21);
            return 0;
          }
LABEL_9:
          unint64_t v12 = (v12 + 1) & v31;
          if (((*(void *)(v5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
            goto LABEL_27;
          }
          break;
      }
    }
  }
LABEL_27:
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32[0] = *v27;
  *id v27 = 0x8000000000000000;
  sub_24801C074(a2);
  sub_24805548C(a2, v12, isUniquelyReferenced_nonNull_native);
  *id v27 = v32[0];
  swift_bridgeObjectRelease();
  long long v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v28 + 48) = v25;
  *(_OWORD *)(v28 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v28 + 73) = *(_OWORD *)(a2 + 73);
  long long v26 = *(_OWORD *)(a2 + 16);
  uint64_t result = 1;
  *(_OWORD *)uint64_t v28 = *(_OWORD *)a2;
  *(_OWORD *)(v28 + 16) = v26;
  return result;
}

uint64_t sub_2480545C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8990);
  uint64_t v3 = sub_248175830();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_40;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  long long v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_41;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = v6[v15];
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = v6[v11];
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = v6[v11];
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = v6[v17];
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v11 >= v9) {
                goto LABEL_36;
              }
              unint64_t v16 = v6[v11];
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_248175E50();
    switch(v18)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        sub_248175E70();
        break;
      default:
        sub_248175E70();
        sub_247FDE2AC((uint64_t)v29, v18);
        break;
    }
    uint64_t v19 = sub_248175EC0();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x2480548ECLL);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *long long v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2480548FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2692D89A0);
  uint64_t v3 = sub_248175830();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v27 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v29 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v28 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28) {
          goto LABEL_33;
        }
        unint64_t v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v28) {
            goto LABEL_33;
          }
          unint64_t v15 = v29[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v28) {
              goto LABEL_33;
            }
            unint64_t v15 = v29[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v27;
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v29 = -1 << v26;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v28) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v29[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_248175160();
      sub_248175E50();
      sub_2481751A0();
      uint64_t v18 = sub_248175EC0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void sub_248054C10()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8998);
  uint64_t v3 = sub_248175830();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v5 = (void *)(v2 + 56);
    uint64_t v6 = -1;
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    swift_retain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v15 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return;
        }
        if (v15 >= v8) {
          goto LABEL_22;
        }
        unint64_t v16 = v5[v15];
        ++v9;
        if (!v16)
        {
          int64_t v9 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_22;
          }
          unint64_t v16 = v5[v9];
          if (!v16)
          {
            int64_t v9 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_22;
            }
            unint64_t v16 = v5[v9];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_22:
                swift_release();
                uint64_t v18 = 1 << *(unsigned char *)(v2 + 32);
                if (v18 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v5 = -1 << v18;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v5[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v9 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_28;
                  }
                  if (v9 >= v8) {
                    goto LABEL_22;
                  }
                  unint64_t v16 = v5[v9];
                  ++v17;
                  if (v16) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v9 = v17;
            }
          }
        }
LABEL_21:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v11 = __clz(__rbit64(v16)) + (v9 << 6);
      }
      unint64_t v12 = (_OWORD *)(*(void *)(v2 + 48) + 96 * v11);
      long long v13 = v12[3];
      void v19[2] = v12[2];
      v19[3] = v13;
      v20[0] = v12[4];
      *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v12 + 73);
      long long v14 = v12[1];
      v19[0] = *v12;
      v19[1] = v14;
      sub_248054E0C((uint64_t)v19, v3);
    }
  }
  swift_release();
  *uint64_t v1 = v3;
}

__n128 sub_248054E0C(uint64_t a1, uint64_t a2)
{
  sub_248175E50();
  long long v4 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  void v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v5;
  v13[4] = *(_OWORD *)(a1 + 64);
  unint64_t v6 = *(void *)(a1 + 80);
  sub_2480181D4((uint64_t)v13);
  sub_2481751A0();
  sub_248018240((uint64_t)v13);
  switch(v6)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_247FDE2AC((uint64_t)v12, v6);
      sub_247FEFBA8(v6);
      break;
  }
  sub_248175E80();
  sub_248175EC0();
  unint64_t v7 = sub_2481757C0();
  *(void *)(a2 + 56 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v7;
  int64_t v8 = (_OWORD *)(*(void *)(a2 + 48) + 96 * v7);
  long long v9 = *(_OWORD *)(a1 + 48);
  v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v9;
  v8[4] = *(_OWORD *)(a1 + 64);
  *(_OWORD *)((char *)v8 + 73) = *(_OWORD *)(a1 + 73);
  __n128 result = *(__n128 *)a1;
  long long v11 = *(_OWORD *)(a1 + 16);
  _OWORD *v8 = *(_OWORD *)a1;
  v8[1] = v11;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_248054FB4(unint64_t result, unint64_t a2, char a3)
{
  long long v4 = v3;
  unint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_2480545C4();
    }
    else
    {
      if (v8 > v7)
      {
        __n128 result = (unint64_t)sub_2480558EC();
        goto LABEL_26;
      }
      sub_248055E90();
    }
    uint64_t v9 = *v3;
    sub_248175E50();
    switch(v6)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        sub_248175E70();
        break;
      default:
        sub_248175E70();
        sub_247FDE2AC((uint64_t)v18, v6);
        break;
    }
    uint64_t v3 = (uint64_t *)v18;
    __n128 result = sub_248175EC0();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        uint64_t v12 = *(void *)(v9 + 48);
        uint64_t v3 = *(uint64_t **)(v12 + 8 * a2);
        switch((unint64_t)v3)
        {
          case 0uLL:
            if (!v6) {
              goto LABEL_29;
            }
            goto LABEL_14;
          case 1uLL:
            if (v6 == 1) {
              goto LABEL_29;
            }
            goto LABEL_14;
          case 2uLL:
            if (v6 != 2) {
              goto LABEL_14;
            }
            goto LABEL_29;
          case 3uLL:
            if (v6 == 3) {
              goto LABEL_29;
            }
            goto LABEL_14;
          default:
            if (v6 < 4)
            {
LABEL_14:
              sub_247FEFB98(*(void *)(v12 + 8 * a2));
              sub_247FEFB98(v6);
              sub_247FEFBA8((unint64_t)v3);
              __n128 result = sub_247FEFBA8(v6);
            }
            else
            {
              sub_247FEFB98(*(void *)(v12 + 8 * a2));
              sub_247FEFB98((unint64_t)v3);
              sub_247FEFB98(v6);
              char v13 = sub_24815D598((uint64_t)v3, v6);
              sub_247FEFBA8((unint64_t)v3);
              sub_247FEFBA8(v6);
              __n128 result = sub_247FEFBA8((unint64_t)v3);
              if (v13) {
                goto LABEL_30;
              }
            }
            a2 = (a2 + 1) & v11;
            if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_26;
            }
            break;
        }
      }
    }
  }
LABEL_26:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
LABEL_29:
    sub_247FEFBA8((unint64_t)v3);
    sub_247FEFBA8((unint64_t)v3);
LABEL_30:
    sub_248175D70();
    __break(1u);
    JUMPOUT(0x24805523CLL);
  }
  *(void *)(v14 + 16) = v17;
  return result;
}

uint64_t sub_24805525C(uint64_t result, unint64_t a2, char a3)
{
  long long v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  if (a3)
  {
    sub_2480548FC();
  }
  else
  {
    if (v8 > v7)
    {
      __n128 result = (uint64_t)sub_248055A98();
LABEL_22:
      uint64_t v25 = *v4;
      *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v25 + 48) + 8 * a2) = v6;
      uint64_t v26 = *(void *)(v25 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (!v27)
      {
        *(void *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_24805619C();
  }
  uint64_t v9 = *v3;
  sub_248175160();
  sub_248175E50();
  sub_2481751A0();
  uint64_t v10 = sub_248175EC0();
  __n128 result = swift_bridgeObjectRelease();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v12 = sub_248175160();
  uint64_t v14 = v13;
  if (v12 == sub_248175160() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v17 = sub_248175CE0();
  swift_bridgeObjectRelease();
  __n128 result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    uint64_t v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v19 = sub_248175160();
      uint64_t v21 = v20;
      if (v19 == sub_248175160() && v21 == v22) {
        goto LABEL_25;
      }
      char v24 = sub_248175CE0();
      swift_bridgeObjectRelease();
      __n128 result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for AIDAServiceType(0);
  __n128 result = sub_248175D70();
  __break(1u);
  return result;
}

unint64_t sub_24805548C(unint64_t result, unint64_t a2, char a3)
{
  unint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v28 = (_OWORD *)result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_248054C10();
    }
    else
    {
      if (v7 > v6)
      {
        __n128 result = (unint64_t)sub_248055C44();
        goto LABEL_33;
      }
      sub_24805647C();
    }
    uint64_t v8 = *v3;
    sub_248175E50();
    long long v9 = *(_OWORD *)(v5 + 16);
    v34[0] = *(_OWORD *)v5;
    v34[1] = v9;
    long long v10 = *(_OWORD *)(v5 + 48);
    v34[2] = *(_OWORD *)(v5 + 32);
    v34[3] = v10;
    v34[4] = *(_OWORD *)(v5 + 64);
    unint64_t v11 = *(void *)(v5 + 80);
    long long v12 = v34[0];
    sub_2480181D4((uint64_t)v34);
    sub_2481751A0();
    sub_248018240((uint64_t)v34);
    switch(v11)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        sub_248175E70();
        break;
      default:
        sub_248175E70();
        swift_bridgeObjectRetain();
        sub_247FDE2AC((uint64_t)v33, v11);
        sub_247FEFBA8(v11);
        break;
    }
    int v29 = *(unsigned __int8 *)(v5 + 88);
    sub_248175E80();
    __n128 result = sub_248175EC0();
    uint64_t v13 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v13;
    uint64_t v32 = v8 + 56;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v30 = v8;
      uint64_t v31 = ~v13;
      while (1)
      {
        uint64_t v15 = *(void *)(v8 + 48) + 96 * a2;
        unint64_t v14 = *(void *)(v15 + 80);
        int v16 = *(unsigned __int8 *)(v15 + 88);
        if (*(void *)v15 != (void)v12 || *(void *)(v15 + 8) != *((void *)&v12 + 1))
        {
          __n128 result = sub_248175CE0();
          if ((result & 1) == 0) {
            goto LABEL_15;
          }
        }
        switch(v14)
        {
          case 0uLL:
            if (v11) {
              goto LABEL_13;
            }
            goto LABEL_27;
          case 1uLL:
            if (v11 == 1) {
              goto LABEL_27;
            }
            goto LABEL_13;
          case 2uLL:
            if (v11 == 2) {
              goto LABEL_27;
            }
            goto LABEL_13;
          case 3uLL:
            if (v11 != 3) {
              goto LABEL_13;
            }
LABEL_27:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_247FEFB98(v14);
            sub_247FEFBA8(v14);
            sub_247FEFBA8(v14);
            goto LABEL_28;
          default:
            if (v11 < 4)
            {
LABEL_13:
              sub_247FEFB98(v11);
              sub_247FEFB98(v14);
              sub_247FEFBA8(v14);
              unint64_t v14 = v11;
LABEL_14:
              __n128 result = sub_247FEFBA8(v14);
              goto LABEL_15;
            }
            sub_247FEFB98(v11);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_247FEFB98(v14);
            sub_247FEFB98(v14);
            char v18 = sub_24815D598(v14, v11);
            sub_247FEFBA8(v14);
            sub_247FEFBA8(v11);
            if ((v18 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v8 = v30;
              goto LABEL_14;
            }
LABEL_28:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __n128 result = sub_247FEFBA8(v14);
            uint64_t v8 = v30;
            if (v16 == v29) {
              goto LABEL_37;
            }
LABEL_15:
            a2 = (a2 + 1) & v31;
            if (((*(void *)(v32 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_33;
            }
            break;
        }
      }
    }
  }
LABEL_33:
  uint64_t v19 = *v27;
  *(void *)(*v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v20 = (_OWORD *)(*(void *)(v19 + 48) + 96 * a2);
  long long v21 = v28[1];
  _OWORD *v20 = *v28;
  v20[1] = v21;
  *(_OWORD *)((char *)v20 + 73) = *(_OWORD *)((char *)v28 + 73);
  long long v22 = v28[4];
  long long v23 = v28[2];
  v20[3] = v28[3];
  void v20[4] = v22;
  _OWORD v20[2] = v23;
  uint64_t v24 = *(void *)(v19 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
LABEL_37:
    sub_248175D70();
    __break(1u);
    JUMPOUT(0x2480558CCLL);
  }
  *(void *)(v19 + 16) = v26;
  return result;
}

void *sub_2480558EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8990);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_248175820();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    __n128 result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  __n128 result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    __n128 result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    __n128 result = (void *)sub_247FEFB98(v17);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_248055A98()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2692D89A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_248175820();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_248055C44()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8998);
  uint64_t v28 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_248175820();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v28 = v3;
    return result;
  }
  id result = (void *)(v2 + 56);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 56);
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v5) {
    id result = memmove(result, __src, 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v11) {
      goto LABEL_28;
    }
    unint64_t v26 = *((void *)__src + v25);
    ++v7;
    if (!v26)
    {
      int64_t v7 = v25 + 1;
      if (v25 + 1 >= v11) {
        goto LABEL_28;
      }
      unint64_t v26 = *((void *)__src + v7);
      if (!v26)
      {
        int64_t v7 = v25 + 2;
        if (v25 + 2 >= v11) {
          goto LABEL_28;
        }
        unint64_t v26 = *((void *)__src + v7);
        if (!v26) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v13 = __clz(__rbit64(v26)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 96 * v13;
    uint64_t v15 = *(void *)(v1 + 48) + v14;
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
    uint64_t v18 = *(void *)(v15 + 72);
    unint64_t v19 = *(void *)(v15 + 80);
    char v20 = *(unsigned char *)(v15 + 88);
    uint64_t v21 = *(void *)(v3 + 48) + v14;
    long long v22 = *(_OWORD *)(v15 + 24);
    long long v23 = *(_OWORD *)(v15 + 40);
    long long v24 = *(_OWORD *)(v15 + 56);
    *(void *)uint64_t v21 = *(void *)v15;
    *(void *)(v21 + 8) = v16;
    *(void *)(v21 + 16) = v17;
    *(_OWORD *)(v21 + 24) = v22;
    *(_OWORD *)(v21 + 40) = v23;
    *(_OWORD *)(v21 + 56) = v24;
    *(void *)(v21 + 72) = v18;
    *(void *)(v21 + 80) = v19;
    *(unsigned char *)(v21 + 88) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)sub_247FEFB98(v19);
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v11) {
    goto LABEL_28;
  }
  unint64_t v26 = *((void *)__src + v27);
  if (v26)
  {
    int64_t v7 = v27;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v7 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_28;
    }
    unint64_t v26 = *((void *)__src + v7);
    ++v27;
    if (v26) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_248055E90()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8990);
  uint64_t v3 = sub_248175830();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v9) {
      break;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v9) {
        break;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v9) {
          break;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v9) {
            break;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_36;
              }
              unint64_t v16 = *(void *)(v6 + 8 * v11);
              ++v17;
              if (v16) {
                goto LABEL_23;
              }
            }
          }
          int64_t v11 = v17;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_248175E50();
    switch(v18)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        sub_248175E70();
        break;
      default:
        sub_248175E70();
        swift_bridgeObjectRetain();
        sub_247FDE2AC((uint64_t)v28, v18);
        break;
    }
    uint64_t v19 = sub_248175EC0();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v20) >> 6;
    do
    {
      if (++v22 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x24805618CLL);
      }
      BOOL v25 = v22 == v24;
      if (v22 == v24) {
        unint64_t v22 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v10 + 8 * v22);
    }
    while (v26 == -1);
    unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
LABEL_7:
    *(void *)(v10 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
LABEL_36:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_38:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_24805619C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2692D89A0);
  uint64_t v3 = sub_248175830();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  int64_t v27 = v0;
  uint64_t v28 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v13);
    sub_248175160();
    sub_248175E50();
    id v18 = v17;
    sub_2481751A0();
    uint64_t v19 = sub_248175EC0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v21) & ~*(void *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_24805647C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8998);
  uint64_t v3 = sub_248175830();
  if (!*(void *)(v2 + 16))
  {
    swift_release();
LABEL_24:
    *uint64_t v1 = v3;
    return;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = v2 + 56;
  uint64_t v6 = -1;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v4 + 63) >> 6;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_6;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v8) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v8) {
        goto LABEL_22;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v8) {
          goto LABEL_22;
        }
        unint64_t v18 = *(void *)(v5 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v11 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_6:
    unint64_t v12 = (_OWORD *)(*(void *)(v2 + 48) + 96 * v11);
    long long v13 = v12[1];
    v20[0] = *v12;
    v20[1] = v13;
    long long v15 = v12[3];
    long long v14 = v12[4];
    long long v16 = v12[2];
    *(_OWORD *)&v21[9] = *(_OWORD *)((char *)v12 + 73);
    v20[3] = v15;
    *(_OWORD *)unint64_t v21 = v14;
    _OWORD v20[2] = v16;
    sub_24801C074((uint64_t)v20);
    sub_248054E0C((uint64_t)v20, v3);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v8)
  {
LABEL_22:
    swift_release_n();
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v8) {
      goto LABEL_22;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
}

void sub_24805664C(uint64_t a1)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return;
  }
  uint64_t v3 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return;
    }
    if (v13 >= v7) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    id v11 = *(id *)(*(void *)(a1 + 48) + 8 * v10);
    unint64_t v12 = (void *)sub_2480567E0();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v15;
    goto LABEL_23;
  }
LABEL_24:
  swift_release();
}

uint64_t sub_2480567E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_248175160();
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  uint64_t v3 = sub_248175EC0();
  swift_bridgeObjectRelease();
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = v3 & ~v4;
  if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = sub_248175160();
  uint64_t v8 = v7;
  if (v6 == sub_248175160() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_248175CE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      do
      {
        unint64_t v5 = (v5 + 1) & v12;
        if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v13 = sub_248175160();
        uint64_t v15 = v14;
        if (v13 == sub_248175160() && v15 == v16) {
          goto LABEL_16;
        }
        char v18 = sub_248175CE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v1;
  uint64_t v23 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_248055A98();
    uint64_t v21 = v23;
  }
  uint64_t v19 = *(void *)(*(void *)(v21 + 48) + 8 * v5);
  sub_2480569F4(v5);
  *uint64_t v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t sub_2480569F4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_2481757B0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = *(void **)(*(void *)(v3 + 48) + 8 * v6);
        sub_248175160();
        sub_248175E50();
        id v11 = v10;
        sub_2481751A0();
        uint64_t v12 = sub_248175EC0();

        swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(v3 + 48);
          uint64_t v15 = (void *)(v14 + 8 * v2);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_248056BD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2692D89A0);
    uint64_t v3 = sub_248175840();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      unint64_t v6 = *(void **)(v32 + 8 * v4);
      sub_248175160();
      sub_248175E50();
      id v7 = v6;
      sub_2481751A0();
      uint64_t v8 = sub_248175EC0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = sub_248175160();
        uint64_t v17 = v16;
        if (v15 == sub_248175160() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = sub_248175CE0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = sub_248175160();
          uint64_t v24 = v23;
          if (v22 == sub_248175160() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = sub_248175CE0();
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return v3;
      }
    }
  }
  return MEMORY[0x263F8EE88];
}

uint64_t sub_248056E08()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 712, 7);
}

uint64_t sub_248056F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_248057000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248057068(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2480570A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_248057108(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for SetupContext()
{
  uint64_t result = qword_2692D8978;
  if (!qword_2692D8978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_248057184()
{
  unint64_t result = qword_2692D8970;
  if (!qword_2692D8970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8970);
  }
  return result;
}

_UNKNOWN **sub_2480571D8()
{
  return &protocol witness table for SetupContext.Builder;
}

uint64_t initializeBufferWithCopyOfBuffer for SetupContext(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    uint64_t v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    id v7 = (void *)a2[1];
    uint64_t v8 = (void *)a2[2];
    uint64_t v9 = a2[3];
    uint64_t v10 = *((unsigned __int16 *)a2 + 18);
    uint64_t v11 = *((unsigned int *)a2 + 8);
    sub_247FE4184(v7, v8, v9, v11 | (v10 << 32));
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(_WORD *)(a1 + 36) = v10;
    *(_DWORD *)(a1 + 32) = v11;
    unsigned int v12 = *((unsigned __int8 *)a2 + 88);
    v190 = a2;
    uint64_t v172 = a3;
    if (v12 <= 0xF9)
    {
      uint64_t v16 = a2[5];
      uint64_t v17 = a2[6];
      uint64_t v18 = a2[7];
      uint64_t v19 = a2[8];
      uint64_t v20 = a2[9];
      uint64_t v21 = a2[10];
      sub_247FA9804(v16, v17, v18, v19, v20, v21, v12);
      *(void *)(a1 + 40) = v16;
      *(void *)(a1 + 48) = v17;
      *(void *)(a1 + 56) = v18;
      *(void *)(a1 + 64) = v19;
      *(void *)(a1 + 72) = v20;
      *(void *)(a1 + 80) = v21;
      *(unsigned char *)(a1 + 88) = v12;
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 56) = v13;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
      *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
    }
    *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    *(unsigned char *)(a1 + 97) = *((unsigned char *)a2 + 97);
    uint64_t v22 = a2[14];
    *(void *)(a1 + 104) = a2[13];
    *(void *)(a1 + 112) = v22;
    uint64_t v23 = a2[16];
    *(void *)(a1 + 120) = a2[15];
    *(void *)(a1 + 128) = v23;
    *(void *)(a1 + 136) = a2[17];
    *(_WORD *)(a1 + 144) = *((_WORD *)a2 + 72);
    uint64_t v24 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v24;
    uint64_t v25 = a2[21];
    uint64_t v26 = a2[22];
    uint64_t v27 = a2[23];
    uint64_t v28 = a2[24];
    uint64_t v29 = a2[25];
    uint64_t v30 = a2[26];
    unsigned int v31 = *((unsigned __int8 *)v190 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FE41AC(v25, v26, v27, v28, v29, v30, v31);
    *(void *)(a1 + 168) = v25;
    *(void *)(a1 + 176) = v26;
    *(void *)(a1 + 184) = v27;
    *(void *)(a1 + 192) = v28;
    *(void *)(a1 + 200) = v29;
    *(void *)(a1 + 208) = v30;
    *(unsigned char *)(a1 + 216) = v31;
    uint64_t v32 = v190[29];
    if (v32)
    {
      *(void *)(a1 + 224) = v190[28];
      *(void *)(a1 + 232) = v32;
      uint64_t v33 = v190[31];
      *(void *)(a1 + 240) = v190[30];
      *(void *)(a1 + 248) = v33;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v34 = *((_OWORD *)v190 + 15);
      *(_OWORD *)(a1 + 224) = *((_OWORD *)v190 + 14);
      *(_OWORD *)(a1 + 240) = v34;
    }
    uint64_t v35 = v190[33];
    *(void *)(a1 + 256) = v190[32];
    *(void *)(a1 + 264) = v35;
    uint64_t v36 = v190[35];
    *(void *)(a1 + 272) = v190[34];
    *(void *)(a1 + 280) = v36;
    uint64_t v37 = type metadata accessor for SetupModel();
    uint64_t v38 = *(int *)(v37 + 32);
    uint64_t v39 = (void *)(a1 + v38);
    uint64_t v40 = (uint64_t *)((char *)v190 + v38);
    uint64_t v41 = type metadata accessor for IdMSAccount();
    uint64_t v42 = *(void *)(v41 - 8);
    BOOL v43 = *(unsigned int (**)(char *, uint64_t, int *))(v42 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v187 = (int *)v41;
    uint64_t v171 = v42;
    uint64_t v174 = v37;
    int v173 = v43;
    v188 = v40;
    if (v43((char *)v40, 1, (int *)v41))
    {
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      uint64_t v45 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v45;
      uint64_t v46 = v40[3];
      v39[2] = v40[2];
      v39[3] = v46;
      uint64_t v47 = v40[5];
      v39[4] = v40[4];
      v39[5] = v47;
      uint64_t v48 = v40[7];
      v39[6] = v40[6];
      v39[7] = v48;
      uint64_t v49 = v40[8];
      uint64_t v50 = v40[9];
      v39[8] = v49;
      v39[9] = v50;
      uint64_t v51 = *(int *)(v41 + 20);
      uint64_t v52 = (char *)v39 + v51;
      uint64_t v182 = (char *)v188 + v51;
      uint64_t v53 = sub_248174700();
      uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v52, v182, v53);
      uint64_t v55 = *(int *)(v41 + 24);
      unsigned int v56 = (char *)v39 + v55;
      uint64_t v57 = (char *)v188 + v55;
      uint64_t v58 = *(void *)v57;
      uint64_t v59 = *((void *)v57 + 1);
      uint64_t v60 = *((void *)v57 + 2);
      uint64_t v61 = *((void *)v57 + 3);
      uint64_t v62 = *((void *)v57 + 4);
      uint64_t v63 = *((void *)v57 + 5);
      uint64_t v64 = *((void *)v57 + 6);
      uint64_t v178 = *((void *)v57 + 7);
      uint64_t v183 = *((void *)v57 + 8);
      LOBYTE(v52) = v57[72];
      sub_247FABF8C(*(void *)v57, v59, v60, v61, v62, v63, v64, v178, v183, (char)v52);
      *(void *)unsigned int v56 = v58;
      *((void *)v56 + 1) = v59;
      *((void *)v56 + 2) = v60;
      *((void *)v56 + 3) = v61;
      *((void *)v56 + 4) = v62;
      *((void *)v56 + 5) = v63;
      uint64_t v40 = v188;
      *((void *)v56 + 6) = v64;
      *((void *)v56 + 7) = v178;
      *((void *)v56 + 8) = v183;
      v56[72] = (char)v52;
      *(void *)((char *)v39 + v187[7]) = *(void *)((char *)v188 + v187[7]);
      char v65 = *(void (**)(void *, void, uint64_t, int *))(v171 + 56);
      swift_bridgeObjectRetain();
      v65(v39, 0, 1, v187);
    }
    uint64_t v66 = (int *)type metadata accessor for AuthenticationModel();
    uint64_t v67 = v66[5];
    id v68 = (void *)((char *)v39 + v67);
    uint64_t v69 = (void *)((char *)v40 + v67);
    uint64_t v70 = v69[1];
    if (v70)
    {
      void *v68 = *v69;
      v68[1] = v70;
      uint64_t v71 = v69[3];
      v68[2] = v69[2];
      v68[3] = v71;
      uint64_t v72 = v69[5];
      v68[4] = v69[4];
      v68[5] = v72;
      uint64_t v73 = v69[7];
      long long v68[6] = v69[6];
      v68[7] = v73;
      uint64_t v74 = v69[9];
      v68[8] = v69[8];
      v68[9] = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v75 = *((_OWORD *)v69 + 3);
      *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
      *((_OWORD *)v68 + 3) = v75;
      *((_OWORD *)v68 + 4) = *((_OWORD *)v69 + 4);
      long long v76 = *((_OWORD *)v69 + 1);
      *(_OWORD *)id v68 = *(_OWORD *)v69;
      *((_OWORD *)v68 + 1) = v76;
    }
    *((unsigned char *)v39 + v66[6]) = *((unsigned char *)v40 + v66[6]);
    uint64_t v77 = v66[7];
    id v78 = (void *)((char *)v39 + v77);
    uint64_t v79 = (void *)((char *)v40 + v77);
    uint64_t v80 = v79[1];
    *id v78 = *v79;
    v78[1] = v80;
    *(void *)((char *)v39 + v66[8]) = *(void *)((char *)v40 + v66[8]);
    *((unsigned char *)v39 + v66[9]) = *((unsigned char *)v40 + v66[9]);
    uint64_t v81 = v66[10];
    uint64_t v179 = v66;
    uint64_t v184 = v39;
    uint64_t v82 = (char *)v39 + v81;
    uint64_t v83 = (char *)v40 + v81;
    uint64_t v84 = (void *)*((void *)v83 + 1);
    uint64_t v85 = (void *)*((void *)v83 + 2);
    uint64_t v175 = (void *)*((void *)v83 + 3);
    unint64_t v87 = (void *)*((void *)v83 + 4);
    id v86 = (void *)*((void *)v83 + 5);
    uint64_t v88 = *((void *)v83 + 6);
    uint64_t v176 = (void *)*((void *)v83 + 7);
    uint64_t v177 = *(void **)v83;
    uint64_t v89 = (void *)*((void *)v83 + 8);
    unint64_t v90 = (void *)*((void *)v83 + 9);
    char v91 = v83[80];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247F986A0(v177, v84, v85, v175, v87, v86, v88, v176, v89, v90, v91);
    *(void *)uint64_t v82 = v177;
    *((void *)v82 + 1) = v84;
    *((void *)v82 + 2) = v85;
    *((void *)v82 + 3) = v175;
    *((void *)v82 + 4) = v87;
    *((void *)v82 + 5) = v86;
    *((void *)v82 + 6) = v88;
    *((void *)v82 + 7) = v176;
    *((void *)v82 + 8) = v89;
    *((void *)v82 + 9) = v90;
    v82[80] = v91;
    uint64_t v92 = v179[11];
    char v93 = (void *)((char *)v184 + v92);
    uint64_t v94 = (void *)((char *)v188 + v92);
    if (*v94)
    {
      uint64_t v95 = v94[1];
      *char v93 = *v94;
      v93[1] = v95;
      swift_retain();
    }
    else
    {
      *(_OWORD *)char v93 = *(_OWORD *)v94;
    }
    os_log_type_t v96 = v190;
    uint64_t v97 = *(int *)(v174 + 36);
    v98 = (void *)(a1 + v97);
    os_log_type_t v99 = (uint64_t *)((char *)v190 + v97);
    if (v173((char *)v190 + v97, 1, v187))
    {
      uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
    }
    else
    {
      uint64_t v101 = v99[1];
      void *v98 = *v99;
      v98[1] = v101;
      uint64_t v102 = v99[3];
      v98[2] = v99[2];
      v98[3] = v102;
      uint64_t v103 = v99[5];
      v98[4] = v99[4];
      v98[5] = v103;
      uint64_t v104 = v99[7];
      v98[6] = v99[6];
      v98[7] = v104;
      uint64_t v105 = v99[9];
      v98[8] = v99[8];
      v98[9] = v105;
      uint64_t v106 = v187[5];
      v189 = (char *)v98 + v106;
      BOOL v185 = (char *)v99 + v106;
      uint64_t v107 = sub_248174700();
      uint64_t v180 = *(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v180(v189, v185, v107);
      uint64_t v108 = v187[6];
      id v109 = (char *)v98 + v108;
      uint64_t v110 = (char *)v99 + v108;
      uint64_t v111 = *((void *)v110 + 1);
      uint64_t v112 = *((void *)v110 + 2);
      uint64_t v113 = *((void *)v110 + 3);
      uint64_t v114 = *((void *)v110 + 4);
      uint64_t v115 = *((void *)v110 + 5);
      uint64_t v116 = *((void *)v110 + 6);
      uint64_t v117 = *((void *)v110 + 7);
      uint64_t v181 = *(void *)v110;
      uint64_t v186 = *((void *)v110 + 8);
      LOBYTE(v189) = v110[72];
      sub_247FABF8C(*(void *)v110, v111, v112, v113, v114, v115, v116, v117, v186, (char)v189);
      *(void *)id v109 = v181;
      *((void *)v109 + 1) = v111;
      *((void *)v109 + 2) = v112;
      *((void *)v109 + 3) = v113;
      *((void *)v109 + 4) = v114;
      *((void *)v109 + 5) = v115;
      *((void *)v109 + 6) = v116;
      *((void *)v109 + 7) = v117;
      os_log_type_t v96 = v190;
      *((void *)v109 + 8) = v186;
      v109[72] = (char)v189;
      *(void *)((char *)v98 + v187[7]) = *(void *)((char *)v99 + v187[7]);
      uint64_t v118 = *(void (**)(void *, void, uint64_t, int *))(v171 + 56);
      swift_bridgeObjectRetain();
      v118(v98, 0, 1, v187);
    }
    uint64_t v119 = (int *)type metadata accessor for SignInModel();
    uint64_t v120 = v119[5];
    v121 = (char *)v98 + v120;
    uint64_t v122 = (void *)((char *)v99 + v120);
    uint64_t v123 = v122[1];
    if (v123)
    {
      *(void *)v121 = *v122;
      *((void *)v121 + 1) = v123;
      uint64_t v124 = v122[3];
      *((void *)v121 + 2) = v122[2];
      *((void *)v121 + 3) = v124;
      uint64_t v125 = v122[5];
      *((void *)v121 + 4) = v122[4];
      *((void *)v121 + 5) = v125;
      uint64_t v126 = v122[7];
      *((void *)v121 + 6) = v122[6];
      *((void *)v121 + 7) = v126;
      uint64_t v127 = v122[9];
      *((void *)v121 + 8) = v122[8];
      *((void *)v121 + 9) = v127;
      unsigned int v128 = v122 + 10;
      unint64_t v129 = v122[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v129 >> 60 == 15)
      {
        *((_OWORD *)v121 + 5) = *(_OWORD *)v128;
      }
      else
      {
        uint64_t v133 = *v128;
        sub_247FB6C20(*v128, v129);
        *((void *)v121 + 10) = v133;
        *((void *)v121 + 11) = v129;
      }
      os_log_type_t v96 = v190;
    }
    else
    {
      long long v130 = *((_OWORD *)v122 + 3);
      *((_OWORD *)v121 + 2) = *((_OWORD *)v122 + 2);
      *((_OWORD *)v121 + 3) = v130;
      long long v131 = *((_OWORD *)v122 + 5);
      *((_OWORD *)v121 + 4) = *((_OWORD *)v122 + 4);
      *((_OWORD *)v121 + 5) = v131;
      long long v132 = *((_OWORD *)v122 + 1);
      *(_OWORD *)v121 = *(_OWORD *)v122;
      *((_OWORD *)v121 + 1) = v132;
    }
    *(void *)((char *)v98 + v119[6]) = *(void *)((char *)v99 + v119[6]);
    *(void *)((char *)v98 + v119[7]) = *(void *)((char *)v99 + v119[7]);
    *((unsigned char *)v98 + v119[8]) = *((unsigned char *)v99 + v119[8]);
    *((unsigned char *)v98 + v119[9]) = *((unsigned char *)v99 + v119[9]);
    uint64_t v134 = v119[10];
    uint64_t v135 = (void *)((char *)v98 + v134);
    v136 = (void *)((char *)v99 + v134);
    uint64_t v137 = *(void *)((char *)v99 + v134 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v137)
    {
      *uint64_t v135 = *v136;
      v135[1] = v137;
      uint64_t v138 = v136[2];
      uint64_t v139 = v136[3];
      v135[2] = v138;
      v135[3] = v139;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v140 = *((_OWORD *)v136 + 1);
      *(_OWORD *)uint64_t v135 = *(_OWORD *)v136;
      *((_OWORD *)v135 + 1) = v140;
    }
    uint64_t v141 = v119[11];
    uint64_t v142 = (void *)((char *)v98 + v141);
    v143 = (void *)((char *)v99 + v141);
    uint64_t v144 = v143[1];
    *uint64_t v142 = *v143;
    v142[1] = v144;
    uint64_t v145 = v119[12];
    id v146 = *(void **)((char *)v99 + v145);
    *(void *)((char *)v98 + v145) = v146;
    uint64_t v147 = v119[13];
    char v148 = (char *)v98 + v147;
    id v149 = (char *)v99 + v147;
    uint64_t v150 = *(void *)v149;
    uint64_t v151 = *((void *)v149 + 1);
    char v152 = v149[16];
    swift_bridgeObjectRetain();
    id v153 = v146;
    sub_247FE42A8(v150, v151, v152);
    *(void *)char v148 = v150;
    *((void *)v148 + 1) = v151;
    v148[16] = v152;
    uint64_t v154 = v119[14];
    v155 = (void *)((char *)v98 + v154);
    v156 = (void *)((char *)v99 + v154);
    uint64_t v157 = v156[1];
    void *v155 = *v156;
    v155[1] = v157;
    *((unsigned char *)v98 + v119[15]) = *((unsigned char *)v99 + v119[15]);
    uint64_t v158 = v119[16];
    os_log_t v159 = (char *)v98 + v158;
    v160 = (char *)v99 + v158;
    unint64_t v161 = *(void *)((char *)v99 + v158 + 8);
    swift_bridgeObjectRetain();
    if (v161 >= 3)
    {
      *(void *)os_log_t v159 = *(void *)v160;
      *((void *)v159 + 1) = v161;
      uint64_t v163 = *((void *)v160 + 3);
      *((void *)v159 + 2) = *((void *)v160 + 2);
      *((void *)v159 + 3) = v163;
      v159[32] = v160[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v162 = *((_OWORD *)v160 + 1);
      *(_OWORD *)os_log_t v159 = *(_OWORD *)v160;
      *((_OWORD *)v159 + 1) = v162;
      v159[32] = v160[32];
    }
    uint64_t v15 = a1;
    uint64_t v164 = *(int *)(v172 + 20);
    uint64_t v165 = a1 + v164;
    uint64_t v166 = (uint64_t)v96 + v164;
    uint64_t v167 = *(uint64_t *)((char *)v96 + v164 + 24);
    if (v167)
    {
      uint64_t v168 = *(void *)(v166 + 32);
      *(void *)(v165 + 24) = v167;
      *(void *)(v165 + 32) = v168;
      (**(void (***)(void))(v167 - 8))();
    }
    else
    {
      long long v169 = *(_OWORD *)(v166 + 16);
      *(_OWORD *)uint64_t v165 = *(_OWORD *)v166;
      *(_OWORD *)(v165 + 16) = v169;
      *(void *)(v165 + 32) = *(void *)(v166 + 32);
    }
  }
  return v15;
}

uint64_t destroy for SetupContext(uint64_t a1, uint64_t a2)
{
  sub_247FE51A0(*(void **)(a1 + 8), *(id *)(a1 + 16), *(void *)(a1 + 24), *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int16 *)(a1 + 36) << 32));
  unsigned int v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 <= 0xF9) {
    sub_247FA98EC(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(a1 + 168), *(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208), *(unsigned __int8 *)(a1 + 216));
  if (*(void *)(a1 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for SetupModel();
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  uint64_t v7 = type metadata accessor for IdMSAccount();
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    uint64_t v10 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = v6 + *(int *)(v7 + 24);
    sub_247FAC1EC(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(void *)(v11 + 48), *(void *)(v11 + 56), *(void *)(v11 + 64), *(unsigned char *)(v11 + 72));
    swift_bridgeObjectRelease();
  }
  unsigned int v12 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v6 + v12[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v6 + v12[10];
  sub_247F98958(*(void **)v13, *(void **)(v13 + 8), *(void **)(v13 + 16), *(void **)(v13 + 24), *(void *)(v13 + 32), *(void **)(v13 + 40), *(void *)(v13 + 48), *(void *)(v13 + 56), *(void **)(v13 + 64), *(void **)(v13 + 72), *(unsigned char *)(v13 + 80));
  if (*(void *)(v6 + v12[11])) {
    swift_release();
  }
  uint64_t v14 = a1 + *(int *)(v5 + 36);
  if (!v8(v14, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v14 + *(int *)(v7 + 20);
    uint64_t v16 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v14 + *(int *)(v7 + 24);
    sub_247FAC1EC(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(void *)(v17 + 64), *(unsigned char *)(v17 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = (int *)type metadata accessor for SignInModel();
  uint64_t v19 = (void *)(v14 + v18[5]);
  if (v19[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v20 = v19[11];
    if (v20 >> 60 != 15) {
      sub_247FB6CCC(v19[10], v20);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + v18[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v14 + v18[13]), *(void *)(v14 + v18[13] + 8), *(unsigned char *)(v14 + v18[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + v18[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1 + *(int *)(a2 + 20);
  if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

uint64_t initializeWithCopy for SetupContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(unsigned __int16 *)(a2 + 36);
  uint64_t v10 = *(unsigned int *)(a2 + 32);
  sub_247FE4184(v6, v7, v8, v10 | (v9 << 32));
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(_WORD *)(a1 + 36) = v9;
  *(_DWORD *)(a1 + 32) = v10;
  uint64_t v11 = a1;
  unsigned int v12 = *(unsigned __int8 *)(v4 + 88);
  uint64_t v187 = v4;
  uint64_t v167 = a3;
  if (v12 <= 0xF9)
  {
    uint64_t v14 = *(void *)(v4 + 40);
    uint64_t v15 = *(void *)(v4 + 48);
    uint64_t v16 = *(void *)(v4 + 56);
    uint64_t v17 = *(void *)(v4 + 64);
    uint64_t v18 = *(void *)(v4 + 72);
    uint64_t v19 = *(void *)(v187 + 80);
    sub_247FA9804(v14, v15, v16, v17, v18, v19, v12);
    *(void *)(a1 + 40) = v14;
    *(void *)(a1 + 48) = v15;
    *(void *)(a1 + 56) = v16;
    *(void *)(a1 + 64) = v17;
    *(void *)(a1 + 72) = v18;
    *(void *)(a1 + 80) = v19;
    uint64_t v4 = v187;
    *(unsigned char *)(a1 + 88) = v12;
  }
  else
  {
    long long v13 = *(_OWORD *)(v4 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(v4 + 40);
    *(_OWORD *)(a1 + 56) = v13;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(v4 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(v4 + 88);
  }
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(v4 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(v4 + 97);
  uint64_t v20 = *(void *)(v4 + 112);
  *(void *)(a1 + 104) = *(void *)(v4 + 104);
  *(void *)(a1 + 112) = v20;
  uint64_t v21 = *(void *)(v4 + 128);
  *(void *)(a1 + 120) = *(void *)(v4 + 120);
  *(void *)(a1 + 128) = v21;
  *(void *)(a1 + 136) = *(void *)(v4 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(v4 + 144);
  uint64_t v22 = *(void *)(v4 + 160);
  *(void *)(a1 + 152) = *(void *)(v4 + 152);
  *(void *)(a1 + 160) = v22;
  uint64_t v23 = *(void *)(v4 + 168);
  uint64_t v24 = *(void *)(v4 + 176);
  uint64_t v25 = *(void *)(v4 + 184);
  uint64_t v26 = *(void *)(v4 + 192);
  uint64_t v27 = *(void *)(v187 + 200);
  uint64_t v28 = *(void *)(v187 + 208);
  unsigned int v29 = *(unsigned __int8 *)(v187 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE41AC(v23, v24, v25, v26, v27, v28, v29);
  *(void *)(v11 + 168) = v23;
  *(void *)(v11 + 176) = v24;
  *(void *)(v11 + 184) = v25;
  *(void *)(v11 + 192) = v26;
  *(void *)(v11 + 200) = v27;
  *(void *)(v11 + 208) = v28;
  *(unsigned char *)(v11 + 216) = v29;
  uint64_t v30 = *(void *)(v187 + 232);
  if (v30)
  {
    *(void *)(v11 + 224) = *(void *)(v187 + 224);
    *(void *)(v11 + 232) = v30;
    uint64_t v31 = *(void *)(v187 + 248);
    *(void *)(v11 + 240) = *(void *)(v187 + 240);
    *(void *)(v11 + 248) = v31;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v32 = *(_OWORD *)(v187 + 240);
    *(_OWORD *)(v11 + 224) = *(_OWORD *)(v187 + 224);
    *(_OWORD *)(v11 + 240) = v32;
  }
  uint64_t v33 = *(void *)(v187 + 264);
  *(void *)(v11 + 256) = *(void *)(v187 + 256);
  *(void *)(v11 + 264) = v33;
  uint64_t v34 = *(void *)(v187 + 280);
  *(void *)(v11 + 272) = *(void *)(v187 + 272);
  *(void *)(v11 + 280) = v34;
  uint64_t v180 = type metadata accessor for SetupModel();
  uint64_t v35 = *(int *)(v180 + 32);
  uint64_t v36 = (void *)(v11 + v35);
  uint64_t v37 = (void *)(v187 + v35);
  uint64_t v38 = type metadata accessor for IdMSAccount();
  uint64_t v166 = *(void *)(v38 - 8);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v166 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v177 = v39;
  uint64_t v185 = v11;
  uint64_t v186 = (int *)v38;
  uint64_t v183 = v36;
  if (v39((uint64_t)v37, 1, (int *)v38))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v41 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v41;
    uint64_t v42 = v37[3];
    void v36[2] = v37[2];
    v36[3] = v42;
    uint64_t v43 = v37[5];
    v36[4] = v37[4];
    v36[5] = v43;
    uint64_t v44 = v37[7];
    v36[6] = v37[6];
    v36[7] = v44;
    uint64_t v45 = v37[9];
    v36[8] = v37[8];
    v36[9] = v45;
    uint64_t v46 = *(int *)(v38 + 20);
    uint64_t v171 = (char *)v37 + v46;
    uint64_t v174 = (char *)v36 + v46;
    uint64_t v47 = sub_248174700();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v174, v171, v47);
    uint64_t v49 = *(int *)(v38 + 24);
    uint64_t v50 = (char *)v36 + v49;
    uint64_t v51 = (char *)v37 + v49;
    uint64_t v52 = *(void *)v51;
    uint64_t v53 = *((void *)v51 + 1);
    uint64_t v54 = *((void *)v51 + 2);
    uint64_t v55 = *((void *)v51 + 3);
    uint64_t v56 = *((void *)v51 + 4);
    uint64_t v57 = *((void *)v51 + 5);
    uint64_t v58 = *((void *)v51 + 6);
    uint64_t v172 = *((void *)v51 + 7);
    uint64_t v175 = *((void *)v51 + 8);
    char v59 = v51[72];
    sub_247FABF8C(*(void *)v51, v53, v54, v55, v56, v57, v58, v172, v175, v59);
    *(void *)uint64_t v50 = v52;
    *((void *)v50 + 1) = v53;
    *((void *)v50 + 2) = v54;
    *((void *)v50 + 3) = v55;
    *((void *)v50 + 4) = v56;
    *((void *)v50 + 5) = v57;
    *((void *)v50 + 6) = v58;
    *((void *)v50 + 7) = v172;
    *((void *)v50 + 8) = v175;
    v50[72] = v59;
    uint64_t v36 = v183;
    *(void *)((char *)v183 + v186[7]) = *(void *)((char *)v37 + v186[7]);
    uint64_t v60 = *(void (**)(void *, void, uint64_t, int *))(v166 + 56);
    swift_bridgeObjectRetain();
    v60(v183, 0, 1, v186);
  }
  uint64_t v61 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v62 = v61[5];
  uint64_t v63 = (void *)((char *)v36 + v62);
  uint64_t v64 = (void *)((char *)v37 + v62);
  uint64_t v65 = v64[1];
  if (v65)
  {
    *uint64_t v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = v64[3];
    long long v63[2] = v64[2];
    v63[3] = v66;
    uint64_t v67 = v64[5];
    v63[4] = v64[4];
    v63[5] = v67;
    uint64_t v68 = v64[7];
    v63[6] = v64[6];
    v63[7] = v68;
    uint64_t v69 = v64[9];
    v63[8] = v64[8];
    v63[9] = v69;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v70 = *((_OWORD *)v64 + 3);
    *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
    *((_OWORD *)v63 + 3) = v70;
    *((_OWORD *)v63 + 4) = *((_OWORD *)v64 + 4);
    long long v71 = *((_OWORD *)v64 + 1);
    *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v71;
  }
  *((unsigned char *)v36 + v61[6]) = *((unsigned char *)v37 + v61[6]);
  uint64_t v72 = v61[7];
  uint64_t v73 = (void *)((char *)v36 + v72);
  uint64_t v74 = (void *)((char *)v37 + v72);
  uint64_t v75 = v74[1];
  *uint64_t v73 = *v74;
  v73[1] = v75;
  *(void *)((char *)v36 + v61[8]) = *(void *)((char *)v37 + v61[8]);
  *((unsigned char *)v36 + v61[9]) = *((unsigned char *)v37 + v61[9]);
  uint64_t v76 = v61[10];
  int v173 = v61;
  uint64_t v176 = v37;
  uint64_t v77 = (char *)v36 + v76;
  id v78 = (char *)v37 + v76;
  uint64_t v79 = (void *)*((void *)v78 + 1);
  uint64_t v80 = (void *)*((void *)v78 + 2);
  uint64_t v81 = (void *)*((void *)v78 + 3);
  uint64_t v82 = (void *)*((void *)v78 + 4);
  uint64_t v168 = (void *)*((void *)v78 + 5);
  uint64_t v83 = (void *)*((void *)v78 + 7);
  uint64_t v169 = *((void *)v78 + 6);
  uint64_t v170 = *(void **)v78;
  uint64_t v84 = (void *)*((void *)v78 + 8);
  uint64_t v85 = (void *)*((void *)v78 + 9);
  char v86 = v78[80];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247F986A0(v170, v79, v80, v81, v82, v168, v169, v83, v84, v85, v86);
  *(void *)uint64_t v77 = v170;
  *((void *)v77 + 1) = v79;
  *((void *)v77 + 2) = v80;
  *((void *)v77 + 3) = v81;
  *((void *)v77 + 4) = v82;
  *((void *)v77 + 5) = v168;
  *((void *)v77 + 6) = v169;
  *((void *)v77 + 7) = v83;
  *((void *)v77 + 8) = v84;
  *((void *)v77 + 9) = v85;
  v77[80] = v86;
  uint64_t v87 = v173[11];
  uint64_t v88 = (void *)((char *)v183 + v87);
  uint64_t v89 = (void *)((char *)v176 + v87);
  if (*v89)
  {
    uint64_t v90 = v89[1];
    *uint64_t v88 = *v89;
    v88[1] = v90;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
  }
  uint64_t v91 = v187;
  uint64_t v92 = *(int *)(v180 + 36);
  char v93 = (void *)(v185 + v92);
  uint64_t v94 = (void *)(v187 + v92);
  if (v177(v187 + v92, 1, v186))
  {
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    uint64_t v96 = v94[1];
    *char v93 = *v94;
    v93[1] = v96;
    uint64_t v97 = v94[3];
    v93[2] = v94[2];
    v93[3] = v97;
    uint64_t v98 = v94[5];
    v93[4] = v94[4];
    v93[5] = v98;
    uint64_t v99 = v94[7];
    v93[6] = v94[6];
    v93[7] = v99;
    uint64_t v100 = v94[9];
    v93[8] = v94[8];
    v93[9] = v100;
    uint64_t v101 = v186[5];
    uint64_t v181 = (char *)v94 + v101;
    uint64_t v184 = (char *)v93 + v101;
    uint64_t v102 = sub_248174700();
    uint64_t v178 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v178(v184, v181, v102);
    uint64_t v103 = v186[6];
    uint64_t v104 = (char *)v93 + v103;
    uint64_t v105 = (char *)v94 + v103;
    uint64_t v106 = *((void *)v105 + 1);
    uint64_t v107 = *((void *)v105 + 2);
    uint64_t v108 = *((void *)v105 + 3);
    uint64_t v109 = *((void *)v105 + 4);
    uint64_t v110 = *((void *)v105 + 5);
    uint64_t v111 = *((void *)v105 + 6);
    uint64_t v112 = *((void *)v105 + 7);
    uint64_t v179 = *(void *)v105;
    uint64_t v182 = *((void *)v105 + 8);
    LOBYTE(v184) = v105[72];
    sub_247FABF8C(*(void *)v105, v106, v107, v108, v109, v110, v111, v112, v182, (char)v184);
    *(void *)uint64_t v104 = v179;
    *((void *)v104 + 1) = v106;
    *((void *)v104 + 2) = v107;
    *((void *)v104 + 3) = v108;
    *((void *)v104 + 4) = v109;
    *((void *)v104 + 5) = v110;
    *((void *)v104 + 6) = v111;
    *((void *)v104 + 7) = v112;
    uint64_t v91 = v187;
    *((void *)v104 + 8) = v182;
    v104[72] = (char)v184;
    *(void *)((char *)v93 + v186[7]) = *(void *)((char *)v94 + v186[7]);
    uint64_t v113 = *(void (**)(void *, void, uint64_t, int *))(v166 + 56);
    swift_bridgeObjectRetain();
    v113(v93, 0, 1, v186);
  }
  uint64_t v114 = (int *)type metadata accessor for SignInModel();
  uint64_t v115 = v114[5];
  uint64_t v116 = (char *)v93 + v115;
  uint64_t v117 = (void *)((char *)v94 + v115);
  uint64_t v118 = v117[1];
  if (v118)
  {
    *(void *)uint64_t v116 = *v117;
    *((void *)v116 + 1) = v118;
    uint64_t v119 = v117[3];
    *((void *)v116 + 2) = v117[2];
    *((void *)v116 + 3) = v119;
    uint64_t v120 = v117[5];
    *((void *)v116 + 4) = v117[4];
    *((void *)v116 + 5) = v120;
    uint64_t v121 = v117[7];
    *((void *)v116 + 6) = v117[6];
    *((void *)v116 + 7) = v121;
    uint64_t v122 = v117[9];
    *((void *)v116 + 8) = v117[8];
    *((void *)v116 + 9) = v122;
    uint64_t v123 = v117 + 10;
    unint64_t v124 = v117[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v124 >> 60 == 15)
    {
      *((_OWORD *)v116 + 5) = *(_OWORD *)v123;
    }
    else
    {
      uint64_t v128 = *v123;
      sub_247FB6C20(*v123, v124);
      *((void *)v116 + 10) = v128;
      *((void *)v116 + 11) = v124;
    }
    uint64_t v91 = v187;
  }
  else
  {
    long long v125 = *((_OWORD *)v117 + 3);
    *((_OWORD *)v116 + 2) = *((_OWORD *)v117 + 2);
    *((_OWORD *)v116 + 3) = v125;
    long long v126 = *((_OWORD *)v117 + 5);
    *((_OWORD *)v116 + 4) = *((_OWORD *)v117 + 4);
    *((_OWORD *)v116 + 5) = v126;
    long long v127 = *((_OWORD *)v117 + 1);
    *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
    *((_OWORD *)v116 + 1) = v127;
  }
  *(void *)((char *)v93 + v114[6]) = *(void *)((char *)v94 + v114[6]);
  *(void *)((char *)v93 + v114[7]) = *(void *)((char *)v94 + v114[7]);
  *((unsigned char *)v93 + v114[8]) = *((unsigned char *)v94 + v114[8]);
  *((unsigned char *)v93 + v114[9]) = *((unsigned char *)v94 + v114[9]);
  uint64_t v129 = v114[10];
  long long v130 = (void *)((char *)v93 + v129);
  long long v131 = (void *)((char *)v94 + v129);
  uint64_t v132 = *(void *)((char *)v94 + v129 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v132)
  {
    *long long v130 = *v131;
    v130[1] = v132;
    uint64_t v133 = v131[2];
    uint64_t v134 = v131[3];
    v130[2] = v133;
    v130[3] = v134;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v135 = *((_OWORD *)v131 + 1);
    *(_OWORD *)long long v130 = *(_OWORD *)v131;
    *((_OWORD *)v130 + 1) = v135;
  }
  uint64_t v136 = v114[11];
  uint64_t v137 = (void *)((char *)v93 + v136);
  uint64_t v138 = (void *)((char *)v94 + v136);
  uint64_t v139 = v138[1];
  void *v137 = *v138;
  v137[1] = v139;
  uint64_t v140 = v114[12];
  uint64_t v141 = *(void **)((char *)v94 + v140);
  *(void *)((char *)v93 + v140) = v141;
  uint64_t v142 = v114[13];
  v143 = (char *)v93 + v142;
  uint64_t v144 = (char *)v94 + v142;
  uint64_t v145 = *(void *)v144;
  uint64_t v146 = *((void *)v144 + 1);
  char v147 = v144[16];
  swift_bridgeObjectRetain();
  id v148 = v141;
  sub_247FE42A8(v145, v146, v147);
  *(void *)v143 = v145;
  *((void *)v143 + 1) = v146;
  v143[16] = v147;
  uint64_t v149 = v114[14];
  uint64_t v150 = (void *)((char *)v93 + v149);
  uint64_t v151 = (void *)((char *)v94 + v149);
  uint64_t v152 = v151[1];
  *uint64_t v150 = *v151;
  v150[1] = v152;
  *((unsigned char *)v93 + v114[15]) = *((unsigned char *)v94 + v114[15]);
  uint64_t v153 = v114[16];
  uint64_t v154 = (char *)v93 + v153;
  v155 = (char *)v94 + v153;
  unint64_t v156 = *(void *)((char *)v94 + v153 + 8);
  swift_bridgeObjectRetain();
  if (v156 >= 3)
  {
    *(void *)uint64_t v154 = *(void *)v155;
    *((void *)v154 + 1) = v156;
    uint64_t v158 = *((void *)v155 + 3);
    *((void *)v154 + 2) = *((void *)v155 + 2);
    *((void *)v154 + 3) = v158;
    v154[32] = v155[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v157 = *((_OWORD *)v155 + 1);
    *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
    *((_OWORD *)v154 + 1) = v157;
    v154[32] = v155[32];
  }
  uint64_t v159 = *(int *)(v167 + 20);
  uint64_t v160 = v185 + v159;
  uint64_t v161 = v91 + v159;
  uint64_t v162 = *(void *)(v91 + v159 + 24);
  if (v162)
  {
    uint64_t v163 = *(void *)(v161 + 32);
    *(void *)(v160 + 24) = v162;
    *(void *)(v160 + 32) = v163;
    (**(void (***)(void))(v162 - 8))();
  }
  else
  {
    long long v164 = *(_OWORD *)(v161 + 16);
    *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
    *(_OWORD *)(v160 + 16) = v164;
    *(void *)(v160 + 32) = *(void *)(v161 + 32);
  }
  return v185;
}

uint64_t assignWithCopy for SetupContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 36);
  uint64_t v9 = *(unsigned int *)(a2 + 32);
  sub_247FE4184(v5, v6, v7, v9 | (v8 << 32));
  uint64_t v10 = *(void **)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  unint64_t v13 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int16 *)(a1 + 36) << 32);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v9;
  uint64_t v14 = a2;
  *(_WORD *)(a1 + 36) = v8;
  sub_247FE51A0(v10, v11, v12, v13);
  uint64_t v15 = (_OWORD *)(a1 + 40);
  uint64_t v16 = (long long *)(a2 + 40);
  unsigned int v17 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) <= 0xF9u)
  {
    if (v17 <= 0xF9)
    {
      uint64_t v30 = *(void *)(a2 + 40);
      uint64_t v31 = *(void *)(a2 + 48);
      uint64_t v32 = *(void *)(a2 + 56);
      uint64_t v33 = *(void *)(a2 + 64);
      uint64_t v34 = *(void *)(v14 + 72);
      uint64_t v35 = *(void *)(v14 + 80);
      sub_247FA9804(*(void *)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void *)(v14 + 64), v34, v35, v17);
      uint64_t v36 = *(void *)(a1 + 40);
      uint64_t v37 = *(void *)(a1 + 48);
      uint64_t v38 = *(void *)(a1 + 56);
      uint64_t v39 = *(void *)(a1 + 64);
      uint64_t v40 = *(void *)(a1 + 72);
      uint64_t v41 = *(void *)(a1 + 80);
      *(void *)(a1 + 40) = v30;
      *(void *)(a1 + 48) = v31;
      *(void *)(a1 + 56) = v32;
      *(void *)(a1 + 64) = v33;
      *(void *)(a1 + 72) = v34;
      *(void *)(a1 + 80) = v35;
      char v42 = *(unsigned char *)(a1 + 88);
      *(unsigned char *)(a1 + 88) = v17;
      sub_247FA98EC(v36, v37, v38, v39, v40, v41, v42);
    }
    else
    {
      sub_247FAEE24(a1 + 40);
      long long v22 = *(_OWORD *)(a2 + 56);
      long long v21 = *(_OWORD *)(a2 + 72);
      long long v23 = *v16;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(_OWORD *)(a1 + 56) = v22;
      *(_OWORD *)(a1 + 72) = v21;
      _OWORD *v15 = v23;
    }
  }
  else if (v17 <= 0xF9)
  {
    uint64_t v24 = *(void *)(a2 + 40);
    uint64_t v25 = *(void *)(a2 + 48);
    uint64_t v26 = *(void *)(a2 + 56);
    uint64_t v27 = *(void *)(a2 + 64);
    uint64_t v28 = *(void *)(v14 + 72);
    uint64_t v29 = *(void *)(v14 + 80);
    sub_247FA9804(*(void *)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void *)(v14 + 64), v28, v29, v17);
    *(void *)(a1 + 40) = v24;
    *(void *)(a1 + 48) = v25;
    *(void *)(a1 + 56) = v26;
    *(void *)(a1 + 64) = v27;
    *(void *)(a1 + 72) = v28;
    *(void *)(a1 + 80) = v29;
    *(unsigned char *)(a1 + 88) = v17;
  }
  else
  {
    long long v18 = *v16;
    long long v19 = *(_OWORD *)(a2 + 56);
    long long v20 = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v19;
    *(_OWORD *)(a1 + 72) = v20;
    _OWORD *v15 = v18;
  }
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(v14 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(v14 + 97);
  *(void *)(a1 + 104) = *(void *)(v14 + 104);
  *(void *)(a1 + 112) = *(void *)(v14 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(v14 + 120);
  *(void *)(a1 + 128) = *(void *)(v14 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v14 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(v14 + 144);
  *(void *)(a1 + 136) = v43;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(v14 + 145);
  *(void *)(a1 + 152) = *(void *)(v14 + 152);
  *(void *)(a1 + 160) = *(void *)(v14 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v14 + 168);
  uint64_t v45 = *(void *)(v14 + 176);
  uint64_t v46 = *(void *)(v14 + 184);
  uint64_t v47 = *(void *)(v14 + 192);
  uint64_t v48 = *(void *)(v14 + 200);
  uint64_t v49 = *(void *)(v14 + 208);
  unsigned __int8 v50 = *(unsigned char *)(v14 + 216);
  sub_247FE41AC(v44, v45, v46, v47, v48, v49, v50);
  uint64_t v51 = *(void *)(a1 + 168);
  uint64_t v52 = *(void *)(a1 + 176);
  uint64_t v53 = *(void *)(a1 + 184);
  uint64_t v54 = *(void *)(a1 + 192);
  uint64_t v55 = *(void *)(a1 + 200);
  uint64_t v56 = *(void *)(a1 + 208);
  *(void *)(a1 + 168) = v44;
  *(void *)(a1 + 176) = v45;
  *(void *)(a1 + 184) = v46;
  *(void *)(a1 + 192) = v47;
  *(void *)(a1 + 200) = v48;
  *(void *)(a1 + 208) = v49;
  unsigned int v57 = *(unsigned __int8 *)(a1 + 216);
  *(unsigned char *)(a1 + 216) = v50;
  sub_247FE51C8(v51, v52, v53, v54, v55, v56, v57);
  uint64_t v58 = (_OWORD *)(a1 + 224);
  char v59 = (_OWORD *)(v14 + 224);
  uint64_t v60 = *(void *)(v14 + 232);
  if (*(void *)(a1 + 232))
  {
    if (v60)
    {
      *(void *)(a1 + 224) = *(void *)(v14 + 224);
      *(void *)(a1 + 232) = *(void *)(v14 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(v14 + 240);
      swift_retain();
      swift_release();
      *(void *)(a1 + 248) = *(void *)(v14 + 248);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_24800716C(a1 + 224);
      long long v61 = *(_OWORD *)(v14 + 240);
      _OWORD *v58 = *v59;
      *(_OWORD *)(a1 + 240) = v61;
    }
  }
  else if (v60)
  {
    *(void *)(a1 + 224) = *(void *)(v14 + 224);
    *(void *)(a1 + 232) = *(void *)(v14 + 232);
    *(void *)(a1 + 240) = *(void *)(v14 + 240);
    *(void *)(a1 + 248) = *(void *)(v14 + 248);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v62 = *(_OWORD *)(v14 + 240);
    _OWORD *v58 = *v59;
    *(_OWORD *)(a1 + 240) = v62;
  }
  *(void *)(a1 + 256) = *(void *)(v14 + 256);
  *(void *)(a1 + 264) = *(void *)(v14 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(v14 + 272);
  *(void *)(a1 + 280) = *(void *)(v14 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v274 = type metadata accessor for SetupModel();
  uint64_t v63 = *(int *)(v274 + 32);
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(v14 + v63);
  uint64_t v66 = type metadata accessor for IdMSAccount();
  uint64_t v264 = *(void *)(v66 - 8);
  uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v264 + 48);
  int v68 = v67((uint64_t)v64, 1, (int *)v66);
  v290 = (int *)v66;
  v273 = v67;
  int v69 = v67((uint64_t)v65, 1, (int *)v66);
  uint64_t v289 = v14;
  v278 = v64;
  v282 = v65;
  if (v68)
  {
    if (!v69)
    {
      *uint64_t v64 = *v65;
      v64[1] = v65[1];
      long long v64[2] = v65[2];
      v64[3] = v65[3];
      v64[4] = v65[4];
      v64[5] = v65[5];
      v64[6] = v65[6];
      v64[7] = v65[7];
      v64[8] = v65[8];
      v64[9] = v65[9];
      uint64_t v70 = *(int *)(v66 + 20);
      v285 = (char *)v64 + v70;
      v269 = (char *)v65 + v70;
      uint64_t v71 = sub_248174700();
      v267 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v267(v285, v269, v71);
      uint64_t v72 = *(int *)(v66 + 24);
      uint64_t v73 = (char *)v64 + v72;
      uint64_t v74 = (char *)v65 + v72;
      uint64_t v75 = *(void *)v74;
      uint64_t v76 = *((void *)v74 + 1);
      uint64_t v77 = *((void *)v74 + 2);
      uint64_t v78 = *((void *)v74 + 3);
      uint64_t v79 = *((void *)v74 + 4);
      uint64_t v80 = *((void *)v74 + 5);
      uint64_t v286 = *((void *)v74 + 6);
      uint64_t v270 = *((void *)v74 + 7);
      uint64_t v81 = *((void *)v74 + 8);
      char v82 = v74[72];
      sub_247FABF8C(*(void *)v74, v76, v77, v78, v79, v80, v286, v270, v81, v82);
      *(void *)uint64_t v73 = v75;
      *((void *)v73 + 1) = v76;
      *((void *)v73 + 2) = v77;
      *((void *)v73 + 3) = v78;
      *((void *)v73 + 4) = v79;
      *((void *)v73 + 5) = v80;
      *((void *)v73 + 6) = v286;
      *((void *)v73 + 7) = v270;
      *((void *)v73 + 8) = v81;
      v73[72] = v82;
      uint64_t v64 = v278;
      uint64_t v65 = v282;
      *(void *)((char *)v278 + v290[7]) = *(void *)((char *)v282 + v290[7]);
      uint64_t v83 = *(void (**)(void *, void, uint64_t, int *))(v264 + 56);
      swift_bridgeObjectRetain();
      v83(v278, 0, 1, v290);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v69)
  {
    sub_2480162C4((uint64_t)v64);
LABEL_20:
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v64, v65, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_21;
  }
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v64[2] = v65[2];
  v64[3] = v65[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[4] = v65[4];
  v64[5] = v65[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[6] = v65[6];
  v64[7] = v65[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[8] = v65[8];
  v64[9] = v65[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = *(int *)(v66 + 20);
  uint64_t v95 = (char *)v64 + v94;
  uint64_t v96 = (char *)v65 + v94;
  uint64_t v97 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 24))(v95, v96, v97);
  uint64_t v98 = *(int *)(v66 + 24);
  uint64_t v99 = (char *)v64 + v98;
  uint64_t v100 = (char *)v65 + v98;
  uint64_t v101 = *(void *)v100;
  uint64_t v102 = *((void *)v100 + 1);
  uint64_t v104 = *((void *)v100 + 2);
  uint64_t v103 = *((void *)v100 + 3);
  uint64_t v105 = *((void *)v100 + 4);
  uint64_t v106 = *((void *)v100 + 5);
  uint64_t v288 = *((void *)v100 + 6);
  uint64_t v271 = *((void *)v100 + 7);
  uint64_t v107 = *((void *)v100 + 8);
  char v108 = v100[72];
  sub_247FABF8C(*(void *)v100, v102, v104, v103, v105, v106, v288, v271, v107, v108);
  uint64_t v109 = *(void *)v99;
  uint64_t v110 = *((void *)v99 + 1);
  uint64_t v111 = *((void *)v99 + 2);
  uint64_t v112 = *((void *)v99 + 3);
  uint64_t v113 = *((void *)v99 + 4);
  uint64_t v114 = *((void *)v99 + 5);
  uint64_t v115 = *((void *)v99 + 6);
  uint64_t v116 = *((void *)v99 + 7);
  uint64_t v117 = *((void *)v99 + 8);
  char v118 = v99[72];
  *(void *)uint64_t v99 = v101;
  *((void *)v99 + 1) = v102;
  *((void *)v99 + 2) = v104;
  *((void *)v99 + 3) = v103;
  *((void *)v99 + 4) = v105;
  *((void *)v99 + 5) = v106;
  *((void *)v99 + 6) = v288;
  *((void *)v99 + 7) = v271;
  *((void *)v99 + 8) = v107;
  v99[72] = v108;
  uint64_t v64 = v278;
  sub_247FAC1EC(v109, v110, v111, v112, v113, v114, v115, v116, v117, v118);
  uint64_t v65 = v282;
  *(void *)((char *)v278 + v290[7]) = *(void *)((char *)v282 + v290[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v85 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v86 = v85[5];
  uint64_t v87 = (void *)((char *)v64 + v86);
  uint64_t v88 = (void *)((char *)v65 + v86);
  uint64_t v89 = *(void *)((char *)v64 + v86 + 8);
  uint64_t v90 = *(void *)((char *)v65 + v86 + 8);
  uint64_t v287 = a1;
  if (v89)
  {
    if (v90)
    {
      void *v87 = *v88;
      v87[1] = v88[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v87[2] = v88[2];
      v87[3] = v88[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v87[4] = v88[4];
      v87[5] = v88[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v87[6] = v88[6];
      v87[7] = v88[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v87[8] = v88[8];
      v87[9] = v88[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FACD88((uint64_t)v87);
      *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
      long long v91 = *((_OWORD *)v88 + 4);
      long long v93 = *((_OWORD *)v88 + 1);
      long long v92 = *((_OWORD *)v88 + 2);
      *((_OWORD *)v87 + 3) = *((_OWORD *)v88 + 3);
      *((_OWORD *)v87 + 4) = v91;
      *((_OWORD *)v87 + 1) = v93;
      *((_OWORD *)v87 + 2) = v92;
    }
  }
  else if (v90)
  {
    void *v87 = *v88;
    v87[1] = v88[1];
    v87[2] = v88[2];
    v87[3] = v88[3];
    v87[4] = v88[4];
    v87[5] = v88[5];
    v87[6] = v88[6];
    v87[7] = v88[7];
    v87[8] = v88[8];
    v87[9] = v88[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
    long long v119 = *((_OWORD *)v88 + 1);
    long long v120 = *((_OWORD *)v88 + 2);
    long long v121 = *((_OWORD *)v88 + 4);
    *((_OWORD *)v87 + 3) = *((_OWORD *)v88 + 3);
    *((_OWORD *)v87 + 4) = v121;
    *((_OWORD *)v87 + 1) = v119;
    *((_OWORD *)v87 + 2) = v120;
  }
  *((unsigned char *)v64 + v85[6]) = *((unsigned char *)v65 + v85[6]);
  uint64_t v122 = v85[7];
  uint64_t v123 = (void *)((char *)v64 + v122);
  unint64_t v124 = (void *)((char *)v65 + v122);
  *uint64_t v123 = *v124;
  v123[1] = v124[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v64 + v85[8]) = *(void *)((char *)v65 + v85[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v64 + v85[9]) = *((unsigned char *)v65 + v85[9]);
  uint64_t v125 = v85[10];
  long long v126 = (char *)v64 + v125;
  long long v127 = (char *)v65 + v125;
  uint64_t v128 = *(void **)v127;
  uint64_t v129 = (void *)*((void *)v127 + 1);
  long long v130 = (void *)*((void *)v127 + 2);
  long long v131 = (void *)*((void *)v127 + 3);
  uint64_t v133 = (void *)*((void *)v127 + 4);
  uint64_t v132 = (void *)*((void *)v127 + 5);
  uint64_t v135 = *((void *)v127 + 6);
  uint64_t v134 = (void *)*((void *)v127 + 7);
  v272 = v85;
  uint64_t v136 = (void *)*((void *)v127 + 8);
  v266 = (void *)*((void *)v127 + 9);
  char v268 = v127[80];
  sub_247F986A0(*(void **)v127, v129, v130, v131, v133, v132, v135, v134, v136, v266, v268);
  uint64_t v137 = *(void **)v126;
  uint64_t v138 = (void *)*((void *)v126 + 1);
  uint64_t v139 = (void *)*((void *)v126 + 2);
  uint64_t v140 = (void *)*((void *)v126 + 3);
  uint64_t v141 = *((void *)v126 + 4);
  uint64_t v142 = (void *)*((void *)v126 + 5);
  uint64_t v143 = *((void *)v126 + 6);
  uint64_t v144 = *((void *)v126 + 7);
  uint64_t v145 = (void *)*((void *)v126 + 8);
  uint64_t v146 = (void *)*((void *)v126 + 9);
  char v147 = v126[80];
  *(void *)long long v126 = v128;
  *((void *)v126 + 1) = v129;
  *((void *)v126 + 2) = v130;
  *((void *)v126 + 3) = v131;
  *((void *)v126 + 4) = v133;
  *((void *)v126 + 5) = v132;
  *((void *)v126 + 6) = v135;
  *((void *)v126 + 7) = v134;
  *((void *)v126 + 8) = v136;
  *((void *)v126 + 9) = v266;
  v126[80] = v268;
  sub_247F98958(v137, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147);
  uint64_t v148 = v272[11];
  uint64_t v149 = (void *)((char *)v278 + v148);
  uint64_t v150 = (char *)v282 + v148;
  uint64_t v151 = *(void *)((char *)v278 + v148);
  uint64_t v152 = *(void *)((char *)v282 + v148);
  if (v151)
  {
    uint64_t v153 = v287;
    if (v152)
    {
      uint64_t v154 = *((void *)v150 + 1);
      *uint64_t v149 = v152;
      v149[1] = v154;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else
  {
    uint64_t v153 = v287;
    if (v152)
    {
      uint64_t v155 = *((void *)v150 + 1);
      *uint64_t v149 = v152;
      v149[1] = v155;
      swift_retain();
      goto LABEL_36;
    }
  }
  *(_OWORD *)uint64_t v149 = *(_OWORD *)v150;
LABEL_36:
  uint64_t v156 = *(int *)(v274 + 36);
  long long v157 = (void *)(v153 + v156);
  uint64_t v158 = (void *)(v289 + v156);
  int v159 = v273(v153 + v156, 1, v290);
  int v160 = v273((uint64_t)v158, 1, v290);
  if (v159)
  {
    if (!v160)
    {
      *long long v157 = *v158;
      v157[1] = v158[1];
      v157[2] = v158[2];
      v157[3] = v158[3];
      v157[4] = v158[4];
      v157[5] = v158[5];
      v157[6] = v158[6];
      v157[7] = v158[7];
      v157[8] = v158[8];
      v157[9] = v158[9];
      uint64_t v161 = v290[5];
      v279 = (char *)v158 + v161;
      v283 = (char *)v157 + v161;
      uint64_t v162 = sub_248174700();
      v275 = *(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v275(v283, v279, v162);
      uint64_t v163 = v290[6];
      long long v164 = (char *)v157 + v163;
      uint64_t v165 = (char *)v158 + v163;
      uint64_t v166 = *(void *)v165;
      uint64_t v167 = *((void *)v165 + 1);
      uint64_t v168 = *((void *)v165 + 2);
      uint64_t v169 = *((void *)v165 + 3);
      uint64_t v170 = *((void *)v165 + 4);
      uint64_t v171 = *((void *)v165 + 5);
      uint64_t v172 = *((void *)v165 + 6);
      uint64_t v276 = *((void *)v165 + 7);
      uint64_t v280 = *((void *)v165 + 8);
      LOBYTE(v283) = v165[72];
      sub_247FABF8C(*(void *)v165, v167, v168, v169, v170, v171, v172, v276, v280, (char)v283);
      *(void *)long long v164 = v166;
      *((void *)v164 + 1) = v167;
      *((void *)v164 + 2) = v168;
      *((void *)v164 + 3) = v169;
      *((void *)v164 + 4) = v170;
      *((void *)v164 + 5) = v171;
      *((void *)v164 + 6) = v172;
      *((void *)v164 + 7) = v276;
      *((void *)v164 + 8) = v280;
      v164[72] = (char)v283;
      *(void *)((char *)v157 + v290[7]) = *(void *)((char *)v158 + v290[7]);
      int v173 = *(void (**)(void *, void, uint64_t, int *))(v264 + 56);
      swift_bridgeObjectRetain();
      v173(v157, 0, 1, v290);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v160)
  {
    sub_2480162C4((uint64_t)v157);
LABEL_41:
    uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v157, v158, *(void *)(*(void *)(v174 - 8) + 64));
    goto LABEL_42;
  }
  *long long v157 = *v158;
  v157[1] = v158[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v157[2] = v158[2];
  v157[3] = v158[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v157[4] = v158[4];
  v157[5] = v158[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v157[6] = v158[6];
  v157[7] = v158[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v157[8] = v158[8];
  v157[9] = v158[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v190 = v290[5];
  id v191 = (char *)v157 + v190;
  v192 = (char *)v158 + v190;
  uint64_t v193 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 24))(v191, v192, v193);
  uint64_t v194 = v290[6];
  v195 = (char *)v157 + v194;
  v196 = (char *)v158 + v194;
  uint64_t v197 = *(void *)v196;
  uint64_t v198 = *((void *)v196 + 1);
  uint64_t v199 = *((void *)v196 + 2);
  uint64_t v200 = *((void *)v196 + 3);
  uint64_t v201 = *((void *)v196 + 4);
  uint64_t v202 = *((void *)v196 + 5);
  uint64_t v203 = *((void *)v196 + 6);
  uint64_t v277 = *((void *)v196 + 7);
  uint64_t v281 = *((void *)v196 + 8);
  char v284 = v196[72];
  sub_247FABF8C(*(void *)v196, v198, v199, v200, v201, v202, v203, v277, v281, v284);
  uint64_t v204 = *(void *)v195;
  uint64_t v205 = *((void *)v195 + 1);
  uint64_t v206 = *((void *)v195 + 2);
  uint64_t v207 = *((void *)v195 + 3);
  uint64_t v208 = *((void *)v195 + 4);
  uint64_t v209 = *((void *)v195 + 5);
  uint64_t v210 = *((void *)v195 + 6);
  uint64_t v211 = *((void *)v195 + 7);
  uint64_t v212 = *((void *)v195 + 8);
  char v213 = v195[72];
  *(void *)v195 = v197;
  *((void *)v195 + 1) = v198;
  *((void *)v195 + 2) = v199;
  *((void *)v195 + 3) = v200;
  *((void *)v195 + 4) = v201;
  *((void *)v195 + 5) = v202;
  *((void *)v195 + 6) = v203;
  *((void *)v195 + 7) = v277;
  *((void *)v195 + 8) = v281;
  v195[72] = v284;
  sub_247FAC1EC(v204, v205, v206, v207, v208, v209, v210, v211, v212, v213);
  *(void *)((char *)v157 + v290[7]) = *(void *)((char *)v158 + v290[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_42:
  uint64_t v175 = (int *)type metadata accessor for SignInModel();
  uint64_t v176 = v175[5];
  uint64_t v177 = (uint64_t)v157 + v176;
  uint64_t v178 = (void *)((char *)v158 + v176);
  uint64_t v179 = *(void *)((char *)v157 + v176 + 8);
  uint64_t v180 = *(void *)((char *)v158 + v176 + 8);
  if (!v179)
  {
    if (v180)
    {
      *(void *)uint64_t v177 = *v178;
      *(void *)(v177 + 8) = v178[1];
      *(void *)(v177 + 16) = v178[2];
      *(void *)(v177 + 24) = v178[3];
      *(void *)(v177 + 32) = v178[4];
      *(void *)(v177 + 40) = v178[5];
      *(void *)(v177 + 48) = v178[6];
      *(void *)(v177 + 56) = v178[7];
      *(void *)(v177 + 64) = v178[8];
      *(void *)(v177 + 72) = v178[9];
      uint64_t v184 = v178 + 10;
      unint64_t v185 = v178[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v185 >> 60 == 15)
      {
        *(_OWORD *)(v177 + 80) = *(_OWORD *)v184;
      }
      else
      {
        uint64_t v218 = *v184;
        sub_247FB6C20(*v184, v185);
        *(void *)(v177 + 80) = v218;
        *(void *)(v177 + 88) = v185;
      }
    }
    else
    {
      long long v214 = *((_OWORD *)v178 + 1);
      *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
      *(_OWORD *)(v177 + 16) = v214;
      long long v215 = *((_OWORD *)v178 + 2);
      long long v216 = *((_OWORD *)v178 + 3);
      long long v217 = *((_OWORD *)v178 + 5);
      *(_OWORD *)(v177 + 64) = *((_OWORD *)v178 + 4);
      *(_OWORD *)(v177 + 80) = v217;
      *(_OWORD *)(v177 + 32) = v215;
      *(_OWORD *)(v177 + 48) = v216;
    }
    goto LABEL_58;
  }
  if (!v180)
  {
    sub_248007274(v177);
    long long v186 = *((_OWORD *)v178 + 1);
    *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
    *(_OWORD *)(v177 + 16) = v186;
    long long v187 = *((_OWORD *)v178 + 5);
    long long v189 = *((_OWORD *)v178 + 2);
    long long v188 = *((_OWORD *)v178 + 3);
    *(_OWORD *)(v177 + 64) = *((_OWORD *)v178 + 4);
    *(_OWORD *)(v177 + 80) = v187;
    *(_OWORD *)(v177 + 32) = v189;
    *(_OWORD *)(v177 + 48) = v188;
    goto LABEL_58;
  }
  *(void *)uint64_t v177 = *v178;
  *(void *)(v177 + 8) = v178[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v177 + 16) = v178[2];
  *(void *)(v177 + 24) = v178[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v177 + 32) = v178[4];
  *(void *)(v177 + 40) = v178[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v177 + 48) = v178[6];
  *(void *)(v177 + 56) = v178[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v177 + 64) = v178[8];
  *(void *)(v177 + 72) = v178[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v181 = v178 + 10;
  unint64_t v182 = v178[11];
  if (*(void *)(v177 + 88) >> 60 == 15)
  {
    if (v182 >> 60 != 15)
    {
      uint64_t v183 = *v181;
      sub_247FB6C20(v183, v178[11]);
      *(void *)(v177 + 80) = v183;
      *(void *)(v177 + 88) = v182;
      goto LABEL_58;
    }
    goto LABEL_53;
  }
  if (v182 >> 60 == 15)
  {
    sub_248007220(v177 + 80);
LABEL_53:
    *(_OWORD *)(v177 + 80) = *(_OWORD *)v181;
    goto LABEL_58;
  }
  uint64_t v219 = *v181;
  sub_247FB6C20(v219, v178[11]);
  uint64_t v220 = *(void *)(v177 + 80);
  unint64_t v221 = *(void *)(v177 + 88);
  *(void *)(v177 + 80) = v219;
  *(void *)(v177 + 88) = v182;
  sub_247FB6CCC(v220, v221);
LABEL_58:
  *(void *)((char *)v157 + v175[6]) = *(void *)((char *)v158 + v175[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v157 + v175[7]) = *(void *)((char *)v158 + v175[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v157 + v175[8]) = *((unsigned char *)v158 + v175[8]);
  *((unsigned char *)v157 + v175[9]) = *((unsigned char *)v158 + v175[9]);
  uint64_t v222 = v175[10];
  v223 = (void *)((char *)v157 + v222);
  v224 = (void *)((char *)v158 + v222);
  uint64_t v225 = *(void *)((char *)v157 + v222 + 8);
  uint64_t v226 = *(void *)((char *)v158 + v222 + 8);
  if (v225)
  {
    if (v226)
    {
      void *v223 = *v224;
      v223[1] = v224[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v223[2] = v224[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v223[3] = v224[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FFB0A0((uint64_t)v223);
      long long v227 = *((_OWORD *)v224 + 1);
      *(_OWORD *)v223 = *(_OWORD *)v224;
      *((_OWORD *)v223 + 1) = v227;
    }
  }
  else if (v226)
  {
    void *v223 = *v224;
    v223[1] = v224[1];
    v223[2] = v224[2];
    v223[3] = v224[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v228 = *((_OWORD *)v224 + 1);
    *(_OWORD *)v223 = *(_OWORD *)v224;
    *((_OWORD *)v223 + 1) = v228;
  }
  uint64_t v229 = v175[11];
  v230 = (void *)((char *)v157 + v229);
  v231 = (void *)((char *)v158 + v229);
  void *v230 = *v231;
  v230[1] = v231[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v232 = v175[12];
  v233 = *(void **)((char *)v157 + v232);
  v234 = *(void **)((char *)v158 + v232);
  *(void *)((char *)v157 + v232) = v234;
  id v235 = v234;

  uint64_t v236 = v175[13];
  v237 = (char *)v157 + v236;
  v238 = (char *)v158 + v236;
  uint64_t v239 = *(void *)v238;
  uint64_t v240 = *((void *)v238 + 1);
  char v241 = v238[16];
  sub_247FE42A8(*(void *)v238, v240, v241);
  uint64_t v242 = *(void *)v237;
  uint64_t v243 = *((void *)v237 + 1);
  *(void *)v237 = v239;
  *((void *)v237 + 1) = v240;
  char v244 = v237[16];
  v237[16] = v241;
  sub_247FE52C4(v242, v243, v244);
  uint64_t v245 = v175[14];
  v246 = (void *)((char *)v157 + v245);
  v247 = (void *)((char *)v158 + v245);
  void *v246 = *v247;
  v246[1] = v247[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v157 + v175[15]) = *((unsigned char *)v158 + v175[15]);
  uint64_t v248 = v175[16];
  uint64_t v249 = (uint64_t)v157 + v248;
  v250 = (char *)v158 + v248;
  unint64_t v251 = *(void *)((char *)v157 + v248 + 8);
  unint64_t v252 = *(void *)((char *)v158 + v248 + 8);
  if (v251 >= 3)
  {
    if (v252 >= 3)
    {
      *(void *)uint64_t v249 = *(void *)v250;
      *(void *)(v249 + 8) = *((void *)v250 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v249 + 16) = *((void *)v250 + 2);
      *(void *)(v249 + 24) = *((void *)v250 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v255 = v250[32];
    }
    else
    {
      sub_247FB33D4(v249, &qword_2692D7018);
      char v255 = v250[32];
      long long v256 = *((_OWORD *)v250 + 1);
      *(_OWORD *)uint64_t v249 = *(_OWORD *)v250;
      *(_OWORD *)(v249 + 16) = v256;
    }
    *(unsigned char *)(v249 + 32) = v255;
  }
  else if (v252 >= 3)
  {
    *(void *)uint64_t v249 = *(void *)v250;
    *(void *)(v249 + 8) = *((void *)v250 + 1);
    *(void *)(v249 + 16) = *((void *)v250 + 2);
    *(void *)(v249 + 24) = *((void *)v250 + 3);
    *(unsigned char *)(v249 + 32) = v250[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v253 = *(_OWORD *)v250;
    long long v254 = *((_OWORD *)v250 + 1);
    *(unsigned char *)(v249 + 32) = v250[32];
    *(_OWORD *)uint64_t v249 = v253;
    *(_OWORD *)(v249 + 16) = v254;
  }
  uint64_t v257 = *(int *)(a3 + 20);
  uint64_t v258 = v287 + v257;
  v259 = (long long *)(v289 + v257);
  uint64_t v260 = *(void *)(v289 + v257 + 24);
  if (!*(void *)(v287 + v257 + 24))
  {
    if (v260)
    {
      *(void *)(v258 + 24) = v260;
      *(void *)(v258 + 32) = *((void *)v259 + 4);
      (**(void (***)(uint64_t, long long *))(v260 - 8))(v258, v259);
      return v287;
    }
LABEL_79:
    long long v261 = *v259;
    long long v262 = v259[1];
    *(void *)(v258 + 32) = *((void *)v259 + 4);
    *(_OWORD *)uint64_t v258 = v261;
    *(_OWORD *)(v258 + 16) = v262;
    return v287;
  }
  if (!v260)
  {
    __swift_destroy_boxed_opaque_existential_1(v258);
    goto LABEL_79;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v258, (uint64_t *)v259);
  return v287;
}

uint64_t initializeWithTake for SetupContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 22) = *(_OWORD *)(a2 + 22);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  long long v12 = *(_OWORD *)(a2 + 224);
  long long v13 = *(_OWORD *)(a2 + 240);
  long long v14 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v14;
  *(_OWORD *)(a1 + 224) = v12;
  *(_OWORD *)(a1 + 240) = v13;
  uint64_t v15 = type metadata accessor for SetupModel();
  uint64_t v16 = *(int *)(v15 + 32);
  unsigned int v17 = (_OWORD *)(a1 + v16);
  long long v18 = (_OWORD *)(a2 + v16);
  long long v19 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v94 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v20 + 48);
  if (v94(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    long long v22 = v18[3];
    v17[2] = v18[2];
    v17[3] = v22;
    v17[4] = v18[4];
    long long v23 = v18[1];
    *unsigned int v17 = *v18;
    v17[1] = v23;
    uint64_t v24 = v19[5];
    uint64_t v93 = v15;
    uint64_t v25 = v20;
    uint64_t v26 = (char *)v17 + v24;
    uint64_t v27 = a3;
    uint64_t v28 = (char *)v18 + v24;
    uint64_t v29 = sub_248174700();
    uint64_t v30 = v26;
    uint64_t v20 = v25;
    uint64_t v15 = v93;
    uint64_t v31 = v28;
    a3 = v27;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v30, v31, v29);
    uint64_t v32 = v19[6];
    uint64_t v33 = (_OWORD *)((char *)v17 + v32);
    uint64_t v34 = (_OWORD *)((char *)v18 + v32);
    long long v35 = v34[3];
    v33[2] = v34[2];
    v33[3] = v35;
    *(_OWORD *)((char *)v33 + 57) = *(_OWORD *)((char *)v34 + 57);
    long long v36 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v36;
    *(void *)((char *)v17 + v19[7]) = *(void *)((char *)v18 + v19[7]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v37 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v38 = v37[5];
  uint64_t v39 = (_OWORD *)((char *)v17 + v38);
  uint64_t v40 = (_OWORD *)((char *)v18 + v38);
  long long v41 = v40[3];
  v39[2] = v40[2];
  v39[3] = v41;
  v39[4] = v40[4];
  long long v42 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v42;
  *((unsigned char *)v17 + v37[6]) = *((unsigned char *)v18 + v37[6]);
  *(_OWORD *)((char *)v17 + v37[7]) = *(_OWORD *)((char *)v18 + v37[7]);
  *(void *)((char *)v17 + v37[8]) = *(void *)((char *)v18 + v37[8]);
  *((unsigned char *)v17 + v37[9]) = *((unsigned char *)v18 + v37[9]);
  uint64_t v43 = v37[10];
  uint64_t v44 = (char *)v17 + v43;
  uint64_t v45 = (char *)v18 + v43;
  long long v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v46;
  v44[80] = v45[80];
  long long v47 = *((_OWORD *)v45 + 4);
  long long v48 = *((_OWORD *)v45 + 2);
  *((_OWORD *)v44 + 3) = *((_OWORD *)v45 + 3);
  *((_OWORD *)v44 + 4) = v47;
  *((_OWORD *)v44 + 2) = v48;
  uint64_t v49 = v37[11];
  unsigned __int8 v50 = (void *)((char *)v17 + v49);
  uint64_t v51 = (uint64_t *)((char *)v18 + v49);
  uint64_t v52 = *v51;
  if (*v51)
  {
    uint64_t v53 = v51[1];
    *unsigned __int8 v50 = v52;
    v50[1] = v53;
  }
  else
  {
    *(_OWORD *)unsigned __int8 v50 = *(_OWORD *)v51;
  }
  uint64_t v54 = *(int *)(v15 + 36);
  uint64_t v55 = (_OWORD *)(a1 + v54);
  uint64_t v56 = (_OWORD *)(a2 + v54);
  if (v94((_OWORD *)(a2 + v54), 1, v19))
  {
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    long long v58 = v56[3];
    v55[2] = v56[2];
    v55[3] = v58;
    v55[4] = v56[4];
    long long v59 = v56[1];
    _OWORD *v55 = *v56;
    v55[1] = v59;
    uint64_t v60 = v19[5];
    long long v61 = (char *)v55 + v60;
    uint64_t v62 = v20;
    uint64_t v63 = (char *)v56 + v60;
    uint64_t v64 = sub_248174700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v63, v64);
    uint64_t v65 = v19[6];
    uint64_t v66 = (_OWORD *)((char *)v55 + v65);
    uint64_t v67 = (_OWORD *)((char *)v56 + v65);
    long long v68 = v67[3];
    uint64_t v66[2] = v67[2];
    v66[3] = v68;
    *(_OWORD *)((char *)v66 + 57) = *(_OWORD *)((char *)v67 + 57);
    long long v69 = v67[1];
    *uint64_t v66 = *v67;
    v66[1] = v69;
    *(void *)((char *)v55 + v19[7]) = *(void *)((char *)v56 + v19[7]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v62 + 56))(v55, 0, 1, v19);
  }
  uint64_t v70 = (int *)type metadata accessor for SignInModel();
  uint64_t v71 = v70[5];
  uint64_t v72 = (_OWORD *)((char *)v55 + v71);
  uint64_t v73 = (_OWORD *)((char *)v56 + v71);
  long long v74 = v73[3];
  v72[2] = v73[2];
  v72[3] = v74;
  long long v75 = v73[5];
  v72[4] = v73[4];
  v72[5] = v75;
  long long v76 = v73[1];
  *uint64_t v72 = *v73;
  v72[1] = v76;
  *(void *)((char *)v55 + v70[6]) = *(void *)((char *)v56 + v70[6]);
  *(void *)((char *)v55 + v70[7]) = *(void *)((char *)v56 + v70[7]);
  *((unsigned char *)v55 + v70[8]) = *((unsigned char *)v56 + v70[8]);
  *((unsigned char *)v55 + v70[9]) = *((unsigned char *)v56 + v70[9]);
  uint64_t v77 = v70[10];
  uint64_t v78 = (_OWORD *)((char *)v55 + v77);
  uint64_t v79 = (_OWORD *)((char *)v56 + v77);
  long long v80 = v79[1];
  *uint64_t v78 = *v79;
  v78[1] = v80;
  *(_OWORD *)((char *)v55 + v70[11]) = *(_OWORD *)((char *)v56 + v70[11]);
  *(void *)((char *)v55 + v70[12]) = *(void *)((char *)v56 + v70[12]);
  uint64_t v81 = v70[13];
  char v82 = (char *)v55 + v81;
  uint64_t v83 = (char *)v56 + v81;
  v82[16] = v83[16];
  *(_OWORD *)char v82 = *(_OWORD *)v83;
  *(_OWORD *)((char *)v55 + v70[14]) = *(_OWORD *)((char *)v56 + v70[14]);
  *((unsigned char *)v55 + v70[15]) = *((unsigned char *)v56 + v70[15]);
  uint64_t v84 = v70[16];
  uint64_t v85 = (char *)v55 + v84;
  uint64_t v86 = (char *)v56 + v84;
  long long v87 = *((_OWORD *)v86 + 1);
  *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
  *((_OWORD *)v85 + 1) = v87;
  v85[32] = v86[32];
  uint64_t v88 = *(int *)(a3 + 20);
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  *(void *)(v89 + 32) = *(void *)(v90 + 32);
  long long v91 = *(_OWORD *)(v90 + 16);
  *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
  *(_OWORD *)(v89 + 16) = v91;
  return a1;
}

uint64_t assignWithTake for SetupContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 24);
  __int16 v6 = *(_WORD *)(a2 + 36);
  int v7 = *(_DWORD *)(a2 + 32);
  long long v8 = *(void **)(a1 + 8);
  long long v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  unint64_t v11 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int16 *)(a1 + 36) << 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v5;
  *(_DWORD *)(a1 + 32) = v7;
  *(_WORD *)(a1 + 36) = v6;
  sub_247FE51A0(v8, v9, v10, v11);
  unsigned int v12 = *(unsigned __int8 *)(a1 + 88);
  if (v12 > 0xF9) {
    goto LABEL_4;
  }
  unsigned int v13 = *(unsigned __int8 *)(a2 + 88);
  if (v13 > 0xF9)
  {
    sub_247FAEE24(a1 + 40);
LABEL_4:
    long long v14 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v14;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v13;
  sub_247FA98EC(v15, v16, v17, v18, v19, v20, v12);
LABEL_6:
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  uint64_t v21 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v22;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  uint64_t v23 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v23;
  swift_bridgeObjectRelease();
  char v24 = *(unsigned char *)(a2 + 216);
  uint64_t v25 = *(void *)(a1 + 168);
  uint64_t v26 = *(void *)(a1 + 176);
  uint64_t v27 = *(void *)(a1 + 184);
  uint64_t v28 = *(void *)(a1 + 192);
  uint64_t v29 = *(void *)(a1 + 200);
  uint64_t v30 = *(void *)(a1 + 208);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  unsigned int v31 = *(unsigned __int8 *)(a1 + 216);
  *(unsigned char *)(a1 + 216) = v24;
  sub_247FE51C8(v25, v26, v27, v28, v29, v30, v31);
  if (*(void *)(a1 + 232))
  {
    uint64_t v32 = *(void *)(a2 + 232);
    if (v32)
    {
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v32;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_release();
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_release();
      goto LABEL_11;
    }
    sub_24800716C(a1 + 224);
  }
  long long v33 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v33;
LABEL_11:
  uint64_t v34 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v35;
  swift_bridgeObjectRelease();
  uint64_t v216 = type metadata accessor for SetupModel();
  uint64_t v36 = *(int *)(v216 + 32);
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (void *)(a2 + v36);
  uint64_t v39 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v40 = *((void *)v39 - 1);
  long long v41 = *(uint64_t (**)(void *, uint64_t, int *))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  uint64_t v214 = v40;
  if (v42)
  {
    if (!v43)
    {
      long long v44 = *((_OWORD *)v38 + 3);
      *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
      *((_OWORD *)v37 + 3) = v44;
      *((_OWORD *)v37 + 4) = *((_OWORD *)v38 + 4);
      long long v45 = *((_OWORD *)v38 + 1);
      *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
      *((_OWORD *)v37 + 1) = v45;
      uint64_t v46 = v39[5];
      long long v47 = (char *)v37 + v46;
      long long v48 = (char *)v38 + v46;
      uint64_t v49 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      uint64_t v50 = v39[6];
      uint64_t v51 = (_OWORD *)((char *)v37 + v50);
      uint64_t v52 = (_OWORD *)((char *)v38 + v50);
      long long v53 = v52[3];
      v51[2] = v52[2];
      v51[3] = v53;
      *(_OWORD *)((char *)v51 + 57) = *(_OWORD *)((char *)v52 + 57);
      long long v54 = v52[1];
      *uint64_t v51 = *v52;
      v51[1] = v54;
      *(void *)((char *)v37 + v39[7]) = *(void *)((char *)v38 + v39[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v40 + 56))(v37, 0, 1, v39);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v43)
  {
    sub_2480162C4((uint64_t)v37);
LABEL_16:
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v37, v38, *(void *)(*(void *)(v55 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v161 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v161;
  swift_bridgeObjectRelease();
  uint64_t v162 = v38[3];
  v37[2] = v38[2];
  v37[3] = v162;
  swift_bridgeObjectRelease();
  uint64_t v163 = v38[5];
  v37[4] = v38[4];
  v37[5] = v163;
  swift_bridgeObjectRelease();
  uint64_t v164 = v38[7];
  v37[6] = v38[6];
  v37[7] = v164;
  swift_bridgeObjectRelease();
  uint64_t v165 = v38[9];
  v37[8] = v38[8];
  v37[9] = v165;
  swift_bridgeObjectRelease();
  uint64_t v166 = v39[5];
  uint64_t v167 = (char *)v37 + v166;
  uint64_t v168 = (char *)v38 + v166;
  uint64_t v169 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 40))(v167, v168, v169);
  uint64_t v170 = v39[6];
  uint64_t v171 = (char *)v37 + v170;
  uint64_t v172 = (char *)v38 + v170;
  uint64_t v173 = *((void *)v172 + 8);
  char v174 = v172[72];
  uint64_t v175 = *(void *)v171;
  uint64_t v176 = *((void *)v171 + 1);
  uint64_t v177 = *((void *)v171 + 2);
  uint64_t v178 = *((void *)v171 + 3);
  uint64_t v179 = *((void *)v171 + 4);
  uint64_t v180 = *((void *)v171 + 5);
  uint64_t v181 = *((void *)v171 + 6);
  uint64_t v182 = *((void *)v171 + 7);
  uint64_t v183 = *((void *)v171 + 8);
  char v184 = v171[72];
  long long v185 = *((_OWORD *)v172 + 1);
  *(_OWORD *)uint64_t v171 = *(_OWORD *)v172;
  *((_OWORD *)v171 + 1) = v185;
  long long v186 = *((_OWORD *)v172 + 3);
  *((_OWORD *)v171 + 2) = *((_OWORD *)v172 + 2);
  *((_OWORD *)v171 + 3) = v186;
  *((void *)v171 + 8) = v173;
  v171[72] = v174;
  sub_247FAC1EC(v175, v176, v177, v178, v179, v180, v181, v182, v183, v184);
  *(void *)((char *)v37 + v39[7]) = *(void *)((char *)v38 + v39[7]);
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v56 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v57 = v56[5];
  long long v58 = (void *)((char *)v37 + v57);
  long long v59 = (void *)((char *)v38 + v57);
  if (*(void *)((char *)v37 + v57 + 8))
  {
    uint64_t v60 = v59[1];
    if (v60)
    {
      void *v58 = *v59;
      v58[1] = v60;
      swift_bridgeObjectRelease();
      uint64_t v61 = v59[3];
      v58[2] = v59[2];
      v58[3] = v61;
      swift_bridgeObjectRelease();
      uint64_t v62 = v59[5];
      v58[4] = v59[4];
      v58[5] = v62;
      swift_bridgeObjectRelease();
      uint64_t v63 = v59[7];
      v58[6] = v59[6];
      v58[7] = v63;
      swift_bridgeObjectRelease();
      uint64_t v64 = v59[9];
      v58[8] = v59[8];
      v58[9] = v64;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_247FACD88((uint64_t)v58);
  }
  long long v65 = *((_OWORD *)v59 + 3);
  *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
  *((_OWORD *)v58 + 3) = v65;
  *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
  long long v66 = *((_OWORD *)v59 + 1);
  *(_OWORD *)long long v58 = *(_OWORD *)v59;
  *((_OWORD *)v58 + 1) = v66;
LABEL_22:
  *((unsigned char *)v37 + v56[6]) = *((unsigned char *)v38 + v56[6]);
  uint64_t v67 = v56[7];
  long long v68 = (void *)((char *)v37 + v67);
  long long v69 = (void *)((char *)v38 + v67);
  uint64_t v71 = *v69;
  uint64_t v70 = v69[1];
  void *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  *(void *)((char *)v37 + v56[8]) = *(void *)((char *)v38 + v56[8]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v37 + v56[9]) = *((unsigned char *)v38 + v56[9]);
  uint64_t v72 = v56[10];
  uint64_t v73 = (char *)v37 + v72;
  long long v74 = (char *)v38 + v72;
  char v75 = v74[80];
  long long v76 = *(void **)v73;
  uint64_t v77 = (void *)*((void *)v73 + 1);
  uint64_t v78 = (void *)*((void *)v73 + 2);
  uint64_t v79 = (void *)*((void *)v73 + 3);
  uint64_t v80 = *((void *)v73 + 4);
  uint64_t v81 = (void *)*((void *)v73 + 5);
  uint64_t v82 = *((void *)v73 + 6);
  uint64_t v83 = *((void *)v73 + 7);
  uint64_t v84 = (void *)*((void *)v73 + 8);
  uint64_t v85 = (void *)*((void *)v73 + 9);
  char v86 = v73[80];
  long long v87 = *((_OWORD *)v74 + 1);
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
  *((_OWORD *)v73 + 1) = v87;
  long long v88 = *((_OWORD *)v74 + 3);
  *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
  *((_OWORD *)v73 + 3) = v88;
  *((_OWORD *)v73 + 4) = *((_OWORD *)v74 + 4);
  v73[80] = v75;
  sub_247F98958(v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86);
  uint64_t v89 = v56[11];
  uint64_t v90 = (void *)((char *)v37 + v89);
  long long v91 = (char *)v38 + v89;
  uint64_t v92 = *(void *)((char *)v38 + v89);
  if (*v90)
  {
    if (v92)
    {
      uint64_t v93 = *((void *)v91 + 1);
      *uint64_t v90 = v92;
      v90[1] = v93;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v92)
  {
    uint64_t v94 = *((void *)v91 + 1);
    *uint64_t v90 = v92;
    v90[1] = v94;
    goto LABEL_29;
  }
  *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
LABEL_29:
  uint64_t v95 = *(int *)(v216 + 36);
  uint64_t v96 = (void *)(a1 + v95);
  uint64_t v97 = (void *)(a2 + v95);
  int v98 = v41((void *)(a1 + v95), 1, v39);
  int v99 = v41(v97, 1, v39);
  if (v98)
  {
    if (!v99)
    {
      long long v100 = *((_OWORD *)v97 + 3);
      *((_OWORD *)v96 + 2) = *((_OWORD *)v97 + 2);
      *((_OWORD *)v96 + 3) = v100;
      *((_OWORD *)v96 + 4) = *((_OWORD *)v97 + 4);
      long long v101 = *((_OWORD *)v97 + 1);
      *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
      *((_OWORD *)v96 + 1) = v101;
      uint64_t v102 = v39[5];
      uint64_t v103 = (char *)v96 + v102;
      uint64_t v104 = (char *)v97 + v102;
      uint64_t v105 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
      uint64_t v106 = v39[6];
      uint64_t v107 = (_OWORD *)((char *)v96 + v106);
      char v108 = (_OWORD *)((char *)v97 + v106);
      long long v109 = v108[3];
      v107[2] = v108[2];
      v107[3] = v109;
      *(_OWORD *)((char *)v107 + 57) = *(_OWORD *)((char *)v108 + 57);
      long long v110 = v108[1];
      _OWORD *v107 = *v108;
      v107[1] = v110;
      *(void *)((char *)v96 + v39[7]) = *(void *)((char *)v97 + v39[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v214 + 56))(v96, 0, 1, v39);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v99)
  {
    sub_2480162C4((uint64_t)v96);
LABEL_34:
    uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v96, v97, *(void *)(*(void *)(v111 - 8) + 64));
    goto LABEL_35;
  }
  uint64_t v187 = v97[1];
  *uint64_t v96 = *v97;
  v96[1] = v187;
  swift_bridgeObjectRelease();
  uint64_t v188 = v97[3];
  v96[2] = v97[2];
  v96[3] = v188;
  swift_bridgeObjectRelease();
  uint64_t v189 = v97[5];
  v96[4] = v97[4];
  v96[5] = v189;
  swift_bridgeObjectRelease();
  uint64_t v190 = v97[7];
  v96[6] = v97[6];
  v96[7] = v190;
  swift_bridgeObjectRelease();
  uint64_t v191 = v97[9];
  v96[8] = v97[8];
  v96[9] = v191;
  swift_bridgeObjectRelease();
  uint64_t v192 = v39[5];
  uint64_t v193 = (char *)v96 + v192;
  uint64_t v194 = (char *)v97 + v192;
  uint64_t v195 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 40))(v193, v194, v195);
  uint64_t v196 = v39[6];
  uint64_t v197 = (char *)v96 + v196;
  uint64_t v198 = (char *)v97 + v196;
  uint64_t v199 = *((void *)v198 + 8);
  char v200 = v198[72];
  uint64_t v201 = *(void *)v197;
  uint64_t v202 = *((void *)v197 + 1);
  uint64_t v203 = *((void *)v197 + 2);
  uint64_t v204 = *((void *)v197 + 3);
  uint64_t v205 = *((void *)v197 + 4);
  uint64_t v206 = *((void *)v197 + 5);
  uint64_t v207 = *((void *)v197 + 6);
  uint64_t v208 = *((void *)v197 + 7);
  uint64_t v209 = *((void *)v197 + 8);
  char v210 = v197[72];
  long long v211 = *((_OWORD *)v198 + 1);
  *(_OWORD *)uint64_t v197 = *(_OWORD *)v198;
  *((_OWORD *)v197 + 1) = v211;
  long long v212 = *((_OWORD *)v198 + 3);
  *((_OWORD *)v197 + 2) = *((_OWORD *)v198 + 2);
  *((_OWORD *)v197 + 3) = v212;
  *((void *)v197 + 8) = v199;
  v197[72] = v200;
  sub_247FAC1EC(v201, v202, v203, v204, v205, v206, v207, v208, v209, v210);
  *(void *)((char *)v96 + v39[7]) = *(void *)((char *)v97 + v39[7]);
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v112 = (int *)type metadata accessor for SignInModel();
  uint64_t v113 = v112[5];
  uint64_t v114 = (uint64_t)v96 + v113;
  uint64_t v115 = (char *)v97 + v113;
  if (!*(void *)((char *)v96 + v113 + 8))
  {
LABEL_42:
    long long v124 = *((_OWORD *)v115 + 3);
    *(_OWORD *)(v114 + 32) = *((_OWORD *)v115 + 2);
    *(_OWORD *)(v114 + 48) = v124;
    long long v125 = *((_OWORD *)v115 + 5);
    *(_OWORD *)(v114 + 64) = *((_OWORD *)v115 + 4);
    *(_OWORD *)(v114 + 80) = v125;
    long long v126 = *((_OWORD *)v115 + 1);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *(_OWORD *)(v114 + 16) = v126;
    goto LABEL_43;
  }
  uint64_t v116 = *((void *)v115 + 1);
  if (!v116)
  {
    sub_248007274(v114);
    goto LABEL_42;
  }
  *(void *)uint64_t v114 = *(void *)v115;
  *(void *)(v114 + 8) = v116;
  swift_bridgeObjectRelease();
  uint64_t v117 = *((void *)v115 + 3);
  *(void *)(v114 + 16) = *((void *)v115 + 2);
  *(void *)(v114 + 24) = v117;
  swift_bridgeObjectRelease();
  uint64_t v118 = *((void *)v115 + 5);
  *(void *)(v114 + 32) = *((void *)v115 + 4);
  *(void *)(v114 + 40) = v118;
  swift_bridgeObjectRelease();
  uint64_t v119 = *((void *)v115 + 7);
  *(void *)(v114 + 48) = *((void *)v115 + 6);
  *(void *)(v114 + 56) = v119;
  swift_bridgeObjectRelease();
  uint64_t v120 = *((void *)v115 + 9);
  *(void *)(v114 + 64) = *((void *)v115 + 8);
  *(void *)(v114 + 72) = v120;
  swift_bridgeObjectRelease();
  long long v121 = v115 + 80;
  unint64_t v122 = *(void *)(v114 + 88);
  if (v122 >> 60 == 15)
  {
LABEL_40:
    *(_OWORD *)(v114 + 80) = *v121;
    goto LABEL_43;
  }
  unint64_t v123 = *((void *)v115 + 11);
  if (v123 >> 60 == 15)
  {
    sub_248007220(v114 + 80);
    goto LABEL_40;
  }
  uint64_t v213 = *(void *)(v114 + 80);
  *(void *)(v114 + 80) = *(void *)v121;
  *(void *)(v114 + 88) = v123;
  sub_247FB6CCC(v213, v122);
LABEL_43:
  *(void *)((char *)v96 + v112[6]) = *(void *)((char *)v97 + v112[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v96 + v112[7]) = *(void *)((char *)v97 + v112[7]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v96 + v112[8]) = *((unsigned char *)v97 + v112[8]);
  *((unsigned char *)v96 + v112[9]) = *((unsigned char *)v97 + v112[9]);
  uint64_t v127 = v112[10];
  uint64_t v128 = (void *)((char *)v96 + v127);
  uint64_t v129 = (void *)((char *)v97 + v127);
  if (*(void *)((char *)v96 + v127 + 8))
  {
    uint64_t v130 = v129[1];
    if (v130)
    {
      *uint64_t v128 = *v129;
      v128[1] = v130;
      swift_bridgeObjectRelease();
      v128[2] = v129[2];
      swift_bridgeObjectRelease();
      v128[3] = v129[3];
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    sub_247FFB0A0((uint64_t)v128);
  }
  long long v131 = *((_OWORD *)v129 + 1);
  *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
  *((_OWORD *)v128 + 1) = v131;
LABEL_48:
  uint64_t v132 = v112[11];
  uint64_t v133 = (void *)((char *)v96 + v132);
  uint64_t v134 = (void *)((char *)v97 + v132);
  uint64_t v136 = *v134;
  uint64_t v135 = v134[1];
  *uint64_t v133 = v136;
  v133[1] = v135;
  swift_bridgeObjectRelease();
  uint64_t v137 = v112[12];
  uint64_t v138 = *(void **)((char *)v96 + v137);
  *(void *)((char *)v96 + v137) = *(void *)((char *)v97 + v137);

  uint64_t v139 = v112[13];
  uint64_t v140 = (char *)v96 + v139;
  uint64_t v141 = (char *)v97 + v139;
  char v142 = v141[16];
  uint64_t v143 = *(void *)v140;
  uint64_t v144 = *((void *)v140 + 1);
  *(_OWORD *)uint64_t v140 = *(_OWORD *)v141;
  char v145 = v140[16];
  v140[16] = v142;
  sub_247FE52C4(v143, v144, v145);
  uint64_t v146 = v112[14];
  char v147 = (void *)((char *)v96 + v146);
  uint64_t v148 = (void *)((char *)v97 + v146);
  uint64_t v150 = *v148;
  uint64_t v149 = v148[1];
  *char v147 = v150;
  v147[1] = v149;
  swift_bridgeObjectRelease();
  *((unsigned char *)v96 + v112[15]) = *((unsigned char *)v97 + v112[15]);
  uint64_t v151 = v112[16];
  uint64_t v152 = (uint64_t)v96 + v151;
  uint64_t v153 = (char *)v97 + v151;
  if (*(void *)((char *)v96 + v151 + 8) < 3uLL)
  {
LABEL_51:
    long long v155 = *((_OWORD *)v153 + 1);
    *(_OWORD *)uint64_t v152 = *(_OWORD *)v153;
    *(_OWORD *)(v152 + 16) = v155;
    goto LABEL_53;
  }
  unint64_t v154 = *((void *)v153 + 1);
  if (v154 < 3)
  {
    sub_247FB33D4(v152, &qword_2692D7018);
    goto LABEL_51;
  }
  *(void *)uint64_t v152 = *(void *)v153;
  *(void *)(v152 + 8) = v154;
  swift_bridgeObjectRelease();
  uint64_t v156 = *((void *)v153 + 3);
  *(void *)(v152 + 16) = *((void *)v153 + 2);
  *(void *)(v152 + 24) = v156;
  swift_bridgeObjectRelease();
LABEL_53:
  *(unsigned char *)(v152 + 32) = v153[32];
  uint64_t v157 = *(int *)(a3 + 20);
  uint64_t v158 = a1 + v157;
  if (*(void *)(a1 + v157 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + v157);
  }
  long long v159 = *(_OWORD *)(a2 + v157 + 16);
  *(_OWORD *)uint64_t v158 = *(_OWORD *)(a2 + v157);
  *(_OWORD *)(v158 + 16) = v159;
  *(void *)(v158 + 32) = *(void *)(a2 + v157 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24805AE0C);
}

uint64_t sub_24805AE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SetupModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SetupContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24805AEF0);
}

uint64_t sub_24805AEF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SetupModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  }
  return result;
}

uint64_t sub_24805AFB0()
{
  uint64_t result = type metadata accessor for SetupModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SetupContext.Builder(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE52C4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  sub_247FE51A0(*(void **)(a1 + 48), *(id *)(a1 + 56), *(void *)(a1 + 64), *(unsigned int *)(a1 + 72) | ((unint64_t)*(unsigned __int16 *)(a1 + 76) << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 160)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  }
  if (*(void *)(a1 + 184))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SetupContext.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE42A8(v5, v6, v7);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  long long v8 = *(void **)(a2 + 48);
  uint64_t v9 = *(void **)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v11 = *(unsigned __int16 *)(a2 + 76);
  uint64_t v12 = *(unsigned int *)(a2 + 72);
  sub_247FE4184(v8, v9, v10, v12 | (v11 << 32));
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(_WORD *)(a1 + 76) = v11;
  *(_DWORD *)(a1 + 72) = v12;
  uint64_t v13 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v13;
  uint64_t v14 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  uint64_t v15 = *(void **)(a2 + 128);
  *(void *)(a1 + 128) = v15;
  uint64_t v16 = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v17 = v15;
  if (!v16)
  {
    long long v24 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v24;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    uint64_t v19 = *(void *)(a2 + 184);
    if (v19) {
      goto LABEL_3;
    }
LABEL_5:
    long long v25 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v25;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    long long v26 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v26;
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = v16;
  *(void *)(a1 + 168) = v18;
  (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 136, a2 + 136, v16);
  uint64_t v19 = *(void *)(a2 + 184);
  if (!v19) {
    goto LABEL_5;
  }
LABEL_3:
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v19;
  uint64_t v20 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v20;
  uint64_t v21 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v21;
  uint64_t v22 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v22;
  uint64_t v23 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_6:
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v27 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v27;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SetupContext.Builder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  sub_247FE42A8(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  sub_247FE52C4(v7, v8, v9);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v10 = *(void **)(a2 + 48);
  uint64_t v11 = *(void **)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(unsigned __int16 *)(a2 + 76);
  uint64_t v14 = *(unsigned int *)(a2 + 72);
  sub_247FE4184(v10, v11, v12, v14 | (v13 << 32));
  uint64_t v15 = *(void **)(a1 + 48);
  uint64_t v16 = *(void **)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  unint64_t v18 = *(unsigned int *)(a1 + 72) | ((unint64_t)*(unsigned __int16 *)(a1 + 76) << 32);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(_DWORD *)(a1 + 72) = v14;
  *(_WORD *)(a1 + 76) = v13;
  sub_247FE51A0(v15, v16, v17, v18);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v19;
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  uint64_t v20 = *(void **)(a1 + 128);
  uint64_t v21 = *(void **)(a2 + 128);
  *(void *)(a1 + 128) = v21;
  id v22 = v21;

  uint64_t v23 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160))
  {
    if (v23)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 136), (uint64_t *)(a2 + 136));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  }
  else if (v23)
  {
    *(void *)(a1 + 160) = v23;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    (**(void (***)(uint64_t, uint64_t))(v23 - 8))(a1 + 136, a2 + 136);
    goto LABEL_8;
  }
  long long v24 = *(_OWORD *)(a2 + 136);
  long long v25 = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 136) = v24;
  *(_OWORD *)(a1 + 152) = v25;
LABEL_8:
  long long v26 = (_OWORD *)(a1 + 176);
  uint64_t v27 = (_OWORD *)(a2 + 176);
  uint64_t v28 = *(void *)(a2 + 184);
  if (*(void *)(a1 + 184))
  {
    if (v28)
    {
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FACD88(a1 + 176);
      *long long v26 = *v27;
      long long v29 = *(_OWORD *)(a2 + 240);
      long long v31 = *(_OWORD *)(a2 + 192);
      long long v30 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v29;
      *(_OWORD *)(a1 + 192) = v31;
      *(_OWORD *)(a1 + 208) = v30;
    }
  }
  else if (v28)
  {
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *long long v26 = *v27;
    long long v32 = *(_OWORD *)(a2 + 192);
    long long v33 = *(_OWORD *)(a2 + 208);
    long long v34 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v34;
    *(_OWORD *)(a1 + 192) = v32;
    *(_OWORD *)(a1 + 208) = v33;
  }
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t assignWithTake for SetupContext.Builder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v7 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_247FE52C4(v5, v6, v7);
  uint64_t v8 = *(unsigned int *)(a1 + 72);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v9 = *(void *)(a2 + 64);
  __int16 v10 = *(_WORD *)(a2 + 76);
  int v11 = *(_DWORD *)(a2 + 72);
  uint64_t v12 = *(void **)(a1 + 48);
  uint64_t v13 = *(void **)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  unint64_t v15 = v8 | ((unint64_t)*(unsigned __int16 *)(a1 + 76) << 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = v9;
  *(_DWORD *)(a1 + 72) = v11;
  *(_WORD *)(a1 + 76) = v10;
  sub_247FE51A0(v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  unint64_t v18 = *(void **)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);

  if (*(void *)(a1 + 160)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 136);
  }
  long long v19 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v19;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  if (!*(void *)(a1 + 184)) {
    goto LABEL_7;
  }
  uint64_t v20 = *(void *)(a2 + 184);
  if (!v20)
  {
    sub_247FACD88(a1 + 176);
LABEL_7:
    long long v25 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v25;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    long long v26 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v26;
    goto LABEL_8;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v24;
  swift_bridgeObjectRelease();
LABEL_8:
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  uint64_t v27 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupContext.Builder(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 280)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetupContext.Builder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 280) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 280) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupContext.Builder()
{
  return &type metadata for SetupContext.Builder;
}

ValueMetadata *type metadata accessor for SetupContext.Builder.MissingExpectedValue()
{
  return &type metadata for SetupContext.Builder.MissingExpectedValue;
}

unsigned char *storeEnumTagSinglePayload for SetupContext.Builder.Failure(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24805B9C8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupContext.Builder.Failure()
{
  return &type metadata for SetupContext.Builder.Failure;
}

unint64_t sub_24805BA04()
{
  unint64_t result = qword_2692D8988;
  if (!qword_2692D8988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8988);
  }
  return result;
}

uint64_t sub_24805BA58(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FEFBA8(v2);
  return a1;
}

uint64_t sub_24805BACC(uint64_t a1)
{
  unsigned int v4 = *v1;
  v2[2] = v2;
  v2[7] = v2 + 15;
  v2[3] = sub_24805BBD0;
  uint64_t v5 = swift_continuation_init();
  v2[10] = MEMORY[0x263EF8330];
  v2[11] = 0x40000000;
  v2[12] = sub_24805BE14;
  v2[13] = &block_descriptor_2;
  v2[14] = v5;
  objc_msgSend(v4, sel_authenticateWithContext_completion_, a1, v2 + 10);
  return MEMORY[0x270FA23F0](v2 + 2);
}

uint64_t sub_24805BBD0()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48))
  {
    swift_willThrow();
    unint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(void *)(*v0 + 120);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 8);
    return v5(v4);
  }
}

uint64_t dispatch thunk of AKAppleIDAuthenticationControllerProtocol.authenticate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_2480467F8;
  return v9(a1, a2, a3);
}

uint64_t sub_24805BE14(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_2692D98F0);
      uint64_t v8 = sub_248175010();
    }
    else
    {
      uint64_t v8 = 0;
    }
    uint64_t v10 = v8;
    sub_24805BF08((uint64_t)&v10, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_24805BF08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2692D89C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of static CommandProtocol.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_24805BF84(uint64_t a1)
{
  id v2 = objc_msgSend(v1, sel_accountsUsingService_, a1);
  sub_24805DDB4();
  sub_24805DDF4();
  uint64_t v3 = sub_248175530();

  return v3;
}

id sub_24805BFEC(uint64_t a1)
{
  return objc_msgSend(v1, sel_isManagedAppleIDForAccount_, a1);
}

uint64_t sub_24805C014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_2692D89F0 + dword_2692D89F0);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247FCB950;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_24805C0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a4;
  if (a2)
  {
    uint64_t v7 = sub_248175130();
    v5[15] = v7;
    if (!v6) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v7 = 0;
  v5[15] = 0;
  if (a4) {
LABEL_3:
  }
    uint64_t v6 = sub_248175130();
LABEL_4:
  v5[16] = v6;
  v5[2] = v5;
  v5[3] = sub_24805C224;
  uint64_t v8 = swift_continuation_init();
  v5[10] = MEMORY[0x263EF8330];
  v5[11] = 0x40000000;
  v5[12] = sub_24803989C;
  v5[13] = &block_descriptor_3;
  v5[14] = v8;
  objc_msgSend(v4, sel_performCheckInForAccountWithAltDSID_event_completion_, v7, v6, v5 + 10);
  return MEMORY[0x270FA23F0](v5 + 2);
}

uint64_t sub_24805C224()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void **)(*v0 + 128);
  uint64_t v4 = *(void **)(*v0 + 120);
  if (*(void *)(v1 + 48)) {
    swift_willThrow();
  }

  uint64_t v5 = *(uint64_t (**)(void))(v2 + 8);
  return v5();
}

void *AISCheckInHelper.__allocating_init(with:authenticationController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  return result;
}

void *AISCheckInHelper.init(with:authenticationController:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t sub_24805C3C8()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24805C3E8, 0, 0);
}

uint64_t sub_24805C3E8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8))(1, ObjectType, v2);
  swift_retain();
  sub_24805D840(v4, v1);
  uint64_t v6 = v5;
  v0[3] = v5;
  swift_release();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[4] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_24805C4F8;
  uint64_t v8 = v0[2];
  v7[3] = v6;
  v7[4] = v8;
  return MEMORY[0x270FA2498](sub_24805C628, 0, 0);
}

uint64_t sub_24805C4F8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24805C608(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_24805C628, 0, 0);
}

uint64_t sub_24805C628()
{
  unint64_t v1 = v0[3];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2481759D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 < 1)
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_248174B90();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B13B730);
    uint64_t v8 = sub_248174B70();
    os_log_type_t v9 = sub_2481755F0();
    if (!os_log_type_enabled(v8, v9)) {
      goto LABEL_20;
    }
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    int v11 = "No accounts to check in, we're done";
    goto LABEL_19;
  }
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_248174B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B13B730);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755F0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    v0[2] = v2;
    sub_248175730();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v4, v5, "Checking in %ld account(s)", v6, 0xCu);
    MEMORY[0x24C574E00](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  if (objc_msgSend(*(id *)(v0[4] + 32), sel_respondsToSelector_, sel_performCheckInForAccountWithAltDSID_event_completion_))
  {
    uint64_t v12 = swift_task_alloc();
    v0[5] = v12;
    *(_OWORD *)(v12 + 16) = *(_OWORD *)(v0 + 3);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[6] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_24805C9CC;
    return MEMORY[0x270FA2158]();
  }
  uint64_t v8 = sub_248174B70();
  os_log_type_t v9 = sub_2481755D0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    int v11 = "Method unavailable. Cannot continue to check in accounts.";
LABEL_19:
    _os_log_impl(&dword_247F93000, v8, v9, v11, v10, 2u);
    MEMORY[0x24C574E00](v10, -1, -1);
  }
LABEL_20:

  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_24805C9CC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24805CAE4, 0, 0);
}

uint64_t sub_24805CAE4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24805CAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24805CBA0, 0, 0);
}

uint64_t sub_24805CBA0()
{
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2481759D0();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    long long v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v25;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8A30);
    *long long v25 = v0;
    v25[1] = sub_24805CF24;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    return MEMORY[0x270FA1E50](v3, v4, v5);
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v6 = 0;
    unint64_t v28 = v1 & 0xC000000000000001;
    uint64_t v27 = *(void *)(v0 + 80) + 32;
    uint64_t v29 = v2;
    while (1)
    {
      if (v28) {
        id v8 = (id)MEMORY[0x24C573D60](v6, *(void *)(v0 + 80));
      }
      else {
        id v8 = *(id *)(v27 + 8 * v6);
      }
      os_log_type_t v9 = v8;
      uint64_t v11 = *(void *)(v0 + 96);
      uint64_t v10 = *(void *)(v0 + 104);
      uint64_t v12 = *(void *)(v0 + 88);
      uint64_t v13 = sub_2481753D0();
      uint64_t v14 = *(void *)(v13 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
      unint64_t v15 = (void *)swift_allocObject();
      v15[2] = 0;
      uint64_t v16 = v15 + 2;
      v15[3] = 0;
      void v15[4] = v9;
      v15[5] = v12;
      sub_24805DFF4(v10, v11);
      LODWORD(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13);
      id v17 = v9;
      swift_retain();
      uint64_t v18 = *(void *)(v0 + 96);
      if (v10 == 1)
      {
        sub_24805E05C(*(void *)(v0 + 96));
        if (!*v16) {
          goto LABEL_13;
        }
      }
      else
      {
        sub_2481753C0();
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v13);
        if (!*v16)
        {
LABEL_13:
          uint64_t v19 = 0;
          uint64_t v21 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_248175340();
      uint64_t v21 = v20;
      swift_unknownObjectRelease();
LABEL_14:
      uint64_t v22 = **(void **)(v0 + 72);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = &unk_2692D8A20;
      *(void *)(v23 + 24) = v15;
      uint64_t v24 = v21 | v19;
      if (v21 | v19)
      {
        uint64_t v24 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v19;
        *(void *)(v0 + 40) = v21;
      }
      ++v6;
      uint64_t v7 = *(void *)(v0 + 104);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v24;
      *(void *)(v0 + 64) = v22;
      swift_task_create();
      swift_release();
      sub_24805E05C(v7);

      if (v29 == v6) {
        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return MEMORY[0x270FA1E50](v3, v4, v5);
}

uint64_t sub_24805CF24()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24805D050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 72) = a4;
  *(void *)(v5 + 80) = a5;
  return MEMORY[0x270FA2498](sub_24805D070, 0, 0);
}

uint64_t sub_24805D070()
{
  uint64_t v29 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 72), sel_aa_altDSID);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v4 = sub_248175160();
    uint64_t v6 = v5;

    *(void *)(v0 + 88) = v6;
    uint64_t v7 = *(void *)(v3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + **(int **)(v7 + 8));
    os_log_type_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v9;
    *os_log_type_t v9 = v0;
    v9[1] = sub_24805D3B0;
    return v27(v4, v6, 0xD000000000000013, 0x8000000248191710, ObjectType, v7);
  }
  else
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v11 = *(void **)(v0 + 72);
    uint64_t v12 = sub_248174B90();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B13B730);
    id v13 = v11;
    uint64_t v14 = sub_248174B70();
    os_log_type_t v15 = sub_2481755D0();
    BOOL v16 = os_log_type_enabled(v14, v15);
    id v17 = *(void **)(v0 + 72);
    if (v16)
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v28 = v19;
      *(_DWORD *)uint64_t v18 = 136315138;
      id v20 = objc_msgSend(v17, sel_username);
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = sub_248175160();
        unint64_t v24 = v23;
      }
      else
      {
        uint64_t v22 = 0;
        unint64_t v24 = 0xE000000000000000;
      }
      long long v25 = *(void **)(v0 + 72);
      *(void *)(v0 + 40) = sub_247FB6D24(v22, v24, &v28);
      sub_248175730();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_247F93000, v14, v15, "Skipping checking for account %s, account has no altDSID", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v19, -1, -1);
      MEMORY[0x24C574E00](v18, -1, -1);
    }
    else
    {
    }
    long long v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
}

uint64_t sub_24805D3B0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_24805D4EC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_24805D4EC()
{
  uint64_t v29 = v0;
  swift_bridgeObjectRelease();
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  id v1 = (void *)v0[9];
  uint64_t v2 = (void *)v0[13];
  uint64_t v3 = sub_248174B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B13B730);
  id v4 = v1;
  id v5 = v2;
  id v6 = v4;
  id v7 = v2;
  id v8 = sub_248174B70();
  os_log_type_t v9 = sub_2481755D0();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v26 = v9;
    uint64_t v10 = (void *)v0[9];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v28 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    id v13 = objc_msgSend(v10, sel_username);
    uint64_t v27 = v12;
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_248175160();
      unint64_t v17 = v16;
    }
    else
    {
      uint64_t v15 = 0;
      unint64_t v17 = 0xE000000000000000;
    }
    id v20 = (void *)v0[13];
    uint64_t v21 = (void *)v0[9];
    v0[6] = sub_247FB6D24(v15, v17, &v28);
    sub_248175730();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v22 = sub_248175DE0();
    v0[8] = sub_247FB6D24(v22, v23, &v28);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v8, v26, "Account %s checked in with error: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v27, -1, -1);
    MEMORY[0x24C574E00](v11, -1, -1);
  }
  else
  {
    uint64_t v18 = (void *)v0[13];
    uint64_t v19 = (void *)v0[9];
  }
  unint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t AISCheckInHelper.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AISCheckInHelper.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

void sub_24805D840(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_2481757D0();
    sub_24805DDB4();
    sub_24805DDF4();
    sub_248175560();
    uint64_t v3 = v22;
    uint64_t v20 = v23;
    uint64_t v4 = v24;
    uint64_t v5 = v25;
    unint64_t v6 = v26;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v20 = a1 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a1 + 56);
  }
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_2481757E0()) {
      goto LABEL_35;
    }
    sub_24805DDB4();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v21;
    swift_unknownObjectRelease();
    uint64_t v13 = v5;
    uint64_t v11 = v6;
    if (!v21) {
      goto LABEL_35;
    }
LABEL_33:
    uint64_t v18 = *(void *)(a2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(id, uint64_t, uint64_t))(v18 + 16))(v14, ObjectType, v18))
    {
      sub_2481758F0();
      sub_248175920();
      sub_248175930();
      sub_248175900();
    }
    else
    {
    }
    uint64_t v5 = v13;
    unint64_t v6 = v11;
  }
  if (v6)
  {
    uint64_t v11 = (v6 - 1) & v6;
    unint64_t v12 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v13 = v5;
LABEL_32:
    id v14 = *(id *)(*(void *)(v3 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  int64_t v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v10) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v20 + 8 * v15);
    uint64_t v13 = v5 + 1;
    if (!v16)
    {
      uint64_t v13 = v5 + 2;
      if (v5 + 2 >= v10) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v20 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v5 + 3;
        if (v5 + 3 >= v10) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v20 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v5 + 4;
          if (v5 + 4 >= v10) {
            goto LABEL_35;
          }
          unint64_t v16 = *(void *)(v20 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v5 + 5;
            if (v5 + 5 >= v10) {
              goto LABEL_35;
            }
            unint64_t v16 = *(void *)(v20 + 8 * v13);
            if (!v16)
            {
              uint64_t v17 = v5 + 6;
              while (v10 != v17)
              {
                unint64_t v16 = *(void *)(v20 + 8 * v17++);
                if (v16)
                {
                  uint64_t v13 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_247FBB1C4();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

uint64_t dispatch thunk of AISAccountsProviderProtocol.accounts(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AISAccountsProviderProtocol.isManagedAppleID(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AISAKAppleIDAuthenticationControllerProtocol.performCheckInForAccount(withAltDSID:event:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_247FCB950;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t type metadata accessor for AISCheckInHelper()
{
  return self;
}

uint64_t method lookup function for AISCheckInHelper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISCheckInHelper);
}

uint64_t dispatch thunk of AISCheckInHelper.__allocating_init(with:authenticationController:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of AISCheckInHelper.checkinMAIDAccountsOnDevice()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 104) + **(int **)(*(void *)v0 + 104));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247FD79D0;
  return v4();
}

unint64_t sub_24805DDB4()
{
  unint64_t result = qword_2692D71E8;
  if (!qword_2692D71E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2692D71E8);
  }
  return result;
}

unint64_t sub_24805DDF4()
{
  unint64_t result = qword_2692D89F8;
  if (!qword_2692D89F8)
  {
    sub_24805DDB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2692D89F8);
  }
  return result;
}

uint64_t sub_24805DE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_247FCB950;
  return sub_24805CAF8(a1, a2, v7, v6);
}

uint64_t sub_24805DF00()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_24805DF48()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_247FD79D0;
  *(_OWORD *)(v2 + 72) = v3;
  return MEMORY[0x270FA2498](sub_24805D070, 0, 0);
}

uint64_t sub_24805DFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24805E05C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24805E0BC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24805E0F4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692D8A18 + dword_2692D8A18);
  return v6(a1, v4);
}

uint64_t sub_24805E1AC()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_2692D8A38);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2692D8A38);
  if (qword_26B13BDD8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26B13BDC0);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

BOOL sub_24805E274(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24802A2F4(*a1, *a2);
}

uint64_t sub_24805E280()
{
  return sub_24802A3F8();
}

uint64_t sub_24805E288()
{
  return sub_24802A304();
}

uint64_t sub_24805E290()
{
  return sub_248175EC0();
}

id RapportTransport.client.getter()
{
  return *v0;
}

uint64_t RapportTransport.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id RapportTransport.queue.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t RapportTransport.init(client:identifier:queue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for RapportTransport();
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  uint64_t v11 = a5 + *(int *)(v10 + 56);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(a5 + *(int *)(v10 + 60), 1, 1, v12);
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  return result;
}

uint64_t type metadata accessor for RapportTransport()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t RapportTransport.onReceive(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_247F98D68(v4[4]);
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v9 = v4[6];
  swift_retain();
  sub_247F98D68(v9);
  v4[6] = 0;
  v4[7] = 0;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(a3 - 8) + 32);
  return v10(a4, v4, a3);
}

{
  uint64_t *v4;
  uint64_t vars8;

  sub_247F98D68(v4[4]);
  v4[4] = 0;
  v4[5] = 0;
  sub_247F98D68(v4[6]);
  v4[6] = a1;
  v4[7] = a2;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v4, a3);
  return swift_retain();
}

uint64_t RapportTransport.onInvalidation(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_247F98D68(*(void *)(v4 + 64));
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 72) = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v4, a3);
  return swift_retain();
}

uint64_t RapportTransport.incomingSigningIdentity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24805E6C8(a1, (uint64_t)v9);
  uint64_t v10 = v3 + *(int *)(a2 + 56);
  sub_247FB33D4(v10, &qword_2692D58F0);
  sub_24805E730((uint64_t)v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v3, a2);
}

uint64_t sub_24805E6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24805E730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RapportTransport.outgoingSigningIdentity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24805E6C8(a1, (uint64_t)v9);
  uint64_t v10 = v3 + *(int *)(a2 + 60);
  sub_247FB33D4(v10, &qword_2692D58F0);
  sub_24805E730((uint64_t)v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v3, a2);
}

uint64_t RapportTransport.build()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v34 = a2;
  uint64_t v5 = v2[6];
  if (v5) {
    uint64_t v6 = v2[7];
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v28 = v2[6];
  uint64_t v29 = v6;
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v24 = *(void *)(a1 + 16);
  uint64_t v7 = v24;
  uint64_t v25 = v8;
  sub_247F98D10(v5);
  uint64_t v26 = v24;
  type metadata accessor for RapportTransport.MessageInfo();
  uint64_t v27 = sub_248175700();
  swift_getFunctionTypeMetadata();
  sub_248175700();
  uint64_t v9 = type metadata accessor for RapportTransport.TypedReceiver();
  sub_248024770((void (*)(char *, char *))sub_24805EBEC, (uint64_t)v23, MEMORY[0x263F8E628], v9, v10, (uint64_t)&v30);
  sub_247F98D68(v28);
  unsigned __int8 v11 = v31;
  if (v31 != 255)
  {
    long long v32 = v30;
LABEL_7:
    long long v15 = v32;
    sub_24805EC90(v32, *((void (**)(void))&v32 + 1), v11 & 1, a1, v34);
    return sub_248064BB8(v15, *((uint64_t *)&v15 + 1), v11);
  }
  uint64_t v12 = v2[5];
  uint64_t v28 = v2[4];
  uint64_t v29 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v28);
  void v22[2] = v7;
  v22[3] = v8;
  sub_247F98D10(v13);
  uint64_t v26 = v7;
  swift_getFunctionTypeMetadata();
  sub_248175700();
  sub_248024770((void (*)(char *, char *))sub_24805EC38, (uint64_t)v22, MEMORY[0x263F8E628], v9, v14, (uint64_t)&v32);
  sub_247F98D68(v28);
  unsigned __int8 v11 = v33;
  if (v33 != 255) {
    goto LABEL_7;
  }
  if (qword_2692D4DB0 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_248174B90();
  __swift_project_value_buffer(v17, (uint64_t)qword_2692D8A38);
  uint64_t v18 = sub_248174B70();
  os_log_type_t v19 = sub_2481755D0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl(&dword_247F93000, v18, v19, "Failed to build rapport transport, missing receiver", v20, 2u);
    MEMORY[0x24C574E00](v20, -1, -1);
  }

  type metadata accessor for RapportTransport.Failure();
  swift_getWitnessTable();
  swift_allocError();
  unsigned char *v21 = 0;
  swift_willThrow();
  return (*(uint64_t (**)(void *, uint64_t))(*(void *)(a1 - 8) + 8))(v3, a1);
}

uint64_t sub_24805EBEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24805EC54(a1, 1, a2);
}

uint64_t type metadata accessor for RapportTransport.MessageInfo()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for RapportTransport.TypedReceiver()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24805EC38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24805EC54(a1, 0, a2);
}

uint64_t sub_24805EC54@<X0>(uint64_t *a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  *(void *)a3 = v4;
  *(void *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 16) = a2;
  return swift_retain();
}

uint64_t type metadata accessor for RapportTransport.Failure()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24805EC90@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v81 = a4;
  LODWORD(v76) = a3;
  char v75 = a2;
  uint64_t v74 = a1;
  uint64_t v64 = a5;
  uint64_t v87 = *(void *)(a4 - 8);
  uint64_t v78 = *(void *)(v87 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v83 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 24);
  uint64_t v88 = *(void *)(v9 + 16);
  uint64_t v73 = type metadata accessor for MessageUnpacker();
  uint64_t v70 = *(void *)(v73 - 8);
  uint64_t v72 = *(void *)(v70 + 64);
  uint64_t v11 = MEMORY[0x270FA5388](v73);
  uint64_t v71 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (uint64_t *)((char *)&v62 - v13);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for MessagePacker();
  uint64_t v84 = *(void ***)(v69 - 8);
  long long v68 = v84[8];
  uint64_t v18 = MEMORY[0x270FA5388](v69);
  uint64_t v67 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (uint64_t *)((char *)&v62 - v20);
  uint64_t v82 = (uint64_t)&v62 - v20;
  long long v66 = *v5;
  uint64_t v22 = v66;
  id v77 = sub_24805F530(v66);
  sub_248174610();
  swift_allocObject();
  uint64_t v80 = sub_248174600();
  sub_2481745E0();
  swift_allocObject();
  uint64_t v79 = sub_2481745D0();
  swift_allocObject();
  uint64_t v23 = sub_248174600();
  sub_24805E6C8((uint64_t)v6 + *(int *)(a4 + 60), (uint64_t)v17);
  uint64_t v24 = v88;
  MessagePacker.init(encoder:signingIdentity:topicIdentifier:)(v23, (uint64_t)v17, 0, 0, v88, v10, v21);
  swift_allocObject();
  uint64_t v25 = sub_2481745D0();
  sub_24805E6C8((uint64_t)v6 + *(int *)(a4 + 56), (uint64_t)v17);
  uint64_t v26 = v25;
  uint64_t v27 = v10;
  uint64_t v86 = v10;
  MessageUnpacker.init(decoder:signingIdentity:topicIdentifier:)(v26, (uint64_t)v17, 0, 0, v24, v10, v14);
  objc_msgSend(v22, sel_setDispatchQueue_, v6[3]);
  uint64_t v85 = v6;
  uint64_t v65 = sub_248175130();
  uint64_t v28 = v70;
  uint64_t v29 = *(void (**)(char *, void *, uint64_t))(v70 + 16);
  long long v30 = v71;
  uint64_t v63 = v14;
  unsigned __int8 v31 = v14;
  uint64_t v32 = v73;
  v29(v71, v31, v73);
  unsigned __int8 v33 = v84;
  uint64_t v34 = v67;
  uint64_t v35 = v69;
  ((void (*)(char *, uint64_t, uint64_t))v84[2])(v67, v82, v69);
  uint64_t v36 = v28;
  unint64_t v37 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v38 = (v72 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (*((unsigned __int8 *)v33 + 80) + v38 + 17) & ~(unint64_t)*((unsigned __int8 *)v33 + 80);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v88;
  *(void *)(v40 + 24) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v37, v30, v32);
  unint64_t v41 = v40 + v38;
  int v42 = v75;
  *(void *)unint64_t v41 = v74;
  *(void *)(v41 + 8) = v42;
  *(unsigned char *)(v41 + 16) = v76 & 1;
  ((void (*)(unint64_t, char *, uint64_t))v84[4])(v40 + v39, v34, v35);
  uint64_t v93 = sub_248071DE0;
  uint64_t v94 = v40;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v90 = 1107296256;
  uint64_t v84 = &v91;
  long long v91 = sub_24806237C;
  uint64_t v92 = &block_descriptor_30;
  int v43 = _Block_copy(&aBlock);
  sub_2480714F4();
  swift_release();
  long long v44 = (void *)v65;
  objc_msgSend(v66, sel_registerRequestID_options_handler_, v65, 0, v43);
  _Block_release(v43);

  dispatch_queue_t v76 = (dispatch_queue_t)*v85;
  uint64_t v45 = v87;
  char v75 = *(void (**)(void))(v87 + 16);
  uint64_t v46 = v83;
  uint64_t v47 = v81;
  v75(v83);
  uint64_t v48 = *(unsigned __int8 *)(v45 + 80);
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = v86;
  *(void *)(v49 + 16) = v88;
  *(void *)(v49 + 24) = v50;
  uint64_t v51 = *(void (**)(uint64_t, char *, uint64_t))(v45 + 32);
  v51(v49 + ((v48 + 32) & ~v48), v46, v47);
  uint64_t v93 = sub_2480723EC;
  uint64_t v94 = v49;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v90 = 1107296256;
  long long v91 = sub_2480360BC;
  uint64_t v92 = &block_descriptor_36;
  uint64_t v52 = _Block_copy(&aBlock);
  swift_release();
  [v76 setInvalidationHandler:v52];
  _Block_release(v52);
  dispatch_queue_t v76 = (dispatch_queue_t)v85[3];
  v75(v46);
  long long v53 = (void *)swift_allocObject();
  uint64_t v54 = v86;
  v53[2] = v88;
  v53[3] = v54;
  uint64_t v55 = v77;
  v53[4] = v77;
  uint64_t v87 = v45 + 32;
  v51((uint64_t)v53 + ((v48 + 40) & ~v48), v46, v47);
  uint64_t v56 = (void (*)(char *, void **, uint64_t))v51;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_248072940;
  *(void *)(v57 + 24) = v53;
  uint64_t v93 = sub_2480729D8;
  uint64_t v94 = v57;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v90 = 1107296256;
  long long v91 = sub_2480C6078;
  uint64_t v92 = &block_descriptor_45_0;
  long long v58 = _Block_copy(&aBlock);
  id v59 = v55;
  swift_retain();
  swift_release();
  dispatch_sync(v76, v58);
  swift_release();
  swift_release();
  _Block_release(v58);
  LOBYTE(v55) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v55)
  {
    __break(1u);
  }
  else
  {
    uint64_t v61 = (uint64_t)v83;
    v56(v83, v85, v81);
    sub_248062574(v61, (uint64_t)v59, v82, (uint64_t)v63, v64);
    return swift_release();
  }
  return result;
}

id sub_24805F530(void *a1)
{
  uint64_t v3 = *(void **)(v1 + 24);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F38570]), sel_init);
  objc_msgSend(v4, sel_setDispatchQueue_, v3);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = v3;
  uint64_t v21 = sub_2480733DC;
  uint64_t v22 = v5;
  uint64_t v17 = MEMORY[0x263EF8330];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_248062C20;
  uint64_t v20 = &block_descriptor_62;
  uint64_t v6 = _Block_copy(&v17);
  id v7 = a1;
  id v8 = v3;
  swift_release();
  objc_msgSend(v4, sel_setRegisterRequestHandler_, v6);
  _Block_release(v6);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  uint64_t v21 = sub_24807341C;
  uint64_t v22 = v9;
  uint64_t v17 = MEMORY[0x263EF8330];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_248062E50;
  uint64_t v20 = &block_descriptor_68;
  uint64_t v10 = _Block_copy(&v17);
  id v11 = v7;
  swift_release();
  objc_msgSend(v4, sel_setDeregisterRequestHandler_, v10);
  _Block_release(v10);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = v8;
  uint64_t v21 = sub_248073474;
  uint64_t v22 = v12;
  uint64_t v17 = MEMORY[0x263EF8330];
  uint64_t v18 = 1107296256;
  uint64_t v19 = sub_24806340C;
  uint64_t v20 = &block_descriptor_74;
  uint64_t v13 = _Block_copy(&v17);
  id v14 = v11;
  id v15 = v8;
  swift_release();
  objc_msgSend(v4, sel_setSendRequestHandler_, v13);
  _Block_release(v13);
  return v4;
}

uint64_t sub_24805F798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v50 = a8;
  uint64_t v48 = a6;
  uint64_t v49 = a7;
  uint64_t v42 = a5;
  uint64_t v51 = a3;
  uint64_t v52 = a4;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  uint64_t v44 = a11;
  uint64_t v45 = a10;
  uint64_t v11 = type metadata accessor for MessagePacker();
  uint64_t v40 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v39 - v14;
  unint64_t v41 = (char *)&v39 - v14;
  uint64_t v16 = type metadata accessor for MessageUnpacker();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v43 = v23;
  uint64_t v24 = sub_2481753D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v42, v16);
  uint64_t v39 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a9, v11);
  unint64_t v25 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v26 = (v18 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (*(unsigned __int8 *)(v12 + 80) + v27 + 17) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v29 = (v13 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  long long v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = 0;
  *((void *)v30 + 3) = 0;
  uint64_t v31 = v46;
  uint64_t v32 = v44;
  *((void *)v30 + 4) = v45;
  *((void *)v30 + 5) = v32;
  *((void *)v30 + 6) = v31;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v30[v25], v20, v16);
  uint64_t v33 = v48;
  *(void *)&v30[v26] = v47;
  uint64_t v34 = &v30[v27];
  uint64_t v35 = v49;
  *(void *)uint64_t v34 = v33;
  *((void *)v34 + 1) = v35;
  v34[16] = v50 & 1;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v30[v28], v41, v40);
  uint64_t v36 = &v30[v29];
  uint64_t v37 = v52;
  *(void *)uint64_t v36 = v51;
  *((void *)v36 + 1) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2480714F4();
  swift_retain();
  sub_247FFC0C4((uint64_t)v43, (uint64_t)&unk_2692D8C88, (uint64_t)v30);
  return swift_release();
}

uint64_t sub_24805FAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 744) = v15;
  *(void *)(v8 + 736) = v14;
  *(void *)(v8 + 728) = v13;
  *(_OWORD *)(v8 + 712) = v12;
  *(unsigned char *)(v8 + 145) = v11;
  *(void *)(v8 + 704) = a8;
  *(void *)(v8 + 696) = a7;
  *(void *)(v8 + 688) = a6;
  *(void *)(v8 + 680) = a5;
  *(void *)(v8 + 672) = a4;
  *(void *)(v8 + 752) = *(void *)(v14 - 8);
  *(void *)(v8 + 760) = swift_task_alloc();
  *(void *)(v8 + 768) = swift_task_alloc();
  *(void *)(v8 + 776) = swift_task_alloc();
  *(void *)(v8 + 784) = swift_task_alloc();
  *(void *)(v8 + 792) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24805FC40, 0, 0);
}

uint64_t sub_24805FC40()
{
  uint64_t v46 = v0;
  v45[1] = *MEMORY[0x263EF8340];
  if (qword_2692D4DB0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_248174B90();
  *(void *)(v0 + 800) = __swift_project_value_buffer(v1, (uint64_t)qword_2692D8A38);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    v45[0] = v5;
    *(_DWORD *)id v4 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_248175020();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 664) = sub_247FB6D24(v6, v8, v45);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, v2, v3, "Received incoming request to unpack: %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v5, -1, -1);
    MEMORY[0x24C574E00](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = *(void *)(v0 + 792);
  uint64_t v10 = *(void *)(v0 + 672);
  unint64_t v11 = type metadata accessor for MessageUnpacker();
  MessageUnpacker.unpack(_:)(v10, v11, v9);
  uint64_t v44 = v0 + 424;
  uint64_t v12 = *(void *)(v0 + 744);
  uint64_t v13 = *(void *)(v0 + 736);
  *(void *)(v0 + 608) = *(void *)(v0 + 688);
  uint64_t v14 = swift_task_alloc();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F78);
  uint64_t v15 = type metadata accessor for RapportTransport.MessageInfo();
  sub_248024770((void (*)(char *, char *))sub_2480731D0, v14, MEMORY[0x263F8E628], v15, v16, v0 + 288);
  swift_task_dealloc();
  uint64_t v17 = v0 + 424;
  uint64_t v18 = sub_248175700();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32);
  v19(v0 + 424, v0 + 288, v18);
  sub_2480714F4();
  sub_24807329C(v0 + 424, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_248073208);
  sub_2480714F4();
  sub_24807329C(v0 + 424, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_248073208);
  uint64_t v20 = sub_248174B70();
  os_log_type_t v21 = sub_2481755C0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = *(void *)(v0 + 704);
    uint64_t v23 = *(void *)(v0 + 696);
    os_log_type_t type = v21;
    char v24 = *(unsigned char *)(v0 + 145) & 1;
    uint64_t v25 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    v45[0] = v42;
    *(_DWORD *)uint64_t v25 = 136315394;
    *(void *)(v0 + 560) = v23;
    *(void *)(v0 + 568) = v22;
    *(unsigned char *)(v0 + 576) = v24;
    sub_2480714F4();
    type metadata accessor for RapportTransport.TypedReceiver();
    uint64_t v26 = sub_248175190();
    *(void *)(v0 + 640) = sub_247FB6D24(v26, v27, v45);
    sub_248175730();
    uint64_t v17 = v0 + 424;
    swift_bridgeObjectRelease();
    sub_248064BD0();
    sub_248064BD0();
    *(_WORD *)(v25 + 12) = 2080;
    v19(v0 + 16, v44, v18);
    sub_24807329C(v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_248073208);
    uint64_t v28 = sub_248175190();
    *(void *)(v0 + 656) = sub_247FB6D24(v28, v29, v45);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_24807329C(v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_248073308);
    sub_24807329C(v44, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_248073308);
    _os_log_impl(&dword_247F93000, v20, type, "Handling incoming request with receiver (%s) and inMessageInfo: %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v42, -1, -1);
    MEMORY[0x24C574E00](v25, -1, -1);
  }
  else
  {
    sub_248064BD0();
    sub_248064BD0();
    sub_24807329C(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_248073308);
    sub_24807329C(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_248073308);
  }

  uint64_t v30 = *(void *)(v0 + 792);
  uint64_t v31 = *(void *)(v0 + 776);
  uint64_t v32 = *(void *)(v0 + 752);
  uint64_t v33 = *(void *)(v0 + 736);
  char v34 = *(unsigned char *)(v0 + 145);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  *(void *)(v0 + 808) = v35;
  *(void *)(v0 + 816) = (v32 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v35(v31, v30, v33);
  v19(v0 + 152, v17, v18);
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 824) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_248060804;
  uint64_t v37 = *(void *)(v0 + 784);
  uint64_t v38 = *(void *)(v0 + 776);
  uint64_t v39 = *(void *)(v0 + 704);
  uint64_t v40 = *(void *)(v0 + 696);
  return sub_248061CC4(v37, v38, v0 + 152, v40, v39, v34 & 1);
}

uint64_t sub_248060804()
{
  *(void *)(*(void *)v1 + 832) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_248061060;
  }
  else {
    uint64_t v2 = sub_248060944;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_248060944()
{
  uint64_t v45 = v0;
  v44[1] = *MEMORY[0x263EF8340];
  (*(void (**)(void, void, void))(v0 + 808))(*(void *)(v0 + 768), *(void *)(v0 + 784), *(void *)(v0 + 736));
  uint64_t v1 = sub_248174B70();
  os_log_type_t v2 = sub_2481755C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 808);
    uint64_t v3 = *(void *)(v0 + 768);
    uint64_t v4 = *(void *)(v0 + 760);
    uint64_t v5 = *(void *)(v0 + 752);
    uint64_t v6 = *(void *)(v0 + 736);
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    v44[0] = v42;
    *(_DWORD *)unint64_t v7 = 136315138;
    v40(v4, v3, v6);
    uint64_t v8 = sub_248175190();
    *(void *)(v0 + 624) = sub_247FB6D24(v8, v9, v44);
    sub_248175730();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v10(v3, v6);
    _os_log_impl(&dword_247F93000, v1, v2, "Processed and ready to pack outMessage: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v42, -1, -1);
    MEMORY[0x24C574E00](v7, -1, -1);
  }
  else
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 752) + 8);
    v10(*(void *)(v0 + 768), *(void *)(v0 + 736));
  }

  unint64_t v11 = *(void **)(v0 + 832);
  uint64_t v12 = *(void *)(v0 + 784);
  uint64_t v13 = type metadata accessor for MessagePacker();
  uint64_t v14 = MessagePacker.pack(_:)(v12, v13);
  uint64_t v15 = *(void *)(v0 + 792);
  uint64_t v16 = *(void *)(v0 + 736);
  v10(*(void *)(v0 + 784), v16);
  v10(v15, v16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    id v17 = v11;
    swift_bridgeObjectRetain();
    id v18 = v11;
    uint64_t v19 = sub_248174B70();
    os_log_type_t v20 = sub_2481755D0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      unint64_t v41 = (void *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v44[0] = v43;
      *(_DWORD *)uint64_t v21 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_248175020();
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 592) = sub_247FB6D24(v22, v24, v44);
      sub_248175730();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v21 + 12) = 2112;
      id v25 = v11;
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 584) = v26;
      sub_248175730();
      void *v41 = v26;

      _os_log_impl(&dword_247F93000, v19, v20, "Failed to handle incoming request: %s with error: %@", (uint8_t *)v21, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v41, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v43, -1, -1);
      MEMORY[0x24C574E00](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    uint64_t v14 = 0;
  }
  swift_bridgeObjectRetain();
  id v27 = v11;
  swift_bridgeObjectRetain();
  id v28 = v11;
  unint64_t v29 = sub_248174B70();
  os_log_type_t v30 = sub_2481755B0();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    v44[0] = v33;
    *(_DWORD *)uint64_t v31 = 136315394;
    *(void *)(v0 + 648) = v14;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F78);
    uint64_t v34 = sub_248175190();
    *(void *)(v0 + 632) = sub_247FB6D24(v34, v35, v44);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2112;
    if (v11)
    {
      id v36 = v11;
      uint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 600) = v37;
      sub_248175730();
    }
    else
    {
      *(void *)(v0 + 616) = 0;
      sub_248175730();
      uint64_t v37 = 0;
    }
    *uint64_t v32 = v37;

    _os_log_impl(&dword_247F93000, v29, v30, "Sending outResponse: %s, outError: %@", (uint8_t *)v31, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v32, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(uint64_t, void, void *))(v0 + 720))(v14, 0, v11);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_248061060()
{
  uint64_t v28 = v0;
  v27[1] = *MEMORY[0x263EF8340];
  (*(void (**)(void, void))(*(void *)(v0 + 752) + 8))(*(void *)(v0 + 792), *(void *)(v0 + 736));
  uint64_t v1 = *(void **)(v0 + 832);
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755D0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    id v25 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v27[0] = v26;
    *(_DWORD *)uint64_t v6 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_248175020();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 592) = sub_247FB6D24(v7, v9, v27);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2112;
    id v10 = v1;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 584) = v11;
    sub_248175730();
    *id v25 = v11;

    _os_log_impl(&dword_247F93000, v4, v5, "Failed to handle incoming request: %s with error: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v25, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v26, -1, -1);
    MEMORY[0x24C574E00](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  id v12 = v1;
  id v13 = v1;
  uint64_t v14 = sub_248174B70();
  os_log_type_t v15 = sub_2481755B0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    id v17 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    v27[0] = v18;
    *(_DWORD *)uint64_t v16 = 136315394;
    *(void *)(v0 + 648) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F78);
    uint64_t v19 = sub_248175190();
    *(void *)(v0 + 632) = sub_247FB6D24(v19, v20, v27);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2112;
    if (v1)
    {
      id v21 = v1;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 600) = v22;
      sub_248175730();
    }
    else
    {
      *(void *)(v0 + 616) = 0;
      sub_248175730();
      uint64_t v22 = 0;
    }
    *id v17 = v22;

    _os_log_impl(&dword_247F93000, v14, v15, "Sending outResponse: %s, outError: %@", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v17, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v18, -1, -1);
    MEMORY[0x24C574E00](v16, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(void, void, void *))(v0 + 720))(0, 0, v1);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_248061598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v4;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v5 = sub_247FB6460((uint64_t)v66), (v6 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v5, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  sub_247FB84B0((uint64_t)v66);
  if (!*((void *)&v68 + 1))
  {
    sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    int v62 = 0;
    char v63 = 1;
    goto LABEL_10;
  }
  int v62 = v64;
  char v63 = 0;
LABEL_10:
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v7;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v8 = sub_247FB6460((uint64_t)v66), (v9 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v8, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  sub_247FB84B0((uint64_t)v66);
  if (*((void *)&v68 + 1))
  {
    int v10 = swift_dynamicCast();
    if (v10) {
      uint64_t v11 = v64;
    }
    else {
      uint64_t v11 = 0;
    }
    if (v10) {
      uint64_t v12 = v65;
    }
    else {
      uint64_t v12 = 0;
    }
    uint64_t v60 = v12;
    uint64_t v61 = v11;
  }
  else
  {
    sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    uint64_t v60 = 0;
    uint64_t v61 = 0;
  }
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v13;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v14 = sub_247FB6460((uint64_t)v66), (v15 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v14, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  sub_247FB84B0((uint64_t)v66);
  if (*((void *)&v68 + 1))
  {
    int v16 = swift_dynamicCast();
    if (v16) {
      uint64_t v17 = v64;
    }
    else {
      uint64_t v17 = 0;
    }
    if (v16) {
      uint64_t v18 = v65;
    }
    else {
      uint64_t v18 = 0;
    }
    uint64_t v58 = v18;
    uint64_t v59 = v17;
  }
  else
  {
    sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    uint64_t v58 = 0;
    uint64_t v59 = 0;
  }
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v19;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v20 = sub_247FB6460((uint64_t)v66), (v21 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v20, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  sub_247FB84B0((uint64_t)v66);
  if (*((void *)&v68 + 1))
  {
    int v22 = swift_dynamicCast();
    if (v22) {
      uint64_t v23 = v64;
    }
    else {
      uint64_t v23 = 0;
    }
    if (v22) {
      uint64_t v24 = v65;
    }
    else {
      uint64_t v24 = 0;
    }
    uint64_t v56 = v24;
    uint64_t v57 = v23;
  }
  else
  {
    sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    uint64_t v56 = 0;
    uint64_t v57 = 0;
  }
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v25;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v26 = sub_247FB6460((uint64_t)v66), (v27 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v26, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  sub_247FB84B0((uint64_t)v66);
  if (*((void *)&v68 + 1))
  {
    int v28 = swift_dynamicCast();
    uint64_t v29 = v64;
    if (!v28) {
      uint64_t v29 = 0;
    }
    uint64_t v55 = v29;
    if (v28) {
      uint64_t v30 = v65;
    }
    else {
      uint64_t v30 = 0;
    }
  }
  else
  {
    sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    uint64_t v55 = 0;
    uint64_t v30 = 0;
  }
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v31;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v32 = sub_247FB6460((uint64_t)v66), (v33 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v32, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  sub_247FB84B0((uint64_t)v66);
  if (*((void *)&v68 + 1))
  {
    int v34 = swift_dynamicCast();
    if (v34) {
      uint64_t v35 = v64;
    }
    else {
      uint64_t v35 = 0;
    }
    if (v34) {
      uint64_t v36 = v65;
    }
    else {
      uint64_t v36 = 0;
    }
  }
  else
  {
    sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v37;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v38 = sub_247FB6460((uint64_t)v66), (v39 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v38, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  sub_247FB84B0((uint64_t)v66);
  if (*((void *)&v68 + 1))
  {
    int v40 = swift_dynamicCast();
    if (v40) {
      uint64_t v41 = v64;
    }
    else {
      uint64_t v41 = 0;
    }
    if (v40) {
      uint64_t v42 = v65;
    }
    else {
      uint64_t v42 = 0;
    }
  }
  else
  {
    sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v43;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v44 = sub_247FB6460((uint64_t)v66), (v45 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v44, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  sub_247FB84B0((uint64_t)v66);
  if (*((void *)&v68 + 1))
  {
    int v46 = swift_dynamicCast();
    if (v46) {
      uint64_t v47 = v64;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v46) {
      uint64_t v48 = v65;
    }
    else {
      uint64_t v48 = 0;
    }
  }
  else
  {
    sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    uint64_t v47 = 0;
    uint64_t v48 = 0;
  }
  *(void *)&long long v67 = sub_248175160();
  *((void *)&v67 + 1) = v49;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v50 = sub_247FB6460((uint64_t)v66), (v51 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v50, (uint64_t)&v67);
  }
  else
  {
    long long v67 = 0u;
    long long v68 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_247FB84B0((uint64_t)v66);
  if (!*((void *)&v68 + 1))
  {
    uint64_t result = sub_247FB33D4((uint64_t)&v67, (uint64_t *)&unk_26B13BED0);
    goto LABEL_104;
  }
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
LABEL_104:
    uint64_t v54 = 0;
    char v53 = 1;
    goto LABEL_105;
  }
  char v53 = 0;
  uint64_t v54 = v64;
LABEL_105:
  *(_DWORD *)a2 = v62;
  *(unsigned char *)(a2 + 4) = v63;
  *(void *)(a2 + 8) = v61;
  *(void *)(a2 + 16) = v60;
  *(void *)(a2 + 24) = v59;
  *(void *)(a2 + 32) = v58;
  *(void *)(a2 + 40) = v57;
  *(void *)(a2 + 48) = v56;
  *(void *)(a2 + 56) = v55;
  *(void *)(a2 + 64) = v30;
  *(void *)(a2 + 72) = v35;
  *(void *)(a2 + 80) = v36;
  *(void *)(a2 + 88) = v41;
  *(void *)(a2 + 96) = v42;
  *(void *)(a2 + 104) = v47;
  *(void *)(a2 + 112) = v48;
  *(void *)(a2 + 120) = v54;
  *(unsigned char *)(a2 + 128) = v53;
  return result;
}

uint64_t sub_248061CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 145) = a6;
  *(void *)(v6 + 440) = a4;
  *(void *)(v6 + 448) = a5;
  *(void *)(v6 + 424) = a1;
  *(void *)(v6 + 432) = a2;
  type metadata accessor for RapportTransport.MessageInfo();
  uint64_t v8 = sub_248175700();
  *(void *)(v6 + 456) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  int v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  *(void *)(v6 + 464) = v10;
  *(void *)(v6 + 472) = (v9 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v6 + 16, a3, v8);
  v10(v6 + 152, v6 + 16, v8);
  return MEMORY[0x270FA2498](sub_248061DC8, 0, 0);
}

uint64_t sub_248061DC8()
{
  if (*(unsigned char *)(v0 + 145))
  {
    int v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 440) + **(int **)(v0 + 440));
    swift_retain();
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_2480620C8;
    uint64_t v7 = *(void *)(v0 + 424);
    uint64_t v8 = *(void *)(v0 + 432);
    return v10(v7, v8, v0 + 152);
  }
  else
  {
    uint64_t v1 = *(int **)(v0 + 440);
    (*(void (**)(uint64_t, uint64_t, void))(v0 + 464))(v0 + 288, v0 + 152, *(void *)(v0 + 456));
    sub_24807329C(v0 + 288, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_248073308);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
    swift_retain();
    id v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 480) = v2;
    *id v2 = v0;
    v2[1] = sub_248061FB4;
    uint64_t v3 = *(void *)(v0 + 424);
    uint64_t v4 = *(void *)(v0 + 432);
    return v9(v3, v4);
  }
}

uint64_t sub_248061FB4()
{
  *(void *)(*(void *)v1 + 488) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_2480622AC;
  }
  else {
    id v2 = sub_2480621DC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480620C8()
{
  *(void *)(*(void *)v1 + 504) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_248062314;
  }
  else {
    id v2 = sub_248062244;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480621DC()
{
  sub_248064BD0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248062244()
{
  sub_248064BD0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2480622AC()
{
  sub_248064BD0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248062314()
{
  sub_248064BD0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24806237C(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, void *, uint64_t), uint64_t))(a1 + 32);
  uint64_t v7 = sub_248175010();
  if (a3) {
    a3 = sub_248175010();
  }
  uint64_t v8 = _Block_copy(a4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  swift_retain();
  v6(v7, a3, sub_248072A18, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_24806248C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a2;
  if (a1)
  {
    uint64_t v7 = (void *)sub_248174FF0();
    if (!v6) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v7 = 0;
  if (a2) {
LABEL_3:
  }
    uint64_t v6 = (void *)sub_248174FF0();
LABEL_4:
  if (a3) {
    uint64_t v8 = sub_248174720();
  }
  else {
    uint64_t v8 = 0;
  }
  id v9 = (id)v8;
  (*(void (**)(uint64_t, void *, void *))(a4 + 16))(a4, v7, v6);
}

uint64_t sub_248062574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v10 = (int *)type metadata accessor for RapportTransport.Activated();
  *(unsigned char *)(a5 + v10[11]) = 0;
  uint64_t v11 = v10[12];
  uint64_t v12 = type metadata accessor for RapportTransport();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a5, a1, v12);
  *(void *)(a5 + v11) = a2;
  uint64_t v13 = a5 + v10[9];
  uint64_t v14 = type metadata accessor for MessagePacker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a3, v14);
  uint64_t v15 = a5 + v10[10];
  uint64_t v16 = type metadata accessor for MessageUnpacker();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32);
  return v17(v15, a4, v16);
}

void sub_2480626D8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v12 = (void *)sub_248175130();
  if (a3) {
    a3 = (void *)sub_248174FF0();
  }
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a4;
  v13[3] = a5;
  v13[4] = a7;
  void v16[4] = sub_24807360C;
  v16[5] = v13;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  _OWORD v16[2] = sub_24806237C;
  void v16[3] = &block_descriptor_101;
  uint64_t v14 = _Block_copy(v16);
  swift_retain();
  id v15 = a7;
  swift_release();
  objc_msgSend(a6, sel_registerRequestID_options_handler_, v12, a3, v14);
  _Block_release(v14);
}

uint64_t sub_248062820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t (*)(int a1, uint64_t a2, uint64_t a3), void *), uint64_t a6, void *a7)
{
  uint64_t v13 = (void *)swift_allocObject();
  void v13[2] = a7;
  v13[3] = a3;
  v13[4] = a4;
  id v14 = a7;
  swift_retain();
  a5(a2, a1, sub_24807365C, v13);
  return swift_release();
}

uint64_t sub_2480628D8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a6;
  uint64_t v33 = a4;
  uint64_t v34 = a3;
  uint64_t v9 = sub_248174D30();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_248174D80();
  uint64_t v35 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_248175160();
    uint64_t v29 = a1;
    id v15 = v12;
    uint64_t v16 = v9;
    uint64_t v17 = a5;
    id v18 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v19 = sub_248175130();
    uint64_t v30 = v14;
    uint64_t v20 = a2;
    char v21 = (void *)v19;
    swift_bridgeObjectRelease();
    int v22 = v18;
    a5 = v17;
    uint64_t v9 = v16;
    uint64_t v12 = v15;
    id v23 = objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v21, v29, 0);

    a2 = v20;
    id v14 = v30;
  }
  else
  {
    id v23 = 0;
  }
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v32;
  uint64_t v24[2] = a5;
  v24[3] = v25;
  v24[4] = v34;
  v24[5] = a2;
  v24[6] = v23;
  aBlock[4] = sub_2480736B8;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2480360BC;
  aBlock[3] = &block_descriptor_110;
  unint64_t v26 = _Block_copy(aBlock);
  id v27 = v23;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_248174D60();
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_248073510();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CA0);
  sub_248073568();
  sub_2481757A0();
  MEMORY[0x24C573B30](0, v14, v12, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v31);
  return swift_release();
}

uint64_t sub_248062C20(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  uint64_t v7 = sub_248175160();
  uint64_t v9 = v8;
  if (a3) {
    a3 = sub_248175010();
  }
  uint64_t v10 = _Block_copy(a4);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  swift_retain();
  v6(v7, v9, a3, sub_2480735C4, v11);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248062D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    uint64_t v8 = (void *)sub_248174FF0();
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = (void *)sub_248174FF0();
  v13[4] = a3;
  _OWORD v13[5] = a4;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  void v13[2] = sub_2480A645C;
  v13[3] = &block_descriptor_95;
  uint64_t v10 = _Block_copy(v13);
  uint64_t v11 = *(void (**)(uint64_t, void *, void *, void *))(a5 + 16);
  swift_retain();
  v11(a5, v8, v9, v10);
  _Block_release(v10);

  return swift_release();
}

uint64_t sub_248062E50(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v2 = sub_248175160();
  uint64_t v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_248062EBC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  uint64_t v13 = (void *)sub_248175130();
  id v14 = (void *)sub_248174FF0();
  if (a3) {
    a3 = (void *)sub_248174FF0();
  }
  id v15 = (void *)swift_allocObject();
  v15[2] = a8;
  v15[3] = a5;
  void v15[4] = a6;
  v18[4] = sub_248073488;
  uint64_t v18[5] = v15;
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 1107296256;
  v18[2] = sub_248063328;
  v18[3] = &block_descriptor_83_0;
  uint64_t v16 = _Block_copy(v18);
  id v17 = a8;
  swift_retain();
  swift_release();
  objc_msgSend(a7, sel_sendRequestID_request_options_responseHandler_, v13, v14, a3, v16);
  _Block_release(v16);
}

uint64_t sub_248063034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a4;
  uint64_t v11 = sub_248174D30();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_248174D80();
  uint64_t v15 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  id v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    uint64_t v18 = sub_248174720();
    uint64_t v31 = v17;
    uint64_t v19 = v14;
    uint64_t v20 = v11;
    uint64_t v21 = v15;
    uint64_t v22 = a1;
    uint64_t v23 = v12;
    uint64_t v24 = a6;
    uint64_t v25 = a2;
    uint64_t v26 = a5;
    id v27 = (void *)v18;
    LODWORD(a3) = NSErrorToOSStatus();

    a5 = v26;
    a2 = v25;
    a6 = v24;
    uint64_t v12 = v23;
    a1 = v22;
    uint64_t v15 = v21;
    uint64_t v11 = v20;
    id v14 = v19;
    id v17 = v31;
  }
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a5;
  *(void *)(v28 + 24) = a6;
  *(_DWORD *)(v28 + 32) = a3;
  *(void *)(v28 + 40) = a2;
  *(void *)(v28 + 48) = a1;
  aBlock[4] = sub_2480734DC;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2480360BC;
  aBlock[3] = &block_descriptor_89;
  uint64_t v29 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_248174D60();
  uint64_t v34 = MEMORY[0x263F8EE78];
  sub_248073510();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CA0);
  sub_248073568();
  sub_2481757A0();
  MEMORY[0x24C573B30](0, v17, v14, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v32);
  return swift_release();
}

uint64_t sub_248063328(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    uint64_t v7 = sub_248175010();
    if (!v5) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v7 = 0;
  if (a3) {
LABEL_3:
  }
    uint64_t v5 = sub_248175010();
LABEL_4:
  swift_retain();
  id v8 = a4;
  v6(v7, v5, a4);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24806340C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  uint64_t v8 = sub_248175160();
  uint64_t v10 = v9;
  if (a3) {
    a3 = sub_248175010();
  }
  uint64_t v11 = sub_248175010();
  uint64_t v12 = _Block_copy(a5);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  swift_retain();
  v7(v8, v10, a3, v11, sub_24807347C, v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248063548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RapportTransport.build()(a1, a2);
}

uint64_t RapportTransport.Activated.base.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RapportTransport();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

Swift::Void __swiftcall RapportTransport.Activated.invalidate()()
{
  uint64_t v2 = v0;
  sub_248064C08(v1);
  uint64_t v3 = *(void (**)(id *, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
}

uint64_t sub_248063634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = *(void *)(a3 + 16);
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_248063710, 0, 0);
}

uint64_t sub_248063710()
{
  uint64_t v34 = v0;
  if (qword_2692D4DB0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[7];
  uint64_t v5 = sub_248174B90();
  v0[15] = __swift_project_value_buffer(v5, (uint64_t)qword_2692D8A38);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[16] = v6;
  v0[17] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v4, v2);
  uint64_t v7 = sub_248174B70();
  os_log_type_t v8 = sub_2481755C0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[14];
  if (v9)
  {
    uint64_t v11 = v0[13];
    log = v7;
    uint64_t v13 = v0[10];
    uint64_t v12 = v0[11];
    id v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v33[0] = v31;
    *(_DWORD *)id v14 = 136315138;
    v6(v11, v10, v13);
    uint64_t v15 = sub_248175190();
    v0[5] = sub_247FB6D24(v15, v16, v33);
    sub_248175730();
    swift_bridgeObjectRelease();
    id v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v17(v10, v13);
    uint64_t v7 = log;
    _os_log_impl(&dword_247F93000, log, v8, "Performing unicast send of outMessage: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v31, -1, -1);
    MEMORY[0x24C574E00](v14, -1, -1);
  }
  else
  {
    id v17 = *(void (**)(uint64_t, uint64_t))(v0[11] + 8);
    v17(v0[14], v0[10]);
  }

  v0[18] = v17;
  uint64_t v18 = v0[7];
  v0[19] = *(void *)(v0[8] + 24);
  uint64_t v19 = type metadata accessor for MessagePacker();
  uint64_t v20 = MessagePacker.pack(_:)(v18, v19);
  v0[20] = v20;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_248174B70();
  os_log_type_t v23 = sub_2481755C0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v33[0] = v25;
    *(_DWORD *)uint64_t v24 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_248175020();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    v0[4] = sub_247FB6D24(v26, v28, v33);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, v22, v23, "Packed message into outRequest: %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v25, -1, -1);
    MEMORY[0x24C574E00](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v29 = swift_task_alloc();
  v0[21] = v29;
  *(void *)uint64_t v29 = v0;
  *(void *)(v29 + 8) = sub_248063BBC;
  *(_OWORD *)(v29 + 32) = *((_OWORD *)v0 + 4);
  *(void *)(v29 + 24) = v21;
  return MEMORY[0x270FA2498](sub_248064168, 0, 0);
}

uint64_t sub_248063BBC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_2480640BC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_248063CD8;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_248063CD8()
{
  uint64_t v30 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_248174B70();
  os_log_type_t v2 = sub_2481755C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    v29[0] = v4;
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_248175020();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[3] = sub_247FB6D24(v5, v7, v29);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, v1, v2, "Sent message and received inResponse: %s", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v4, -1, -1);
    MEMORY[0x24C574E00](v3, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[22];
  uint64_t v8 = v0[23];
  uint64_t v10 = v0[6];
  unint64_t v11 = type metadata accessor for MessageUnpacker();
  MessageUnpacker.unpack(_:)(v9, v11, v10);
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v13 = (void (*)(uint64_t, uint64_t, uint64_t))v0[16];
    uint64_t v14 = v0[12];
    uint64_t v15 = v0[10];
    uint64_t v16 = v0[6];
    swift_bridgeObjectRelease();
    v13(v14, v16, v15);
    id v17 = sub_248174B70();
    os_log_type_t v18 = sub_2481755C0();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v27 = (void (*)(uint64_t, uint64_t, uint64_t))v0[16];
      uint64_t v19 = v0[12];
      uint64_t v20 = v0[13];
      uint64_t v21 = v0[10];
      unint64_t v28 = (void (*)(uint64_t, uint64_t))v0[18];
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v29[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      v27(v20, v19, v21);
      uint64_t v24 = sub_248175190();
      v0[2] = sub_247FB6D24(v24, v25, v29);
      sub_248175730();
      swift_bridgeObjectRelease();
      v28(v19, v21);
      _os_log_impl(&dword_247F93000, v17, v18, "Unpacked response into inMessage: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v23, -1, -1);
      MEMORY[0x24C574E00](v22, -1, -1);
    }
    else
    {
      ((void (*)(void, void))v0[18])(v0[12], v0[10]);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
  }
  return v12();
}

uint64_t sub_2480640BC()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248064144(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_248064168, 0, 0);
}

uint64_t sub_248064168()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = *(void *)(v2 + 16);
  v4[3] = *(void *)(v2 + 24);
  v4[4] = v1;
  v4[5] = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C70);
  *uint64_t v5 = v0;
  v5[1] = sub_248064290;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0x5374736163696E75, 0xEF293A5F28646E65, sub_2480716D0, v4, v6);
}

uint64_t sub_248064290()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24804C46C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2480643AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480643AC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

void sub_2480643C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = *v3;
  uint64_t v10 = (void *)sub_248175130();
  unint64_t v11 = (void *)sub_248174FF0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a3 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_2480717B0;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_248063328;
  aBlock[3] = &block_descriptor_9;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_sendRequestID_request_options_responseHandler_, v10, v11, 0, v14);
  _Block_release(v14);
}

uint64_t sub_2480645D0(uint64_t a1, int a2, id a3)
{
  if (a1)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
    return sub_248175360();
  }
  else
  {
    if (!a3)
    {
      type metadata accessor for RapportTransport.Activated.Failure();
      swift_getWitnessTable();
      swift_allocError();
      *uint64_t v5 = 1;
    }
    id v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
    return sub_248175350();
  }
}

id RapportTransport.Activated.messageSessionTemplate.getter(uint64_t a1)
{
  id v2 = objc_msgSend(*(id *)(v1 + *(int *)(a1 + 48)), sel_templateSession);
  return v2;
}

uint64_t RapportTransport.Activated.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_248064708, 0, 0);
}

uint64_t sub_248064708()
{
  if (*(unsigned char *)(v0[5] + *(int *)(v0[4] + 44)))
  {
    type metadata accessor for RapportTransport.Activated.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v1 = 2;
    swift_willThrow();
    id v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[6] = v4;
    void *v4 = v0;
    v4[1] = sub_247FCD270;
    uint64_t v5 = v0[4];
    uint64_t v6 = v0[2];
    uint64_t v7 = v0[3];
    return sub_248063634(v6, v7, v5);
  }
}

uint64_t sub_248064844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  void v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FCB950;
  return MEMORY[0x270FA2498](sub_248064708, 0, 0);
}

void sub_248064904()
{
  sub_248064C08(v0);
}

unint64_t RapportTransport.MessageInfo.linkType.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t RapportTransport.MessageInfo.peerAddressString.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.verifiedIdentity.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerAltDsid.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerDsid.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerDeviceName.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RapportTransport.MessageInfo.peerStatusFlags.getter()
{
  return *(void *)(v0 + 120);
}

uint64_t sub_248064A8C()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_26B13BDC0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B13BDC0);
  return sub_248174B80();
}

uint64_t static AISLogger.rpTransport.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B13BDD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B13BDC0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_248064BB8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_248064BD0();
  }
  return result;
}

uint64_t sub_248064BD0()
{
  return swift_release();
}

uint64_t sub_248064BD8(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

void sub_248064C08(id *a1)
{
  uint64_t v2 = type metadata accessor for RapportTransport.Activated();
  *((unsigned char *)a1 + *(int *)(v2 + 44)) = 1;
  uint64_t v3 = *(int *)(v2 + 48);
  uint64_t v4 = *(id *)((char *)a1 + v3);
  objc_msgSend(v4, sel_invalidate);
  objc_msgSend(*a1, sel_invalidate);

  *(id *)((char *)a1 + v3) = 0;
}

uint64_t type metadata accessor for RapportTransport.Activated.Failure()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_248064C88()
{
  return swift_getWitnessTable();
}

uint64_t sub_248064CA4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_248064CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

void sub_248064CE8()
{
  sub_247FB8C1C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

char *sub_248064D9C(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 4;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v10;
    unint64_t v11 = a2[3];
    *((void *)a1 + 3) = v11;
    unint64_t v12 = v5;
    swift_bridgeObjectRetain();
    uint64_t v13 = v11;
    if (v9)
    {
      uint64_t v14 = a2[5];
      *((void *)a1 + 4) = v9;
      *((void *)a1 + 5) = v14;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *v8;
    }
    uint64_t v15 = a2[6];
    if (v15)
    {
      uint64_t v16 = a2[7];
      *((void *)a1 + 6) = v15;
      *((void *)a1 + 7) = v16;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    }
    id v17 = a2[8];
    if (v17)
    {
      os_log_type_t v18 = a2[9];
      *((void *)a1 + 8) = v17;
      *((void *)a1 + 9) = v18;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    }
    uint64_t v19 = *(int *)(a3 + 56);
    uint64_t v20 = &a1[v19];
    uint64_t v21 = (char **)((char *)a2 + v19);
    uint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
    uint64_t v23 = *((void *)v22 - 1);
    uint64_t v24 = *(unsigned int (**)(void, void, void))(v23 + 48);
    if (v24(v21, 1, v22))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v20, v21, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v71 = v24;
      uint64_t v73 = v23;
      char v75 = v22;
      uint64_t v26 = v21[1];
      *(void *)uint64_t v20 = *v21;
      *((void *)v20 + 1) = v26;
      v20[16] = *((unsigned char *)v21 + 16);
      uint64_t v27 = v22[9];
      uint64_t v72 = v20;
      __dst = &v20[v27];
      unint64_t v28 = (char *)v21 + v27;
      uint64_t v29 = sub_248174E60();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      if (v31(v28, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v28, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
      }
      uint64_t v22 = v75;
      uint64_t v33 = v75[10];
      uint64_t v34 = (char *)v72 + v33;
      uint64_t v35 = (char *)v21 + v33;
      uint64_t v36 = sub_248174EA0();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v23 = v73;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      uint64_t v39 = v75[11];
      int v40 = (char *)v72 + v39;
      uint64_t v41 = (char *)v21 + v39;
      uint64_t v42 = sub_248174EF0();
      uint64_t v43 = *(void *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v41, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v73 + 56))(v72, 0, 1, v75);
      uint64_t v24 = v71;
    }
    uint64_t v45 = *(int *)(a3 + 60);
    int v46 = &a1[v45];
    uint64_t v47 = (char **)((char *)a2 + v45);
    if (v24(v47, 1, v22))
    {
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      uint64_t v74 = v23;
      uint64_t v49 = v47[1];
      *(void *)int v46 = *v47;
      *((void *)v46 + 1) = v49;
      v46[16] = *((unsigned char *)v47 + 16);
      uint64_t v50 = v22[9];
      char v51 = &v46[v50];
      uint64_t v52 = (char *)v47 + v50;
      uint64_t v53 = sub_248174E60();
      uint64_t v54 = *(void *)(v53 - 8);
      uint64_t v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      swift_bridgeObjectRetain();
      if (v55(v52, 1, v53))
      {
        uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      uint64_t v57 = v22[10];
      uint64_t v58 = &v46[v57];
      uint64_t v59 = (char *)v47 + v57;
      uint64_t v60 = sub_248174EA0();
      uint64_t v61 = *(void *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      uint64_t v63 = v22[11];
      uint64_t v64 = &v46[v63];
      uint64_t v65 = (char *)v47 + v63;
      uint64_t v66 = sub_248174EF0();
      uint64_t v67 = *(void *)(v66 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v74 + 56))(v46, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t sub_2480655EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    swift_release();
  }
  if (*(void *)(a1 + 48)) {
    swift_release();
  }
  if (*(void *)(a1 + 64)) {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 56);
  uint64_t v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[9];
    uint64_t v8 = sub_248174E60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v4 + v5[10];
    uint64_t v11 = sub_248174EA0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v13 = v4 + v5[11];
    uint64_t v14 = sub_248174EF0();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  uint64_t v16 = a1 + *(int *)(a2 + 60);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, int *))v6)(v16, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v16 + v5[9];
    uint64_t v19 = sub_248174E60();
    uint64_t v20 = *(void *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    uint64_t v21 = v16 + v5[10];
    uint64_t v22 = sub_248174EA0();
    uint64_t v23 = *(void *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v24 = v16 + v5[11];
    uint64_t v25 = sub_248174EF0();
    uint64_t v27 = *(void *)(v25 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25);
    if (!result)
    {
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
      return v26(v24, v25);
    }
  }
  return result;
}

void *sub_248065A6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v10 = (_OWORD *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 32);
  id v11 = v6;
  swift_bridgeObjectRetain();
  id v12 = v8;
  if (v9)
  {
    uint64_t v13 = *(void *)(a2 + 40);
    a1[4] = v9;
    a1[5] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v10;
  }
  uint64_t v14 = *(void *)(a2 + 48);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + 56);
    a1[6] = v14;
    a1[7] = v15;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v16 = *(void *)(a2 + 64);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 72);
    a1[8] = v16;
    a1[9] = v17;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v18 = *(int *)(a3 + 56);
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(unsigned int (**)(void, void, void))(v22 + 48);
  if (v23(v20, 1, v21))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v70 = v23;
    uint64_t v71 = a3;
    uint64_t v72 = v22;
    uint64_t v25 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v25;
    *((unsigned char *)v19 + 16) = *((unsigned char *)v20 + 16);
    uint64_t v74 = v21;
    uint64_t v26 = v21[9];
    __dst = (char *)v19 + v26;
    uint64_t v27 = (char *)v20 + v26;
    uint64_t v28 = sub_248174E60();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(__dst, v27, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    uint64_t v21 = v74;
    uint64_t v32 = v74[10];
    uint64_t v33 = (char *)v19 + v32;
    uint64_t v34 = (char *)v20 + v32;
    uint64_t v35 = sub_248174EA0();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    uint64_t v23 = v70;
    uint64_t v38 = v74[11];
    uint64_t v39 = (char *)v19 + v38;
    int v40 = (char *)v20 + v38;
    uint64_t v41 = sub_248174EF0();
    uint64_t v42 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    a3 = v71;
    uint64_t v22 = v72;
    (*(void (**)(void *, void, uint64_t, int *))(v72 + 56))(v19, 0, 1, v74);
  }
  uint64_t v44 = *(int *)(a3 + 60);
  uint64_t v45 = (void *)((char *)a1 + v44);
  int v46 = (void *)(a2 + v44);
  if (v23(v46, 1, v21))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    uint64_t v73 = v22;
    uint64_t v48 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v48;
    *((unsigned char *)v45 + 16) = *((unsigned char *)v46 + 16);
    uint64_t v49 = v21[9];
    uint64_t v50 = (char *)v45 + v49;
    char v51 = (char *)v46 + v49;
    uint64_t v52 = sub_248174E60();
    uint64_t v53 = *(void *)(v52 - 8);
    uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
    swift_bridgeObjectRetain();
    if (v54(v51, 1, v52))
    {
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    uint64_t v56 = v21[10];
    uint64_t v57 = (char *)v45 + v56;
    uint64_t v58 = (char *)v46 + v56;
    uint64_t v59 = sub_248174EA0();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    uint64_t v62 = v21[11];
    uint64_t v63 = (char *)v45 + v62;
    uint64_t v64 = (char *)v46 + v62;
    uint64_t v65 = sub_248174EF0();
    uint64_t v66 = *(void *)(v65 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
    {
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v63, v64, v65);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v73 + 56))(v45, 0, 1, v21);
  }
  return a1;
}

uint64_t sub_248066264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(a2 + 24);
  uint64_t v10 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v9;
  id v11 = v9;

  uint64_t v12 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v12;
      *(void *)(a1 + 40) = v13;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v14;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_8:
  uint64_t v15 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v15)
    {
      uint64_t v16 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v15;
      *(void *)(a1 + 56) = v16;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v15;
    *(void *)(a1 + 56) = v17;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_15:
  uint64_t v18 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v18)
    {
      uint64_t v19 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v18;
      *(void *)(a1 + 72) = v19;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v18)
  {
    uint64_t v20 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v18;
    *(void *)(a1 + 72) = v20;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_22:
  uint64_t v21 = *(int *)(a3 + 56);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_247FB33D4(v22, &qword_2692D58F8);
      goto LABEL_28;
    }
    uint64_t v128 = v26;
    uint64_t v130 = a3;
    uint64_t v132 = v25;
    *(void *)uint64_t v22 = *(void *)v23;
    *(void *)(v22 + 8) = *(void *)(v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
    uint64_t v36 = v24[9];
    uint64_t v37 = (void *)(v22 + v36);
    uint64_t v38 = (void *)(v23 + v36);
    uint64_t v39 = sub_248174E60();
    uint64_t v125 = *(void *)(v39 - 8);
    int v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v125 + 48);
    uint64_t v135 = v37;
    LODWORD(v37) = v40(v37, 1, v39);
    int v41 = v40(v38, 1, v39);
    if (v37)
    {
      if (v41)
      {
        size_t v42 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v43 = v135;
LABEL_42:
        memcpy(v43, v38, v42);
        goto LABEL_45;
      }
      (*(void (**)(void *, void *, uint64_t))(v125 + 16))(v135, v38, v39);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v135, 0, 1, v39);
    }
    else
    {
      if (v41)
      {
        (*(void (**)(void *, uint64_t))(v125 + 8))(v135, v39);
        size_t v42 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v43 = v135;
        goto LABEL_42;
      }
      (*(void (**)(void *, void *, uint64_t))(v125 + 24))(v135, v38, v39);
    }
LABEL_45:
    uint64_t v56 = v24[10];
    uint64_t v57 = (void *)(v22 + v56);
    uint64_t v58 = (void *)(v23 + v56);
    uint64_t v59 = sub_248174EA0();
    uint64_t v126 = *(void *)(v59 - 8);
    uint64_t v60 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v126 + 48);
    uint64_t v136 = v57;
    LODWORD(v57) = v60(v57, 1, v59);
    int v61 = v60(v58, 1, v59);
    if (v57)
    {
      if (v61)
      {
        size_t v62 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v63 = v136;
LABEL_50:
        memcpy(v63, v58, v62);
        goto LABEL_53;
      }
      (*(void (**)(void *, void *, uint64_t))(v126 + 16))(v136, v58, v59);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v126 + 56))(v136, 0, 1, v59);
    }
    else
    {
      if (v61)
      {
        (*(void (**)(void *, uint64_t))(v126 + 8))(v136, v59);
        size_t v62 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v63 = v136;
        goto LABEL_50;
      }
      (*(void (**)(void *, void *, uint64_t))(v126 + 24))(v136, v58, v59);
    }
LABEL_53:
    uint64_t v64 = v24[11];
    uint64_t v65 = (void *)(v22 + v64);
    uint64_t v66 = (void *)(v23 + v64);
    uint64_t v67 = sub_248174EF0();
    uint64_t v68 = *(void *)(v67 - 8);
    uint64_t v69 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v68 + 48);
    int v70 = v69(v65, 1, v67);
    int v71 = v69(v66, 1, v67);
    if (v70)
    {
      uint64_t v26 = v128;
      a3 = v130;
      if (!v71)
      {
        (*(void (**)(void *, void *, uint64_t))(v68 + 16))(v65, v66, v67);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
LABEL_59:
        uint64_t v25 = v132;
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v26 = v128;
      a3 = v130;
      if (!v71)
      {
        (*(void (**)(void *, void *, uint64_t))(v68 + 24))(v65, v66, v67);
        goto LABEL_59;
      }
      (*(void (**)(void *, uint64_t))(v68 + 8))(v65, v67);
    }
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v65, v66, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_59;
  }
  if (v28)
  {
LABEL_28:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy((void *)v22, (const void *)v23, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_60;
  }
  uint64_t v129 = a3;
  uint64_t v131 = v25;
  uint64_t v134 = v24;
  *(void *)uint64_t v22 = *(void *)v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  uint64_t v29 = v24[9];
  __dst = (void *)(v22 + v29);
  uint64_t v30 = (const void *)(v23 + v29);
  uint64_t v31 = sub_248174E60();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48);
  swift_bridgeObjectRetain();
  if (v33(v30, 1, v31))
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(__dst, v30, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(__dst, v30, v31);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  uint64_t v24 = v134;
  uint64_t v44 = v134[10];
  uint64_t v45 = (void *)(v22 + v44);
  int v46 = (const void *)(v23 + v44);
  uint64_t v47 = sub_248174EA0();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  a3 = v129;
  uint64_t v50 = v134[11];
  char v51 = (void *)(v22 + v50);
  uint64_t v52 = (const void *)(v23 + v50);
  uint64_t v53 = sub_248174EF0();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v54 + 16))(v51, v52, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  uint64_t v25 = v131;
  (*(void (**)(uint64_t, void, uint64_t, int *))(v131 + 56))(v22, 0, 1, v134);
LABEL_60:
  uint64_t v73 = *(int *)(a3 + 60);
  uint64_t v74 = a1 + v73;
  uint64_t v75 = a2 + v73;
  int v76 = v26(a1 + v73, 1, v24);
  int v77 = v26(v75, 1, v24);
  if (!v76)
  {
    if (v77)
    {
      sub_247FB33D4(v74, &qword_2692D58F8);
      goto LABEL_66;
    }
    *(void *)uint64_t v74 = *(void *)v75;
    *(void *)(v74 + 8) = *(void *)(v75 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v74 + 16) = *(unsigned char *)(v75 + 16);
    uint64_t v137 = v24;
    uint64_t v87 = v24[9];
    uint64_t v88 = (void *)(v74 + v87);
    uint64_t v89 = (void *)(v75 + v87);
    uint64_t v90 = sub_248174E60();
    uint64_t v91 = *(void *)(v90 - 8);
    uint64_t v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
    int v93 = v92(v88, 1, v90);
    int v94 = v92(v89, 1, v90);
    if (v93)
    {
      if (!v94)
      {
        (*(void (**)(void *, void *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        goto LABEL_83;
      }
    }
    else
    {
      if (!v94)
      {
        (*(void (**)(void *, void *, uint64_t))(v91 + 24))(v88, v89, v90);
LABEL_83:
        uint64_t v109 = v24[10];
        long long v110 = (void *)(v74 + v109);
        uint64_t v111 = (void *)(v75 + v109);
        uint64_t v112 = sub_248174EA0();
        uint64_t v113 = *(void *)(v112 - 8);
        uint64_t v114 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v113 + 48);
        int v115 = v114(v110, 1, v112);
        int v116 = v114(v111, 1, v112);
        if (v115)
        {
          if (!v116)
          {
            (*(void (**)(void *, void *, uint64_t))(v113 + 16))(v110, v111, v112);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v113 + 56))(v110, 0, 1, v112);
LABEL_89:
            uint64_t v118 = v137[11];
            uint64_t v119 = (void *)(v74 + v118);
            v75 += v118;
            uint64_t v120 = sub_248174EF0();
            uint64_t v121 = *(void *)(v120 - 8);
            unint64_t v122 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v121 + 48);
            int v123 = v122(v119, 1, v120);
            int v124 = v122((void *)v75, 1, v120);
            if (v123)
            {
              if (!v124)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v121 + 16))(v119, v75, v120);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(v119, 0, 1, v120);
                return a1;
              }
            }
            else
            {
              if (!v124)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v121 + 24))(v119, v75, v120);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v121 + 8))(v119, v120);
            }
            size_t v85 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
            uint64_t v86 = v119;
            goto LABEL_67;
          }
        }
        else
        {
          if (!v116)
          {
            (*(void (**)(void *, void *, uint64_t))(v113 + 24))(v110, v111, v112);
            goto LABEL_89;
          }
          (*(void (**)(void *, uint64_t))(v113 + 8))(v110, v112);
        }
        uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v110, v111, *(void *)(*(void *)(v117 - 8) + 64));
        goto LABEL_89;
      }
      (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
    }
    uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v88, v89, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_83;
  }
  if (v77)
  {
LABEL_66:
    size_t v85 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v86 = (void *)v74;
LABEL_67:
    memcpy(v86, (const void *)v75, v85);
    return a1;
  }
  uint64_t v133 = v25;
  *(void *)uint64_t v74 = *(void *)v75;
  *(void *)(v74 + 8) = *(void *)(v75 + 8);
  *(unsigned char *)(v74 + 16) = *(unsigned char *)(v75 + 16);
  uint64_t v78 = v24[9];
  uint64_t v79 = (void *)(v74 + v78);
  uint64_t v80 = (const void *)(v75 + v78);
  uint64_t v81 = sub_248174E60();
  uint64_t v82 = *(void *)(v81 - 8);
  uint64_t v83 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v82 + 48);
  swift_bridgeObjectRetain();
  if (v83(v80, 1, v81))
  {
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v79, v80, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v82 + 16))(v79, v80, v81);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  }
  uint64_t v95 = v24[10];
  uint64_t v96 = (void *)(v74 + v95);
  uint64_t v97 = (const void *)(v75 + v95);
  uint64_t v98 = sub_248174EA0();
  uint64_t v99 = *(void *)(v98 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
  {
    uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v99 + 16))(v96, v97, v98);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
  }
  uint64_t v101 = v24[11];
  uint64_t v102 = (void *)(v74 + v101);
  uint64_t v103 = (const void *)(v75 + v101);
  uint64_t v104 = sub_248174EF0();
  uint64_t v105 = *(void *)(v104 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
  {
    uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v105 + 16))(v102, v103, v104);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v133 + 56))(v74, 0, 1, v24);
  return a1;
}

uint64_t sub_248067400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v10 = *(void *)(a2 + 64);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v11;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v12 = *(int *)(a3 + 56);
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = (unsigned char *)(a2 + v12);
  uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v16 = *((void *)v15 - 1);
  uint64_t v17 = *(unsigned int (**)(void, void, void))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v60 = v17;
    uint64_t v61 = v3;
    uint64_t v62 = v16;
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    v13[16] = v14[16];
    uint64_t v19 = v15[9];
    uint64_t v20 = &v13[v19];
    uint64_t v21 = &v14[v19];
    uint64_t v22 = sub_248174E60();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v25 = v15[10];
    uint64_t v26 = &v13[v25];
    int v27 = &v14[v25];
    uint64_t v28 = sub_248174EA0();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v16 = v62;
    uint64_t v31 = v15[11];
    uint64_t v32 = &v13[v31];
    uint64_t v33 = &v14[v31];
    uint64_t v34 = sub_248174EF0();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    uint64_t v3 = v61;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v62 + 56))(v13, 0, 1, v15);
    uint64_t v17 = v60;
  }
  uint64_t v37 = *(int *)(v3 + 60);
  uint64_t v38 = (unsigned char *)(a1 + v37);
  uint64_t v39 = (unsigned char *)(a2 + v37);
  if (v17(v39, 1, v15))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
    v38[16] = v39[16];
    uint64_t v41 = v15[9];
    size_t v42 = &v38[v41];
    uint64_t v43 = &v39[v41];
    uint64_t v44 = sub_248174E60();
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 32))(v42, v43, v44);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    uint64_t v47 = v15[10];
    uint64_t v48 = &v38[v47];
    uint64_t v49 = &v39[v47];
    uint64_t v50 = sub_248174EA0();
    uint64_t v51 = *(void *)(v50 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    uint64_t v53 = v15[11];
    uint64_t v54 = &v38[v53];
    uint64_t v55 = &v39[v53];
    uint64_t v56 = sub_248174EF0();
    uint64_t v57 = *(void *)(v56 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v57 + 32))(v54, v55, v56);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v16 + 56))(v38, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_248067BB8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = a2[3];

  uint64_t v9 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v9)
    {
      uint64_t v10 = a2[5];
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = a2[5];
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_8:
  uint64_t v12 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v12)
    {
      uint64_t v13 = a2[7];
      *(void *)(a1 + 48) = v12;
      *(void *)(a1 + 56) = v13;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = a2[7];
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v14;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_15:
  uint64_t v15 = a2[8];
  if (*(void *)(a1 + 64))
  {
    if (v15)
    {
      uint64_t v16 = a2[9];
      *(void *)(a1 + 64) = v15;
      *(void *)(a1 + 72) = v16;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = a2[9];
    *(void *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = v17;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
LABEL_22:
  uint64_t v18 = *(int *)(a3 + 56);
  uint64_t v19 = (unsigned char *)(a1 + v18);
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (v25)
    {
      sub_247FB33D4((uint64_t)v19, &qword_2692D58F8);
      goto LABEL_28;
    }
    uint64_t v129 = a3;
    uint64_t v131 = v23;
    uint64_t v127 = v22;
    uint64_t v33 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v33;
    swift_bridgeObjectRelease();
    v19[16] = v20[16];
    uint64_t v34 = v21[9];
    uint64_t v35 = &v19[v34];
    uint64_t v36 = &v20[v34];
    uint64_t v37 = sub_248174E60();
    uint64_t v123 = *(void *)(v37 - 8);
    uint64_t v38 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v123 + 48);
    uint64_t v125 = v35;
    LODWORD(v35) = v38(v35, 1, v37);
    int v39 = v38(v36, 1, v37);
    if (v35)
    {
      if (v39)
      {
        size_t v40 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v41 = v125;
LABEL_42:
        memcpy(v41, v36, v40);
        goto LABEL_45;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v123 + 32))(v125, v36, v37);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v125, 0, 1, v37);
    }
    else
    {
      if (v39)
      {
        (*(void (**)(void *, uint64_t))(v123 + 8))(v125, v37);
        size_t v40 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v41 = v125;
        goto LABEL_42;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v123 + 40))(v125, v36, v37);
    }
LABEL_45:
    uint64_t v54 = v21[10];
    uint64_t v55 = &v19[v54];
    uint64_t v56 = &v20[v54];
    uint64_t v57 = sub_248174EA0();
    uint64_t v124 = *(void *)(v57 - 8);
    uint64_t v58 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v124 + 48);
    uint64_t v126 = v55;
    LODWORD(v55) = v58(v55, 1, v57);
    int v59 = v58(v56, 1, v57);
    if (v55)
    {
      if (v59)
      {
        size_t v60 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v61 = v126;
LABEL_50:
        memcpy(v61, v56, v60);
        goto LABEL_53;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v124 + 32))(v126, v56, v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v126, 0, 1, v57);
    }
    else
    {
      if (v59)
      {
        (*(void (**)(void *, uint64_t))(v124 + 8))(v126, v57);
        size_t v60 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v61 = v126;
        goto LABEL_50;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v124 + 40))(v126, v56, v57);
    }
LABEL_53:
    uint64_t v62 = v21[11];
    uint64_t v63 = &v19[v62];
    uint64_t v64 = &v20[v62];
    uint64_t v65 = sub_248174EF0();
    uint64_t v66 = *(void *)(v65 - 8);
    uint64_t v67 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v66 + 48);
    int v68 = v67(v63, 1, v65);
    int v69 = v67(v64, 1, v65);
    if (v68)
    {
      uint64_t v22 = v127;
      uint64_t v23 = v131;
      if (!v69)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 32))(v63, v64, v65);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_59:
        a3 = v129;
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v22 = v127;
      uint64_t v23 = v131;
      if (!v69)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 40))(v63, v64, v65);
        goto LABEL_59;
      }
      (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v63, v65);
    }
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v63, v64, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_59;
  }
  if (v25)
  {
LABEL_28:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v19, v20, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_60;
  }
  uint64_t v128 = a3;
  uint64_t v130 = v23;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  uint64_t v26 = v21[9];
  int v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  uint64_t v29 = sub_248174E60();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v42 = v21[10];
  uint64_t v43 = &v19[v42];
  uint64_t v44 = &v20[v42];
  uint64_t v45 = sub_248174EA0();
  uint64_t v46 = *(void *)(v45 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  uint64_t v23 = v130;
  uint64_t v48 = v21[11];
  uint64_t v49 = &v19[v48];
  uint64_t v50 = &v20[v48];
  uint64_t v51 = sub_248174EF0();
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
  {
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v52 + 32))(v49, v50, v51);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
  }
  a3 = v128;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
LABEL_60:
  uint64_t v71 = *(int *)(a3 + 60);
  uint64_t v72 = a1 + v71;
  uint64_t v73 = (char *)a2 + v71;
  int v74 = v23((unsigned char *)(a1 + v71), 1, v21);
  int v75 = v23(v73, 1, v21);
  if (!v74)
  {
    if (v75)
    {
      sub_247FB33D4(v72, &qword_2692D58F8);
      goto LABEL_66;
    }
    uint64_t v84 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *(void *)(v72 + 8) = v84;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v72 + 16) = v73[16];
    uint64_t v85 = v21[9];
    uint64_t v86 = (void *)(v72 + v85);
    uint64_t v87 = &v73[v85];
    uint64_t v88 = sub_248174E60();
    uint64_t v89 = *(void *)(v88 - 8);
    uint64_t v90 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v89 + 48);
    uint64_t v132 = v86;
    LODWORD(v86) = v90(v86, 1, v88);
    int v91 = v90(v87, 1, v88);
    if (v86)
    {
      if (v91)
      {
        size_t v92 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v93 = v132;
LABEL_82:
        memcpy(v93, v87, v92);
        goto LABEL_86;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v89 + 32))(v132, v87, v88);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v132, 0, 1, v88);
    }
    else
    {
      if (v91)
      {
        (*(void (**)(void *, uint64_t))(v89 + 8))(v132, v88);
        size_t v92 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v93 = v132;
        goto LABEL_82;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v89 + 40))(v132, v87, v88);
    }
LABEL_86:
    uint64_t v107 = v21[10];
    uint64_t v108 = (void *)(v72 + v107);
    uint64_t v109 = &v73[v107];
    uint64_t v110 = sub_248174EA0();
    uint64_t v111 = *(void *)(v110 - 8);
    uint64_t v112 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v111 + 48);
    uint64_t v133 = v108;
    LODWORD(v108) = v112(v108, 1, v110);
    int v113 = v112(v109, 1, v110);
    if (v108)
    {
      if (!v113)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v111 + 32))(v133, v109, v110);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v133, 0, 1, v110);
        goto LABEL_94;
      }
      size_t v114 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      int v115 = v133;
    }
    else
    {
      if (!v113)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v111 + 40))(v133, v109, v110);
        goto LABEL_94;
      }
      (*(void (**)(void *, uint64_t))(v111 + 8))(v133, v110);
      size_t v114 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      int v115 = v133;
    }
    memcpy(v115, v109, v114);
LABEL_94:
    uint64_t v116 = v21[11];
    uint64_t v117 = (void *)(v72 + v116);
    v73 += v116;
    uint64_t v118 = sub_248174EF0();
    uint64_t v119 = *(void *)(v118 - 8);
    uint64_t v120 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v119 + 48);
    int v121 = v120(v117, 1, v118);
    int v122 = v120(v73, 1, v118);
    if (v121)
    {
      if (!v122)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v119 + 32))(v117, v73, v118);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v119 + 56))(v117, 0, 1, v118);
        return a1;
      }
    }
    else
    {
      if (!v122)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v119 + 40))(v117, v73, v118);
        return a1;
      }
      (*(void (**)(void *, uint64_t))(v119 + 8))(v117, v118);
    }
    size_t v82 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
    uint64_t v83 = v117;
    goto LABEL_67;
  }
  if (v75)
  {
LABEL_66:
    size_t v82 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v83 = (void *)v72;
LABEL_67:
    memcpy(v83, v73, v82);
    return a1;
  }
  *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
  *(unsigned char *)(v72 + 16) = v73[16];
  uint64_t v76 = v21[9];
  int v77 = (void *)(v72 + v76);
  uint64_t v78 = &v73[v76];
  uint64_t v79 = sub_248174E60();
  uint64_t v80 = *(void *)(v79 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
  {
    uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v80 + 32))(v77, v78, v79);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  }
  uint64_t v94 = v21[10];
  uint64_t v95 = (void *)(v72 + v94);
  uint64_t v96 = &v73[v94];
  uint64_t v97 = sub_248174EA0();
  uint64_t v98 = *(void *)(v97 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
  {
    uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v95, v96, *(void *)(*(void *)(v99 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v98 + 32))(v95, v96, v97);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
  }
  uint64_t v100 = v21[11];
  uint64_t v101 = (void *)(v72 + v100);
  uint64_t v102 = &v73[v100];
  uint64_t v103 = sub_248174EF0();
  uint64_t v104 = *(void *)(v103 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v104 + 48))(v102, 1, v103))
  {
    uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v101, v102, *(void *)(*(void *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v104 + 32))(v101, v102, v103);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v103);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v22 + 56))(v72, 0, 1, v21);
  return a1;
}

uint64_t sub_248068D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_248068D28);
}

uint64_t sub_248068D28(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 56);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_248068DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_248068DF0);
}

void *sub_248068DF0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 56);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_248068E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_248068EA4()
{
  uint64_t result = type metadata accessor for RapportTransport();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MessagePacker();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for MessageUnpacker();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

char *sub_248068FE0(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2;
    uint64_t v8 = a2 + 4;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v10;
    uint64_t v11 = a2[3];
    *((void *)a1 + 3) = v11;
    uint64_t v12 = v5;
    swift_bridgeObjectRetain();
    uint64_t v13 = v11;
    if (v9)
    {
      uint64_t v14 = v7[5];
      *((void *)a1 + 4) = v9;
      *((void *)a1 + 5) = v14;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *v8;
    }
    uint64_t v15 = v7[6];
    if (v15)
    {
      uint64_t v16 = v7[7];
      *((void *)a1 + 6) = v15;
      *((void *)a1 + 7) = v16;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)v7 + 3);
    }
    uint64_t v17 = v7[8];
    if (v17)
    {
      uint64_t v18 = v7[9];
      *((void *)a1 + 8) = v17;
      *((void *)a1 + 9) = v18;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 4) = *((_OWORD *)v7 + 4);
    }
    uint64_t v19 = type metadata accessor for RapportTransport();
    uint64_t v20 = *(int *)(v19 + 56);
    uint64_t v21 = &a1[v20];
    uint64_t v22 = (void *)((char *)v7 + v20);
    uint64_t v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
    uint64_t v138 = *((void *)v23 - 1);
    uint64_t v143 = *(unsigned int (**)(char *, uint64_t, int *))(v138 + 48);
    uint64_t v139 = v23;
    uint64_t v140 = v6;
    if (v143((char *)v22, 1, v23))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      uint64_t v135 = (void *)v19;
      uint64_t v25 = v22[1];
      *(void *)uint64_t v21 = *v22;
      *((void *)v21 + 1) = v25;
      v21[16] = *((unsigned char *)v22 + 16);
      uint64_t v26 = v23[9];
      __dst = &v21[v26];
      int v27 = (char *)v22 + v26;
      uint64_t v28 = sub_248174E60();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_bridgeObjectRetain();
      if (v30(v27, 1, v28))
      {
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(__dst, v27, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
      }
      uint64_t v32 = v23[10];
      uint64_t v33 = &v21[v32];
      uint64_t v34 = (char *)v22 + v32;
      uint64_t v35 = sub_248174EA0();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      uint64_t v38 = v23[11];
      int v39 = &v21[v38];
      size_t v40 = (char *)v22 + v38;
      uint64_t v41 = sub_248174EF0();
      uint64_t v42 = *(void *)(v41 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
      uint64_t v19 = (uint64_t)v135;
      (*(void (**)(char *, void, uint64_t, int *))(v138 + 56))(v21, 0, 1, v23);
      uint64_t v6 = v140;
    }
    uint64_t v44 = *(int *)(v19 + 60);
    uint64_t v45 = &a1[v44];
    uint64_t v46 = (void *)((char *)v7 + v44);
    if (v143((char *)v7 + v44, 1, v23))
    {
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = v46[1];
      *(void *)uint64_t v45 = *v46;
      *((void *)v45 + 1) = v48;
      v45[16] = *((unsigned char *)v46 + 16);
      uint64_t v49 = v23[9];
      uint64_t v136 = &v45[v49];
      uint64_t v50 = (char *)v46 + v49;
      uint64_t v51 = sub_248174E60();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
      swift_bridgeObjectRetain();
      if (v53(v50, 1, v51))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(v136, v50, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v136, v50, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v136, 0, 1, v51);
      }
      uint64_t v23 = v139;
      uint64_t v55 = v139[10];
      uint64_t v56 = &v45[v55];
      uint64_t v57 = (char *)v46 + v55;
      uint64_t v58 = sub_248174EA0();
      uint64_t v59 = *(void *)(v58 - 8);
      uint64_t v6 = v140;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      uint64_t v61 = v139[11];
      uint64_t v62 = &v45[v61];
      uint64_t v63 = (char *)v46 + v61;
      uint64_t v64 = sub_248174EF0();
      uint64_t v65 = *(void *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v138 + 56))(v45, 0, 1, v139);
    }
    uint64_t v67 = v6[9];
    int v68 = &a1[v67];
    int v69 = (char *)v7 + v67;
    *(void *)&a1[v67] = *(void *)((char *)v7 + v67);
    __dsta = (int *)type metadata accessor for MessagePacker();
    uint64_t v137 = v68;
    uint64_t v70 = __dsta[9];
    uint64_t v71 = &v68[v70];
    uint64_t v72 = &v69[v70];
    swift_retain();
    if (v143(v72, 1, v23))
    {
      uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      uint64_t v74 = *((void *)v72 + 1);
      *(void *)uint64_t v71 = *(void *)v72;
      *((void *)v71 + 1) = v74;
      v71[16] = v72[16];
      uint64_t v75 = v23[9];
      uint64_t v131 = &v71[v75];
      uint64_t v132 = v7;
      uint64_t v76 = &v72[v75];
      uint64_t v77 = sub_248174E60();
      uint64_t v78 = *(void *)(v77 - 8);
      uint64_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
      swift_bridgeObjectRetain();
      if (v79(v76, 1, v77))
      {
        uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(v131, v76, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v131, v76, v77);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v131, 0, 1, v77);
      }
      uint64_t v23 = v139;
      uint64_t v81 = v139[10];
      size_t v82 = &v71[v81];
      uint64_t v83 = &v72[v81];
      uint64_t v84 = sub_248174EA0();
      uint64_t v85 = *(void *)(v84 - 8);
      uint64_t v7 = v132;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
      {
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      }
      uint64_t v87 = v139[11];
      uint64_t v88 = &v71[v87];
      uint64_t v89 = &v72[v87];
      uint64_t v90 = sub_248174EF0();
      uint64_t v91 = *(void *)(v90 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
      {
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v138 + 56))(v71, 0, 1, v139);
      uint64_t v6 = v140;
    }
    uint64_t v93 = __dsta[10];
    uint64_t v94 = &v137[v93];
    uint64_t v95 = &v69[v93];
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)uint64_t v94 = *(void *)v95;
    *((void *)v94 + 1) = v96;
    uint64_t v97 = v6[10];
    uint64_t v98 = &a1[v97];
    uint64_t v99 = (char *)v7 + v97;
    *(void *)&a1[v97] = *(void *)((char *)v7 + v97);
    uint64_t v142 = type metadata accessor for MessageUnpacker();
    uint64_t v100 = *(int *)(v142 + 36);
    uint64_t v101 = &v98[v100];
    uint64_t v102 = &v99[v100];
    swift_bridgeObjectRetain();
    swift_retain();
    if (v143(v102, 1, v23))
    {
      uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
    }
    else
    {
      uint64_t v144 = v99;
      uint64_t v104 = *((void *)v102 + 1);
      *(void *)uint64_t v101 = *(void *)v102;
      *((void *)v101 + 1) = v104;
      v101[16] = v102[16];
      uint64_t v105 = v23[9];
      uint64_t v141 = &v101[v105];
      uint64_t v106 = &v102[v105];
      uint64_t v107 = sub_248174E60();
      uint64_t v108 = *(void *)(v107 - 8);
      uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
      swift_bridgeObjectRetain();
      if (v109(v106, 1, v107))
      {
        uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(v141, v106, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v141, v106, v107);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v141, 0, 1, v107);
      }
      uint64_t v111 = v139[10];
      uint64_t v112 = &v101[v111];
      int v113 = &v102[v111];
      uint64_t v114 = sub_248174EA0();
      uint64_t v115 = *(void *)(v114 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
      {
        uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, v113, v114);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
      }
      uint64_t v6 = v140;
      uint64_t v117 = v139[11];
      uint64_t v118 = &v101[v117];
      uint64_t v119 = &v102[v117];
      uint64_t v120 = sub_248174EF0();
      uint64_t v121 = *(void *)(v120 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
      {
        uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v118, v119, v120);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
      }
      uint64_t v99 = v144;
      (*(void (**)(char *, void, uint64_t, int *))(v138 + 56))(v101, 0, 1, v139);
    }
    uint64_t v123 = *(int *)(v142 + 40);
    uint64_t v124 = &v98[v123];
    uint64_t v125 = &v99[v123];
    uint64_t v126 = *((void *)v125 + 1);
    *(void *)uint64_t v124 = *(void *)v125;
    *((void *)v124 + 1) = v126;
    uint64_t v127 = v6[12];
    a1[v6[11]] = *((unsigned char *)v7 + v6[11]);
    uint64_t v128 = *(void **)((char *)v7 + v127);
    *(void *)&a1[v127] = v128;
    swift_bridgeObjectRetain();
    id v129 = v128;
  }
  return a1;
}

void sub_248069FBC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    swift_release();
  }
  if (*(void *)(a1 + 48)) {
    swift_release();
  }
  if (*(void *)(a1 + 64)) {
    swift_release();
  }
  uint64_t v4 = type metadata accessor for RapportTransport();
  uint64_t v5 = a1 + *(int *)(v4 + 56);
  uint64_t v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v7 = (unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48);
  uint64_t v52 = *v7;
  if (!(*v7)(v5, 1, v6))
  {
    uint64_t v8 = a2;
    swift_bridgeObjectRelease();
    uint64_t v9 = v5 + v6[9];
    uint64_t v10 = sub_248174E60();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = v5 + v6[10];
    uint64_t v13 = sub_248174EA0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v15 = v5 + v6[11];
    uint64_t v16 = sub_248174EF0();
    uint64_t v17 = *(void *)(v16 - 8);
    a2 = v8;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
  }
  uint64_t v18 = a1 + *(int *)(v4 + 60);
  if (!v52(v18, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = v18 + v6[9];
    uint64_t v20 = sub_248174E60();
    uint64_t v21 = *(void *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    }
    uint64_t v22 = v18 + v6[10];
    uint64_t v23 = sub_248174EA0();
    uint64_t v24 = *(void *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    uint64_t v25 = v18 + v6[11];
    uint64_t v26 = sub_248174EF0();
    uint64_t v27 = *(void *)(v26 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
  }
  uint64_t v28 = a1 + a2[9];
  swift_release();
  uint64_t v29 = v28 + *(int *)(type metadata accessor for MessagePacker() + 36);
  if (!v52(v29, 1, v6))
  {
    uint64_t v51 = a2;
    swift_bridgeObjectRelease();
    uint64_t v30 = v29 + v6[9];
    uint64_t v31 = sub_248174E60();
    uint64_t v32 = *(void *)(v31 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    }
    uint64_t v33 = v29 + v6[10];
    uint64_t v34 = sub_248174EA0();
    uint64_t v35 = *(void *)(v34 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    }
    uint64_t v36 = v29 + v6[11];
    uint64_t v37 = sub_248174EF0();
    uint64_t v38 = *(void *)(v37 - 8);
    a2 = v51;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = a1 + a2[10];
  swift_release();
  uint64_t v40 = v39 + *(int *)(type metadata accessor for MessageUnpacker() + 36);
  if (!v52(v40, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = v40 + v6[9];
    uint64_t v42 = sub_248174E60();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    uint64_t v44 = v40 + v6[10];
    uint64_t v45 = sub_248174EA0();
    uint64_t v46 = *(void *)(v45 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    }
    uint64_t v47 = v40 + v6[11];
    uint64_t v48 = sub_248174EF0();
    uint64_t v49 = *(void *)(v48 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48)) {
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void **)(a1 + a2[12]);
}

void *sub_24806A860(void *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = (void *)a2;
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v10 = (_OWORD *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 32);
  id v11 = v6;
  swift_bridgeObjectRetain();
  id v12 = v8;
  if (v9)
  {
    uint64_t v13 = v4[5];
    a1[4] = v9;
    a1[5] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v10;
  }
  uint64_t v14 = v4[6];
  if (v14)
  {
    uint64_t v15 = v4[7];
    a1[6] = v14;
    a1[7] = v15;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *((_OWORD *)v4 + 3);
  }
  uint64_t v16 = v4[8];
  if (v16)
  {
    uint64_t v17 = v4[9];
    a1[8] = v16;
    a1[9] = v17;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 4) = *((_OWORD *)v4 + 4);
  }
  uint64_t v18 = type metadata accessor for RapportTransport();
  uint64_t v19 = *(int *)(v18 + 56);
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)v4 + v19);
  uint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v137 = *((void *)v22 - 1);
  uint64_t v142 = *(unsigned int (**)(char *, uint64_t, int *))(v137 + 48);
  uint64_t v138 = v22;
  uint64_t v139 = a3;
  if (v142((char *)v21, 1, v22))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v134 = (void *)v18;
    uint64_t v24 = v21[1];
    void *v20 = *v21;
    v20[1] = v24;
    *((unsigned char *)v20 + 16) = *((unsigned char *)v21 + 16);
    uint64_t v25 = v22[9];
    __dst = (char *)v20 + v25;
    uint64_t v26 = (char *)v21 + v25;
    uint64_t v27 = sub_248174E60();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    if (v29(v26, 1, v27))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(__dst, v26, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    }
    uint64_t v31 = v22[10];
    uint64_t v32 = (char *)v20 + v31;
    uint64_t v33 = (char *)v21 + v31;
    uint64_t v34 = sub_248174EA0();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    uint64_t v37 = v22[11];
    uint64_t v38 = (char *)v20 + v37;
    uint64_t v39 = (char *)v21 + v37;
    uint64_t v40 = sub_248174EF0();
    uint64_t v41 = *(void *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    uint64_t v18 = (uint64_t)v134;
    (*(void (**)(void *, void, uint64_t, int *))(v137 + 56))(v20, 0, 1, v22);
    a3 = v139;
  }
  uint64_t v43 = *(int *)(v18 + 60);
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)v4 + v43);
  if (v142((char *)v4 + v43, 1, v22))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    uint64_t v47 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v47;
    *((unsigned char *)v44 + 16) = *((unsigned char *)v45 + 16);
    uint64_t v48 = v22[9];
    uint64_t v135 = (char *)v44 + v48;
    uint64_t v49 = (char *)v45 + v48;
    uint64_t v50 = sub_248174E60();
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain();
    if (v52(v49, 1, v50))
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v135, v49, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v135, v49, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v135, 0, 1, v50);
    }
    uint64_t v22 = v138;
    uint64_t v54 = v138[10];
    uint64_t v55 = (char *)v44 + v54;
    uint64_t v56 = (char *)v45 + v54;
    uint64_t v57 = sub_248174EA0();
    uint64_t v58 = *(void *)(v57 - 8);
    a3 = v139;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v60 = v138[11];
    uint64_t v61 = (char *)v44 + v60;
    uint64_t v62 = (char *)v45 + v60;
    uint64_t v63 = sub_248174EF0();
    uint64_t v64 = *(void *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v137 + 56))(v44, 0, 1, v138);
  }
  uint64_t v66 = a3[9];
  uint64_t v67 = (char *)a1 + v66;
  int v68 = (char *)v4 + v66;
  *(void *)((char *)a1 + v66) = *(void *)((char *)v4 + v66);
  __dsta = (int *)type metadata accessor for MessagePacker();
  uint64_t v136 = v67;
  uint64_t v69 = __dsta[9];
  uint64_t v70 = &v67[v69];
  uint64_t v71 = &v68[v69];
  swift_retain();
  if (v142(v71, 1, v22))
  {
    uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
  }
  else
  {
    uint64_t v73 = *((void *)v71 + 1);
    *(void *)uint64_t v70 = *(void *)v71;
    *((void *)v70 + 1) = v73;
    v70[16] = v71[16];
    uint64_t v74 = v22[9];
    uint64_t v130 = &v70[v74];
    uint64_t v131 = v4;
    uint64_t v75 = &v71[v74];
    uint64_t v76 = sub_248174E60();
    uint64_t v77 = *(void *)(v76 - 8);
    uint64_t v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
    swift_bridgeObjectRetain();
    if (v78(v75, 1, v76))
    {
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v130, v75, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v130, v75, v76);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v130, 0, 1, v76);
    }
    uint64_t v22 = v138;
    uint64_t v80 = v138[10];
    uint64_t v81 = &v70[v80];
    size_t v82 = &v71[v80];
    uint64_t v83 = sub_248174EA0();
    uint64_t v84 = *(void *)(v83 - 8);
    uint64_t v4 = v131;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
    {
      uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v81, v82, *(void *)(*(void *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v81, v82, v83);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
    }
    uint64_t v86 = v138[11];
    uint64_t v87 = &v70[v86];
    uint64_t v88 = &v71[v86];
    uint64_t v89 = sub_248174EF0();
    uint64_t v90 = *(void *)(v89 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
    {
      uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v87, v88, *(void *)(*(void *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v88, v89);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v87, 0, 1, v89);
    }
    (*(void (**)(char *, void, uint64_t, int *))(v137 + 56))(v70, 0, 1, v138);
    a3 = v139;
  }
  uint64_t v92 = __dsta[10];
  uint64_t v93 = &v136[v92];
  uint64_t v94 = &v68[v92];
  uint64_t v95 = *((void *)v94 + 1);
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = v95;
  uint64_t v96 = a3[10];
  uint64_t v97 = (char *)a1 + v96;
  uint64_t v98 = (char *)v4 + v96;
  *(void *)((char *)a1 + v96) = *(void *)((char *)v4 + v96);
  uint64_t v141 = type metadata accessor for MessageUnpacker();
  uint64_t v99 = *(int *)(v141 + 36);
  uint64_t v100 = &v97[v99];
  uint64_t v101 = &v98[v99];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v142(v101, 1, v22))
  {
    uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    uint64_t v143 = v98;
    uint64_t v103 = *((void *)v101 + 1);
    *(void *)uint64_t v100 = *(void *)v101;
    *((void *)v100 + 1) = v103;
    v100[16] = v101[16];
    uint64_t v104 = v22[9];
    uint64_t v140 = &v100[v104];
    uint64_t v105 = &v101[v104];
    uint64_t v106 = sub_248174E60();
    uint64_t v107 = *(void *)(v106 - 8);
    uint64_t v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
    swift_bridgeObjectRetain();
    if (v108(v105, 1, v106))
    {
      uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v140, v105, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v140, v105, v106);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v140, 0, 1, v106);
    }
    uint64_t v110 = v138[10];
    uint64_t v111 = &v100[v110];
    uint64_t v112 = &v101[v110];
    uint64_t v113 = sub_248174EA0();
    uint64_t v114 = *(void *)(v113 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
    {
      uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v111, v112, v113);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
    }
    a3 = v139;
    uint64_t v116 = v138[11];
    uint64_t v117 = &v100[v116];
    uint64_t v118 = &v101[v116];
    uint64_t v119 = sub_248174EF0();
    uint64_t v120 = *(void *)(v119 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
    {
      uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v118, v119);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
    }
    uint64_t v98 = v143;
    (*(void (**)(char *, void, uint64_t, int *))(v137 + 56))(v100, 0, 1, v138);
  }
  uint64_t v122 = *(int *)(v141 + 40);
  uint64_t v123 = &v97[v122];
  uint64_t v124 = &v98[v122];
  uint64_t v125 = *((void *)v124 + 1);
  *(void *)uint64_t v123 = *(void *)v124;
  *((void *)v123 + 1) = v125;
  uint64_t v126 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)v4 + a3[11]);
  uint64_t v127 = *(void **)((char *)v4 + v126);
  *(void *)((char *)a1 + v126) = v127;
  swift_bridgeObjectRetain();
  id v128 = v127;
  return a1;
}

uint64_t sub_24806B7EC(uint64_t a1, void **a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *a2;
  id v8 = v6;

  *(void *)(a1 + 8) = v4[1];
  *(void *)(a1 + 16) = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v4[3];
  uint64_t v10 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v9;
  id v11 = v9;

  id v12 = v4[4];
  if (*(void *)(a1 + 32))
  {
    if (v12)
    {
      uint64_t v13 = v4[5];
      *(void *)(a1 + 32) = v12;
      *(void *)(a1 + 40) = v13;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = v4[5];
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v14;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v4 + 2);
LABEL_8:
  uint64_t v15 = v4[6];
  if (*(void *)(a1 + 48))
  {
    if (v15)
    {
      uint64_t v16 = v4[7];
      *(void *)(a1 + 48) = v15;
      *(void *)(a1 + 56) = v16;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = v4[7];
    *(void *)(a1 + 48) = v15;
    *(void *)(a1 + 56) = v17;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
LABEL_15:
  uint64_t v18 = v4[8];
  if (*(void *)(a1 + 64))
  {
    if (v18)
    {
      uint64_t v19 = v4[9];
      *(void *)(a1 + 64) = v18;
      *(void *)(a1 + 72) = v19;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v18)
  {
    uint64_t v20 = v4[9];
    *(void *)(a1 + 64) = v18;
    *(void *)(a1 + 72) = v20;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)v4 + 4);
LABEL_22:
  uint64_t v264 = a3;
  uint64_t v21 = type metadata accessor for RapportTransport();
  uint64_t v22 = *(int *)(v21 + 56);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (char *)v4 + v22;
  uint64_t v25 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v250 = *((void *)v25 - 1);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v250 + 48);
  int v27 = v26(v23, 1, v25);
  __dst = v26;
  int v28 = v26((uint64_t)v24, 1, v25);
  v259 = v4;
  v263 = v25;
  if (!v27)
  {
    if (v28)
    {
      sub_247FB33D4(v23, &qword_2692D58F8);
      goto LABEL_28;
    }
    uint64_t v256 = v21;
    *(void *)uint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = *((void *)v24 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v23 + 16) = v24[16];
    uint64_t v38 = v25[9];
    uint64_t v39 = (void *)(v23 + v38);
    uint64_t v40 = &v24[v38];
    uint64_t v41 = sub_248174E60();
    uint64_t v42 = *(void *)(v41 - 8);
    uint64_t v43 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v42 + 48);
    unint64_t v251 = v39;
    LODWORD(v39) = v43(v39, 1, v41);
    int v44 = v43(v40, 1, v41);
    if (v39)
    {
      if (v44)
      {
        size_t v45 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v46 = v251;
LABEL_42:
        memcpy(v46, v40, v45);
        goto LABEL_45;
      }
      (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v251, v40, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v251, 0, 1, v41);
    }
    else
    {
      if (v44)
      {
        (*(void (**)(void *, uint64_t))(v42 + 8))(v251, v41);
        size_t v45 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v46 = v251;
        goto LABEL_42;
      }
      (*(void (**)(void *, char *, uint64_t))(v42 + 24))(v251, v40, v41);
    }
LABEL_45:
    uint64_t v59 = v25[10];
    uint64_t v60 = (void *)(v23 + v59);
    uint64_t v61 = &v24[v59];
    uint64_t v62 = sub_248174EA0();
    uint64_t v63 = *(void *)(v62 - 8);
    uint64_t v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
    unint64_t v252 = v60;
    LODWORD(v60) = v64(v60, 1, v62);
    int v65 = v64(v61, 1, v62);
    if (v60)
    {
      if (v65)
      {
        size_t v66 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v67 = v252;
LABEL_50:
        memcpy(v67, v61, v66);
        goto LABEL_53;
      }
      (*(void (**)(void *, char *, uint64_t))(v63 + 16))(v252, v61, v62);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v252, 0, 1, v62);
    }
    else
    {
      if (v65)
      {
        (*(void (**)(void *, uint64_t))(v63 + 8))(v252, v62);
        size_t v66 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v67 = v252;
        goto LABEL_50;
      }
      (*(void (**)(void *, char *, uint64_t))(v63 + 24))(v252, v61, v62);
    }
LABEL_53:
    uint64_t v68 = v25[11];
    uint64_t v69 = (void *)(v23 + v68);
    uint64_t v70 = &v24[v68];
    uint64_t v71 = sub_248174EF0();
    uint64_t v72 = *(void *)(v71 - 8);
    uint64_t v73 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v72 + 48);
    int v74 = v73(v69, 1, v71);
    int v75 = v73(v70, 1, v71);
    if (v74)
    {
      uint64_t v4 = v259;
      if (!v75)
      {
        (*(void (**)(void *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
LABEL_59:
        uint64_t v37 = v264;
        uint64_t v21 = v256;
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v4 = v259;
      if (!v75)
      {
        (*(void (**)(void *, char *, uint64_t))(v72 + 24))(v69, v70, v71);
        goto LABEL_59;
      }
      (*(void (**)(void *, uint64_t))(v72 + 8))(v69, v71);
    }
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v69, v70, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_59;
  }
  if (v28)
  {
LABEL_28:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy((void *)v23, v24, *(void *)(*(void *)(v36 - 8) + 64));
    uint64_t v37 = v264;
    goto LABEL_60;
  }
  uint64_t v255 = v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(void *)(v23 + 8) = *((void *)v24 + 1);
  *(unsigned char *)(v23 + 16) = v24[16];
  uint64_t v29 = v25[9];
  uint64_t v30 = (void *)(v23 + v29);
  uint64_t v31 = &v24[v29];
  uint64_t v32 = sub_248174E60();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  swift_bridgeObjectRetain();
  if (v34(v31, 1, v32))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v30, v31, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  uint64_t v25 = v263;
  uint64_t v47 = v263[10];
  uint64_t v48 = (void *)(v23 + v47);
  uint64_t v49 = &v24[v47];
  uint64_t v50 = sub_248174EA0();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v21 = v255;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  uint64_t v4 = v259;
  uint64_t v53 = v263[11];
  uint64_t v54 = (void *)(v23 + v53);
  uint64_t v55 = &v24[v53];
  uint64_t v56 = sub_248174EF0();
  uint64_t v57 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v250 + 56))(v23, 0, 1, v263);
  uint64_t v37 = v264;
LABEL_60:
  uint64_t v77 = *(int *)(v21 + 60);
  uint64_t v78 = a1 + v77;
  uint64_t v79 = (char *)v4 + v77;
  int v80 = __dst(a1 + v77, 1, v25);
  int v81 = __dst((uint64_t)v79, 1, v25);
  if (!v80)
  {
    if (v81)
    {
      sub_247FB33D4(v78, &qword_2692D58F8);
      goto LABEL_66;
    }
    *(void *)uint64_t v78 = *(void *)v79;
    *(void *)(v78 + 8) = *((void *)v79 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v78 + 16) = v79[16];
    uint64_t v90 = v25[9];
    uint64_t v91 = (void *)(v78 + v90);
    uint64_t v92 = &v79[v90];
    uint64_t v93 = sub_248174E60();
    uint64_t v94 = *(void *)(v93 - 8);
    uint64_t v95 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v94 + 48);
    int v96 = v95(v91, 1, v93);
    int v97 = v95(v92, 1, v93);
    if (v96)
    {
      if (!v97)
      {
        (*(void (**)(void *, char *, uint64_t))(v94 + 16))(v91, v92, v93);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
        goto LABEL_81;
      }
    }
    else
    {
      if (!v97)
      {
        (*(void (**)(void *, char *, uint64_t))(v94 + 24))(v91, v92, v93);
LABEL_81:
        uint64_t v111 = v263[10];
        uint64_t v112 = (void *)(v78 + v111);
        uint64_t v113 = &v79[v111];
        uint64_t v114 = sub_248174EA0();
        uint64_t v115 = *(void *)(v114 - 8);
        uint64_t v116 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v115 + 48);
        int v117 = v116(v112, 1, v114);
        int v118 = v116(v113, 1, v114);
        if (v117)
        {
          uint64_t v4 = v259;
          if (!v118)
          {
            (*(void (**)(void *, char *, uint64_t))(v115 + 16))(v112, v113, v114);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
            goto LABEL_87;
          }
        }
        else
        {
          uint64_t v4 = v259;
          if (!v118)
          {
            (*(void (**)(void *, char *, uint64_t))(v115 + 24))(v112, v113, v114);
LABEL_87:
            uint64_t v120 = v263[11];
            uint64_t v121 = (void *)(v78 + v120);
            uint64_t v122 = &v79[v120];
            uint64_t v123 = sub_248174EF0();
            uint64_t v124 = *(void *)(v123 - 8);
            uint64_t v125 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v124 + 48);
            int v126 = v125(v121, 1, v123);
            int v127 = v125(v122, 1, v123);
            if (v126)
            {
              if (!v127)
              {
                (*(void (**)(void *, char *, uint64_t))(v124 + 16))(v121, v122, v123);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
LABEL_93:
                uint64_t v25 = v263;
                uint64_t v37 = v264;
                goto LABEL_94;
              }
            }
            else
            {
              if (!v127)
              {
                (*(void (**)(void *, char *, uint64_t))(v124 + 24))(v121, v122, v123);
                goto LABEL_93;
              }
              (*(void (**)(void *, uint64_t))(v124 + 8))(v121, v123);
            }
            uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
            memcpy(v121, v122, *(void *)(*(void *)(v128 - 8) + 64));
            goto LABEL_93;
          }
          (*(void (**)(void *, uint64_t))(v115 + 8))(v112, v114);
        }
        uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v112, v113, *(void *)(*(void *)(v119 - 8) + 64));
        goto LABEL_87;
      }
      (*(void (**)(void *, uint64_t))(v94 + 8))(v91, v93);
    }
    uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v91, v92, *(void *)(*(void *)(v110 - 8) + 64));
    goto LABEL_81;
  }
  if (v81)
  {
LABEL_66:
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy((void *)v78, v79, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_94;
  }
  *(void *)uint64_t v78 = *(void *)v79;
  *(void *)(v78 + 8) = *((void *)v79 + 1);
  *(unsigned char *)(v78 + 16) = v79[16];
  uint64_t v82 = v25[9];
  uint64_t v83 = (void *)(v78 + v82);
  uint64_t v84 = &v79[v82];
  uint64_t v85 = sub_248174E60();
  uint64_t v86 = *(void *)(v85 - 8);
  uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
  swift_bridgeObjectRetain();
  if (v87(v84, 1, v85))
  {
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v83, v84, *(void *)(*(void *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v86 + 16))(v83, v84, v85);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
  }
  uint64_t v25 = v263;
  uint64_t v98 = v263[10];
  uint64_t v99 = (void *)(v78 + v98);
  uint64_t v100 = &v79[v98];
  uint64_t v101 = sub_248174EA0();
  uint64_t v102 = *(void *)(v101 - 8);
  uint64_t v4 = v259;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
  {
    uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v102 + 16))(v99, v100, v101);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
  }
  uint64_t v104 = v263[11];
  uint64_t v105 = (void *)(v78 + v104);
  uint64_t v106 = &v79[v104];
  uint64_t v107 = sub_248174EF0();
  uint64_t v108 = *(void *)(v107 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
  {
    uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v108 + 16))(v105, v106, v107);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v250 + 56))(v78, 0, 1, v263);
  uint64_t v37 = v264;
LABEL_94:
  uint64_t v129 = v37[9];
  uint64_t v130 = a1 + v129;
  uint64_t v131 = (char *)v4 + v129;
  *(void *)(a1 + v129) = *(void **)((char *)v4 + v129);
  swift_retain();
  swift_release();
  uint64_t v253 = type metadata accessor for MessagePacker();
  __src = v131;
  uint64_t v132 = *(int *)(v253 + 36);
  uint64_t v257 = v130;
  uint64_t v133 = v130 + v132;
  uint64_t v134 = &v131[v132];
  int v135 = __dst(v130 + v132, 1, v25);
  int v136 = __dst((uint64_t)v134, 1, v25);
  if (!v135)
  {
    if (v136)
    {
      sub_247FB33D4(v133, &qword_2692D58F8);
      goto LABEL_100;
    }
    *(void *)uint64_t v133 = *(void *)v134;
    *(void *)(v133 + 8) = *((void *)v134 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v133 + 16) = v134[16];
    uint64_t v145 = v25[9];
    uint64_t v146 = (void *)(v133 + v145);
    char v147 = &v134[v145];
    uint64_t v148 = sub_248174E60();
    uint64_t v149 = *(void *)(v148 - 8);
    uint64_t v150 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v149 + 48);
    int v151 = v150(v146, 1, v148);
    int v152 = v150(v147, 1, v148);
    if (v151)
    {
      if (!v152)
      {
        (*(void (**)(void *, char *, uint64_t))(v149 + 16))(v146, v147, v148);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
        goto LABEL_115;
      }
    }
    else
    {
      if (!v152)
      {
        (*(void (**)(void *, char *, uint64_t))(v149 + 24))(v146, v147, v148);
LABEL_115:
        uint64_t v166 = v263[10];
        uint64_t v167 = (void *)(v133 + v166);
        uint64_t v168 = &v134[v166];
        uint64_t v169 = sub_248174EA0();
        uint64_t v170 = *(void *)(v169 - 8);
        uint64_t v171 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v170 + 48);
        int v172 = v171(v167, 1, v169);
        int v173 = v171(v168, 1, v169);
        if (v172)
        {
          if (!v173)
          {
            (*(void (**)(void *, char *, uint64_t))(v170 + 16))(v167, v168, v169);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v169);
            goto LABEL_121;
          }
        }
        else
        {
          if (!v173)
          {
            (*(void (**)(void *, char *, uint64_t))(v170 + 24))(v167, v168, v169);
LABEL_121:
            uint64_t v175 = v263[11];
            uint64_t v176 = (void *)(v133 + v175);
            uint64_t v177 = &v134[v175];
            uint64_t v178 = sub_248174EF0();
            uint64_t v179 = *(void *)(v178 - 8);
            uint64_t v180 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v179 + 48);
            int v181 = v180(v176, 1, v178);
            int v182 = v180(v177, 1, v178);
            uint64_t v4 = v259;
            if (v181)
            {
              if (!v182)
              {
                (*(void (**)(void *, char *, uint64_t))(v179 + 16))(v176, v177, v178);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v179 + 56))(v176, 0, 1, v178);
LABEL_127:
                uint64_t v25 = v263;
                uint64_t v37 = v264;
                goto LABEL_128;
              }
            }
            else
            {
              if (!v182)
              {
                (*(void (**)(void *, char *, uint64_t))(v179 + 24))(v176, v177, v178);
                goto LABEL_127;
              }
              (*(void (**)(void *, uint64_t))(v179 + 8))(v176, v178);
            }
            uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
            memcpy(v176, v177, *(void *)(*(void *)(v183 - 8) + 64));
            goto LABEL_127;
          }
          (*(void (**)(void *, uint64_t))(v170 + 8))(v167, v169);
        }
        uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v167, v168, *(void *)(*(void *)(v174 - 8) + 64));
        goto LABEL_121;
      }
      (*(void (**)(void *, uint64_t))(v149 + 8))(v146, v148);
    }
    uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v146, v147, *(void *)(*(void *)(v165 - 8) + 64));
    goto LABEL_115;
  }
  if (v136)
  {
LABEL_100:
    uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy((void *)v133, v134, *(void *)(*(void *)(v144 - 8) + 64));
    goto LABEL_128;
  }
  *(void *)uint64_t v133 = *(void *)v134;
  *(void *)(v133 + 8) = *((void *)v134 + 1);
  *(unsigned char *)(v133 + 16) = v134[16];
  uint64_t v137 = v25[9];
  uint64_t v138 = (void *)(v133 + v137);
  uint64_t v139 = &v134[v137];
  uint64_t v140 = sub_248174E60();
  uint64_t v141 = *(void *)(v140 - 8);
  uint64_t v142 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48);
  swift_bridgeObjectRetain();
  if (v142(v139, 1, v140))
  {
    uint64_t v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v138, v139, *(void *)(*(void *)(v143 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v141 + 16))(v138, v139, v140);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v141 + 56))(v138, 0, 1, v140);
  }
  uint64_t v25 = v263;
  uint64_t v153 = v263[10];
  unint64_t v154 = (void *)(v133 + v153);
  long long v155 = &v134[v153];
  uint64_t v156 = sub_248174EA0();
  uint64_t v157 = *(void *)(v156 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
  {
    uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v154, v155, *(void *)(*(void *)(v158 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v157 + 16))(v154, v155, v156);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
  }
  uint64_t v4 = v259;
  uint64_t v159 = v263[11];
  int v160 = (void *)(v133 + v159);
  uint64_t v161 = &v134[v159];
  uint64_t v162 = sub_248174EF0();
  uint64_t v163 = *(void *)(v162 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162))
  {
    uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v163 + 16))(v160, v161, v162);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v250 + 56))(v133, 0, 1, v263);
  uint64_t v37 = v264;
LABEL_128:
  uint64_t v184 = *(int *)(v253 + 40);
  long long v185 = (void *)(v257 + v184);
  long long v186 = &__src[v184];
  *long long v185 = *(void *)v186;
  v185[1] = *((void *)v186 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v187 = v37[10];
  uint64_t v188 = a1 + v187;
  uint64_t v189 = (char *)v4 + v187;
  *(void *)(a1 + v187) = *(void **)((char *)v4 + v187);
  swift_retain();
  swift_release();
  uint64_t v258 = type metadata accessor for MessageUnpacker();
  uint64_t v190 = *(int *)(v258 + 36);
  uint64_t v191 = v188 + v190;
  long long v262 = v189;
  uint64_t v192 = &v189[v190];
  int v193 = __dst(v188 + v190, 1, v25);
  int v194 = __dst((uint64_t)v192, 1, v25);
  if (!v193)
  {
    if (v194)
    {
      sub_247FB33D4(v191, &qword_2692D58F8);
      goto LABEL_134;
    }
    *(void *)uint64_t v191 = *(void *)v192;
    *(void *)(v191 + 8) = *((void *)v192 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v191 + 16) = v192[16];
    uint64_t v204 = v25[9];
    uint64_t v205 = (void *)(v191 + v204);
    uint64_t v206 = &v192[v204];
    uint64_t v207 = sub_248174E60();
    uint64_t v208 = *(void *)(v207 - 8);
    uint64_t v209 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v208 + 48);
    uint64_t v260 = v205;
    LODWORD(v205) = v209(v205, 1, v207);
    int v210 = v209(v206, 1, v207);
    if (v205)
    {
      if (v210)
      {
        size_t v211 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        long long v212 = v260;
LABEL_150:
        memcpy(v212, v206, v211);
        goto LABEL_160;
      }
      (*(void (**)(void *, char *, uint64_t))(v208 + 16))(v260, v206, v207);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v208 + 56))(v260, 0, 1, v207);
    }
    else
    {
      if (v210)
      {
        (*(void (**)(void *, uint64_t))(v208 + 8))(v260, v207);
        size_t v211 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        long long v212 = v260;
        goto LABEL_150;
      }
      (*(void (**)(void *, char *, uint64_t))(v208 + 24))(v260, v206, v207);
    }
LABEL_160:
    uint64_t v233 = v263[10];
    v234 = (void *)(v191 + v233);
    id v235 = &v192[v233];
    uint64_t v236 = sub_248174EA0();
    uint64_t v237 = *(void *)(v236 - 8);
    v238 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v237 + 48);
    long long v261 = v234;
    LODWORD(v234) = v238(v234, 1, v236);
    int v239 = v238(v235, 1, v236);
    if (v234)
    {
      if (!v239)
      {
        (*(void (**)(void *, char *, uint64_t))(v237 + 16))(v261, v235, v236);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v237 + 56))(v261, 0, 1, v236);
        goto LABEL_168;
      }
      size_t v240 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      char v241 = v261;
    }
    else
    {
      if (!v239)
      {
        (*(void (**)(void *, char *, uint64_t))(v237 + 24))(v261, v235, v236);
        goto LABEL_168;
      }
      (*(void (**)(void *, uint64_t))(v237 + 8))(v261, v236);
      size_t v240 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      char v241 = v261;
    }
    memcpy(v241, v235, v240);
LABEL_168:
    uint64_t v242 = v263[11];
    uint64_t v243 = (void *)(v191 + v242);
    char v244 = &v192[v242];
    uint64_t v245 = sub_248174EF0();
    uint64_t v246 = *(void *)(v245 - 8);
    v247 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v246 + 48);
    int v248 = v247(v243, 1, v245);
    int v249 = v247(v244, 1, v245);
    uint64_t v4 = v259;
    if (v248)
    {
      uint64_t v37 = v264;
      if (!v249)
      {
        (*(void (**)(void *, char *, uint64_t))(v246 + 16))(v243, v244, v245);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v246 + 56))(v243, 0, 1, v245);
        goto LABEL_147;
      }
    }
    else
    {
      uint64_t v37 = v264;
      if (!v249)
      {
        (*(void (**)(void *, char *, uint64_t))(v246 + 24))(v243, v244, v245);
        goto LABEL_147;
      }
      (*(void (**)(void *, uint64_t))(v246 + 8))(v243, v245);
    }
    size_t v201 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
    uint64_t v202 = v243;
    uint64_t v203 = v244;
    goto LABEL_135;
  }
  if (v194)
  {
LABEL_134:
    size_t v201 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v202 = (void *)v191;
    uint64_t v203 = v192;
LABEL_135:
    memcpy(v202, v203, v201);
    goto LABEL_147;
  }
  *(void *)uint64_t v191 = *(void *)v192;
  *(void *)(v191 + 8) = *((void *)v192 + 1);
  *(unsigned char *)(v191 + 16) = v192[16];
  uint64_t v195 = v25[9];
  __dsta = (void *)(v191 + v195);
  uint64_t v196 = &v192[v195];
  uint64_t v197 = sub_248174E60();
  uint64_t v198 = *(void *)(v197 - 8);
  uint64_t v199 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v198 + 48);
  swift_bridgeObjectRetain();
  if (v199(v196, 1, v197))
  {
    uint64_t v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(__dsta, v196, *(void *)(*(void *)(v200 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v198 + 16))(__dsta, v196, v197);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v198 + 56))(__dsta, 0, 1, v197);
  }
  uint64_t v213 = v263[10];
  uint64_t v214 = (void *)(v191 + v213);
  long long v215 = &v192[v213];
  uint64_t v216 = sub_248174EA0();
  uint64_t v217 = *(void *)(v216 - 8);
  uint64_t v37 = v264;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v217 + 48))(v215, 1, v216))
  {
    uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v214, v215, *(void *)(*(void *)(v218 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v217 + 16))(v214, v215, v216);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v217 + 56))(v214, 0, 1, v216);
  }
  uint64_t v4 = v259;
  uint64_t v219 = v263[11];
  uint64_t v220 = (void *)(v191 + v219);
  unint64_t v221 = &v192[v219];
  uint64_t v222 = sub_248174EF0();
  uint64_t v223 = *(void *)(v222 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v223 + 48))(v221, 1, v222))
  {
    uint64_t v224 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v220, v221, *(void *)(*(void *)(v224 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v223 + 16))(v220, v221, v222);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v223 + 56))(v220, 0, 1, v222);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v250 + 56))(v191, 0, 1, v263);
LABEL_147:
  uint64_t v225 = *(int *)(v258 + 40);
  uint64_t v226 = (void *)(v188 + v225);
  long long v227 = &v262[v225];
  *uint64_t v226 = *(void *)v227;
  v226[1] = *((void *)v227 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v37[11]) = *((unsigned char *)v4 + v37[11]);
  uint64_t v228 = v37[12];
  uint64_t v229 = *(void **)(a1 + v228);
  v230 = *(void **)((char *)v4 + v228);
  *(void *)(a1 + v228) = v230;
  id v231 = v230;

  return a1;
}

uint64_t sub_24806DA50(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v10 = *(void *)(a2 + 64);
  if (v10)
  {
    uint64_t v11 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v11;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v12 = type metadata accessor for RapportTransport();
  uint64_t v13 = *(int *)(v12 + 56);
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v114 = *((void *)v16 - 1);
  uint64_t v115 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v114 + 48);
  int v117 = v16;
  if (v115(v15, 1, v16))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    v14[16] = v15[16];
    uint64_t v18 = v16[9];
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = sub_248174E60();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = v117[10];
    uint64_t v25 = &v14[v24];
    uint64_t v26 = &v15[v24];
    uint64_t v27 = sub_248174EA0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v30 = v117[11];
    uint64_t v31 = &v14[v30];
    uint64_t v32 = &v15[v30];
    uint64_t v33 = sub_248174EF0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    uint64_t v16 = v117;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v114 + 56))(v14, 0, 1, v117);
  }
  uint64_t v36 = *(int *)(v12 + 60);
  uint64_t v37 = (unsigned char *)(a1 + v36);
  uint64_t v38 = (unsigned char *)(a2 + v36);
  if (v115((unsigned char *)(a2 + v36), 1, v16))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    uint64_t v40 = v16[9];
    uint64_t v41 = &v37[v40];
    uint64_t v42 = &v38[v40];
    uint64_t v43 = sub_248174E60();
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    uint64_t v46 = v16[10];
    uint64_t v47 = &v37[v46];
    uint64_t v48 = &v38[v46];
    uint64_t v49 = sub_248174EA0();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    uint64_t v52 = v16[11];
    uint64_t v53 = &v37[v52];
    uint64_t v54 = &v38[v52];
    uint64_t v55 = sub_248174EF0();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v114 + 56))(v37, 0, 1, v16);
  }
  uint64_t v58 = a3[9];
  uint64_t v59 = a1 + v58;
  uint64_t v60 = a2 + v58;
  *(void *)(a1 + v58) = *(void *)(a2 + v58);
  uint64_t v113 = type metadata accessor for MessagePacker();
  uint64_t v61 = *(int *)(v113 + 36);
  uint64_t v62 = (unsigned char *)(v59 + v61);
  uint64_t v63 = (unsigned char *)(v60 + v61);
  if (v115((unsigned char *)(v60 + v61), 1, v16))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    uint64_t v111 = a3;
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    v62[16] = v63[16];
    uint64_t v65 = v16[9];
    size_t v66 = &v62[v65];
    uint64_t v67 = &v63[v65];
    uint64_t v68 = sub_248174E60();
    uint64_t v69 = *(void *)(v68 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
    {
      uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 32))(v66, v67, v68);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    uint64_t v71 = v117[10];
    uint64_t v72 = &v62[v71];
    uint64_t v73 = &v63[v71];
    uint64_t v74 = sub_248174EA0();
    uint64_t v75 = *(void *)(v74 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
    {
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v75 + 32))(v72, v73, v74);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    uint64_t v77 = v117[11];
    uint64_t v78 = &v62[v77];
    uint64_t v79 = &v63[v77];
    uint64_t v80 = sub_248174EF0();
    uint64_t v81 = *(void *)(v80 - 8);
    a3 = v111;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v81 + 32))(v78, v79, v80);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
    }
    uint64_t v16 = v117;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v114 + 56))(v62, 0, 1, v117);
  }
  *(_OWORD *)(v59 + *(int *)(v113 + 40)) = *(_OWORD *)(v60 + *(int *)(v113 + 40));
  uint64_t v83 = a3[10];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = a2 + v83;
  *(void *)(a1 + v83) = *(void *)(a2 + v83);
  uint64_t v86 = type metadata accessor for MessageUnpacker();
  uint64_t v87 = *(int *)(v86 + 36);
  uint64_t v88 = (unsigned char *)(v84 + v87);
  uint64_t v89 = (unsigned char *)(v85 + v87);
  if (v115((unsigned char *)(v85 + v87), 1, v16))
  {
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    uint64_t v116 = v86;
    uint64_t v112 = a3;
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
    v88[16] = v89[16];
    uint64_t v91 = v16[9];
    uint64_t v92 = &v88[v91];
    uint64_t v93 = &v89[v91];
    uint64_t v94 = sub_248174E60();
    uint64_t v95 = *(void *)(v94 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
    {
      uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v95 + 32))(v92, v93, v94);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
    }
    uint64_t v97 = v117[10];
    uint64_t v98 = &v88[v97];
    uint64_t v99 = &v89[v97];
    uint64_t v100 = sub_248174EA0();
    uint64_t v101 = *(void *)(v100 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
    {
      uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v101 + 32))(v98, v99, v100);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
    }
    uint64_t v103 = v117[11];
    uint64_t v104 = &v88[v103];
    uint64_t v105 = &v89[v103];
    uint64_t v106 = sub_248174EF0();
    uint64_t v107 = *(void *)(v106 - 8);
    a3 = v112;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
    {
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v104, v105, *(void *)(*(void *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v107 + 32))(v104, v105, v106);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
    }
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v114 + 56))(v88, 0, 1, v117);
    uint64_t v86 = v116;
  }
  *(_OWORD *)(v84 + *(int *)(v86 + 40)) = *(_OWORD *)(v85 + *(int *)(v86 + 40));
  uint64_t v109 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v109) = *(void *)(a2 + v109);
  return a1;
}

uint64_t sub_24806E954(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = v4[2];
  *(void *)(a1 + 8) = v4[1];
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4[3];

  uint64_t v9 = v4[4];
  if (*(void *)(a1 + 32))
  {
    if (v9)
    {
      uint64_t v10 = v4[5];
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = v4[5];
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v4 + 2);
LABEL_8:
  uint64_t v12 = v4[6];
  if (*(void *)(a1 + 48))
  {
    if (v12)
    {
      uint64_t v13 = v4[7];
      *(void *)(a1 + 48) = v12;
      *(void *)(a1 + 56) = v13;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = v4[7];
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v14;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
LABEL_15:
  uint64_t v15 = v4[8];
  if (*(void *)(a1 + 64))
  {
    if (v15)
    {
      uint64_t v16 = v4[9];
      *(void *)(a1 + 64) = v15;
      *(void *)(a1 + 72) = v16;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = v4[9];
    *(void *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = v17;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)v4 + 4);
LABEL_22:
  uint64_t v264 = a3;
  uint64_t v18 = type metadata accessor for RapportTransport();
  uint64_t v19 = *(int *)(v18 + 56);
  uint64_t v20 = (unsigned char *)(a1 + v19);
  uint64_t v21 = (char *)v4 + v19;
  uint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v250 = *((void *)v22 - 1);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v250 + 48);
  int v24 = v23((uint64_t)v20, 1, v22);
  v266 = v23;
  int v25 = v23((uint64_t)v21, 1, v22);
  uint64_t v260 = v4;
  if (!v24)
  {
    if (v25)
    {
      sub_247FB33D4((uint64_t)v20, &qword_2692D58F8);
      goto LABEL_28;
    }
    long long v261 = (void *)v18;
    uint64_t v34 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v34;
    swift_bridgeObjectRelease();
    v20[16] = v21[16];
    uint64_t v35 = v22[9];
    uint64_t v36 = &v20[v35];
    uint64_t v37 = &v21[v35];
    uint64_t v38 = sub_248174E60();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v39 + 48);
    long long v254 = v36;
    LODWORD(v36) = v40(v36, 1, v38);
    int v41 = v40(v37, 1, v38);
    if (v36)
    {
      if (v41)
      {
        size_t v42 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v43 = v254;
LABEL_42:
        memcpy(v43, v37, v42);
        goto LABEL_45;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v39 + 32))(v254, v37, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v254, 0, 1, v38);
    }
    else
    {
      if (v41)
      {
        (*(void (**)(void *, uint64_t))(v39 + 8))(v254, v38);
        size_t v42 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v43 = v254;
        goto LABEL_42;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v39 + 40))(v254, v37, v38);
    }
LABEL_45:
    uint64_t v56 = v22[10];
    uint64_t v57 = &v20[v56];
    uint64_t v58 = &v21[v56];
    uint64_t v59 = sub_248174EA0();
    uint64_t v60 = *(void *)(v59 - 8);
    uint64_t v61 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v60 + 48);
    uint64_t v255 = v57;
    LODWORD(v57) = v61(v57, 1, v59);
    __src = v58;
    int v62 = v61(v58, 1, v59);
    if (v57)
    {
      uint64_t v18 = (uint64_t)v261;
      if (v62)
      {
        size_t v63 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v64 = v255;
LABEL_50:
        memcpy(v64, __src, v63);
        goto LABEL_53;
      }
      (*(void (**)(void *, void *, uint64_t))(v60 + 32))(v255, __src, v59);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v255, 0, 1, v59);
    }
    else
    {
      uint64_t v18 = (uint64_t)v261;
      if (v62)
      {
        (*(void (**)(void *, uint64_t))(v60 + 8))(v255, v59);
        size_t v63 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v64 = v255;
        goto LABEL_50;
      }
      (*(void (**)(void *, void *, uint64_t))(v60 + 40))(v255, __src, v59);
    }
LABEL_53:
    uint64_t v65 = v22[11];
    size_t v66 = &v20[v65];
    uint64_t v67 = &v21[v65];
    uint64_t v68 = sub_248174EF0();
    uint64_t v69 = *(void *)(v68 - 8);
    uint64_t v70 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v69 + 48);
    int v71 = v70(v66, 1, v68);
    int v72 = v70(v67, 1, v68);
    if (v71)
    {
      uint64_t v4 = v260;
      if (!v72)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 32))(v66, v67, v68);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
LABEL_59:
        uint64_t v33 = v264;
        goto LABEL_60;
      }
    }
    else
    {
      uint64_t v4 = v260;
      if (!v72)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v69 + 40))(v66, v67, v68);
        goto LABEL_59;
      }
      (*(void (**)(unsigned char *, uint64_t))(v69 + 8))(v66, v68);
    }
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v66, v67, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_59;
  }
  if (v25)
  {
LABEL_28:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v20, v21, *(void *)(*(void *)(v32 - 8) + 64));
    uint64_t v33 = v264;
    goto LABEL_60;
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  v20[16] = v21[16];
  uint64_t v26 = v22[9];
  uint64_t v27 = &v20[v26];
  uint64_t v28 = &v21[v26];
  uint64_t v29 = sub_248174E60();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v44 = v22[10];
  uint64_t v45 = &v20[v44];
  uint64_t v46 = &v21[v44];
  uint64_t v47 = sub_248174EA0();
  uint64_t v48 = *(void *)(v47 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  uint64_t v4 = v260;
  uint64_t v50 = v22[11];
  uint64_t v51 = &v20[v50];
  uint64_t v52 = &v21[v50];
  uint64_t v53 = sub_248174EF0();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v54 + 32))(v51, v52, v53);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v250 + 56))(v20, 0, 1, v22);
  uint64_t v33 = v264;
LABEL_60:
  uint64_t v74 = *(int *)(v18 + 60);
  uint64_t v75 = (unsigned char *)(a1 + v74);
  uint64_t v76 = (char *)v4 + v74;
  int v77 = v266(a1 + v74, 1, v22);
  int v78 = v266((uint64_t)v76, 1, v22);
  if (!v77)
  {
    if (v78)
    {
      sub_247FB33D4((uint64_t)v75, &qword_2692D58F8);
      goto LABEL_66;
    }
    uint64_t v86 = *((void *)v76 + 1);
    *(void *)uint64_t v75 = *(void *)v76;
    *((void *)v75 + 1) = v86;
    swift_bridgeObjectRelease();
    v75[16] = v76[16];
    uint64_t v87 = v22[9];
    uint64_t v88 = &v75[v87];
    uint64_t v89 = &v76[v87];
    uint64_t v90 = sub_248174E60();
    uint64_t v91 = *(void *)(v90 - 8);
    uint64_t v92 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v91 + 48);
    uint64_t v256 = v88;
    LODWORD(v88) = v92(v88, 1, v90);
    int v93 = v92(v89, 1, v90);
    if (v88)
    {
      if (v93)
      {
        size_t v94 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v95 = v256;
LABEL_80:
        memcpy(v95, v89, v94);
        goto LABEL_84;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v91 + 32))(v256, v89, v90);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v256, 0, 1, v90);
    }
    else
    {
      if (v93)
      {
        (*(void (**)(void *, uint64_t))(v91 + 8))(v256, v90);
        size_t v94 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v95 = v256;
        goto LABEL_80;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v91 + 40))(v256, v89, v90);
    }
LABEL_84:
    uint64_t v108 = v22[10];
    uint64_t v109 = &v75[v108];
    uint64_t v110 = &v76[v108];
    uint64_t v111 = sub_248174EA0();
    uint64_t v112 = *(void *)(v111 - 8);
    uint64_t v113 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v112 + 48);
    uint64_t v257 = v109;
    LODWORD(v109) = v113(v109, 1, v111);
    int v114 = v113(v110, 1, v111);
    if (v109)
    {
      uint64_t v4 = v260;
      if (v114)
      {
        size_t v115 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v116 = v257;
LABEL_89:
        memcpy(v116, v110, v115);
        goto LABEL_92;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v112 + 32))(v257, v110, v111);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v257, 0, 1, v111);
    }
    else
    {
      uint64_t v4 = v260;
      if (v114)
      {
        (*(void (**)(void *, uint64_t))(v112 + 8))(v257, v111);
        size_t v115 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v116 = v257;
        goto LABEL_89;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v112 + 40))(v257, v110, v111);
    }
LABEL_92:
    uint64_t v117 = v22[11];
    int v118 = &v75[v117];
    uint64_t v119 = &v76[v117];
    uint64_t v120 = sub_248174EF0();
    uint64_t v121 = *(void *)(v120 - 8);
    uint64_t v122 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v121 + 48);
    int v123 = v122(v118, 1, v120);
    int v124 = v122(v119, 1, v120);
    if (v123)
    {
      if (!v124)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v121 + 32))(v118, v119, v120);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
LABEL_98:
        uint64_t v33 = v264;
        goto LABEL_99;
      }
    }
    else
    {
      if (!v124)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v121 + 40))(v118, v119, v120);
        goto LABEL_98;
      }
      (*(void (**)(unsigned char *, uint64_t))(v121 + 8))(v118, v120);
    }
    uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v118, v119, *(void *)(*(void *)(v125 - 8) + 64));
    goto LABEL_98;
  }
  if (v78)
  {
LABEL_66:
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v75, v76, *(void *)(*(void *)(v85 - 8) + 64));
    goto LABEL_99;
  }
  *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
  v75[16] = v76[16];
  uint64_t v79 = v22[9];
  uint64_t v80 = &v75[v79];
  uint64_t v81 = &v76[v79];
  uint64_t v82 = sub_248174E60();
  uint64_t v83 = *(void *)(v82 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
  {
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v83 + 32))(v80, v81, v82);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
  }
  uint64_t v96 = v22[10];
  uint64_t v97 = &v75[v96];
  uint64_t v98 = &v76[v96];
  uint64_t v99 = sub_248174EA0();
  uint64_t v100 = *(void *)(v99 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
  {
    uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v100 + 32))(v97, v98, v99);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
  }
  uint64_t v102 = v22[11];
  uint64_t v103 = &v75[v102];
  uint64_t v104 = &v76[v102];
  uint64_t v105 = sub_248174EF0();
  uint64_t v106 = *(void *)(v105 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
  {
    uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v103, v104, *(void *)(*(void *)(v107 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v106 + 32))(v103, v104, v105);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v250 + 56))(v75, 0, 1, v22);
  uint64_t v33 = v264;
LABEL_99:
  uint64_t v126 = v33[9];
  uint64_t v127 = a1 + v126;
  uint64_t v128 = (char *)v4 + v126;
  *(void *)(a1 + v126) = *(void *)((char *)v4 + v126);
  swift_release();
  uint64_t v251 = type metadata accessor for MessagePacker();
  __srca = v128;
  uint64_t v129 = *(int *)(v251 + 36);
  uint64_t v258 = v127;
  uint64_t v130 = (unsigned char *)(v127 + v129);
  uint64_t v131 = &v128[v129];
  LODWORD(v127) = v266(v127 + v129, 1, v22);
  long long v262 = v22;
  int v132 = v266((uint64_t)v131, 1, v22);
  if (!v127)
  {
    if (v132)
    {
      sub_247FB33D4((uint64_t)v130, &qword_2692D58F8);
      goto LABEL_105;
    }
    uint64_t v140 = *((void *)v131 + 1);
    *(void *)uint64_t v130 = *(void *)v131;
    *((void *)v130 + 1) = v140;
    swift_bridgeObjectRelease();
    v130[16] = v131[16];
    uint64_t v141 = v22[9];
    uint64_t v142 = &v130[v141];
    uint64_t v143 = &v131[v141];
    uint64_t v144 = sub_248174E60();
    uint64_t v145 = *(void *)(v144 - 8);
    uint64_t v146 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v145 + 48);
    int v248 = v142;
    LODWORD(v142) = v146(v142, 1, v144);
    int v147 = v146(v143, 1, v144);
    if (v142)
    {
      if (v147)
      {
        size_t v148 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v149 = v248;
LABEL_119:
        memcpy(v149, v143, v148);
        goto LABEL_123;
      }
      (*(void (**)(void *, char *, uint64_t))(v145 + 32))(v248, v143, v144);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v248, 0, 1, v144);
    }
    else
    {
      if (v147)
      {
        (*(void (**)(void *, uint64_t))(v145 + 8))(v248, v144);
        size_t v148 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v149 = v248;
        goto LABEL_119;
      }
      (*(void (**)(void *, char *, uint64_t))(v145 + 40))(v248, v143, v144);
    }
LABEL_123:
    uint64_t v162 = v22[10];
    uint64_t v163 = &v130[v162];
    uint64_t v164 = &v131[v162];
    uint64_t v165 = sub_248174EA0();
    uint64_t v166 = *(void *)(v165 - 8);
    uint64_t v167 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v166 + 48);
    int v249 = v163;
    LODWORD(v163) = v167(v163, 1, v165);
    int v168 = v167(v164, 1, v165);
    if (v163)
    {
      if (v168)
      {
        size_t v169 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v170 = v249;
LABEL_128:
        memcpy(v170, v164, v169);
        goto LABEL_131;
      }
      (*(void (**)(void *, char *, uint64_t))(v166 + 32))(v249, v164, v165);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v166 + 56))(v249, 0, 1, v165);
    }
    else
    {
      if (v168)
      {
        (*(void (**)(void *, uint64_t))(v166 + 8))(v249, v165);
        size_t v169 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v170 = v249;
        goto LABEL_128;
      }
      (*(void (**)(void *, char *, uint64_t))(v166 + 40))(v249, v164, v165);
    }
LABEL_131:
    uint64_t v171 = v22[11];
    int v172 = &v130[v171];
    int v173 = &v131[v171];
    uint64_t v174 = sub_248174EF0();
    uint64_t v175 = *(void *)(v174 - 8);
    uint64_t v176 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v175 + 48);
    int v177 = v176(v172, 1, v174);
    int v178 = v176(v173, 1, v174);
    if (v177)
    {
      uint64_t v4 = v260;
      if (!v178)
      {
        (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v172, v173, v174);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v175 + 56))(v172, 0, 1, v174);
LABEL_137:
        uint64_t v33 = v264;
        goto LABEL_138;
      }
    }
    else
    {
      uint64_t v4 = v260;
      if (!v178)
      {
        (*(void (**)(char *, char *, uint64_t))(v175 + 40))(v172, v173, v174);
        goto LABEL_137;
      }
      (*(void (**)(char *, uint64_t))(v175 + 8))(v172, v174);
    }
    uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v172, v173, *(void *)(*(void *)(v179 - 8) + 64));
    goto LABEL_137;
  }
  if (v132)
  {
LABEL_105:
    uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v130, v131, *(void *)(*(void *)(v139 - 8) + 64));
    goto LABEL_138;
  }
  *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
  v130[16] = v131[16];
  uint64_t v133 = v22[9];
  uint64_t v134 = &v130[v133];
  int v135 = &v131[v133];
  uint64_t v136 = sub_248174E60();
  uint64_t v137 = *(void *)(v136 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v137 + 48))(v135, 1, v136))
  {
    uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v134, v135, *(void *)(*(void *)(v138 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, char *, uint64_t))(v137 + 32))(v134, v135, v136);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v137 + 56))(v134, 0, 1, v136);
  }
  uint64_t v150 = v22[10];
  int v151 = &v130[v150];
  int v152 = &v131[v150];
  uint64_t v153 = sub_248174EA0();
  uint64_t v154 = *(void *)(v153 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v152, 1, v153))
  {
    uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v151, v152, *(void *)(*(void *)(v155 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, char *, uint64_t))(v154 + 32))(v151, v152, v153);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
  }
  uint64_t v4 = v260;
  uint64_t v156 = v22[11];
  uint64_t v157 = &v130[v156];
  uint64_t v158 = &v131[v156];
  uint64_t v159 = sub_248174EF0();
  uint64_t v160 = *(void *)(v159 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
  {
    uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v157, v158, *(void *)(*(void *)(v161 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, char *, uint64_t))(v160 + 32))(v157, v158, v159);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v250 + 56))(v130, 0, 1, v22);
  uint64_t v33 = v264;
LABEL_138:
  uint64_t v180 = *(int *)(v251 + 40);
  int v181 = (void *)(v258 + v180);
  int v182 = &__srca[v180];
  uint64_t v184 = *(void *)v182;
  uint64_t v183 = *((void *)v182 + 1);
  *int v181 = v184;
  v181[1] = v183;
  swift_bridgeObjectRelease();
  uint64_t v185 = v33[10];
  uint64_t v186 = a1 + v185;
  uint64_t v187 = (char *)v4 + v185;
  *(void *)(a1 + v185) = *(void *)((char *)v4 + v185);
  swift_release();
  uint64_t v259 = type metadata accessor for MessageUnpacker();
  uint64_t v188 = *(int *)(v259 + 36);
  uint64_t v189 = v186 + v188;
  v265 = v187;
  uint64_t v190 = &v187[v188];
  LODWORD(v187) = v266(v186 + v188, 1, v22);
  int v191 = v266((uint64_t)v190, 1, v22);
  if (!v187)
  {
    if (v191)
    {
      sub_247FB33D4(v189, &qword_2692D58F8);
      goto LABEL_144;
    }
    uint64_t v201 = *((void *)v190 + 1);
    *(void *)uint64_t v189 = *(void *)v190;
    *(void *)(v189 + 8) = v201;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v189 + 16) = v190[16];
    uint64_t v202 = v22[9];
    uint64_t v203 = (void *)(v189 + v202);
    uint64_t v204 = &v190[v202];
    uint64_t v205 = sub_248174E60();
    uint64_t v206 = *(void *)(v205 - 8);
    uint64_t v207 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v206 + 48);
    v267 = v203;
    LODWORD(v203) = v207(v203, 1, v205);
    int v208 = v207(v204, 1, v205);
    if (v203)
    {
      if (v208)
      {
        size_t v209 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v210 = v267;
LABEL_160:
        memcpy(v210, v204, v209);
        goto LABEL_164;
      }
      (*(void (**)(void *, char *, uint64_t))(v206 + 32))(v267, v204, v205);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v206 + 56))(v267, 0, 1, v205);
    }
    else
    {
      if (v208)
      {
        (*(void (**)(void *, uint64_t))(v206 + 8))(v267, v205);
        size_t v209 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v210 = v267;
        goto LABEL_160;
      }
      (*(void (**)(void *, char *, uint64_t))(v206 + 40))(v267, v204, v205);
    }
LABEL_164:
    uint64_t v231 = v262[10];
    uint64_t v232 = (void *)(v189 + v231);
    uint64_t v233 = &v190[v231];
    uint64_t v234 = sub_248174EA0();
    uint64_t v235 = *(void *)(v234 - 8);
    uint64_t v236 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v235 + 48);
    v263 = v232;
    LODWORD(v232) = v236(v232, 1, v234);
    int v237 = v236(v233, 1, v234);
    if (v232)
    {
      if (!v237)
      {
        (*(void (**)(void *, char *, uint64_t))(v235 + 32))(v263, v233, v234);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v235 + 56))(v263, 0, 1, v234);
        goto LABEL_172;
      }
      size_t v238 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      int v239 = v263;
    }
    else
    {
      if (!v237)
      {
        (*(void (**)(void *, char *, uint64_t))(v235 + 40))(v263, v233, v234);
        goto LABEL_172;
      }
      (*(void (**)(void *, uint64_t))(v235 + 8))(v263, v234);
      size_t v238 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      int v239 = v263;
    }
    memcpy(v239, v233, v238);
LABEL_172:
    uint64_t v4 = v260;
    uint64_t v240 = v262[11];
    char v241 = (void *)(v189 + v240);
    uint64_t v242 = &v190[v240];
    uint64_t v243 = sub_248174EF0();
    uint64_t v244 = *(void *)(v243 - 8);
    uint64_t v245 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v244 + 48);
    int v246 = v245(v241, 1, v243);
    int v247 = v245(v242, 1, v243);
    if (v246)
    {
      uint64_t v33 = v264;
      if (!v247)
      {
        (*(void (**)(void *, char *, uint64_t))(v244 + 32))(v241, v242, v243);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v244 + 56))(v241, 0, 1, v243);
        goto LABEL_157;
      }
    }
    else
    {
      uint64_t v33 = v264;
      if (!v247)
      {
        (*(void (**)(void *, char *, uint64_t))(v244 + 40))(v241, v242, v243);
        goto LABEL_157;
      }
      (*(void (**)(void *, uint64_t))(v244 + 8))(v241, v243);
    }
    size_t v198 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
    uint64_t v199 = v241;
    uint64_t v200 = v242;
    goto LABEL_145;
  }
  if (v191)
  {
LABEL_144:
    size_t v198 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v199 = (void *)v189;
    uint64_t v200 = v190;
LABEL_145:
    memcpy(v199, v200, v198);
    goto LABEL_157;
  }
  *(_OWORD *)uint64_t v189 = *(_OWORD *)v190;
  *(unsigned char *)(v189 + 16) = v190[16];
  uint64_t v192 = v22[9];
  int v193 = (void *)(v189 + v192);
  int v194 = &v190[v192];
  uint64_t v195 = sub_248174E60();
  uint64_t v196 = *(void *)(v195 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v194, 1, v195))
  {
    uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v193, v194, *(void *)(*(void *)(v197 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v196 + 32))(v193, v194, v195);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v196 + 56))(v193, 0, 1, v195);
  }
  uint64_t v211 = v22[10];
  long long v212 = (void *)(v189 + v211);
  uint64_t v213 = &v190[v211];
  uint64_t v214 = sub_248174EA0();
  uint64_t v215 = *(void *)(v214 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48))(v213, 1, v214))
  {
    uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v212, v213, *(void *)(*(void *)(v216 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v215 + 32))(v212, v213, v214);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
  }
  uint64_t v4 = v260;
  uint64_t v217 = v22[11];
  uint64_t v218 = (void *)(v189 + v217);
  uint64_t v219 = &v190[v217];
  uint64_t v220 = sub_248174EF0();
  uint64_t v221 = *(void *)(v220 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v219, 1, v220))
  {
    uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v218, v219, *(void *)(*(void *)(v222 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v221 + 32))(v218, v219, v220);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v221 + 56))(v218, 0, 1, v220);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v250 + 56))(v189, 0, 1, v22);
LABEL_157:
  uint64_t v223 = *(int *)(v259 + 40);
  uint64_t v224 = (void *)(v186 + v223);
  uint64_t v225 = &v265[v223];
  uint64_t v227 = *(void *)v225;
  uint64_t v226 = *((void *)v225 + 1);
  void *v224 = v227;
  v224[1] = v226;
  swift_bridgeObjectRelease();
  uint64_t v228 = v33[12];
  *(unsigned char *)(a1 + v33[11]) = *((unsigned char *)v4 + v33[11]);
  uint64_t v229 = *(void **)(a1 + v228);
  *(void *)(a1 + v228) = *(void *)((char *)v4 + v228);

  return a1;
}

uint64_t sub_248070B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_248070BA0);
}

uint64_t sub_248070BA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for RapportTransport();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for MessagePacker();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[9];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for MessageUnpacker();
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[12]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  int v17 = v16 - 1;
  if (v17 < 0) {
    int v17 = -1;
  }
  return (v17 + 1);
}

uint64_t sub_248070D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_248070D48);
}

uint64_t sub_248070D48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for RapportTransport();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for MessagePacker();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[9];
    }
    else
    {
      uint64_t result = type metadata accessor for MessageUnpacker();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[12]) = a2;
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[10];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for RapportTransport.Activated()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_248070EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_248070EEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248070F50(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_248071018(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *((void *)a2 + 11);
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *((void *)a2 + 15);
  *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
  *(void *)(a1 + 120) = v5;
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_24807117C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t sub_248071234(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 129)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_248071290(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 129) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

unsigned char *sub_248071308(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480713D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_2480713FC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480714C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2480714F4()
{
  return swift_retain();
}

uint64_t sub_2480714FC()
{
  return sub_248064BD0();
}

uint64_t sub_24807150C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_2480714F4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_248071558(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_2480714F4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_248064BD0();
  return a1;
}

uint64_t sub_2480715B0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_248064BD0();
  return a1;
}

uint64_t sub_2480715F8(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t sub_248071640(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_248071684(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_24807168C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

uint64_t sub_248071698()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480716B4()
{
  return swift_getWitnessTable();
}

void sub_2480716D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = type metadata accessor for RapportTransport.Activated();
  sub_2480643C8(v3, a1, v4);
}

uint64_t sub_24807171C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2480717B0(uint64_t a1, int a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
  return sub_2480645D0(a1, a2, a3);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_248071868()
{
  uint64_t v1 = type metadata accessor for MessageUnpacker();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)(v1 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for MessagePacker();
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v33 = v5;
  uint64_t v34 = (v4 + v32 + 17) & ~v32;
  uint64_t v31 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 36);
  uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v30 = v2;
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + v7[9];
    uint64_t v10 = sub_248174E60();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = v6 + v7[10];
    uint64_t v13 = sub_248174EA0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v15 = v6 + v7[11];
    uint64_t v16 = sub_248174EF0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v2 = v30;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
  }
  swift_bridgeObjectRelease();
  sub_248064BD0();
  uint64_t v18 = v34;
  swift_release();
  uint64_t v19 = v0 + v34 + *(int *)(v33 + 36);
  if (!v8(v19, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + v7[9];
    uint64_t v21 = sub_248174E60();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v23 = v19 + v7[10];
    uint64_t v24 = sub_248174EA0();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    uint64_t v26 = v19 + v7[11];
    uint64_t v27 = sub_248174EF0();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v18 = v34;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v18 + v31, v2 | v32 | 7);
}

uint64_t sub_248071DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v10 = *(void *)(v4 + 24);
  uint64_t v11 = *(void *)(type metadata accessor for MessageUnpacker() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)(type metadata accessor for MessagePacker() - 8);
  return sub_24805F798(a1, a2, a3, a4, v4 + v12, *(void *)(v4 + v13), *(void *)(v4 + v13 + 8), *(unsigned __int8 *)(v4 + v13 + 16), v4 + ((v13 + *(unsigned __int8 *)(v14 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v9, v10);
}

uint64_t sub_248071F14()
{
  uint64_t v1 = type metadata accessor for RapportTransport();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v28 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v29 = (v2 + 32) & ~v2;
  uint64_t v3 = v0 + v29;

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v29 + 32)) {
    swift_release();
  }
  if (*(void *)(v3 + 48)) {
    swift_release();
  }
  if (*(void *)(v3 + 64)) {
    swift_release();
  }
  uint64_t v4 = v3 + *(int *)(v1 + 56);
  uint64_t v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v27 = v2;
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[9];
    uint64_t v8 = sub_248174E60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v4 + v5[10];
    uint64_t v11 = sub_248174EA0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v13 = v4 + v5[11];
    uint64_t v14 = sub_248174EF0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v2 = v27;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  uint64_t v16 = v3 + *(int *)(v1 + 60);
  if (!v6(v16, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = v16 + v5[9];
    uint64_t v18 = sub_248174E60();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    uint64_t v20 = v16 + v5[10];
    uint64_t v21 = sub_248174EA0();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v23 = v16 + v5[11];
    uint64_t v24 = sub_248174EF0();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
  }
  return MEMORY[0x270FA0238](v0, v29 + v28, v2 | 7);
}

uint64_t sub_2480723EC()
{
  uint64_t v1 = type metadata accessor for RapportTransport();
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v4 = *(uint64_t (**)(void))(v0
                           + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                           + 64);
  if (v4) {
    return v4();
  }
  return result;
}

uint64_t sub_24807245C()
{
  uint64_t v1 = type metadata accessor for RapportTransport();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v28 = *(void *)(*(void *)(v1 - 8) + 64);

  uint64_t v29 = (v2 + 40) & ~v2;
  uint64_t v3 = v0 + v29;

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v29 + 32)) {
    swift_release();
  }
  if (*(void *)(v3 + 48)) {
    swift_release();
  }
  if (*(void *)(v3 + 64)) {
    swift_release();
  }
  uint64_t v4 = v3 + *(int *)(v1 + 56);
  uint64_t v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v27 = v2;
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[9];
    uint64_t v8 = sub_248174E60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v4 + v5[10];
    uint64_t v11 = sub_248174EA0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v13 = v4 + v5[11];
    uint64_t v14 = sub_248174EF0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v2 = v27;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  uint64_t v16 = v3 + *(int *)(v1 + 60);
  if (!v6(v16, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = v16 + v5[9];
    uint64_t v18 = sub_248174E60();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    uint64_t v20 = v16 + v5[10];
    uint64_t v21 = sub_248174EA0();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v23 = v16 + v5[11];
    uint64_t v24 = sub_248174EF0();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
  }
  return MEMORY[0x270FA0238](v0, v29 + v28, v2 | 7);
}

id sub_248072940()
{
  uint64_t v1 = *(void *)(type metadata accessor for RapportTransport() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  objc_msgSend(*(id *)(v0 + 32), sel_activate);
  uint64_t v3 = *(void **)(v0 + v2);
  return objc_msgSend(v3, sel_activateWithCompletion_, 0);
}

uint64_t sub_2480729C8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2480729D8()
{
  return sub_2480C6050(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2480729E0()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_248072A18(uint64_t a1, void *a2, uint64_t a3)
{
  sub_24806248C(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_248072A20()
{
  uint64_t v1 = type metadata accessor for MessageUnpacker();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  unint64_t v4 = (((*(void *)(*(void *)(v1 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for MessagePacker();
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v33 = v5;
  uint64_t v34 = (v4 + v32 + 17) & ~v32;
  uint64_t v31 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 36);
  uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v30 = v2;
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + v7[9];
    uint64_t v10 = sub_248174E60();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = v6 + v7[10];
    uint64_t v13 = sub_248174EA0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v15 = v6 + v7[11];
    uint64_t v16 = sub_248174EF0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v2 = v30;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_248064BD0();
  uint64_t v18 = v34;
  swift_release();
  uint64_t v19 = v0 + v34 + *(int *)(v33 + 36);
  if (!v8(v19, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + v7[9];
    uint64_t v21 = sub_248174E60();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v23 = v19 + v7[10];
    uint64_t v24 = sub_248174EA0();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    uint64_t v26 = v19 + v7[11];
    uint64_t v27 = sub_248174EF0();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v18 = v34;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v31 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | v32 | 7);
}

uint64_t sub_248072FD8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MessageUnpacker() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for MessagePacker();
  uint64_t v14 = v1[3];
  uint64_t v15 = v1[2];
  uint64_t v12 = (uint64_t)v1 + v4;
  uint64_t v13 = v1[6];
  uint64_t v7 = *(void *)((char *)v1 + v5);
  uint64_t v8 = *(void *)((char *)v1 + v6);
  uint64_t v9 = *(void *)((char *)v1 + v6 + 8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_247FCB950;
  return sub_24805FAF0(a1, v15, v14, v13, v12, v7, v8, v9);
}

uint64_t sub_2480731D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  return sub_248061598(v2, a1);
}

uint64_t sub_248073208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24807329C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 128);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v4);
  return a1;
}

uint64_t sub_248073308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24807339C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2480733DC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_2480626D8(a1, a2, a3, a4, a5, *(void **)(v5 + 16), *(void **)(v5 + 24));
}

uint64_t sub_2480733E4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_24807341C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = (id)sub_248175130();
  objc_msgSend(v1, sel_deregisterRequestID_, v2);
}

void sub_248073474(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_248062EBC(a1, a2, a3, a4, a5, a6, *(void **)(v6 + 16), *(void **)(v6 + 24));
}

void sub_24807347C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2480A6534(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_248073488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_248063034(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_248073494()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2480734DC()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 16))(*(unsigned int *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

unint64_t sub_248073510()
{
  unint64_t result = qword_2692D8C98;
  if (!qword_2692D8C98)
  {
    sub_248174D30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8C98);
  }
  return result;
}

unint64_t sub_248073568()
{
  unint64_t result = qword_2692D8CA8;
  if (!qword_2692D8CA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D8CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CA8);
  }
  return result;
}

uint64_t sub_2480735C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_248062D24(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_2480735CC()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24807360C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_248062820(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t (*)(int, uint64_t, uint64_t), void *))(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t objectdestroy_79Tm()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24807365C(int a1, uint64_t a2, uint64_t a3)
{
  return sub_2480628D8(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_248073668()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2480736B8()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t static FeatureManager.shared.getter()
{
  type metadata accessor for FeatureManager();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for FeatureManager()
{
  return self;
}

uint64_t sub_2480737A4(char *a1)
{
  char v1 = *a1;
  uint64_t v5 = &type metadata for AppleIDSetupFeature;
  unint64_t v6 = sub_2480737FC();
  v4[0] = v1;
  char v2 = sub_2481749B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_2480737FC()
{
  unint64_t result = qword_26B13B6F0;
  if (!qword_26B13B6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13B6F0);
  }
  return result;
}

uint64_t FeatureManager.deinit()
{
  return v0;
}

uint64_t FeatureManager.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t FeatureFlagsKey.isFeatureEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  v6[3] = a1;
  long long v6[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
  LOBYTE(v3) = sub_2481749B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return v3 & 1;
}

uint64_t dispatch thunk of FeatureManagerProtocol.isFeatureEnabled(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for FeatureManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for FeatureManager);
}

uint64_t dispatch thunk of FeatureManager.isFeatureEnabled(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t static ObjcUnarchiver.unarchivedObject<A>(assumingType:from:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 16))(a1, a2, a3, a4, a6, a5);
}

uint64_t dispatch thunk of ObjcArchiver.encoder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static ObjcArchiver.archivedData<A>(for:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ObjcUnarchiver.decoder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static ObjcUnarchiver.unarchivedObject<A>(ofType:from:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t AppleIDSetupFeature.isFeatureEnabled.getter()
{
  char v1 = *v0;
  uint64_t v5 = &type metadata for AppleIDSetupFeature;
  unint64_t v6 = sub_2480737FC();
  v4[0] = v1;
  char v2 = sub_2481749B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

const char *AppleIDSetupFeature.domain.getter()
{
  int v1 = *v0;
  char v2 = "AppleIDSetup";
  if (v1 == 7) {
    char v2 = "GameCenter";
  }
  if (v1 == 6) {
    return "AuthKit";
  }
  else {
    return v2;
  }
}

const char *AppleIDSetupFeature.feature.getter()
{
  unint64_t result = "PersonalizedChildSetupBuddy";
  switch(*v0)
  {
    case 1:
      unint64_t result = "PersonalizedChildSetupSpyglass";
      break;
    case 2:
      unint64_t result = "ChildSetupSignIn";
      break;
    case 3:
      unint64_t result = "ProxAdvertisementOverride";
      break;
    case 4:
      unint64_t result = "Sandstone";
      break;
    case 5:
      unint64_t result = "SandstoneRepair";
      break;
    case 6:
      unint64_t result = "SimpleProfiles";
      break;
    case 7:
      unint64_t result = "auth_plugin_modernization";
      break;
    default:
      return result;
  }
  return result;
}

BOOL static AppleIDSetupFeature.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t AppleIDSetupFeature.hash(into:)()
{
  return sub_248175E70();
}

uint64_t AppleIDSetupFeature.hashValue.getter()
{
  return sub_248175EC0();
}

unint64_t sub_248073BE0()
{
  unint64_t result = qword_2692D8CB0;
  if (!qword_2692D8CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CB0);
  }
  return result;
}

const char *sub_248073C34()
{
  int v1 = *v0;
  char v2 = "AppleIDSetup";
  if (v1 == 7) {
    char v2 = "GameCenter";
  }
  if (v1 == 6) {
    return "AuthKit";
  }
  else {
    return v2;
  }
}

const char *sub_248073C7C()
{
  unint64_t result = "PersonalizedChildSetupBuddy";
  switch(*v0)
  {
    case 1:
      unint64_t result = "PersonalizedChildSetupSpyglass";
      break;
    case 2:
      unint64_t result = "ChildSetupSignIn";
      break;
    case 3:
      unint64_t result = "ProxAdvertisementOverride";
      break;
    case 4:
      unint64_t result = "Sandstone";
      break;
    case 5:
      unint64_t result = "SandstoneRepair";
      break;
    case 6:
      unint64_t result = "SimpleProfiles";
      break;
    case 7:
      unint64_t result = "auth_plugin_modernization";
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppleIDSetupFeature(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248073E1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleIDSetupFeature()
{
  return &type metadata for AppleIDSetupFeature;
}

unsigned char *storeEnumTagSinglePayload for AppleAccountFeature(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x248073EF0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppleAccountFeature()
{
  return &type metadata for AppleAccountFeature;
}

unint64_t sub_248073F2C()
{
  unint64_t result = qword_2692D8CB8;
  if (!qword_2692D8CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CB8);
  }
  return result;
}

const char *sub_248073F80()
{
  return "AppleAccount";
}

const char *sub_248073F94()
{
  return "AABranding";
}

void static DiscoveryModel.CodeType.platformDefault.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  *(unsigned char *)(a1 + 8) = 2;
}

__n128 DiscoveryModel.Discovering.init(allowsManual:selectedManual:pairingState:)@<Q0>(char a1@<W0>, char a2@<W1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4 = a3[1].n128_u64[0];
  unsigned __int8 v5 = a3[1].n128_u8[8];
  *(unsigned char *)a4 = a1;
  *(unsigned char *)(a4 + 1) = a2;
  __n128 result = *a3;
  *(__n128 *)(a4 + 8) = *a3;
  *(void *)(a4 + 24) = v4;
  *(unsigned char *)(a4 + 32) = v5;
  return result;
}

uint64_t DiscoveryModel.init(role:flowKind:state:fixedPin:targetAuthTag:codeType:altDSID:symptomReport:shouldSkipConfirmation:name:serverDeviceModel:)@<X0>(char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, _OWORD *a12, char a13, long long a14, uint64_t a15, uint64_t a16)
{
  char v16 = *a1;
  char v17 = *a2;
  char v18 = *(unsigned char *)(a3 + 48);
  uint64_t result = *a8;
  char v20 = *((unsigned char *)a8 + 8);
  *(unsigned char *)a9 = v17;
  *(unsigned char *)(a9 + 1) = v16;
  *(void *)(a9 + 8) = a6;
  *(void *)(a9 + 16) = a7;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = result;
  *(unsigned char *)(a9 + 48) = v20;
  *(unsigned char *)(a9 + 49) = a13;
  *(void *)(a9 + 56) = a10;
  *(void *)(a9 + 64) = a11;
  long long v21 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a9 + 72) = *(_OWORD *)a3;
  *(_OWORD *)(a9 + 88) = v21;
  *(_OWORD *)(a9 + 104) = *(_OWORD *)(a3 + 32);
  *(unsigned char *)(a9 + 120) = v18;
  long long v22 = a12[1];
  *(_OWORD *)(a9 + 128) = *a12;
  *(_OWORD *)(a9 + 144) = v22;
  *(_OWORD *)(a9 + 160) = a14;
  *(void *)(a9 + 176) = a15;
  *(void *)(a9 + 184) = a16;
  return result;
}

void sub_248074054(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v5 = type metadata accessor for IdMSAccount();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = a1 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a1 + 56);
  int64_t v24 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    sub_248016260(*(void *)(a1 + 48) + *(void *)(v6 + 72) * i, (uint64_t)v11);
    sub_248017EB4((uint64_t)v11, (uint64_t)v9);
    if (sub_24807929C((uint64_t)a2, *(void *)&v9[*(int *)(v5 + 28)]))
    {
      swift_release();
      uint64_t v22 = v23;
      sub_248017EB4((uint64_t)v9, v23);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v22, 0, 1, v5);
LABEL_26:

      return;
    }
    sub_2480162C4((uint64_t)v9);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v19 >= v24) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v19);
    ++v16;
    if (v20) {
      goto LABEL_20;
    }
    int64_t v16 = v19 + 1;
    if (v19 + 1 >= v24) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v16);
    if (v20) {
      goto LABEL_20;
    }
    int64_t v16 = v19 + 2;
    if (v19 + 2 >= v24) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v16);
    if (v20) {
      goto LABEL_20;
    }
    int64_t v16 = v19 + 3;
    if (v19 + 3 >= v24) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v16);
    if (v20) {
      goto LABEL_20;
    }
    int64_t v21 = v19 + 4;
    if (v21 >= v24)
    {
LABEL_25:
      swift_release();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v23, 1, 1, v5);
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v16 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          goto LABEL_28;
        }
        if (v16 >= v24) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v12 + 8 * v16);
        ++v21;
        if (v20) {
          goto LABEL_20;
        }
      }
    }
    int64_t v16 = v21;
LABEL_20:
    unint64_t v15 = (v20 - 1) & v20;
  }
  __break(1u);
LABEL_28:
  __break(1u);
}

void DiscoveryModel.flowKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *DiscoveryModel.flowKind.setter(unsigned char *result)
{
  *int v1 = *result;
  return result;
}

uint64_t (*DiscoveryModel.flowKind.modify())()
{
  return nullsub_1;
}

void DiscoveryModel.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t DiscoveryModel.targetAuthTag.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryModel.fixedPin.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void DiscoveryModel.codeType.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 40);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t DiscoveryModel.shouldSkipConfirmation.getter()
{
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t DiscoveryModel.altDSID.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryModel.altDSID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*DiscoveryModel.altDSID.modify())()
{
  return nullsub_1;
}

void DiscoveryModel.state.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 96);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 112);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  unsigned int v8 = *(unsigned __int8 *)(v1 + 120);
  *(unsigned char *)(a1 + 48) = v8;
  sub_247FE41AC(v2, v3, v4, v5, v6, v7, v8);
}

__n128 DiscoveryModel.state.setter(long long *a1)
{
  __n128 v6 = (__n128)a1[1];
  long long v7 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  sub_247FE51C8(*(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(unsigned __int8 *)(v1 + 120));
  *(_OWORD *)(v1 + 72) = v7;
  __n128 result = v6;
  *(__n128 *)(v1 + 88) = v6;
  *(void *)(v1 + 104) = v2;
  *(void *)(v1 + 112) = v3;
  *(unsigned char *)(v1 + 120) = v4;
  return result;
}

uint64_t (*DiscoveryModel.state.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.symptomReport.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[16];
  uint64_t v3 = v1[17];
  uint64_t v4 = v1[18];
  uint64_t v5 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_2480354C0(v2, v3);
}

__n128 DiscoveryModel.symptomReport.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  sub_247FE0708(v1[16], v1[17]);
  __n128 result = v5;
  *((__n128 *)v1 + 8) = v5;
  v1[18] = v2;
  v1[19] = v3;
  return result;
}

uint64_t (*DiscoveryModel.symptomReport.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryModel.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return result;
}

uint64_t (*DiscoveryModel.name.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.serverDeviceModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DiscoveryModel.serverDeviceModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = a2;
  return result;
}

uint64_t (*DiscoveryModel.serverDeviceModel.modify())()
{
  return nullsub_1;
}

BOOL static DiscoveryModel.FlowKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL static DiscoveryModel.Role.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DiscoveryModel.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  unsigned int v13 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v12 = *(void *)(v1 + 80);
  unsigned int v14 = *(unsigned __int8 *)(v1 + 120);
  uint64_t v15 = *(void *)(v1 + 72);
  uint64_t v16 = *(void *)(v1 + 136);
  uint64_t v11 = *(void *)(v1 + 128);
  uint64_t v10 = *(void *)(v1 + 152);
  uint64_t v7 = *(void *)(v1 + 168);
  uint64_t v17 = *(void *)(v1 + 184);
  sub_248175E70();
  sub_248175E70();
  sub_248175E80();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  sub_248175E80();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  if (v13 <= 1) {
    sub_248175E70();
  }
  sub_248175E70();
  sub_248175E80();
  sub_248175E80();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  int v8 = (v14 >> 3) & 3;
  if (!v8)
  {
    sub_248175E70();
    sub_248175E80();
    if ((v15 & 0xFF00) == 0x200) {
      goto LABEL_20;
    }
LABEL_19:
    sub_248175E80();
    goto LABEL_20;
  }
  if (v8 != 1)
  {
    sub_248175E70();
    if (v16) {
      goto LABEL_21;
    }
LABEL_16:
    sub_248175E80();
    if (v7) {
      goto LABEL_22;
    }
    goto LABEL_17;
  }
  sub_248175E70();
  swift_bridgeObjectRetain();
  sub_247FDE454(a1, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)a1, v12);
  swift_bridgeObjectRelease();
  if (v6 != 2) {
    goto LABEL_19;
  }
LABEL_20:
  sub_248175E80();
  DiscoveryModel.PairingState.hash(into:)((uint64_t)a1);
  if (!v16) {
    goto LABEL_16;
  }
LABEL_21:
  sub_248175E80();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  sub_247FDEDB8((uint64_t)a1, v10);
  sub_247FE0708(v11, v16);
  if (v7)
  {
LABEL_22:
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_23;
    }
    return sub_248175E80();
  }
LABEL_17:
  sub_248175E80();
  if (!v17) {
    return sub_248175E80();
  }
LABEL_23:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

unint64_t sub_248074AEC(char a1)
{
  unint64_t result = 0x646E694B776F6C66;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701605234;
      break;
    case 2:
      unint64_t result = 0x7541746567726174;
      break;
    case 3:
      unint64_t result = 0x6E69506465786966;
      break;
    case 4:
      unint64_t result = 0x6570795465646F63;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x44495344746C61;
      break;
    case 7:
      unint64_t result = 0x6574617473;
      break;
    case 8:
      unint64_t result = 0x526D6F74706D7973;
      break;
    case 9:
      unint64_t result = 1701667182;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_248074C4C()
{
  return sub_248074AEC(*v0);
}

uint64_t sub_248074C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24808230C(a1, a2);
  *a3 = result;
  return result;
}

void sub_248074C7C(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_248074C88(uint64_t a1)
{
  unint64_t v2 = sub_24807D9C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248074CC4(uint64_t a1)
{
  unint64_t v2 = sub_24807D9C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoveryModel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CC0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  int v48 = v1[1];
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v38 = *((void *)v1 + 2);
  uint64_t v39 = v8;
  uint64_t v9 = *((void *)v1 + 3);
  uint64_t v36 = *((void *)v1 + 4);
  uint64_t v37 = v9;
  uint64_t v34 = *((void *)v1 + 5);
  int v35 = v1[48];
  int v33 = v1[49];
  uint64_t v10 = *((void *)v1 + 8);
  uint64_t v31 = *((void *)v1 + 7);
  uint64_t v32 = v10;
  uint64_t v24 = *((void *)v1 + 9);
  uint64_t v25 = *((void *)v1 + 10);
  uint64_t v26 = *((void *)v1 + 11);
  uint64_t v11 = *((void *)v1 + 12);
  uint64_t v29 = *((void *)v1 + 13);
  uint64_t v30 = v11;
  uint64_t v28 = *((void *)v1 + 14);
  int v27 = v1[120];
  uint64_t v20 = *((void *)v1 + 16);
  uint64_t v21 = *((void *)v1 + 17);
  uint64_t v22 = *((void *)v1 + 18);
  uint64_t v23 = *((void *)v1 + 19);
  v19[1] = *((void *)v1 + 20);
  void v19[2] = *((void *)v1 + 21);
  uint64_t v12 = *((void *)v1 + 23);
  uint64_t v13 = a1[3];
  unsigned int v14 = a1;
  uint64_t v16 = v15;
  __swift_project_boxed_opaque_existential_1(v14, v13);
  sub_24807D9C0();
  sub_248175F60();
  LOBYTE(v41) = v7;
  char v49 = 0;
  sub_24807DA14();
  uint64_t v17 = v40;
  sub_248175BE0();
  if (!v17)
  {
    uint64_t v40 = v12;
    LOBYTE(v41) = v48;
    char v49 = 1;
    sub_24807DA68();
    sub_248175BE0();
    LOBYTE(v41) = 2;
    sub_248175B60();
    LOBYTE(v41) = 3;
    sub_248175B60();
    uint64_t v41 = v34;
    LOBYTE(v42) = v35;
    char v49 = 4;
    sub_24807DABC();
    sub_248175BE0();
    LOBYTE(v41) = 5;
    sub_248175BC0();
    LOBYTE(v41) = 6;
    sub_248175B60();
    uint64_t v41 = v24;
    uint64_t v42 = v25;
    uint64_t v43 = v26;
    uint64_t v44 = v30;
    uint64_t v45 = v29;
    uint64_t v46 = v28;
    char v47 = v27;
    char v49 = 7;
    sub_24807DB10();
    sub_248175BE0();
    uint64_t v41 = v20;
    uint64_t v42 = v21;
    uint64_t v43 = v22;
    uint64_t v44 = v23;
    char v49 = 8;
    sub_247FE0AEC();
    sub_248175B90();
    LOBYTE(v41) = 9;
    sub_248175B60();
    LOBYTE(v41) = 10;
    sub_248175B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
}

uint64_t DiscoveryModel.hashValue.getter()
{
  sub_248175E50();
  DiscoveryModel.hash(into:)(v1);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CF0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  int v72 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_24807D9C0();
  sub_248175F20();
  if (v2)
  {
    uint64_t v116 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    swift_bridgeObjectRelease();
    sub_247FE0708(0, v116);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v71 = v6;
    LOBYTE(v73) = 0;
    sub_24807DB64();
    sub_248175AF0();
    int v10 = v85;
    LOBYTE(v73) = 1;
    sub_24807DBB8();
    sub_248175AF0();
    int v11 = v85;
    LOBYTE(v85) = 2;
    uint64_t v61 = sub_248175A70();
    int v62 = v11;
    LOBYTE(v85) = 3;
    uint64_t v13 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_248175A70();
    uint64_t v70 = v13;
    uint64_t v60 = v14;
    LOBYTE(v73) = 4;
    uint64_t v16 = v15;
    sub_24807DC0C();
    swift_bridgeObjectRetain();
    sub_248175AF0();
    uint64_t v69 = v16;
    uint64_t v59 = v85;
    LODWORD(v16) = v86;
    LOBYTE(v85) = 5;
    int v55 = sub_248175AD0();
    int v57 = v16;
    int v58 = v10;
    uint64_t v56 = a2;
    LOBYTE(v85) = 6;
    uint64_t v17 = sub_248175A70();
    uint64_t v19 = v18;
    LOBYTE(v73) = 7;
    sub_24807DC60();
    swift_bridgeObjectRetain();
    sub_248175AF0();
    uint64_t v53 = v17;
    uint64_t v54 = v19;
    uint64_t v20 = v85;
    uint64_t v22 = v88;
    uint64_t v21 = v89;
    LODWORD(v17) = v90;
    LOBYTE(v73) = 8;
    long long v68 = v86;
    uint64_t v67 = v87;
    sub_247FE41AC(v85, v86, *((uint64_t *)&v86 + 1), v87, v88, v89, v90);
    sub_247FE0E2C();
    sub_248175AA0();
    unsigned int v66 = v17;
    uint64_t v63 = v22;
    uint64_t v64 = v21;
    uint64_t v65 = v20;
    uint64_t v23 = v85;
    LOBYTE(v85) = 9;
    uint64_t v24 = v23;
    uint64_t v52 = *((void *)&v86 + 1);
    uint64_t v116 = v86;
    uint64_t v25 = v87;
    sub_2480354C0(v23, v86);
    uint64_t v26 = sub_248175A70();
    uint64_t v28 = v27;
    char v111 = 10;
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_248175A70();
    uint64_t v30 = v29;
    v55 &= 1u;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v8, v5);
    uint64_t v50 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    LOBYTE(v73) = v58;
    BYTE1(v73) = v62;
    *((void *)&v73 + 1) = v61;
    *(void *)&long long v74 = v70;
    *((void *)&v74 + 1) = v60;
    *(void *)&long long v75 = v69;
    *((void *)&v75 + 1) = v59;
    LOBYTE(v76) = v57;
    BYTE1(v76) = v55;
    *((void *)&v76 + 1) = v53;
    *(void *)&long long v77 = v54;
    uint64_t v31 = v67;
    *((void *)&v77 + 1) = v65;
    long long v78 = v68;
    *(void *)&long long v79 = v67;
    *((void *)&v79 + 1) = v63;
    *(void *)&long long v80 = v64;
    BYTE8(v80) = v66;
    uint64_t v32 = v24;
    *(void *)&long long v81 = v24;
    uint64_t v47 = v24;
    uint64_t v33 = v116;
    *((void *)&v81 + 1) = v116;
    *(void *)&long long v82 = v52;
    *((void *)&v82 + 1) = v25;
    *(void *)&long long v83 = v26;
    uint64_t v48 = v25;
    uint64_t v49 = v26;
    *((void *)&v83 + 1) = v28;
    *(void *)&long long v84 = v51;
    *((void *)&v84 + 1) = v50;
    sub_24807DCB4((uint64_t)&v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FE0708(v32, v33);
    uint64_t v34 = v64;
    uint64_t v35 = v63;
    sub_247FE51C8(v65, v68, *((uint64_t *)&v68 + 1), v31, v63, v64, v66);
    uint64_t v36 = v70;
    swift_bridgeObjectRelease();
    uint64_t v37 = v69;
    swift_bridgeObjectRelease();
    uint64_t v38 = v54;
    swift_bridgeObjectRelease();
    long long v39 = v82;
    uint64_t v40 = v56;
    v56[8] = v81;
    v40[9] = v39;
    long long v41 = v84;
    v40[10] = v83;
    v40[11] = v41;
    long long v42 = v78;
    v40[4] = v77;
    v40[5] = v42;
    long long v43 = v80;
    v40[6] = v79;
    v40[7] = v43;
    long long v44 = v74;
    *uint64_t v40 = v73;
    v40[1] = v44;
    long long v45 = v76;
    v40[2] = v75;
    v40[3] = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    LOBYTE(v85) = v58;
    BYTE1(v85) = v62;
    *(_DWORD *)((char *)&v85 + 2) = v114;
    HIWORD(v85) = v115;
    *(void *)&long long v86 = v61;
    *((void *)&v86 + 1) = v36;
    uint64_t v87 = v60;
    uint64_t v88 = v37;
    uint64_t v89 = v59;
    unsigned __int8 v90 = v57;
    char v91 = v55;
    int v92 = *(_DWORD *)&v112[7];
    __int16 v93 = v113;
    uint64_t v94 = v53;
    uint64_t v95 = v38;
    uint64_t v96 = v65;
    long long v97 = v68;
    uint64_t v98 = v31;
    uint64_t v99 = v35;
    uint64_t v100 = v34;
    char v101 = v66;
    *(_DWORD *)&v102[3] = *(_DWORD *)&v112[3];
    *(_DWORD *)uint64_t v102 = *(_DWORD *)v112;
    uint64_t v103 = v47;
    uint64_t v104 = v116;
    uint64_t v105 = v52;
    uint64_t v106 = v48;
    uint64_t v107 = v49;
    uint64_t v108 = v28;
    uint64_t v109 = v51;
    uint64_t v110 = v50;
    return sub_24807DD90((uint64_t)&v85);
  }
}

uint64_t sub_248075B4C@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return DiscoveryModel.init(from:)(a1, a2);
}

uint64_t sub_248075B64(void *a1)
{
  return DiscoveryModel.encode(to:)(a1);
}

uint64_t sub_248075B80()
{
  sub_248175E50();
  DiscoveryModel.hash(into:)(v1);
  return sub_248175EC0();
}

uint64_t sub_248075BC4()
{
  sub_248175E50();
  DiscoveryModel.hash(into:)(v1);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.Role.hash(into:)()
{
  return sub_248175E70();
}

uint64_t sub_248075C2C(uint64_t a1)
{
  unint64_t v2 = sub_24807DF14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248075C68(uint64_t a1)
{
  unint64_t v2 = sub_24807DF14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248075CA4()
{
  if (*v0) {
    return 0x726576726573;
  }
  else {
    return 0x746E65696C63;
  }
}

uint64_t sub_248075CD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24808279C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248075CF8(uint64_t a1)
{
  unint64_t v2 = sub_24807DE6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248075D34(uint64_t a1)
{
  unint64_t v2 = sub_24807DE6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248075D70(uint64_t a1)
{
  unint64_t v2 = sub_24807DEC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248075DAC(uint64_t a1)
{
  unint64_t v2 = sub_24807DEC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoveryModel.Role.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D18);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D20);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D28);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807DE6C();
  sub_248175F60();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_24807DEC0();
    uint64_t v14 = v18;
    sub_248175B50();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_24807DF14();
    sub_248175B50();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t DiscoveryModel.Role.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t DiscoveryModel.Role.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D48);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D50);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D58);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807DE6C();
  int v11 = v32;
  sub_248175F20();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_248175B30();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_2481758A0();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *char v22 = &type metadata for DiscoveryModel.Role;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_24807DEC0();
    uint64_t v18 = v14;
    sub_248175A50();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_24807DF14();
    sub_248175A50();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_24807652C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DiscoveryModel.Role.init(from:)(a1, a2);
}

uint64_t sub_248076544(void *a1)
{
  return DiscoveryModel.Role.encode(to:)(a1);
}

uint64_t DiscoveryModel.FlowKind.hash(into:)()
{
  return sub_248175E70();
}

uint64_t sub_248076588()
{
  uint64_t v1 = 0x726961706572;
  if (*v0 != 1) {
    uint64_t v1 = 0x646578696DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7075746573;
  }
}

uint64_t sub_2480765D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248082880(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248076600(uint64_t a1)
{
  unint64_t v2 = sub_24807DF68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807663C(uint64_t a1)
{
  unint64_t v2 = sub_24807DF68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248076678(uint64_t a1)
{
  unint64_t v2 = sub_24807DFBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480766B4(uint64_t a1)
{
  unint64_t v2 = sub_24807DFBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480766F0(uint64_t a1)
{
  unint64_t v2 = sub_24807E010();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807672C(uint64_t a1)
{
  unint64_t v2 = sub_24807E010();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248076768(uint64_t a1)
{
  unint64_t v2 = sub_24807E064();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480767A4(uint64_t a1)
{
  unint64_t v2 = sub_24807E064();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoveryModel.FlowKind.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D60);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D68);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D70);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8D78);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807DF68();
  sub_248175F60();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_24807E010();
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_24807DFBC();
      char v17 = v23;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_24807E064();
    sub_248175B50();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t DiscoveryModel.FlowKind.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t DiscoveryModel.FlowKind.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8DA0);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8DA8);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8DB0);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8DB8);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807DF68();
  uint64_t v12 = (uint64_t)v39;
  sub_248175F20();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  long long v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_248175B30();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_2481758A0();
    swift_allocError();
    uint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v23 = &type metadata for DiscoveryModel.FlowKind;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_24807E010();
      uint64_t v18 = v30;
      sub_248175A50();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_24807DFBC();
      uint64_t v25 = v30;
      sub_248175A50();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_24807E064();
    uint64_t v24 = v30;
    sub_248175A50();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  unsigned char *v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_248077144@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DiscoveryModel.FlowKind.init(from:)(a1, a2);
}

uint64_t sub_24807715C(void *a1)
{
  return DiscoveryModel.FlowKind.encode(to:)(a1);
}

uint64_t DiscoveryModel.State.hash(into:)(long long *a1)
{
  uint64_t v4 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  int v6 = (*(unsigned __int8 *)(v1 + 48) >> 3) & 3;
  if (!v6)
  {
    sub_248175E70();
    sub_248175E80();
    if ((v4 & 0xFF00) == 0x200) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v6 != 1) {
    return sub_248175E70();
  }
  sub_248175E70();
  swift_bridgeObjectRetain();
  sub_247FDE454(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)a1, v3);
  swift_bridgeObjectRelease();
  if (v5 != 2) {
LABEL_8:
  }
    sub_248175E80();
LABEL_9:
  sub_248175E80();
  return DiscoveryModel.PairingState.hash(into:)((uint64_t)a1);
}

uint64_t sub_2480772D4()
{
  uint64_t v1 = 0x646572696170;
  if (*v0 == 1) {
    uint64_t v1 = 0x7265766F63736964;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7265766F63736964;
  }
}

uint64_t sub_248077328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480829C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248077350(uint64_t a1)
{
  unint64_t v2 = sub_24807E0B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807738C(uint64_t a1)
{
  unint64_t v2 = sub_24807E0B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480773C8(uint64_t a1)
{
  unint64_t v2 = sub_24807E160();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248077404(uint64_t a1)
{
  unint64_t v2 = sub_24807E160();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248077440(uint64_t a1)
{
  unint64_t v2 = sub_24807E208();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807747C(uint64_t a1)
{
  unint64_t v2 = sub_24807E208();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480774B8(uint64_t a1)
{
  unint64_t v2 = sub_24807E10C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480774F4(uint64_t a1)
{
  unint64_t v2 = sub_24807E10C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void DiscoveryModel.State.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8DC0);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  long long v43 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8DC8);
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8DD0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8DD8);
  uint64_t v55 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  int v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void *)v1;
  uint64_t v12 = *(void *)(v1 + 8);
  uint64_t v14 = *(void *)(v1 + 24);
  uint64_t v52 = *(void *)(v1 + 16);
  uint64_t v53 = v14;
  uint64_t v51 = *(void *)(v1 + 32);
  uint64_t v54 = *(void *)(v1 + 40);
  unsigned int v15 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807E0B8();
  unsigned int v16 = v15;
  sub_248175F60();
  int v17 = (v15 >> 3) & 3;
  if (!v17)
  {
    uint64_t v50 = v13 >> 8;
    char v32 = v13;
    uint64_t v42 = v13;
    LOBYTE(v56) = 0;
    uint64_t v33 = v12;
    uint64_t v34 = v12;
    uint64_t v41 = v12;
    uint64_t v36 = v52;
    uint64_t v35 = v53;
    uint64_t v37 = v51;
    sub_247FE4250(v34, v52, v53, v51);
    sub_24807E208();
    sub_248175B50();
    LOBYTE(v56) = v32 & 1;
    BYTE1(v56) = v50;
    uint64_t v57 = v33;
    uint64_t v58 = v36;
    uint64_t v59 = v35;
    LOBYTE(v60) = v37;
    sub_24807E25C();
    uint64_t v38 = v45;
    sub_248175BE0();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v38);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v63);
    uint64_t v26 = v42;
    uint64_t v27 = v41;
    uint64_t v28 = v36;
    uint64_t v29 = v35;
    uint64_t v30 = v37;
    uint64_t v31 = v54;
    goto LABEL_5;
  }
  if (v17 == 1)
  {
    char v18 = v15 & 0xE7;
    LOBYTE(v56) = 1;
    unint64_t v19 = v13;
    uint64_t v42 = v13;
    swift_bridgeObjectRetain();
    uint64_t v41 = v12;
    swift_bridgeObjectRetain();
    uint64_t v20 = v53;
    uint64_t v21 = v51;
    sub_247FE4250(v53, v51, v54, v16 & 0xE7);
    sub_24807E160();
    uint64_t v22 = v48;
    sub_248175B50();
    unint64_t v56 = v19;
    uint64_t v57 = v12;
    uint64_t v23 = v52;
    LOBYTE(v58) = v52;
    uint64_t v59 = v20;
    uint64_t v60 = v21;
    uint64_t v24 = v54;
    uint64_t v61 = v54;
    char v62 = v18;
    sub_24807E1B4();
    uint64_t v25 = v50;
    sub_248175BE0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v22, v25);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v63);
    uint64_t v26 = v42;
    uint64_t v27 = v41;
    uint64_t v28 = v23;
    uint64_t v29 = v53;
    uint64_t v30 = v21;
    uint64_t v31 = v24;
LABEL_5:
    sub_247FE51C8(v26, v27, v28, v29, v30, v31, v16);
    return;
  }
  LOBYTE(v56) = 2;
  sub_24807E10C();
  long long v39 = v43;
  uint64_t v40 = v63;
  sub_248175B50();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v47);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v40);
}

uint64_t DiscoveryModel.State.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 48);
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  *(_OWORD *)&v4[11] = v2;
  *(_OWORD *)&v4[13] = *(_OWORD *)(v0 + 32);
  char v5 = v1;
  sub_248175E50();
  DiscoveryModel.State.hash(into:)((long long *)v4);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.State.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E10);
  uint64_t v44 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  long long v43 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E18);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E20);
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E28);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24807E0B8();
  uint64_t v16 = v52;
  sub_248175F20();
  if (v16) {
    goto LABEL_9;
  }
  uint64_t v37 = v8;
  int v17 = v43;
  uint64_t v18 = v44;
  uint64_t v52 = v12;
  uint64_t v19 = sub_248175B30();
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v27 = sub_2481758A0();
    swift_allocError();
    uint64_t v28 = v14;
    uint64_t v29 = v11;
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v31 = &type metadata for DiscoveryModel.State;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v29);
LABEL_9:
    uint64_t v35 = (uint64_t)v45;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  if (*(unsigned char *)(v19 + 32))
  {
    if (*(unsigned char *)(v19 + 32) == 1)
    {
      LOBYTE(v46) = 1;
      sub_24807E160();
      sub_248175A50();
      sub_24807E2B0();
      uint64_t v20 = v40;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v20);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v11);
      unint64_t v22 = v46;
      uint64_t v21 = v47;
      uint64_t v23 = v48;
      uint64_t v24 = v49;
      long long v25 = v50;
      char v26 = v51 | 8;
    }
    else
    {
      LOBYTE(v46) = 2;
      sub_24807E10C();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v11);
      unint64_t v22 = 0;
      uint64_t v21 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      long long v25 = 0uLL;
      char v26 = 16;
    }
    uint64_t v35 = (uint64_t)v45;
    uint64_t v33 = v42;
  }
  else
  {
    LOBYTE(v46) = 0;
    sub_24807E208();
    char v32 = v10;
    sub_248175A50();
    uint64_t v33 = v42;
    sub_24807E304();
    uint64_t v34 = v37;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v34);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v11);
    char v26 = 0;
    uint64_t v21 = v47;
    uint64_t v23 = v48;
    uint64_t v24 = v49;
    unint64_t v22 = v46 | ((unint64_t)BYTE1(v46) << 8);
    long long v25 = v50;
    uint64_t v35 = (uint64_t)v45;
  }
  *(void *)uint64_t v33 = v22;
  *(void *)(v33 + 8) = v21;
  *(void *)(v33 + 16) = v23;
  *(void *)(v33 + 24) = v24;
  *(_OWORD *)(v33 + 32) = v25;
  *(unsigned char *)(v33 + 48) = v26;
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

uint64_t sub_2480780F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.State.init(from:)(a1, a2);
}

void sub_248078108(void *a1)
{
}

uint64_t sub_248078124()
{
  char v1 = *(unsigned char *)(v0 + 48);
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  *(_OWORD *)&v4[11] = v2;
  *(_OWORD *)&v4[13] = *(_OWORD *)(v0 + 32);
  char v5 = v1;
  sub_248175E50();
  DiscoveryModel.State.hash(into:)((long long *)v4);
  return sub_248175EC0();
}

uint64_t sub_248078184()
{
  char v1 = *(unsigned char *)(v0 + 48);
  long long v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  *(_OWORD *)&v4[11] = v2;
  *(_OWORD *)&v4[13] = *(_OWORD *)(v0 + 32);
  char v5 = v1;
  sub_248175E50();
  DiscoveryModel.State.hash(into:)((long long *)v4);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.Discovering.allowsManual.getter()
{
  return *v0;
}

uint64_t DiscoveryModel.Discovering.selectedManual.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t DiscoveryModel.Discovering.selectedManual.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*DiscoveryModel.Discovering.selectedManual.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.Discovering.pairingState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 24) = v5;
  return sub_247FE4250(v2, v3, v4, v5);
}

__n128 DiscoveryModel.Discovering.pairingState.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  sub_247FE526C(*(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  __n128 result = v5;
  *(__n128 *)(v1 + 8) = v5;
  *(void *)(v1 + 24) = v2;
  *(unsigned char *)(v1 + 32) = v3;
  return result;
}

uint64_t (*DiscoveryModel.Discovering.pairingState.modify())()
{
  return nullsub_1;
}

BOOL static DiscoveryModel.PairingState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5 >> 5)
  {
    case 1u:
      if ((v9 & 0xE0) != 0x20) {
        goto LABEL_39;
      }
      int v14 = *(void *)(a2 + 8);
      sub_247FE526C(*(void *)a1, v3, v4, v5);
      sub_247FE526C(v6, v7, v8, v9);
      if ((_BYTE)v3)
      {
        if (v3 == 1)
        {
          if (v14 == 1 && v2 == v6) {
            return 1;
          }
        }
        else if (v2)
        {
          if (v2 == 1)
          {
            if (v14 == 2 && v6 == 1) {
              return 1;
            }
          }
          else if (v14 == 2 && v6 == 2)
          {
            return 1;
          }
        }
        else if (v14 == 2 && !v6)
        {
          return 1;
        }
      }
      else
      {
        if (v14) {
          BOOL v34 = 0;
        }
        else {
          BOOL v34 = v2 == v6;
        }
        if (v34) {
          return 1;
        }
      }
      return 0;
    case 2u:
      if ((v9 & 0xE0) != 0x40) {
        goto LABEL_37;
      }
      uint64_t v16 = *(void *)a1;
      if (v2 == v6 && v3 == v7)
      {
        sub_247FE4250(v16, v3, v8, v9);
        sub_247FE4250(v2, v3, v4, v5);
        sub_247FE526C(v2, v3, v4, v5);
        sub_247FE526C(v2, v3, v8, v9);
      }
      else
      {
        char v18 = sub_248175CE0();
        sub_247FE4250(v6, v7, v8, v9);
        sub_247FE4250(v2, v3, v4, v5);
        sub_247FE526C(v2, v3, v4, v5);
        sub_247FE526C(v6, v7, v8, v9);
        BOOL result = 0;
        if ((v18 & 1) == 0) {
          return result;
        }
      }
      int v31 = v9 & 0x1F;
      if ((v5 & 0x1F) == 0)
      {
        if ((v9 & 0x1F) != 0) {
          return 0;
        }
        return v4 == v8;
      }
      if ((v5 & 0x1F) == 1)
      {
        if (v31 == 1) {
          return v4 == v8;
        }
        return 0;
      }
      if (!v4)
      {
        if (v31 != 2) {
          return 0;
        }
        goto LABEL_94;
      }
      if (v4 == 1)
      {
        if (v31 != 2) {
          return 0;
        }
        goto LABEL_79;
      }
      if (v31 != 2) {
        return 0;
      }
      goto LABEL_97;
    case 3u:
      if ((v9 & 0xE0) != 0x60)
      {
        swift_retain();
        goto LABEL_39;
      }
      uint64_t v20 = *(void *)(v2 + 16);
      uint64_t v19 = *(void *)(v2 + 24);
      uint64_t v21 = *(void *)(v2 + 32);
      unsigned int v22 = *(unsigned __int8 *)(v2 + 40);
      uint64_t v43 = *(void *)(v6 + 16);
      uint64_t v45 = v21;
      uint64_t v23 = *(void *)(v6 + 24);
      uint64_t v24 = *(void *)(v6 + 32);
      unsigned int v25 = *(unsigned __int8 *)(v6 + 40);
      uint64_t v41 = v20;
      uint64_t v42 = v19;
      unsigned __int8 v40 = *(unsigned char *)(v2 + 40);
      if (v22 <= 0xFB)
      {
        v48[0] = *(void *)(v2 + 16);
        v48[1] = v19;
        v48[2] = v21;
        char v49 = v22;
        if (v25 > 0xFB)
        {
          uint64_t v38 = v24;
          uint64_t v39 = v23;
          uint64_t v32 = v20;
          char v37 = v25;
          unsigned __int8 v33 = v22;
          sub_24807E358(v20, v19, v21, v22);
          sub_247FE4250(v6, v7, v8, v9);
          sub_247FE4250(v2, v3, v4, v5);
          sub_24807E358(v32, v42, v45, v33);
          sub_247FE526C(v41, v42, v45, v33);
          LOBYTE(v25) = v37;
          goto LABEL_55;
        }
        v46[0] = v43;
        v46[1] = v23;
        v46[2] = v24;
        char v47 = v25;
        uint64_t v35 = v20;
        uint64_t v36 = v19;
        sub_24807E358(v20, v19, v21, v22);
        sub_247FE4250(v6, v7, v8, v9);
        sub_247FE4250(v2, v3, v4, v5);
        sub_24807E358(v35, v36, v45, v40);
        char v44 = static DiscoveryModel.PairingState.== infix(_:_:)(v48, v46);
        sub_247FE526C(v35, v36, v45, v40);
        sub_24807E36C(v41, v42, v45, v40);
        sub_247FE526C(v2, v3, v4, v5);
        sub_247FE526C(v6, v7, v8, v9);
        return (v44 & 1) != 0;
      }
      uint64_t v38 = *(void *)(v6 + 32);
      uint64_t v39 = *(void *)(v6 + 24);
      sub_247FE4250(v6, v7, v8, v9);
      sub_247FE4250(v2, v3, v4, v5);
      if (v25 <= 0xFB)
      {
LABEL_55:
        sub_24807E358(v43, v39, v38, v25);
        sub_24807E36C(v41, v42, v45, v40);
        sub_24807E36C(v43, v39, v38, v25);
        goto LABEL_40;
      }
      sub_247FE526C(v2, v3, v4, v5);
      uint64_t v26 = v6;
      uint64_t v27 = v7;
      uint64_t v28 = v8;
      unsigned __int8 v29 = v9;
LABEL_36:
      sub_247FE526C(v26, v27, v28, v29);
      return 1;
    case 4u:
      BOOL v30 = (v9 & 0xE0) == 0x80 && (v7 | v6 | v8) == 0;
      if (!v30 || v9 != 128) {
        goto LABEL_39;
      }
      sub_247FE526C(*(void *)a1, v3, v4, v5);
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      unsigned __int8 v29 = 0x80;
      goto LABEL_36;
    default:
      if (v9 >= 0x20)
      {
LABEL_37:
        swift_bridgeObjectRetain();
LABEL_39:
        sub_247FE4250(v6, v7, v8, v9);
LABEL_40:
        sub_247FE526C(v2, v3, v4, v5);
        sub_247FE526C(v6, v7, v8, v9);
        return 0;
      }
      uint64_t v10 = *(void *)a1;
      if (v2 == v6 && v3 == v7)
      {
        sub_247FE4250(v10, v3, v8, v9);
        sub_247FE4250(v2, v3, v4, v5);
        sub_247FE526C(v2, v3, v4, v5);
        sub_247FE526C(v2, v3, v8, v9);
      }
      else
      {
        char v12 = sub_248175CE0();
        sub_247FE4250(v6, v7, v8, v9);
        sub_247FE4250(v2, v3, v4, v5);
        sub_247FE526C(v2, v3, v4, v5);
        sub_247FE526C(v6, v7, v8, v9);
        BOOL result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
      if (v5)
      {
        if (v5 != 1)
        {
          if (v4)
          {
            if (v4 == 1)
            {
              if (v9 != 2) {
                return 0;
              }
LABEL_79:
              if (v8 == 1) {
                return 1;
              }
            }
            else
            {
              if (v9 != 2) {
                return 0;
              }
LABEL_97:
              if (v8 == 2) {
                return 1;
              }
            }
          }
          else
          {
            if (v9 != 2) {
              return 0;
            }
LABEL_94:
            if (!v8) {
              return 1;
            }
          }
          return 0;
        }
        if (v9 != 1) {
          return 0;
        }
      }
      else if (v9)
      {
        return 0;
      }
      return v4 == v8;
  }
}

uint64_t DiscoveryModel.Discovering.hash(into:)(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 1);
  sub_248175E80();
  if (v3 != 2) {
    sub_248175E80();
  }
  sub_248175E80();
  return DiscoveryModel.PairingState.hash(into:)(a1);
}

uint64_t sub_2480789DC()
{
  uint64_t v1 = 0x64657463656C6573;
  if (*v0 != 1) {
    uint64_t v1 = 0x53676E6972696170;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x614D73776F6C6C61;
  }
}

uint64_t sub_248078A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248082B2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248078A7C(uint64_t a1)
{
  unint64_t v2 = sub_24807E380();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248078AB8(uint64_t a1)
{
  unint64_t v2 = sub_24807E380();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoveryModel.Discovering.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E40);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *(unsigned __int8 *)(v1 + 1);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v16 = *(void *)(v1 + 16);
  uint64_t v17 = v8;
  uint64_t v15 = *(void *)(v1 + 24);
  HIDWORD(v14) = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807E380();
  sub_248175F60();
  LOBYTE(v18) = 0;
  sub_248175BC0();
  if (!v2)
  {
    char v9 = BYTE4(v14);
    uint64_t v11 = v15;
    uint64_t v10 = v16;
    uint64_t v12 = v17;
    LOBYTE(v18) = 1;
    sub_248175B70();
    uint64_t v18 = v12;
    uint64_t v19 = v10;
    uint64_t v20 = v11;
    char v21 = v9;
    char v23 = 2;
    sub_24807E3D4();
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DiscoveryModel.Discovering.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 1);
  sub_248175E50();
  sub_248175E80();
  if (v1 != 2) {
    sub_248175E80();
  }
  sub_248175E80();
  DiscoveryModel.PairingState.hash(into:)((uint64_t)v3);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.Discovering.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807E380();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v17[0]) = 0;
  char v9 = sub_248175AD0();
  LOBYTE(v17[0]) = 1;
  char v10 = sub_248175A80();
  char v19 = 2;
  sub_24807E428();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v11 = v9 & 1;
  uint64_t v12 = v17[0];
  uint64_t v13 = v17[1];
  uint64_t v14 = v17[2];
  unsigned __int8 v15 = v18;
  *(unsigned char *)a2 = v11;
  *(unsigned char *)(a2 + 1) = v10;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = v15;
  sub_247FE4250(v12, v13, v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_247FE526C(v12, v13, v14, v15);
}

uint64_t sub_248078FB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.Discovering.init(from:)(a1, a2);
}

uint64_t sub_248078FC8(void *a1)
{
  return DiscoveryModel.Discovering.encode(to:)(a1);
}

uint64_t sub_248078FE8(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 1);
  sub_248175E80();
  if (v3 != 2) {
    sub_248175E80();
  }
  sub_248175E80();
  return DiscoveryModel.PairingState.hash(into:)(a1);
}

uint64_t sub_248079088()
{
  int v1 = *(unsigned __int8 *)(v0 + 1);
  sub_248175E50();
  sub_248175E80();
  if (v1 != 2) {
    sub_248175E80();
  }
  sub_248175E80();
  DiscoveryModel.PairingState.hash(into:)((uint64_t)v3);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.Discovered.accounts.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DiscoveryModel.Discovered.services.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DiscoveryModel.Discovered.connectionDecision.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DiscoveryModel.Discovered.connectionDecision.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*DiscoveryModel.Discovered.connectionDecision.modify())()
{
  return nullsub_1;
}

uint64_t DiscoveryModel.Discovered.pairingState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  unsigned __int8 v5 = *(unsigned char *)(v1 + 48);
  *(unsigned char *)(a1 + 24) = v5;
  return sub_247FE4250(v2, v3, v4, v5);
}

__n128 DiscoveryModel.Discovered.pairingState.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  sub_247FE526C(*(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
  __n128 result = v5;
  *(__n128 *)(v1 + 24) = v5;
  *(void *)(v1 + 40) = v2;
  *(unsigned char *)(v1 + 48) = v3;
  return result;
}

uint64_t (*DiscoveryModel.Discovered.pairingState.modify())()
{
  return nullsub_1;
}

__n128 DiscoveryModel.Discovered.init(accounts:services:connectionDecision:pairingState:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, __n128 *a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v5 = a4[1].n128_u64[0];
  unsigned __int8 v6 = a4[1].n128_u8[8];
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  __n128 result = *a4;
  *(__n128 *)(a5 + 24) = *a4;
  *(void *)(a5 + 40) = v5;
  *(unsigned char *)(a5 + 48) = v6;
  return result;
}

uint64_t DiscoveryModel.Discovered.account(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = a1;
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_248074054(v4, v3, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24807929C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_248175160();
    sub_248175E50();
    sub_2481751A0();
    uint64_t v3 = sub_248175EC0();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = sub_248175160();
      uint64_t v9 = v8;
      if (v7 == sub_248175160() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = sub_248175CE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = sub_248175160();
          uint64_t v17 = v16;
          if (v15 == sub_248175160() && v17 == v18) {
            break;
          }
          char v20 = sub_248175CE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t DiscoveryModel.Discovered.hash(into:)(long long *a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  int v5 = *(unsigned __int8 *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_247FDE454(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)a1, v4);
  swift_bridgeObjectRelease();
  if (v5 != 2) {
    sub_248175E80();
  }
  sub_248175E80();
  return DiscoveryModel.PairingState.hash(into:)((uint64_t)a1);
}

unint64_t sub_24807953C()
{
  unint64_t result = 0x73746E756F636361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x7365636976726573;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x53676E6972696170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480795D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248082CD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480795FC(uint64_t a1)
{
  unint64_t v2 = sub_24807E47C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248079638(uint64_t a1)
{
  unint64_t v2 = sub_24807E47C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoveryModel.Discovered.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E68);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  int v25 = *((unsigned __int8 *)v1 + 16);
  uint64_t v19 = v1[3];
  uint64_t v20 = v8;
  uint64_t v10 = v1[4];
  uint64_t v17 = v1[5];
  uint64_t v18 = v10;
  int v16 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807E47C();
  sub_248175F60();
  uint64_t v21 = v9;
  char v26 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E78);
  sub_24807E4D0(&qword_2692D8E80, &qword_2692D5098);
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v12 = v17;
    uint64_t v11 = v18;
    uint64_t v13 = v19;
    uint64_t v21 = v20;
    char v26 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
    sub_24807E564((unint64_t *)&qword_2692D67E0, &qword_2692D50D0);
    sub_248175BE0();
    LOBYTE(v21) = 2;
    sub_248175B70();
    uint64_t v21 = v13;
    uint64_t v22 = v11;
    uint64_t v23 = v12;
    char v24 = v16;
    char v26 = 3;
    sub_24807E3D4();
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DiscoveryModel.Discovered.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_247FDE454(v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (v3 != 2) {
    sub_248175E80();
  }
  sub_248175E80();
  DiscoveryModel.PairingState.hash(into:)((uint64_t)v5);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.Discovered.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807E47C();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E78);
  char v24 = 0;
  sub_24807E4D0(&qword_2692D8E90, &qword_2692D50E0);
  sub_248175AF0();
  uint64_t v9 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
  char v24 = 1;
  sub_24807E564((unint64_t *)&qword_2692D6858, &qword_2692D5100);
  swift_bridgeObjectRetain();
  sub_248175AF0();
  uint64_t v18 = v9;
  uint64_t v10 = v19;
  LOBYTE(v19) = 2;
  swift_bridgeObjectRetain();
  int v23 = sub_248175A80();
  char v24 = 3;
  sub_24807E428();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  unsigned __int8 v14 = v22;
  uint64_t v15 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE4250(v11, v12, v13, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  *(void *)(a2 + 40) = v13;
  *(unsigned char *)(a2 + 48) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_247FE526C(v11, v12, v13, v14);
}

uint64_t sub_248079DFC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.Discovered.init(from:)(a1, a2);
}

uint64_t sub_248079E14(void *a1)
{
  return DiscoveryModel.Discovered.encode(to:)(a1);
}

uint64_t sub_248079E38()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_247FDE454(v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (v3 != 2) {
    sub_248175E80();
  }
  sub_248175E80();
  DiscoveryModel.PairingState.hash(into:)((uint64_t)v5);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.PairingState.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v1 + 24);
  switch(v3 >> 5)
  {
    case 1u:
      sub_248175E70();
      if (v2 > 1u) {
        return sub_248175E70();
      }
      goto LABEL_12;
    case 2u:
      sub_248175E70();
      sub_2481751A0();
      if ((v3 & 0x1F) >= 2) {
        return sub_248175E70();
      }
      goto LABEL_12;
    case 3u:
      unsigned int v5 = *(unsigned __int8 *)(*(void *)v1 + 40);
      sub_248175E70();
      if (v5 > 0xFB) {
        return sub_248175E80();
      }
      sub_248175E80();
      return DiscoveryModel.PairingState.hash(into:)(a1);
    case 4u:
      return sub_248175E70();
    default:
      sub_248175E70();
      sub_2481751A0();
      if (v3 <= 1) {
LABEL_12:
      }
        sub_248175E70();
      return sub_248175E70();
  }
}

uint64_t sub_24807A0C4(uint64_t a1)
{
  unint64_t v2 = sub_24807E6E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807A100(uint64_t a1)
{
  unint64_t v2 = sub_24807E6E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807A13C(uint64_t a1)
{
  unint64_t v2 = sub_24807E73C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807A178(uint64_t a1)
{
  unint64_t v2 = sub_24807E73C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807A1B4(uint64_t a1)
{
  unint64_t v2 = sub_24807E694();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807A1F0(uint64_t a1)
{
  unint64_t v2 = sub_24807E694();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807A22C()
{
  uint64_t result = 0x7472617453746F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 2003789939;
      break;
    case 2:
      uint64_t result = 7041889;
      break;
    case 3:
      uint64_t result = 0x6465726577736E61;
      break;
    case 4:
      uint64_t result = 0x656C6C65636E6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24807A2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248082EA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24807A2F8(uint64_t a1)
{
  unint64_t v2 = sub_24807E640();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807A334(uint64_t a1)
{
  unint64_t v2 = sub_24807E640();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807A370(uint64_t a1)
{
  unint64_t v2 = sub_24807E7E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807A3AC(uint64_t a1)
{
  unint64_t v2 = sub_24807E7E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807A3E8(uint64_t a1)
{
  unint64_t v2 = sub_24807E790();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807A424(uint64_t a1)
{
  unint64_t v2 = sub_24807E790();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoveryModel.PairingState.encode(to:)(void *a1)
{
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8E98);
  uint64_t v44 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v52 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8EA0);
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x270FA5388](v4);
  char v51 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8EA8);
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v6);
  unint64_t v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8EB0);
  uint64_t v43 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  char v47 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8EB8);
  uint64_t v45 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8EC0);
  uint64_t v57 = *(void *)(v12 - 8);
  uint64_t v58 = v12;
  MEMORY[0x270FA5388](v12);
  unsigned __int8 v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)v1;
  uint64_t v56 = *(void *)(v1 + 8);
  uint64_t v42 = *(void *)(v1 + 16);
  unsigned int v16 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807E640();
  uint64_t v17 = v14;
  sub_248175F60();
  switch(v16 >> 5)
  {
    case 1u:
      LOBYTE(v60) = 2;
      sub_24807E73C();
      char v24 = v46;
      uint64_t v25 = v58;
      sub_248175B50();
      uint64_t v60 = v15;
      LOBYTE(v61) = v56;
      sub_24807DABC();
      uint64_t v26 = v49;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v26);
      uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v57 + 8);
      uint64_t v28 = v17;
      goto LABEL_9;
    case 2u:
      LOBYTE(v60) = 3;
      sub_24807E6E8();
      unsigned __int8 v29 = v51;
      uint64_t v25 = v58;
      sub_248175B50();
      LOBYTE(v60) = 0;
      uint64_t v30 = v54;
      uint64_t v31 = v59;
      sub_248175BB0();
      if (!v31)
      {
        uint64_t v60 = v42;
        LOBYTE(v61) = v16 & 0x1F;
        char v64 = 1;
        sub_24807DABC();
        sub_248175BE0();
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v29, v30);
      uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v57 + 8);
      uint64_t v28 = v14;
LABEL_9:
      uint64_t result = v27(v28, v25);
      break;
    case 3u:
      uint64_t v33 = *(void *)(v15 + 16);
      uint64_t v32 = *(void *)(v15 + 24);
      uint64_t v34 = *(void *)(v15 + 32);
      unsigned __int8 v35 = *(unsigned char *)(v15 + 40);
      LOBYTE(v60) = 4;
      sub_24807E358(v33, v32, v34, v35);
      sub_24807E694();
      uint64_t v36 = v52;
      uint64_t v37 = v58;
      uint64_t v38 = v17;
      sub_248175B50();
      uint64_t v56 = v33;
      uint64_t v60 = v33;
      uint64_t v61 = v32;
      uint64_t v62 = v34;
      unsigned __int8 v63 = v35;
      sub_24807E3D4();
      uint64_t v39 = v55;
      sub_248175B90();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v39);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v37);
      uint64_t result = sub_24807E36C(v56, v32, v34, v35);
      break;
    case 4u:
      LOBYTE(v60) = 0;
      sub_24807E7E4();
      uint64_t v40 = v58;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v9);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v14, v40);
      break;
    default:
      LOBYTE(v60) = 1;
      sub_24807E790();
      uint64_t v18 = v47;
      uint64_t v19 = v58;
      uint64_t v20 = v17;
      sub_248175B50();
      LOBYTE(v60) = 0;
      uint64_t v21 = v50;
      uint64_t v22 = v59;
      sub_248175BB0();
      if (!v22)
      {
        uint64_t v60 = v42;
        LOBYTE(v61) = v16;
        char v64 = 1;
        sub_24807DABC();
        sub_248175BE0();
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v20, v19);
      break;
  }
  return result;
}

uint64_t DiscoveryModel.PairingState.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_248175E50();
  DiscoveryModel.PairingState.hash(into:)((uint64_t)v4);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.PairingState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8EF8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v62 = v3;
  uint64_t v63 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v69 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F00);
  uint64_t v64 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  long long v68 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F08);
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v67 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F10);
  uint64_t v65 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F18);
  uint64_t v58 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F20);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v70 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_24807E640();
  uint64_t v19 = v71;
  sub_248175F20();
  if (v19) {
    goto LABEL_19;
  }
  uint64_t v56 = v11;
  uint64_t v71 = 0;
  uint64_t v21 = v67;
  uint64_t v20 = v68;
  uint64_t v22 = v69;
  uint64_t v23 = sub_248175B30();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v30 = v14;
    uint64_t v31 = v17;
    uint64_t v32 = sub_2481758A0();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    void *v34 = &type metadata for DiscoveryModel.PairingState;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v30);
LABEL_19:
    uint64_t v54 = (uint64_t)v70;
    return __swift_destroy_boxed_opaque_existential_1(v54);
  }
  switch(*(unsigned char *)(v23 + 32))
  {
    case 1:
      LOBYTE(v72) = 1;
      sub_24807E790();
      uint64_t v24 = v14;
      uint64_t v35 = v71;
      sub_248175A50();
      if (v35) {
        goto LABEL_11;
      }
      uint64_t v41 = v17;
      LOBYTE(v72) = 0;
      uint64_t v42 = v57;
      uint64_t v43 = sub_248175AC0();
      uint64_t v27 = v49;
      uint64_t v50 = v10;
      uint64_t v26 = v43;
      char v74 = 1;
      sub_24807DC0C();
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v50, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v41, v24);
      uint64_t v28 = v72;
      char v29 = v73;
      goto LABEL_21;
    case 2:
      LOBYTE(v72) = 2;
      sub_24807E73C();
      uint64_t v24 = v14;
      uint64_t v36 = v71;
      sub_248175A50();
      if (v36) {
        goto LABEL_11;
      }
      sub_24807DC0C();
      uint64_t v37 = v61;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v21, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      uint64_t v28 = 0;
      uint64_t v26 = v72;
      uint64_t v27 = v73;
      char v29 = 32;
      goto LABEL_21;
    case 3:
      LOBYTE(v72) = 3;
      sub_24807E6E8();
      uint64_t v38 = v20;
      uint64_t v39 = v71;
      sub_248175A50();
      if (v39) {
        goto LABEL_13;
      }
      uint64_t v71 = v14;
      uint64_t v44 = v17;
      LOBYTE(v72) = 0;
      uint64_t v45 = v59;
      uint64_t v46 = sub_248175AC0();
      uint64_t v27 = v51;
      uint64_t v52 = v46;
      char v74 = 1;
      sub_24807DC0C();
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v44, v71);
      uint64_t v28 = v72;
      char v29 = v73 | 0x40;
      uint64_t v54 = (uint64_t)v70;
      uint64_t v55 = v66;
      uint64_t v26 = v52;
      goto LABEL_22;
    case 4:
      LOBYTE(v72) = 4;
      sub_24807E694();
      uint64_t v40 = v71;
      sub_248175A50();
      if (v40)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        goto LABEL_19;
      }
      uint64_t v71 = v14;
      char v47 = v17;
      uint64_t v26 = swift_allocObject();
      sub_24807E428();
      uint64_t v48 = v62;
      sub_248175AA0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v22, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v47, v71);
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      char v29 = 96;
      goto LABEL_21;
    default:
      LOBYTE(v72) = 0;
      sub_24807E7E4();
      uint64_t v24 = v14;
      uint64_t v25 = v71;
      sub_248175A50();
      if (v25)
      {
LABEL_11:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v24);
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      char v29 = 0x80;
LABEL_21:
      uint64_t v54 = (uint64_t)v70;
      uint64_t v55 = v66;
LABEL_22:
      *(void *)uint64_t v55 = v26;
      *(void *)(v55 + 8) = v27;
      *(void *)(v55 + 16) = v28;
      *(unsigned char *)(v55 + 24) = v29;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v54);
}

uint64_t sub_24807B6C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.PairingState.init(from:)(a1, a2);
}

uint64_t sub_24807B6D8(void *a1)
{
  return DiscoveryModel.PairingState.encode(to:)(a1);
}

uint64_t sub_24807B6F4()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_248175E50();
  DiscoveryModel.PairingState.hash(into:)((uint64_t)v4);
  return sub_248175EC0();
}

uint64_t sub_24807B754()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_248175E50();
  DiscoveryModel.PairingState.hash(into:)((uint64_t)v4);
  return sub_248175EC0();
}

uint64_t DiscoveryModel.CodeType.description.getter()
{
  uint64_t v1 = *v0;
  if (*((unsigned char *)v0 + 8) && *((unsigned char *)v0 + 8) != 1)
  {
    uint64_t v3 = 0x6F436C6175736976;
    if (v1 != 1) {
      uint64_t v3 = 0x65646F437271;
    }
    if (v1) {
      return v3;
    }
    else {
      return 0x6E776F6E6B6E75;
    }
  }
  else
  {
    sub_248175850();
    swift_bridgeObjectRelease();
    sub_248175C30();
    sub_2481751D0();
    swift_bridgeObjectRelease();
    return 0xD000000000000015;
  }
}

uint64_t DiscoveryModel.CodeType.hash(into:)()
{
  if (!*(unsigned char *)(v0 + 8) || *(unsigned char *)(v0 + 8) == 1) {
    sub_248175E70();
  }
  return sub_248175E70();
}

uint64_t sub_24807B934()
{
  return 0x6874676E656CLL;
}

uint64_t sub_24807B94C(uint64_t a1)
{
  unint64_t v2 = sub_24807E9D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807B988(uint64_t a1)
{
  unint64_t v2 = sub_24807E9D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807B9C4()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x436168706C61;
      goto LABEL_4;
    case 2:
      uint64_t v2 = 0x437469676964;
LABEL_4:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x646F000000000000;
      break;
    case 3:
      uint64_t result = 0x6F436C6175736976;
      break;
    case 4:
      uint64_t result = 0x65646F437271;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24807BA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480830BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24807BA94(uint64_t a1)
{
  unint64_t v2 = sub_24807E880();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807BAD0(uint64_t a1)
{
  unint64_t v2 = sub_24807E880();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807BB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_248175CE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24807BB9C(uint64_t a1)
{
  unint64_t v2 = sub_24807E97C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807BBD8(uint64_t a1)
{
  unint64_t v2 = sub_24807E97C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807BC14(uint64_t a1)
{
  unint64_t v2 = sub_24807E8D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807BC50(uint64_t a1)
{
  unint64_t v2 = sub_24807E8D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807BC8C(uint64_t a1)
{
  unint64_t v2 = sub_24807EA24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807BCC8(uint64_t a1)
{
  unint64_t v2 = sub_24807EA24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24807BD04(uint64_t a1)
{
  unint64_t v2 = sub_24807E928();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24807BD40(uint64_t a1)
{
  unint64_t v2 = sub_24807E928();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DiscoveryModel.CodeType.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F28);
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F30);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F38);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F40);
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F48);
  uint64_t v31 = *(void *)(v14 - 8);
  uint64_t v32 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F50);
  uint64_t v43 = *(void *)(v17 - 8);
  uint64_t v44 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *v2;
  int v21 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24807E880();
  sub_248175F60();
  if (v21)
  {
    if (v21 == 1)
    {
      char v47 = 2;
      sub_24807E97C();
      uint64_t v22 = v44;
      sub_248175B50();
      uint64_t v23 = v42;
      sub_248175BD0();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v23);
    }
    else
    {
      if (!v20)
      {
        char v45 = 0;
        sub_24807EA24();
        uint64_t v28 = v44;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v32);
        return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v28);
      }
      if (v20 == 1)
      {
        char v48 = 3;
        sub_24807E928();
        uint64_t v25 = v33;
        uint64_t v22 = v44;
        sub_248175B50();
        uint64_t v27 = v34;
        uint64_t v26 = v35;
      }
      else
      {
        char v49 = 4;
        sub_24807E8D4();
        uint64_t v25 = v36;
        uint64_t v22 = v44;
        sub_248175B50();
        uint64_t v27 = v37;
        uint64_t v26 = v38;
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
    }
  }
  else
  {
    char v46 = 1;
    sub_24807E9D0();
    uint64_t v22 = v44;
    sub_248175B50();
    uint64_t v24 = v40;
    sub_248175BD0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v22);
}

uint64_t DiscoveryModel.CodeType.hashValue.getter()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_248175E50();
  if (v1 <= 1) {
    sub_248175E70();
  }
  sub_248175E70();
  return sub_248175EC0();
}

uint64_t DiscoveryModel.CodeType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F88);
  uint64_t v49 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v59 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F90);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  uint64_t v55 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v58 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8F98);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  uint64_t v53 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v57 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8FA0);
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8FA8);
  uint64_t v48 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8FB0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_24807E880();
  uint64_t v21 = v62;
  sub_248175F20();
  if (v21) {
    goto LABEL_15;
  }
  uint64_t v46 = v13;
  char v47 = v15;
  uint64_t v23 = v57;
  uint64_t v22 = v58;
  uint64_t v62 = 0;
  uint64_t v24 = v17;
  uint64_t v26 = v59;
  uint64_t v25 = v60;
  uint64_t v27 = sub_248175B30();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v31 = v16;
    uint64_t v32 = sub_2481758A0();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    void *v34 = &type metadata for DiscoveryModel.CodeType;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v31);
LABEL_15:
    uint64_t v37 = (uint64_t)v61;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  switch(*(unsigned char *)(v27 + 32))
  {
    case 1:
      uint64_t v59 = (char *)v27;
      char v64 = 1;
      sub_24807E9D0();
      uint64_t v35 = v62;
      sub_248175A50();
      if (v35) {
        goto LABEL_10;
      }
      uint64_t v41 = v51;
      uint64_t v30 = sub_248175AE0();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v16);
      uint64_t v37 = (uint64_t)v61;
      char v42 = 0;
      goto LABEL_23;
    case 2:
      char v65 = 2;
      sub_24807E97C();
      uint64_t v36 = v62;
      sub_248175A50();
      if (v36)
      {
LABEL_10:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v16);
        uint64_t v37 = (uint64_t)v61;
        return __swift_destroy_boxed_opaque_existential_1(v37);
      }
      uint64_t v43 = v23;
      uint64_t v44 = v52;
      uint64_t v30 = sub_248175AE0();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v43, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v16);
      uint64_t v37 = (uint64_t)v61;
      char v42 = 1;
      goto LABEL_23;
    case 3:
      char v66 = 3;
      sub_24807E928();
      uint64_t v38 = v62;
      sub_248175A50();
      if (v38) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v16);
      char v42 = 2;
      uint64_t v30 = 1;
      goto LABEL_22;
    case 4:
      char v67 = 4;
      sub_24807E8D4();
      uint64_t v39 = v62;
      sub_248175A50();
      if (v39) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v26, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v16);
      uint64_t v30 = 2;
      goto LABEL_21;
    default:
      char v63 = 0;
      sub_24807EA24();
      uint64_t v28 = v47;
      uint64_t v29 = v62;
      sub_248175A50();
      if (v29)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v16);
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v16);
      uint64_t v30 = 0;
LABEL_21:
      char v42 = 2;
LABEL_22:
      uint64_t v37 = (uint64_t)v61;
LABEL_23:
      *(void *)uint64_t v25 = v30;
      *(unsigned char *)(v25 + 8) = v42;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_24807CB90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DiscoveryModel.CodeType.init(from:)(a1, a2);
}

uint64_t sub_24807CBA8(void *a1)
{
  return DiscoveryModel.CodeType.encode(to:)(a1);
}

uint64_t sub_24807CBC8()
{
  if (!*(unsigned char *)(v0 + 8) || *(unsigned char *)(v0 + 8) == 1) {
    sub_248175E70();
  }
  return sub_248175E70();
}

uint64_t sub_24807CC2C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_248175E50();
  if (v1 <= 1) {
    sub_248175E70();
  }
  sub_248175E70();
  return sub_248175EC0();
}

BOOL _s12AppleIDSetup14DiscoveryModelV11DiscoveringV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  int v3 = a1[1];
  long long v4 = *(_OWORD *)(a1 + 8);
  uint64_t v5 = *((void *)a1 + 3);
  unsigned __int8 v6 = a1[32];
  int v7 = a2[1];
  long long v8 = *(_OWORD *)(a2 + 8);
  uint64_t v9 = *((void *)a2 + 3);
  unsigned __int8 v10 = a2[32];
  if (v3 == 2)
  {
    if (v7 != 2) {
      return 0;
    }
LABEL_8:
    long long v16 = v4;
    uint64_t v17 = v5;
    unsigned __int8 v18 = v6;
    long long v13 = v8;
    uint64_t v14 = v9;
    unsigned __int8 v15 = v10;
    return static DiscoveryModel.PairingState.== infix(_:_:)((uint64_t)&v16, (uint64_t)&v13);
  }
  BOOL v2 = 0;
  BOOL v11 = (v3 & 1) == 0;
  if (v7 != 2 && ((v11 ^ v7) & 1) != 0) {
    goto LABEL_8;
  }
  return v2;
}

BOOL _s12AppleIDSetup14DiscoveryModelV10DiscoveredV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = *(void *)(a1 + 8);
  int v14 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 48);
  if ((sub_24815DE58(*(void *)a1, *(void *)a2) & 1) == 0 || (sub_24815D598(v15, v6) & 1) == 0) {
    return 0;
  }
  if (v14 == 2)
  {
    if (v7 != 2) {
      return 0;
    }
LABEL_9:
    v18[0] = v2;
    v18[1] = v3;
    v18[2] = v4;
    char v19 = v5;
    v16[0] = v8;
    v16[1] = v9;
    _OWORD v16[2] = v10;
    char v17 = v11;
    return static DiscoveryModel.PairingState.== infix(_:_:)((uint64_t)v18, (uint64_t)v16);
  }
  BOOL v12 = 0;
  if (v7 != 2 && ((((v14 & 1) == 0) ^ v7) & 1) != 0) {
    goto LABEL_9;
  }
  return v12;
}

BOOL _s12AppleIDSetup14DiscoveryModelV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v10 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 40);
  int v15 = (v8 >> 3) & 3;
  unsigned int v16 = *(unsigned __int8 *)(a2 + 48);
  if (!v15)
  {
    if ((v16 & 0x18) == 0)
    {
      LOWORD(v64) = v2 & 0xFF01;
      uint64_t v65 = v3;
      uint64_t v66 = v5;
      uint64_t v67 = v4;
      LOBYTE(v68) = v6;
      LOWORD(v57) = v10 & 0xFF01;
      uint64_t v58 = v9;
      uint64_t v59 = v11;
      uint64_t v49 = v10;
      uint64_t v60 = v12;
      LOBYTE(v61) = v13;
      uint64_t v29 = v10;
      uint64_t v30 = v6;
      uint64_t v44 = v6;
      uint64_t v45 = v14;
      uint64_t v31 = v14;
      unsigned int v46 = v8;
      unsigned int v55 = v16;
      uint64_t v32 = v9;
      uint64_t v43 = v9;
      sub_247FE41AC(v29, v9, v11, v12, v13, v31, v16);
      uint64_t v50 = v7;
      sub_247FE41AC(v2, v3, v5, v4, v30, v7, v46);
      sub_247FE41AC(v2, v3, v5, v4, v30, v7, v46);
      sub_247FE41AC(v49, v32, v11, v12, v13, v45, v55);
      uint64_t v41 = v12;
      BOOL v21 = _s12AppleIDSetup14DiscoveryModelV11DiscoveringV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v64, (unsigned __int8 *)&v57);
      sub_247FE51C8(v2, v3, v5, v4, v44, v7, v46);
      sub_247FE51C8(v49, v43, v11, v41, v13, v45, v55);
      uint64_t v24 = v11;
      uint64_t v22 = v49;
      uint64_t v23 = v43;
      uint64_t v25 = v41;
      uint64_t v26 = v13;
      uint64_t v27 = v45;
      unsigned int v28 = v55;
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  if (v15 != 1)
  {
    if ((v16 & 0x18) == 0x10 && !(v9 | v10 | v11 | v12 | v13 | v14) && v16 == 16)
    {
      sub_247FE51C8(*(void *)a1, v3, v5, v4, v6, v7, v8);
      sub_247FE51C8(0, 0, v11, v12, v13, v14, 0x10u);
      return 1;
    }
    goto LABEL_13;
  }
  if ((v16 & 0x18) != 8)
  {
LABEL_13:
    uint64_t v53 = *(void *)(a1 + 24);
    uint64_t v56 = *(void *)(a1 + 16);
    uint64_t v51 = *(void *)a1;
    uint64_t v52 = *(void *)(a1 + 8);
    uint64_t v34 = *(void *)(a1 + 32);
    uint64_t v35 = *(void *)(a2 + 16);
    unsigned int v36 = *(unsigned __int8 *)(a1 + 48);
    unsigned int v37 = *(unsigned __int8 *)(a2 + 48);
    uint64_t v38 = *(void *)(a2 + 8);
    sub_247FE41AC(*(void *)a1, v52, v56, v53, v6, v7, v8);
    sub_247FE41AC(v10, v38, v35, v12, v13, v14, v37);
    sub_247FE51C8(v51, v52, v56, v53, v34, v7, v36);
    sub_247FE51C8(v10, v38, v35, v12, v13, v14, v37);
    return 0;
  }
  uint64_t v64 = *(void *)a1;
  uint64_t v65 = v3;
  LOBYTE(v66) = v5;
  uint64_t v67 = v4;
  uint64_t v68 = v6;
  uint64_t v48 = v10;
  uint64_t v50 = v7;
  uint64_t v69 = v7;
  char v70 = v8 & 0xE7;
  uint64_t v57 = v10;
  uint64_t v58 = v9;
  LOBYTE(v59) = v11;
  uint64_t v60 = v12;
  uint64_t v61 = v13;
  uint64_t v62 = v14;
  char v63 = v16 & 0xE7;
  uint64_t v17 = v10;
  uint64_t v47 = v11;
  uint64_t v18 = v6;
  unsigned int v19 = v8;
  unsigned int v54 = v16;
  uint64_t v42 = v9;
  sub_247FE41AC(v17, v9, v11, v12, v13, v14, v16);
  sub_247FE41AC(v2, v3, v5, v4, v18, v50, v19);
  uint64_t v44 = v18;
  unsigned int v46 = v19;
  sub_247FE41AC(v2, v3, v5, v4, v18, v50, v19);
  sub_247FE41AC(v48, v42, v11, v12, v13, v14, v54);
  uint64_t v20 = v12;
  uint64_t v40 = v12;
  BOOL v21 = _s12AppleIDSetup14DiscoveryModelV10DiscoveredV2eeoiySbAE_AEtFZ_0((uint64_t)&v64, (uint64_t)&v57);
  sub_247FE51C8(v2, v3, v5, v4, v18, v50, v19);
  sub_247FE51C8(v48, v42, v47, v20, v13, v14, v54);
  uint64_t v22 = v48;
  uint64_t v23 = v42;
  uint64_t v24 = v47;
  uint64_t v25 = v40;
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  unsigned int v28 = v54;
LABEL_7:
  sub_247FE51C8(v22, v23, v24, v25, v26, v27, v28);
  sub_247FE51C8(v2, v3, v5, v4, v44, v50, v46);
  return v21;
}

BOOL _s12AppleIDSetup14DiscoveryModelV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL result = 0;
  if (*a1 != *a2 || ((a1[1] ^ a2[1]) & 1) != 0) {
    return result;
  }
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 5);
  uint64_t v122 = *((void *)a1 + 4);
  int v6 = a1[49];
  uint64_t v7 = *((void *)a1 + 7);
  uint64_t v8 = *((void *)a1 + 8);
  long long v9 = *(_OWORD *)(a1 + 72);
  long long v10 = *(_OWORD *)(a1 + 88);
  long long v11 = *(_OWORD *)(a1 + 104);
  unsigned __int8 v12 = a1[120];
  uint64_t v119 = *((void *)a1 + 16);
  uint64_t v120 = *((void *)a1 + 17);
  uint64_t v13 = *((void *)a1 + 20);
  uint64_t v116 = *((void *)a1 + 18);
  uint64_t v117 = *((void *)a1 + 19);
  uint64_t v15 = *((void *)a1 + 21);
  uint64_t v14 = *((void *)a1 + 22);
  uint64_t v114 = *((void *)a1 + 23);
  uint64_t v16 = *((void *)a2 + 2);
  uint64_t v121 = *((void *)a2 + 3);
  uint64_t v18 = *((void *)a2 + 4);
  uint64_t v17 = *((void *)a2 + 5);
  int v19 = a2[48];
  int v20 = a2[49];
  uint64_t v22 = *((void *)a2 + 7);
  uint64_t v21 = *((void *)a2 + 8);
  long long v23 = *(_OWORD *)(a2 + 72);
  long long v24 = *(_OWORD *)(a2 + 88);
  long long v25 = *(_OWORD *)(a2 + 104);
  unsigned __int8 v26 = a2[120];
  uint64_t v28 = *((void *)a2 + 16);
  uint64_t v27 = *((void *)a2 + 17);
  uint64_t v30 = *((void *)a2 + 18);
  uint64_t v29 = *((void *)a2 + 19);
  uint64_t v32 = *((void *)a2 + 20);
  uint64_t v31 = *((void *)a2 + 21);
  uint64_t v33 = *((void *)a2 + 22);
  uint64_t v115 = *((void *)a2 + 23);
  if (!v4)
  {
    uint64_t v118 = *((void *)a1 + 3);
    int v113 = a1[48];
    if (v16) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v16) {
    return 0;
  }
  uint64_t v118 = *((void *)a1 + 3);
  int v113 = a1[48];
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && v4 == v16) {
    goto LABEL_10;
  }
  uint64_t v80 = *((void *)a2 + 8);
  uint64_t v82 = *((void *)a1 + 21);
  uint64_t v86 = *((void *)a2 + 20);
  uint64_t v34 = *((void *)a1 + 22);
  uint64_t v107 = *((void *)a2 + 16);
  uint64_t v110 = *((void *)a2 + 17);
  uint64_t v35 = *((void *)a1 + 20);
  uint64_t v84 = *((void *)a2 + 18);
  uint64_t v36 = *((void *)a2 + 21);
  long long v101 = *(_OWORD *)(a1 + 88);
  long long v104 = *(_OWORD *)(a1 + 72);
  long long v95 = *(_OWORD *)(a2 + 72);
  long long v98 = *(_OWORD *)(a1 + 104);
  unsigned __int8 v74 = a1[120];
  uint64_t v37 = *((void *)a1 + 7);
  uint64_t v75 = *((void *)a1 + 8);
  long long v89 = *(_OWORD *)(a2 + 104);
  long long v92 = *(_OWORD *)(a2 + 88);
  unsigned __int8 v38 = a2[120];
  uint64_t v77 = *((void *)a1 + 5);
  uint64_t v79 = *((void *)a2 + 5);
  uint64_t v39 = *((void *)a2 + 7);
  int v76 = a1[49];
  int v40 = a2[49];
  char v41 = sub_248175CE0();
  int v20 = v40;
  int v6 = v76;
  uint64_t v22 = v39;
  uint64_t v5 = v77;
  uint64_t v17 = v79;
  unsigned __int8 v26 = v38;
  long long v25 = v89;
  long long v24 = v92;
  long long v23 = v95;
  long long v11 = v98;
  uint64_t v8 = v75;
  uint64_t v7 = v37;
  unsigned __int8 v12 = v74;
  long long v10 = v101;
  long long v9 = v104;
  uint64_t v31 = v36;
  uint64_t v13 = v35;
  uint64_t v21 = v80;
  uint64_t v15 = v82;
  uint64_t v28 = v107;
  uint64_t v27 = v110;
  uint64_t v14 = v34;
  uint64_t v30 = v84;
  uint64_t v32 = v86;
  char v42 = v41;
  BOOL result = 0;
  if (v42)
  {
LABEL_10:
    if (v122)
    {
      if (!v18) {
        return 0;
      }
      if (v118 != v121 || v122 != v18)
      {
        uint64_t v81 = v21;
        uint64_t v72 = v14;
        uint64_t v43 = v13;
        uint64_t v108 = v28;
        uint64_t v111 = v27;
        uint64_t v85 = v30;
        uint64_t v87 = v32;
        uint64_t v88 = v29;
        uint64_t v44 = v31;
        long long v102 = v10;
        long long v105 = v9;
        long long v96 = v23;
        long long v99 = v11;
        uint64_t v78 = v5;
        unsigned __int8 v45 = v12;
        uint64_t v46 = v7;
        uint64_t v47 = v8;
        long long v90 = v25;
        long long v93 = v24;
        uint64_t v83 = v15;
        unsigned __int8 v48 = v26;
        uint64_t v49 = v22;
        int v50 = v6;
        int v123 = v20;
        char v51 = sub_248175CE0();
        int v20 = v123;
        int v6 = v50;
        uint64_t v22 = v49;
        unsigned __int8 v26 = v48;
        uint64_t v21 = v81;
        uint64_t v15 = v83;
        long long v25 = v90;
        long long v24 = v93;
        long long v23 = v96;
        long long v11 = v99;
        uint64_t v8 = v47;
        uint64_t v7 = v46;
        unsigned __int8 v12 = v45;
        uint64_t v5 = v78;
        long long v10 = v102;
        long long v9 = v105;
        uint64_t v31 = v44;
        uint64_t v32 = v87;
        uint64_t v29 = v88;
        uint64_t v30 = v85;
        uint64_t v28 = v108;
        uint64_t v27 = v111;
        uint64_t v13 = v43;
        uint64_t v14 = v72;
        char v52 = v51;
        BOOL result = 0;
        if ((v52 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v113)
    {
      if (v113 != 1)
      {
        if (v5)
        {
          if (v5 == 1)
          {
            BOOL result = 0;
            if (v19 != 2 || v17 != 1) {
              return result;
            }
          }
          else
          {
            BOOL result = 0;
            if (v19 != 2 || v17 != 2) {
              return result;
            }
          }
        }
        else
        {
          BOOL result = 0;
          if (v19 != 2 || v17) {
            return result;
          }
        }
LABEL_34:
        if ((v6 ^ v20)) {
          return result;
        }
        if (v8)
        {
          if (!v21) {
            return 0;
          }
          if (v7 != v22 || v8 != v21)
          {
            uint64_t v53 = v14;
            uint64_t v54 = v13;
            uint64_t v109 = v28;
            uint64_t v112 = v27;
            uint64_t v55 = v30;
            uint64_t v56 = v29;
            uint64_t v57 = v32;
            uint64_t v58 = v31;
            long long v103 = v10;
            long long v106 = v9;
            long long v97 = v23;
            long long v100 = v11;
            unsigned __int8 v59 = v12;
            long long v91 = v25;
            long long v94 = v24;
            unsigned __int8 v60 = v26;
            char v61 = sub_248175CE0();
            unsigned __int8 v26 = v60;
            long long v25 = v91;
            long long v24 = v94;
            long long v23 = v97;
            long long v11 = v100;
            unsigned __int8 v12 = v59;
            long long v10 = v103;
            long long v9 = v106;
            uint64_t v31 = v58;
            uint64_t v32 = v57;
            uint64_t v29 = v56;
            uint64_t v30 = v55;
            uint64_t v28 = v109;
            uint64_t v27 = v112;
            uint64_t v13 = v54;
            uint64_t v14 = v53;
            char v62 = v61;
            BOOL result = 0;
            if ((v62 & 1) == 0) {
              return result;
            }
          }
        }
        else if (v21)
        {
          return 0;
        }
        uint64_t v71 = v31;
        uint64_t v73 = v14;
        uint64_t v63 = v15;
        uint64_t v64 = v13;
        v127[0] = v9;
        v127[1] = v10;
        v127[2] = v11;
        unsigned __int8 v128 = v12;
        v125[0] = v23;
        v125[1] = v24;
        v125[2] = v25;
        unsigned __int8 v126 = v26;
        if (!_s12AppleIDSetup14DiscoveryModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)v127, (uint64_t)v125)) {
          return 0;
        }
        if (v120)
        {
          if (v27)
          {
            if (v119 == v28 && v120 == v27 || (sub_248175CE0() & 1) != 0)
            {
              sub_2480354C0(v119, v120);
              sub_2480354C0(v119, v120);
              sub_2480354C0(v28, v27);
              char v124 = sub_2480BC92C(v30, v29, v116, v117);
              sub_247FE0708(v28, v27);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              sub_247FE0708(v119, v120);
              if ((v124 & 1) == 0) {
                return 0;
              }
              goto LABEL_51;
            }
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            uint64_t v69 = v119;
            uint64_t v70 = v120;
LABEL_59:
            sub_247FE0708(v69, v70);
            return 0;
          }
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else if (!v27)
        {
LABEL_51:
          uint64_t v65 = v33;
          uint64_t v66 = v73;
          if (v63)
          {
            if (!v71) {
              return 0;
            }
            if (v64 != v32 || v63 != v71)
            {
              char v67 = sub_248175CE0();
              uint64_t v65 = v33;
              uint64_t v66 = v73;
              char v68 = v67;
              BOOL result = 0;
              if ((v68 & 1) == 0) {
                return result;
              }
            }
          }
          else if (v71)
          {
            return 0;
          }
          if (v114) {
            return v115 && (v66 == v65 && v114 == v115 || (sub_248175CE0() & 1) != 0);
          }
          return !v115;
        }
        sub_2480354C0(v28, v27);
        sub_247FE0708(v119, v120);
        uint64_t v69 = v28;
        uint64_t v70 = v27;
        goto LABEL_59;
      }
      if (v19 != 1) {
        return 0;
      }
    }
    else if (v19)
    {
      return 0;
    }
    BOOL result = 0;
    if (v5 != v17) {
      return result;
    }
    goto LABEL_34;
  }
  return result;
}

uint64_t _s12AppleIDSetup14DiscoveryModelV8CodeTypeO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((unsigned char *)a1 + 8))
  {
    if (!*((unsigned char *)a2 + 8)) {
      return v2 == v3;
    }
    return 0;
  }
  if (*((unsigned char *)a1 + 8) == 1)
  {
    if (v4 == 1) {
      return v2 == v3;
    }
    return 0;
  }
  if (v2)
  {
    if (v2 == 1)
    {
      if (v4 != 2 || v3 != 1) {
        return 0;
      }
    }
    else if (v4 != 2 || v3 != 2)
    {
      return 0;
    }
  }
  else if (v4 != 2 || v3 != 0)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_24807D9C0()
{
  unint64_t result = qword_2692D8CC8;
  if (!qword_2692D8CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CC8);
  }
  return result;
}

unint64_t sub_24807DA14()
{
  unint64_t result = qword_2692D8CD0;
  if (!qword_2692D8CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CD0);
  }
  return result;
}

unint64_t sub_24807DA68()
{
  unint64_t result = qword_2692D8CD8;
  if (!qword_2692D8CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CD8);
  }
  return result;
}

unint64_t sub_24807DABC()
{
  unint64_t result = qword_2692D8CE0;
  if (!qword_2692D8CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CE0);
  }
  return result;
}

unint64_t sub_24807DB10()
{
  unint64_t result = qword_2692D8CE8;
  if (!qword_2692D8CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CE8);
  }
  return result;
}

unint64_t sub_24807DB64()
{
  unint64_t result = qword_2692D8CF8;
  if (!qword_2692D8CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8CF8);
  }
  return result;
}

unint64_t sub_24807DBB8()
{
  unint64_t result = qword_2692D8D00;
  if (!qword_2692D8D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D00);
  }
  return result;
}

unint64_t sub_24807DC0C()
{
  unint64_t result = qword_2692D8D08;
  if (!qword_2692D8D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D08);
  }
  return result;
}

unint64_t sub_24807DC60()
{
  unint64_t result = qword_2692D8D10;
  if (!qword_2692D8D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D10);
  }
  return result;
}

uint64_t sub_24807DCB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 128);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE41AC(v2, v3, v4, v5, v6, v7, v8);
  sub_2480354C0(v11, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24807DD90(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 136);
  uint64_t v11 = *(void *)(a1 + 128);
  unsigned int v8 = *(unsigned __int8 *)(a1 + 120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(v2, v3, v4, v5, v6, v7, v8);
  sub_247FE0708(v11, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24807DE6C()
{
  unint64_t result = qword_2692D8D30;
  if (!qword_2692D8D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D30);
  }
  return result;
}

unint64_t sub_24807DEC0()
{
  unint64_t result = qword_2692D8D38;
  if (!qword_2692D8D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D38);
  }
  return result;
}

unint64_t sub_24807DF14()
{
  unint64_t result = qword_2692D8D40;
  if (!qword_2692D8D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D40);
  }
  return result;
}

unint64_t sub_24807DF68()
{
  unint64_t result = qword_2692D8D80;
  if (!qword_2692D8D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D80);
  }
  return result;
}

unint64_t sub_24807DFBC()
{
  unint64_t result = qword_2692D8D88;
  if (!qword_2692D8D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D88);
  }
  return result;
}

unint64_t sub_24807E010()
{
  unint64_t result = qword_2692D8D90;
  if (!qword_2692D8D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D90);
  }
  return result;
}

unint64_t sub_24807E064()
{
  unint64_t result = qword_2692D8D98;
  if (!qword_2692D8D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8D98);
  }
  return result;
}

unint64_t sub_24807E0B8()
{
  unint64_t result = qword_2692D8DE0;
  if (!qword_2692D8DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8DE0);
  }
  return result;
}

unint64_t sub_24807E10C()
{
  unint64_t result = qword_2692D8DE8;
  if (!qword_2692D8DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8DE8);
  }
  return result;
}

unint64_t sub_24807E160()
{
  unint64_t result = qword_2692D8DF0;
  if (!qword_2692D8DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8DF0);
  }
  return result;
}

unint64_t sub_24807E1B4()
{
  unint64_t result = qword_2692D8DF8;
  if (!qword_2692D8DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8DF8);
  }
  return result;
}

unint64_t sub_24807E208()
{
  unint64_t result = qword_2692D8E00;
  if (!qword_2692D8E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8E00);
  }
  return result;
}

unint64_t sub_24807E25C()
{
  unint64_t result = qword_2692D8E08;
  if (!qword_2692D8E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8E08);
  }
  return result;
}

unint64_t sub_24807E2B0()
{
  unint64_t result = qword_2692D8E30;
  if (!qword_2692D8E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8E30);
  }
  return result;
}

unint64_t sub_24807E304()
{
  unint64_t result = qword_2692D8E38;
  if (!qword_2692D8E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8E38);
  }
  return result;
}

uint64_t sub_24807E358(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu) {
    return sub_247FE4250(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_24807E36C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  if (a4 <= 0xFBu) {
    return sub_247FE526C(a1, a2, a3, a4);
  }
  return a1;
}

unint64_t sub_24807E380()
{
  unint64_t result = qword_2692D8E48;
  if (!qword_2692D8E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8E48);
  }
  return result;
}

unint64_t sub_24807E3D4()
{
  unint64_t result = qword_2692D8E50;
  if (!qword_2692D8E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8E50);
  }
  return result;
}

unint64_t sub_24807E428()
{
  unint64_t result = qword_2692D8E60;
  if (!qword_2692D8E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8E60);
  }
  return result;
}

unint64_t sub_24807E47C()
{
  unint64_t result = qword_2692D8E70;
  if (!qword_2692D8E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8E70);
  }
  return result;
}

uint64_t sub_24807E4D0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D8E78);
    sub_24807E5F8(a2, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24807E564(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D67D8);
    sub_24807E5F8(a2, type metadata accessor for AIDAServiceType);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24807E5F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24807E640()
{
  unint64_t result = qword_2692D8EC8;
  if (!qword_2692D8EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8EC8);
  }
  return result;
}

unint64_t sub_24807E694()
{
  unint64_t result = qword_2692D8ED0;
  if (!qword_2692D8ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8ED0);
  }
  return result;
}

unint64_t sub_24807E6E8()
{
  unint64_t result = qword_2692D8ED8;
  if (!qword_2692D8ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8ED8);
  }
  return result;
}

unint64_t sub_24807E73C()
{
  unint64_t result = qword_2692D8EE0;
  if (!qword_2692D8EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8EE0);
  }
  return result;
}

unint64_t sub_24807E790()
{
  unint64_t result = qword_2692D8EE8;
  if (!qword_2692D8EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8EE8);
  }
  return result;
}

unint64_t sub_24807E7E4()
{
  unint64_t result = qword_2692D8EF0;
  if (!qword_2692D8EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8EF0);
  }
  return result;
}

uint64_t sub_24807E838()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 40);
  if (v1 <= 0xFB) {
    sub_247FE526C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v1);
  }
  return MEMORY[0x270FA0238](v0, 41, 7);
}

unint64_t sub_24807E880()
{
  unint64_t result = qword_2692D8F58;
  if (!qword_2692D8F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8F58);
  }
  return result;
}

unint64_t sub_24807E8D4()
{
  unint64_t result = qword_2692D8F60;
  if (!qword_2692D8F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8F60);
  }
  return result;
}

unint64_t sub_24807E928()
{
  unint64_t result = qword_2692D8F68;
  if (!qword_2692D8F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8F68);
  }
  return result;
}

unint64_t sub_24807E97C()
{
  unint64_t result = qword_2692D8F70;
  if (!qword_2692D8F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8F70);
  }
  return result;
}

unint64_t sub_24807E9D0()
{
  unint64_t result = qword_2692D8F78;
  if (!qword_2692D8F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8F78);
  }
  return result;
}

unint64_t sub_24807EA24()
{
  unint64_t result = qword_2692D8F80;
  if (!qword_2692D8F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8F80);
  }
  return result;
}

uint64_t sub_24807EA78(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24807F1D4(a1, a2, a3, (uint64_t (*)(void))sub_24807EAB8, (uint64_t (*)(void))sub_24807EB0C, (uint64_t (*)(void))sub_24807EB60);
}

unint64_t sub_24807EAB8()
{
  unint64_t result = qword_2692D8FB8;
  if (!qword_2692D8FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FB8);
  }
  return result;
}

unint64_t sub_24807EB0C()
{
  unint64_t result = qword_2692D8FC0;
  if (!qword_2692D8FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FC0);
  }
  return result;
}

unint64_t sub_24807EB60()
{
  unint64_t result = qword_2692D8FC8;
  if (!qword_2692D8FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FC8);
  }
  return result;
}

unint64_t sub_24807EBB8()
{
  unint64_t result = qword_2692D8FD0;
  if (!qword_2692D8FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FD0);
  }
  return result;
}

unint64_t sub_24807EC10()
{
  unint64_t result = qword_2692D8FD8;
  if (!qword_2692D8FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FD8);
  }
  return result;
}

uint64_t sub_24807EC64(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24807F1D4(a1, a2, a3, (uint64_t (*)(void))sub_24807DBB8, (uint64_t (*)(void))sub_24807DA68, (uint64_t (*)(void))sub_24807ECA4);
}

unint64_t sub_24807ECA4()
{
  unint64_t result = qword_2692D8FE0;
  if (!qword_2692D8FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FE0);
  }
  return result;
}

unint64_t sub_24807ECFC()
{
  unint64_t result = qword_2692D8FE8;
  if (!qword_2692D8FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FE8);
  }
  return result;
}

uint64_t sub_24807ED50(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24807F1D4(a1, a2, a3, (uint64_t (*)(void))sub_24807DB64, (uint64_t (*)(void))sub_24807DA14, (uint64_t (*)(void))sub_24807ED90);
}

unint64_t sub_24807ED90()
{
  unint64_t result = qword_2692D8FF0;
  if (!qword_2692D8FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FF0);
  }
  return result;
}

uint64_t sub_24807EDE4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24807F1D4(a1, a2, a3, (uint64_t (*)(void))sub_24807DC60, (uint64_t (*)(void))sub_24807DB10, (uint64_t (*)(void))sub_24807EE24);
}

unint64_t sub_24807EE24()
{
  unint64_t result = qword_2692D8FF8;
  if (!qword_2692D8FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D8FF8);
  }
  return result;
}

unint64_t sub_24807EE7C()
{
  unint64_t result = qword_2692D9000;
  if (!qword_2692D9000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9000);
  }
  return result;
}

uint64_t sub_24807EED0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24807F1D4(a1, a2, a3, (uint64_t (*)(void))sub_24807E304, (uint64_t (*)(void))sub_24807E25C, (uint64_t (*)(void))sub_24807EF10);
}

unint64_t sub_24807EF10()
{
  unint64_t result = qword_2692D9008;
  if (!qword_2692D9008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9008);
  }
  return result;
}

unint64_t sub_24807EF68()
{
  unint64_t result = qword_2692D9010;
  if (!qword_2692D9010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9010);
  }
  return result;
}

uint64_t sub_24807EFBC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24807F1D4(a1, a2, a3, (uint64_t (*)(void))sub_24807E2B0, (uint64_t (*)(void))sub_24807E1B4, (uint64_t (*)(void))sub_24807EFFC);
}

unint64_t sub_24807EFFC()
{
  unint64_t result = qword_2692D9018;
  if (!qword_2692D9018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9018);
  }
  return result;
}

unint64_t sub_24807F054()
{
  unint64_t result = qword_2692D9020;
  if (!qword_2692D9020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9020);
  }
  return result;
}

uint64_t sub_24807F0A8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24807F1D4(a1, a2, a3, (uint64_t (*)(void))sub_24807E428, (uint64_t (*)(void))sub_24807E3D4, (uint64_t (*)(void))sub_24807F0E8);
}

unint64_t sub_24807F0E8()
{
  unint64_t result = qword_2692D9028;
  if (!qword_2692D9028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9028);
  }
  return result;
}

unint64_t sub_24807F140()
{
  unint64_t result = qword_2692D9030;
  if (!qword_2692D9030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9030);
  }
  return result;
}

uint64_t sub_24807F194(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_24807F1D4(a1, a2, a3, (uint64_t (*)(void))sub_24807DC0C, (uint64_t (*)(void))sub_24807DABC, (uint64_t (*)(void))sub_24807F228);
}

uint64_t sub_24807F1D4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_24807F228()
{
  unint64_t result = qword_2692D9038;
  if (!qword_2692D9038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9038);
  }
  return result;
}

unint64_t sub_24807F280()
{
  unint64_t result = qword_2692D9040;
  if (!qword_2692D9040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9040);
  }
  return result;
}

uint64_t destroy for DiscoveryModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned __int8 *)(a1 + 120));
  if (*(void *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DiscoveryModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 96);
  uint64_t v11 = *(void *)(a2 + 104);
  uint64_t v12 = *(void *)(a2 + 112);
  unsigned int v20 = *(unsigned __int8 *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE41AC(v7, v8, v9, v10, v11, v12, v20);
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  *(void *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v10;
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = v12;
  *(unsigned char *)(a1 + 120) = v20;
  uint64_t v13 = *(void *)(a2 + 136);
  if (v13)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v13;
    uint64_t v14 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
  }
  uint64_t v16 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v16;
  uint64_t v17 = *(void *)(a2 + 176);
  uint64_t v18 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = v17;
  *(void *)(a1 + 184) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v10 = *(void *)(a2 + 112);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 120);
  sub_247FE41AC(v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  uint64_t v15 = *(void *)(a1 + 96);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 112);
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  *(void *)(a1 + 104) = v9;
  *(void *)(a1 + 112) = v10;
  unsigned int v18 = *(unsigned __int8 *)(a1 + 120);
  *(unsigned char *)(a1 + 120) = v11;
  sub_247FE51C8(v12, v13, v14, v15, v16, v17, v18);
  int v19 = (_OWORD *)(a1 + 128);
  unsigned int v20 = (_OWORD *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  if (*(void *)(a1 + 136))
  {
    if (v21)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_retain();
      swift_release();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_24800716C(a1 + 128);
      long long v22 = *(_OWORD *)(a2 + 144);
      *int v19 = *v20;
      *(_OWORD *)(a1 + 144) = v22;
    }
  }
  else if (v21)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v23 = *(_OWORD *)(a2 + 144);
    *int v19 = *v20;
    *(_OWORD *)(a1 + 144) = v23;
  }
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for DiscoveryModel(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 120);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 112);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  unsigned int v14 = *(unsigned __int8 *)(a1 + 120);
  *(unsigned char *)(a1 + 120) = v7;
  sub_247FE51C8(v8, v9, v10, v11, v12, v13, v14);
  if (!*(void *)(a1 + 136)) {
    goto LABEL_5;
  }
  uint64_t v15 = *(void *)(a2 + 136);
  if (!v15)
  {
    sub_24800716C(a1 + 128);
LABEL_5:
    long long v16 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    goto LABEL_6;
  }
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
LABEL_6:
  uint64_t v17 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 192)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 192) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel()
{
  return &type metadata for DiscoveryModel;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Role()
{
  return &type metadata for DiscoveryModel.Role;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind()
{
  return &type metadata for DiscoveryModel.FlowKind;
}

void destroy for DiscoveryModel.State(uint64_t a1)
{
}

uint64_t initializeWithCopy for DiscoveryModel.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 48);
  sub_247FE41AC(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned int v9 = *(unsigned __int8 *)(a2 + 48);
  sub_247FE41AC(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unsigned int v16 = *(unsigned __int8 *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_247FE51C8(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DiscoveryModel.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unsigned int v11 = *(unsigned __int8 *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_247FE51C8(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 6 && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 6);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 48) & 4 | (*(unsigned __int8 *)(a1 + 48) >> 3) & 3) ^ 7;
  if (v3 >= 5) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 5)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 6;
    if (a3 >= 6) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 6) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(unsigned char *)(result + 48) = 4 * ((((-a2 & 4) != 0) - 2 * a2) & 7);
    }
  }
  return result;
}

uint64_t sub_24807FB90(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 48);
  if (((v1 >> 3) & 2) != 0) {
    return (*(_DWORD *)a1 + 2);
  }
  else {
    return (v1 >> 3) & 3;
  }
}

uint64_t sub_24807FBB0(uint64_t result)
{
  *(unsigned char *)(result + 48) &= 0xE7u;
  return result;
}

uint64_t sub_24807FBC0(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 0xE3 | (8 * (a2 & 3));
  }
  else
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    *(unsigned char *)(result + 48) = 16;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State()
{
  return &type metadata for DiscoveryModel.State;
}

uint64_t destroy for DiscoveryModel.Discovering(uint64_t a1)
{
  return sub_247FE526C(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for DiscoveryModel.Discovering(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 32);
  sub_247FE4250(v3, v4, v5, v6);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel.Discovering(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 32);
  sub_247FE4250(v3, v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  sub_247FE526C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DiscoveryModel.Discovering(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v3 = *(void *)(a2 + 24);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_247FE526C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.Discovering(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[33]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.Discovering(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Discovering()
{
  return &type metadata for DiscoveryModel.Discovering;
}

uint64_t destroy for DiscoveryModel.Discovered(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 48);
  return sub_247FE526C(v2, v3, v4, v5);
}

uint64_t initializeWithCopy for DiscoveryModel.Discovered(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE4250(v4, v5, v6, v7);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel.Discovered(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *((unsigned char *)v2 + 16);
  uint64_t v4 = v2[3];
  uint64_t v5 = v2[4];
  uint64_t v6 = v2[5];
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_247FE4250(v4, v5, v6, v2);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  sub_247FE526C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DiscoveryModel.Discovered(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  char v5 = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = v4;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v5;
  sub_247FE526C(v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.Discovered(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.Discovered(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Discovered()
{
  return &type metadata for DiscoveryModel.Discovered;
}

uint64_t destroy for DiscoveryModel.PairingState(uint64_t a1)
{
  return sub_247FE526C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for DiscoveryModel.PairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_247FE4250(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DiscoveryModel.PairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_247FE4250(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_247FE526C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DiscoveryModel.PairingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_247FE526C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.PairingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3C && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 60);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 24) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 24) >> 2) & 7))) ^ 0x3F;
  if (v3 >= 0x3B) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.PairingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3B)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 60;
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3C) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_24808029C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 5;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_2480802BC(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x1Fu;
  return result;
}

uint64_t sub_2480802CC(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 3 | (32 * a2);
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 4;
    *(unsigned char *)(result + 24) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState()
{
  return &type metadata for DiscoveryModel.PairingState;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.CodeType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryModel.CodeType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2480803AC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2480803C4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType()
{
  return &type metadata for DiscoveryModel.CodeType;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.CodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.UnknownCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.AlphaCodeCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.AlphaCodeCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.DigitCodeCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.DigitCodeCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.VisualCodeCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.VisualCodeCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodeType.QrCodeCodingKeys()
{
  return &type metadata for DiscoveryModel.CodeType.QrCodeCodingKeys;
}

unsigned char *_s12AppleIDSetup14DiscoveryModelV8CodeTypeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248080520);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.CodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.NotStartedCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.NotStartedCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.ShowCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.ShowCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.AskCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.AskCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.AnsweredCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.AnsweredCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.PairingState.CancelledCodingKeys()
{
  return &type metadata for DiscoveryModel.PairingState.CancelledCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DiscoveryModel.Discovered.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248080674);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Discovered.CodingKeys()
{
  return &type metadata for DiscoveryModel.Discovered.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Discovering.CodingKeys()
{
  return &type metadata for DiscoveryModel.Discovering.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State.CodingKeys()
{
  return &type metadata for DiscoveryModel.State.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State.DiscoveringCodingKeys()
{
  return &type metadata for DiscoveryModel.State.DiscoveringCodingKeys;
}

unsigned char *_s12AppleIDSetup14DiscoveryModelV8CodeTypeO19AlphaCodeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x248080778);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State.DiscoveredCodingKeys()
{
  return &type metadata for DiscoveryModel.State.DiscoveredCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.State.PairedCodingKeys()
{
  return &type metadata for DiscoveryModel.State.PairedCodingKeys;
}

unsigned char *_s12AppleIDSetup14DiscoveryModelV8FlowKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24808088CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind.CodingKeys()
{
  return &type metadata for DiscoveryModel.FlowKind.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind.SetupCodingKeys()
{
  return &type metadata for DiscoveryModel.FlowKind.SetupCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind.RepairCodingKeys()
{
  return &type metadata for DiscoveryModel.FlowKind.RepairCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.FlowKind.MixedCodingKeys()
{
  return &type metadata for DiscoveryModel.FlowKind.MixedCodingKeys;
}

unsigned char *_s12AppleIDSetup14DiscoveryModelV4RoleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480809C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Role.CodingKeys()
{
  return &type metadata for DiscoveryModel.Role.CodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Role.ClientCodingKeys()
{
  return &type metadata for DiscoveryModel.Role.ClientCodingKeys;
}

ValueMetadata *type metadata accessor for DiscoveryModel.Role.ServerCodingKeys()
{
  return &type metadata for DiscoveryModel.Role.ServerCodingKeys;
}

uint64_t getEnumTagSinglePayload for DiscoveryModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DiscoveryModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *__n128 result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248080B74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryModel.CodingKeys()
{
  return &type metadata for DiscoveryModel.CodingKeys;
}

unint64_t sub_248080BB0()
{
  unint64_t result = qword_2692D9048;
  if (!qword_2692D9048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9048);
  }
  return result;
}

unint64_t sub_248080C08()
{
  unint64_t result = qword_2692D9050;
  if (!qword_2692D9050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9050);
  }
  return result;
}

unint64_t sub_248080C60()
{
  unint64_t result = qword_2692D9058;
  if (!qword_2692D9058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9058);
  }
  return result;
}

unint64_t sub_248080CB8()
{
  unint64_t result = qword_2692D9060;
  if (!qword_2692D9060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9060);
  }
  return result;
}

unint64_t sub_248080D10()
{
  unint64_t result = qword_2692D9068;
  if (!qword_2692D9068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9068);
  }
  return result;
}

unint64_t sub_248080D68()
{
  unint64_t result = qword_2692D9070;
  if (!qword_2692D9070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9070);
  }
  return result;
}

unint64_t sub_248080DC0()
{
  unint64_t result = qword_2692D9078;
  if (!qword_2692D9078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9078);
  }
  return result;
}

unint64_t sub_248080E18()
{
  unint64_t result = qword_2692D9080;
  if (!qword_2692D9080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9080);
  }
  return result;
}

unint64_t sub_248080E70()
{
  unint64_t result = qword_2692D9088;
  if (!qword_2692D9088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9088);
  }
  return result;
}

unint64_t sub_248080EC8()
{
  unint64_t result = qword_2692D9090;
  if (!qword_2692D9090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9090);
  }
  return result;
}

unint64_t sub_248080F20()
{
  unint64_t result = qword_2692D9098;
  if (!qword_2692D9098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9098);
  }
  return result;
}

unint64_t sub_248080F78()
{
  unint64_t result = qword_2692D90A0;
  if (!qword_2692D90A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90A0);
  }
  return result;
}

unint64_t sub_248080FD0()
{
  unint64_t result = qword_2692D90A8;
  if (!qword_2692D90A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90A8);
  }
  return result;
}

unint64_t sub_248081028()
{
  unint64_t result = qword_2692D90B0;
  if (!qword_2692D90B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90B0);
  }
  return result;
}

unint64_t sub_248081080()
{
  unint64_t result = qword_2692D90B8;
  if (!qword_2692D90B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90B8);
  }
  return result;
}

unint64_t sub_2480810D8()
{
  unint64_t result = qword_2692D90C0;
  if (!qword_2692D90C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90C0);
  }
  return result;
}

unint64_t sub_248081130()
{
  unint64_t result = qword_2692D90C8;
  if (!qword_2692D90C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90C8);
  }
  return result;
}

unint64_t sub_248081188()
{
  unint64_t result = qword_2692D90D0;
  if (!qword_2692D90D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90D0);
  }
  return result;
}

unint64_t sub_2480811E0()
{
  unint64_t result = qword_2692D90D8;
  if (!qword_2692D90D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90D8);
  }
  return result;
}

unint64_t sub_248081238()
{
  unint64_t result = qword_2692D90E0;
  if (!qword_2692D90E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90E0);
  }
  return result;
}

unint64_t sub_248081290()
{
  unint64_t result = qword_2692D90E8;
  if (!qword_2692D90E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90E8);
  }
  return result;
}

unint64_t sub_2480812E8()
{
  unint64_t result = qword_2692D90F0;
  if (!qword_2692D90F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90F0);
  }
  return result;
}

unint64_t sub_248081340()
{
  unint64_t result = qword_2692D90F8;
  if (!qword_2692D90F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D90F8);
  }
  return result;
}

unint64_t sub_248081398()
{
  unint64_t result = qword_2692D9100;
  if (!qword_2692D9100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9100);
  }
  return result;
}

unint64_t sub_2480813F0()
{
  unint64_t result = qword_2692D9108;
  if (!qword_2692D9108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9108);
  }
  return result;
}

unint64_t sub_248081448()
{
  unint64_t result = qword_2692D9110;
  if (!qword_2692D9110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9110);
  }
  return result;
}

unint64_t sub_2480814A0()
{
  unint64_t result = qword_2692D9118;
  if (!qword_2692D9118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9118);
  }
  return result;
}

unint64_t sub_2480814F8()
{
  unint64_t result = qword_2692D9120;
  if (!qword_2692D9120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9120);
  }
  return result;
}

unint64_t sub_248081550()
{
  unint64_t result = qword_2692D9128;
  if (!qword_2692D9128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9128);
  }
  return result;
}

unint64_t sub_2480815A8()
{
  unint64_t result = qword_2692D9130;
  if (!qword_2692D9130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9130);
  }
  return result;
}

unint64_t sub_248081600()
{
  unint64_t result = qword_2692D9138;
  if (!qword_2692D9138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9138);
  }
  return result;
}

unint64_t sub_248081658()
{
  unint64_t result = qword_2692D9140;
  if (!qword_2692D9140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9140);
  }
  return result;
}

unint64_t sub_2480816B0()
{
  unint64_t result = qword_2692D9148;
  if (!qword_2692D9148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9148);
  }
  return result;
}

unint64_t sub_248081708()
{
  unint64_t result = qword_2692D9150;
  if (!qword_2692D9150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9150);
  }
  return result;
}

unint64_t sub_248081760()
{
  unint64_t result = qword_2692D9158;
  if (!qword_2692D9158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9158);
  }
  return result;
}

unint64_t sub_2480817B8()
{
  unint64_t result = qword_2692D9160;
  if (!qword_2692D9160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9160);
  }
  return result;
}

unint64_t sub_248081810()
{
  unint64_t result = qword_2692D9168;
  if (!qword_2692D9168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9168);
  }
  return result;
}

unint64_t sub_248081868()
{
  unint64_t result = qword_2692D9170;
  if (!qword_2692D9170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9170);
  }
  return result;
}

unint64_t sub_2480818C0()
{
  unint64_t result = qword_2692D9178;
  if (!qword_2692D9178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9178);
  }
  return result;
}

unint64_t sub_248081918()
{
  unint64_t result = qword_2692D9180;
  if (!qword_2692D9180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9180);
  }
  return result;
}

unint64_t sub_248081970()
{
  unint64_t result = qword_2692D9188;
  if (!qword_2692D9188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9188);
  }
  return result;
}

unint64_t sub_2480819C8()
{
  unint64_t result = qword_2692D9190;
  if (!qword_2692D9190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9190);
  }
  return result;
}

unint64_t sub_248081A20()
{
  unint64_t result = qword_2692D9198;
  if (!qword_2692D9198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9198);
  }
  return result;
}

unint64_t sub_248081A78()
{
  unint64_t result = qword_2692D91A0;
  if (!qword_2692D91A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91A0);
  }
  return result;
}

unint64_t sub_248081AD0()
{
  unint64_t result = qword_2692D91A8;
  if (!qword_2692D91A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91A8);
  }
  return result;
}

unint64_t sub_248081B28()
{
  unint64_t result = qword_2692D91B0;
  if (!qword_2692D91B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91B0);
  }
  return result;
}

unint64_t sub_248081B80()
{
  unint64_t result = qword_2692D91B8;
  if (!qword_2692D91B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91B8);
  }
  return result;
}

unint64_t sub_248081BD8()
{
  unint64_t result = qword_2692D91C0;
  if (!qword_2692D91C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91C0);
  }
  return result;
}

unint64_t sub_248081C30()
{
  unint64_t result = qword_2692D91C8;
  if (!qword_2692D91C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91C8);
  }
  return result;
}

unint64_t sub_248081C88()
{
  unint64_t result = qword_2692D91D0;
  if (!qword_2692D91D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91D0);
  }
  return result;
}

unint64_t sub_248081CE0()
{
  unint64_t result = qword_2692D91D8;
  if (!qword_2692D91D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91D8);
  }
  return result;
}

unint64_t sub_248081D38()
{
  unint64_t result = qword_2692D91E0;
  if (!qword_2692D91E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91E0);
  }
  return result;
}

unint64_t sub_248081D90()
{
  unint64_t result = qword_2692D91E8;
  if (!qword_2692D91E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91E8);
  }
  return result;
}

unint64_t sub_248081DE8()
{
  unint64_t result = qword_2692D91F0;
  if (!qword_2692D91F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91F0);
  }
  return result;
}

unint64_t sub_248081E40()
{
  unint64_t result = qword_2692D91F8;
  if (!qword_2692D91F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D91F8);
  }
  return result;
}

unint64_t sub_248081E98()
{
  unint64_t result = qword_2692D9200;
  if (!qword_2692D9200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9200);
  }
  return result;
}

unint64_t sub_248081EF0()
{
  unint64_t result = qword_2692D9208;
  if (!qword_2692D9208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9208);
  }
  return result;
}

unint64_t sub_248081F48()
{
  unint64_t result = qword_2692D9210;
  if (!qword_2692D9210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9210);
  }
  return result;
}

unint64_t sub_248081FA0()
{
  unint64_t result = qword_2692D9218;
  if (!qword_2692D9218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9218);
  }
  return result;
}

unint64_t sub_248081FF8()
{
  unint64_t result = qword_2692D9220;
  if (!qword_2692D9220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9220);
  }
  return result;
}

unint64_t sub_248082050()
{
  unint64_t result = qword_2692D9228;
  if (!qword_2692D9228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9228);
  }
  return result;
}

unint64_t sub_2480820A8()
{
  unint64_t result = qword_2692D9230;
  if (!qword_2692D9230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9230);
  }
  return result;
}

unint64_t sub_248082100()
{
  unint64_t result = qword_2692D9238;
  if (!qword_2692D9238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9238);
  }
  return result;
}

unint64_t sub_248082158()
{
  unint64_t result = qword_2692D9240;
  if (!qword_2692D9240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9240);
  }
  return result;
}

unint64_t sub_2480821B0()
{
  unint64_t result = qword_2692D9248;
  if (!qword_2692D9248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9248);
  }
  return result;
}

unint64_t sub_248082208()
{
  unint64_t result = qword_2692D9250;
  if (!qword_2692D9250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9250);
  }
  return result;
}

unint64_t sub_248082260()
{
  unint64_t result = qword_2692D9258;
  if (!qword_2692D9258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9258);
  }
  return result;
}

unint64_t sub_2480822B8()
{
  unint64_t result = qword_2692D9260;
  if (!qword_2692D9260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9260);
  }
  return result;
}

uint64_t sub_24808230C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x646E694B776F6C66 && a2 == 0xE800000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7541746567726174 && a2 == 0xED00006761546874 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E69506465786966 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6570795465646F63 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000248191AA0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x526D6F74706D7973 && a2 == 0xED000074726F7065 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000248191AC0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_24808279C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65696C63 && a2 == 0xE600000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726576726573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_248082880(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7075746573 && a2 == 0xE500000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726961706572 && a2 == 0xE600000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646578696DLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2480829C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7265766F63736964 && a2 == 0xEB00000000676E69;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265766F63736964 && a2 == 0xEA00000000006465 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646572696170 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_248082B2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x614D73776F6C6C61 && a2 == 0xEC0000006C61756ELL;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEE006C61756E614DLL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53676E6972696170 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_248082CD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73746E756F636361 && a2 == 0xE800000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365636976726573 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000248191AE0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53676E6972696170 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_248082EA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7472617453746F6ELL && a2 == 0xEA00000000006465;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2003789939 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7041889 && a2 == 0xE300000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465726577736E61 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2480830BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F436168706C61 && a2 == 0xE900000000000065 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646F437469676964 && a2 == 0xE900000000000065 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F436C6175736976 && a2 == 0xEA00000000006564 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65646F437271 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t static ObjcArchivable.unarchive(from:backing:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_248175700();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v18[-v13];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 24))(a1, a3, a4);
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = v5;
  uint64_t v22 = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  sub_248024770((void (*)(char *, char *))sub_2480834A8, (uint64_t)v18, v15, a3, (uint64_t)&v23, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_2480834A8(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void, void))(v2[3] + 32))(a1, v2[5], v2[2]);
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t sub_2480834F4()
{
  return 1;
}

uint64_t static ObjcArchivableWrapper.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t ObjcArchivableWrapper.encoder.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FBB338((uint64_t)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x60), a1, &qword_2692D9268);
}

uint64_t ObjcArchivableWrapper.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x68);
  swift_beginAccess();
  uint64_t v4 = sub_248175700();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ObjcArchivableWrapper.wrappedValue.setter(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x68);
  swift_beginAccess();
  uint64_t v4 = sub_248175700();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*ObjcArchivableWrapper.wrappedValue.modify())()
{
  return j__swift_endAccess;
}

BOOL ObjcArchivableWrapper.needsUnarchivalDevelopment.getter()
{
  uint64_t v1 = *MEMORY[0x263F8EED0] & *v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_248175700();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v10 - v5;
  BOOL v7 = (char *)v0 + *(void *)(v1 + 112);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  BOOL v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v6, 1, AssociatedTypeWitness) != 1;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

id ObjcArchivableWrapper.__allocating_init(encoder:wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_248175700();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v15[-v8 - 8];
  sub_247FF649C(a1, (uint64_t)v15);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);
  id v10 = objc_allocWithZone(v2);
  id v11 = sub_248084F4C((uint64_t)v15, a2, (uint64_t)v9);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v12 = sub_248175700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a2, v12);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v11;
}

id ObjcArchivableWrapper.__allocating_init(wrappedValue:)(uint64_t a1)
{
  id v2 = sub_2480851D0(a1);
  uint64_t v3 = sub_248175700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return v2;
}

id ObjcArchivableWrapper.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return ObjcArchivableWrapper.init(coder:)(a1);
}

id ObjcArchivableWrapper.init(coder:)(void *a1)
{
  uint64_t v3 = *MEMORY[0x263F8EED0] & *v1;
  uint64_t v4 = *(void *)(v3 + 0x50);
  uint64_t v5 = (void *)sub_248175700();
  uint64_t v28 = *(v5 - 1);
  id v29 = v5;
  MEMORY[0x270FA5388](v5);
  unsigned __int8 v26 = (char *)&v24 - v6;
  uint64_t v7 = *(void *)(v3 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_248175700();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v30 = v1;
  uint64_t v15 = v1;
  unsigned int v16 = (void *)sub_248175130();
  id v31 = a1;
  LODWORD(a1) = objc_msgSend(a1, sel_decodeBoolForKey_, v16);

  if (!a1)
  {
    swift_getObjectType();

    uint64_t v20 = (uint64_t)v26;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v26, 1, 1, v4);
    id v19 = sub_2480851D0(v20);
    (*(void (**)(uint64_t, id))(v28 + 8))(v20, v29);

LABEL_6:
    swift_deallocPartialClassInstance();
    return v19;
  }
  id v29 = v15;
  id v17 = v31;
  (*(void (**)(id, uint64_t, uint64_t))(v7 + 24))(v31, v4, v7);
  uint64_t v18 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v21 = (uint64_t)v14;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v14, v12, AssociatedTypeWitness);
    id v22 = v29;
    swift_getObjectType();

    id v19 = sub_248085320(v21);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, AssociatedTypeWitness);
    goto LABEL_6;
  }

  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v9);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_248083FA0(uint64_t a1, uint64_t a2, void *a3)
{
  return ObjcArchivableWrapper.init(coder:)(a3);
}

Swift::Void __swiftcall ObjcArchivableWrapper.encode(with:)(NSCoder with)
{
  Class isa = with.super.isa;
  v23[0] = *MEMORY[0x263F8EED0] & *v1;
  uint64_t v2 = v23[0];
  uint64_t v3 = sub_248174570();
  MEMORY[0x270FA5388](v3 - 8);
  v23[1] = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_248174580();
  uint64_t v24 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 80);
  uint64_t v9 = sub_248175700();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v23 - v12;
  uint64_t v14 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v11);
  unsigned int v16 = (char *)v23 - v15;
  sub_247FBB338((uint64_t)v1 + *(void *)(v2 + 96), (uint64_t)&v26, &qword_2692D9268);
  if (v27)
  {
    Class v17 = isa;
    sub_247FB8480(&v26, (uint64_t)v28);
    uint64_t v18 = (char *)v1 + *(void *)((*MEMORY[0x263F8EED0] & *v1) + 0x68);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v18, v9);
    int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8);
    if (v19 == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v8);
      (*(void (**)(Class, unsigned char *, uint64_t))(*(void *)(v23[0] + 88) + 16))(v17, v28, v8);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v8);
    }
    id v22 = (void *)sub_248175130();
    [(objc_class *)v17 encodeBool:v19 != 1 forKey:v22];

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  }
  else
  {
    sub_248085580((uint64_t)&v26);
    sub_248174560();
    sub_248084C54(MEMORY[0x263F8EE78]);
    sub_2480855E0();
    sub_248174710();
    uint64_t v20 = (void *)sub_248174550();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    uint64_t v21 = (void *)sub_248174720();

    [(objc_class *)isa failWithError:v21];
  }
}

void sub_248084430(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  ObjcArchivableWrapper.encode(with:)((NSCoder)v4);
}

uint64_t ObjcArchivableWrapper.developingUnarchive(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v34 = a1;
  uint64_t v36 = a2;
  id v4 = (void *)(*MEMORY[0x263F8EED0] & *v2);
  uint64_t v5 = v4[10];
  uint64_t v6 = sub_248175700();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v35 = (char *)&v27 - v7;
  uint64_t v33 = v4[11];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_248175700();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v27 - v17;
  int v19 = (char *)v3 + v4[14];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v19, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v36, 1, 1, v5);
  }
  else
  {
    uint64_t v28 = v10;
    uint64_t v29 = v9;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, AssociatedTypeWitness);
    uint64_t v21 = v35;
    uint64_t v22 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v18, v34, v5);
    if (v22)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v21, 0, 1, v5);
      uint64_t v23 = (char *)v3 + *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0x68);
      swift_beginAccess();
      uint64_t v25 = v31;
      uint64_t v24 = v32;
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v23, v21, v32);
      swift_endAccess();
      long long v26 = v30;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v30, 1, 1, AssociatedTypeWitness);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v19, v26, v29);
      swift_endAccess();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 16))(v36, v23, v24);
    }
  }
}

id ObjcArchivableWrapper.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ObjcArchivableWrapper.init()()
{
}

void sub_2480849B4()
{
}

uint64_t sub_2480849FC(void *a1)
{
  uint64_t v2 = (void *)MEMORY[0x263F8EED0];
  sub_248085580((uint64_t)a1 + *(void *)((*MEMORY[0x263F8EED0] & *a1) + 0x60));
  uint64_t v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x68);
  uint64_t v4 = sub_248175700();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = (char *)a1 + *(void *)((*v2 & *a1) + 0x70);
  swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_248175700();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t static ObjcArchivableWrapperClassProducer.classForNSXPCListenerEndpoint()()
{
  return __swift_instantiateConcreteTypeFromMangledName(qword_2692D9278);
}

id ObjcArchivableWrapperClassProducer.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

id _s12AppleIDSetup21ObjcArchivableWrapperCfD_0()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_248084C54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AC8);
  uint64_t v2 = sub_248175A00();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_247FBB338(v6, (uint64_t)&v15, (uint64_t *)&unk_2692D9300);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_248084D8C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_247FBB1B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_248084D8C(uint64_t a1, uint64_t a2)
{
  sub_248175E50();
  sub_2481751A0();
  uint64_t v4 = sub_248175EC0();
  return sub_248084E04(a1, a2, v4);
}

unint64_t sub_248084E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_248175CE0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_248175CE0() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_248175CE0()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

id sub_248084F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = (void *)MEMORY[0x263F8EED0];
  uint64_t v8 = (char *)v3 + *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0x68);
  (*(void (**)(char *, uint64_t, uint64_t, void))(*(void *)(*(void *)((*MEMORY[0x263F8EED0] & *v3)
                                                                                   + 0x50)
                                                                       - 8)
                                                           + 56))(v8, 1, 1, *(void *)((*MEMORY[0x263F8EED0] & *v3) + 0x50));
  uint64_t v9 = (char *)v3 + *(void *)((*v7 & *v3) + 0x70);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v9, 1, 1, AssociatedTypeWitness);
  sub_247FBB338(a1, (uint64_t)v3 + *(void *)((*v7 & *v3) + 0x60), &qword_2692D9268);
  swift_beginAccess();
  uint64_t v11 = sub_248175700();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24);
  BOOL v13 = v3;
  v12(v8, a2, v11);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v14 = sub_248175700();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v9, a3, v14);
  swift_endAccess();

  v18.receiver = v13;
  v18.super_class = ObjectType;
  id v15 = objc_msgSendSuper2(&v18, sel_init);
  sub_248085580(a1);
  return v15;
}

id sub_2480851D0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_248175700();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - v6;
  uint64_t v12 = 0;
  memset(v11, 0, sizeof(v11));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))((char *)v11 - v6, 1, 1, AssociatedTypeWitness);
  id v8 = objc_allocWithZone(v1);
  id v9 = sub_248084F4C((uint64_t)v11, a1, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

id sub_248085320(uint64_t a1)
{
  uint64_t v3 = *((void *)v1 + 10);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_248175700();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)v17 - v7;
  uint64_t v9 = sub_248175700();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v17 - v11;
  uint64_t v18 = 0;
  memset(v17, 0, sizeof(v17));
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))((char *)v17 - v11, 1, 1, v3);
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, a1, AssociatedTypeWitness);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, AssociatedTypeWitness);
  id v14 = objc_allocWithZone(v1);
  id v15 = sub_248084F4C((uint64_t)v17, (uint64_t)v12, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v15;
}

uint64_t sub_248085580(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9268);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2480855E0()
{
  unint64_t result = qword_2692D9270;
  if (!qword_2692D9270)
  {
    sub_248174580();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9270);
  }
  return result;
}

void sub_248085638()
{
}

uint64_t dispatch thunk of ObjcArchivable.archive(with:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of static ObjcArchivable.intermediateUnarchive(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static ObjcArchivable.developedUnarchive(from:backing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_2480856B8()
{
  uint64_t result = sub_248175700();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_248175700();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for ObjcArchivableWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ObjcArchivableWrapper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObjcArchivableWrapper);
}

uint64_t dispatch thunk of ObjcArchivableWrapper.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for ObjcArchivableWrapperClassProducer()
{
  return self;
}

id ModernAppleIDAuthenticationContext.__allocating_init(_:signInModelModifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  id v8 = (uint64_t *)&v7[OBJC_IVAR___AKModernAppleIDAuthenticationContext_signInModelModifier];
  uint64_t *v8 = 0;
  v8[1] = 0;
  *(void *)&v7[OBJC_IVAR___AKModernAppleIDAuthenticationContext_model] = a1;
  uint64_t v9 = *v8;
  uint64_t *v8 = a2;
  v8[1] = a3;
  swift_retain();
  sub_247F98D10(a2);
  sub_247F98D68(v9);
  v12.receiver = v7;
  v12.super_class = v3;
  id v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_247F98D68(a2);
  swift_release();
  return v10;
}

id ModernAppleIDAuthenticationContext.init(_:signInModelModifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)&v3[OBJC_IVAR___AKModernAppleIDAuthenticationContext_signInModelModifier];
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)&v3[OBJC_IVAR___AKModernAppleIDAuthenticationContext_model] = a1;
  uint64_t v6 = *v5;
  *uint64_t v5 = a2;
  v5[1] = a3;
  swift_retain();
  sub_247F98D10(a2);
  sub_247F98D68(v6);
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for ModernAppleIDAuthenticationContext();
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_247F98D68(a2);
  swift_release();
  return v7;
}

uint64_t type metadata accessor for ModernAppleIDAuthenticationContext()
{
  return self;
}

id ModernAppleIDAuthenticationContext.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void ModernAppleIDAuthenticationContext.init()()
{
}

id ModernAppleIDAuthenticationContext.__allocating_init(authenticatedServerRequestContext:)(uint64_t a1)
{
  return sub_248085B1C(a1, (SEL *)&selRef_initWithAuthenticatedServerRequestContext_);
}

void ModernAppleIDAuthenticationContext.init(authenticatedServerRequestContext:)()
{
}

id ModernAppleIDAuthenticationContext.__allocating_init(context:)(uint64_t a1)
{
  return sub_248085B1C(a1, (SEL *)&selRef_initWithContext_);
}

id sub_248085B1C(uint64_t a1, SEL *a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(v2), *a2, a1);
  swift_unknownObjectRelease();
  return v3;
}

void ModernAppleIDAuthenticationContext.init(context:)()
{
}

void sub_248085BAC()
{
}

id ModernAppleIDAuthenticationContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ModernAppleIDAuthenticationContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t ModernAppleIDAuthenticationContext.presentBasicLoginUI()(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_248085C90, 0, 0);
}

uint64_t sub_248085C90()
{
  id v1 = *(id *)(v0 + 64);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248085D38;
  uint64_t v3 = *(void *)(v0 + 64);
  return sub_24808EFD8(v0 + 16, v3);
}

uint64_t sub_248085D38()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 16);
  uint64_t v5 = *(void *)(*v1 + 24);
  uint64_t v6 = *(void *)(*v1 + 32);
  uint64_t v7 = *(void *)(*v1 + 40);
  uint64_t v8 = *(void *)(*v1 + 48);
  swift_task_dealloc();
  if (!v0)
  {
    objc_super v9 = *(void **)(v2 + 56);
    *objc_super v9 = v4;
    v9[1] = v5;
    v9[2] = v6;
    v9[3] = v7;
    v9[4] = v8;
  }
  id v10 = *(uint64_t (**)(void))(v3 + 8);
  return v10();
}

uint64_t sub_248085EBC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  v2[8] = type metadata accessor for AuthenticationModel();
  v2[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_248085F50, 0, 0);
}

uint64_t sub_248085F50()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  *(void *)(v0 + 80) = v1;
  return MEMORY[0x270FA2498](sub_248085F7C, v1, 0);
}

uint64_t sub_248085F7C()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_248086038;
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  return sub_247FCC190(v6, v3, v7, ObjectType, v2);
}

uint64_t sub_248086038()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_248086134, 0, 0);
}

uint64_t sub_248086134()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  *(unsigned char *)(v0 + 144) = *(unsigned char *)(v1 + *(int *)(*(void *)(v0 + 64) + 36));
  sub_248095AE0(v1);
  return MEMORY[0x270FA2498](sub_2480861AC, v2, 0);
}

uint64_t sub_2480861AC()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[12] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_248086268;
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  return sub_247FCC190(v6, v3, v7, ObjectType, v2);
}

uint64_t sub_248086268()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_248086364, 0, 0);
}

uint64_t sub_248086364()
{
  char v1 = *(unsigned char *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void **)(v0 + 56);
  uint64_t v5 = *(void *)(v2 + *(int *)(*(void *)(v0 + 64) + 32));
  *(void *)(v0 + 104) = v5;
  swift_bridgeObjectRetain();
  sub_248095AE0(v2);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 112) = v6;
  *(void *)(v6 + 16) = v4;
  *(unsigned char *)(v6 + 24) = v1;
  *(void *)(v6 + 32) = v5;
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 120) = v7;
  *(void *)(v7 + 16) = v4;
  id v8 = v4;
  return MEMORY[0x270FA2498](sub_248086438, v3, 0);
}

uint64_t sub_248086438()
{
  uint64_t v1 = *(void *)(v0[10] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97A8);
  *uint64_t v2 = v0;
  v2[1] = sub_248086540;
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[8];
  return sub_247FCE628((uint64_t)(v0 + 2), v1, (uint64_t)sub_248095B44, v4, (uint64_t)&unk_2692D97A0, v5, v6, v3);
}

uint64_t sub_248086540()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_248086754;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v3 = sub_24808665C;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_24808665C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2480866D8, 0, 0);
}

uint64_t sub_2480866D8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v3;
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = 0;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_248086754()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_2480867E0(uint64_t a1, id a2, char a3, uint64_t a4)
{
  id v8 = objc_msgSend(a2, sel_username);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_248175160();
    uint64_t v36 = v11;
    uint64_t v37 = v10;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
  }
  id v12 = objc_msgSend(a2, sel__password);
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = sub_248175160();
    uint64_t v34 = v15;
    uint64_t v35 = v14;
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v35 = 0;
  }
  id v16 = objc_allocWithZone(MEMORY[0x263F29110]);
  id v17 = a2;
  id v18 = objc_msgSend(v16, sel_initWithContext_, v17);
  if (v18)
  {
    id v33 = v18;
    objc_msgSend(v18, sel__updateWithValuesFromContext_, v17);

    uint64_t v19 = 514;
    if (a3) {
      uint64_t v19 = 66050;
    }
    uint64_t v32 = v19;
    uint64_t v20 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
    uint64_t v21 = *(void **)v20;
    uint64_t v22 = *(void **)(v20 + 8);
    uint64_t v23 = *(void **)(v20 + 16);
    uint64_t v24 = *(void **)(v20 + 24);
    uint64_t v30 = *(void **)(v20 + 40);
    uint64_t v31 = *(void *)(v20 + 32);
    uint64_t v25 = *(void *)(v20 + 56);
    uint64_t v29 = *(void *)(v20 + 48);
    uint64_t v27 = *(void **)(v20 + 64);
    long long v26 = *(void **)(v20 + 72);
    char v28 = *(unsigned char *)(v20 + 80);
    swift_bridgeObjectRetain();
    sub_247F98958(v21, v22, v23, v24, v31, v30, v29, v25, v27, v26, v28);
    *(void *)uint64_t v20 = v37;
    *(void *)(v20 + 8) = v36;
    *(void *)(v20 + 16) = v35;
    *(void *)(v20 + 24) = v34;
    *(void *)(v20 + 32) = v32;
    *(void *)(v20 + 40) = v33;
    *(void *)(v20 + 48) = a4;
    *(void *)(v20 + 56) = 0;
    *(void *)(v20 + 64) = 0;
    *(void *)(v20 + 72) = 0;
    *(unsigned char *)(v20 + 80) = 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_248086994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2480869B8, 0, 0);
}

uint64_t sub_2480869B8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  unint64_t v3 = *(void *)v2;
  *(void *)(v0 + 40) = *(void *)v2;
  unint64_t v4 = *(void *)(v2 + 8);
  *(void *)(v0 + 48) = v4;
  uint64_t v5 = *(void **)(v2 + 16);
  *(void *)(v0 + 56) = v5;
  unint64_t v6 = *(void *)(v2 + 24);
  *(void *)(v0 + 64) = v6;
  uint64_t v7 = *(void *)(v2 + 32);
  *(void *)(v0 + 72) = v7;
  id v8 = *(void **)(v2 + 40);
  *(void *)(v0 + 80) = v8;
  uint64_t v9 = *(void *)(v2 + 48);
  *(void *)(v0 + 88) = v9;
  uint64_t v10 = *(void **)(v2 + 56);
  *(void *)(v0 + 96) = v10;
  uint64_t v11 = *(void **)(v2 + 64);
  *(void *)(v0 + 104) = v11;
  id v12 = *(void **)(v2 + 72);
  *(void *)(v0 + 112) = v12;
  if (*(unsigned char *)(v2 + 80))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9700);
    sub_24809594C();
    swift_allocError();
    *uint64_t v13 = xmmword_24817A5F0;
    swift_willThrow();
LABEL_34:
    uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
LABEL_35:
    return v54();
  }
  if ((v7 & 0x1000000) == 0
    || (uint64_t v14 = *(void *)(v0 + 32) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_signInModelModifier,
        uint64_t v15 = *(int **)v14,
        *(void *)(v0 + 120) = *(void *)v14,
        *(void *)(v0 + 128) = *(void *)(v14 + 8),
        !v15))
  {
    uint64_t v19 = v9;
    unint64_t v70 = (unint64_t)v5;
    id v65 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v20 = v8;
    uint64_t v67 = v19;
    swift_bridgeObjectRetain();
    if (v4 && v6)
    {
      uint64_t v21 = HIBYTE(v4) & 0xF;
      if ((v4 & 0x2000000000000000) == 0) {
        uint64_t v21 = v3 & 0xFFFFFFFFFFFFLL;
      }
      if (v21)
      {
        uint64_t v22 = HIBYTE(v6) & 0xF;
        if ((v6 & 0x2000000000000000) == 0) {
          uint64_t v22 = v70 & 0xFFFFFFFFFFFFLL;
        }
        if (v22)
        {
          uint64_t v23 = *(unint64_t **)(v0 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_247F98958((void *)v3, (void *)v4, (void *)v70, (void *)v6, v7, v8, v67, (uint64_t)v10, v11, v12, 0);
          *uint64_t v23 = v3;
          v23[1] = v4;
          void v23[2] = v70;
          v23[3] = v6;
LABEL_44:
          uint64_t v54 = *(uint64_t (**)(void))(v0 + 8);
          goto LABEL_35;
        }
      }
    }
    if ((v7 & 0x100) != 0)
    {
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v32 = sub_248174B90();
      __swift_project_value_buffer(v32, (uint64_t)qword_2692D6A78);
      id v33 = sub_248174B70();
      os_log_type_t v34 = sub_2481755B0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v35 = 0;
        _os_log_impl(&dword_247F93000, v33, v34, "Client decided to skip basic login, means they are cancelling", v35, 2u);
        MEMORY[0x24C574E00](v35, -1, -1);
      }
      uint64_t v37 = *(void **)(v0 + 104);
      uint64_t v36 = *(void **)(v0 + 112);
      uint64_t v68 = *(void *)(v0 + 88);
      uint64_t v71 = *(void *)(v0 + 96);
      uint64_t v38 = *(void *)(v0 + 72);
      uint64_t v66 = *(void **)(v0 + 80);
      int v40 = *(void **)(v0 + 56);
      uint64_t v39 = *(void **)(v0 + 64);
      char v41 = *(void **)(v0 + 40);
      char v42 = *(void **)(v0 + 48);

      sub_247FE1388();
      swift_allocError();
      uint64_t v44 = 3;
    }
    else
    {
      if ((v7 & 1) == 0)
      {
        if (v10)
        {
          id v24 = v65;
          if (objc_msgSend(v24, sel_ak_isUserCancelError))
          {
            long long v26 = *(void **)(v0 + 104);
            uint64_t v25 = *(void **)(v0 + 112);
            uint64_t v68 = *(void *)(v0 + 88);
            uint64_t v71 = *(void *)(v0 + 96);
            uint64_t v27 = *(void **)(v0 + 64);
            uint64_t v64 = *(void *)(v0 + 72);
            uint64_t v66 = *(void **)(v0 + 80);
            char v28 = *(void **)(v0 + 48);
            uint64_t v29 = *(void **)(v0 + 56);
            uint64_t v30 = *(void **)(v0 + 40);
            sub_247FE1388();
            swift_allocError();
            *(void *)uint64_t v31 = 2;
            *(_OWORD *)(v31 + 8) = 0u;
            *(_OWORD *)(v31 + 24) = 0u;
            *(void *)(v31 + 40) = 0;
            *(unsigned char *)(v31 + 48) = 4;
            swift_willThrow();

            char v62 = v26;
            uint64_t v63 = v25;
LABEL_41:
            uint64_t v49 = v30;
            int v50 = v28;
            char v51 = v29;
            char v52 = v27;
            uint64_t v53 = v64;
            goto LABEL_33;
          }

          id v55 = v24;
          unsigned int v56 = objc_msgSend(v55, sel_ak_isUserSkippedError);
          uint64_t v57 = *(void **)(v0 + 104);
          uint64_t v58 = *(void **)(v0 + 112);
          uint64_t v29 = *(void **)(v0 + 56);
          uint64_t v27 = *(void **)(v0 + 64);
          uint64_t v30 = *(void **)(v0 + 40);
          char v28 = *(void **)(v0 + 48);
          if (v56)
          {
            uint64_t v68 = *(void *)(v0 + 88);
            uint64_t v71 = *(void *)(v0 + 96);
            uint64_t v64 = *(void *)(v0 + 72);
            uint64_t v66 = *(void **)(v0 + 80);
            sub_247FE1388();
            swift_allocError();
            *(void *)uint64_t v59 = 3;
            *(_OWORD *)(v59 + 8) = 0u;
            *(_OWORD *)(v59 + 24) = 0u;
            *(void *)(v59 + 40) = 0;
            *(unsigned char *)(v59 + 48) = 4;
            swift_willThrow();

            char v62 = v57;
            uint64_t v63 = v58;
            goto LABEL_41;
          }
          sub_247F98958(v30, v28, v29, v27, *(void *)(v0 + 72), *(void **)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), v57, v58, 0);
        }
        else
        {
          sub_247F98958((void *)v3, (void *)v4, (void *)v70, (void *)v6, v7, v8, v19, 0, v11, v12, 0);
        }
        unsigned __int8 v60 = *(_OWORD **)(v0 + 16);
        *unsigned __int8 v60 = 0u;
        v60[1] = 0u;
        goto LABEL_44;
      }
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v45 = sub_248174B90();
      __swift_project_value_buffer(v45, (uint64_t)qword_2692D6A78);
      uint64_t v46 = sub_248174B70();
      os_log_type_t v47 = sub_2481755B0();
      if (os_log_type_enabled(v46, v47))
      {
        unsigned __int8 v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unsigned __int8 v48 = 0;
        _os_log_impl(&dword_247F93000, v46, v47, "Client decided to cancel basic login", v48, 2u);
        MEMORY[0x24C574E00](v48, -1, -1);
      }
      uint64_t v37 = *(void **)(v0 + 104);
      uint64_t v36 = *(void **)(v0 + 112);
      uint64_t v68 = *(void *)(v0 + 88);
      uint64_t v71 = *(void *)(v0 + 96);
      uint64_t v38 = *(void *)(v0 + 72);
      uint64_t v66 = *(void **)(v0 + 80);
      int v40 = *(void **)(v0 + 56);
      uint64_t v39 = *(void **)(v0 + 64);
      char v41 = *(void **)(v0 + 40);
      char v42 = *(void **)(v0 + 48);

      sub_247FE1388();
      swift_allocError();
      uint64_t v44 = 2;
    }
    *(void *)uint64_t v43 = v44;
    *(_OWORD *)(v43 + 8) = 0u;
    *(_OWORD *)(v43 + 24) = 0u;
    *(void *)(v43 + 40) = 0;
    *(unsigned char *)(v43 + 48) = 4;
    swift_willThrow();
    char v62 = v37;
    uint64_t v63 = v36;
    uint64_t v49 = v41;
    int v50 = v42;
    char v51 = v40;
    char v52 = v39;
    uint64_t v53 = v38;
LABEL_33:
    sub_247F98958(v49, v50, v51, v52, v53, v66, v68, v71, v62, v63, 0);
    goto LABEL_34;
  }
  char v61 = v11;
  uint64_t v16 = v9;
  sub_247F986A0((void *)v3, (void *)v4, v5, (void *)v6, (void *)v7, v8, v9, v10, v61, v12, 0);
  sub_247F98D10((uint64_t)v15);
  uint64_t v69 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
  id v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v17;
  *id v17 = v0;
  v17[1] = sub_24808709C;
  return v69(v16);
}

uint64_t sub_24808709C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_2480876BC;
  }
  else
  {
    sub_247F98D68(*(void *)(v2 + 120));
    unint64_t v3 = sub_2480871B8;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_2480871B8()
{
  unint64_t v1 = *(void *)(v0 + 48);
  if (!v1) {
    goto LABEL_10;
  }
  unint64_t v2 = *(void *)(v0 + 64);
  if (!v2) {
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0) {
    uint64_t v6 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
LABEL_10:
    uint64_t v12 = *(void *)(v0 + 72);
    if ((v12 & 0x100) != 0)
    {
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v22 = sub_248174B90();
      __swift_project_value_buffer(v22, (uint64_t)qword_2692D6A78);
      uint64_t v23 = sub_248174B70();
      os_log_type_t v24 = sub_2481755B0();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v25 = 0;
        _os_log_impl(&dword_247F93000, v23, v24, "Client decided to skip basic login, means they are cancelling", v25, 2u);
        MEMORY[0x24C574E00](v25, -1, -1);
      }
      uint64_t v27 = *(void **)(v0 + 104);
      long long v26 = *(void **)(v0 + 112);
      uint64_t v57 = *(void *)(v0 + 88);
      uint64_t v59 = *(void *)(v0 + 96);
      uint64_t v28 = *(void *)(v0 + 72);
      id v55 = *(void **)(v0 + 80);
      uint64_t v30 = *(void **)(v0 + 56);
      uint64_t v29 = *(void **)(v0 + 64);
      uint64_t v31 = *(void **)(v0 + 40);
      uint64_t v32 = *(void **)(v0 + 48);

      sub_247FE1388();
      swift_allocError();
      uint64_t v34 = 3;
    }
    else
    {
      if ((v12 & 1) == 0)
      {
        uint64_t v13 = *(void **)(v0 + 96);
        if (v13)
        {
          id v14 = v13;
          if (objc_msgSend(v14, sel_ak_isUserCancelError))
          {
            uint64_t v16 = *(void **)(v0 + 104);
            uint64_t v15 = *(void **)(v0 + 112);
            uint64_t v57 = *(void *)(v0 + 88);
            uint64_t v59 = *(void *)(v0 + 96);
            id v17 = *(void **)(v0 + 64);
            uint64_t v54 = *(void *)(v0 + 72);
            id v55 = *(void **)(v0 + 80);
            id v18 = *(void **)(v0 + 48);
            uint64_t v19 = *(void **)(v0 + 56);
            id v20 = *(void **)(v0 + 40);
            sub_247FE1388();
            swift_allocError();
            *(void *)uint64_t v21 = 2;
            *(_OWORD *)(v21 + 8) = 0u;
            *(_OWORD *)(v21 + 24) = 0u;
            *(void *)(v21 + 40) = 0;
            *(unsigned char *)(v21 + 48) = 4;
            swift_willThrow();

            char v52 = v16;
            uint64_t v53 = v15;
LABEL_30:
            uint64_t v39 = v20;
            int v40 = v18;
            char v41 = v19;
            char v42 = v17;
            uint64_t v43 = v54;
            goto LABEL_26;
          }

          id v45 = v14;
          unsigned int v46 = objc_msgSend(v45, sel_ak_isUserSkippedError);
          os_log_type_t v47 = *(void **)(v0 + 104);
          unsigned __int8 v48 = *(void **)(v0 + 112);
          uint64_t v19 = *(void **)(v0 + 56);
          id v17 = *(void **)(v0 + 64);
          id v20 = *(void **)(v0 + 40);
          id v18 = *(void **)(v0 + 48);
          if (v46)
          {
            uint64_t v57 = *(void *)(v0 + 88);
            uint64_t v59 = *(void *)(v0 + 96);
            uint64_t v54 = *(void *)(v0 + 72);
            id v55 = *(void **)(v0 + 80);
            sub_247FE1388();
            swift_allocError();
            *(void *)uint64_t v49 = 3;
            *(_OWORD *)(v49 + 8) = 0u;
            *(_OWORD *)(v49 + 24) = 0u;
            *(void *)(v49 + 40) = 0;
            *(unsigned char *)(v49 + 48) = 4;
            swift_willThrow();

            char v52 = v47;
            uint64_t v53 = v48;
            goto LABEL_30;
          }
          sub_247F98958(v20, v18, v19, v17, *(void *)(v0 + 72), *(void **)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), v47, v48, 0);
        }
        else
        {
          sub_247F98958(*(void **)(v0 + 40), (void *)v1, *(void **)(v0 + 56), *(void **)(v0 + 64), v12, *(void **)(v0 + 80), *(void *)(v0 + 88), 0, *(void **)(v0 + 104), *(void **)(v0 + 112), 0);
        }
        int v50 = *(_OWORD **)(v0 + 16);
        *int v50 = 0u;
        v50[1] = 0u;
        goto LABEL_33;
      }
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_248174B90();
      __swift_project_value_buffer(v35, (uint64_t)qword_2692D6A78);
      uint64_t v36 = sub_248174B70();
      os_log_type_t v37 = sub_2481755B0();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v38 = 0;
        _os_log_impl(&dword_247F93000, v36, v37, "Client decided to cancel basic login", v38, 2u);
        MEMORY[0x24C574E00](v38, -1, -1);
      }
      uint64_t v27 = *(void **)(v0 + 104);
      long long v26 = *(void **)(v0 + 112);
      uint64_t v57 = *(void *)(v0 + 88);
      uint64_t v59 = *(void *)(v0 + 96);
      uint64_t v28 = *(void *)(v0 + 72);
      id v55 = *(void **)(v0 + 80);
      uint64_t v30 = *(void **)(v0 + 56);
      uint64_t v29 = *(void **)(v0 + 64);
      uint64_t v31 = *(void **)(v0 + 40);
      uint64_t v32 = *(void **)(v0 + 48);

      sub_247FE1388();
      swift_allocError();
      uint64_t v34 = 2;
    }
    *(void *)uint64_t v33 = v34;
    *(_OWORD *)(v33 + 8) = 0u;
    *(_OWORD *)(v33 + 24) = 0u;
    *(void *)(v33 + 40) = 0;
    *(unsigned char *)(v33 + 48) = 4;
    swift_willThrow();
    char v52 = v27;
    uint64_t v53 = v26;
    uint64_t v39 = v31;
    int v40 = v32;
    char v41 = v30;
    char v42 = v29;
    uint64_t v43 = v28;
LABEL_26:
    sub_247F98958(v39, v40, v41, v42, v43, v55, v57, v59, v52, v53, 0);
    uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_34;
  }
  uint64_t v7 = *(void **)(v0 + 104);
  id v8 = *(void **)(v0 + 112);
  uint64_t v9 = *(void **)(v0 + 80);
  uint64_t v56 = *(void *)(v0 + 88);
  uint64_t v58 = *(void *)(v0 + 96);
  uint64_t v10 = *(void *)(v0 + 72);
  uint64_t v11 = *(unint64_t **)(v0 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247F98958((void *)v3, (void *)v1, (void *)v5, (void *)v2, v10, v9, v56, v58, v7, v8, 0);
  unint64_t *v11 = v3;
  v11[1] = v1;
  _OWORD v11[2] = v5;
  v11[3] = v2;
LABEL_33:
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
LABEL_34:
  return v44();
}

uint64_t sub_2480876BC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  sub_247F98958(*(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void **)(v0 + 104), *(void **)(v0 + 112), 0);
  sub_247F98D68(v1);
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2480878B8(const void *a1, void *a2)
{
  *(void *)(v2 + 56) = a2;
  *(void *)(v2 + 64) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_248087930, 0, 0);
}

uint64_t sub_248087930()
{
  id v1 = *(id *)(v0 + 56);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2480879D8;
  uint64_t v3 = *(void *)(v0 + 56);
  return sub_24808EFD8(v0 + 16, v3);
}

uint64_t sub_2480879D8()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  long long v4 = *(_OWORD *)(*v1 + 32);
  *(_OWORD *)(v3 + 88) = *(_OWORD *)(v3 + 16);
  *(void *)(v3 + 80) = v0;
  *(_OWORD *)(v3 + 104) = v4;
  *(void *)(v3 + 120) = *(void *)(v2 + 48);
  swift_task_dealloc();
  if (v0) {
    uint64_t v5 = sub_248087C6C;
  }
  else {
    uint64_t v5 = sub_248087B10;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_248087B10()
{
  uint64_t v1 = *(void *)(v0 + 64);

  if (!v1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (*(void *)(v0 + 96))
  {
    uint64_t v2 = (void *)sub_248175130();
    if (*(void *)(v0 + 112)) {
      goto LABEL_4;
    }
LABEL_8:
    uint64_t v3 = 0;
    if (*(void *)(v0 + 120)) {
      goto LABEL_5;
    }
LABEL_9:
    long long v4 = 0;
    goto LABEL_10;
  }
  uint64_t v2 = 0;
  if (!*(void *)(v0 + 112)) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v3 = (void *)sub_248175130();
  if (!*(void *)(v0 + 120)) {
    goto LABEL_9;
  }
LABEL_5:
  long long v4 = (void *)sub_248174FF0();
LABEL_10:
  uint64_t v5 = *(void (***)(void, void, void, void, void))(v0 + 64);
  ((void (**)(void, void *, void *, void *, void))v5)[2](v5, v2, v3, v4, 0);
  _Block_release(v5);

  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_248087C6C()
{
  uint64_t v1 = *(void *)(v0 + 64);

  uint64_t v2 = *(void **)(v0 + 80);
  if (v1)
  {
    uint64_t v3 = *(void (***)(void, void, void, void, void))(v0 + 64);
    long long v4 = (void *)sub_248174720();

    ((void (**)(void, void, void, void, void *))v3)[2](v3, 0, 0, 0, v4);
    _Block_release(v3);
  }
  else
  {
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t ModernAppleIDAuthenticationContext.dismissBasicLoginUI()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_248087D4C, 0, 0);
}

uint64_t sub_248087D4C()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248095C68;
  uint64_t v3 = *(void *)(v0 + 16);
  return sub_24808FEC4(v3);
}

uint64_t sub_248087DEC(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for AuthenticationModel();
  v2[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_248087E80, 0, 0);
}

uint64_t sub_248087E80()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  *(void *)(v0 + 48) = v1;
  return MEMORY[0x270FA2498](sub_248087EAC, v1, 0);
}

uint64_t sub_248087EAC()
{
  uint64_t v1 = v0[6];
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_248087F68;
  uint64_t v7 = v0[4];
  uint64_t v6 = v0[5];
  return sub_247FCC190(v6, v3, v7, ObjectType, v2);
}

uint64_t sub_248087F68()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_248088064, 0, 0);
}

uint64_t sub_248088064()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = *(void *)(v1 + *(int *)(v0[4] + 32));
  v0[8] = v4;
  swift_bridgeObjectRetain();
  sub_248095AE0(v1);
  uint64_t v5 = swift_task_alloc();
  v0[9] = v5;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  return MEMORY[0x270FA2498](sub_248088100, v2, 0);
}

uint64_t sub_248088100()
{
  uint64_t v1 = *(void *)(v0[6] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_2480881FC;
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[4];
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return sub_247FCE628((uint64_t)(v0 + 12), v1, (uint64_t)sub_248095B3C, v3, (uint64_t)&unk_2692D9788, 0, v4, v5);
}

uint64_t sub_2480881FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v4 = sub_2480883B4;
  }
  else {
    uint64_t v4 = sub_248088328;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248088328()
{
  uint64_t v1 = *(unsigned char **)(v0 + 16);
  swift_bridgeObjectRelease();
  *uint64_t v1 = *(unsigned char *)(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2480883B4()
{
  return MEMORY[0x270FA2498](sub_2480883D0, 0, 0);
}

uint64_t sub_2480883D0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_248088448(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = objc_allocWithZone(MEMORY[0x263F29110]);
  id v6 = a2;
  id v7 = objc_msgSend(v5, sel_initWithContext_, v6);
  if (v7)
  {
    id v8 = v7;
    objc_msgSend(v7, sel__updateWithValuesFromContext_, v6);

    uint64_t v9 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
    uint64_t v19 = *(void **)(v9 + 8);
    id v20 = *(void **)v9;
    uint64_t v10 = *(void *)(v9 + 32);
    id v17 = *(void **)(v9 + 24);
    id v18 = *(void **)(v9 + 16);
    uint64_t v11 = *(void **)(v9 + 40);
    uint64_t v12 = *(void *)(v9 + 48);
    uint64_t v14 = *(void *)(v9 + 56);
    uint64_t v13 = *(void **)(v9 + 64);
    uint64_t v15 = *(void **)(v9 + 72);
    char v16 = *(unsigned char *)(v9 + 80);
    swift_bridgeObjectRetain();
    sub_247F98958(v20, v19, v18, v17, v10, v11, v12, v14, v13, v15, v16);
    *(_OWORD *)uint64_t v9 = 0u;
    *(_OWORD *)(v9 + 16) = 0u;
    *(void *)(v9 + 32) = 514;
    *(void *)(v9 + 40) = v8;
    *(void *)(v9 + 48) = a3;
    *(void *)(v9 + 56) = 0;
    *(void *)(v9 + 64) = 0;
    *(void *)(v9 + 72) = 0;
    *(unsigned char *)(v9 + 80) = 1;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24808856C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24808858C, 0, 0);
}

uint64_t sub_24808858C()
{
  **(unsigned char **)(v0 + 16) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248088718(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_248088790, 0, 0);
}

uint64_t sub_248088790()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248088830;
  uint64_t v3 = *(void *)(v0 + 16);
  return sub_24808FEC4(v3);
}

uint64_t sub_248088830(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 48) = a1;
  *(void *)(v3 + 40) = v1;
  swift_task_dealloc();
  if (v1) {
    id v4 = sub_248095C70;
  }
  else {
    id v4 = sub_248095C5C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t ModernAppleIDAuthenticationContext.presentLoginAlertWithError(_:title:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[12] = a6;
  v7[13] = v6;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  return MEMORY[0x270FA2498](sub_248088974, 0, 0);
}

uint64_t sub_248088974()
{
  uint64_t v1 = *(void **)(v0 + 64);
  id v2 = *(id *)(v0 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v1;
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  void *v4 = v0;
  v4[1] = sub_248088A48;
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v0 + 72);
  return sub_24808F710(v0 + 16, v5, v9, v7, v8, v6, v10);
}

uint64_t sub_248088A48()
{
  uint64_t v2 = *v1;
  id v3 = *(void **)(*v1 + 64);
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 16);
  uint64_t v6 = *(void *)(*v1 + 24);
  uint64_t v7 = *(void *)(*v1 + 32);
  uint64_t v8 = *(void *)(*v1 + 40);
  uint64_t v9 = *(void *)(*v1 + 48);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (!v0)
  {
    uint64_t v10 = *(void **)(v2 + 56);
    void *v10 = v5;
    v10[1] = v6;
    void v10[2] = v7;
    v10[3] = v8;
    v10[4] = v9;
  }
  uint64_t v11 = *(uint64_t (**)(void))(v4 + 8);
  return v11();
}

uint64_t sub_248088C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[25] = a6;
  v7[26] = a7;
  v7[23] = a4;
  v7[24] = a5;
  v7[21] = a2;
  v7[22] = a3;
  v7[20] = a1;
  return MEMORY[0x270FA2498](sub_248088C38, 0, 0);
}

uint64_t sub_248088C38()
{
  uint64_t v1 = *(void *)(v0 + 208);
  long long v5 = *(_OWORD *)(v0 + 176);
  long long v6 = *(_OWORD *)(v0 + 192);
  uint64_t v2 = *(void *)(*(void *)(v0 + 168) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  *(void *)(v0 + 216) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 224) = v3;
  *(_OWORD *)(v3 + 16) = v5;
  *(_OWORD *)(v3 + 32) = v6;
  *(void *)(v3 + 48) = v1;
  return MEMORY[0x270FA2498](sub_248088CE0, v2, 0);
}

uint64_t sub_248088CE0()
{
  uint64_t v1 = *(void *)(v0[27] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[29] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  *uint64_t v2 = v0;
  v2[1] = sub_248088DE0;
  uint64_t v4 = v0[28];
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  return sub_247FCE628(v3, v1, (uint64_t)sub_248095A48, v4, (uint64_t)&unk_2692D9778, 0, v3, v5);
}

uint64_t sub_248088DE0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_248089170;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 216);
    uint64_t v3 = sub_248088EFC;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_248088EFC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_248088F64, 0, 0);
}

uint64_t sub_248088F64()
{
  uint64_t v1 = (void *)v0[21];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_248089060;
  uint64_t v2 = swift_continuation_init();
  v0[15] = MEMORY[0x263EF8330];
  v0[16] = 0x40000000;
  v0[17] = sub_24808956C;
  v0[18] = &block_descriptor_4;
  v0[19] = v2;
  objc_msgSend(v1, sel_presentBasicLoginUIWithCompletion_, v0 + 15);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_248089060()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 248) = v1;
  if (v1) {
    uint64_t v2 = sub_248089200;
  }
  else {
    uint64_t v2 = sub_2480891D4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_248089170()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2480891D4()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 112);
  long long v3 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v1 + 16) = v3;
  *(void *)(v1 + 32) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248089200()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24808926C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (!a3)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (!a5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a6)
  {
    uint64_t v10 = result;
    uint64_t v11 = swift_allocObject();
    swift_getErrorValue();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Error.into()(v20, (uint64_t)v18);
    char v12 = v19;
    *(void *)(v11 + 16) = a2;
    *(void *)(v11 + 24) = a3;
    *(void *)(v11 + 32) = a4;
    *(void *)(v11 + 40) = a5;
    long long v13 = v18[1];
    *(_OWORD *)(v11 + 48) = v18[0];
    *(_OWORD *)(v11 + 64) = v13;
    *(_OWORD *)(v11 + 80) = v18[2];
    *(unsigned char *)(v11 + 96) = v12;
    *(unsigned char *)(v11 + 97) = 1;
    uint64_t result = type metadata accessor for AuthenticationModel();
    uint64_t v14 = v10 + *(int *)(result + 40);
    long long v15 = *(_OWORD *)(v14 + 16);
    *(_OWORD *)(v11 + 104) = *(_OWORD *)v14;
    *(_OWORD *)(v11 + 120) = v15;
    long long v16 = *(_OWORD *)(v14 + 48);
    *(_OWORD *)(v11 + 136) = *(_OWORD *)(v14 + 32);
    char v17 = *(unsigned char *)(v14 + 80);
    *(_OWORD *)(v11 + 152) = v16;
    *(_OWORD *)(v11 + 168) = *(_OWORD *)(v14 + 64);
    *(unsigned char *)(v11 + 184) = v17;
    *(void *)uint64_t v14 = v11;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 8) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    *(_OWORD *)(v14 + 56) = 0u;
    *(void *)(v14 + 72) = 0;
    *(unsigned char *)(v14 + 80) = 10;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_2480893B4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 192) = a1;
  *(void *)(v2 + 200) = a2;
  return MEMORY[0x270FA2498](sub_2480893D4, 0, 0);
}

uint64_t sub_2480893D4()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v2 + 80) == 10)
  {
    uint64_t v3 = *(_OWORD **)v2;
    long long v4 = v3[1];
    long long v5 = v3[3];
    *(_OWORD *)(v0 + 32) = v3[2];
    *(_OWORD *)(v0 + 48) = v5;
    *(_OWORD *)(v0 + 16) = v4;
    long long v6 = v3[4];
    long long v7 = v3[5];
    long long v8 = v3[7];
    *(_OWORD *)(v0 + 96) = v3[6];
    *(_OWORD *)(v0 + 112) = v8;
    *(_OWORD *)(v0 + 64) = v6;
    *(_OWORD *)(v0 + 80) = v7;
    long long v9 = v3[8];
    long long v10 = v3[9];
    long long v11 = v3[10];
    *(_OWORD *)(v0 + 169) = *(_OWORD *)((char *)v3 + 169);
    *(_OWORD *)(v0 + 144) = v10;
    *(_OWORD *)(v0 + 160) = v11;
    *(_OWORD *)(v0 + 128) = v9;
    uint64_t v31 = *(void *)(v0 + 56);
    uint64_t v32 = *(void *)(v0 + 48);
    uint64_t v29 = *(void *)(v0 + 72);
    uint64_t v30 = *(void *)(v0 + 64);
    uint64_t v27 = *(void *)(v0 + 88);
    uint64_t v28 = *(void *)(v0 + 80);
    char v12 = *(unsigned char *)(v0 + 97);
    long long v13 = *(void **)(v0 + 104);
    uint64_t v14 = *(void **)(v0 + 128);
    os_log_type_t v24 = *(void **)(v0 + 120);
    uint64_t v25 = *(void **)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 136);
    long long v16 = *(void **)(v0 + 144);
    uint64_t v17 = *(void *)(v0 + 152);
    uint64_t v23 = *(void *)(v0 + 160);
    id v18 = *(void **)(v0 + 168);
    char v19 = *(void **)(v0 + 176);
    char v20 = *(unsigned char *)(v0 + 184);
    char v26 = *(unsigned char *)(v0 + 96);
    sub_247FAA620(v0 + 16);
    sub_247F98958(v13, v25, v24, v14, v15, v16, v17, v23, v18, v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FA98D8(v32, v31, v30, v29, v28, v27, v26);
  }
  else
  {
    char v12 = 0;
  }
  **(unsigned char **)(v0 + 192) = v12;
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_24808956C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v5 = *(void *)(a1 + 32);
  if (a5)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    uint64_t v7 = swift_allocError();
    void *v8 = a5;
    id v9 = a5;
    return MEMORY[0x270FA2410](v5, v7);
  }
  uint64_t v11 = a3;
  if (a2)
  {
    uint64_t v12 = sub_248175160();
    uint64_t v14 = v13;
    if (v11) {
      goto LABEL_7;
    }
LABEL_10:
    uint64_t v16 = 0;
    id v17 = a4;
    if (v17) {
      goto LABEL_8;
    }
LABEL_11:
    uint64_t v19 = 0;
    goto LABEL_12;
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
  if (!a3) {
    goto LABEL_10;
  }
LABEL_7:
  uint64_t v11 = sub_248175160();
  uint64_t v16 = v15;
  id v17 = a4;
  if (!v17) {
    goto LABEL_11;
  }
LABEL_8:
  id v18 = v17;
  uint64_t v19 = sub_248175010();

LABEL_12:
  char v20 = *(uint64_t **)(*(void *)(v5 + 64) + 40);
  uint64_t *v20 = v12;
  v20[1] = v14;
  _OWORD v20[2] = v11;
  v20[3] = v16;
  _OWORD v20[4] = v19;
  return swift_continuation_throwingResume();
}

uint64_t sub_248089860(void *a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  v5[7] = a1;
  v5[8] = a5;
  v5[9] = _Block_copy(aBlock);
  if (a2)
  {
    v5[10] = sub_248175160();
    v5[11] = v10;
    if (a3)
    {
LABEL_3:
      uint64_t v11 = sub_248175160();
      goto LABEL_6;
    }
  }
  else
  {
    v5[10] = 0;
    v5[11] = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 0;
LABEL_6:
  v5[12] = v11;
  v5[13] = v12;
  id v13 = a5;
  id v14 = a1;
  return MEMORY[0x270FA2498](sub_248089930, 0, 0);
}

uint64_t sub_248089930()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = *(id *)(v0 + 64);
  id v3 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  void *v4 = v0;
  v4[1] = sub_248089A0C;
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 64);
  return sub_24808F710(v0 + 16, v9, v7, v8, v5, v6, v10);
}

uint64_t sub_248089A0C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  long long v4 = *(void **)(*v1 + 56);
  *(void *)(v3 + 120) = v0;
  long long v5 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v3 + 128) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v3 + 144) = v5;
  *(void *)(v3 + 160) = *(void *)(v2 + 48);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v6 = sub_248089CF8;
  }
  else {
    uint64_t v6 = sub_248089B7C;
  }
  return MEMORY[0x270FA2498](v6, 0, 0);
}

uint64_t sub_248089B7C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void **)(v0 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (*(void *)(v0 + 136))
  {
    uint64_t v3 = (void *)sub_248175130();
    if (*(void *)(v0 + 152)) {
      goto LABEL_4;
    }
LABEL_8:
    long long v4 = 0;
    if (*(void *)(v0 + 160)) {
      goto LABEL_5;
    }
LABEL_9:
    long long v5 = 0;
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  if (!*(void *)(v0 + 152)) {
    goto LABEL_8;
  }
LABEL_4:
  long long v4 = (void *)sub_248175130();
  if (!*(void *)(v0 + 160)) {
    goto LABEL_9;
  }
LABEL_5:
  long long v5 = (void *)sub_248174FF0();
LABEL_10:
  uint64_t v6 = *(void (***)(void, void, void, void, void))(v0 + 72);
  ((void (**)(void, void *, void *, void *, void))v6)[2](v6, v3, v4, v5, 0);
  _Block_release(v6);

  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_248089CF8()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void **)(v0 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void **)(v0 + 120);
  if (v1)
  {
    long long v4 = *(void (***)(void, void, void, void, void))(v0 + 72);
    long long v5 = (void *)sub_248174720();

    ((void (**)(void, void, void, void, void *))v4)[2](v4, 0, 0, 0, v5);
    _Block_release(v4);
  }
  else
  {
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t ModernAppleIDAuthenticationContext.presentSecondFactorUI()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_248089DF8, 0, 0);
}

uint64_t sub_248089DF8()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248089EB0;
  v2[12] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248092570, 0, 0);
}

uint64_t sub_248089EB0(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  long long v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_248089FB0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_248089FD0, 0, 0);
}

uint64_t sub_248089FD0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v2 + 80) == 2)
  {
    if (*(unsigned char *)(v2 + 24)) {
      uint64_t v3 = *(void *)(v2 + 72) == 0;
    }
    else {
      uint64_t v3 = sub_248175570();
    }
    **(void **)(v0 + 16) = v3;
    long long v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9700);
    sub_24809594C();
    swift_allocError();
    _OWORD *v4 = xmmword_24817A5F0;
    swift_willThrow();
    long long v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_24808A230(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24808A2A8, 0, 0);
}

uint64_t sub_24808A2A8()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24808A360;
  v2[12] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248092570, 0, 0);
}

uint64_t sub_24808A360(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24808A50C;
  }
  else {
    uint64_t v4 = sub_24808A474;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24808A474()
{
  uint64_t v1 = *(void *)(v0 + 24);

  uint64_t v2 = *(void **)(v0 + 40);
  if (v1)
  {
    uint64_t v3 = *(void (***)(void, void, void))(v0 + 24);
    v3[2](v3, *(void *)(v0 + 40), 0);

    _Block_release(v3);
  }
  else
  {
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24808A50C()
{
  uint64_t v1 = *(void *)(v0 + 24);

  uint64_t v2 = *(void **)(v0 + 48);
  if (v1)
  {
    uint64_t v3 = *(void (***)(void, void, void))(v0 + 24);
    uint64_t v4 = (void *)sub_248174720();

    ((void (**)(void, void, void *))v3)[2](v3, 0, v4);
    _Block_release(v3);
  }
  else
  {
  }
  long long v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t ModernAppleIDAuthenticationContext.dismissSecondFactorUI()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24808A5E4, 0, 0);
}

uint64_t sub_24808A5E4()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248095C68;
  v2[11] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248090610, 0, 0);
}

void sub_24808A69C(uint64_t a1, void *a2, char a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x263F29110]);
  id v7 = a2;
  id v8 = objc_msgSend(v6, sel_initWithContext_, v7);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v8, sel__updateWithValuesFromContext_, v7);

    uint64_t v10 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
    sub_247F98958(*(void **)v10, *(void **)(v10 + 8), *(void **)(v10 + 16), *(void **)(v10 + 24), *(void *)(v10 + 32), *(void **)(v10 + 40), *(void *)(v10 + 48), *(void *)(v10 + 56), *(void **)(v10 + 64), *(void **)(v10 + 72), *(unsigned char *)(v10 + 80));
    *(void *)uint64_t v10 = v9;
    *(_OWORD *)(v10 + 8) = xmmword_248184640;
    *(_OWORD *)(v10 + 24) = xmmword_248177B60;
    *(void *)(v10 + 40) = 1;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(unsigned char *)(v10 + 80) = a3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24808A78C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_248095C60, 0, 0);
}

uint64_t sub_24808A914(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24808A98C, 0, 0);
}

uint64_t sub_24808A98C()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248088830;
  v2[11] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248090610, 0, 0);
}

uint64_t ModernAppleIDAuthenticationContext.presentSecondFactorAlertWithError(_:title:message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  long long v6[4] = a3;
  uint64_t v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_24808AA6C, 0, 0);
}

uint64_t sub_24808AA6C()
{
  id v1 = *(void **)(v0 + 16);
  id v2 = *(id *)(v0 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = sub_24808AB60;
  uint64_t v5 = *(void *)(v0 + 56);
  long long v6 = *(_OWORD *)(v0 + 24);
  long long v7 = *(_OWORD *)(v0 + 40);
  *(void *)(v4 + 136) = *(void *)(v0 + 16);
  *(_OWORD *)(v4 + 120) = v7;
  *(_OWORD *)(v4 + 104) = v6;
  *(void *)(v4 + 96) = v5;
  return MEMORY[0x270FA2498](sub_248092E68, 0, 0);
}

uint64_t sub_24808AB60(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();

  uint64_t v6 = swift_bridgeObjectRelease();
  long long v7 = *(uint64_t (**)(uint64_t))(v5 + 8);
  if (!v1) {
    uint64_t v6 = a1;
  }
  return v7(v6);
}

void sub_24808ACB0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v14 = objc_allocWithZone(MEMORY[0x263F29110]);
  id v15 = a2;
  id v16 = objc_msgSend(v14, sel_initWithContext_, v15);
  if (v16)
  {
    id v17 = v16;
    objc_msgSend(v16, sel__updateWithValuesFromContext_, v15);

    uint64_t v34 = a3;
    uint64_t v35 = a5;
    id v33 = v17;
    uint64_t v18 = a4;
    uint64_t v19 = a6;
    if (a7) {
      uint64_t v28 = sub_248174720();
    }
    else {
      uint64_t v28 = 0;
    }
    uint64_t v20 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
    uint64_t v21 = *(void **)v20;
    uint64_t v22 = *(void **)(v20 + 8);
    uint64_t v23 = *(void **)(v20 + 16);
    os_log_type_t v24 = *(void **)(v20 + 24);
    uint64_t v31 = *(void **)(v20 + 40);
    uint64_t v32 = *(void *)(v20 + 32);
    uint64_t v25 = *(void **)(v20 + 64);
    uint64_t v29 = *(void *)(v20 + 56);
    uint64_t v30 = *(void *)(v20 + 48);
    char v26 = *(void **)(v20 + 72);
    char v27 = *(unsigned char *)(v20 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247F98958(v21, v22, v23, v24, v32, v31, v30, v29, v25, v26, v27);
    *(void *)uint64_t v20 = v33;
    *(_OWORD *)(v20 + 8) = xmmword_248184640;
    *(void *)(v20 + 24) = 1;
    *(void *)(v20 + 32) = v34;
    *(void *)(v20 + 40) = v18;
    *(void *)(v20 + 48) = v35;
    *(void *)(v20 + 56) = v19;
    *(void *)(v20 + 64) = v28;
    *(void *)(v20 + 72) = 0;
    *(unsigned char *)(v20 + 80) = 3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24808AE2C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24808AE4C, 0, 0);
}

uint64_t sub_24808AE4C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v2 + 80) == 3)
  {
    if (*(unsigned char *)(v2 + 24)) {
      uint64_t v3 = *(void *)(v2 + 72) == 0;
    }
    else {
      uint64_t v3 = sub_248175570();
    }
    **(void **)(v0 + 16) = v3;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9700);
    sub_24809594C();
    swift_allocError();
    _OWORD *v4 = xmmword_24817A5F0;
    swift_willThrow();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v5();
}

uint64_t sub_24808B0DC(void *a1, uint64_t a2, uint64_t a3, void *aBlock, void *a5)
{
  v5[2] = a1;
  v5[3] = a5;
  long long v5[4] = _Block_copy(aBlock);
  if (a2)
  {
    v5[5] = sub_248175160();
    v5[6] = v10;
    if (a3)
    {
LABEL_3:
      uint64_t v11 = sub_248175160();
      goto LABEL_6;
    }
  }
  else
  {
    v5[5] = 0;
    v5[6] = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = 0;
LABEL_6:
  v5[7] = v11;
  v5[8] = v12;
  id v13 = a5;
  id v14 = a1;
  return MEMORY[0x270FA2498](sub_24808B1AC, 0, 0);
}

uint64_t sub_24808B1AC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = *(id *)(v0 + 24);
  id v3 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = sub_24808B29C;
  uint64_t v5 = *(void *)(v0 + 24);
  long long v6 = *(_OWORD *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 56);
  *(void *)(v4 + 136) = *(void *)(v0 + 16);
  *(_OWORD *)(v4 + 120) = v7;
  *(_OWORD *)(v4 + 104) = v6;
  *(void *)(v4 + 96) = v5;
  return MEMORY[0x270FA2498](sub_248092E68, 0, 0);
}

uint64_t sub_24808B29C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void **)(*v2 + 16);
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v5 = sub_24808B4B0;
  }
  else {
    uint64_t v5 = sub_24808B3F0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24808B3F0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  id v2 = *(void **)(v0 + 16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void **)(v0 + 80);
  if (v1)
  {
    uint64_t v4 = *(void (***)(void, void, void))(v0 + 32);
    v4[2](v4, *(void *)(v0 + 80), 0);

    _Block_release(v4);
  }
  else
  {
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24808B4B0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  id v2 = *(void **)(v0 + 16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void **)(v0 + 88);
  if (v1)
  {
    uint64_t v4 = *(void (***)(void, void, void))(v0 + 32);
    uint64_t v5 = (void *)sub_248174720();

    ((void (**)(void, void, void *))v4)[2](v4, 0, v5);
    _Block_release(v4);
  }
  else
  {
  }
  long long v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t ModernAppleIDAuthenticationContext.presentBiometricOrPasscodeValidation(forAppleID:)()
{
  return MEMORY[0x270FA2498](sub_24808B5A4, 0, 0);
}

uint64_t sub_24808B5A4()
{
  return sub_2481759C0();
}

uint64_t sub_24808B790(int a1, void *aBlock, void *a3)
{
  _Block_copy(aBlock);
  id v4 = a3;
  return MEMORY[0x270FA2498](sub_24808B5A4, 0, 0);
}

uint64_t ModernAppleIDAuthenticationContext.presentServerProvidedUI(with:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24808B824, 0, 0);
}

uint64_t sub_24808B824()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = *(id *)(v0 + 24);
  id v3 = v1;
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  void *v4 = v0;
  v4[1] = sub_24808B8E0;
  uint64_t v5 = *(void *)(v0 + 16);
  v4[13] = *(void *)(v0 + 24);
  v4[14] = v5;
  return MEMORY[0x270FA2498](sub_2480937AC, 0, 0);
}

uint64_t sub_24808B8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

void sub_24808B9F0(uint64_t a1, void *a2, void *a3)
{
  id v6 = objc_allocWithZone(MEMORY[0x263F29110]);
  id v7 = a2;
  id v8 = objc_msgSend(v6, sel_initWithContext_, v7);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v8, sel__updateWithValuesFromContext_, v7);

    uint64_t v23 = a3;
    if (a3)
    {
      uint64_t v10 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
      uint64_t v21 = *(void **)(v10 + 8);
      uint64_t v22 = *(void **)v10;
      uint64_t v11 = *(void *)(v10 + 32);
      uint64_t v19 = *(void **)(v10 + 24);
      uint64_t v20 = *(void **)(v10 + 16);
      uint64_t v12 = *(void **)(v10 + 40);
      uint64_t v13 = *(void *)(v10 + 48);
      uint64_t v15 = *(void *)(v10 + 56);
      id v14 = *(void **)(v10 + 64);
      uint64_t v16 = *(void **)(v10 + 72);
      char v17 = *(unsigned char *)(v10 + 80);
      id v18 = v23;
      sub_247F98958(v22, v21, v20, v19, v11, v12, v13, v15, v14, v16, v17);
      *(void *)uint64_t v10 = v9;
      *(void *)(v10 + 8) = v23;
      *(_OWORD *)(v10 + 16) = 0u;
      *(_OWORD *)(v10 + 32) = 0u;
      *(_OWORD *)(v10 + 48) = 0u;
      *(_OWORD *)(v10 + 64) = 0u;
      *(unsigned char *)(v10 + 80) = 5;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_24808BB14(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24808BB34, 0, 0);
}

uint64_t sub_24808BB34()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v2 + 80) != 5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9700);
    sub_24809594C();
    swift_allocError();
    _OWORD *v14 = xmmword_24817A5F0;
LABEL_6:
    swift_willThrow();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  id v3 = *(void **)(v2 + 24);
  if (v4)
  {
    uint64_t v5 = *(void **)(v2 + 32);
    if (v5)
    {
      id v6 = *(void **)v2;
      id v7 = *(void **)(v2 + 8);
      uint64_t v8 = *(void *)(v2 + 48);
      uint64_t v10 = *(void **)(v2 + 56);
      id v9 = *(void **)(v2 + 64);
      uint64_t v11 = *(void **)(v2 + 72);
      uint64_t v19 = v11;
      uint64_t v20 = *(void **)(v2 + 40);
      id v12 = (id)v4;
      sub_247F986A0(v6, v7, (void *)v4, v3, v5, v20, v8, v10, v9, v11, 5);
      id v13 = v5;
      sub_248175000();
      sub_247F98958(v6, v7, (void *)v4, v3, (uint64_t)v5, v20, v8, (uint64_t)v10, v9, v19, 5);
    }
    else
    {
      id v16 = (id)v4;
    }
    goto LABEL_11;
  }
  if (v3)
  {
    v3;
    goto LABEL_6;
  }
  uint64_t v4 = 1;
LABEL_11:
  char v17 = (uint64_t *)v0[2];
  *char v17 = v4;
  v17[1] = 0;
  uint64_t v15 = (uint64_t (*)(void))v0[1];
LABEL_12:
  return v15();
}

uint64_t sub_24808BE88(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a3;
  return MEMORY[0x270FA2498](sub_24808BF14, 0, 0);
}

uint64_t sub_24808BF14()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = *(id *)(v0 + 16);
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  void *v4 = v0;
  v4[1] = sub_24808BFD0;
  uint64_t v5 = *(void *)(v0 + 16);
  v4[13] = *(void *)(v0 + 24);
  v4[14] = v5;
  return MEMORY[0x270FA2498](sub_2480937AC, 0, 0);
}

uint64_t sub_24808BFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_24808C1DC;
  }
  else {
    uint64_t v5 = sub_24808C0E8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24808C0E8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 16);

  if (v1)
  {
    if (*(void *)(v0 + 56)) {
      id v3 = (void *)sub_248174FF0();
    }
    else {
      id v3 = 0;
    }
    uint64_t v4 = *(void **)(v0 + 48);
    uint64_t v5 = *(void (***)(void, void, void, void))(v0 + 32);
    ((void (**)(void, void *, void *, void))v5)[2](v5, v4, v3, 0);
    _Block_release(v5);
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  id v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_24808C1DC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(v0 + 16);

  id v3 = *(void **)(v0 + 64);
  if (v1)
  {
    uint64_t v4 = *(void (***)(void, void, void, void))(v0 + 32);
    uint64_t v5 = (void *)sub_248174720();

    ((void (**)(void, void, void, void *))v4)[2](v4, 0, 0, v5);
    _Block_release(v4);
  }
  else
  {
  }
  id v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t ModernAppleIDAuthenticationContext.dismissServerProvidedUI()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24808C2C0, 0, 0);
}

uint64_t sub_24808C2C0()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248095C68;
  v2[11] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248090EF8, 0, 0);
}

void sub_24808C378(uint64_t a1, void *a2)
{
  uint64_t v25 = a1;
  uint64_t v3 = sub_248174740();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9738);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_248174760();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v22 = sub_2481745B0();
  uint64_t v11 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_allocWithZone(MEMORY[0x263F29110]);
  id v15 = a2;
  id v16 = objc_msgSend(v14, sel_initWithContext_, v15);
  if (v16)
  {
    id v17 = v16;
    objc_msgSend(v16, sel__updateWithValuesFromContext_, v15);

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v5, *MEMORY[0x263F06E50], v24);
    sub_248174750();
    sub_2481745A0();
    id v18 = objc_allocWithZone(MEMORY[0x263F29258]);
    uint64_t v19 = (void *)sub_248174590();
    id v20 = objc_msgSend(v18, sel_initWithRequest_requestType_, v19, 0);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v22);
    uint64_t v21 = v25 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
    sub_247F98958(*(void **)v21, *(void **)(v21 + 8), *(void **)(v21 + 16), *(void **)(v21 + 24), *(void *)(v21 + 32), *(void **)(v21 + 40), *(void *)(v21 + 48), *(void *)(v21 + 56), *(void **)(v21 + 64), *(void **)(v21 + 72), *(unsigned char *)(v21 + 80));
    *(void *)uint64_t v21 = v17;
    *(void *)(v21 + 8) = v20;
    *(_OWORD *)(v21 + 16) = 0u;
    *(_OWORD *)(v21 + 32) = 0u;
    *(_OWORD *)(v21 + 48) = 0u;
    *(_OWORD *)(v21 + 64) = 0u;
    *(unsigned char *)(v21 + 80) = 6;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24808C844(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24808C8BC, 0, 0);
}

uint64_t sub_24808C8BC()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248088830;
  v2[11] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248090EF8, 0, 0);
}

uint64_t ModernAppleIDAuthenticationContext.presentNativeRecoveryUI(with:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24808C994, 0, 0);
}

uint64_t sub_24808C994()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = *(id *)(v0 + 24);
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  void *v4 = v0;
  v4[1] = sub_248095C54;
  uint64_t v5 = *(void *)(v0 + 16);
  v4[12] = *(void *)(v0 + 24);
  v4[13] = v5;
  return MEMORY[0x270FA2498](sub_2480940B0, 0, 0);
}

uint64_t sub_24808CA50(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24808CA70, 0, 0);
}

uint64_t sub_24808CA70()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v2 + 80) != 7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9700);
    sub_24809594C();
    swift_allocError();
    _OWORD *v11 = xmmword_24817A5F0;
    swift_willThrow();
    goto LABEL_6;
  }
  id v3 = *(void **)v2;
  uint64_t v4 = *(void **)(v2 + 8);
  uint64_t v6 = *(void **)(v2 + 16);
  uint64_t v5 = *(void **)(v2 + 24);
  uint64_t v7 = *(void **)(v2 + 56);
  uint64_t v8 = *(void **)(v2 + 64);
  uint64_t v9 = *(void **)(v2 + 72);
  uint64_t v19 = *(void **)(v2 + 40);
  uint64_t v20 = *(void *)(v2 + 32);
  uint64_t v18 = *(void *)(v2 + 48);
  if (v5)
  {
    sub_247F986A0(v3, v4, v6, v5, *(void **)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), v7, v8, v9, 7);
    id v10 = v5;
    sub_248175000();

    if (v6)
    {
LABEL_4:
      v6;
      swift_willThrow();
      sub_247F98958(v3, v4, v6, v5, v20, v19, v18, (uint64_t)v7, v8, v9, 7);
LABEL_6:
      uint64_t v12 = (uint64_t (*)(void))v0[1];
      goto LABEL_9;
    }
  }
  else
  {
    id v13 = v6;
    id v14 = v3;
    id v15 = v4;
    if (v6) {
      goto LABEL_4;
    }
  }
  id v16 = (void *)v0[2];
  sub_247F98958(v3, v4, v6, v5, v20, v19, v18, (uint64_t)v7, v8, v9, 7);
  *id v16 = 1;
  uint64_t v12 = (uint64_t (*)(void))v0[1];
LABEL_9:
  return v12();
}

uint64_t sub_24808CDE0(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a3;
  return MEMORY[0x270FA2498](sub_24808CE6C, 0, 0);
}

uint64_t sub_24808CE6C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = *(id *)(v0 + 16);
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v4;
  void *v4 = v0;
  v4[1] = sub_24808CF28;
  uint64_t v5 = *(void *)(v0 + 16);
  v4[12] = *(void *)(v0 + 24);
  v4[13] = v5;
  return MEMORY[0x270FA2498](sub_2480940B0, 0, 0);
}

uint64_t sub_24808CF28(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24808D11C;
  }
  else {
    uint64_t v4 = sub_24808D03C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24808D03C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  id v2 = *(void **)(v0 + 16);

  if (v1)
  {
    if (*(void *)(v0 + 48))
    {
      uint64_t v3 = (void *)sub_248174FF0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = 0;
    }
    uint64_t v4 = *(void (***)(void, void, void))(v0 + 32);
    ((void (**)(void, void *, void))v4)[2](v4, v3, 0);
    _Block_release(v4);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24808D11C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  id v2 = *(void **)(v0 + 16);

  uint64_t v3 = *(void **)(v0 + 56);
  if (v1)
  {
    uint64_t v4 = *(void (***)(void, void, void))(v0 + 32);
    uint64_t v5 = (void *)sub_248174720();

    ((void (**)(void, void, void *))v4)[2](v4, 0, v5);
    _Block_release(v4);
  }
  else
  {
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t ModernAppleIDAuthenticationContext.dismissNativeRecoveryUI()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24808D1FC, 0, 0);
}

uint64_t sub_24808D1FC()
{
  id v1 = *(id *)(v0 + 16);
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *id v2 = v0;
  v2[1] = sub_248095C68;
  v2[11] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248091260, 0, 0);
}

uint64_t sub_24808D420(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24808D498, 0, 0);
}

uint64_t sub_24808D498()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_248088830;
  v2[11] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248091260, 0, 0);
}

uint64_t ModernAppleIDAuthenticationContext.presentFidoAuth(for:fidoContext:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = v2;
  return MEMORY[0x270FA2498](sub_24808D570, 0, 0);
}

uint64_t sub_24808D570()
{
  id v1 = *(void **)(v0 + 16);
  id v2 = *(id *)(v0 + 24);
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  void *v4 = v0;
  v4[1] = sub_24808D62C;
  uint64_t v5 = *(void *)(v0 + 16);
  v4[12] = *(void *)(v0 + 24);
  v4[13] = v5;
  return MEMORY[0x270FA2498](sub_2480949B4, 0, 0);
}

uint64_t sub_24808D62C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

void sub_24808D72C(uint64_t a1, void *a2, void *a3, char a4)
{
  id v6 = objc_allocWithZone(MEMORY[0x263F29110]);
  id v7 = a2;
  id v8 = objc_msgSend(v6, sel_initWithContext_, v7);
  if (v8)
  {
    id v9 = v8;
    objc_msgSend(v8, sel__updateWithValuesFromContext_, v7);

    uint64_t v10 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
    uint64_t v21 = *(void **)(v10 + 8);
    uint64_t v22 = *(void **)v10;
    uint64_t v11 = *(void **)(v10 + 24);
    uint64_t v12 = *(void *)(v10 + 32);
    id v13 = *(void **)(v10 + 40);
    uint64_t v14 = *(void *)(v10 + 48);
    uint64_t v19 = *(void *)(v10 + 56);
    uint64_t v20 = *(void **)(v10 + 16);
    id v15 = *(void **)(v10 + 64);
    id v16 = *(void **)(v10 + 72);
    char v17 = *(unsigned char *)(v10 + 80);
    id v18 = a3;
    sub_247F98958(v22, v21, v20, v11, v12, v13, v14, v19, v15, v16, v17);
    *(void *)uint64_t v10 = v9;
    *(void *)(v10 + 8) = a3;
    *(_OWORD *)(v10 + 16) = 0u;
    *(_OWORD *)(v10 + 32) = 0u;
    *(_OWORD *)(v10 + 48) = 0u;
    *(_OWORD *)(v10 + 64) = 0u;
    *(unsigned char *)(v10 + 80) = a4;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24808D844(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24808D864, 0, 0);
}

uint64_t sub_24808D864()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v2 + 80) == 8)
  {
    id v3 = *(void **)(v2 + 16);
    uint64_t v4 = (uint64_t)v3;
    if (v3)
    {
LABEL_3:
      **(void **)(v0 + 16) = v4;
      uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
      id v5 = v3;
      return v10();
    }
    id v9 = *(void **)(v2 + 24);
    if (!v9)
    {
      uint64_t v4 = 1;
      goto LABEL_3;
    }
    v9;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9700);
    sub_24809594C();
    swift_allocError();
    *id v7 = xmmword_24817A5F0;
  }
  swift_willThrow();
  id v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_24808DB1C(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a2;
  id v9 = a4;
  id v10 = a1;
  return MEMORY[0x270FA2498](sub_24808DBB4, 0, 0);
}

uint64_t sub_24808DBB4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = *(id *)(v0 + 24);
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  void *v4 = v0;
  v4[1] = sub_24808DC70;
  uint64_t v5 = *(void *)(v0 + 24);
  v4[12] = *(void *)(v0 + 32);
  v4[13] = v5;
  return MEMORY[0x270FA2498](sub_2480949B4, 0, 0);
}

uint64_t sub_24808DC70(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24808DE30;
  }
  else {
    uint64_t v4 = sub_24808DD84;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24808DD84()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 16);
  id v2 = *(void **)(v0 + 24);

  uint64_t v4 = *(void **)(v0 + 56);
  if (v1)
  {
    uint64_t v5 = *(void (***)(void, void, void))(v0 + 40);
    v5[2](v5, *(void *)(v0 + 56), 0);

    _Block_release(v5);
  }
  else
  {
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_24808DE30()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 16);
  id v2 = *(void **)(v0 + 24);

  uint64_t v4 = *(void **)(v0 + 64);
  if (v1)
  {
    uint64_t v5 = *(void (***)(void, void, void))(v0 + 40);
    uint64_t v6 = (void *)sub_248174720();

    ((void (**)(void, void, void *))v5)[2](v5, 0, v6);
    _Block_release(v5);
  }
  else
  {
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t ModernAppleIDAuthenticationContext.presentKeepUsingUI(forAppleID:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_24808DF18, 0, 0);
}

uint64_t sub_24808DF18()
{
  id v1 = *(id *)(v0 + 32);
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_24808DFE0;
  uint64_t v3 = *(void *)(v0 + 32);
  *(_OWORD *)(v2 + 96) = *(_OWORD *)(v0 + 16);
  *(void *)(v2 + 88) = v3;
  return MEMORY[0x270FA2498](sub_2480914A0, 0, 0);
}

uint64_t sub_24808DFE0(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

void sub_24808E0E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v8 = objc_allocWithZone(MEMORY[0x263F29110]);
  id v9 = a2;
  id v10 = objc_msgSend(v8, sel_initWithContext_, v9);
  if (v10)
  {
    id v11 = v10;
    uint64_t v25 = a3;
    objc_msgSend(v10, sel__updateWithValuesFromContext_, v9);

    if (a4)
    {
      uint64_t v12 = a4;
      uint64_t v13 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
      uint64_t v23 = *(void **)(v13 + 8);
      uint64_t v24 = *(void **)v13;
      uint64_t v14 = *(void **)(v13 + 24);
      uint64_t v15 = *(void *)(v13 + 32);
      id v16 = *(void **)(v13 + 40);
      uint64_t v17 = *(void *)(v13 + 48);
      uint64_t v21 = *(void *)(v13 + 56);
      uint64_t v22 = *(void **)(v13 + 16);
      id v18 = *(void **)(v13 + 64);
      uint64_t v19 = *(void **)(v13 + 72);
      char v20 = *(unsigned char *)(v13 + 80);
      swift_bridgeObjectRetain();
      sub_247F98958(v24, v23, v22, v14, v15, v16, v17, v21, v18, v19, v20);
      *(void *)uint64_t v13 = v11;
      *(void *)(v13 + 8) = v25;
      *(void *)(v13 + 16) = v12;
      *(void *)(v13 + 24) = 2;
      *(_OWORD *)(v13 + 32) = 0u;
      *(_OWORD *)(v13 + 48) = 0u;
      *(_OWORD *)(v13 + 64) = 0u;
      *(unsigned char *)(v13 + 80) = 9;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_24808E21C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_24808E23C, 0, 0);
}

uint64_t sub_24808E23C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v2 + 80) == 9)
  {
    if (*(void *)(v2 + 24)) {
      char v3 = 1;
    }
    else {
      char v3 = 2;
    }
    **(unsigned char **)(v0 + 16) = v3;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9700);
    sub_24809594C();
    swift_allocError();
    *uint64_t v5 = xmmword_24817A5F0;
    swift_willThrow();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v4();
}

uint64_t sub_24808E4A4(uint64_t a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  if (a1)
  {
    uint64_t v6 = sub_248175160();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  v3[4] = v6;
  v3[5] = v7;
  id v8 = a3;
  return MEMORY[0x270FA2498](sub_24808E540, 0, 0);
}

uint64_t sub_24808E540()
{
  id v1 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_24808E60C;
  uint64_t v3 = *(void *)(v0 + 16);
  *(_OWORD *)(v2 + 96) = *(_OWORD *)(v0 + 32);
  *(void *)(v2 + 88) = v3;
  return MEMORY[0x270FA2498](sub_2480914A0, 0, 0);
}

uint64_t sub_24808E60C(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 64) = a1;
  *(void *)(v3 + 56) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24808E7B8;
  }
  else {
    uint64_t v4 = sub_24808E724;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24808E724()
{
  uint64_t v1 = *(void *)(v0 + 24);

  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v2 = *(void (***)(void, void, void))(v0 + 24);
    v2[2](v2, *(unsigned __int8 *)(v0 + 64), 0);
    _Block_release(v2);
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24808E7B8()
{
  uint64_t v1 = *(void *)(v0 + 24);

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(v0 + 56);
  if (v1)
  {
    uint64_t v3 = *(void (***)(void, void, void))(v0 + 24);
    uint64_t v4 = (void *)sub_248174720();

    ((void (**)(void, void, void *))v3)[2](v3, 0, v4);
    _Block_release(v3);
  }
  else
  {
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t ModernAppleIDAuthenticationContext.dismissKeepUsingUI()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_24808E89C, 0, 0);
}

uint64_t sub_24808E89C()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24808E954;
  v2[11] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248091DC0, 0, 0);
}

uint64_t sub_24808E954(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

double sub_24808EA5C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  char v4 = *(unsigned char *)(v3 + 80);
  long long v5 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v3;
  *(_OWORD *)(v2 + 32) = v5;
  long long v6 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v2 + 64) = v6;
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(v3 + 64);
  *(unsigned char *)(v2 + 96) = v4;
  *(void *)uint64_t v3 = v2;
  *(void *)(v3 + 72) = 0;
  double result = 0.0;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 8) = 0u;
  *(unsigned char *)(v3 + 80) = 11;
  return result;
}

uint64_t sub_24808EC50(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x270FA2498](sub_24808ECC8, 0, 0);
}

uint64_t sub_24808ECC8()
{
  id v1 = *(id *)(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24808ED80;
  v2[11] = *(void *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_248091DC0, 0, 0);
}

uint64_t sub_24808ED80(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 48) = a1;
  *(void *)(v3 + 40) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24808EF20;
  }
  else {
    uint64_t v4 = sub_24808EE98;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24808EE98()
{
  uint64_t v1 = *(void *)(v0 + 24);

  if (v1)
  {
    uint64_t v2 = *(void (***)(void, void, void))(v0 + 24);
    v2[2](v2, *(unsigned __int8 *)(v0 + 48), 0);
    _Block_release(v2);
  }
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24808EF20()
{
  uint64_t v1 = *(void *)(v0 + 24);

  uint64_t v2 = *(void **)(v0 + 40);
  if (v1)
  {
    uint64_t v3 = *(void (***)(void, void, void))(v0 + 24);
    uint64_t v4 = (void *)sub_248174720();

    ((void (**)(void, void, void *))v3)[2](v3, 0, v4);
    _Block_release(v3);
  }
  else
  {
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_24808EFD8(uint64_t a1, uint64_t a2)
{
  v2[16] = a1;
  v2[17] = a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[18] = v4;
  void *v4 = v2;
  v4[1] = sub_24808F07C;
  return sub_248085EBC((uint64_t)(v2 + 9), a2);
}

uint64_t sub_24808F07C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24808F208;
  }
  else {
    uint64_t v2 = sub_24808F190;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24808F190()
{
  uint64_t v1 = *(void *)(v0 + 128);

  uint64_t v2 = *(void *)(v0 + 104);
  long long v3 = *(_OWORD *)(v0 + 88);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v1 + 16) = v3;
  *(void *)(v1 + 32) = v2;
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_24808F208()
{
  uint64_t v1 = *(void **)(v0 + 152);
  *(void *)(v0 + 112) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && v10 == 0)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_248174B90();
        __swift_project_value_buffer(v34, (uint64_t)qword_2692D6A78);
        uint64_t v35 = sub_248174B70();
        os_log_type_t v36 = sub_2481755B0();
        if (os_log_type_enabled(v35, v36))
        {
          os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v37 = 0;
          _os_log_impl(&dword_247F93000, v35, v36, "Client cancelled limited UI presentation, converting into AppleID error", v37, 2u);
          MEMORY[0x24C574E00](v37, -1, -1);
        }
        id v16 = *(void **)(v0 + 136);

        sub_248175160();
        id v38 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v39 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_initWithDomain_code_userInfo_, v39, -7003, 0);

        swift_willThrow();
        goto LABEL_29;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_248174B90();
        __swift_project_value_buffer(v12, (uint64_t)qword_2692D6A78);
        uint64_t v13 = sub_248174B70();
        os_log_type_t v14 = sub_2481755B0();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl(&dword_247F93000, v13, v14, "Client skipped limited UI presentation, converting into AppleID error", v15, 2u);
          MEMORY[0x24C574E00](v15, -1, -1);
        }
        id v16 = *(void **)(v0 + 136);

        sub_248175160();
        id v17 = objc_allocWithZone(MEMORY[0x263F087E8]);
        id v18 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7038, 0);

        swift_willThrow();
LABEL_29:

        goto LABEL_21;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void **)(v0 + 152);
  uint64_t v20 = sub_248174B90();
  __swift_project_value_buffer(v20, (uint64_t)qword_2692D6A78);
  id v21 = v19;
  id v22 = v19;
  uint64_t v23 = sub_248174B70();
  os_log_type_t v24 = sub_2481755D0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  char v26 = *(void **)(v0 + 152);
  if (v25)
  {
    char v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)char v27 = 138412290;
    id v29 = v26;
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v30;
    sub_248175730();
    *uint64_t v28 = v30;

    _os_log_impl(&dword_247F93000, v23, v24, "Error during limited UI presentation: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v28, -1, -1);
    MEMORY[0x24C574E00](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v31 = *(void **)(v0 + 136);

  swift_willThrow();
LABEL_21:
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_24808F710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[17] = a2;
  v7[18] = a4;
  v7[16] = a1;
  os_log_type_t v14 = (void *)swift_task_alloc();
  v7[19] = v14;
  void *v14 = v7;
  v14[1] = sub_24808F800;
  v14[25] = a6;
  v14[26] = a7;
  v14[23] = a4;
  v14[24] = a5;
  v14[21] = a2;
  v14[22] = a3;
  v14[20] = v7 + 9;
  return MEMORY[0x270FA2498](sub_248088C38, 0, 0);
}

uint64_t sub_24808F800()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_24808F9AC;
  }
  else {
    id v2 = sub_24808F914;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24808F914()
{
  uint64_t v1 = *(void *)(v0 + 128);

  long long v5 = *(_OWORD *)(v0 + 88);
  long long v6 = *(_OWORD *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = v6;
  *(_OWORD *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24808F9AC()
{
  uint64_t v1 = *(void **)(v0 + 160);
  *(void *)(v0 + 112) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && v10 == 0)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_248174B90();
        __swift_project_value_buffer(v34, (uint64_t)qword_2692D6A78);
        uint64_t v35 = sub_248174B70();
        os_log_type_t v36 = sub_2481755B0();
        if (os_log_type_enabled(v35, v36))
        {
          os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v37 = 0;
          _os_log_impl(&dword_247F93000, v35, v36, "Client cancelled limited UI presentation, converting into AppleID error", v37, 2u);
          MEMORY[0x24C574E00](v37, -1, -1);
        }
        uint64_t v16 = *(void **)(v0 + 136);

        sub_248175160();
        id v38 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v39 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_initWithDomain_code_userInfo_, v39, -7003, 0);

        swift_willThrow();
        goto LABEL_29;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_248174B90();
        __swift_project_value_buffer(v12, (uint64_t)qword_2692D6A78);
        uint64_t v13 = sub_248174B70();
        os_log_type_t v14 = sub_2481755B0();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl(&dword_247F93000, v13, v14, "Client skipped limited UI presentation, converting into AppleID error", v15, 2u);
          MEMORY[0x24C574E00](v15, -1, -1);
        }
        uint64_t v16 = *(void **)(v0 + 136);

        sub_248175160();
        id v17 = objc_allocWithZone(MEMORY[0x263F087E8]);
        id v18 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7038, 0);

        swift_willThrow();
LABEL_29:

        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void **)(v0 + 160);
  uint64_t v20 = sub_248174B90();
  __swift_project_value_buffer(v20, (uint64_t)qword_2692D6A78);
  id v21 = v19;
  id v22 = v19;
  uint64_t v23 = sub_248174B70();
  os_log_type_t v24 = sub_2481755D0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  char v26 = *(void **)(v0 + 160);
  if (v25)
  {
    char v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)char v27 = 138412290;
    id v29 = v26;
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v30;
    sub_248175730();
    *uint64_t v28 = v30;

    _os_log_impl(&dword_247F93000, v23, v24, "Error during limited UI presentation: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v28, -1, -1);
    MEMORY[0x24C574E00](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v31 = *(void **)(v0 + 136);

  swift_willThrow();
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_24808FEC4(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 96) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24808FF68;
  return sub_248087DEC(v1 + 65, a1);
}

uint64_t sub_24808FF68()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_2480900E4;
  }
  else {
    id v2 = sub_24809007C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24809007C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 65);
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2480900E4()
{
  uint64_t v1 = *(void **)(v0 + 104);
  *(void *)(v0 + 72) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && v10 == 0)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_248174B90();
        __swift_project_value_buffer(v34, (uint64_t)qword_2692D6A78);
        uint64_t v35 = sub_248174B70();
        os_log_type_t v36 = sub_2481755B0();
        if (os_log_type_enabled(v35, v36))
        {
          os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v37 = 0;
          _os_log_impl(&dword_247F93000, v35, v36, "Client cancelled limited UI presentation, converting into AppleID error", v37, 2u);
          MEMORY[0x24C574E00](v37, -1, -1);
        }
        uint64_t v16 = *(void **)(v0 + 88);

        sub_248175160();
        id v38 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v39 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_initWithDomain_code_userInfo_, v39, -7003, 0);

        swift_willThrow();
        goto LABEL_29;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_248174B90();
        __swift_project_value_buffer(v12, (uint64_t)qword_2692D6A78);
        uint64_t v13 = sub_248174B70();
        os_log_type_t v14 = sub_2481755B0();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl(&dword_247F93000, v13, v14, "Client skipped limited UI presentation, converting into AppleID error", v15, 2u);
          MEMORY[0x24C574E00](v15, -1, -1);
        }
        uint64_t v16 = *(void **)(v0 + 88);

        sub_248175160();
        id v17 = objc_allocWithZone(MEMORY[0x263F087E8]);
        id v18 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7038, 0);

        swift_willThrow();
LABEL_29:

        goto LABEL_21;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void **)(v0 + 104);
  uint64_t v20 = sub_248174B90();
  __swift_project_value_buffer(v20, (uint64_t)qword_2692D6A78);
  id v21 = v19;
  id v22 = v19;
  uint64_t v23 = sub_248174B70();
  os_log_type_t v24 = sub_2481755D0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  char v26 = *(void **)(v0 + 104);
  if (v25)
  {
    char v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)char v27 = 138412290;
    id v29 = v26;
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v30;
    sub_248175730();
    *uint64_t v28 = v30;

    _os_log_impl(&dword_247F93000, v23, v24, "Error during limited UI presentation: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v28, -1, -1);
    MEMORY[0x24C574E00](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v31 = *(void **)(v0 + 88);

  swift_willThrow();
LABEL_21:
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32(0);
}

uint64_t sub_2480905F0(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return MEMORY[0x270FA2498](sub_248090610, 0, 0);
}

uint64_t sub_248090610()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v0[12] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[13] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_248090694, v2, 0);
}

uint64_t sub_248090694()
{
  uint64_t v1 = *(void *)(v0[12] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[14] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  *uint64_t v2 = v0;
  v2[1] = sub_2480907A0;
  uint64_t v4 = v0[13];
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return sub_247FCE628((uint64_t)v0 + 65, v1, (uint64_t)sub_248095A08, v4, (uint64_t)&unk_2692D9760, 0, v3, v5);
}

uint64_t sub_2480907A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v4 = sub_2480909A4;
  }
  else {
    uint64_t v4 = sub_2480908CC;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2480908CC()
{
  *(unsigned char *)(v0 + 66) = *(unsigned char *)(v0 + 65);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24809093C, 0, 0);
}

uint64_t sub_24809093C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 66);
  return v1(v2);
}

uint64_t sub_2480909A4()
{
  return MEMORY[0x270FA2498](sub_2480909C0, 0, 0);
}

uint64_t sub_2480909C0()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_task_dealloc();
  *(void *)(v0 + 72) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_248174B90();
        __swift_project_value_buffer(v11, (uint64_t)qword_2692D6A78);
        uint64_t v12 = sub_248174B70();
        os_log_type_t v13 = sub_2481755B0();
        if (os_log_type_enabled(v12, v13))
        {
          os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v14 = 0;
          _os_log_impl(&dword_247F93000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x24C574E00](v14, -1, -1);
        }
        uint64_t v15 = *(void **)(v0 + 88);

        sub_248175160();
        id v16 = objc_allocWithZone(MEMORY[0x263F087E8]);
        id v17 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, -7003, 0);

        swift_willThrow();
LABEL_17:

        goto LABEL_25;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_248174B90();
        __swift_project_value_buffer(v18, (uint64_t)qword_2692D6A78);
        uint64_t v19 = sub_248174B70();
        os_log_type_t v20 = sub_2481755B0();
        if (os_log_type_enabled(v19, v20))
        {
          id v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v21 = 0;
          _os_log_impl(&dword_247F93000, v19, v20, "Client skipped limited UI presentation, converting into AppleID error", v21, 2u);
          MEMORY[0x24C574E00](v21, -1, -1);
        }
        uint64_t v15 = *(void **)(v0 + 88);

        sub_248175160();
        id v22 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v23 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  os_log_type_t v24 = *(void **)(v0 + 120);
  uint64_t v25 = sub_248174B90();
  __swift_project_value_buffer(v25, (uint64_t)qword_2692D6A78);
  id v26 = v24;
  id v27 = v24;
  uint64_t v28 = sub_248174B70();
  os_log_type_t v29 = sub_2481755D0();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void **)(v0 + 120);
  if (v30)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    id v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 138412290;
    id v34 = v31;
    uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v35;
    sub_248175730();
    *id v33 = v35;

    _os_log_impl(&dword_247F93000, v28, v29, "Error during limited UI presentation: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v32, -1, -1);
  }
  else
  {
  }
  os_log_type_t v36 = *(void **)(v0 + 88);

  swift_willThrow();
LABEL_25:
  os_log_type_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37(0);
}

uint64_t sub_248090ED8(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return MEMORY[0x270FA2498](sub_248090EF8, 0, 0);
}

uint64_t sub_248090EF8()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v0[12] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[13] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_248090F7C, v2, 0);
}

uint64_t sub_248090F7C()
{
  uint64_t v1 = *(void *)(v0[12] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[14] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  *uint64_t v2 = v0;
  v2[1] = sub_248091088;
  uint64_t v4 = v0[13];
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return sub_247FCE628((uint64_t)v0 + 65, v1, (uint64_t)sub_2480959E8, v4, (uint64_t)&unk_2692D9730, 0, v3, v5);
}

uint64_t sub_248091088()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v4 = sub_248091224;
  }
  else {
    uint64_t v4 = sub_2480911B4;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_2480911B4()
{
  *(unsigned char *)(v0 + 66) = *(unsigned char *)(v0 + 65);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_248095C64, 0, 0);
}

uint64_t sub_248091224()
{
  return MEMORY[0x270FA2498](sub_248095C4C, 0, 0);
}

uint64_t sub_248091240(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return MEMORY[0x270FA2498](sub_248091260, 0, 0);
}

uint64_t sub_248091260()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_24809128C, v1, 0);
}

uint64_t sub_24809128C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v5;
  uint64_t v6 = type metadata accessor for AuthenticationModel();
  *uint64_t v5 = v0;
  v5[1] = sub_248091368;
  return sub_247FCD364(v3, (uint64_t)sub_24808D2B4, 0, v6, ObjectType, v2);
}

uint64_t sub_248091368()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_248095C48;
  }
  else {
    uint64_t v2 = sub_248095C6C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24809147C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  return MEMORY[0x270FA2498](sub_2480914A0, 0, 0);
}

uint64_t sub_2480914A0()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v0[14] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[15] = v5;
  v5[2] = v3;
  v5[3] = v2;
  long long v5[4] = v1;
  return MEMORY[0x270FA2498](sub_248091534, v4, 0);
}

uint64_t sub_248091534()
{
  uint64_t v1 = *(void *)(v0[14] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  *uint64_t v2 = v0;
  v2[1] = sub_248091640;
  uint64_t v4 = v0[15];
  uint64_t v5 = MEMORY[0x263F8D4F8];
  return sub_247FCE628((uint64_t)v0 + 65, v1, (uint64_t)sub_248095940, v4, (uint64_t)&unk_2692D96F8, 0, v3, v5);
}

uint64_t sub_248091640()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v4 = sub_248091850;
  }
  else {
    uint64_t v4 = sub_24809176C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24809176C()
{
  *(unsigned char *)(v0 + 66) = *(unsigned char *)(v0 + 65);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2480917DC, 0, 0);
}

uint64_t sub_2480917DC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 66);
  return v1(v2);
}

uint64_t sub_248091850()
{
  return MEMORY[0x270FA2498](sub_24809186C, 0, 0);
}

uint64_t sub_24809186C()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_task_dealloc();
  *(void *)(v0 + 72) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_248174B90();
        __swift_project_value_buffer(v11, (uint64_t)qword_2692D6A78);
        uint64_t v12 = sub_248174B70();
        os_log_type_t v13 = sub_2481755B0();
        if (os_log_type_enabled(v12, v13))
        {
          os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v14 = 0;
          _os_log_impl(&dword_247F93000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x24C574E00](v14, -1, -1);
        }
        uint64_t v15 = *(void **)(v0 + 88);

        sub_248175160();
        id v16 = objc_allocWithZone(MEMORY[0x263F087E8]);
        id v17 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, -7003, 0);

        swift_willThrow();
LABEL_17:

        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_248174B90();
        __swift_project_value_buffer(v18, (uint64_t)qword_2692D6A78);
        uint64_t v19 = sub_248174B70();
        os_log_type_t v20 = sub_2481755B0();
        if (os_log_type_enabled(v19, v20))
        {
          id v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v21 = 0;
          _os_log_impl(&dword_247F93000, v19, v20, "Client skipped limited UI presentation, converting into AppleID error", v21, 2u);
          MEMORY[0x24C574E00](v21, -1, -1);
        }
        uint64_t v15 = *(void **)(v0 + 88);

        sub_248175160();
        id v22 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v23 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  os_log_type_t v24 = *(void **)(v0 + 136);
  uint64_t v25 = sub_248174B90();
  __swift_project_value_buffer(v25, (uint64_t)qword_2692D6A78);
  id v26 = v24;
  id v27 = v24;
  uint64_t v28 = sub_248174B70();
  os_log_type_t v29 = sub_2481755D0();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void **)(v0 + 136);
  if (v30)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    id v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 138412290;
    id v34 = v31;
    uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v35;
    sub_248175730();
    *id v33 = v35;

    _os_log_impl(&dword_247F93000, v28, v29, "Error during limited UI presentation: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v32, -1, -1);
  }
  else
  {
  }
  os_log_type_t v36 = *(void **)(v0 + 88);

  swift_willThrow();
  swift_bridgeObjectRelease();
LABEL_25:
  os_log_type_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37(0);
}

uint64_t sub_248091DA0(uint64_t a1)
{
  *(void *)(v1 + 88) = a1;
  return MEMORY[0x270FA2498](sub_248091DC0, 0, 0);
}

uint64_t sub_248091DC0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  *(void *)(v0 + 96) = v1;
  return MEMORY[0x270FA2498](sub_248091DEC, v1, 0);
}

uint64_t sub_248091DEC()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v5;
  uint64_t v6 = type metadata accessor for AuthenticationModel();
  *uint64_t v5 = v0;
  v5[1] = sub_248091EC8;
  return sub_247FCD364(v3, (uint64_t)sub_24808D2B4, 0, v6, ObjectType, v2);
}

uint64_t sub_248091EC8()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_248092044;
  }
  else {
    uint64_t v2 = sub_248091FDC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_248091FDC()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_248092044()
{
  uint64_t v1 = *(void **)(v0 + 112);
  *(void *)(v0 + 72) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && v10 == 0)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v34 = sub_248174B90();
        __swift_project_value_buffer(v34, (uint64_t)qword_2692D6A78);
        uint64_t v35 = sub_248174B70();
        os_log_type_t v36 = sub_2481755B0();
        if (os_log_type_enabled(v35, v36))
        {
          os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v37 = 0;
          _os_log_impl(&dword_247F93000, v35, v36, "Client cancelled limited UI presentation, converting into AppleID error", v37, 2u);
          MEMORY[0x24C574E00](v37, -1, -1);
        }
        id v16 = *(void **)(v0 + 88);

        sub_248175160();
        id v38 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v39 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v38, sel_initWithDomain_code_userInfo_, v39, -7003, 0);

        swift_willThrow();
        goto LABEL_29;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v12 = sub_248174B90();
        __swift_project_value_buffer(v12, (uint64_t)qword_2692D6A78);
        os_log_type_t v13 = sub_248174B70();
        os_log_type_t v14 = sub_2481755B0();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v15 = 0;
          _os_log_impl(&dword_247F93000, v13, v14, "Client skipped limited UI presentation, converting into AppleID error", v15, 2u);
          MEMORY[0x24C574E00](v15, -1, -1);
        }
        id v16 = *(void **)(v0 + 88);

        sub_248175160();
        id v17 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v18 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7038, 0);

        swift_willThrow();
LABEL_29:

        goto LABEL_21;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v19 = *(void **)(v0 + 112);
  uint64_t v20 = sub_248174B90();
  __swift_project_value_buffer(v20, (uint64_t)qword_2692D6A78);
  id v21 = v19;
  id v22 = v19;
  uint64_t v23 = sub_248174B70();
  os_log_type_t v24 = sub_2481755D0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  id v26 = *(void **)(v0 + 112);
  if (v25)
  {
    id v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    *(_DWORD *)id v27 = 138412290;
    id v29 = v26;
    uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 80) = v30;
    sub_248175730();
    *uint64_t v28 = v30;

    _os_log_impl(&dword_247F93000, v23, v24, "Error during limited UI presentation: %@", v27, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v28, -1, -1);
    MEMORY[0x24C574E00](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v31 = *(void **)(v0 + 88);

  swift_willThrow();
LABEL_21:
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32(0);
}

uint64_t sub_248092550(uint64_t a1)
{
  *(void *)(v1 + 96) = a1;
  return MEMORY[0x270FA2498](sub_248092570, 0, 0);
}

uint64_t sub_248092570()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v0[13] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[14] = v3;
  *(void *)(v3 + 16) = v1;
  return MEMORY[0x270FA2498](sub_2480925F4, v2, 0);
}

uint64_t sub_2480925F4()
{
  uint64_t v1 = *(void *)(v0[13] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9758);
  *uint64_t v2 = v0;
  v2[1] = sub_24809270C;
  uint64_t v5 = v0[14];
  return sub_247FCE628((uint64_t)(v0 + 9), v1, (uint64_t)sub_248095A28, v5, (uint64_t)&unk_2692D9768, 0, v3, v4);
}

uint64_t sub_24809270C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v4 = sub_248092910;
  }
  else {
    uint64_t v4 = sub_248092838;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248092838()
{
  *(void *)(v0 + 136) = *(void *)(v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2480928A8, 0, 0);
}

uint64_t sub_2480928A8()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 136);
  return v1(v2);
}

uint64_t sub_248092910()
{
  return MEMORY[0x270FA2498](sub_24809292C, 0, 0);
}

uint64_t sub_24809292C()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_task_dealloc();
  *(void *)(v0 + 80) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_248174B90();
        __swift_project_value_buffer(v11, (uint64_t)qword_2692D6A78);
        uint64_t v12 = sub_248174B70();
        os_log_type_t v13 = sub_2481755B0();
        if (os_log_type_enabled(v12, v13))
        {
          os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v14 = 0;
          _os_log_impl(&dword_247F93000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x24C574E00](v14, -1, -1);
        }
        uint64_t v15 = *(void **)(v0 + 96);

        sub_248175160();
        id v16 = objc_allocWithZone(MEMORY[0x263F087E8]);
        id v17 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, -7003, 0);

        swift_willThrow();
LABEL_17:

        goto LABEL_25;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_248174B90();
        __swift_project_value_buffer(v18, (uint64_t)qword_2692D6A78);
        uint64_t v19 = sub_248174B70();
        os_log_type_t v20 = sub_2481755B0();
        if (os_log_type_enabled(v19, v20))
        {
          id v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v21 = 0;
          _os_log_impl(&dword_247F93000, v19, v20, "Client skipped limited UI presentation, converting into AppleID error", v21, 2u);
          MEMORY[0x24C574E00](v21, -1, -1);
        }
        uint64_t v15 = *(void **)(v0 + 96);

        sub_248175160();
        id v22 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v23 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  os_log_type_t v24 = *(void **)(v0 + 128);
  uint64_t v25 = sub_248174B90();
  __swift_project_value_buffer(v25, (uint64_t)qword_2692D6A78);
  id v26 = v24;
  id v27 = v24;
  uint64_t v28 = sub_248174B70();
  os_log_type_t v29 = sub_2481755D0();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void **)(v0 + 128);
  if (v30)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    id v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 138412290;
    id v34 = v31;
    uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 88) = v35;
    sub_248175730();
    *id v33 = v35;

    _os_log_impl(&dword_247F93000, v28, v29, "Error during limited UI presentation: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v32, -1, -1);
  }
  else
  {
  }
  os_log_type_t v36 = *(void **)(v0 + 96);

  swift_willThrow();
LABEL_25:
  os_log_type_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_248092E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[16] = a5;
  v6[17] = a6;
  v6[14] = a3;
  v6[15] = a4;
  v6[12] = a1;
  v6[13] = a2;
  return MEMORY[0x270FA2498](sub_248092E68, 0, 0);
}

uint64_t sub_248092E68()
{
  uint64_t v1 = *(void *)(v0 + 136);
  long long v6 = *(_OWORD *)(v0 + 104);
  long long v7 = *(_OWORD *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  *(void *)(v0 + 144) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 152) = v4;
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v6;
  *(_OWORD *)(v4 + 40) = v7;
  *(void *)(v4 + 56) = v1;
  return MEMORY[0x270FA2498](sub_248092F18, v3, 0);
}

uint64_t sub_248092F18()
{
  uint64_t v1 = *(void *)(v0[18] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[20] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9758);
  *uint64_t v2 = v0;
  v2[1] = sub_248093030;
  uint64_t v5 = v0[19];
  return sub_247FCE628((uint64_t)(v0 + 9), v1, (uint64_t)sub_2480959F8, v5, (uint64_t)&unk_2692D9750, 0, v3, v4);
}

uint64_t sub_248093030()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v4 = sub_248093240;
  }
  else {
    uint64_t v4 = sub_24809315C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24809315C()
{
  *(void *)(v0 + 176) = *(void *)(v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2480931CC, 0, 0);
}

uint64_t sub_2480931CC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 176);
  return v1(v2);
}

uint64_t sub_248093240()
{
  return MEMORY[0x270FA2498](sub_24809325C, 0, 0);
}

uint64_t sub_24809325C()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_task_dealloc();
  *(void *)(v0 + 80) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_248174B90();
        __swift_project_value_buffer(v11, (uint64_t)qword_2692D6A78);
        uint64_t v12 = sub_248174B70();
        os_log_type_t v13 = sub_2481755B0();
        if (os_log_type_enabled(v12, v13))
        {
          os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v14 = 0;
          _os_log_impl(&dword_247F93000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x24C574E00](v14, -1, -1);
        }
        uint64_t v15 = *(void **)(v0 + 96);

        sub_248175160();
        id v16 = objc_allocWithZone(MEMORY[0x263F087E8]);
        id v17 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, -7003, 0);

        swift_willThrow();
LABEL_17:

        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v18 = sub_248174B90();
        __swift_project_value_buffer(v18, (uint64_t)qword_2692D6A78);
        uint64_t v19 = sub_248174B70();
        os_log_type_t v20 = sub_2481755B0();
        if (os_log_type_enabled(v19, v20))
        {
          id v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v21 = 0;
          _os_log_impl(&dword_247F93000, v19, v20, "Client skipped limited UI presentation, converting into AppleID error", v21, 2u);
          MEMORY[0x24C574E00](v21, -1, -1);
        }
        uint64_t v15 = *(void **)(v0 + 96);

        sub_248175160();
        id v22 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v23 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v22, sel_initWithDomain_code_userInfo_, v23, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  os_log_type_t v24 = *(void **)(v0 + 168);
  uint64_t v25 = sub_248174B90();
  __swift_project_value_buffer(v25, (uint64_t)qword_2692D6A78);
  id v26 = v24;
  id v27 = v24;
  uint64_t v28 = sub_248174B70();
  os_log_type_t v29 = sub_2481755D0();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void **)(v0 + 168);
  if (v30)
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    id v33 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 138412290;
    id v34 = v31;
    uint64_t v35 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 88) = v35;
    sub_248175730();
    *id v33 = v35;

    _os_log_impl(&dword_247F93000, v28, v29, "Error during limited UI presentation: %@", v32, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v32, -1, -1);
  }
  else
  {
  }
  os_log_type_t v36 = *(void **)(v0 + 96);

  swift_willThrow();
  swift_bridgeObjectRelease();
LABEL_25:
  os_log_type_t v37 = *(uint64_t (**)(void))(v0 + 8);
  return v37();
}

uint64_t sub_24809378C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return MEMORY[0x270FA2498](sub_2480937AC, 0, 0);
}

uint64_t sub_2480937AC()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v0[15] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[16] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  return MEMORY[0x270FA2498](sub_248093838, v3, 0);
}

uint64_t sub_248093838()
{
  uint64_t v1 = *(void *)(v0[15] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[17] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9748);
  *uint64_t v2 = v0;
  v2[1] = sub_248093950;
  uint64_t v5 = v0[16];
  return sub_247FCE628((uint64_t)(v0 + 9), v1, (uint64_t)sub_2480959F0, v5, (uint64_t)&unk_2692D9740, 0, v3, v4);
}

uint64_t sub_248093950()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v4 = sub_248093B58;
  }
  else {
    uint64_t v4 = sub_248093A7C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248093A7C()
{
  *(_OWORD *)(v0 + 152) = *(_OWORD *)(v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_248093AEC, 0, 0);
}

uint64_t sub_248093AEC()
{
  uint64_t v1 = *(void **)(v0 + 112);

  uint64_t v2 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 160);
  return v2(v3, v4);
}

uint64_t sub_248093B58()
{
  return MEMORY[0x270FA2498](sub_248093B74, 0, 0);
}

uint64_t sub_248093B74()
{
  uint64_t v1 = *(void **)(v0 + 144);
  swift_task_dealloc();
  *(void *)(v0 + 88) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_248174B90();
        __swift_project_value_buffer(v11, (uint64_t)qword_2692D6A78);
        uint64_t v12 = sub_248174B70();
        os_log_type_t v13 = sub_2481755B0();
        if (os_log_type_enabled(v12, v13))
        {
          os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v14 = 0;
          _os_log_impl(&dword_247F93000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x24C574E00](v14, -1, -1);
        }
        id v16 = *(void **)(v0 + 104);
        uint64_t v15 = *(void **)(v0 + 112);

        sub_248175160();
        id v17 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v18 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7003, 0);

        swift_willThrow();
LABEL_17:

        goto LABEL_25;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_248174B90();
        __swift_project_value_buffer(v19, (uint64_t)qword_2692D6A78);
        os_log_type_t v20 = sub_248174B70();
        os_log_type_t v21 = sub_2481755B0();
        if (os_log_type_enabled(v20, v21))
        {
          id v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v22 = 0;
          _os_log_impl(&dword_247F93000, v20, v21, "Client skipped limited UI presentation, converting into AppleID error", v22, 2u);
          MEMORY[0x24C574E00](v22, -1, -1);
        }
        id v16 = *(void **)(v0 + 104);
        uint64_t v15 = *(void **)(v0 + 112);

        sub_248175160();
        id v23 = objc_allocWithZone(MEMORY[0x263F087E8]);
        os_log_type_t v24 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void **)(v0 + 144);
  uint64_t v26 = sub_248174B90();
  __swift_project_value_buffer(v26, (uint64_t)qword_2692D6A78);
  id v27 = v25;
  id v28 = v25;
  os_log_type_t v29 = sub_248174B70();
  os_log_type_t v30 = sub_2481755D0();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = *(void **)(v0 + 144);
  if (v31)
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    id v34 = (void *)swift_slowAlloc();
    *(_DWORD *)id v33 = 138412290;
    id v35 = v32;
    uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 96) = v36;
    sub_248175730();
    void *v34 = v36;

    _os_log_impl(&dword_247F93000, v29, v30, "Error during limited UI presentation: %@", v33, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v34, -1, -1);
    MEMORY[0x24C574E00](v33, -1, -1);
  }
  else
  {
  }
  id v38 = *(void **)(v0 + 104);
  os_log_type_t v37 = *(void **)(v0 + 112);

  swift_willThrow();
LABEL_25:
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_248094090(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return MEMORY[0x270FA2498](sub_2480940B0, 0, 0);
}

uint64_t sub_2480940B0()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v0[14] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[15] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  return MEMORY[0x270FA2498](sub_24809413C, v3, 0);
}

uint64_t sub_24809413C()
{
  uint64_t v1 = *(void *)(v0[14] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F78);
  *uint64_t v2 = v0;
  v2[1] = sub_248094254;
  uint64_t v5 = v0[15];
  return sub_247FCE628((uint64_t)(v0 + 9), v1, (uint64_t)sub_2480959C8, v5, (uint64_t)&unk_2692D9720, 0, v3, v4);
}

uint64_t sub_248094254()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v4 = sub_24809445C;
  }
  else {
    uint64_t v4 = sub_248094380;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248094380()
{
  *(void *)(v0 + 144) = *(void *)(v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2480943F0, 0, 0);
}

uint64_t sub_2480943F0()
{
  uint64_t v1 = *(void **)(v0 + 104);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 144);
  return v2(v3);
}

uint64_t sub_24809445C()
{
  return MEMORY[0x270FA2498](sub_248094478, 0, 0);
}

uint64_t sub_248094478()
{
  uint64_t v1 = *(void **)(v0 + 136);
  swift_task_dealloc();
  *(void *)(v0 + 80) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 48);
    uint64_t v8 = *(void *)(v0 + 56);
    int v9 = *(unsigned __int8 *)(v0 + 64);
    if (v9 == 4)
    {
      uint64_t v10 = v5 | v4 | v6 | v7 | v8;
      if ((unint64_t)(v3 - 1) <= 1 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_248174B90();
        __swift_project_value_buffer(v11, (uint64_t)qword_2692D6A78);
        uint64_t v12 = sub_248174B70();
        os_log_type_t v13 = sub_2481755B0();
        if (os_log_type_enabled(v12, v13))
        {
          os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v14 = 0;
          _os_log_impl(&dword_247F93000, v12, v13, "Client cancelled limited UI presentation, converting into AppleID error", v14, 2u);
          MEMORY[0x24C574E00](v14, -1, -1);
        }
        id v16 = *(void **)(v0 + 96);
        uint64_t v15 = *(void **)(v0 + 104);

        sub_248175160();
        id v17 = objc_allocWithZone(MEMORY[0x263F087E8]);
        uint64_t v18 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v17, sel_initWithDomain_code_userInfo_, v18, -7003, 0);

        swift_willThrow();
LABEL_17:

        goto LABEL_25;
      }
      if (v3 == 3 && !v10)
      {

        if (qword_2692D4D70 != -1) {
          swift_once();
        }
        uint64_t v19 = sub_248174B90();
        __swift_project_value_buffer(v19, (uint64_t)qword_2692D6A78);
        os_log_type_t v20 = sub_248174B70();
        os_log_type_t v21 = sub_2481755B0();
        if (os_log_type_enabled(v20, v21))
        {
          id v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v22 = 0;
          _os_log_impl(&dword_247F93000, v20, v21, "Client skipped limited UI presentation, converting into AppleID error", v22, 2u);
          MEMORY[0x24C574E00](v22, -1, -1);
        }
        id v16 = *(void **)(v0 + 96);
        uint64_t v15 = *(void **)(v0 + 104);

        sub_248175160();
        id v23 = objc_allocWithZone(MEMORY[0x263F087E8]);
        os_log_type_t v24 = (void *)sub_248175130();
        swift_bridgeObjectRelease();
        objc_msgSend(v23, sel_initWithDomain_code_userInfo_, v24, -7038, 0);

        swift_willThrow();
        goto LABEL_17;
      }
    }
    sub_247FA98EC(v3, v4, v5, v6, v7, v8, v9);
  }

  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v25 = *(void **)(v0 + 136);
  uint64_t v26 = sub_248174B90();
  __swift_project_value_buffer(v26, (uint64_t)qword_2692D6A78);
  id v27 = v25;
  id v28 = v25;
  os_log_type_t v29 = sub_248174B70();
  os_log_type_t v30 = sub_2481755D0();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = *(void **)(v0 + 136);
  if (v31)
  {
    id v33 = (uint8_t *)swift_slowAlloc();
    id v34 = (void *)swift_slowAlloc();
    *(_DWORD *)id v33 = 138412290;
    id v35 = v32;
    uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 88) = v36;
    sub_248175730();
    void *v34 = v36;

    _os_log_impl(&dword_247F93000, v29, v30, "Error during limited UI presentation: %@", v33, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v34, -1, -1);
    MEMORY[0x24C574E00](v33, -1, -1);
  }
  else
  {
  }
  id v38 = *(void **)(v0 + 96);
  os_log_type_t v37 = *(void **)(v0 + 104);

  swift_willThrow();
LABEL_25:
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_248094994(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  return MEMORY[0x270FA2498](sub_2480949B4, 0, 0);
}

uint64_t sub_2480949B4()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___AKModernAppleIDAuthenticationContext_model);
  v0[14] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[15] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  return MEMORY[0x270FA2498](sub_248094A40, v3, 0);
}

uint64_t sub_248094A40()
{
  uint64_t v1 = *(void *)(v0[14] + 112);
  swift_getObjectType();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9718);
  *uint64_t v2 = v0;
  v2[1] = sub_248094B58;
  uint64_t v5 = v0[15];
  return sub_247FCE628((uint64_t)(v0 + 9), v1, (uint64_t)sub_2480959A8, v5, (uint64_t)&unk_2692D9710, 0, v3, v4);
}

uint64_t sub_248094B58()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v4 = sub_248094CF4;
  }
  else {
    uint64_t v4 = sub_248094C84;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248094C84()
{
  *(void *)(v0 + 144) = *(void *)(v0 + 72);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_248095C58, 0, 0);
}

uint64_t sub_248094CF4()
{
  return MEMORY[0x270FA2498](sub_248095C50, 0, 0);
}

uint64_t method lookup function for ModernAppleIDAuthenticationContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ModernAppleIDAuthenticationContext);
}

uint64_t dispatch thunk of ModernAppleIDAuthenticationContext.__allocating_init(_:signInModelModifier:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_248094D40()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_247FD79D0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_2692D9528 + dword_2692D9528);
  return v5(v2, v3);
}

uint64_t sub_248094DF8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_2692D9548 + dword_2692D9548);
  return v6(v2, v3, v4);
}

uint64_t sub_248094EB4()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_248094F04()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_247FCB950;
  uint64_t v7 = (uint64_t (*)(void *, void *, void *, void *))((char *)&dword_2692D9568 + dword_2692D9568);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_248094FD0()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_247FD79D0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_2692D9588 + dword_2692D9588);
  return v5(v2, v3);
}

uint64_t sub_248095088()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_2692D95A8 + dword_2692D95A8);
  return v6(v2, v3, v4);
}

uint64_t sub_248095148()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_247FD79D0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_2692D95C8 + dword_2692D95C8);
  return v5(v2, v3);
}

uint64_t sub_248095200()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_2692D95E8 + dword_2692D95E8);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_42Tm()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_248095308()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_2692D9608 + dword_2692D9608);
  return v6(v2, v3, v4);
}

uint64_t sub_2480953C8()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, void *))((char *)&dword_2692D9628 + dword_2692D9628);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_24809549C()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_247FD79D0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_2692D9648 + dword_2692D9648);
  return v5(v2, v3);
}

uint64_t sub_248095554()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_247FD79D0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_2692D9668 + dword_2692D9668);
  return v5(v2, v3);
}

uint64_t objectdestroy_146Tm()
{
  _Block_release(*(const void **)(v0 + 40));
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_248095664()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, void *))((char *)&dword_2692D9688 + dword_2692D9688);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_248095738()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_247FD79D0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_2692D96A8 + dword_2692D96A8);
  return v5(v2, v3);
}

uint64_t objectdestroyTm_0()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248095830()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_247FD79D0;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_2692D96C8 + dword_2692D96C8);
  return v5(v2, v3);
}

uint64_t sub_2480958E4()
{
  sub_247F98958(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(unsigned char *)(v0 + 96));
  return MEMORY[0x270FA0238](v0, 97, 7);
}

void sub_248095940(uint64_t a1)
{
  sub_24808E0E8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

unint64_t sub_24809594C()
{
  unint64_t result = qword_2692D9708;
  if (!qword_2692D9708)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D9700);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9708);
  }
  return result;
}

void sub_2480959A8(uint64_t a1)
{
  sub_24808D72C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), 8);
}

void sub_2480959C8(uint64_t a1)
{
  sub_24808D72C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), 7);
}

void sub_2480959E8(uint64_t a1)
{
  sub_24808C378(a1, *(void **)(v1 + 16));
}

void sub_2480959F0(uint64_t a1)
{
  sub_24808B9F0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_2480959F8(uint64_t a1)
{
  sub_24808ACB0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

void sub_248095A08(uint64_t a1)
{
  sub_24808A69C(a1, *(void **)(v1 + 16), 4);
}

void sub_248095A28(uint64_t a1)
{
  sub_24808A69C(a1, *(void **)(v1 + 16), 2);
}

uint64_t sub_248095A48(uint64_t a1)
{
  return sub_24808926C(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_248095A58()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_247FA98EC(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  sub_247F98958(*(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(void *)(v0 + 136), *(void **)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void **)(v0 + 168), *(void **)(v0 + 176), *(unsigned char *)(v0 + 184));
  return MEMORY[0x270FA0238](v0, 185, 7);
}

uint64_t sub_248095AE0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AuthenticationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_248095B3C(uint64_t a1)
{
  sub_248088448(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_248095B44(uint64_t a1)
{
  sub_2480867E0(a1, *(id *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_248095B54()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_248095B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_247FCB950;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_2480869B8, 0, 0);
}

id sub_248095C74(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_247FB3398(0, (unint64_t *)&qword_2692D6D68);
    uint64_t v4 = (void *)sub_248174FF0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  return v4;
}

id SetupController.queue.getter()
{
  return *(id *)(v0 + 112);
}

uint64_t sub_248095D18(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = qword_2692D4D70;
    swift_retain();
    if (v1 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_248174B90();
    __swift_project_value_buffer(v2, (uint64_t)qword_2692D6A78);
    swift_retain_n();
    swift_retain_n();
    uint64_t v3 = sub_248174B70();
    os_log_type_t v4 = sub_2481755C0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v11 = v6;
      *(_DWORD *)uint64_t v5 = 136315394;
      sub_248174C80();
      swift_retain();
      uint64_t v7 = sub_248175190();
      sub_247FB6D24(v7, v8, &v11);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2080;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9888);
      uint64_t v9 = sub_248175190();
      sub_247FB6D24(v9, v10, &v11);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v3, v4, "Setup controller session changed from %s to %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v6, -1, -1);
      MEMORY[0x24C574E00](v5, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_248174C50();
    return swift_release();
  }
  return result;
}

uint64_t SetupController.__allocating_init(queue:endpoint:inactiveSession:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  SetupController.init(queue:endpoint:inactiveSession:)(a1, a2, a3);
  return v6;
}

uint64_t SetupController.init(queue:endpoint:inactiveSession:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v6 = sub_248175620();
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v36 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_248175610();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97C0);
  MEMORY[0x270FA5388](v11 - 8);
  os_log_type_t v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_248174D50();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  id v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_248174D80();
  MEMORY[0x270FA5388](v18 - 8);
  swift_defaultActor_initialize();
  *(void *)(v3 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_inactiveSession) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession) = 0;
  if (a1)
  {
    uint64_t v19 = (uint64_t)a1;
    uint64_t v21 = v38;
    uint64_t v20 = v39;
    id v22 = a1;
  }
  else
  {
    v34[1] = v10;
    uint64_t v35 = v6;
    qos_class_self();
    sub_248174D40();
    int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    id v22 = 0;
    os_log_type_t v24 = v36;
    uint64_t v25 = v37;
    if (v23 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F050], v14);
      sub_247FB33D4((uint64_t)v13, &qword_2692D97C0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    }
    v34[0] = sub_247FB3398(0, (unint64_t *)&qword_26B13BEA0);
    sub_248174D70();
    uint64_t v40 = MEMORY[0x263F8EE78];
    sub_2480A2324(&qword_26B13BE98, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13BE60);
    sub_24809FFEC(&qword_26B13BE68, &qword_26B13BE60);
    sub_2481757A0();
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v24, *MEMORY[0x263F8F130], v35);
    uint64_t v19 = sub_248175650();
    uint64_t v21 = v38;
    uint64_t v20 = v39;
  }
  *(void *)(v3 + 112) = v19;
  type metadata accessor for AISSetupAnalyticsEvent();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = 0;
  *(void *)(v26 + 24) = 0;
  uint64_t v27 = v26 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_startDate;
  uint64_t v28 = sub_248174850();
  os_log_type_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  v29(v27, 1, 1, v28);
  v29(v26 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_endDate, 1, 1, v28);
  *(unsigned char *)(v26 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_didSucceed) = 0;
  uint64_t v30 = OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_analytics;
  type metadata accessor for AISAnalytics();
  id v31 = v22;
  *(void *)(v26 + v30) = swift_initStaticObject();
  uint64_t v32 = (void *)(v26 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_name);
  *uint64_t v32 = 0xD00000000000001CLL;
  v32[1] = 0x8000000248192060;

  *(void *)(v4 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_setupAnalyticsEvent) = v26;
  sub_247FE06A4(v21, v4 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_endpoint, &qword_2692D97D0);
  *(void *)(v4 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_inactiveSession) = v20;
  swift_release();
  return v4;
}

uint64_t SetupController.__allocating_init()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97D0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_248174C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for SetupController();
  uint64_t v4 = swift_allocObject();
  SetupController.init(queue:endpoint:inactiveSession:)(0, (uint64_t)v2, 0);
  return v4;
}

uint64_t sub_248096604()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_248174B90();
  __swift_project_value_buffer(v5, (uint64_t)qword_2692D6A78);
  uint64_t v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755C0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_247F93000, v6, v7, "Invalidating setup controller", v8, 2u);
    MEMORY[0x24C574E00](v8, -1, -1);
  }

  uint64_t v9 = sub_2481753D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  unint64_t v10 = (void *)swift_allocObject();
  void v10[2] = 0;
  v10[3] = 0;
  v10[4] = v1;
  swift_retain();
  sub_247FFC270((uint64_t)v4, (uint64_t)&unk_2692D97E0, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_2480967C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_2480967E0, a4, 0);
}

uint64_t sub_2480967E0()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession);
  swift_retain();
  return MEMORY[0x270FA2498](sub_24809685C, 0, 0);
}

uint64_t sub_24809685C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (v1)
  {
    sub_248174C50();
    swift_release();
  }
  **(unsigned char **)(v0 + 16) = v1 == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t SetupController.deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession))
  {
    swift_retain();
    sub_248174C50();
    swift_release();
  }

  sub_247FB33D4(v0 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_endpoint, &qword_2692D97D0);
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t SetupController.__deallocating_deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession))
  {
    swift_retain();
    sub_248174C50();
    swift_release();
  }

  sub_247FB33D4(v0 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_endpoint, &qword_2692D97D0);
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_248096A70(uint64_t a1, uint64_t a2)
{
  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  v3[28] = type metadata accessor for MachSetupMessage();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  v3[33] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73E0);
  v3[34] = swift_task_alloc();
  uint64_t v4 = sub_248174850();
  v3[35] = v4;
  v3[36] = *(void *)(v4 - 8);
  v3[37] = swift_task_alloc();
  v3[38] = type metadata accessor for SetupContext();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_248096C08, v2, 0);
}

uint64_t sub_248096C08()
{
  id v33 = v0;
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[26];
  uint64_t v3 = sub_248174B90();
  v0[41] = __swift_project_value_buffer(v3, (uint64_t)qword_2692D6A78);
  sub_24809F850(v2, v1, (uint64_t (*)(void))type metadata accessor for SetupContext);
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755B0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[40];
  if (v6)
  {
    uint64_t v8 = v0[39];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v32 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_24809F850(v7, v8, (uint64_t (*)(void))type metadata accessor for SetupContext);
    uint64_t v11 = sub_248175190();
    v0[24] = sub_247FB6D24(v11, v12, &v32);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_24809F7F0(v7, (uint64_t (*)(void))type metadata accessor for SetupContext);
    _os_log_impl(&dword_247F93000, v4, v5, "Performing Apple ID Setup with context: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v10, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
    sub_24809F7F0(v0[40], (uint64_t (*)(void))type metadata accessor for SetupContext);
  }

  uint64_t v14 = (void *)v0[36];
  uint64_t v13 = v0[37];
  uint64_t v15 = v0[34];
  uint64_t v16 = v0[35];
  uint64_t v18 = v0[26];
  uint64_t v17 = v0[27];
  uint64_t v19 = OBJC_IVAR____TtC12AppleIDSetup15SetupController_setupAnalyticsEvent;
  v0[42] = OBJC_IVAR____TtC12AppleIDSetup15SetupController_setupAnalyticsEvent;
  uint64_t v20 = *(void *)(v17 + v19);
  swift_retain();
  sub_248174840();
  uint64_t v21 = (void (*)(uint64_t, uint64_t, uint64_t))v14[2];
  v0[43] = v21;
  v0[44] = (unint64_t)(v14 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v21(v15, v13, v16);
  id v22 = (void (*)(uint64_t, void, uint64_t, uint64_t))v14[7];
  v0[45] = v22;
  v0[46] = (unint64_t)(v14 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v22(v15, 0, 1, v16);
  uint64_t v23 = v20 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_startDate;
  swift_beginAccess();
  sub_24809F780(v15, v23);
  swift_endAccess();
  swift_release();
  os_log_type_t v24 = (void (*)(uint64_t, uint64_t))v14[1];
  v0[47] = v24;
  v0[48] = (unint64_t)(v14 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v24(v13, v16);
  uint64_t v25 = sub_248099874(v18);
  v0[49] = v25;
  uint64_t v26 = v0[32];
  uint64_t v27 = v0[27];
  uint64_t v28 = v0[26];
  uint64_t v29 = OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession;
  v0[50] = OBJC_IVAR____TtC12AppleIDSetup15SetupController_activeSession;
  uint64_t v30 = *(void *)(v27 + v29);
  *(void *)(v27 + v29) = v25;
  swift_retain_n();
  sub_248095D18(v30);
  swift_release();
  swift_release();
  sub_24809F850(v28, v26, (uint64_t (*)(void))type metadata accessor for SetupModel);
  swift_storeEnumTagMultiPayload();
  return MEMORY[0x270FA2498](sub_248097074, 0, 0);
}

uint64_t sub_248097074()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[32];
  uint64_t v3 = swift_task_alloc();
  v0[51] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[52] = v4;
  void *v4 = v0;
  v4[1] = sub_248097168;
  uint64_t v5 = v0[33];
  uint64_t v6 = v0[28];
  return MEMORY[0x270FA2360](v5, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_24809F7E8, v3, v6);
}

uint64_t sub_248097168()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_248097EB4;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 256);
    uint64_t v6 = *(void *)(v2 + 216);
    swift_task_dealloc();
    sub_24809F7F0(v5, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v3 = sub_2480972B0;
    uint64_t v4 = v6;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_2480972B0()
{
  long long v92 = v0;
  sub_24809F850(v0[33], v0[31], (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    uint64_t v16 = v0[31];
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 32);
    uint64_t v22 = *(void *)(v16 + 40);
    char v23 = *(unsigned char *)(v16 + 48);
    sub_247FA9804(*(void *)v16, v18, v19, v20, v21, v22, v23);
    char v88 = v23;
    sub_247FA9804(v17, v18, v19, v20, v21, v22, v23);
    os_log_type_t v24 = sub_248174B70();
    os_log_type_t v25 = sub_2481755D0();
    uint64_t v83 = v18;
    uint64_t v86 = v17;
    uint64_t v79 = v20;
    uint64_t v80 = v19;
    uint64_t v76 = v22;
    if (os_log_type_enabled(v24, v25))
    {
      loga = v24;
      os_log_type_t v72 = v25;
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412290;
      sub_247FE1388();
      swift_allocError();
      *(void *)uint64_t v27 = v17;
      *(void *)(v27 + 8) = v18;
      *(void *)(v27 + 16) = v19;
      *(void *)(v27 + 24) = v20;
      *(void *)(v27 + 32) = v21;
      *(void *)(v27 + 40) = v22;
      *(unsigned char *)(v27 + 48) = v88;
      sub_247FA9804(v17, v18, v19, v20, v21, v22, v88);
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      v0[21] = v28;
      sub_248175730();
      void *v68 = v28;
      sub_247FA98EC(v17, v18, v19, v20, v21, v22, v88);
      sub_247FA98EC(v17, v18, v19, v20, v21, v22, v88);
      _os_log_impl(&dword_247F93000, loga, v72, "Failed to perform setup with error: %@", v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v68, -1, -1);
      MEMORY[0x24C574E00](v26, -1, -1);
      uint64_t v29 = loga;
    }
    else
    {
      sub_247FA98EC(v17, v18, v19, v20, v21, v22, v88);
      sub_247FA98EC(v17, v18, v19, v20, v21, v22, v88);
      uint64_t v29 = v24;
    }
    uint64_t v69 = (void (*)(uint64_t, uint64_t))v0[47];
    uint64_t v43 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[45];
    uint64_t v44 = v0[42];
    id v45 = (void (*)(uint64_t, uint64_t, uint64_t))v0[43];
    uint64_t v46 = v0[37];
    uint64_t v48 = v0[34];
    uint64_t v47 = v0[35];
    buf = (uint8_t *)v0[33];
    *(void *)uint64_t v73 = v0[50];
    uint64_t v49 = v0[27];

    uint64_t v50 = *(void *)(v49 + v44);
    swift_retain();
    sub_248174840();
    v45(v48, v46, v47);
    v43(v48, 0, 1, v47);
    uint64_t v51 = v50 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_endDate;
    swift_beginAccess();
    sub_24809F780(v48, v51);
    swift_endAccess();
    uint64_t v52 = swift_retain();
    sub_24809F8B8(v52);
    swift_release_n();
    v69(v46, v47);
    sub_247FE1388();
    swift_allocError();
    *(void *)uint64_t v53 = v86;
    *(void *)(v53 + 8) = v83;
    *(void *)(v53 + 16) = v80;
    *(void *)(v53 + 24) = v79;
    *(void *)(v53 + 32) = v21;
    *(void *)(v53 + 40) = v76;
    *(unsigned char *)(v53 + 48) = v88;
    swift_willThrow();
    sub_24809F7F0((uint64_t)buf, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v54 = *(void *)v73;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v2 = (uint64_t *)v0[31];
      uint64_t v3 = *v2;
      uint64_t v4 = v2[2];
      uint64_t v82 = v2[3];
      uint64_t v85 = v2[1];
      uint64_t v5 = v2[4];
      uint64_t v6 = v2[5];
      uint64_t v7 = v2[6];
      uint64_t v8 = v2[7];
      uint64_t v9 = v2[8];
      uint64_t v10 = v2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FF6AA4(v6, v7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FF6AA4(v6, v7);
      os_log_t log = v10;
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_248174B70();
      os_log_type_t v12 = sub_2481755B0();
      uint64_t v74 = v4;
      uint64_t v75 = v3;
      if (os_log_type_enabled(v11, v12))
      {
        os_log_type_t type = v12;
        uint64_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        *(_DWORD *)uint64_t v13 = 136315138;
        v91[0] = v67;
        v0[2] = v3;
        v0[3] = v85;
        v0[4] = v4;
        v0[5] = v82;
        v0[6] = v5;
        v0[7] = v6;
        v0[8] = v7;
        v0[9] = v8;
        v0[10] = v9;
        v0[11] = log;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FF6AA4(v6, v7);
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_248175190();
        v0[23] = sub_247FB6D24(v14, v15, v91);
        sub_248175730();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FF6BFC(v6, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FF6BFC(v6, v7);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_247F93000, v11, type, "Finished Apple ID Setup with report: %s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v67, -1, -1);
        MEMORY[0x24C574E00](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FF6BFC(v6, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FF6BFC(v6, v7);
        swift_bridgeObjectRelease();
      }
      uint64_t v66 = v0[50];
      uint64_t v77 = v0[33];
      uint64_t v39 = v0[27];
      uint64_t v40 = (uint64_t *)v0[25];
      v91[0] = v75;
      v91[1] = v85;
      v91[2] = v74;
      v91[3] = v82;
      v91[4] = v5;
      v91[5] = v6;
      v91[6] = v7;
      v91[7] = v8;
      v91[8] = v9;
      v91[9] = (uint64_t)log;
      swift_retain();
      sub_248171D54((uint64_t)v91);
      swift_release();
      sub_24809F7F0(v77, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      *uint64_t v40 = v75;
      v40[1] = v85;
      v40[2] = v74;
      v40[3] = v82;
      v40[4] = v5;
      v40[5] = v6;
      v40[6] = v7;
      v40[7] = v8;
      v40[8] = v9;
      v40[9] = (uint64_t)log;
      uint64_t v41 = *(void *)(v39 + v66);
      *(void *)(v39 + v66) = 0;
      sub_248095D18(v41);
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      char v42 = (uint64_t (*)(void))v0[1];
      goto LABEL_16;
    }
    sub_24809F850(v0[33], v0[30], (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v30 = sub_248174B70();
    os_log_type_t v31 = sub_2481755D0();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = v0[30];
    if (v32)
    {
      uint64_t v34 = v0[29];
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v91[0] = v36;
      *(_DWORD *)uint64_t v35 = 136315138;
      sub_24809F850(v33, v34, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      uint64_t v37 = sub_248175190();
      v0[22] = sub_247FB6D24(v37, v38, v91);
      sub_248175730();
      swift_bridgeObjectRelease();
      sub_24809F7F0(v33, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      _os_log_impl(&dword_247F93000, v30, v31, "Received unexpected mach setup message: %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v36, -1, -1);
      MEMORY[0x24C574E00](v35, -1, -1);
    }
    else
    {
      sub_24809F7F0(v0[30], (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    }

    uint64_t v78 = (void (*)(uint64_t, uint64_t))v0[47];
    id v55 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[45];
    uint64_t v56 = (void (*)(uint64_t, uint64_t, uint64_t))v0[43];
    uint64_t v57 = v0[37];
    uint64_t v58 = v0[34];
    uint64_t v59 = v0[35];
    uint64_t v81 = v0[33];
    uint64_t v84 = v0[31];
    uint64_t v87 = v0[50];
    uint64_t v49 = v0[27];
    uint64_t v60 = *(void *)(v49 + v0[42]);
    swift_retain();
    sub_248174840();
    v56(v58, v57, v59);
    v55(v58, 0, 1, v59);
    uint64_t v61 = v60 + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_endDate;
    swift_beginAccess();
    sub_24809F780(v58, v61);
    swift_endAccess();
    uint64_t v62 = swift_retain();
    sub_24809F8B8(v62);
    swift_release_n();
    v78(v57, v59);
    sub_247FE1388();
    swift_allocError();
    *(_OWORD *)uint64_t v63 = 0u;
    *(_OWORD *)(v63 + 16) = 0u;
    *(_OWORD *)(v63 + 32) = 0u;
    *(unsigned char *)(v63 + 48) = 4;
    swift_willThrow();
    sub_24809F7F0(v81, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    sub_24809F7F0(v84, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v54 = v87;
  }
  uint64_t v64 = *(void *)(v49 + v54);
  *(void *)(v49 + v54) = 0;
  sub_248095D18(v64);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v42 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v42();
}

uint64_t sub_248097EB4()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 216);
  swift_task_dealloc();
  sub_24809F7F0(v1, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
  return MEMORY[0x270FA2498](sub_248097F40, v2, 0);
}

uint64_t sub_248097F40()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[27];
  uint64_t v3 = *(void *)(v2 + v1);
  *(void *)(v2 + v1) = 0;
  sub_248095D18(v3);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_24809803C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v50 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9830);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v52 = (uint64_t)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for MachSetupMessage();
  uint64_t v6 = MEMORY[0x270FA5388](v59);
  uint64_t v57 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v58 = (char *)v47 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v54 = (uint64_t)v47 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v56 = (char *)v47 - v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)v47 - v14;
  uint64_t v16 = sub_248174CE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v47 - v21;
  if (qword_2692D4D68 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_248174B90();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_2692D6A60);
  os_log_type_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v25(v22, a1, v16);
  uint64_t v55 = v24;
  uint64_t v26 = sub_248174B70();
  os_log_type_t v27 = sub_2481755C0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v53 = v15;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v48 = swift_slowAlloc();
    *(void *)&long long v61 = v48;
    uint64_t v49 = a1;
    *(_DWORD *)uint64_t v29 = 136315138;
    v47[1] = v29 + 4;
    v25(v20, (uint64_t)v22, v16);
    uint64_t v30 = sub_248175190();
    uint64_t v60 = sub_247FB6D24(v30, v31, (uint64_t *)&v61);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    _os_log_impl(&dword_247F93000, v26, v27, "Received XPC message: %s", v29, 0xCu);
    uint64_t v32 = v48;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v32, -1, -1);
    uint64_t v33 = v29;
    unint64_t v15 = v53;
    MEMORY[0x24C574E00](v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }

  sub_2480A2324(&qword_2692D9848, (void (*)(uint64_t))type metadata accessor for MachSetupMessage);
  uint64_t v34 = (uint64_t)v56;
  sub_248174CD0();
  uint64_t v35 = (uint64_t)v57;
  uint64_t v36 = (uint64_t)v58;
  sub_2480A165C(v34, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
  uint64_t v37 = v54;
  sub_24809F850((uint64_t)v15, v54, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v38 = v52;
    sub_247FE06A4(v37, v52, &qword_2692D9830);
    sub_2480989E4(v38, v50, v51);
    swift_storeEnumTagMultiPayload();
    sub_2480A2324(&qword_2692D9850, (void (*)(uint64_t))type metadata accessor for MachSetupMessage);
    sub_248174CC0();
    sub_24809F7F0(v36, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    sub_247FB33D4(v38, &qword_2692D9830);
    uint64_t v39 = (uint64_t)v15;
  }
  else
  {
    uint64_t v53 = v15;
    sub_24809F850((uint64_t)v15, v35, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v40 = sub_248174B70();
    os_log_type_t v41 = sub_2481755C0();
    if (os_log_type_enabled(v40, v41))
    {
      char v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(void *)&long long v61 = v43;
      *(_DWORD *)char v42 = 136315138;
      uint64_t v56 = (char *)(v42 + 4);
      sub_24809F850(v35, v36, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      uint64_t v44 = sub_248175190();
      uint64_t v60 = sub_247FB6D24(v44, v45, (uint64_t *)&v61);
      sub_248175730();
      swift_bridgeObjectRelease();
      sub_24809F7F0(v35, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      _os_log_impl(&dword_247F93000, v40, v41, "Received unexpected mach setup message: %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v43, -1, -1);
      MEMORY[0x24C574E00](v42, -1, -1);
    }
    else
    {
      sub_24809F7F0(v35, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    }

    *(_OWORD *)(v36 + 16) = 0u;
    *(_OWORD *)(v36 + 32) = 0u;
    *(_OWORD *)uint64_t v36 = 0u;
    *(unsigned char *)(v36 + 48) = 4;
    swift_storeEnumTagMultiPayload();
    sub_2480A2324(&qword_2692D9850, (void (*)(uint64_t))type metadata accessor for MachSetupMessage);
    sub_248174CC0();
    sub_24809F7F0(v36, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    sub_24809F7F0((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v39 = v54;
  }
  return sub_24809F7F0(v39, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
}

void sub_2480989E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a3;
  uint64_t v59 = a2;
  uint64_t v4 = type metadata accessor for SetupContext();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = v11;
  uint64_t v55 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9830);
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v52 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v47 - v16;
  if (qword_2692D4D58 != -1) {
    swift_once();
  }
  uint64_t v51 = sub_248174B90();
  __swift_project_value_buffer(v51, (uint64_t)qword_26930EEA0);
  sub_247FBB338(a1, (uint64_t)v17, &qword_2692D9830);
  uint64_t v18 = sub_248174B70();
  os_log_type_t v19 = sub_2481755C0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v54 = a1;
  if (v20)
  {
    uint64_t v49 = v9;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v47 = v7;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v48 = v4;
    uint64_t v24 = v23;
    *(void *)&long long aBlock = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    sub_247FBB338((uint64_t)v17, (uint64_t)v15, &qword_2692D9830);
    uint64_t v25 = sub_248175190();
    v66[0] = sub_247FB6D24(v25, v26, (uint64_t *)&aBlock);
    uint64_t v9 = v49;
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FB33D4((uint64_t)v17, &qword_2692D9830);
    _os_log_impl(&dword_247F93000, v18, v19, "Received coordinated model update: %s", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    uint64_t v4 = v48;
    MEMORY[0x24C574E00](v27, -1, -1);
    uint64_t v28 = v22;
    uint64_t v7 = v47;
    MEMORY[0x24C574E00](v28, -1, -1);
  }
  else
  {
    sub_247FB33D4((uint64_t)v17, &qword_2692D9830);
  }

  uint64_t isEscapingClosureAtFileLocation = v59;
  sub_247FBB338(v59 + *(int *)(v4 + 20), (uint64_t)&aBlock, &qword_2692D8960);
  if (v62)
  {
    sub_247FB8480(&aBlock, (uint64_t)v66);
    uint64_t v30 = v67;
    uint64_t v31 = v68;
    __swift_project_boxed_opaque_existential_1(v66, v67);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    if (!v32) {
      uint64_t v32 = *(id *)(v50 + 112);
    }
    uint64_t v33 = v32;
    sub_247FF649C((uint64_t)v66, (uint64_t)v65);
    sub_247FBB338(v54, (uint64_t)v15, &qword_2692D9830);
    uint64_t v34 = v57;
    uint64_t v9 = v55;
    uint64_t v35 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v55, v56, v58);
    unint64_t v36 = (*(unsigned __int8 *)(v52 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    unint64_t v37 = (v13 + *(unsigned __int8 *)(v34 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v38 = swift_allocObject();
    sub_247FB8480(v65, v38 + 16);
    sub_247FE06A4((uint64_t)v15, v38 + v36, &qword_2692D9830);
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v38 + v37, v9, v35);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_2480A0EE8;
    *(void *)(v39 + 24) = v38;
    uint64_t v63 = sub_2480729D8;
    uint64_t v64 = v39;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    long long v61 = sub_2480C6078;
    uint64_t v62 = &block_descriptor_39;
    uint64_t v40 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    dispatch_async_and_wait(v33, v40);

    _Block_release(v40);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  sub_247FB33D4((uint64_t)&aBlock, &qword_2692D8960);
  if (qword_2692D4D68 != -1) {
LABEL_17:
  }
    swift_once();
  __swift_project_value_buffer(v51, (uint64_t)qword_2692D6A60);
  sub_24809F850(isEscapingClosureAtFileLocation, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SetupContext);
  os_log_type_t v41 = sub_248174B70();
  os_log_type_t v42 = sub_2481755D0();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(void *)&long long aBlock = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    sub_24809F850((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SetupContext);
    uint64_t v45 = sub_248175190();
    v66[0] = sub_247FB6D24(v45, v46, (uint64_t *)&aBlock);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_24809F7F0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SetupContext);
    _os_log_impl(&dword_247F93000, v41, v42, "Unable to use exchange from context: %s", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v44, -1, -1);
    MEMORY[0x24C574E00](v43, -1, -1);
  }
  else
  {
    sub_24809F7F0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SetupContext);
  }
}

uint64_t sub_2480991B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9830);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[4];
  uint64_t v18 = a1[3];
  v17[1] = __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_247FBB338(a2, (uint64_t)v11, &qword_2692D9830);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + *(unsigned __int8 *)(v6 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  sub_247FE06A4((uint64_t)v11, v15 + v13, &qword_2692D9830);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v12 + 16))(a2, sub_2480A1538, v15, v18, v12);
  return swift_release();
}

uint64_t sub_2480993E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = type metadata accessor for MachSetupMessage();
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (uint64_t)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9838);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9840);
  uint64_t v9 = MEMORY[0x270FA5388](v34);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)v33 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9830);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v33 - v18;
  if (qword_2692D4D58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_248174B90();
  __swift_project_value_buffer(v20, (uint64_t)qword_26930EEA0);
  sub_247FBB338(a2, (uint64_t)v19, &qword_2692D9830);
  uint64_t v36 = a1;
  sub_247FBB338(a1, (uint64_t)v13, &qword_2692D9840);
  uint64_t v21 = sub_248174B70();
  os_log_type_t v22 = sub_2481755C0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v33[0] = v7;
    uint64_t v25 = v24;
    uint64_t v41 = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    v33[1] = a3;
    sub_247FBB338((uint64_t)v19, (uint64_t)v17, &qword_2692D9830);
    uint64_t v26 = sub_248175190();
    uint64_t v40 = sub_247FB6D24(v26, v27, &v41);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FB33D4((uint64_t)v19, &qword_2692D9830);
    *(_WORD *)(v23 + 12) = 2080;
    sub_247FBB338((uint64_t)v13, (uint64_t)v11, &qword_2692D9840);
    uint64_t v28 = sub_248175190();
    uint64_t v40 = sub_247FB6D24(v28, v29, &v41);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FB33D4((uint64_t)v13, &qword_2692D9840);
    _os_log_impl(&dword_247F93000, v21, v22, "Responding to model update (%s) with response: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v7 = v33[0];
    MEMORY[0x24C574E00](v30, -1, -1);
    MEMORY[0x24C574E00](v23, -1, -1);
  }
  else
  {
    sub_247FB33D4((uint64_t)v19, &qword_2692D9830);
    sub_247FB33D4((uint64_t)v13, &qword_2692D9840);
  }

  sub_247FBB338(v36, v39, &qword_2692D9840);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v31 = v35;
  sub_248175410();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v31, v7);
}

uint64_t sub_248099874(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v2 - 8);
  long long v61 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9890);
  uint64_t v67 = *(void *)(v63 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v63);
  uint64_t v68 = v5;
  uint64_t v69 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9898);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D98A0);
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v59 = v13;
  uint64_t v60 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v75 = (char *)&v57 - v14;
  uint64_t v62 = type metadata accessor for SetupContext();
  uint64_t v65 = *(void *)(v62 - 8);
  uint64_t v15 = *(void *)(v65 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v62);
  uint64_t v66 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v57 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v57 - v20;
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v71 = v7;
  uint64_t v22 = sub_248174B90();
  __swift_project_value_buffer(v22, (uint64_t)qword_2692D6A78);
  uint64_t v70 = a1;
  sub_24809F850(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SetupContext);
  uint64_t v23 = sub_248174B70();
  os_log_type_t v24 = sub_2481755C0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v58 = v8;
    uint64_t v27 = v26;
    uint64_t v77 = v26;
    uint64_t v57 = v9;
    *(_DWORD *)uint64_t v25 = 136315138;
    sub_24809F850((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for SetupContext);
    uint64_t v28 = sub_248175190();
    uint64_t v76 = sub_247FB6D24(v28, v29, &v77);
    uint64_t v9 = v57;
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_24809F7F0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SetupContext);
    _os_log_impl(&dword_247F93000, v23, v24, "Creating new XPC session for context: %s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v27;
    uint64_t v8 = v58;
    MEMORY[0x24C574E00](v30, -1, -1);
    MEMORY[0x24C574E00](v25, -1, -1);
  }
  else
  {
    sub_24809F7F0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for SetupContext);
  }

  uint64_t v63 = swift_allocBox();
  uint64_t v32 = v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  MEMORY[0x270FA5388](v34);
  *(&v57 - 2) = v32;
  type metadata accessor for MachSetupMessage();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v64, *MEMORY[0x263F8F580], v8);
  sub_248175480();
  uint64_t v35 = (uint64_t)v71;
  sub_247FBB338(v32, (uint64_t)v71, &qword_2692D9890);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = v69;
  sub_247FBB338(v35, v69, &qword_2692D9890);
  uint64_t v38 = v66;
  sub_24809F850(v70, v66, (uint64_t (*)(void))type metadata accessor for SetupContext);
  unint64_t v39 = (*(unsigned __int8 *)(v67 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  unint64_t v40 = (v68 + *(unsigned __int8 *)(v65 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v36;
  sub_247FE06A4(v37, v41 + v39, &qword_2692D9890);
  uint64_t v42 = v38;
  uint64_t v43 = v63;
  sub_2480A165C(v42, v41 + v40, (uint64_t (*)(void))type metadata accessor for SetupContext);
  swift_retain();
  swift_retain();
  uint64_t v44 = v72;
  uint64_t v45 = sub_24809BFF0((uint64_t)sub_2480A2014, v41, (uint64_t)sub_2480A2100, v43);
  if (v44)
  {
    swift_release();
    swift_release();
    sub_247FB33D4(v35, &qword_2692D9890);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v74);
    swift_release();
  }
  else
  {
    sub_247FB33D4(v35, &qword_2692D9890);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v46 = sub_2481753D0();
    uint64_t v47 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v61, 1, 1, v46);
    uint64_t v49 = v73;
    uint64_t v48 = v74;
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
    uint64_t v72 = v45;
    uint64_t v51 = v60;
    v50(v60, v75, v74);
    unint64_t v52 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    unint64_t v53 = (v59 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    *(void *)(v54 + 24) = 0;
    uint64_t v55 = v51;
    uint64_t v45 = v72;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v54 + v52, v55, v48);
    *(void *)(v54 + v53) = v45;
    swift_retain();
    sub_24804B560(v47, (uint64_t)&unk_2692D98B0, v54);
    swift_release();
    sub_247FB33D4(v47, &qword_2692D9520);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v75, v48);
  }
  swift_release();
  return v45;
}

uint64_t sub_24809A128(uint64_t a1, uint64_t a2)
{
  sub_247FB33D4(a2, &qword_2692D9890);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, v4);
}

double sub_24809A1F8@<D0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v46 = a2;
  uint64_t v50 = a1;
  uint64_t v52 = a4;
  uint64_t v4 = type metadata accessor for SetupContext();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v47 = (uint8_t *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_248174CE0();
  uint64_t v51 = *(void *)(v53 - 8);
  uint64_t v6 = *(void *)(v51 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v53);
  uint64_t v48 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v49 = (char *)&v43 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9890);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v43 - v19;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = Strong;
    sub_247FBB338((uint64_t)v46, (uint64_t)v13, &qword_2692D9890);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      uint64_t v34 = v5;
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      uint64_t v48 = (char *)(v15 + 32);
      v46(v20, v13, v14);
      uint64_t v35 = sub_2481753D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v45, 1, 1, v35);
      uint64_t v36 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v49, v50, v53);
      sub_24809F850(v43, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for SetupContext);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
      unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      unint64_t v38 = (v6 + *(unsigned __int8 *)(v44 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      unint64_t v39 = (v34 + *(unsigned __int8 *)(v15 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      unint64_t v40 = (char *)swift_allocObject();
      *((void *)v40 + 2) = 0;
      *((void *)v40 + 3) = 0;
      *((void *)v40 + 4) = v22;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v40[v37], v49, v53);
      sub_2480A165C((uint64_t)v47, (uint64_t)&v40[v38], (uint64_t (*)(void))type metadata accessor for SetupContext);
      v46(&v40[v39], v18, v14);
      swift_retain();
      sub_247FFC0C4(v45, (uint64_t)&unk_2692D98D8, (uint64_t)v40);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      goto LABEL_11;
    }
    swift_release();
    sub_247FB33D4((uint64_t)v13, &qword_2692D9890);
  }
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_248174B90();
  __swift_project_value_buffer(v23, (uint64_t)qword_2692D6A78);
  uint64_t v24 = v51;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  uint64_t v26 = v48;
  uint64_t v27 = v53;
  v25(v48, v50, v53);
  uint64_t v28 = sub_248174B70();
  os_log_type_t v29 = sub_2481755D0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v55 = v50;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v47 = v30 + 4;
    v25(v49, (uint64_t)v26, v27);
    uint64_t v31 = sub_248175190();
    uint64_t v54 = sub_247FB6D24(v31, v32, &v55);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v27);
    _os_log_impl(&dword_247F93000, v28, v29, "Received a new XPC message but lost self: %s", v30, 0xCu);
    uint64_t v33 = v50;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v30, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v27);
  }

LABEL_11:
  uint64_t v41 = (_OWORD *)v52;
  *(void *)(v52 + 32) = 0;
  double result = 0.0;
  _OWORD *v41 = 0u;
  v41[1] = 0u;
  return result;
}

uint64_t sub_24809A8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return MEMORY[0x270FA2498](sub_24809A8D4, a4, 0);
}

uint64_t sub_24809A8D4()
{
  sub_24809803C(v0[3], v0[4], v0[5]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24809A938(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9890);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_248174CA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_projectBox();
  if (qword_2692D4D68 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_248174B90();
  __swift_project_value_buffer(v10, (uint64_t)qword_2692D6A60);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v11(v8, a1, v5);
  uint64_t v12 = sub_248174B70();
  os_log_type_t v13 = sub_2481755D0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v23 = v9;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v24 = v4;
    *(_DWORD *)uint64_t v14 = 138412290;
    v21[1] = v14 + 4;
    sub_2480A2324(&qword_2692D98C8, MEMORY[0x263F8F408]);
    swift_allocError();
    v11(v15, (uint64_t)v8, v5);
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v25 = v16;
    uint64_t v4 = v24;
    sub_248175730();
    uint64_t v17 = v22;
    *uint64_t v22 = v16;
    uint64_t v9 = v23;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_247F93000, v12, v13, "XPC session cancelled: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v17, -1, -1);
    MEMORY[0x24C574E00](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  swift_beginAccess();
  sub_247FBB338(v9, (uint64_t)v4, &qword_2692D9890);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_248175420();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  return result;
}

uint64_t sub_24809AD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_248174CE0();
  long long v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for MachSetupMessage();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D98B8);
  v5[17] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D98C0);
  v5[18] = v8;
  v5[19] = *(void *)(v8 - 8);
  v5[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24809AF10, 0, 0);
}

uint64_t sub_24809AF10()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D98A0);
  sub_248175440();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[21] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24809AFD0;
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  return MEMORY[0x270FA1F68](v2, 0, 0, v3);
}

uint64_t sub_24809AFD0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24809B0CC, 0, 0);
}

uint64_t sub_24809B0CC()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[10] + 48))(v1, 1, v0[9]) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    if (qword_2692D4D68 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_248174B90();
    __swift_project_value_buffer(v2, (uint64_t)qword_2692D6A60);
    uint64_t v3 = sub_248174B70();
    os_log_type_t v4 = sub_2481755B0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_247F93000, v3, v4, "End of outgoing messages to daemon", v5, 2u);
      MEMORY[0x24C574E00](v5, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    sub_2480A165C(v1, v0[16], (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    if (qword_2692D4D68 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v10 = sub_248174B90();
    v0[22] = __swift_project_value_buffer(v10, (uint64_t)qword_2692D6A60);
    sub_24809F850(v9, v8, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v11 = sub_248174B70();
    os_log_type_t v12 = sub_2481755C0();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[15];
    if (v13)
    {
      uint64_t v15 = v0[14];
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v26 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      sub_24809F850(v14, v15, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      uint64_t v18 = sub_248175190();
      *(void *)(v16 + 4) = sub_247FB6D24(v18, v19, &v26);
      swift_bridgeObjectRelease();
      sub_24809F7F0(v14, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      _os_log_impl(&dword_247F93000, v11, v12, "Sending message: %s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v17, -1, -1);
      MEMORY[0x24C574E00](v16, -1, -1);
    }
    else
    {
      sub_24809F7F0(v0[15], (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    }

    uint64_t v20 = v0[16];
    uint64_t v21 = v0[3];
    uint64_t v22 = swift_task_alloc();
    v0[23] = v22;
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = v20;
    uint64_t v23 = (void *)swift_task_alloc();
    v0[24] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_24809B55C;
    uint64_t v24 = v0[8];
    uint64_t v25 = v0[4];
    return MEMORY[0x270FA2360](v24, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2480A231C, v22, v25);
  }
}

uint64_t sub_24809B55C()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24809B678;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24809B970;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24809B678()
{
  uint64_t v25 = v0;
  swift_task_dealloc();
  uint64_t v1 = (void *)v0[25];
  sub_24809F850(v0[16], v0[11], (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755D0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[16];
  if (v6)
  {
    uint64_t v8 = v0[14];
    uint64_t v9 = v0[11];
    uint64_t v23 = v0[16];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = v12;
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_24809F850(v9, v8, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v13 = sub_248175190();
    *(void *)(v10 + 4) = sub_247FB6D24(v13, v14, &v24);
    swift_bridgeObjectRelease();
    sub_24809F7F0(v9, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    *(_WORD *)(v10 + 12) = 2112;
    id v15 = v1;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v10 + 14) = v16;
    void *v11 = v16;

    _os_log_impl(&dword_247F93000, v4, v5, "Failed to send message (%s) with error: %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v12, -1, -1);
    MEMORY[0x24C574E00](v10, -1, -1);

    uint64_t v17 = v23;
  }
  else
  {
    uint64_t v18 = v0[11];

    sub_24809F7F0(v18, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v17 = v7;
  }
  sub_24809F7F0(v17, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
  unint64_t v19 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v19;
  *unint64_t v19 = v0;
  v19[1] = sub_24809AFD0;
  uint64_t v20 = v0[17];
  uint64_t v21 = v0[18];
  return MEMORY[0x270FA1F68](v20, 0, 0, v21);
}

uint64_t sub_24809B970()
{
  uint64_t v55 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[5] + 16);
  v1(v0[7], v0[8], v0[4]);
  id v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[7];
  if (v4)
  {
    uint64_t v6 = v0[5];
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[4];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    v54[0] = v51;
    *(_DWORD *)uint64_t v9 = 136315138;
    v1(v7, v5, v8);
    uint64_t v10 = sub_248175190();
    *(void *)(v9 + 4) = sub_247FB6D24(v10, v11, v54);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v12(v5, v8);
    _os_log_impl(&dword_247F93000, v2, v3, "Sent message and received reply: %s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v51, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0[5] + 8);
    v12(v0[7], v0[4]);
  }

  uint64_t v13 = (void *)v0[25];
  sub_2480A2324(&qword_2692D9848, (void (*)(uint64_t))type metadata accessor for MachSetupMessage);
  sub_248174CD0();
  if (v13)
  {
    v12(v0[8], v0[4]);
    sub_24809F850(v0[16], v0[11], (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    id v14 = v13;
    id v15 = v13;
    uint64_t v16 = sub_248174B70();
    os_log_type_t v17 = sub_2481755D0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[16];
    if (v18)
    {
      uint64_t v20 = v0[14];
      uint64_t v21 = v0[11];
      uint64_t v52 = v0[16];
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v54[0] = v24;
      *(_DWORD *)uint64_t v22 = 136315394;
      sub_24809F850(v21, v20, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      uint64_t v25 = sub_248175190();
      *(void *)(v22 + 4) = sub_247FB6D24(v25, v26, v54);
      swift_bridgeObjectRelease();
      sub_24809F7F0(v21, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      *(_WORD *)(v22 + 12) = 2112;
      id v27 = v13;
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v22 + 14) = v28;
      *uint64_t v23 = v28;

      _os_log_impl(&dword_247F93000, v16, v17, "Failed to send message (%s) with error: %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v24, -1, -1);
      MEMORY[0x24C574E00](v22, -1, -1);

      uint64_t v29 = v52;
    }
    else
    {
      uint64_t v40 = v0[11];

      sub_24809F7F0(v40, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      uint64_t v29 = v19;
    }
  }
  else
  {
    sub_24809F850(v0[13], v0[12], (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
    uint64_t v30 = sub_248174B70();
    os_log_type_t v31 = sub_2481755C0();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = v0[16];
    if (v32)
    {
      uint64_t v34 = v0[14];
      uint64_t v35 = v0[12];
      uint64_t v50 = v0[4];
      uint64_t v53 = v0[8];
      uint64_t v49 = v0[13];
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v54[0] = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      sub_24809F850(v35, v34, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      uint64_t v38 = sub_248175190();
      *(void *)(v36 + 4) = sub_247FB6D24(v38, v39, v54);
      swift_bridgeObjectRelease();
      sub_24809F7F0(v35, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      _os_log_impl(&dword_247F93000, v30, v31, "Decoded response: %s", (uint8_t *)v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v37, -1, -1);
      MEMORY[0x24C574E00](v36, -1, -1);

      sub_24809F7F0(v49, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      v12(v53, v50);
    }
    else
    {
      uint64_t v42 = v0[12];
      uint64_t v41 = v0[13];
      uint64_t v43 = v0[8];
      uint64_t v44 = v0[4];

      sub_24809F7F0(v42, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      sub_24809F7F0(v41, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
      v12(v43, v44);
    }
    uint64_t v29 = v33;
  }
  sub_24809F7F0(v29, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
  uint64_t v45 = (void *)swift_task_alloc();
  v0[21] = v45;
  *uint64_t v45 = v0;
  v45[1] = sub_24809AFD0;
  uint64_t v46 = v0[17];
  uint64_t v47 = v0[18];
  return MEMORY[0x270FA1F68](v46, 0, 0, v47);
}

uint64_t sub_24809BFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v33 = a1;
  uint64_t v34 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97D0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_248174C90();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v7 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_inactiveSession);
  if (v17)
  {
    uint64_t v18 = qword_2692D4D70;
    swift_retain();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_248174B90();
    __swift_project_value_buffer(v19, (uint64_t)qword_2692D6A78);
    swift_retain_n();
    uint64_t v20 = sub_248174B70();
    os_log_type_t v21 = sub_2481755C0();
    if (os_log_type_enabled(v20, v21))
    {
      v31[1] = a2;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v32 = v6;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v36 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      v31[0] = v23 + 4;
      uint64_t v35 = v17;
      sub_248174C80();
      swift_retain();
      uint64_t v25 = sub_248175190();
      uint64_t v35 = sub_247FB6D24(v25, v26, &v36);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v20, v21, "Activating inactive session: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v24, -1, -1);
      id v27 = v23;
      uint64_t v6 = v32;
      MEMORY[0x24C574E00](v27, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_248174BD0();
    sub_248174C10();
    sub_248174C00();
    sub_248174C60();
    if (v6) {
      swift_release();
    }
  }
  else
  {
    sub_247FBB338(v7 + OBJC_IVAR____TtC12AppleIDSetup15SetupController_endpoint, (uint64_t)v12, &qword_2692D97D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_247FB33D4((uint64_t)v12, &qword_2692D97D0);
      uint64_t v28 = sub_24809C7C4(0xD000000000000021, 0x80000002481909F0, v33, a2, a3);
      if (!v5) {
        return v28;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
      uint64_t v29 = sub_24809C420(v16, v33, a2, a3, v34);
      if (!v5) {
        uint64_t v17 = v29;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
  return v17;
}

uint64_t sub_24809C420(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v8 = sub_248174BF0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v36 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_248174C90();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v34 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v30 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v30 - v17;
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_248174B90();
  __swift_project_value_buffer(v19, (uint64_t)qword_2692D6A78);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v35 = a1;
  uint64_t v41 = v20;
  v20(v18, a1, v10);
  os_log_type_t v21 = sub_248174B70();
  os_log_type_t v22 = sub_2481755C0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v32 = a5;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v43 = v31;
    uint64_t v33 = v5;
    *(_DWORD *)uint64_t v24 = 136315138;
    v30[1] = v24 + 4;
    v41(v16, v18, v10);
    uint64_t v25 = sub_248175190();
    uint64_t v42 = sub_247FB6D24(v25, v26, &v43);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    _os_log_impl(&dword_247F93000, v21, v22, "Creating new session with xpc endpoint: %s", v24, 0xCu);
    uint64_t v27 = v31;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v27, -1, -1);
    MEMORY[0x24C574E00](v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  }

  sub_248174C80();
  v41(v34, v35, v10);
  id v28 = *(id *)(v37 + 112);
  sub_248174BE0();
  swift_retain();
  swift_retain();
  return sub_248174C70();
}

uint64_t sub_24809C7C4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v21[6] = a5;
  uint64_t v10 = sub_248174BF0();
  MEMORY[0x270FA5388](v10 - 8);
  v21[5] = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_248174B90();
  __swift_project_value_buffer(v12, (uint64_t)qword_2692D6A78);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_248174B70();
  os_log_type_t v14 = sub_2481755C0();
  if (os_log_type_enabled(v13, v14))
  {
    v21[3] = v5;
    uint64_t v15 = swift_slowAlloc();
    void v21[2] = a4;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v22 = v17;
    v21[1] = a3;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    v21[7] = sub_247FB6D24(a1, a2, &v22);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, v13, v14, "Creating new session for mach service: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v17, -1, -1);
    MEMORY[0x24C574E00](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_248174C80();
  uint64_t v18 = *(void **)(v21[4] + 112);
  swift_bridgeObjectRetain();
  id v19 = v18;
  sub_248174BE0();
  swift_retain();
  swift_retain();
  return sub_248174BC0();
}

uint64_t SetupController.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24809CA64()
{
  return v0;
}

uint64_t __SetupController.setupController.getter()
{
  return swift_retain();
}

id __SetupController.__allocating_init(queue:)(void *a1)
{
  id v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97D0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_allocWithZone(v2);
  uint64_t v8 = sub_248174C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  type metadata accessor for SetupController();
  uint64_t v9 = swift_allocObject();
  id v10 = a1;
  SetupController.init(queue:endpoint:inactiveSession:)(a1, (uint64_t)v6, 0);
  uint64_t v11 = (objc_class *)type metadata accessor for __SetupController();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR_____AISSetupController_setupController] = v9;
  v15.receiver = v12;
  v15.super_class = v11;
  id v13 = objc_msgSendSuper2(&v15, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v13;
}

id __SetupController.init(queue:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97D0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_248174C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for SetupController();
  uint64_t v6 = swift_allocObject();
  id v7 = a1;
  SetupController.init(queue:endpoint:inactiveSession:)(a1, (uint64_t)v4, 0);
  uint64_t v8 = (objc_class *)type metadata accessor for __SetupController();
  uint64_t v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR_____AISSetupController_setupController] = v6;
  v12.receiver = v9;
  v12.super_class = v8;
  id v10 = objc_msgSendSuper2(&v12, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t sub_24809CE74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_248174D30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v74 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_248174D80();
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v70 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SetupContext();
  uint64_t v13 = *(void *)(v12 - 8);
  v66[1] = v12;
  uint64_t v67 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v81 = (char *)v66 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v80 = (char *)v66 - v20;
  uint64_t v68 = v21;
  MEMORY[0x270FA5388](v19);
  uint64_t v77 = (uint64_t)v66 - v22;
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_248174B90();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_2692D6A78);
  id v25 = a1;
  unint64_t v26 = sub_248174B70();
  os_log_type_t v27 = sub_2481755B0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v78 = a2;
  uint64_t v79 = a3;
  uint64_t v71 = v6;
  uint64_t v76 = v7;
  uint64_t v69 = v16;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    v66[0] = v24;
    uint64_t v30 = (uint8_t *)v29;
    uint64_t v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 138412290;
    v110[0] = (uint64_t)v25;
    id v32 = v25;
    sub_248175730();
    *uint64_t v31 = v25;

    _os_log_impl(&dword_247F93000, v26, v27, "__AISSetupController setup with context called: %@", v30, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v31, -1, -1);
    MEMORY[0x24C574E00](v30, -1, -1);
  }
  else
  {
  }
  uint64_t v33 = v25;
  uint64_t v34 = sub_248174B70();
  os_log_type_t v35 = sub_2481755C0();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 138412290;
    v110[0] = (uint64_t)v33;
    uint64_t v37 = v33;
    sub_248175730();
    uint64_t v38 = v66[0];
    *(void *)v66[0] = v33;

    _os_log_impl(&dword_247F93000, v34, v35, "Attempting to build setup context with compat objective-c context: %@", v36, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v38, -1, -1);
    MEMORY[0x24C574E00](v36, -1, -1);
  }
  else
  {

    uint64_t v34 = v33;
  }
  uint64_t v40 = (uint64_t)v80;
  uint64_t v39 = (uint64_t)v81;

  uint64_t v83 = MEMORY[0x263F8EE88];
  uint64_t v84 = MEMORY[0x263F8EE88];
  char v85 = 1;
  uint64_t v86 = 0;
  uint64_t v87 = 0;
  __int16 v88 = 1;
  uint64_t v90 = 0;
  uint64_t v91 = 0;
  uint64_t v89 = 0;
  __int16 v93 = 192;
  int v92 = 0;
  long long v94 = 0u;
  long long v95 = 0u;
  uint64_t v96 = 1;
  __int16 v97 = 2;
  uint64_t v98 = 0;
  long long v100 = &type metadata for AutomaticSetupModelExchange;
  long long v101 = &protocol witness table for AutomaticSetupModelExchange;
  uint64_t v41 = (void *)swift_allocObject();
  long long v99 = v41;
  v41[2] = &unk_2692DC090;
  v41[3] = 0;
  v41[4] = &unk_2692DC098;
  v41[5] = 0;
  v41[6] = &unk_2692DC0A0;
  v41[7] = 0;
  v41[8] = &unk_2692DC0A8;
  v41[9] = 0;
  v41[10] = &unk_2692DC0B0;
  v41[11] = 0;
  v41[12] = &unk_2692DC0B8;
  v41[13] = 0;
  v41[14] = &unk_2692DC0C0;
  v41[15] = 0;
  v41[16] = &unk_2692DC0C8;
  v41[17] = 0;
  v41[18] = &unk_2692DC0D0;
  v41[19] = 0;
  v41[21] = 0;
  v41[22] = 0;
  v41[20] = &unk_2692DC0D8;
  v41[23] = &unk_2692DC0E0;
  v41[24] = 0;
  v41[25] = &unk_2692DC0E8;
  v41[26] = 0;
  v41[27] = &unk_2692DC0F0;
  v41[28] = 0;
  v41[29] = &unk_2692DC0F8;
  v41[30] = 0;
  v41[31] = &unk_2692DC100;
  v41[32] = 0;
  v41[33] = &unk_2692DC108;
  v41[34] = 0;
  v41[35] = &unk_2692DC110;
  v41[36] = 0;
  v41[37] = &unk_2692DC118;
  v41[38] = 0;
  v41[39] = &unk_2692DC120;
  v41[40] = 0;
  v41[41] = &unk_2692DC128;
  v41[42] = 0;
  v41[43] = &unk_2692DC130;
  v41[44] = 0;
  v41[45] = &unk_2692DC138;
  v41[46] = 0;
  v41[47] = &unk_2692DC140;
  v41[48] = 0;
  v41[49] = &unk_2692DC148;
  v41[50] = 0;
  v41[51] = &unk_2692DC150;
  v41[52] = 0;
  v41[53] = &unk_2692DC158;
  v41[54] = 0;
  v41[55] = &unk_2692DC160;
  v41[56] = 0;
  v41[57] = &unk_2692DC168;
  v41[58] = 0;
  v41[59] = &unk_2692DC170;
  v41[60] = 0;
  v41[61] = &unk_2692DC178;
  v41[62] = 0;
  v41[63] = &unk_2692DC180;
  v41[64] = 0;
  v41[65] = &unk_2692DC188;
  v41[66] = 0;
  v41[67] = &unk_2692DC190;
  v41[68] = 0;
  v41[69] = &unk_2692DC198;
  v41[70] = 0;
  v41[71] = &unk_2692DC1A0;
  v41[72] = 0;
  v41[73] = &unk_2692DC1A8;
  v41[74] = 0;
  v41[75] = &unk_2692DC1B0;
  v41[76] = 0;
  v41[77] = &unk_2692DC1B8;
  v41[78] = 0;
  v41[79] = &unk_2692DC1C0;
  v41[80] = 0;
  v41[81] = &unk_2692DC1C8;
  v41[82] = 0;
  v41[83] = &unk_2692DC1D0;
  v41[84] = 0;
  v41[85] = &unk_2692DC1D8;
  v41[86] = 0;
  v41[87] = &unk_2692DC1E0;
  v41[88] = 0;
  char v107 = 0;
  long long v105 = 0u;
  long long v106 = 0u;
  long long v103 = 0u;
  long long v104 = 0u;
  long long v102 = 0u;
  uint64_t v108 = 0;
  uint64_t v109 = 0;
  SetupContext.Builder._context(_:)(v33, v110);
  SetupContext.Builder.build()(v40);
  uint64_t v42 = v77;
  sub_2480A165C(v40, v77, (uint64_t (*)(void))type metadata accessor for SetupContext);
  sub_24809F850(v42, v39, (uint64_t (*)(void))type metadata accessor for SetupContext);
  uint64_t v43 = (char *)v82;
  uint64_t v44 = sub_248174B70();
  os_log_type_t v45 = sub_2481755C0();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = swift_slowAlloc();
    id v82 = (id)swift_slowAlloc();
    v110[0] = (uint64_t)v82;
    *(_DWORD *)uint64_t v46 = 136315394;
    uint64_t v83 = *(void *)&v43[OBJC_IVAR_____AISSetupController_setupController];
    type metadata accessor for SetupController();
    swift_retain();
    uint64_t v47 = sub_248175190();
    uint64_t v83 = sub_247FB6D24(v47, v48, v110);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v46 + 12) = 2080;
    uint64_t v49 = (uint64_t)v69;
    sub_24809F850(v39, (uint64_t)v69, (uint64_t (*)(void))type metadata accessor for SetupContext);
    uint64_t v50 = sub_248175190();
    uint64_t v83 = sub_247FB6D24(v50, v51, v110);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_24809F7F0(v39, (uint64_t (*)(void))type metadata accessor for SetupContext);
    _os_log_impl(&dword_247F93000, v44, v45, "Calling setup controller (%s with built context: %s", (uint8_t *)v46, 0x16u);
    id v52 = v82;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v52, -1, -1);
    MEMORY[0x24C574E00](v46, -1, -1);

    uint64_t v54 = v78;
    uint64_t v53 = v79;
  }
  else
  {

    sub_24809F7F0(v39, (uint64_t (*)(void))type metadata accessor for SetupContext);
    uint64_t v54 = v78;
    uint64_t v53 = v79;
    uint64_t v49 = (uint64_t)v69;
  }
  uint64_t v55 = (uint64_t)v70;
  uint64_t v57 = v67;
  uint64_t v56 = v68;
  uint64_t v58 = sub_2481753D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v55, 1, 1, v58);
  uint64_t v59 = v77;
  sub_24809F850(v77, v49, (uint64_t (*)(void))type metadata accessor for SetupContext);
  unint64_t v60 = (*(unsigned __int8 *)(v57 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v61 = (v56 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v62 = (void *)swift_allocObject();
  v62[2] = 0;
  v62[3] = 0;
  v62[4] = v43;
  sub_2480A165C(v49, (uint64_t)v62 + v60, (uint64_t (*)(void))type metadata accessor for SetupContext);
  uint64_t v63 = (void *)((char *)v62 + v61);
  *uint64_t v63 = v54;
  v63[1] = v53;
  uint64_t v64 = v43;
  sub_247F98D10(v54);
  sub_247FFC0C4(v55, (uint64_t)&unk_2692D9800, (uint64_t)v62);
  swift_release();
  return sub_24809F7F0(v59, (uint64_t (*)(void))type metadata accessor for SetupContext);
}

uint64_t sub_24809DE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[45] = a6;
  v7[46] = a7;
  v7[43] = a4;
  v7[44] = a5;
  uint64_t v8 = sub_248174D30();
  v7[47] = v8;
  v7[48] = *(void *)(v8 - 8);
  v7[49] = swift_task_alloc();
  uint64_t v9 = sub_248174D80();
  v7[50] = v9;
  v7[51] = *(void *)(v9 - 8);
  v7[52] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24809DF38, 0, 0);
}

uint64_t sub_24809DF38()
{
  v0[53] = *(void *)(v0[43] + OBJC_IVAR_____AISSetupController_setupController);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[54] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24809DFE8;
  uint64_t v2 = v0[44];
  return sub_248096A70((uint64_t)(v0 + 12), v2);
}

uint64_t sub_24809DFE8()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24809E750;
  }
  else {
    uint64_t v2 = sub_24809E0FC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24809E0FC()
{
  uint64_t v46 = v0;
  uint64_t v1 = v0;
  uint64_t v43 = v0[12];
  v0[2] = v43;
  uint64_t v2 = v0 + 2;
  uint64_t v4 = v2[11];
  uint64_t v3 = v2[12];
  uint64_t v6 = v2[13];
  uint64_t v5 = v2[14];
  uint64_t v8 = v2[15];
  uint64_t v7 = v2[16];
  uint64_t v9 = v2[17];
  uint64_t v10 = v2[18];
  uint64_t v11 = v2[19];
  v2[1] = v4;
  v2[2] = v3;
  uint64_t v38 = v3;
  uint64_t v39 = v7;
  v2[3] = v6;
  v2[4] = v5;
  uint64_t v41 = v5;
  v2[5] = v8;
  v2[6] = v7;
  v2[7] = v9;
  v2[8] = v10;
  v2[9] = v11;
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_248174B90();
  __swift_project_value_buffer(v12, (uint64_t)qword_2692D6A78);
  uint64_t v36 = v4;
  sub_2480A16C4(v43, v4, v38, v6, v41, v8, v39);
  id v13 = 0;
  uint64_t v14 = v4;
  sub_2480A16C4(v43, v4, v38, v6, v41, v8, v39);
  id v15 = 0;
  uint64_t v16 = sub_248174B70();
  os_log_type_t type = sub_2481755B0();
  if (os_log_type_enabled(v16, type))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v45 = v34;
    *(_DWORD *)uint64_t v17 = 136315394;
    sub_247FE06A4((uint64_t)v2, (uint64_t)(v2 + 20), &qword_2692D9868);
    sub_2480A16C4(v43, v14, v38, v6, v41, v8, v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9868);
    uint64_t v18 = sub_248175190();
    v1[39] = sub_247FB6D24(v18, v19, &v45);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480A1758(v43, v36, v38, v6, v41, v8, v39);
    sub_2480A1758(v43, v36, v38, v6, v41, v8, v39);
    *(_WORD *)(v17 + 12) = 2080;
    v1[40] = 0;
    id v20 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9870);
    uint64_t v21 = sub_248175190();
    v1[41] = sub_247FB6D24(v21, v22, &v45);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v16, type, "Returning setup report  converted into objc: %s with error: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v34, -1, -1);
    MEMORY[0x24C574E00](v17, -1, -1);
  }
  else
  {
    sub_2480A1758(v43, v4, v38, v6, v41, v8, v39);
    sub_2480A1758(v43, v4, v38, v6, v41, v8, v39);
  }
  uint64_t v23 = v1[52];
  uint64_t v24 = v1[49];
  uint64_t v42 = v1[51];
  uint64_t v44 = v1[50];
  uint64_t v40 = v1[48];
  uint64_t v25 = v1[46];
  uint64_t v37 = v1[47];
  uint64_t v26 = v1[45];
  os_log_type_t v27 = *(void **)(v1[53] + 112);
  BOOL v28 = (void *)swift_allocObject();
  v28[2] = v26;
  v28[3] = v25;
  sub_247FE06A4((uint64_t)v2, (uint64_t)(v28 + 4), &qword_2692D9868);
  v28[14] = 0;
  v1[36] = sub_2480A1870;
  v1[37] = v28;
  v1[32] = MEMORY[0x263EF8330];
  v1[33] = 1107296256;
  v1[34] = sub_2480360BC;
  v1[35] = &block_descriptor_51;
  uint64_t v29 = _Block_copy(v1 + 32);
  id v30 = 0;
  id v31 = v27;
  sub_247F98D10(v26);
  sub_248174D60();
  v1[38] = MEMORY[0x263F8EE78];
  sub_2480A2324((unint64_t *)&qword_2692D8C98, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CA0);
  sub_24809FFEC((unint64_t *)&qword_2692D8CA8, &qword_2692D8CA0);
  sub_2481757A0();
  MEMORY[0x24C573B30](0, v23, v24, v29);
  _Block_release(v29);

  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v24, v37);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v23, v44);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v32 = (uint64_t (*)(void))v1[1];
  return v32();
}

uint64_t sub_24809E750()
{
  uint64_t v46 = v0;
  unint64_t v1 = 0x2692D4000uLL;
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v2 = v0 + 2;
  uint64_t v3 = (void *)v0[55];
  uint64_t v4 = sub_248174B90();
  __swift_project_value_buffer(v4, (uint64_t)qword_2692D6A78);
  id v5 = v3;
  id v6 = v3;
  uint64_t v7 = sub_248174B70();
  os_log_type_t v8 = sub_2481755D0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = (void *)v0[55];
  if (v9)
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = v10;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[42] = v14;
    sub_248175730();
    *uint64_t v12 = v14;

    _os_log_impl(&dword_247F93000, v7, v8, "Failed to setup with error: %@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    id v15 = v12;
    unint64_t v1 = 0x2692D4000;
    MEMORY[0x24C574E00](v15, -1, -1);
    uint64_t v16 = v11;
    uint64_t v2 = v0 + 2;
    MEMORY[0x24C574E00](v16, -1, -1);
  }
  else
  {
  }
  uint64_t v17 = (void *)v0[55];

  v2[3] = 0u;
  v2[4] = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *uint64_t v2 = 0u;
  if (*(void *)(v1 + 3440) != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v4, (uint64_t)qword_2692D6A78);
  sub_2480A16C4(0, 0, 0, 0, 0, 0, 0);
  id v18 = v17;
  sub_2480A16C4(0, 0, 0, 0, 0, 0, 0);
  id v19 = v17;
  id v20 = sub_248174B70();
  os_log_type_t v21 = sub_2481755B0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v45 = v41;
    *(_DWORD *)uint64_t v22 = 136315394;
    sub_247FE06A4((uint64_t)v2, (uint64_t)(v0 + 22), &qword_2692D9868);
    sub_2480A16C4(0, 0, 0, 0, 0, 0, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9868);
    uint64_t v23 = sub_248175190();
    v0[39] = sub_247FB6D24(v23, v24, &v45);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480A1758(0, 0, 0, 0, 0, 0, 0);
    sub_2480A1758(0, 0, 0, 0, 0, 0, 0);
    *(_WORD *)(v22 + 12) = 2080;
    v0[40] = v17;
    id v25 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9870);
    uint64_t v26 = sub_248175190();
    v0[41] = sub_247FB6D24(v26, v27, &v45);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v20, v21, "Returning setup report  converted into objc: %s with error: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v41, -1, -1);
    MEMORY[0x24C574E00](v22, -1, -1);
  }
  else
  {
    sub_2480A1758(0, 0, 0, 0, 0, 0, 0);
    sub_2480A1758(0, 0, 0, 0, 0, 0, 0);
  }
  BOOL v28 = v17;
  uint64_t v29 = v0[52];
  uint64_t v30 = v0[49];
  *(void *)os_log_type_t type = v0[51];
  uint64_t v44 = v0[50];
  uint64_t v31 = v0[47];
  uint64_t v42 = v0[48];
  uint64_t v32 = v0[45];
  uint64_t v33 = v0[46];
  uint64_t v40 = *(void **)(v0[53] + 112);
  uint64_t v34 = (void *)swift_allocObject();
  void v34[2] = v32;
  v34[3] = v33;
  sub_247FE06A4((uint64_t)v2, (uint64_t)(v34 + 4), &qword_2692D9868);
  v34[14] = v28;
  v0[36] = sub_2480A1870;
  v0[37] = v34;
  v0[32] = MEMORY[0x263EF8330];
  v0[33] = 1107296256;
  v0[34] = sub_2480360BC;
  v0[35] = &block_descriptor_51;
  os_log_type_t v35 = _Block_copy(v0 + 32);
  id v36 = v28;
  id v37 = v40;
  sub_247F98D10(v32);
  sub_248174D60();
  v0[38] = MEMORY[0x263F8EE78];
  sub_2480A2324((unint64_t *)&qword_2692D8C98, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CA0);
  sub_24809FFEC((unint64_t *)&qword_2692D8CA8, &qword_2692D8CA0);
  sub_2481757A0();
  MEMORY[0x24C573B30](0, v29, v30, v35);
  _Block_release(v35);

  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v30, v31);
  (*(void (**)(uint64_t, uint64_t))(*(void *)type + 8))(v29, v44);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = (uint64_t (*)(void))v0[1];
  return v38();
}

void sub_24809EE70(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    sub_247FE06A4(a3, (uint64_t)v8, &qword_2692D9868);
    if (v8[0])
    {
      SetupReport.into()(v8[0]);
      uint64_t v7 = v6;
    }
    else
    {
      uint64_t v7 = 0;
    }
    a1(v7, a4);
  }
}

void sub_24809EFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = sub_248174720();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

id __SetupController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void __SetupController.init()()
{
}

id __SetupController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for __SetupController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24809F134(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9878);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  type metadata accessor for MachSetupMessage();
  sub_2480A2324(&qword_2692D9850, (void (*)(uint64_t))type metadata accessor for MachSetupMessage);
  sub_2480A2324(&qword_2692D9848, (void (*)(uint64_t))type metadata accessor for MachSetupMessage);
  sub_248174C40();
  return swift_release();
}

uint64_t sub_24809F318(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9858);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  type metadata accessor for MachRepairMessage();
  sub_2480A2324(&qword_2692D6870, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
  sub_2480A2324(&qword_2692D6868, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
  sub_248174C40();
  return swift_release();
}

uint64_t sub_24809F4FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t *a6)
{
  uint64_t v10 = a3(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v17 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v13);
  id v15 = (void *)((char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_247FBB338(a1, (uint64_t)v15, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17[1] = *v15;
    __swift_instantiateConcreteTypeFromMangledName(a6);
    return sub_248175350();
  }
  else
  {
    sub_2480A165C((uint64_t)v15, (uint64_t)v12, a5);
    __swift_instantiateConcreteTypeFromMangledName(a6);
    return sub_248175360();
  }
}

uint64_t type metadata accessor for SetupController()
{
  uint64_t result = qword_2692D9808;
  if (!qword_2692D9808) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24809F690()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24809F6D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_247FCB950;
  return MEMORY[0x270FA2498](sub_2480967E0, v4, 0);
}

uint64_t sub_24809F780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24809F7E8(uint64_t a1)
{
  return sub_24809F134(a1);
}

uint64_t sub_24809F7F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24809F850(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24809F8B8(uint64_t a1)
{
  v34[3] = type metadata accessor for AISSetupAnalyticsEvent();
  v34[4] = &protocol witness table for AISSetupAnalyticsEvent;
  v34[0] = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  sub_247FF649C((uint64_t)v34, (uint64_t)&v32);
  uint64_t v3 = swift_allocObject();
  sub_247FB8480(&v32, v3 + 16);
  uint64_t v30 = sub_2480A18B8;
  uint64_t v31 = v3;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_248095C74;
  uint64_t v29 = &block_descriptor_58_0;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  int v5 = AnalyticsSendEventLazy();
  _Block_release(v4);

  if (!v5)
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_248174B90();
    __swift_project_value_buffer(v18, (uint64_t)qword_26B13B730);
    sub_247FF649C((uint64_t)v34, (uint64_t)aBlock);
    uint64_t v7 = sub_248174B70();
    os_log_type_t v19 = sub_2481755C0();
    if (os_log_type_enabled(v7, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(void *)&long long v32 = v21;
      *(_DWORD *)id v20 = 136315138;
      uint64_t v22 = (uint64_t *)(*__swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v29)
                      + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_name);
      uint64_t v23 = *v22;
      unint64_t v24 = v22[1];
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_247FB6D24(v23, v24, (uint64_t *)&v32);
      sub_248175730();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      _os_log_impl(&dword_247F93000, v7, v19, "Failed to send Core Analytics event: %s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v21, -1, -1);
      uint64_t v17 = (uint64_t)v20;
      goto LABEL_10;
    }
    id v25 = (long long *)aBlock;
LABEL_13:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    goto LABEL_14;
  }
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_248174B90();
  __swift_project_value_buffer(v6, (uint64_t)qword_26B13B730);
  sub_247FF649C((uint64_t)v34, (uint64_t)aBlock);
  sub_247FF649C((uint64_t)v34, (uint64_t)&v32);
  uint64_t v7 = sub_248174B70();
  os_log_type_t v8 = sub_2481755C0();
  if (!os_log_type_enabled(v7, v8))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    id v25 = &v32;
    goto LABEL_13;
  }
  uint64_t v9 = swift_slowAlloc();
  uint64_t v10 = swift_slowAlloc();
  uint64_t v27 = v10;
  *(_DWORD *)uint64_t v9 = 136315394;
  uint64_t v11 = (uint64_t *)(*__swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v29)
                  + OBJC_IVAR____TtC12AppleIDSetup22AISSetupAnalyticsEvent_name);
  uint64_t v12 = *v11;
  unint64_t v13 = v11[1];
  swift_bridgeObjectRetain();
  sub_247FB6D24(v12, v13, &v27);
  sub_248175730();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  *(_WORD *)(v9 + 12) = 2080;
  __swift_project_boxed_opaque_existential_1(&v32, v33);
  sub_2481715A4();
  sub_247FB3398(0, (unint64_t *)&qword_2692D6D68);
  uint64_t v14 = sub_248175020();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  sub_247FB6D24(v14, v16, &v27);
  sub_248175730();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  _os_log_impl(&dword_247F93000, v7, v8, "Sent Core Analytics event:  %s %s", (uint8_t *)v9, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24C574E00](v10, -1, -1);
  uint64_t v17 = v9;
LABEL_10:
  MEMORY[0x24C574E00](v17, -1, -1);
LABEL_14:

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t type metadata accessor for __SetupController()
{
  return self;
}

uint64_t sub_24809FDC8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 712, 7);
}

uint64_t sub_24809FF58()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_24809FFA0()
{
  uint64_t v1 = *(uint64_t (**)(void, void))(v0 + 16);
  if (v1) {
    return v1(0, *(void *)(v0 + 32));
  }
  return result;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_24809FFEC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2480A003C()
{
  uint64_t v24 = type metadata accessor for SetupContext();
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(v24 - 8) + 80);
  uint64_t v23 = *(void *)(*(void *)(v24 - 8) + 64);
  swift_unknownObjectRelease();

  uint64_t v2 = v0 + ((v1 + 40) & ~v1);
  sub_247FE51A0(*(void **)(v2 + 8), *(id *)(v2 + 16), *(void *)(v2 + 24), *(unsigned int *)(v2 + 32) | ((unint64_t)*(unsigned __int16 *)(v2 + 36) << 32));
  unsigned int v3 = *(unsigned __int8 *)(v2 + 88);
  if (v3 <= 0xF9) {
    sub_247FA98EC(*(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v2 + 168), *(void *)(v2 + 176), *(void *)(v2 + 184), *(void *)(v2 + 192), *(void *)(v2 + 200), *(void *)(v2 + 208), *(unsigned __int8 *)(v2 + 216));
  if (*(void *)(v2 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for SetupModel();
  uint64_t v5 = v2 + *(int *)(v4 + 32);
  uint64_t v6 = type metadata accessor for IdMSAccount();
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    uint64_t v9 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = v5 + *(int *)(v6 + 24);
    sub_247FAC1EC(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(void *)(v10 + 48), *(void *)(v10 + 56), *(void *)(v10 + 64), *(unsigned char *)(v10 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v5 + v11[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5 + v11[10];
  sub_247F98958(*(void **)v12, *(void **)(v12 + 8), *(void **)(v12 + 16), *(void **)(v12 + 24), *(void *)(v12 + 32), *(void **)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void **)(v12 + 64), *(void **)(v12 + 72), *(unsigned char *)(v12 + 80));
  if (*(void *)(v5 + v11[11])) {
    swift_release();
  }
  uint64_t v13 = v2 + *(int *)(v4 + 36);
  if (!v7(v13, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + *(int *)(v6 + 20);
    uint64_t v15 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v13 + *(int *)(v6 + 24);
    sub_247FAC1EC(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(void *)(v16 + 24), *(void *)(v16 + 32), *(void *)(v16 + 40), *(void *)(v16 + 48), *(void *)(v16 + 56), *(void *)(v16 + 64), *(unsigned char *)(v16 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (int *)type metadata accessor for SignInModel();
  uint64_t v18 = (void *)(v13 + v17[5]);
  if (v18[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v19 = v18[11];
    if (v19 >> 60 != 15) {
      sub_247FB6CCC(v18[10], v19);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + v17[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v13 + v17[13]), *(void *)(v13 + v17[13] + 8), *(unsigned char *)(v13 + v17[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + v17[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v20 = (v23 + ((v1 + 40) & ~v1) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = v2 + *(int *)(v24 + 20);
  if (*(void *)(v21 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v21);
  }
  if (*(void *)(v0 + v20)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, v20 + 16, v1 | 7);
}

uint64_t sub_2480A052C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SetupContext() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_247FD79D0;
  return sub_24809DE18(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_2480A0668()
{
  return type metadata accessor for SetupController();
}

void sub_2480A0670()
{
  sub_2480A0890();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SetupController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SetupController);
}

uint64_t dispatch thunk of SetupController.__allocating_init(queue:endpoint:inactiveSession:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of SetupController.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of SetupController.setup(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 216) + **(int **)(*(void *)v2 + 216));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FCB950;
  return v8(a1, a2);
}

void sub_2480A0890()
{
  if (!qword_2692D9820)
  {
    sub_248174C90();
    unint64_t v0 = sub_248175700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2692D9820);
    }
  }
}

uint64_t method lookup function for __SetupController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for __SetupController);
}

uint64_t dispatch thunk of __SetupController.setup(with:completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t sub_2480A0934()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2480A096C(uint64_t a1, uint64_t a2)
{
  sub_24809EFEC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2480A0974()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9830);
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v25 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v2 = *(void *)(v28 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v23 = *(void *)(v2 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v26 = (v27 + 56) & ~v27;
  uint64_t v3 = v0 + v26 + *(int *)(v1 + 32);
  sub_247FE51A0(*(void **)(v3 + 8), *(id *)(v3 + 16), *(void *)(v3 + 24), *(unsigned int *)(v3 + 32) | ((unint64_t)*(unsigned __int16 *)(v3 + 36) << 32));
  unsigned int v4 = *(unsigned __int8 *)(v3 + 88);
  if (v4 <= 0xF9) {
    sub_247FA98EC(*(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v3 + 168), *(void *)(v3 + 176), *(void *)(v3 + 184), *(void *)(v3 + 192), *(void *)(v3 + 200), *(void *)(v3 + 208), *(unsigned __int8 *)(v3 + 216));
  if (*(void *)(v3 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for SetupModel();
  uint64_t v6 = v3 + *(int *)(v5 + 32);
  uint64_t v7 = type metadata accessor for IdMSAccount();
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    uint64_t v10 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = v6 + *(int *)(v7 + 24);
    sub_247FAC1EC(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(void *)(v11 + 48), *(void *)(v11 + 56), *(void *)(v11 + 64), *(unsigned char *)(v11 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v6 + v12[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v6 + v12[10];
  sub_247F98958(*(void **)v13, *(void **)(v13 + 8), *(void **)(v13 + 16), *(void **)(v13 + 24), *(void *)(v13 + 32), *(void **)(v13 + 40), *(void *)(v13 + 48), *(void *)(v13 + 56), *(void **)(v13 + 64), *(void **)(v13 + 72), *(unsigned char *)(v13 + 80));
  if (*(void *)(v6 + v12[11])) {
    swift_release();
  }
  uint64_t v14 = v3 + *(int *)(v5 + 36);
  if (!v8(v14, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v14 + *(int *)(v7 + 20);
    uint64_t v16 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v14 + *(int *)(v7 + 24);
    sub_247FAC1EC(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(void *)(v17 + 64), *(unsigned char *)(v17 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = (int *)type metadata accessor for SignInModel();
  unint64_t v19 = (void *)(v14 + v18[5]);
  if (v19[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v20 = v19[11];
    if (v20 >> 60 != 15) {
      sub_247FB6CCC(v19[10], v20);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + v18[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v14 + v18[13]), *(void *)(v14 + v18[13] + 8), *(unsigned char *)(v14 + v18[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + v18[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = (v26 + v25 + v24) & ~v24;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v21, v28);
  return MEMORY[0x270FA0238](v0, v21 + v23, v27 | v24 | 7);
}

uint64_t sub_2480A0EE8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D9830) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828) - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_2480991B0((void *)(v0 + 16), v0 + v2, v5);
}

uint64_t sub_2480A0FC0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2480A0FD0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9830);
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v25 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v2 = *(void *)(v28 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v24 = *(void *)(v2 + 64);
  uint64_t v29 = v0;
  uint64_t v26 = (v27 + 16) & ~v27;
  uint64_t v4 = v0 + v26 + *(int *)(v1 + 32);
  sub_247FE51A0(*(void **)(v4 + 8), *(id *)(v4 + 16), *(void *)(v4 + 24), *(unsigned int *)(v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v4 + 36) << 32));
  unsigned int v5 = *(unsigned __int8 *)(v4 + 88);
  if (v5 <= 0xF9) {
    sub_247FA98EC(*(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v4 + 168), *(void *)(v4 + 176), *(void *)(v4 + 184), *(void *)(v4 + 192), *(void *)(v4 + 200), *(void *)(v4 + 208), *(unsigned __int8 *)(v4 + 216));
  if (*(void *)(v4 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SetupModel();
  uint64_t v7 = v4 + *(int *)(v6 + 32);
  uint64_t v8 = type metadata accessor for IdMSAccount();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + *(int *)(v8 + 20);
    uint64_t v11 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = v7 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v7 + v13[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7 + v13[10];
  sub_247F98958(*(void **)v14, *(void **)(v14 + 8), *(void **)(v14 + 16), *(void **)(v14 + 24), *(void *)(v14 + 32), *(void **)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void **)(v14 + 64), *(void **)(v14 + 72), *(unsigned char *)(v14 + 80));
  if (*(void *)(v7 + v13[11])) {
    swift_release();
  }
  uint64_t v15 = v4 + *(int *)(v6 + 36);
  if (!v9(v15, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v15 + *(int *)(v8 + 20);
    uint64_t v17 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t v18 = v15 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(void *)(v18 + 64), *(unsigned char *)(v18 + 72));
    swift_bridgeObjectRelease();
  }
  unint64_t v19 = (int *)type metadata accessor for SignInModel();
  unint64_t v20 = (void *)(v15 + v19[5]);
  if (v20[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = v20[11];
    if (v21 >> 60 != 15) {
      sub_247FB6CCC(v20[10], v21);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v15 + v19[13]), *(void *)(v15 + v19[13] + 8), *(unsigned char *)(v15 + v19[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = (v26 + v25 + v3) & ~v3;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v29 + v22, v28);
  return MEMORY[0x270FA0238](v29, v22 + v24, v27 | v3 | 7);
}

uint64_t sub_2480A1538(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D9830) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828) - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_2480993E0(a1, v1 + v4, v7);
}

uint64_t sub_2480A1614()
{
  return objectdestroy_44Tm(&qword_2692D9858);
}

uint64_t sub_2480A1620(uint64_t a1)
{
  return sub_2480A1994(a1, &qword_2692D9858, (uint64_t (*)(void))type metadata accessor for MachRepairMessage, &qword_2692D9860, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
}

uint64_t sub_2480A165C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2480A16C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FF6AA4(a6, a7);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2480A1758(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6BFC(a6, a7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2480A17E8()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 80))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }

  return MEMORY[0x270FA0238](v0, 120, 7);
}

void sub_2480A1870()
{
  sub_24809EE70(*(void (**)(void *, uint64_t))(v0 + 16), *(void *)(v0 + 24), v0 + 32, *(void *)(v0 + 112));
}

uint64_t sub_2480A1880()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_2480A18B8()
{
  return sub_247FF5E74((void *)(v0 + 16));
}

uint64_t sub_2480A18C0()
{
  return objectdestroy_44Tm(&qword_2692D9878);
}

uint64_t objectdestroy_44Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_2480A1958(uint64_t a1)
{
  return sub_2480A1994(a1, &qword_2692D9878, (uint64_t (*)(void))type metadata accessor for MachSetupMessage, &qword_2692D9880, (uint64_t (*)(void))type metadata accessor for MachSetupMessage);
}

uint64_t sub_2480A1994(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_24809F4FC(a1, v5 + ((*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a3, a4, a5, a2);
}

uint64_t sub_2480A1A28(uint64_t a1)
{
  return sub_24809A128(a1, *(void *)(v1 + 16));
}

uint64_t sub_2480A1A30()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2480A1A68()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D9890) - 8);
  uint64_t v31 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = (v31 + 24) & ~v31;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v28 = type metadata accessor for SetupContext();
  uint64_t v30 = *(unsigned __int8 *)(*(void *)(v28 - 8) + 80);
  uint64_t v4 = (v2 + v3 + v30) & ~v30;
  uint64_t v29 = *(void *)(*(void *)(v28 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v0 + v4;
  sub_247FE51A0(*(void **)(v0 + v4 + 8), *(id *)(v0 + v4 + 16), *(void *)(v0 + v4 + 24), *(unsigned int *)(v0 + v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v0 + v4 + 36) << 32));
  unsigned int v9 = *(unsigned __int8 *)(v0 + v4 + 88);
  if (v9 <= 0xF9) {
    sub_247FA98EC(*(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(void *)(v8 + 72), *(void *)(v8 + 80), v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v8 + 168), *(void *)(v8 + 176), *(void *)(v8 + 184), *(void *)(v8 + 192), *(void *)(v8 + 200), *(void *)(v8 + 208), *(unsigned __int8 *)(v8 + 216));
  if (*(void *)(v8 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for SetupModel();
  uint64_t v11 = v8 + *(int *)(v10 + 32);
  uint64_t v12 = type metadata accessor for IdMSAccount();
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  if (!v13(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v11 + *(int *)(v12 + 20);
    uint64_t v15 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v11 + *(int *)(v12 + 24);
    sub_247FAC1EC(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(void *)(v16 + 24), *(void *)(v16 + 32), *(void *)(v16 + 40), *(void *)(v16 + 48), *(void *)(v16 + 56), *(void *)(v16 + 64), *(unsigned char *)(v16 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v11 + v17[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = v11 + v17[10];
  sub_247F98958(*(void **)v18, *(void **)(v18 + 8), *(void **)(v18 + 16), *(void **)(v18 + 24), *(void *)(v18 + 32), *(void **)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(void **)(v18 + 64), *(void **)(v18 + 72), *(unsigned char *)(v18 + 80));
  if (*(void *)(v11 + v17[11])) {
    swift_release();
  }
  uint64_t v19 = v8 + *(int *)(v10 + 36);
  if (!v13(v19, 1, v12))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + *(int *)(v12 + 20);
    uint64_t v21 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
    uint64_t v22 = v19 + *(int *)(v12 + 24);
    sub_247FAC1EC(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(void *)(v22 + 24), *(void *)(v22 + 32), *(void *)(v22 + 40), *(void *)(v22 + 48), *(void *)(v22 + 56), *(void *)(v22 + 64), *(unsigned char *)(v22 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (int *)type metadata accessor for SignInModel();
  uint64_t v24 = (void *)(v19 + v23[5]);
  if (v24[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v25 = v24[11];
    if (v25 >> 60 != 15) {
      sub_247FB6CCC(v24[10], v25);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v19 + v23[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v19 + v23[13]), *(void *)(v19 + v23[13] + 8), *(unsigned char *)(v19 + v23[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v19 + v23[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = v8 + *(int *)(v28 + 20);
  if (*(void *)(v26 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v26);
  }
  return MEMORY[0x270FA0238](v0, v4 + v29, v31 | v30 | 7);
}

double sub_2480A2014@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D9890) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for SetupContext() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_24809A1F8(a1, (void (*)(char *, char *, uint64_t))(v2 + v6), v9, a2);
}

uint64_t sub_2480A2100(uint64_t a1)
{
  return sub_24809A938(a1);
}

uint64_t sub_2480A2108()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D98A0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2480A21F4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D98A0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_247FD79D0;
  return sub_24809AD08(a1, v6, v7, v8, v9);
}

uint64_t sub_2480A231C(uint64_t a1)
{
  return sub_2480C60A0(a1);
}

uint64_t sub_2480A2324(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2480A236C()
{
  uint64_t v1 = sub_248174CE0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v35 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v35 + 40) & ~v35;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v30 = type metadata accessor for SetupContext();
  uint64_t v34 = *(unsigned __int8 *)(*(void *)(v30 - 8) + 80);
  uint64_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828);
  uint64_t v5 = *(void *)(v33 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v28 = *(void *)(v5 + 64);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v32 = (v3 + v4 + v34) & ~v34;
  uint64_t v6 = v0 + v32;
  sub_247FE51A0(*(void **)(v0 + v32 + 8), *(id *)(v0 + v32 + 16), *(void *)(v0 + v32 + 24), *(unsigned int *)(v0 + v32 + 32) | ((unint64_t)*(unsigned __int16 *)(v0 + v32 + 36) << 32));
  unsigned int v7 = *(unsigned __int8 *)(v0 + v32 + 88);
  if (v7 <= 0xF9) {
    sub_247FA98EC(*(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 80), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v6 + 168), *(void *)(v6 + 176), *(void *)(v6 + 184), *(void *)(v6 + 192), *(void *)(v6 + 200), *(void *)(v6 + 208), *(unsigned __int8 *)(v6 + 216));
  if (*(void *)(v6 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for SetupModel();
  uint64_t v9 = v6 + *(int *)(v8 + 32);
  uint64_t v10 = type metadata accessor for IdMSAccount();
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v9 + *(int *)(v10 + 20);
    uint64_t v13 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = v9 + *(int *)(v10 + 24);
    sub_247FAC1EC(*(void *)v14, *(void *)(v14 + 8), *(void *)(v14 + 16), *(void *)(v14 + 24), *(void *)(v14 + 32), *(void *)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void *)(v14 + 64), *(unsigned char *)(v14 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v9 + v15[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v9 + v15[10];
  sub_247F98958(*(void **)v16, *(void **)(v16 + 8), *(void **)(v16 + 16), *(void **)(v16 + 24), *(void *)(v16 + 32), *(void **)(v16 + 40), *(void *)(v16 + 48), *(void *)(v16 + 56), *(void **)(v16 + 64), *(void **)(v16 + 72), *(unsigned char *)(v16 + 80));
  if (*(void *)(v9 + v15[11])) {
    swift_release();
  }
  uint64_t v17 = v6 + *(int *)(v8 + 36);
  if (!v11(v17, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v17 + *(int *)(v10 + 20);
    uint64_t v19 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    uint64_t v20 = v17 + *(int *)(v10 + 24);
    sub_247FAC1EC(*(void *)v20, *(void *)(v20 + 8), *(void *)(v20 + 16), *(void *)(v20 + 24), *(void *)(v20 + 32), *(void *)(v20 + 40), *(void *)(v20 + 48), *(void *)(v20 + 56), *(void *)(v20 + 64), *(unsigned char *)(v20 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = (int *)type metadata accessor for SignInModel();
  uint64_t v22 = (void *)(v17 + v21[5]);
  if (v22[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v23 = v22[11];
    if (v23 >> 60 != 15) {
      sub_247FB6CCC(v22[10], v23);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + v21[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v17 + v21[13]), *(void *)(v17 + v21[13] + 8), *(unsigned char *)(v17 + v21[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + v21[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = v6 + *(int *)(v30 + 20);
  if (*(void *)(v24 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v24);
  }
  uint64_t v25 = (v32 + v31 + v29) & ~v29;
  uint64_t v26 = v25 + v28;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v25, v33);
  return MEMORY[0x270FA0238](v0, v26, v35 | v34 | v29 | 7);
}

uint64_t sub_2480A295C()
{
  uint64_t v2 = *(void *)(sub_248174CE0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for SetupContext() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D9828) - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = *(void *)(v0 + 32);
  uint64_t v11 = v0 + v3;
  uint64_t v12 = v0 + v6;
  uint64_t v13 = v0 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  void *v14 = v1;
  v14[4] = v12;
  v14[5] = v13;
  v14[2] = v10;
  v14[3] = v11;
  v14[1] = sub_247FD79D0;
  return MEMORY[0x270FA2498](sub_24809A8D4, v10, 0);
}

unint64_t static Constants.DarwinNotificationNames.idmsAccountAdded.getter()
{
  return 0xD000000000000064;
}

unint64_t static Constants.DarwinNotificationNames.idmsAccountModified.getter()
{
  return 0xD000000000000064;
}

unint64_t static Constants.SignpostNames.localSetupWithContext.getter()
{
  return 0xD000000000000015;
}

unint64_t static Constants.SignpostNames.remoteSetupWithContext.getter()
{
  return 0xD000000000000016;
}

unint64_t static Constants.SignpostNames.localRepairWithContext.getter()
{
  return 0xD000000000000016;
}

unint64_t static Constants.SignpostNames.remoteRepairWithContext.getter()
{
  return 0xD000000000000017;
}

unint64_t static Constants.SignpostNames.signOutWithContext.getter()
{
  return 0xD000000000000012;
}

unint64_t static DeviceApprovalKeys.isDeviceApprovalNotification.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static DeviceApprovalKeys.deviceApprovalModel.getter()
{
  return 0xD000000000000013;
}

ValueMetadata *type metadata accessor for Constants()
{
  return &type metadata for Constants;
}

ValueMetadata *type metadata accessor for Constants.DarwinNotificationNames()
{
  return &type metadata for Constants.DarwinNotificationNames;
}

ValueMetadata *type metadata accessor for Constants.SignpostNames()
{
  return &type metadata for Constants.SignpostNames;
}

ValueMetadata *type metadata accessor for DeviceApprovalKeys()
{
  return &type metadata for DeviceApprovalKeys;
}

unint64_t deviceStateChangedNotificationName.getter()
{
  return 0xD000000000000035;
}

uint64_t AISAppleIDSignInResult.authResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AISAppleIDSignInResult.authResults.setter(uint64_t a1)
{
  unint64_t v3 = (void *)(v1 + OBJC_IVAR___AISAppleIDSignInResult_authResults);
  swift_beginAccess();
  *unint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*AISAppleIDSignInResult.authResults.modify())()
{
  return j__swift_endAccess;
}

id AISAppleIDSignInResult.__allocating_init(authResults:)(uint64_t a1)
{
  unint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___AISAppleIDSignInResult_authResults] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISAppleIDSignInResult.init(authResults:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR___AISAppleIDSignInResult_authResults] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISAppleIDSignInResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AISAppleIDSignInResult.init()()
{
}

id AISAppleIDSignInResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AISAppleIDSignInResult()
{
  return self;
}

uint64_t method lookup function for AISAppleIDSignInResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISAppleIDSignInResult);
}

uint64_t dispatch thunk of AISAppleIDSignInResult.__allocating_init(authResults:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t ResourceAcquisitionManager.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  ResourceAcquisitionManager.init()();
  return v0;
}

uint64_t sub_2480A3098()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for ResourceAcquisitionManager.Acquisition();
  sub_248175700();
  objc_super v2 = (void *)(v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16));
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_248040D48(v2, &v5);
  os_unfair_lock_unlock(v3);
  swift_release();
  return v5;
}

uint64_t sub_2480A3178()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for ResourceAcquisitionManager.Acquisition();
  sub_248175700();
  objc_super v2 = (void *)(v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16));
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_2480A4424(v2);
  os_unfair_lock_unlock(v3);
  swift_release();
  return swift_release();
}

uint64_t ResourceAcquisitionManager.init()()
{
  type metadata accessor for ResourceAcquisitionManager.Acquisition();
  sub_248175700();
  *(void *)(v0 + 16) = sub_2480A3CB0();
  return v0;
}

void *sub_2480A32C0(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(*(void *)v4 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v14 - v10;
  sub_2480A3464();
  type metadata accessor for ResourceAcquisitionManager.Acquisition();
  a1();
  swift_retain();
  uint64_t v12 = sub_2480A4000((uint64_t)v11, a3, a4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_retain();
  sub_2480A3178();
  return v12;
}

void *ResourceAcquisitionManager.Acquisition.__allocating_init(wrappedValue:relinquish:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2480A4000(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v5;
}

BOOL sub_2480A3464()
{
  uint64_t v0 = sub_2480A3098();
  if (v0)
  {
    uint64_t v1 = swift_retain();
    sub_2480A38B8(v1);
    sub_2480A3178();
    swift_release();
  }
  return v0 != 0;
}

uint64_t ResourceAcquisitionManager.deinit()
{
  sub_2480A3464();
  swift_release();
  return v0;
}

uint64_t ResourceAcquisitionManager.__deallocating_deinit()
{
  sub_2480A3464();
  swift_release();
  return MEMORY[0x270FA0228](v0, 24, 7);
}

uint64_t sub_2480A3524@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 24);
  sub_248175700();
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_2480A405C(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_2480A3600(uint64_t a1)
{
  sub_2480A3D44();
  uint64_t v2 = sub_248175700();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

void (*sub_2480A3688(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = sub_248175700();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  sub_2480A3524((uint64_t)v7);
  return sub_2480A3764;
}

void sub_2480A3764(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_2480A3D44();
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_2480A3D44();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

void *ResourceAcquisitionManager.Acquisition.init(wrappedValue:relinquish:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  uint64_t v6 = sub_2480A3E10(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 80) - 8) + 8))(a1);
  return v6;
}

uint64_t sub_2480A38B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v24 = (char *)&v23 - v4;
  uint64_t v5 = sub_248175700();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v23 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v23 - v13;
  sub_2480A3524((uint64_t)&v23 - v13);
  uint64_t v25 = v3;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
  sub_2480A3D44();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v12, v5);
  uint64_t v15 = v1[2];
  swift_retain();
  swift_release();
  uint64_t v27 = v2;
  swift_getFunctionTypeMetadata1();
  sub_248175700();
  uint64_t v16 = (__n128 *)(v15 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v15 + 16));
  uint64_t v17 = (os_unfair_lock_s *)(v15 + ((*(unsigned int *)(*(void *)v15 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v17);
  sub_2480A40D0(v16, &v28);
  os_unfair_lock_unlock(v17);
  swift_release();
  uint64_t v18 = (void (*)(char *))v28.n128_u64[0];
  if (v28.n128_u64[0])
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v14, v5);
    uint64_t v19 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v2) == 1)
    {
      uint64_t v20 = (uint64_t (*)(char *, uint64_t))v26;
      v26(v14, v5);
      sub_247F98D68((uint64_t)v18);
      return v20(v9, v5);
    }
    uint64_t v22 = v24;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v9, v2);
    swift_retain();
    v18(v22);
    sub_247F98D68((uint64_t)v18);
    sub_247F98D68((uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v2);
  }
  return ((uint64_t (*)(char *, uint64_t))v26)(v14, v5);
}

uint64_t ResourceAcquisitionManager.Acquisition.deinit()
{
  uint64_t v1 = swift_retain();
  sub_2480A38B8(v1);
  swift_release();
  swift_release();
  return v0;
}

uint64_t ResourceAcquisitionManager.Acquisition.__deallocating_deinit()
{
  ResourceAcquisitionManager.Acquisition.deinit();
  return MEMORY[0x270FA0228](v0, 32, 7);
}

uint64_t sub_2480A3CB0()
{
  return sub_2481758B0();
}

uint64_t type metadata accessor for ResourceAcquisitionManager.Acquisition()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2480A3D44()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_248175700();
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_2480A4378(v2);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

void *sub_2480A3E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(*v3 + 80);
  uint64_t v8 = sub_248175700();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v12 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v17 - v10, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v7);
  uint64_t v13 = sub_2480A3CB0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v3[3] = v13;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v7;
  v14[3] = a2;
  v14[4] = a3;
  v17[0] = sub_2480A4350;
  v17[1] = v14;
  swift_getFunctionTypeMetadata1();
  sub_248175700();
  uint64_t v15 = sub_2480A3CB0();
  swift_release();
  v3[2] = v15;
  return v3;
}

void *sub_2480A4000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2480A3E10(a1, a2, a3);
}

uint64_t sub_2480A405C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_248175700();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

__n128 sub_2480A40D0@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  a1->n128_u64[0] = 0;
  a1->n128_u64[1] = 0;
  return result;
}

uint64_t sub_2480A40E0@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A3524(a1);
}

uint64_t sub_2480A4104()
{
  return sub_2480A3D44();
}

uint64_t sub_2480A4128()
{
  return 8;
}

void *sub_2480A4134(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2480A4140()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ResourceAcquisitionManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ResourceAcquisitionManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ResourceAcquisitionManager);
}

uint64_t dispatch thunk of ResourceAcquisitionManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.acquire(_:with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.relinquish()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t sub_2480A4214()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ResourceAcquisitionManager.Acquisition(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ResourceAcquisitionManager.Acquisition);
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.wrappedValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.wrappedValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.__allocating_init(wrappedValue:relinquish:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of ResourceAcquisitionManager.Acquisition.relinquish()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_2480A4318()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2480A4350()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_2480A4378(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = sub_248175700();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
}

uint64_t sub_2480A4424(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  swift_release();
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_2480A446C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x263F8DD00]) - 8) + 16))(a2, v3);
}

SecAccessControlRef SecureEnclave.P256.Signing.PrivateKey.init()()
{
  return sub_2480A494C(MEMORY[0x263F04690]);
}

uint64_t SecureEnclave.P256.Signing.PrivateKey.init(rawRepresentation:)()
{
  return sub_248174F30();
}

uint64_t SecureEnclave.P256.Signing.PrivateKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A4A04(MEMORY[0x263F04688], MEMORY[0x263F047E0], a1);
}

uint64_t SecureEnclave.P256.Signing.PrivateKey.signature<A>(for:)()
{
  uint64_t v2 = sub_248174FA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_248174F40();
  if (!v1)
  {
    uint64_t v0 = sub_248174F80();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v0;
}

uint64_t sub_2480A4694()
{
  return SecureEnclave.P256.Signing.PrivateKey.signature<A>(for:)();
}

SecAccessControlRef sub_2480A46AC(uint64_t a1, uint64_t a2)
{
  return sub_2480A4AB4(a1, a2, MEMORY[0x263F04690]);
}

uint64_t sub_2480A46D8@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A4B50(MEMORY[0x263F04688], MEMORY[0x263F047E0], a1);
}

uint64_t sub_2480A4708()
{
  return sub_248174F30();
}

uint64_t P256.Signing.PublicKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A4C0C(MEMORY[0x263F04698], a1);
}

uint64_t P256.Signing.PublicKey.isValidSignature<A>(_:for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_248174FA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v13 - v9;
  void v13[2] = a1;
  v13[3] = a2;
  sub_247FB6C20(a1, a2);
  sub_247FBB1CC();
  sub_248174F90();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v8, v4);
  char v11 = sub_248174FB0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v11 & 1;
}

uint64_t sub_2480A48C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A4CEC(MEMORY[0x263F04698], a1);
}

uint64_t sub_2480A48E4()
{
  return sub_248174FD0();
}

SecAccessControlRef SecureEnclave.P256.KeyAgreement.PrivateKey.init()()
{
  return sub_2480A494C(MEMORY[0x263F04670]);
}

SecAccessControlRef sub_2480A494C(uint64_t (*a1)(uint64_t, SecAccessControlRef, void))
{
  SecAccessControlRef result = SecAccessControlCreateWithFlags(0, (CFTypeRef)*MEMORY[0x263F16EA0], 0, 0);
  if (result) {
    return (SecAccessControlRef)a1(1, result, 0);
  }
  __break(1u);
  return result;
}

uint64_t SecureEnclave.P256.KeyAgreement.PrivateKey.init(rawRepresentation:)()
{
  return sub_248174F10();
}

uint64_t SecureEnclave.P256.KeyAgreement.PrivateKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A4A04(MEMORY[0x263F04660], MEMORY[0x263F04770], a1);
}

uint64_t sub_2480A4A04@<X0>(void (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  a1();
  uint64_t v5 = a2(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(a3, 0, 1, v5);
}

SecAccessControlRef sub_2480A4A88(uint64_t a1, uint64_t a2)
{
  return sub_2480A4AB4(a1, a2, MEMORY[0x263F04670]);
}

SecAccessControlRef sub_2480A4AB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, SecAccessControlRef, void))
{
  SecAccessControlRef result = SecAccessControlCreateWithFlags(0, (CFTypeRef)*MEMORY[0x263F16EA0], 0, 0);
  if (result) {
    return (SecAccessControlRef)a3(1, result, 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_2480A4B24@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A4B50(MEMORY[0x263F04660], MEMORY[0x263F04770], a1);
}

uint64_t sub_2480A4B50@<X0>(void (*a1)(void)@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  a1();
  uint64_t v5 = a2(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(a3, 0, 1, v5);
}

uint64_t sub_2480A4BD8()
{
  return sub_248174F10();
}

uint64_t P256.KeyAgreement.PublicKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A4C0C(MEMORY[0x263F04680], a1);
}

uint64_t sub_2480A4C0C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

_UNKNOWN **sub_2480A4C80()
{
  return &protocol witness table for P256.Signing.PublicKey;
}

_UNKNOWN **sub_2480A4C8C()
{
  return &protocol witness table for SecureEnclave.P256.Signing.PrivateKey;
}

_UNKNOWN **sub_2480A4C98()
{
  return &protocol witness table for SecureEnclave.P256.Signing.PrivateKey;
}

_UNKNOWN **sub_2480A4CA4()
{
  return &protocol witness table for P256.KeyAgreement.PublicKey;
}

_UNKNOWN **sub_2480A4CB0()
{
  return &protocol witness table for P256.KeyAgreement.PublicKey;
}

_UNKNOWN **sub_2480A4CBC()
{
  return &protocol witness table for SecureEnclave.P256.KeyAgreement.PrivateKey;
}

_UNKNOWN **sub_2480A4CC8()
{
  return &protocol witness table for SecureEnclave.P256.KeyAgreement.PrivateKey;
}

uint64_t sub_2480A4CD4@<X0>(uint64_t a1@<X8>)
{
  return sub_2480A4CEC(MEMORY[0x263F04680], a1);
}

uint64_t sub_2480A4CEC@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

uint64_t sub_2480A4D60()
{
  return sub_248174F70();
}

uint64_t Sequence.asyncCompactMap<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[7] = a5;
  v6[8] = v5;
  uint64_t v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  long long v6[4] = a2;
  return MEMORY[0x270FA2498](sub_2480A4DC0, 0, 0);
}

uint64_t sub_2480A4DC0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 40);
  long long v9 = *(_OWORD *)(v0 + 48);
  uint64_t v3 = sub_248175700();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  long long v5 = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v9;
  *(void *)(v4 + 40) = v1;
  *(_OWORD *)(v4 + 48) = v5;
  uint64_t v6 = sub_248175330();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_2480A4F04;
  return MEMORY[0x270FA22B8](v0 + 16, v3, v6, 0, 0, &unk_2692D9A10, v4, v3);
}

uint64_t sub_2480A4F04()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_247FC0034;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2480643AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480A5020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = a7;
  v8[11] = a8;
  v8[8] = a5;
  v8[9] = a6;
  v8[6] = a3;
  v8[7] = a4;
  v8[4] = a1;
  void v8[5] = a2;
  uint64_t v10 = sub_248175700();
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[15] = AssociatedTypeWitness;
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  v8[16] = v12;
  v8[17] = *(void *)(v12 + 64);
  v8[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  v8[19] = swift_task_alloc();
  sub_248175700();
  v8[20] = swift_task_alloc();
  v8[21] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v13 = sub_2481754F0();
  v8[22] = v13;
  v8[23] = *(void *)(v13 - 8);
  v8[24] = swift_task_alloc();
  sub_248175700();
  v8[25] = swift_task_alloc();
  v8[26] = *(void *)(a6 - 8);
  v8[27] = swift_task_alloc();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  v8[28] = v14;
  v8[29] = *(void *)(v14 - 8);
  v8[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2480A5364, 0, 0);
}

uint64_t sub_2480A5364()
{
  uint64_t v1 = v0[16];
  (*(void (**)(void, void, void))(v0[26] + 16))(v0[27], v0[6], v0[9]);
  sub_248175240();
  while (1)
  {
    uint64_t v2 = v0[25];
    uint64_t v3 = v0[15];
    swift_getAssociatedConformanceWitness();
    sub_248175720();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v2, 1, v3) == 1) {
      break;
    }
    uint64_t v4 = v0[25];
    unint64_t v5 = v0[18];
    uint64_t v6 = v0[19];
    uint64_t v7 = v0[15];
    uint64_t v8 = v0[8];
    uint64_t v18 = v0[7];
    uint64_t v19 = v0[11];
    uint64_t v9 = sub_2481753D0();
    long long v17 = *(_OWORD *)(v0 + 9);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v1 + 32);
    v10(v5, v4, v7);
    unint64_t v11 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = 0;
    *(void *)(v12 + 24) = 0;
    *(_OWORD *)(v12 + 32) = v17;
    *(void *)(v12 + 48) = v19;
    *(void *)(v12 + 56) = v18;
    *(void *)(v12 + 64) = v8;
    v10(v12 + v11, v5, v7);
    sub_248175500();
    swift_retain();
    sub_2480A5CD4(v6, (uint64_t)&unk_2692D9A20, v12);
    sub_24805E05C(v6);
  }
  (*(void (**)(void, void))(v0[29] + 8))(v0[30], v0[28]);
  v0[2] = sub_248175310();
  sub_2481754D0();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[31] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_2480A568C;
  uint64_t v14 = v0[22];
  uint64_t v15 = v0[20];
  return MEMORY[0x270FA2058](v15, 0, 0, v14, v0 + 3);
}

uint64_t sub_2480A568C()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2480A5A18;
  }
  else {
    uint64_t v2 = sub_2480A57A0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480A57A0()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = *(void **)(v0 + 32);
    (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 192), *(void *)(v0 + 176));
    void *v4 = *(void *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 88);
    long long v14 = *(_OWORD *)(v0 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v7, v1, v2);
    uint64_t v9 = swift_task_alloc();
    *(_OWORD *)(v9 + 16) = v14;
    *(void *)(v9 + 32) = v8;
    *(void *)(v9 + 40) = v0 + 16;
    sub_248024770((void (*)(char *, char *))sub_2480A5F84, v9, MEMORY[0x263F8E628], MEMORY[0x263F8EE60] + 8, v10, v0 + 264);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v2);
    swift_task_dealloc();
    unint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v11;
    void *v11 = v0;
    v11[1] = sub_2480A568C;
    uint64_t v12 = *(void *)(v0 + 176);
    uint64_t v13 = *(void *)(v0 + 160);
    return MEMORY[0x270FA2058](v13, 0, 0, v12, v0 + 24);
  }
}

uint64_t sub_2480A5A18()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2480A5B08(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_247FD79D0;
  return sub_2480A5020(a1, a2, v9, v11, v10, v6, v7, v8);
}

uint64_t sub_2480A5BE4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_247FCB950;
  return v11(a1, a6);
}

uint64_t sub_2480A5CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24805DFF4(a1, (uint64_t)v9);
  uint64_t v10 = sub_2481753D0();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_24805E05C((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = sub_248175340();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_2481753C0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = *v4;
  uint64_t v16 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    uint64_t v16 = v19;
    void v19[2] = v12;
    void v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  _OWORD v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_2480A5EA8(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_248175330();
  return sub_248175320();
}

uint64_t sub_2480A5F84(uint64_t a1)
{
  return sub_2480A5EA8(a1);
}

uint64_t sub_2480A5FA8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, AssociatedTypeWitness);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2480A6094(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(int **)(v1 + 56);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  void *v8 = v3;
  v8[1] = sub_247FCB950;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v9 = (void *)swift_task_alloc();
  void v8[2] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_247FCB950;
  return v11(a1, v7);
}

uint64_t MessageSessionTransport.init(templateSession:identifier:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = a3;
  uint64_t v6 = type metadata accessor for MessageSessionTransport();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v18 - v9;
  *((_OWORD *)v10 + 2) = 0u;
  *((_OWORD *)v10 + 3) = 0u;
  uint64_t v11 = (char *)&v18 + *(int *)(v8 + 52) - v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  uint64_t v14 = (uint64_t)&v10[*(int *)(v6 + 56)];
  v13((char *)v14, 1, 1, v12);
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F38568]), sel_initWithTemplate_, a1);
  if (v15)
  {
    *(void *)uint64_t v10 = a1;
    *((void *)v10 + 1) = v15;
    uint64_t v16 = v19;
    *((void *)v10 + 2) = v18;
    *((void *)v10 + 3) = v16;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a4, v10, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a4, 0, 1, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    swift_bridgeObjectRelease();

    sub_247FB33D4((uint64_t)v11, &qword_2692D58F0);
    sub_247FB33D4(v14, &qword_2692D58F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a4, 1, 1, v6);
  }
}

uint64_t type metadata accessor for MessageSessionTransport()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2480A645C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a3)
  {
    uint64_t v7 = sub_248175010();
    if (!v4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v7 = 0;
  if (a4) {
LABEL_3:
  }
    uint64_t v4 = sub_248175010();
LABEL_4:
  swift_retain();
  v6(a2, v7, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2480A6534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    uint64_t v7 = (void *)sub_248174FF0();
    if (a3)
    {
LABEL_3:
      uint64_t v8 = sub_248174FF0();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v8 = 0;
LABEL_6:
  id v9 = (id)v8;
  (*(void (**)(uint64_t, uint64_t, void *))(a4 + 16))(a4, a1, v7);
}

id MessageSessionTransport.templateSession.getter()
{
  return *v0;
}

id MessageSessionTransport.session.getter()
{
  return *(id *)(v0 + 8);
}

uint64_t MessageSessionTransport.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MessageSessionTransport.onReceive(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_247F98D68(*(void *)(v4 + 32));
  *(void *)(v4 + 32) = a1;
  *(void *)(v4 + 40) = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v4, a3);
  return swift_retain();
}

uint64_t MessageSessionTransport.onInvalidation(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_247F98D68(*(void *)(v4 + 48));
  *(void *)(v4 + 48) = a1;
  *(void *)(v4 + 56) = a2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, v4, a3);
  return swift_retain();
}

uint64_t MessageSessionTransport.build()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 32);
  if (v4)
  {
    uint64_t v6 = *(void **)(v2 + 40);
    swift_retain();
    MessageSessionTransport.activate(with:)(v4, v6, a1, a2);
    return sub_247F98D68(v4);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
    type metadata accessor for MessageSessionTransport.Failure();
    swift_getWitnessTable();
    swift_allocError();
    unsigned char *v8 = 0;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for MessageSessionTransport.Failure()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MessageSessionTransport.activate(with:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  id v92 = a2;
  uint64_t v91 = a1;
  uint64_t v95 = a4;
  uint64_t v106 = a3;
  uint64_t v6 = a3 - 8;
  uint64_t v97 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  long long v94 = (char *)&v79 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v79 - v9;
  uint64_t v11 = *(void *)(v6 + 24);
  uint64_t v12 = *(void *)(v6 + 32);
  uint64_t v13 = type metadata accessor for MessageUnpacker();
  uint64_t v104 = *(void *)(v13 - 8);
  uint64_t v105 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  long long v103 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v15;
  MEMORY[0x270FA5388](v14);
  long long v17 = (uint64_t *)((char *)&v79 - v16);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for MessagePacker();
  uint64_t v101 = *(void *)(v21 - 8);
  uint64_t v102 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  long long v99 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (uint64_t *)((char *)&v79 - v24);
  sub_248174610();
  swift_allocObject();
  uint64_t v26 = sub_248174600();
  sub_24805E6C8(v4 + *(int *)(v6 + 64), (uint64_t)v20);
  long long v100 = v25;
  MessagePacker.init(encoder:signingIdentity:topicIdentifier:)(v26, (uint64_t)v20, 0, 0, v11, v12, v25);
  sub_2481745E0();
  swift_allocObject();
  uint64_t v27 = sub_2481745D0();
  sub_24805E6C8(v4 + *(int *)(v6 + 60), (uint64_t)v20);
  uint64_t v98 = v17;
  uint64_t v107 = v12;
  uint64_t v108 = v11;
  MessageUnpacker.init(decoder:signingIdentity:topicIdentifier:)(v27, (uint64_t)v20, 0, 0, v11, v12, v17);
  if (qword_2692D4DE8 != -1) {
    swift_once();
  }
  uint64_t v28 = sub_248174B90();
  __swift_project_value_buffer(v28, (uint64_t)qword_2692DBE00);
  uint64_t v29 = v97;
  uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16);
  uint64_t v31 = v106;
  uint64_t v89 = v97 + 16;
  __int16 v88 = v30;
  v30((uint64_t)v10, v4, v106);
  uint64_t v32 = sub_248174B70();
  os_log_type_t v33 = sub_2481755C0();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v96 = v5;
  if (v34)
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t aBlock = v36;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v37 = v29;
    uint64_t v38 = *((void *)v10 + 2);
    unint64_t v39 = *((void *)v10 + 3);
    swift_bridgeObjectRetain();
    uint64_t v109 = sub_247FB6D24(v38, v39, &aBlock);
    sub_248175730();
    swift_bridgeObjectRelease();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
    uint64_t v86 = (v37 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v40(v10, v106);
    _os_log_impl(&dword_247F93000, v32, v33, "Registering the message session with identifier: %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v36, -1, -1);
    uint64_t v41 = v35;
    uint64_t v5 = v96;
    MEMORY[0x24C574E00](v41, -1, -1);
  }
  else
  {
    uint64_t v42 = *(void (**)(char *, uint64_t))(v29 + 8);
    uint64_t v86 = (v29 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v42(v10, v31);
  }

  id v81 = *(id *)(v5 + 8);
  uint64_t v80 = sub_248175130();
  uint64_t v43 = v104;
  uint64_t v44 = *(void (**)(char *, void *, uint64_t))(v104 + 16);
  uint64_t v84 = v104 + 16;
  char v85 = v44;
  uint64_t v45 = v103;
  uint64_t v46 = v105;
  v44(v103, v98, v105);
  uint64_t v47 = v101;
  unint64_t v48 = *(void (**)(char *, void *, uint64_t))(v101 + 16);
  uint64_t v82 = v101 + 16;
  uint64_t v83 = v48;
  uint64_t v49 = v99;
  uint64_t v50 = v102;
  v48(v99, v100, v102);
  uint64_t v51 = v43;
  unint64_t v52 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  unint64_t v53 = (v90 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = v47;
  unint64_t v55 = (*(unsigned __int8 *)(v47 + 80) + v53 + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v56 = swift_allocObject();
  uint64_t v57 = v107;
  *(void *)(v56 + 16) = v108;
  *(void *)(v56 + 24) = v57;
  (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v56 + v52, v45, v46);
  uint64_t v58 = (void *)(v56 + v53);
  id v59 = v92;
  void *v58 = v91;
  v58[1] = v59;
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v56 + v55, v49, v50);
  uint64_t v114 = sub_2480AA2A8;
  uint64_t v115 = v56;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v111 = 1107296256;
  uint64_t v112 = sub_2480A8C38;
  int v113 = &block_descriptor_11;
  unint64_t v60 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  unint64_t v61 = (void *)v80;
  objc_msgSend(v81, sel_registerRequestID_options_handler_, v80, 0, v60);
  _Block_release(v60);

  uint64_t v62 = v96;
  id v92 = *(id *)(v96 + 8);
  uint64_t v63 = (uint64_t)v94;
  uint64_t v64 = v106;
  uint64_t v65 = v88;
  v88((uint64_t)v94, v96, v106);
  uint64_t v66 = v97;
  unint64_t v67 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  uint64_t v68 = swift_allocObject();
  uint64_t v69 = v107;
  *(void *)(v68 + 16) = v108;
  *(void *)(v68 + 24) = v69;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 32))(v68 + v67, v63, v64);
  uint64_t v114 = sub_2480AA8B4;
  uint64_t v115 = v68;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v111 = 1107296256;
  uint64_t v112 = sub_2480360BC;
  int v113 = &block_descriptor_6;
  uint64_t v70 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v92, sel_setInvalidationHandler_, v70);
  _Block_release(v70);
  uint64_t v71 = v62;
  objc_msgSend(*(id *)(v62 + 8), sel_activate);
  v65(v63, v62, v64);
  uint64_t v73 = (uint64_t)v99;
  uint64_t v72 = v100;
  uint64_t v74 = v102;
  v83(v99, v100, v102);
  uint64_t v75 = (uint64_t)v103;
  uint64_t v76 = v98;
  uint64_t v77 = v105;
  v85(v103, v98, v105);
  sub_2480A8D4C(v63, v73, v75, v95);
  (*(void (**)(void *, uint64_t))(v104 + 8))(v76, v77);
  (*(void (**)(void *, uint64_t))(v101 + 8))(v72, v74);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 8))(v71, v64);
}

uint64_t MessageSessionTransport.incomingSigningIdentity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24805E6C8(a1, (uint64_t)v9);
  uint64_t v10 = v3 + *(int *)(a2 + 52);
  sub_247FB33D4(v10, &qword_2692D58F0);
  sub_24805E730((uint64_t)v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v3, a2);
}

uint64_t MessageSessionTransport.outgoingSigningIdentity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24805E6C8(a1, (uint64_t)v9);
  uint64_t v10 = v3 + *(int *)(a2 + 56);
  sub_247FB33D4(v10, &qword_2692D58F0);
  sub_24805E730((uint64_t)v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, v3, a2);
}

uint64_t sub_2480A739C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v51 = a7;
  uint64_t v52 = a4;
  uint64_t v48 = a6;
  uint64_t v49 = a3;
  uint64_t v44 = a5;
  uint64_t v50 = a2;
  uint64_t v11 = type metadata accessor for MessagePacker();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v43 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v46 = a9;
  uint64_t v47 = a10;
  uint64_t v45 = type metadata accessor for MessageUnpacker();
  uint64_t v15 = *(void *)(v45 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v45);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v53 = (uint64_t)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DE8 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_248174B90();
  __swift_project_value_buffer(v21, (uint64_t)qword_2692DBE00);
  uint64_t v22 = sub_248174B70();
  os_log_type_t v23 = sub_2481755C0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = a8;
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl(&dword_247F93000, v22, v23, "Finished registering the message session. Ready for sending/receiving messages!", v25, 2u);
    uint64_t v26 = v25;
    a8 = v24;
    MEMORY[0x24C574E00](v26, -1, -1);
  }

  uint64_t v27 = sub_2481753D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v53, 1, 1, v27);
  uint64_t v28 = v45;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v44, v45);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v42 = v11;
  v29(v14, a8, v11);
  unint64_t v30 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v31 = (v16 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (*(unsigned __int8 *)(v12 + 80) + v32 + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v44 = v14;
  unint64_t v34 = (v43 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = (char *)swift_allocObject();
  *((void *)v35 + 2) = 0;
  *((void *)v35 + 3) = 0;
  uint64_t v36 = v47;
  *((void *)v35 + 4) = v46;
  *((void *)v35 + 5) = v36;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v35[v30], v18, v28);
  uint64_t v37 = v51;
  *(void *)&v35[v31] = v50;
  uint64_t v38 = &v35[v32];
  *(void *)uint64_t v38 = v48;
  *((void *)v38 + 1) = v37;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v35[v33], v44, v42);
  unint64_t v39 = &v35[v34];
  uint64_t v40 = v52;
  *(void *)unint64_t v39 = v49;
  *((void *)v39 + 1) = v40;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_247FFC0C4(v53, (uint64_t)&unk_2692D9C50, (uint64_t)v35);
  return swift_release();
}

uint64_t sub_2480A7794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[34] = v13;
  v8[35] = v14;
  v8[32] = v11;
  v8[33] = v12;
  v8[30] = a7;
  v8[31] = a8;
  v8[28] = a5;
  v8[29] = a6;
  v8[27] = a4;
  v8[36] = *(void *)(v13 - 8);
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  v8[39] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2480A7880, 0, 0);
}

uint64_t sub_2480A7880()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[28];
  unint64_t v3 = type metadata accessor for MessageUnpacker();
  MessageUnpacker.unpack(_:)(v2, v3, v1);
  uint64_t v4 = (int *)v0[29];
  (*(void (**)(void, void, void))(v0[36] + 16))(v0[37], v0[39], v0[34]);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[40] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_2480A7F44;
  uint64_t v7 = v0[37];
  uint64_t v6 = v0[38];
  return v9(v6, v7);
}

uint64_t sub_2480A7F44()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2480A866C;
  }
  else {
    uint64_t v2 = sub_2480A8058;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480A8058()
{
  uint64_t v41 = v0;
  uint64_t v1 = *(void **)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = type metadata accessor for MessagePacker();
  unint64_t v4 = MessagePacker.pack(_:)(v2, v3);
  uint64_t v5 = v1;
  uint64_t v6 = *(void *)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 288) + 8);
  v8(*(void *)(v0 + 304), v7);
  v8(v6, v7);
  unint64_t v9 = 0x2692D4000uLL;
  if (v1)
  {
    if (qword_2692D4DE8 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_248174B90();
    __swift_project_value_buffer(v10, (uint64_t)qword_2692DBE00);
    id v11 = v1;
    id v12 = v1;
    uint64_t v13 = sub_248174B70();
    os_log_type_t v14 = sub_2481755D0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412290;
      id v17 = v5;
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 208) = v18;
      unint64_t v9 = 0x2692D4000;
      sub_248175730();
      *uint64_t v16 = v18;

      _os_log_impl(&dword_247F93000, v13, v14, "Failed to handle incoming request with error: %@", v15, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v16, -1, -1);
      MEMORY[0x24C574E00](v15, -1, -1);
    }
    else
    {
    }
    uint64_t v20 = (void *)sub_248174720();
    uint64_t v19 = NSErrorToOSStatus();

    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D08);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24817B010;
    *(void *)(v0 + 144) = 0x726F727265;
    *(void *)(v0 + 152) = 0xE500000000000000;
    uint64_t v22 = MEMORY[0x263F8D310];
    sub_248175810();
    swift_getErrorValue();
    uint64_t v23 = sub_248175DF0();
    *(void *)(inited + 96) = v22;
    *(void *)(inited + 72) = v23;
    *(void *)(inited + 80) = v24;
    unint64_t v4 = sub_247FB49B0(inited);
  }
  else
  {
    uint64_t v19 = 0;
  }
  if (*(void *)(v9 + 3560) != -1) {
    swift_once();
  }
  uint64_t v25 = sub_248174B90();
  __swift_project_value_buffer(v25, (uint64_t)qword_2692DBE00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v26 = sub_248174B70();
  os_log_type_t v27 = sub_2481755C0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v40[0] = v38;
    *(_DWORD *)uint64_t v28 = 136315906;
    swift_bridgeObjectRetain();
    unsigned int v39 = v19;
    uint64_t v29 = sub_248175020();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 168) = sub_247FB6D24(v29, v31, v40);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2080;
    *(void *)(v0 + 176) = v4;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F78);
    uint64_t v32 = sub_248175190();
    *(void *)(v0 + 184) = sub_247FB6D24(v32, v33, v40);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 22) = 2080;
    *(void *)(v0 + 192) = 0;
    uint64_t v19 = v39;
    uint64_t v34 = sub_248175190();
    *(void *)(v0 + 200) = sub_247FB6D24(v34, v35, v40);
    sub_248175730();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 32) = 1024;
    *(_DWORD *)(v0 + 336) = v39;
    sub_248175730();
    _os_log_impl(&dword_247F93000, v26, v27, "Responding to inRequest: %s with outResponse: %s, outOptions: %s, outStatus: %d", (uint8_t *)v28, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v38, -1, -1);
    MEMORY[0x24C574E00](v28, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(uint64_t, void, unint64_t))(v0 + 256))(v19, 0, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_2480A866C()
{
  uint64_t v35 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 288) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 272));
  uint64_t v1 = *(void **)(v0 + 328);
  unint64_t v2 = 0x2692D4000uLL;
  if (qword_2692D4DE8 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_248174B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_2692DBE00);
  id v4 = v1;
  id v5 = v1;
  uint64_t v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    unint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v1;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 208) = v11;
    sub_248175730();
    *unint64_t v9 = v11;

    _os_log_impl(&dword_247F93000, v6, v7, "Failed to handle incoming request with error: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v9, -1, -1);
    id v12 = v8;
    unint64_t v2 = 0x2692D4000;
    MEMORY[0x24C574E00](v12, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (void *)sub_248174720();
  unsigned int v33 = NSErrorToOSStatus();

  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7D08);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24817B010;
  *(void *)(v0 + 144) = 0x726F727265;
  *(void *)(v0 + 152) = 0xE500000000000000;
  uint64_t v15 = MEMORY[0x263F8D310];
  sub_248175810();
  swift_getErrorValue();
  uint64_t v16 = sub_248175DF0();
  *(void *)(inited + 96) = v15;
  *(void *)(inited + 72) = v16;
  *(void *)(inited + 80) = v17;
  unint64_t v18 = sub_247FB49B0(inited);

  if (*(void *)(v2 + 3560) != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v3, (uint64_t)qword_2692DBE00);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_248174B70();
  os_log_type_t v20 = sub_2481755C0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v34 = v32;
    *(_DWORD *)uint64_t v21 = 136315906;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_248175020();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 168) = sub_247FB6D24(v22, v24, &v34);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2080;
    *(void *)(v0 + 176) = v18;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7F78);
    uint64_t v25 = sub_248175190();
    *(void *)(v0 + 184) = sub_247FB6D24(v25, v26, &v34);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 2080;
    *(void *)(v0 + 192) = 0;
    uint64_t v27 = sub_248175190();
    *(void *)(v0 + 200) = sub_247FB6D24(v27, v28, &v34);
    sub_248175730();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 32) = 1024;
    uint64_t v29 = v33;
    *(_DWORD *)(v0 + 336) = v33;
    sub_248175730();
    _os_log_impl(&dword_247F93000, v19, v20, "Responding to inRequest: %s with outResponse: %s, outOptions: %s, outStatus: %d", (uint8_t *)v21, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v32, -1, -1);
    MEMORY[0x24C574E00](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    uint64_t v29 = v33;
  }
  (*(void (**)(uint64_t, void, unint64_t))(v0 + 256))(v29, 0, v18);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_2480A8C38(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  id v5 = *(void (**)(uint64_t, uint64_t, void (*)(uint64_t, uint64_t, uint64_t), uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v6 = sub_248175010();
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = sub_248175010();
  uint64_t v8 = _Block_copy(a4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  swift_retain();
  v5(v6, v7, sub_24807347C, v9);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480A8D4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for ActivatedMessageSessionTransport();
  sub_2481748B0();
  *(unsigned char *)(a4 + v8[12]) = 0;
  uint64_t v9 = type metadata accessor for MessageSessionTransport();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a4, a1, v9);
  uint64_t v10 = a4 + v8[9];
  uint64_t v11 = type metadata accessor for MessagePacker();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a2, v11);
  uint64_t v12 = a4 + v8[10];
  uint64_t v13 = type metadata accessor for MessageUnpacker();
  os_log_type_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  return v14(v12, a3, v13);
}

uint64_t sub_2480A8EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return MessageSessionTransport.build()(a1, a2);
}

Swift::Void __swiftcall ActivatedMessageSessionTransport.invalidate()()
{
  uint64_t v2 = v0;
  sub_2480AA92C(v1);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
}

uint64_t sub_2480A8F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[23] = a3;
  unsigned char v4[24] = v3;
  v4[21] = a1;
  v4[22] = a2;
  return MEMORY[0x270FA2498](sub_2480A8F54, 0, 0);
}

uint64_t sub_2480A8F54()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[22];
  v0[25] = *(void *)(v1 + 16);
  v0[26] = *(void *)(v1 + 24);
  uint64_t v3 = type metadata accessor for MessagePacker();
  uint64_t v4 = MessagePacker.pack(_:)(v2, v3);
  v0[27] = v4;
  uint64_t v5 = v4;
  uint64_t v6 = swift_task_alloc();
  v0[28] = v6;
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_2480A9088;
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(v0 + 23);
  *(void *)(v6 + 24) = v5;
  return MEMORY[0x270FA2498](sub_2480A96A8, 0, 0);
}

uint64_t sub_2480A9088(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 232) = a1;
  *(void *)(v3 + 240) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_2480A9620;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_2480A91A4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2480A91A4()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 232);
  uint64_t v3 = *(void **)(v0 + 240);
  unint64_t v4 = type metadata accessor for MessageUnpacker();
  MessageUnpacker.unpack(_:)(v2, v4, v1);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_29;
  }
  uint64_t v5 = v3;
  *(void *)(v0 + 112) = 0x726F727265;
  uint64_t v6 = *(void *)(v0 + 232);
  *(void *)(v0 + 120) = 0xE500000000000000;
  sub_248175810();
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_247FB6460(v0 + 16), (v8 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(*(void *)(v0 + 232) + 56) + 32 * v7, v0 + 56);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  sub_247FB84B0(v0 + 16);
  if (*(void *)(v0 + 80))
  {
    int v9 = swift_dynamicCast();
    if (v9) {
      uint64_t v10 = *(void *)(v0 + 128);
    }
    else {
      uint64_t v10 = 0;
    }
    if (v9) {
      unint64_t v11 = *(void *)(v0 + 136);
    }
    else {
      unint64_t v11 = 0;
    }
  }
  else
  {
    sub_247FB33D4(v0 + 56, (uint64_t *)&unk_26B13BED0);
    uint64_t v10 = 0;
    unint64_t v11 = 0;
  }
  if (qword_2692D4DE8 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_248174B90();
  __swift_project_value_buffer(v13, (uint64_t)qword_2692DBE00);
  id v14 = v5;
  swift_bridgeObjectRetain();
  id v15 = v5;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_248174B70();
  os_log_type_t v17 = sub_2481755D0();
  if (os_log_type_enabled(v16, v17))
  {
    os_log_type_t type = v17;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = v29;
    *(_DWORD *)uint64_t v18 = 138412546;
    id v20 = v5;
    os_log_t log = v16;
    uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 152) = v21;
    sub_248175730();
    *uint64_t v19 = v21;

    *(_WORD *)(v18 + 12) = 2080;
    if (v11) {
      uint64_t v22 = v10;
    }
    else {
      uint64_t v22 = 0x3E6C6C756E3CLL;
    }
    if (v11) {
      unint64_t v23 = v11;
    }
    else {
      unint64_t v23 = 0xE600000000000000;
    }
    swift_bridgeObjectRetain();
    *(void *)(v0 + 160) = sub_247FB6D24(v22, v23, &v30);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, log, type, "Failed to unpack inResponse with error: %@ and inError: %s", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v29, -1, -1);
    MEMORY[0x24C574E00](v18, -1, -1);

    if (v11) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }

  swift_bridgeObjectRelease_n();
  if (!v11)
  {
LABEL_27:
    swift_getErrorValue();
    uint64_t v10 = sub_248175DF0();
    unint64_t v11 = v24;
  }
LABEL_28:
  type metadata accessor for ActivatedMessageSessionTransport.Failure();
  swift_getWitnessTable();
  swift_allocError();
  *uint64_t v25 = v10;
  v25[1] = v11;
  swift_willThrow();

  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
LABEL_29:
  return v12();
}

uint64_t sub_2480A9620()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2480A9684(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_2480A96A8, 0, 0);
}

uint64_t sub_2480A96A8()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  unint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = *(void *)(v2 + 16);
  v4[3] = *(void *)(v2 + 24);
  v4[4] = v1;
  v4[5] = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C70);
  *uint64_t v5 = v0;
  v5[1] = sub_248064290;
  return MEMORY[0x270FA2360](v0 + 2, 0, 0, 0x5374736163696E75, 0xEF293A5F28646E65, sub_2480B6D64, v4, v6);
}

void sub_2480A97D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  int v9 = *(void **)(v3 + 8);
  uint64_t v10 = (void *)sub_248175130();
  unint64_t v11 = (void *)sub_248174FF0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(a3 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_2480B6E44;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2480A645C;
  void aBlock[3] = &block_descriptor_28;
  id v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v9, sel_sendRequestID_options_request_responseHandler_, v10, 0, v11, v14);
  _Block_release(v14);
}

uint64_t sub_2480A99D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
    return sub_248175360();
  }
  else
  {
    type metadata accessor for ActivatedMessageSessionTransport.Failure();
    swift_getWitnessTable();
    swift_allocError();
    _OWORD *v4 = xmmword_24817A5F0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
    return sub_248175350();
  }
}

void *ActivatedMessageSessionTransport.messageSessionTemplate.getter()
{
  uint64_t v0 = (void *)sub_2480AA924();
  id v1 = v0;
  return v0;
}

uint64_t ActivatedMessageSessionTransport.send(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_2480A9AE8, 0, 0);
}

uint64_t sub_2480A9AE8()
{
  if (*(unsigned char *)(*(void *)(v0 + 40) + *(int *)(*(void *)(v0 + 32) + 48)))
  {
    type metadata accessor for ActivatedMessageSessionTransport.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *id v1 = xmmword_24817A610;
    swift_willThrow();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 48) = v4;
    *(void *)uint64_t v4 = v0;
    *(void *)(v4 + 8) = sub_247FCD270;
    long long v5 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v4 + 184) = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v4 + 168) = v5;
    return MEMORY[0x270FA2498](sub_2480A8F54, 0, 0);
  }
}

void *sub_2480A9C3C()
{
  uint64_t v0 = (void *)sub_2480AA924();
  id v1 = v0;
  return v0;
}

uint64_t sub_2480A9C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  void v8[5] = v3;
  void v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FCB950;
  return MEMORY[0x270FA2498](sub_2480A9AE8, 0, 0);
}

id sub_2480A9D28()
{
  return sub_2480AA92C(v0);
}

uint64_t sub_2480A9D34()
{
  uint64_t v1 = type metadata accessor for MessageUnpacker();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)(v1 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for MessagePacker();
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v33 = v5;
  uint64_t v34 = (v4 + v32 + 16) & ~v32;
  uint64_t v31 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 36);
  uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v30 = v2;
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + v7[9];
    uint64_t v10 = sub_248174E60();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = v6 + v7[10];
    uint64_t v13 = sub_248174EA0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v15 = v6 + v7[11];
    uint64_t v16 = sub_248174EF0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v2 = v30;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v18 = v34;
  swift_release();
  uint64_t v19 = v0 + v34 + *(int *)(v33 + 36);
  if (!v8(v19, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + v7[9];
    uint64_t v21 = sub_248174E60();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v23 = v19 + v7[10];
    uint64_t v24 = sub_248174EA0();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    uint64_t v26 = v19 + v7[11];
    uint64_t v27 = sub_248174EF0();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v18 = v34;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v18 + v31, v2 | v32 | 7);
}

uint64_t sub_2480AA2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 16);
  uint64_t v10 = *(void *)(v4 + 24);
  uint64_t v11 = *(void *)(type metadata accessor for MessageUnpacker() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)(type metadata accessor for MessagePacker() - 8);
  return sub_2480A739C(a1, a2, a3, a4, (char *)(v4 + v12), *(void *)(v4 + v13), *(void *)(v4 + v13 + 8), v4 + ((v13 + *(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v9, v10);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_2480AA3EC()
{
  uint64_t v1 = type metadata accessor for MessageSessionTransport();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v28 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v29 = (v2 + 32) & ~v2;
  uint64_t v3 = v0 + v29;

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v29 + 32)) {
    swift_release();
  }
  if (*(void *)(v3 + 48)) {
    swift_release();
  }
  uint64_t v4 = v3 + *(int *)(v1 + 52);
  uint64_t v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v27 = v2;
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[9];
    uint64_t v8 = sub_248174E60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v4 + v5[10];
    uint64_t v11 = sub_248174EA0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v13 = v4 + v5[11];
    uint64_t v14 = sub_248174EF0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v2 = v27;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  uint64_t v16 = v3 + *(int *)(v1 + 56);
  if (!v6(v16, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = v16 + v5[9];
    uint64_t v18 = sub_248174E60();
    uint64_t v19 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    uint64_t v20 = v16 + v5[10];
    uint64_t v21 = sub_248174EA0();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v23 = v16 + v5[11];
    uint64_t v24 = sub_248174EF0();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
  }
  return MEMORY[0x270FA0238](v0, v29 + v28, v2 | 7);
}

uint64_t sub_2480AA8B4()
{
  uint64_t v1 = type metadata accessor for MessageSessionTransport();
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t result = v1 - 8;
  uint64_t v4 = *(uint64_t (**)(void))(v0
                           + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
                           + 48);
  if (v4) {
    return v4();
  }
  return result;
}

uint64_t sub_2480AA924()
{
  return *(void *)v0;
}

id sub_2480AA92C(uint64_t a1)
{
  *(unsigned char *)(a1 + *(int *)(type metadata accessor for ActivatedMessageSessionTransport() + 48)) = 1;
  uint64_t v2 = *(void **)(a1 + 8);
  return objc_msgSend(v2, sel_invalidate);
}

uint64_t type metadata accessor for ActivatedMessageSessionTransport.Failure()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2480AA994()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480AA9B0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

void sub_2480AA9EC()
{
  sub_247FB8C1C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

char *sub_2480AAAA0(char *a1, char **a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 4;
    uint64_t v9 = a2[4];
    uint64_t v11 = a2[1];
    uint64_t v10 = a2[2];
    *((void *)a1 + 1) = v11;
    *((void *)a1 + 2) = v10;
    *((void *)a1 + 3) = a2[3];
    uint64_t v12 = v5;
    uint64_t v13 = v11;
    swift_bridgeObjectRetain();
    if (v9)
    {
      uint64_t v14 = a2[5];
      *((void *)a1 + 4) = v9;
      *((void *)a1 + 5) = v14;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *v8;
    }
    uint64_t v15 = a2[6];
    if (v15)
    {
      uint64_t v16 = a2[7];
      *((void *)a1 + 6) = v15;
      *((void *)a1 + 7) = v16;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    }
    uint64_t v17 = *(int *)(a3 + 52);
    uint64_t v18 = &a1[v17];
    uint64_t v19 = (char **)((char *)a2 + v17);
    uint64_t v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
    uint64_t v21 = *((void *)v20 - 1);
    uint64_t v22 = *(unsigned int (**)(void, void, void))(v21 + 48);
    if (v22(v19, 1, v20))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v69 = v22;
      uint64_t v71 = v21;
      uint64_t v73 = v20;
      uint64_t v24 = v19[1];
      *(void *)uint64_t v18 = *v19;
      *((void *)v18 + 1) = v24;
      unsigned char v18[16] = *((unsigned char *)v19 + 16);
      uint64_t v25 = v20[9];
      uint64_t v70 = v18;
      __dst = &v18[v25];
      uint64_t v26 = (char *)v19 + v25;
      uint64_t v27 = sub_248174E60();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      if (v29(v26, 1, v27))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(__dst, v26, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
      }
      uint64_t v20 = v73;
      uint64_t v31 = v73[10];
      uint64_t v32 = (char *)v70 + v31;
      uint64_t v33 = (char *)v19 + v31;
      uint64_t v34 = sub_248174EA0();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v21 = v71;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      uint64_t v37 = v73[11];
      uint64_t v38 = (char *)v70 + v37;
      unsigned int v39 = (char *)v19 + v37;
      uint64_t v40 = sub_248174EF0();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v71 + 56))(v70, 0, 1, v73);
      uint64_t v22 = v69;
    }
    uint64_t v43 = *(int *)(a3 + 56);
    uint64_t v44 = &a1[v43];
    uint64_t v45 = (char **)((char *)a2 + v43);
    if (v22(v45, 1, v20))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      uint64_t v72 = v21;
      uint64_t v47 = v45[1];
      *(void *)uint64_t v44 = *v45;
      *((void *)v44 + 1) = v47;
      v44[16] = *((unsigned char *)v45 + 16);
      uint64_t v48 = v20[9];
      uint64_t v49 = &v44[v48];
      uint64_t v50 = (char *)v45 + v48;
      uint64_t v51 = sub_248174E60();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
      swift_bridgeObjectRetain();
      if (v53(v50, 1, v51))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      uint64_t v55 = v20[10];
      uint64_t v56 = &v44[v55];
      uint64_t v57 = (char *)v45 + v55;
      uint64_t v58 = sub_248174EA0();
      uint64_t v59 = *(void *)(v58 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      uint64_t v61 = v20[11];
      uint64_t v62 = &v44[v61];
      uint64_t v63 = (char *)v45 + v61;
      uint64_t v64 = sub_248174EF0();
      uint64_t v65 = *(void *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      (*(void (**)(char *, void, uint64_t, int *))(v72 + 56))(v44, 0, 1, v20);
    }
  }
  return a1;
}

uint64_t sub_2480AB2C8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    swift_release();
  }
  if (*(void *)(a1 + 48)) {
    swift_release();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[9];
    uint64_t v8 = sub_248174E60();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v10 = v4 + v5[10];
    uint64_t v11 = sub_248174EA0();
    uint64_t v12 = *(void *)(v11 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    }
    uint64_t v13 = v4 + v5[11];
    uint64_t v14 = sub_248174EF0();
    uint64_t v15 = *(void *)(v14 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    }
  }
  uint64_t v16 = a1 + *(int *)(a2 + 56);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, int *))v6)(v16, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v16 + v5[9];
    uint64_t v19 = sub_248174E60();
    uint64_t v20 = *(void *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    uint64_t v21 = v16 + v5[10];
    uint64_t v22 = sub_248174EA0();
    uint64_t v23 = *(void *)(v22 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v24 = v16 + v5[11];
    uint64_t v25 = sub_248174EF0();
    uint64_t v27 = *(void *)(v25 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25);
    if (!result)
    {
      uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8);
      return v26(v24, v25);
    }
  }
  return result;
}

void *sub_2480AB738(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v10 = (_OWORD *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 32);
  id v11 = v6;
  id v12 = v7;
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v13 = *(void *)(a2 + 40);
    a1[4] = v9;
    a1[5] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *v10;
  }
  uint64_t v14 = *(void *)(a2 + 48);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + 56);
    a1[6] = v14;
    a1[7] = v15;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v16 = *(int *)(a3 + 52);
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(unsigned int (**)(void, void, void))(v20 + 48);
  if (v21(v18, 1, v19))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v68 = v21;
    uint64_t v69 = a3;
    uint64_t v70 = v20;
    uint64_t v23 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v23;
    *((unsigned char *)v17 + 16) = *((unsigned char *)v18 + 16);
    uint64_t v72 = v19;
    uint64_t v24 = v19[9];
    __dst = (char *)v17 + v24;
    uint64_t v25 = (char *)v18 + v24;
    uint64_t v26 = sub_248174E60();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    if (v28(v25, 1, v26))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(__dst, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    uint64_t v19 = v72;
    uint64_t v30 = v72[10];
    uint64_t v31 = (char *)v17 + v30;
    uint64_t v32 = (char *)v18 + v30;
    uint64_t v33 = sub_248174EA0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    uint64_t v21 = v68;
    uint64_t v36 = v72[11];
    uint64_t v37 = (char *)v17 + v36;
    uint64_t v38 = (char *)v18 + v36;
    uint64_t v39 = sub_248174EF0();
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    a3 = v69;
    uint64_t v20 = v70;
    (*(void (**)(void *, void, uint64_t, int *))(v70 + 56))(v17, 0, 1, v72);
  }
  uint64_t v42 = *(int *)(a3 + 56);
  uint64_t v43 = (void *)((char *)a1 + v42);
  uint64_t v44 = (void *)(a2 + v42);
  if (v21(v44, 1, v19))
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v71 = v20;
    uint64_t v46 = v44[1];
    *uint64_t v43 = *v44;
    v43[1] = v46;
    *((unsigned char *)v43 + 16) = *((unsigned char *)v44 + 16);
    uint64_t v47 = v19[9];
    uint64_t v48 = (char *)v43 + v47;
    uint64_t v49 = (char *)v44 + v47;
    uint64_t v50 = sub_248174E60();
    uint64_t v51 = *(void *)(v50 - 8);
    uint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
    swift_bridgeObjectRetain();
    if (v52(v49, 1, v50))
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    uint64_t v54 = v19[10];
    uint64_t v55 = (char *)v43 + v54;
    uint64_t v56 = (char *)v44 + v54;
    uint64_t v57 = sub_248174EA0();
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v60 = v19[11];
    uint64_t v61 = (char *)v43 + v60;
    uint64_t v62 = (char *)v44 + v60;
    uint64_t v63 = sub_248174EF0();
    uint64_t v64 = *(void *)(v63 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v62, 1, v63))
    {
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v61, v62, v63);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v71 + 56))(v43, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_2480ABF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v12)
    {
      uint64_t v13 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v12;
      *(void *)(a1 + 40) = v13;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v14;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_8:
  uint64_t v15 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48))
  {
    if (v15)
    {
      uint64_t v16 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = v15;
      *(void *)(a1 + 56) = v16;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v15;
    *(void *)(a1 + 56) = v17;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
LABEL_15:
  uint64_t v18 = *(int *)(a3 + 52);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v22 = *((void *)v21 - 1);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (v25)
    {
      sub_247FB33D4(v19, &qword_2692D58F8);
      goto LABEL_21;
    }
    uint64_t v125 = v23;
    uint64_t v127 = a3;
    uint64_t v129 = v22;
    *(void *)uint64_t v19 = *(void *)v20;
    *(void *)(v19 + 8) = *(void *)(v20 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
    uint64_t v33 = v21[9];
    uint64_t v34 = (void *)(v19 + v33);
    uint64_t v35 = (void *)(v20 + v33);
    uint64_t v36 = sub_248174E60();
    uint64_t v122 = *(void *)(v36 - 8);
    uint64_t v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v122 + 48);
    int v132 = v34;
    LODWORD(v34) = v37(v34, 1, v36);
    int v38 = v37(v35, 1, v36);
    if (v34)
    {
      if (v38)
      {
        size_t v39 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v40 = v132;
LABEL_35:
        memcpy(v40, v35, v39);
        goto LABEL_38;
      }
      (*(void (**)(void *, void *, uint64_t))(v122 + 16))(v132, v35, v36);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v122 + 56))(v132, 0, 1, v36);
    }
    else
    {
      if (v38)
      {
        (*(void (**)(void *, uint64_t))(v122 + 8))(v132, v36);
        size_t v39 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v40 = v132;
        goto LABEL_35;
      }
      (*(void (**)(void *, void *, uint64_t))(v122 + 24))(v132, v35, v36);
    }
LABEL_38:
    uint64_t v53 = v21[10];
    uint64_t v54 = (void *)(v19 + v53);
    uint64_t v55 = (void *)(v20 + v53);
    uint64_t v56 = sub_248174EA0();
    uint64_t v123 = *(void *)(v56 - 8);
    uint64_t v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v123 + 48);
    uint64_t v133 = v54;
    LODWORD(v54) = v57(v54, 1, v56);
    int v58 = v57(v55, 1, v56);
    if (v54)
    {
      if (v58)
      {
        size_t v59 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v60 = v133;
LABEL_43:
        memcpy(v60, v55, v59);
        goto LABEL_46;
      }
      (*(void (**)(void *, void *, uint64_t))(v123 + 16))(v133, v55, v56);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v133, 0, 1, v56);
    }
    else
    {
      if (v58)
      {
        (*(void (**)(void *, uint64_t))(v123 + 8))(v133, v56);
        size_t v59 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v60 = v133;
        goto LABEL_43;
      }
      (*(void (**)(void *, void *, uint64_t))(v123 + 24))(v133, v55, v56);
    }
LABEL_46:
    uint64_t v61 = v21[11];
    uint64_t v62 = (void *)(v19 + v61);
    uint64_t v63 = (void *)(v20 + v61);
    uint64_t v64 = sub_248174EF0();
    uint64_t v65 = *(void *)(v64 - 8);
    uint64_t v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
    int v67 = v66(v62, 1, v64);
    int v68 = v66(v63, 1, v64);
    if (v67)
    {
      uint64_t v23 = v125;
      a3 = v127;
      if (!v68)
      {
        (*(void (**)(void *, void *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_52:
        uint64_t v22 = v129;
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v23 = v125;
      a3 = v127;
      if (!v68)
      {
        (*(void (**)(void *, void *, uint64_t))(v65 + 24))(v62, v63, v64);
        goto LABEL_52;
      }
      (*(void (**)(void *, uint64_t))(v65 + 8))(v62, v64);
    }
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v62, v63, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_52;
  }
  if (v25)
  {
LABEL_21:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy((void *)v19, (const void *)v20, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_53;
  }
  uint64_t v126 = a3;
  uint64_t v128 = v22;
  uint64_t v131 = v21;
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = *(void *)(v20 + 8);
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v26 = v21[9];
  __dst = (void *)(v19 + v26);
  uint64_t v27 = (const void *)(v20 + v26);
  uint64_t v28 = sub_248174E60();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  if (v30(v27, 1, v28))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(__dst, v27, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(__dst, v27, v28);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
  }
  uint64_t v21 = v131;
  uint64_t v41 = v131[10];
  uint64_t v42 = (void *)(v19 + v41);
  uint64_t v43 = (const void *)(v20 + v41);
  uint64_t v44 = sub_248174EA0();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v45 + 16))(v42, v43, v44);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  a3 = v126;
  uint64_t v47 = v131[11];
  uint64_t v48 = (void *)(v19 + v47);
  uint64_t v49 = (const void *)(v20 + v47);
  uint64_t v50 = sub_248174EF0();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  uint64_t v22 = v128;
  (*(void (**)(uint64_t, void, uint64_t, int *))(v128 + 56))(v19, 0, 1, v131);
LABEL_53:
  uint64_t v70 = *(int *)(a3 + 56);
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  int v73 = v23(a1 + v70, 1, v21);
  int v74 = v23(v72, 1, v21);
  if (!v73)
  {
    if (v74)
    {
      sub_247FB33D4(v71, &qword_2692D58F8);
      goto LABEL_59;
    }
    *(void *)uint64_t v71 = *(void *)v72;
    *(void *)(v71 + 8) = *(void *)(v72 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v71 + 16) = *(unsigned char *)(v72 + 16);
    uint64_t v134 = v21;
    uint64_t v84 = v21[9];
    char v85 = (void *)(v71 + v84);
    uint64_t v86 = (void *)(v72 + v84);
    uint64_t v87 = sub_248174E60();
    uint64_t v88 = *(void *)(v87 - 8);
    uint64_t v89 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v88 + 48);
    int v90 = v89(v85, 1, v87);
    int v91 = v89(v86, 1, v87);
    if (v90)
    {
      if (!v91)
      {
        (*(void (**)(void *, void *, uint64_t))(v88 + 16))(v85, v86, v87);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
        goto LABEL_76;
      }
    }
    else
    {
      if (!v91)
      {
        (*(void (**)(void *, void *, uint64_t))(v88 + 24))(v85, v86, v87);
LABEL_76:
        uint64_t v106 = v21[10];
        uint64_t v107 = (void *)(v71 + v106);
        uint64_t v108 = (void *)(v72 + v106);
        uint64_t v109 = sub_248174EA0();
        uint64_t v110 = *(void *)(v109 - 8);
        uint64_t v111 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v110 + 48);
        int v112 = v111(v107, 1, v109);
        int v113 = v111(v108, 1, v109);
        if (v112)
        {
          if (!v113)
          {
            (*(void (**)(void *, void *, uint64_t))(v110 + 16))(v107, v108, v109);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
LABEL_82:
            uint64_t v115 = v134[11];
            uint64_t v116 = (void *)(v71 + v115);
            v72 += v115;
            uint64_t v117 = sub_248174EF0();
            uint64_t v118 = *(void *)(v117 - 8);
            uint64_t v119 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v118 + 48);
            int v120 = v119(v116, 1, v117);
            int v121 = v119((void *)v72, 1, v117);
            if (v120)
            {
              if (!v121)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v118 + 16))(v116, v72, v117);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v118 + 56))(v116, 0, 1, v117);
                return a1;
              }
            }
            else
            {
              if (!v121)
              {
                (*(void (**)(void *, uint64_t, uint64_t))(v118 + 24))(v116, v72, v117);
                return a1;
              }
              (*(void (**)(void *, uint64_t))(v118 + 8))(v116, v117);
            }
            size_t v82 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
            uint64_t v83 = v116;
            goto LABEL_60;
          }
        }
        else
        {
          if (!v113)
          {
            (*(void (**)(void *, void *, uint64_t))(v110 + 24))(v107, v108, v109);
            goto LABEL_82;
          }
          (*(void (**)(void *, uint64_t))(v110 + 8))(v107, v109);
        }
        uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v107, v108, *(void *)(*(void *)(v114 - 8) + 64));
        goto LABEL_82;
      }
      (*(void (**)(void *, uint64_t))(v88 + 8))(v85, v87);
    }
    uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v85, v86, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_76;
  }
  if (v74)
  {
LABEL_59:
    size_t v82 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v83 = (void *)v71;
LABEL_60:
    memcpy(v83, (const void *)v72, v82);
    return a1;
  }
  uint64_t v130 = v22;
  *(void *)uint64_t v71 = *(void *)v72;
  *(void *)(v71 + 8) = *(void *)(v72 + 8);
  *(unsigned char *)(v71 + 16) = *(unsigned char *)(v72 + 16);
  uint64_t v75 = v21[9];
  uint64_t v76 = (void *)(v71 + v75);
  uint64_t v77 = (const void *)(v72 + v75);
  uint64_t v78 = sub_248174E60();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v79 + 48);
  swift_bridgeObjectRetain();
  if (v80(v77, 1, v78))
  {
    uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v76, v77, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v79 + 16))(v76, v77, v78);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  uint64_t v92 = v21[10];
  uint64_t v93 = (void *)(v71 + v92);
  long long v94 = (const void *)(v72 + v92);
  uint64_t v95 = sub_248174EA0();
  uint64_t v96 = *(void *)(v95 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
  {
    uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v93, v94, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v96 + 16))(v93, v94, v95);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
  }
  uint64_t v98 = v21[11];
  long long v99 = (void *)(v71 + v98);
  long long v100 = (const void *)(v72 + v98);
  uint64_t v101 = sub_248174EF0();
  uint64_t v102 = *(void *)(v101 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
  {
    uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v102 + 16))(v99, v100, v101);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v130 + 56))(v71, 0, 1, v21);
  return a1;
}

uint64_t sub_2480AD04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v11 = *(int *)(a3 + 52);
  uint64_t v12 = (unsigned char *)(a1 + v11);
  uint64_t v13 = (unsigned char *)(a2 + v11);
  uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = *(unsigned int (**)(void, void, void))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    size_t v59 = v16;
    uint64_t v60 = v3;
    uint64_t v61 = v15;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    v12[16] = v13[16];
    uint64_t v18 = v14[9];
    uint64_t v19 = &v12[v18];
    uint64_t v20 = &v13[v18];
    uint64_t v21 = sub_248174E60();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = v14[10];
    int v25 = &v12[v24];
    uint64_t v26 = &v13[v24];
    uint64_t v27 = sub_248174EA0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v15 = v61;
    uint64_t v30 = v14[11];
    uint64_t v31 = &v12[v30];
    uint64_t v32 = &v13[v30];
    uint64_t v33 = sub_248174EF0();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    uint64_t v3 = v60;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v61 + 56))(v12, 0, 1, v14);
    uint64_t v16 = v59;
  }
  uint64_t v36 = *(int *)(v3 + 56);
  uint64_t v37 = (unsigned char *)(a1 + v36);
  int v38 = (unsigned char *)(a2 + v36);
  if (v16(v38, 1, v14))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    v37[16] = v38[16];
    uint64_t v40 = v14[9];
    uint64_t v41 = &v37[v40];
    uint64_t v42 = &v38[v40];
    uint64_t v43 = sub_248174E60();
    uint64_t v44 = *(void *)(v43 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v44 + 32))(v41, v42, v43);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    uint64_t v46 = v14[10];
    uint64_t v47 = &v37[v46];
    uint64_t v48 = &v38[v46];
    uint64_t v49 = sub_248174EA0();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v50 + 32))(v47, v48, v49);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    uint64_t v52 = v14[11];
    uint64_t v53 = &v37[v52];
    uint64_t v54 = &v38[v52];
    uint64_t v55 = sub_248174EF0();
    uint64_t v56 = *(void *)(v55 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v56 + 32))(v53, v54, v55);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v15 + 56))(v37, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_2480AD7D0(uint64_t a1, void *a2, uint64_t a3)
{
  long long v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v9)
    {
      uint64_t v10 = a2[5];
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = a2[5];
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_8:
  uint64_t v12 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v12)
    {
      uint64_t v13 = a2[7];
      *(void *)(a1 + 48) = v12;
      *(void *)(a1 + 56) = v13;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = a2[7];
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v14;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_15:
  uint64_t v15 = *(int *)(a3 + 52);
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_247FB33D4((uint64_t)v16, &qword_2692D58F8);
      goto LABEL_21;
    }
    uint64_t v126 = a3;
    uint64_t v128 = v20;
    uint64_t v124 = v19;
    uint64_t v30 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v30;
    swift_bridgeObjectRelease();
    v16[16] = v17[16];
    uint64_t v31 = v18[9];
    uint64_t v32 = &v16[v31];
    uint64_t v33 = &v17[v31];
    uint64_t v34 = sub_248174E60();
    uint64_t v120 = *(void *)(v34 - 8);
    uint64_t v35 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v120 + 48);
    uint64_t v122 = v32;
    LODWORD(v32) = v35(v32, 1, v34);
    int v36 = v35(v33, 1, v34);
    if (v32)
    {
      if (v36)
      {
        size_t v37 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v38 = v122;
LABEL_35:
        memcpy(v38, v33, v37);
        goto LABEL_38;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v120 + 32))(v122, v33, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v120 + 56))(v122, 0, 1, v34);
    }
    else
    {
      if (v36)
      {
        (*(void (**)(void *, uint64_t))(v120 + 8))(v122, v34);
        size_t v37 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v38 = v122;
        goto LABEL_35;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v120 + 40))(v122, v33, v34);
    }
LABEL_38:
    uint64_t v51 = v18[10];
    uint64_t v52 = &v16[v51];
    uint64_t v53 = &v17[v51];
    uint64_t v54 = sub_248174EA0();
    uint64_t v121 = *(void *)(v54 - 8);
    uint64_t v55 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v121 + 48);
    uint64_t v123 = v52;
    LODWORD(v52) = v55(v52, 1, v54);
    int v56 = v55(v53, 1, v54);
    if (v52)
    {
      if (v56)
      {
        size_t v57 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        int v58 = v123;
LABEL_43:
        memcpy(v58, v53, v57);
        goto LABEL_46;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v121 + 32))(v123, v53, v54);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(v123, 0, 1, v54);
    }
    else
    {
      if (v56)
      {
        (*(void (**)(void *, uint64_t))(v121 + 8))(v123, v54);
        size_t v57 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        int v58 = v123;
        goto LABEL_43;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v121 + 40))(v123, v53, v54);
    }
LABEL_46:
    uint64_t v59 = v18[11];
    uint64_t v60 = &v16[v59];
    uint64_t v61 = &v17[v59];
    uint64_t v62 = sub_248174EF0();
    uint64_t v63 = *(void *)(v62 - 8);
    uint64_t v64 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v63 + 48);
    int v65 = v64(v60, 1, v62);
    int v66 = v64(v61, 1, v62);
    if (v65)
    {
      uint64_t v19 = v124;
      uint64_t v20 = v128;
      if (!v66)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 32))(v60, v61, v62);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
LABEL_52:
        a3 = v126;
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v19 = v124;
      uint64_t v20 = v128;
      if (!v66)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v63 + 40))(v60, v61, v62);
        goto LABEL_52;
      }
      (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v60, v62);
    }
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
    goto LABEL_52;
  }
  if (v22)
  {
LABEL_21:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v16, v17, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_53;
  }
  uint64_t v125 = a3;
  uint64_t v127 = v20;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  uint64_t v23 = v18[9];
  uint64_t v24 = &v16[v23];
  int v25 = &v17[v23];
  uint64_t v26 = sub_248174E60();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v39 = v18[10];
  uint64_t v40 = &v16[v39];
  uint64_t v41 = &v17[v39];
  uint64_t v42 = sub_248174EA0();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  uint64_t v20 = v127;
  uint64_t v45 = v18[11];
  uint64_t v46 = &v16[v45];
  uint64_t v47 = &v17[v45];
  uint64_t v48 = sub_248174EF0();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 32))(v46, v47, v48);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  a3 = v125;
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
LABEL_53:
  uint64_t v68 = *(int *)(a3 + 56);
  uint64_t v69 = a1 + v68;
  uint64_t v70 = (char *)a2 + v68;
  int v71 = v20((unsigned char *)(a1 + v68), 1, v18);
  int v72 = v20(v70, 1, v18);
  if (!v71)
  {
    if (v72)
    {
      sub_247FB33D4(v69, &qword_2692D58F8);
      goto LABEL_59;
    }
    uint64_t v81 = *((void *)v70 + 1);
    *(void *)uint64_t v69 = *(void *)v70;
    *(void *)(v69 + 8) = v81;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v69 + 16) = v70[16];
    uint64_t v82 = v18[9];
    uint64_t v83 = (void *)(v69 + v82);
    uint64_t v84 = &v70[v82];
    uint64_t v85 = sub_248174E60();
    uint64_t v86 = *(void *)(v85 - 8);
    uint64_t v87 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v86 + 48);
    uint64_t v129 = v83;
    LODWORD(v83) = v87(v83, 1, v85);
    int v88 = v87(v84, 1, v85);
    if (v83)
    {
      if (v88)
      {
        size_t v89 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v90 = v129;
LABEL_75:
        memcpy(v90, v84, v89);
        goto LABEL_79;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v86 + 32))(v129, v84, v85);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v129, 0, 1, v85);
    }
    else
    {
      if (v88)
      {
        (*(void (**)(void *, uint64_t))(v86 + 8))(v129, v85);
        size_t v89 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v90 = v129;
        goto LABEL_75;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v86 + 40))(v129, v84, v85);
    }
LABEL_79:
    uint64_t v104 = v18[10];
    uint64_t v105 = (void *)(v69 + v104);
    uint64_t v106 = &v70[v104];
    uint64_t v107 = sub_248174EA0();
    uint64_t v108 = *(void *)(v107 - 8);
    uint64_t v109 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v108 + 48);
    uint64_t v130 = v105;
    LODWORD(v105) = v109(v105, 1, v107);
    int v110 = v109(v106, 1, v107);
    if (v105)
    {
      if (!v110)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v108 + 32))(v130, v106, v107);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v130, 0, 1, v107);
        goto LABEL_87;
      }
      size_t v111 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      int v112 = v130;
    }
    else
    {
      if (!v110)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v108 + 40))(v130, v106, v107);
        goto LABEL_87;
      }
      (*(void (**)(void *, uint64_t))(v108 + 8))(v130, v107);
      size_t v111 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      int v112 = v130;
    }
    memcpy(v112, v106, v111);
LABEL_87:
    uint64_t v113 = v18[11];
    uint64_t v114 = (void *)(v69 + v113);
    v70 += v113;
    uint64_t v115 = sub_248174EF0();
    uint64_t v116 = *(void *)(v115 - 8);
    uint64_t v117 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v116 + 48);
    int v118 = v117(v114, 1, v115);
    int v119 = v117(v70, 1, v115);
    if (v118)
    {
      if (!v119)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v116 + 32))(v114, v70, v115);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v116 + 56))(v114, 0, 1, v115);
        return a1;
      }
    }
    else
    {
      if (!v119)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v116 + 40))(v114, v70, v115);
        return a1;
      }
      (*(void (**)(void *, uint64_t))(v116 + 8))(v114, v115);
    }
    size_t v79 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
    uint64_t v80 = v114;
    goto LABEL_60;
  }
  if (v72)
  {
LABEL_59:
    size_t v79 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v80 = (void *)v69;
LABEL_60:
    memcpy(v80, v70, v79);
    return a1;
  }
  *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
  *(unsigned char *)(v69 + 16) = v70[16];
  uint64_t v73 = v18[9];
  int v74 = (void *)(v69 + v73);
  uint64_t v75 = &v70[v73];
  uint64_t v76 = sub_248174E60();
  uint64_t v77 = *(void *)(v76 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v77 + 32))(v74, v75, v76);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  uint64_t v91 = v18[10];
  uint64_t v92 = (void *)(v69 + v91);
  uint64_t v93 = &v70[v91];
  uint64_t v94 = sub_248174EA0();
  uint64_t v95 = *(void *)(v94 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
  {
    uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v95 + 32))(v92, v93, v94);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
  }
  uint64_t v97 = v18[11];
  uint64_t v98 = (void *)(v69 + v97);
  long long v99 = &v70[v97];
  uint64_t v100 = sub_248174EF0();
  uint64_t v101 = *(void *)(v100 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
  {
    uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v98, v99, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v101 + 32))(v98, v99, v100);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v19 + 56))(v69, 0, 1, v18);
  return a1;
}

uint64_t sub_2480AE8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2480AE8F4);
}

uint64_t sub_2480AE8F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 52);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_2480AE9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2480AE9BC);
}

void *sub_2480AE9BC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 52);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2480AEA68()
{
  uint64_t result = type metadata accessor for MessageSessionTransport();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MessagePacker();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for MessageUnpacker();
      if (v3 <= 0x3F)
      {
        uint64_t result = sub_2481748C0();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

char *sub_2480AEBD4(char *a1, char **a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    long long v6 = a2;
    uint64_t v7 = a2 + 4;
    uint64_t v8 = a2[4];
    uint64_t v10 = a2[1];
    uint64_t v9 = a2[2];
    *((void *)a1 + 1) = v10;
    *((void *)a1 + 2) = v9;
    *((void *)a1 + 3) = a2[3];
    uint64_t v11 = v5;
    uint64_t v12 = v10;
    swift_bridgeObjectRetain();
    if (v8)
    {
      uint64_t v13 = v6[5];
      *((void *)a1 + 4) = v8;
      *((void *)a1 + 5) = v13;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 2) = *v7;
    }
    uint64_t v14 = v6[6];
    uint64_t v15 = a3;
    if (v14)
    {
      uint64_t v16 = v6[7];
      *((void *)a1 + 6) = v14;
      *((void *)a1 + 7) = v16;
      swift_retain();
    }
    else
    {
      *((_OWORD *)a1 + 3) = *((_OWORD *)v6 + 3);
    }
    uint64_t v17 = type metadata accessor for MessageSessionTransport();
    uint64_t v18 = *(int *)(v17 + 52);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (void *)((char *)v6 + v18);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
    uint64_t v138 = *(void *)(v21 - 8);
    uint64_t v143 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48);
    uint64_t v139 = v6;
    uint64_t v145 = v21;
    if (v143((char *)v20, 1, v21))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v136 = v17;
      uint64_t v23 = v20[1];
      *(void *)uint64_t v19 = *v20;
      *((void *)v19 + 1) = v23;
      v19[16] = *((unsigned char *)v20 + 16);
      uint64_t v24 = *(int *)(v21 + 36);
      int v25 = &v19[v24];
      uint64_t v26 = (char *)v20 + v24;
      uint64_t v27 = sub_248174E60();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      if (v29(v26, 1, v27))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      uint64_t v31 = *(int *)(v21 + 40);
      uint64_t v32 = &v19[v31];
      uint64_t v33 = (char *)v20 + v31;
      uint64_t v34 = sub_248174EA0();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v17 = v136;
      uint64_t v15 = a3;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      uint64_t v37 = *(int *)(v145 + 44);
      int v38 = &v19[v37];
      uint64_t v39 = (char *)v20 + v37;
      uint64_t v40 = sub_248174EF0();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v21 = v145;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v19, 0, 1, v145);
      long long v6 = v139;
    }
    uint64_t v43 = *(int *)(v17 + 56);
    uint64_t v44 = &a1[v43];
    uint64_t v45 = (void *)((char *)v6 + v43);
    if (v143((char *)v6 + v43, 1, v21))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      uint64_t v47 = v45[1];
      *(void *)uint64_t v44 = *v45;
      *((void *)v44 + 1) = v47;
      v44[16] = *((unsigned char *)v45 + 16);
      uint64_t v48 = *(int *)(v21 + 36);
      uint64_t v49 = &v44[v48];
      uint64_t v50 = (char *)v45 + v48;
      uint64_t v51 = sub_248174E60();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
      swift_bridgeObjectRetain();
      if (v53(v50, 1, v51))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      uint64_t v55 = *(int *)(v145 + 40);
      int v56 = &v44[v55];
      size_t v57 = (char *)v45 + v55;
      uint64_t v58 = sub_248174EA0();
      uint64_t v59 = *(void *)(v58 - 8);
      long long v6 = v139;
      uint64_t v15 = a3;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      uint64_t v61 = *(int *)(v145 + 44);
      uint64_t v62 = &v44[v61];
      uint64_t v63 = (char *)v45 + v61;
      uint64_t v64 = sub_248174EF0();
      uint64_t v65 = *(void *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      uint64_t v21 = v145;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v44, 0, 1, v145);
    }
    uint64_t v67 = v15[9];
    uint64_t v68 = &a1[v67];
    uint64_t v69 = (char *)v6 + v67;
    *(void *)&a1[v67] = *(void *)((char *)v6 + v67);
    uint64_t v135 = type metadata accessor for MessagePacker();
    uint64_t v137 = v68;
    uint64_t v70 = *(int *)(v135 + 36);
    int v71 = &v68[v70];
    int v72 = &v69[v70];
    swift_retain();
    if (v143(v72, 1, v21))
    {
      uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
    }
    else
    {
      uint64_t v74 = *((void *)v72 + 1);
      *(void *)int v71 = *(void *)v72;
      *((void *)v71 + 1) = v74;
      v71[16] = v72[16];
      uint64_t v75 = *(int *)(v21 + 36);
      __dst = &v71[v75];
      uint64_t v76 = &v72[v75];
      uint64_t v77 = sub_248174E60();
      uint64_t v78 = *(void *)(v77 - 8);
      size_t v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
      swift_bridgeObjectRetain();
      if (v79(v76, 1, v77))
      {
        uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(__dst, v76, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 16))(__dst, v76, v77);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(__dst, 0, 1, v77);
      }
      uint64_t v21 = v145;
      uint64_t v81 = *(int *)(v145 + 40);
      uint64_t v82 = &v71[v81];
      uint64_t v83 = &v72[v81];
      uint64_t v84 = sub_248174EA0();
      uint64_t v85 = *(void *)(v84 - 8);
      uint64_t v15 = a3;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
      {
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v82, v83, v84);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      }
      uint64_t v87 = *(int *)(v145 + 44);
      int v88 = &v71[v87];
      size_t v89 = &v72[v87];
      uint64_t v90 = sub_248174EF0();
      uint64_t v91 = *(void *)(v90 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
      {
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v71, 0, 1, v145);
      long long v6 = v139;
    }
    uint64_t v93 = *(int *)(v135 + 40);
    uint64_t v94 = &v137[v93];
    uint64_t v95 = &v69[v93];
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)uint64_t v94 = *(void *)v95;
    *((void *)v94 + 1) = v96;
    uint64_t v97 = v15[10];
    uint64_t v98 = &a1[v97];
    long long v99 = (char *)v6 + v97;
    *(void *)&a1[v97] = *(void *)((char *)v6 + v97);
    uint64_t v141 = type metadata accessor for MessageUnpacker();
    uint64_t v100 = *(int *)(v141 + 36);
    uint64_t v101 = &v98[v100];
    uint64_t v102 = &v99[v100];
    swift_bridgeObjectRetain();
    swift_retain();
    if (v143(v102, 1, v21))
    {
      uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
    }
    else
    {
      uint64_t v144 = v99;
      uint64_t v104 = *((void *)v102 + 1);
      *(void *)uint64_t v101 = *(void *)v102;
      *((void *)v101 + 1) = v104;
      v101[16] = v102[16];
      uint64_t v105 = *(int *)(v21 + 36);
      uint64_t v140 = &v101[v105];
      uint64_t v106 = &v102[v105];
      uint64_t v107 = sub_248174E60();
      uint64_t v108 = *(void *)(v107 - 8);
      uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
      swift_bridgeObjectRetain();
      if (v109(v106, 1, v107))
      {
        uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(v140, v106, *(void *)(*(void *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v140, v106, v107);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v140, 0, 1, v107);
      }
      uint64_t v111 = *(int *)(v145 + 40);
      int v112 = &v101[v111];
      uint64_t v113 = &v102[v111];
      uint64_t v114 = sub_248174EA0();
      uint64_t v115 = *(void *)(v114 - 8);
      uint64_t v15 = a3;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48))(v113, 1, v114))
      {
        uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v112, v113, *(void *)(*(void *)(v116 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v112, v113, v114);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
      }
      long long v6 = v139;
      uint64_t v117 = *(int *)(v145 + 44);
      int v118 = &v101[v117];
      int v119 = &v102[v117];
      uint64_t v120 = sub_248174EF0();
      uint64_t v121 = *(void *)(v120 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
      {
        uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v118, v119, *(void *)(*(void *)(v122 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 16))(v118, v119, v120);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
      }
      long long v99 = v144;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v138 + 56))(v101, 0, 1, v145);
    }
    uint64_t v123 = *(int *)(v141 + 40);
    uint64_t v124 = &v98[v123];
    uint64_t v125 = &v99[v123];
    uint64_t v126 = *((void *)v125 + 1);
    *(void *)uint64_t v124 = *(void *)v125;
    *((void *)v124 + 1) = v126;
    uint64_t v127 = v15[11];
    uint64_t v128 = v15;
    uint64_t v129 = &a1[v127];
    uint64_t v130 = (char *)v6 + v127;
    uint64_t v131 = sub_2481748C0();
    int v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16);
    swift_bridgeObjectRetain();
    v132(v129, v130, v131);
    a1[v128[12]] = *((unsigned char *)v6 + v128[12]);
  }
  return a1;
}

uint64_t sub_2480AFBD8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32)) {
    swift_release();
  }
  if (*(void *)(a1 + 48)) {
    swift_release();
  }
  uint64_t v4 = type metadata accessor for MessageSessionTransport();
  uint64_t v5 = a1 + *(int *)(v4 + 52);
  long long v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v7 = (unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48);
  uint64_t v55 = *v7;
  if (!(*v7)(v5, 1, v6))
  {
    uint64_t v8 = a2;
    swift_bridgeObjectRelease();
    uint64_t v9 = v5 + v6[9];
    uint64_t v10 = sub_248174E60();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = v5 + v6[10];
    uint64_t v13 = sub_248174EA0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v15 = v5 + v6[11];
    uint64_t v16 = sub_248174EF0();
    uint64_t v17 = *(void *)(v16 - 8);
    a2 = v8;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
  }
  uint64_t v18 = a1 + *(int *)(v4 + 56);
  if (!v55(v18, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = v18 + v6[9];
    uint64_t v20 = sub_248174E60();
    uint64_t v21 = *(void *)(v20 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    }
    uint64_t v22 = v18 + v6[10];
    uint64_t v23 = sub_248174EA0();
    uint64_t v24 = *(void *)(v23 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23)) {
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    uint64_t v25 = v18 + v6[11];
    uint64_t v26 = sub_248174EF0();
    uint64_t v27 = *(void *)(v26 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26)) {
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v25, v26);
    }
  }
  uint64_t v28 = a1 + a2[9];
  swift_release();
  uint64_t v29 = v28 + *(int *)(type metadata accessor for MessagePacker() + 36);
  if (!v55(v29, 1, v6))
  {
    uint64_t v54 = a2;
    swift_bridgeObjectRelease();
    uint64_t v30 = v29 + v6[9];
    uint64_t v31 = sub_248174E60();
    uint64_t v32 = *(void *)(v31 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    }
    uint64_t v33 = v29 + v6[10];
    uint64_t v34 = sub_248174EA0();
    uint64_t v35 = *(void *)(v34 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
    }
    uint64_t v36 = v29 + v6[11];
    uint64_t v37 = sub_248174EF0();
    uint64_t v38 = *(void *)(v37 - 8);
    a2 = v54;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = a1 + a2[10];
  swift_release();
  uint64_t v40 = v39 + *(int *)(type metadata accessor for MessageUnpacker() + 36);
  if (!v55(v40, 1, v6))
  {
    swift_bridgeObjectRelease();
    uint64_t v41 = v40 + v6[9];
    uint64_t v42 = sub_248174E60();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    uint64_t v44 = v40 + v6[10];
    uint64_t v45 = sub_248174EA0();
    uint64_t v46 = *(void *)(v45 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45)) {
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    }
    uint64_t v47 = v40 + v6[11];
    uint64_t v48 = sub_248174EF0();
    uint64_t v49 = *(void *)(v48 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48)) {
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v48);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = a1 + a2[11];
  uint64_t v51 = sub_2481748C0();
  uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8);
  return v52(v50, v51);
}

void *sub_2480B04A0(void *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = (void *)a2;
  uint64_t v5 = a1;
  long long v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v8;
  uint64_t v10 = (_OWORD *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 32);
  id v11 = v6;
  id v12 = v7;
  swift_bridgeObjectRetain();
  if (v9)
  {
    uint64_t v13 = v4[5];
    long long v5[4] = v9;
    v5[5] = v13;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v5 + 2) = *v10;
  }
  uint64_t v14 = v4[6];
  if (v14)
  {
    uint64_t v15 = v4[7];
    v5[6] = v14;
    v5[7] = v15;
    swift_retain();
  }
  else
  {
    *((_OWORD *)v5 + 3) = *((_OWORD *)v4 + 3);
  }
  uint64_t v16 = type metadata accessor for MessageSessionTransport();
  uint64_t v17 = *(int *)(v16 + 52);
  uint64_t v18 = (void *)((char *)v5 + v17);
  uint64_t v19 = (void *)((char *)v4 + v17);
  uint64_t v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v141 = *((void *)v20 - 1);
  uint64_t v144 = *(unsigned int (**)(char *, uint64_t, int *))(v141 + 48);
  uint64_t v142 = a3;
  uint64_t v146 = v20;
  if (v144((char *)v19, 1, v20))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v138 = (void *)v16;
    uint64_t v22 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v22;
    *((unsigned char *)v18 + 16) = *((unsigned char *)v19 + 16);
    uint64_t v23 = v20[9];
    __dst = (char *)v18 + v23;
    uint64_t v24 = (char *)v19 + v23;
    uint64_t v25 = sub_248174E60();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(__dst, v24, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    uint64_t v29 = v20[10];
    uint64_t v30 = (char *)v18 + v29;
    uint64_t v31 = (char *)v19 + v29;
    uint64_t v32 = sub_248174EA0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    uint64_t v35 = v20[11];
    uint64_t v36 = (char *)v18 + v35;
    uint64_t v37 = (char *)v19 + v35;
    uint64_t v38 = sub_248174EF0();
    uint64_t v39 = *(void *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    uint64_t v16 = (uint64_t)v138;
    (*(void (**)(void *, void, uint64_t, int *))(v141 + 56))(v18, 0, 1, v20);
    a3 = v142;
  }
  uint64_t v41 = *(int *)(v16 + 56);
  uint64_t v42 = (void *)((char *)v5 + v41);
  uint64_t v43 = (void *)((char *)v4 + v41);
  if (v144((char *)v4 + v41, 1, v20))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v45;
    *((unsigned char *)v42 + 16) = *((unsigned char *)v43 + 16);
    uint64_t v46 = v20[9];
    uint64_t v139 = (char *)v42 + v46;
    uint64_t v47 = (char *)v43 + v46;
    uint64_t v48 = sub_248174E60();
    uint64_t v49 = *(void *)(v48 - 8);
    uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
    swift_bridgeObjectRetain();
    if (v50(v47, 1, v48))
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v139, v47, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v139, v47, v48);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v139, 0, 1, v48);
    }
    uint64_t v20 = v146;
    uint64_t v52 = v146[10];
    uint64_t v53 = (char *)v42 + v52;
    uint64_t v54 = (char *)v43 + v52;
    uint64_t v55 = sub_248174EA0();
    uint64_t v56 = *(void *)(v55 - 8);
    a3 = v142;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
    {
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v53, v54, *(void *)(*(void *)(v57 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    uint64_t v58 = v146[11];
    uint64_t v59 = (char *)v42 + v58;
    uint64_t v60 = (char *)v43 + v58;
    uint64_t v61 = sub_248174EF0();
    uint64_t v62 = *(void *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
    {
      uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v59, v60, v61);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v141 + 56))(v42, 0, 1, v146);
  }
  uint64_t v64 = a3[9];
  uint64_t v65 = (char *)v5 + v64;
  uint64_t v66 = (char *)v4 + v64;
  *(void *)((char *)v5 + v64) = *(void *)((char *)v4 + v64);
  __dsta = (int *)type metadata accessor for MessagePacker();
  uint64_t v140 = v65;
  uint64_t v67 = __dsta[9];
  uint64_t v68 = &v65[v67];
  uint64_t v69 = &v66[v67];
  swift_retain();
  if (v144(v69, 1, v20))
  {
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    uint64_t v133 = v4;
    uint64_t v135 = v5;
    uint64_t v71 = *((void *)v69 + 1);
    *(void *)uint64_t v68 = *(void *)v69;
    *((void *)v68 + 1) = v71;
    v68[16] = v69[16];
    uint64_t v72 = v20[9];
    uint64_t v73 = &v68[v72];
    uint64_t v74 = &v69[v72];
    uint64_t v75 = sub_248174E60();
    uint64_t v76 = *(void *)(v75 - 8);
    uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
    swift_bridgeObjectRetain();
    if (v77(v74, 1, v75))
    {
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v73, v74, v75);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
    }
    uint64_t v79 = v146[10];
    uint64_t v80 = &v68[v79];
    uint64_t v81 = &v69[v79];
    uint64_t v82 = sub_248174EA0();
    uint64_t v83 = *(void *)(v82 - 8);
    uint64_t v4 = v133;
    uint64_t v5 = v135;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v80, v81, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    uint64_t v85 = v146[11];
    uint64_t v86 = &v68[v85];
    uint64_t v87 = &v69[v85];
    uint64_t v88 = sub_248174EF0();
    uint64_t v89 = *(void *)(v88 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88))
    {
      uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
    }
    uint64_t v20 = v146;
    (*(void (**)(char *, void, uint64_t, int *))(v141 + 56))(v68, 0, 1, v146);
    a3 = v142;
  }
  uint64_t v91 = __dsta[10];
  uint64_t v92 = &v140[v91];
  uint64_t v93 = &v66[v91];
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = *(void *)v93;
  *((void *)v92 + 1) = v94;
  uint64_t v95 = a3[10];
  uint64_t v96 = (char *)v5 + v95;
  uint64_t v97 = (char *)v4 + v95;
  *(void *)((char *)v5 + v95) = *(void *)((char *)v4 + v95);
  uint64_t v143 = type metadata accessor for MessageUnpacker();
  uint64_t v98 = *(int *)(v143 + 36);
  long long v99 = &v96[v98];
  uint64_t v100 = &v97[v98];
  swift_bridgeObjectRetain();
  swift_retain();
  if (v144(v100, 1, v20))
  {
    uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
  }
  else
  {
    uint64_t v145 = v97;
    uint64_t v134 = v4;
    uint64_t v102 = *((void *)v100 + 1);
    *(void *)long long v99 = *(void *)v100;
    *((void *)v99 + 1) = v102;
    v99[16] = v100[16];
    uint64_t v103 = v20[9];
    uint64_t v104 = &v99[v103];
    uint64_t v105 = &v100[v103];
    uint64_t v106 = sub_248174E60();
    uint64_t v107 = *(void *)(v106 - 8);
    uint64_t v108 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
    swift_bridgeObjectRetain();
    if (v108(v105, 1, v106))
    {
      uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v104, v105, *(void *)(*(void *)(v109 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v104, v105, v106);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v104, 0, 1, v106);
    }
    uint64_t v110 = v146[10];
    uint64_t v111 = &v99[v110];
    int v112 = &v100[v110];
    uint64_t v113 = sub_248174EA0();
    uint64_t v114 = *(void *)(v113 - 8);
    uint64_t v4 = v134;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
    {
      uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v111, v112, v113);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
    }
    a3 = v142;
    uint64_t v116 = v146[11];
    uint64_t v117 = &v99[v116];
    int v118 = &v100[v116];
    uint64_t v119 = sub_248174EF0();
    uint64_t v120 = *(void *)(v119 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119))
    {
      uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v117, v118, v119);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v117, 0, 1, v119);
    }
    uint64_t v97 = v145;
    (*(void (**)(char *, void, uint64_t, int *))(v141 + 56))(v99, 0, 1, v146);
  }
  uint64_t v122 = *(int *)(v143 + 40);
  uint64_t v123 = &v96[v122];
  uint64_t v124 = &v97[v122];
  uint64_t v125 = *((void *)v124 + 1);
  *(void *)uint64_t v123 = *(void *)v124;
  *((void *)v123 + 1) = v125;
  uint64_t v126 = a3[11];
  uint64_t v127 = (char *)v5 + v126;
  uint64_t v128 = (char *)v4 + v126;
  uint64_t v129 = sub_2481748C0();
  uint64_t v130 = v5;
  uint64_t v131 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
  swift_bridgeObjectRetain();
  v131(v127, v128, v129);
  *((unsigned char *)v130 + a3[12]) = *((unsigned char *)v4 + a3[12]);
  return v130;
}

uint64_t sub_2480B144C(uint64_t a1, void **a2, int *a3)
{
  uint64_t v4 = a2;
  long long v6 = *a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *a2;
  id v8 = v6;

  uint64_t v9 = v4[1];
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(void *)(a1 + 16) = v4[2];
  *(void *)(a1 + 24) = v4[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v12 = v4[4];
  if (*(void *)(a1 + 32))
  {
    if (v12)
    {
      uint64_t v13 = v4[5];
      *(void *)(a1 + 32) = v12;
      *(void *)(a1 + 40) = v13;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = v4[5];
    *(void *)(a1 + 32) = v12;
    *(void *)(a1 + 40) = v14;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v4 + 2);
LABEL_8:
  uint64_t v15 = v4[6];
  if (*(void *)(a1 + 48))
  {
    if (v15)
    {
      uint64_t v16 = v4[7];
      *(void *)(a1 + 48) = v15;
      *(void *)(a1 + 56) = v16;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v15)
  {
    uint64_t v17 = v4[7];
    *(void *)(a1 + 48) = v15;
    *(void *)(a1 + 56) = v17;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
LABEL_15:
  long long v261 = a3;
  uint64_t v18 = type metadata accessor for MessageSessionTransport();
  uint64_t v19 = *(int *)(v18 + 52);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (char *)v4 + v19;
  uint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v247 = *((void *)v22 - 1);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v247 + 48);
  int v24 = v23(v20, 1, v22);
  __dst = v23;
  int v25 = v23((uint64_t)v21, 1, v22);
  uint64_t v256 = v4;
  uint64_t v260 = v22;
  if (!v24)
  {
    if (v25)
    {
      sub_247FB33D4(v20, &qword_2692D58F8);
      goto LABEL_21;
    }
    uint64_t v253 = v18;
    *(void *)uint64_t v20 = *(void *)v21;
    *(void *)(v20 + 8) = *((void *)v21 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v20 + 16) = v21[16];
    uint64_t v35 = v22[9];
    uint64_t v36 = (void *)(v20 + v35);
    uint64_t v37 = &v21[v35];
    uint64_t v38 = sub_248174E60();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v39 + 48);
    int v248 = v36;
    LODWORD(v36) = v40(v36, 1, v38);
    int v41 = v40(v37, 1, v38);
    if (v36)
    {
      if (v41)
      {
        size_t v42 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v43 = v248;
LABEL_35:
        memcpy(v43, v37, v42);
        goto LABEL_38;
      }
      (*(void (**)(void *, char *, uint64_t))(v39 + 16))(v248, v37, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v248, 0, 1, v38);
    }
    else
    {
      if (v41)
      {
        (*(void (**)(void *, uint64_t))(v39 + 8))(v248, v38);
        size_t v42 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v43 = v248;
        goto LABEL_35;
      }
      (*(void (**)(void *, char *, uint64_t))(v39 + 24))(v248, v37, v38);
    }
LABEL_38:
    uint64_t v56 = v22[10];
    uint64_t v57 = (void *)(v20 + v56);
    uint64_t v58 = &v21[v56];
    uint64_t v59 = sub_248174EA0();
    uint64_t v60 = *(void *)(v59 - 8);
    uint64_t v61 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v60 + 48);
    int v249 = v57;
    LODWORD(v57) = v61(v57, 1, v59);
    int v62 = v61(v58, 1, v59);
    if (v57)
    {
      if (v62)
      {
        size_t v63 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v64 = v249;
LABEL_43:
        memcpy(v64, v58, v63);
        goto LABEL_46;
      }
      (*(void (**)(void *, char *, uint64_t))(v60 + 16))(v249, v58, v59);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v249, 0, 1, v59);
    }
    else
    {
      if (v62)
      {
        (*(void (**)(void *, uint64_t))(v60 + 8))(v249, v59);
        size_t v63 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v64 = v249;
        goto LABEL_43;
      }
      (*(void (**)(void *, char *, uint64_t))(v60 + 24))(v249, v58, v59);
    }
LABEL_46:
    uint64_t v65 = v22[11];
    uint64_t v66 = (void *)(v20 + v65);
    uint64_t v67 = &v21[v65];
    uint64_t v68 = sub_248174EF0();
    uint64_t v69 = *(void *)(v68 - 8);
    uint64_t v70 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v69 + 48);
    int v71 = v70(v66, 1, v68);
    int v72 = v70(v67, 1, v68);
    if (v71)
    {
      uint64_t v4 = v256;
      if (!v72)
      {
        (*(void (**)(void *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
LABEL_52:
        uint64_t v34 = v261;
        uint64_t v18 = v253;
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v4 = v256;
      if (!v72)
      {
        (*(void (**)(void *, char *, uint64_t))(v69 + 24))(v66, v67, v68);
        goto LABEL_52;
      }
      (*(void (**)(void *, uint64_t))(v69 + 8))(v66, v68);
    }
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v66, v67, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_52;
  }
  if (v25)
  {
LABEL_21:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy((void *)v20, v21, *(void *)(*(void *)(v33 - 8) + 64));
    uint64_t v34 = v261;
    goto LABEL_53;
  }
  uint64_t v252 = v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(void *)(v20 + 8) = *((void *)v21 + 1);
  *(unsigned char *)(v20 + 16) = v21[16];
  uint64_t v26 = v22[9];
  uint64_t v27 = (void *)(v20 + v26);
  uint64_t v28 = &v21[v26];
  uint64_t v29 = sub_248174E60();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  swift_bridgeObjectRetain();
  if (v31(v28, 1, v29))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  uint64_t v22 = v260;
  uint64_t v44 = v260[10];
  uint64_t v45 = (void *)(v20 + v44);
  uint64_t v46 = &v21[v44];
  uint64_t v47 = sub_248174EA0();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v18 = v252;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  uint64_t v4 = v256;
  uint64_t v50 = v260[11];
  uint64_t v51 = (void *)(v20 + v50);
  uint64_t v52 = &v21[v50];
  uint64_t v53 = sub_248174EF0();
  uint64_t v54 = *(void *)(v53 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v52, 1, v53))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v247 + 56))(v20, 0, 1, v260);
  uint64_t v34 = v261;
LABEL_53:
  uint64_t v74 = *(int *)(v18 + 56);
  uint64_t v75 = a1 + v74;
  uint64_t v76 = (char *)v4 + v74;
  int v77 = __dst(a1 + v74, 1, v22);
  int v78 = __dst((uint64_t)v76, 1, v22);
  if (!v77)
  {
    if (v78)
    {
      sub_247FB33D4(v75, &qword_2692D58F8);
      goto LABEL_59;
    }
    *(void *)uint64_t v75 = *(void *)v76;
    *(void *)(v75 + 8) = *((void *)v76 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v75 + 16) = v76[16];
    uint64_t v87 = v22[9];
    uint64_t v88 = (void *)(v75 + v87);
    uint64_t v89 = &v76[v87];
    uint64_t v90 = sub_248174E60();
    uint64_t v91 = *(void *)(v90 - 8);
    uint64_t v92 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v91 + 48);
    int v93 = v92(v88, 1, v90);
    int v94 = v92(v89, 1, v90);
    if (v93)
    {
      if (!v94)
      {
        (*(void (**)(void *, char *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        goto LABEL_74;
      }
    }
    else
    {
      if (!v94)
      {
        (*(void (**)(void *, char *, uint64_t))(v91 + 24))(v88, v89, v90);
LABEL_74:
        uint64_t v108 = v260[10];
        uint64_t v109 = (void *)(v75 + v108);
        uint64_t v110 = &v76[v108];
        uint64_t v111 = sub_248174EA0();
        uint64_t v112 = *(void *)(v111 - 8);
        uint64_t v113 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v112 + 48);
        int v114 = v113(v109, 1, v111);
        int v115 = v113(v110, 1, v111);
        if (v114)
        {
          uint64_t v4 = v256;
          if (!v115)
          {
            (*(void (**)(void *, char *, uint64_t))(v112 + 16))(v109, v110, v111);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v4 = v256;
          if (!v115)
          {
            (*(void (**)(void *, char *, uint64_t))(v112 + 24))(v109, v110, v111);
LABEL_80:
            uint64_t v117 = v260[11];
            int v118 = (void *)(v75 + v117);
            uint64_t v119 = &v76[v117];
            uint64_t v120 = sub_248174EF0();
            uint64_t v121 = *(void *)(v120 - 8);
            uint64_t v122 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v121 + 48);
            int v123 = v122(v118, 1, v120);
            int v124 = v122(v119, 1, v120);
            if (v123)
            {
              if (!v124)
              {
                (*(void (**)(void *, char *, uint64_t))(v121 + 16))(v118, v119, v120);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
LABEL_86:
                uint64_t v22 = v260;
                uint64_t v34 = v261;
                goto LABEL_87;
              }
            }
            else
            {
              if (!v124)
              {
                (*(void (**)(void *, char *, uint64_t))(v121 + 24))(v118, v119, v120);
                goto LABEL_86;
              }
              (*(void (**)(void *, uint64_t))(v121 + 8))(v118, v120);
            }
            uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
            memcpy(v118, v119, *(void *)(*(void *)(v125 - 8) + 64));
            goto LABEL_86;
          }
          (*(void (**)(void *, uint64_t))(v112 + 8))(v109, v111);
        }
        uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v109, v110, *(void *)(*(void *)(v116 - 8) + 64));
        goto LABEL_80;
      }
      (*(void (**)(void *, uint64_t))(v91 + 8))(v88, v90);
    }
    uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v88, v89, *(void *)(*(void *)(v107 - 8) + 64));
    goto LABEL_74;
  }
  if (v78)
  {
LABEL_59:
    uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy((void *)v75, v76, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_87;
  }
  *(void *)uint64_t v75 = *(void *)v76;
  *(void *)(v75 + 8) = *((void *)v76 + 1);
  *(unsigned char *)(v75 + 16) = v76[16];
  uint64_t v79 = v22[9];
  uint64_t v80 = (void *)(v75 + v79);
  uint64_t v81 = &v76[v79];
  uint64_t v82 = sub_248174E60();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48);
  swift_bridgeObjectRetain();
  if (v84(v81, 1, v82))
  {
    uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
  }
  uint64_t v22 = v260;
  uint64_t v95 = v260[10];
  uint64_t v96 = (void *)(v75 + v95);
  uint64_t v97 = &v76[v95];
  uint64_t v98 = sub_248174EA0();
  uint64_t v99 = *(void *)(v98 - 8);
  uint64_t v4 = v256;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
  {
    uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v99 + 16))(v96, v97, v98);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
  }
  uint64_t v101 = v260[11];
  uint64_t v102 = (void *)(v75 + v101);
  uint64_t v103 = &v76[v101];
  uint64_t v104 = sub_248174EF0();
  uint64_t v105 = *(void *)(v104 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
  {
    uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v105 + 16))(v102, v103, v104);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v247 + 56))(v75, 0, 1, v260);
  uint64_t v34 = v261;
LABEL_87:
  uint64_t v126 = v34[9];
  uint64_t v127 = a1 + v126;
  uint64_t v128 = (char *)v4 + v126;
  *(void *)(a1 + v126) = *(void **)((char *)v4 + v126);
  swift_retain();
  swift_release();
  uint64_t v250 = type metadata accessor for MessagePacker();
  __src = v128;
  uint64_t v129 = *(int *)(v250 + 36);
  uint64_t v254 = v127;
  uint64_t v130 = v127 + v129;
  uint64_t v131 = &v128[v129];
  int v132 = __dst(v127 + v129, 1, v22);
  int v133 = __dst((uint64_t)v131, 1, v22);
  if (!v132)
  {
    if (v133)
    {
      sub_247FB33D4(v130, &qword_2692D58F8);
      goto LABEL_93;
    }
    *(void *)uint64_t v130 = *(void *)v131;
    *(void *)(v130 + 8) = *((void *)v131 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v130 + 16) = v131[16];
    uint64_t v142 = v22[9];
    uint64_t v143 = (void *)(v130 + v142);
    uint64_t v144 = &v131[v142];
    uint64_t v145 = sub_248174E60();
    uint64_t v146 = *(void *)(v145 - 8);
    int v147 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v146 + 48);
    int v148 = v147(v143, 1, v145);
    int v149 = v147(v144, 1, v145);
    if (v148)
    {
      if (!v149)
      {
        (*(void (**)(void *, char *, uint64_t))(v146 + 16))(v143, v144, v145);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
        goto LABEL_108;
      }
    }
    else
    {
      if (!v149)
      {
        (*(void (**)(void *, char *, uint64_t))(v146 + 24))(v143, v144, v145);
LABEL_108:
        uint64_t v163 = v260[10];
        uint64_t v164 = (void *)(v130 + v163);
        uint64_t v165 = &v131[v163];
        uint64_t v166 = sub_248174EA0();
        uint64_t v167 = *(void *)(v166 - 8);
        int v168 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v167 + 48);
        int v169 = v168(v164, 1, v166);
        int v170 = v168(v165, 1, v166);
        if (v169)
        {
          if (!v170)
          {
            (*(void (**)(void *, char *, uint64_t))(v167 + 16))(v164, v165, v166);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
            goto LABEL_114;
          }
        }
        else
        {
          if (!v170)
          {
            (*(void (**)(void *, char *, uint64_t))(v167 + 24))(v164, v165, v166);
LABEL_114:
            uint64_t v172 = v260[11];
            int v173 = (void *)(v130 + v172);
            uint64_t v174 = &v131[v172];
            uint64_t v175 = sub_248174EF0();
            uint64_t v176 = *(void *)(v175 - 8);
            int v177 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v176 + 48);
            int v178 = v177(v173, 1, v175);
            int v179 = v177(v174, 1, v175);
            uint64_t v4 = v256;
            if (v178)
            {
              if (!v179)
              {
                (*(void (**)(void *, char *, uint64_t))(v176 + 16))(v173, v174, v175);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v176 + 56))(v173, 0, 1, v175);
LABEL_120:
                uint64_t v22 = v260;
                uint64_t v34 = v261;
                goto LABEL_121;
              }
            }
            else
            {
              if (!v179)
              {
                (*(void (**)(void *, char *, uint64_t))(v176 + 24))(v173, v174, v175);
                goto LABEL_120;
              }
              (*(void (**)(void *, uint64_t))(v176 + 8))(v173, v175);
            }
            uint64_t v180 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
            memcpy(v173, v174, *(void *)(*(void *)(v180 - 8) + 64));
            goto LABEL_120;
          }
          (*(void (**)(void *, uint64_t))(v167 + 8))(v164, v166);
        }
        uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v164, v165, *(void *)(*(void *)(v171 - 8) + 64));
        goto LABEL_114;
      }
      (*(void (**)(void *, uint64_t))(v146 + 8))(v143, v145);
    }
    uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v143, v144, *(void *)(*(void *)(v162 - 8) + 64));
    goto LABEL_108;
  }
  if (v133)
  {
LABEL_93:
    uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy((void *)v130, v131, *(void *)(*(void *)(v141 - 8) + 64));
    goto LABEL_121;
  }
  *(void *)uint64_t v130 = *(void *)v131;
  *(void *)(v130 + 8) = *((void *)v131 + 1);
  *(unsigned char *)(v130 + 16) = v131[16];
  uint64_t v134 = v22[9];
  uint64_t v135 = (void *)(v130 + v134);
  uint64_t v136 = &v131[v134];
  uint64_t v137 = sub_248174E60();
  uint64_t v138 = *(void *)(v137 - 8);
  uint64_t v139 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v138 + 48);
  swift_bridgeObjectRetain();
  if (v139(v136, 1, v137))
  {
    uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v135, v136, *(void *)(*(void *)(v140 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v138 + 16))(v135, v136, v137);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
  }
  uint64_t v22 = v260;
  uint64_t v150 = v260[10];
  int v151 = (void *)(v130 + v150);
  int v152 = &v131[v150];
  uint64_t v153 = sub_248174EA0();
  uint64_t v154 = *(void *)(v153 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v152, 1, v153))
  {
    uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v151, v152, *(void *)(*(void *)(v155 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v154 + 16))(v151, v152, v153);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
  }
  uint64_t v4 = v256;
  uint64_t v156 = v260[11];
  uint64_t v157 = (void *)(v130 + v156);
  uint64_t v158 = &v131[v156];
  uint64_t v159 = sub_248174EF0();
  uint64_t v160 = *(void *)(v159 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
  {
    uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v157, v158, *(void *)(*(void *)(v161 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v160 + 16))(v157, v158, v159);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v247 + 56))(v130, 0, 1, v260);
  uint64_t v34 = v261;
LABEL_121:
  uint64_t v181 = *(int *)(v250 + 40);
  int v182 = (void *)(v254 + v181);
  uint64_t v183 = &__src[v181];
  *int v182 = *(void *)v183;
  v182[1] = *((void *)v183 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v184 = v34[10];
  uint64_t v185 = a1 + v184;
  uint64_t v186 = (char *)v4 + v184;
  *(void *)(a1 + v184) = *(void **)((char *)v4 + v184);
  swift_retain();
  swift_release();
  uint64_t v255 = type metadata accessor for MessageUnpacker();
  uint64_t v187 = *(int *)(v255 + 36);
  uint64_t v188 = v185 + v187;
  uint64_t v259 = v186;
  uint64_t v189 = &v186[v187];
  int v190 = __dst(v185 + v187, 1, v22);
  int v191 = __dst((uint64_t)v189, 1, v22);
  if (!v190)
  {
    if (v191)
    {
      sub_247FB33D4(v188, &qword_2692D58F8);
      goto LABEL_127;
    }
    *(void *)uint64_t v188 = *(void *)v189;
    *(void *)(v188 + 8) = *((void *)v189 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v188 + 16) = v189[16];
    uint64_t v201 = v22[9];
    uint64_t v202 = (void *)(v188 + v201);
    uint64_t v203 = &v189[v201];
    uint64_t v204 = sub_248174E60();
    uint64_t v205 = *(void *)(v204 - 8);
    uint64_t v206 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v205 + 48);
    uint64_t v257 = v202;
    LODWORD(v202) = v206(v202, 1, v204);
    int v207 = v206(v203, 1, v204);
    if (v202)
    {
      if (v207)
      {
        size_t v208 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        size_t v209 = v257;
LABEL_143:
        memcpy(v209, v203, v208);
        goto LABEL_153;
      }
      (*(void (**)(void *, char *, uint64_t))(v205 + 16))(v257, v203, v204);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v205 + 56))(v257, 0, 1, v204);
    }
    else
    {
      if (v207)
      {
        (*(void (**)(void *, uint64_t))(v205 + 8))(v257, v204);
        size_t v208 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        size_t v209 = v257;
        goto LABEL_143;
      }
      (*(void (**)(void *, char *, uint64_t))(v205 + 24))(v257, v203, v204);
    }
LABEL_153:
    uint64_t v230 = v260[10];
    uint64_t v231 = (void *)(v188 + v230);
    uint64_t v232 = &v189[v230];
    uint64_t v233 = sub_248174EA0();
    uint64_t v234 = *(void *)(v233 - 8);
    uint64_t v235 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v234 + 48);
    uint64_t v258 = v231;
    LODWORD(v231) = v235(v231, 1, v233);
    int v236 = v235(v232, 1, v233);
    if (v231)
    {
      if (!v236)
      {
        (*(void (**)(void *, char *, uint64_t))(v234 + 16))(v258, v232, v233);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v234 + 56))(v258, 0, 1, v233);
        goto LABEL_161;
      }
      size_t v237 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      size_t v238 = v258;
    }
    else
    {
      if (!v236)
      {
        (*(void (**)(void *, char *, uint64_t))(v234 + 24))(v258, v232, v233);
        goto LABEL_161;
      }
      (*(void (**)(void *, uint64_t))(v234 + 8))(v258, v233);
      size_t v237 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      size_t v238 = v258;
    }
    memcpy(v238, v232, v237);
LABEL_161:
    uint64_t v239 = v260[11];
    uint64_t v240 = (void *)(v188 + v239);
    char v241 = &v189[v239];
    uint64_t v242 = sub_248174EF0();
    uint64_t v243 = *(void *)(v242 - 8);
    uint64_t v244 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v243 + 48);
    int v245 = v244(v240, 1, v242);
    int v246 = v244(v241, 1, v242);
    uint64_t v4 = v256;
    if (v245)
    {
      uint64_t v34 = v261;
      if (!v246)
      {
        (*(void (**)(void *, char *, uint64_t))(v243 + 16))(v240, v241, v242);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v243 + 56))(v240, 0, 1, v242);
        goto LABEL_140;
      }
    }
    else
    {
      uint64_t v34 = v261;
      if (!v246)
      {
        (*(void (**)(void *, char *, uint64_t))(v243 + 24))(v240, v241, v242);
        goto LABEL_140;
      }
      (*(void (**)(void *, uint64_t))(v243 + 8))(v240, v242);
    }
    size_t v198 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
    uint64_t v199 = v240;
    uint64_t v200 = v241;
    goto LABEL_128;
  }
  if (v191)
  {
LABEL_127:
    size_t v198 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v199 = (void *)v188;
    uint64_t v200 = v189;
LABEL_128:
    memcpy(v199, v200, v198);
    goto LABEL_140;
  }
  *(void *)uint64_t v188 = *(void *)v189;
  *(void *)(v188 + 8) = *((void *)v189 + 1);
  *(unsigned char *)(v188 + 16) = v189[16];
  uint64_t v192 = v22[9];
  __dsta = (void *)(v188 + v192);
  int v193 = &v189[v192];
  uint64_t v194 = sub_248174E60();
  uint64_t v195 = *(void *)(v194 - 8);
  uint64_t v196 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48);
  swift_bridgeObjectRetain();
  if (v196(v193, 1, v194))
  {
    uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(__dsta, v193, *(void *)(*(void *)(v197 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v195 + 16))(__dsta, v193, v194);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v195 + 56))(__dsta, 0, 1, v194);
  }
  uint64_t v210 = v260[10];
  uint64_t v211 = (void *)(v188 + v210);
  long long v212 = &v189[v210];
  uint64_t v213 = sub_248174EA0();
  uint64_t v214 = *(void *)(v213 - 8);
  uint64_t v34 = v261;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48))(v212, 1, v213))
  {
    uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v211, v212, *(void *)(*(void *)(v215 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v214 + 16))(v211, v212, v213);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v214 + 56))(v211, 0, 1, v213);
  }
  uint64_t v4 = v256;
  uint64_t v216 = v260[11];
  uint64_t v217 = (void *)(v188 + v216);
  uint64_t v218 = &v189[v216];
  uint64_t v219 = sub_248174EF0();
  uint64_t v220 = *(void *)(v219 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v220 + 48))(v218, 1, v219))
  {
    uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v217, v218, *(void *)(*(void *)(v221 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v220 + 16))(v217, v218, v219);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v220 + 56))(v217, 0, 1, v219);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v247 + 56))(v188, 0, 1, v260);
LABEL_140:
  uint64_t v222 = *(int *)(v255 + 40);
  uint64_t v223 = (void *)(v185 + v222);
  uint64_t v224 = &v259[v222];
  void *v223 = *(void *)v224;
  v223[1] = *((void *)v224 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v225 = v34[11];
  uint64_t v226 = a1 + v225;
  uint64_t v227 = (char *)v4 + v225;
  uint64_t v228 = sub_2481748C0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v228 - 8) + 24))(v226, v227, v228);
  *(unsigned char *)(a1 + v34[12]) = *((unsigned char *)v4 + v34[12]);
  return a1;
}

uint64_t sub_2480B3688(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v11 = type metadata accessor for MessageSessionTransport();
  uint64_t v12 = *(int *)(v11 + 52);
  uint64_t v13 = (unsigned char *)(a1 + v12);
  uint64_t v14 = (unsigned char *)(v4 + v12);
  uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v116 = *((void *)v15 - 1);
  int v118 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v116 + 48);
  uint64_t v117 = a3;
  uint64_t v115 = v4;
  if (v118(v14, 1, v15))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
    v13[16] = v14[16];
    uint64_t v17 = v15[9];
    uint64_t v18 = &v13[v17];
    uint64_t v19 = &v14[v17];
    uint64_t v20 = sub_248174E60();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = v15[10];
    int v24 = &v13[v23];
    int v25 = &v14[v23];
    uint64_t v26 = sub_248174EA0();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v29 = v15[11];
    uint64_t v30 = &v13[v29];
    uint64_t v31 = &v14[v29];
    uint64_t v32 = sub_248174EF0();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v116 + 56))(v13, 0, 1, v15);
    uint64_t v4 = v115;
    a3 = v117;
  }
  uint64_t v35 = *(int *)(v11 + 56);
  uint64_t v36 = (unsigned char *)(a1 + v35);
  uint64_t v37 = (unsigned char *)(v4 + v35);
  if (v118((unsigned char *)(v4 + v35), 1, v15))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    v36[16] = v37[16];
    uint64_t v39 = v15[9];
    uint64_t v40 = &v36[v39];
    int v41 = &v37[v39];
    uint64_t v42 = sub_248174E60();
    uint64_t v43 = *(void *)(v42 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
    {
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v43 + 32))(v40, v41, v42);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    uint64_t v45 = v15[10];
    uint64_t v46 = &v36[v45];
    uint64_t v47 = &v37[v45];
    uint64_t v48 = sub_248174EA0();
    uint64_t v49 = *(void *)(v48 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 32))(v46, v47, v48);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    uint64_t v51 = v15[11];
    uint64_t v52 = &v36[v51];
    uint64_t v53 = &v37[v51];
    uint64_t v54 = sub_248174EF0();
    uint64_t v55 = *(void *)(v54 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v55 + 32))(v52, v53, v54);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v116 + 56))(v36, 0, 1, v15);
    a3 = v117;
  }
  uint64_t v57 = a3[9];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = v4 + v57;
  *(void *)(a1 + v57) = *(void *)(v4 + v57);
  uint64_t v114 = type metadata accessor for MessagePacker();
  uint64_t v60 = *(int *)(v114 + 36);
  uint64_t v61 = (unsigned char *)(v58 + v60);
  int v62 = (unsigned char *)(v59 + v60);
  if (v118((unsigned char *)(v59 + v60), 1, v15))
  {
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    v61[16] = v62[16];
    uint64_t v64 = v15[9];
    uint64_t v65 = &v61[v64];
    uint64_t v66 = &v62[v64];
    uint64_t v67 = sub_248174E60();
    uint64_t v68 = *(void *)(v67 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
    {
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v68 + 32))(v65, v66, v67);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
    }
    uint64_t v70 = v15[10];
    int v71 = &v61[v70];
    int v72 = &v62[v70];
    uint64_t v73 = sub_248174EA0();
    uint64_t v74 = *(void *)(v73 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
    {
      uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 32))(v71, v72, v73);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
    }
    uint64_t v76 = v15[11];
    int v77 = &v61[v76];
    int v78 = &v62[v76];
    uint64_t v79 = sub_248174EF0();
    uint64_t v80 = *(void *)(v79 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
    {
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v80 + 32))(v77, v78, v79);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
    }
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v116 + 56))(v61, 0, 1, v15);
    uint64_t v4 = v115;
    a3 = v117;
  }
  *(_OWORD *)(v58 + *(int *)(v114 + 40)) = *(_OWORD *)(v59 + *(int *)(v114 + 40));
  uint64_t v82 = a3[10];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = v4 + v82;
  *(void *)(a1 + v82) = *(void *)(v4 + v82);
  uint64_t v85 = type metadata accessor for MessageUnpacker();
  uint64_t v86 = *(int *)(v85 + 36);
  uint64_t v87 = (unsigned char *)(v83 + v86);
  uint64_t v88 = (unsigned char *)(v84 + v86);
  if (v118((unsigned char *)(v84 + v86), 1, v15))
  {
    uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    uint64_t v119 = v85;
    *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
    v87[16] = v88[16];
    uint64_t v90 = v15[9];
    uint64_t v91 = &v87[v90];
    uint64_t v92 = &v88[v90];
    uint64_t v93 = sub_248174E60();
    uint64_t v94 = *(void *)(v93 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v94 + 48))(v92, 1, v93))
    {
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v94 + 32))(v91, v92, v93);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v94 + 56))(v91, 0, 1, v93);
    }
    uint64_t v96 = v15[10];
    uint64_t v97 = &v87[v96];
    uint64_t v98 = &v88[v96];
    uint64_t v99 = sub_248174EA0();
    uint64_t v100 = *(void *)(v99 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
    {
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v100 + 32))(v97, v98, v99);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
    }
    uint64_t v4 = v115;
    uint64_t v102 = v15[11];
    uint64_t v103 = &v87[v102];
    uint64_t v104 = &v88[v102];
    uint64_t v105 = sub_248174EF0();
    uint64_t v106 = *(void *)(v105 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
    {
      uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v103, v104, *(void *)(*(void *)(v107 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v106 + 32))(v103, v104, v105);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
    }
    a3 = v117;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v116 + 56))(v87, 0, 1, v15);
    uint64_t v85 = v119;
  }
  *(_OWORD *)(v83 + *(int *)(v85 + 40)) = *(_OWORD *)(v84 + *(int *)(v85 + 40));
  uint64_t v108 = a3[11];
  uint64_t v109 = a1 + v108;
  uint64_t v110 = a3;
  uint64_t v111 = v4 + v108;
  uint64_t v112 = sub_2481748C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 32))(v109, v111, v112);
  *(unsigned char *)(a1 + v110[12]) = *(unsigned char *)(v4 + v110[12]);
  return a1;
}

uint64_t sub_2480B4590(uint64_t a1, void *a2, int *a3)
{
  uint64_t v4 = a2;
  long long v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4[1];

  uint64_t v8 = v4[3];
  *(void *)(a1 + 16) = v4[2];
  *(void *)(a1 + 24) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = v4[4];
  if (*(void *)(a1 + 32))
  {
    if (v9)
    {
      uint64_t v10 = v4[5];
      *(void *)(a1 + 32) = v9;
      *(void *)(a1 + 40) = v10;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v9)
  {
    uint64_t v11 = v4[5];
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v11;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)v4 + 2);
LABEL_8:
  uint64_t v12 = v4[6];
  if (*(void *)(a1 + 48))
  {
    if (v12)
    {
      uint64_t v13 = v4[7];
      *(void *)(a1 + 48) = v12;
      *(void *)(a1 + 56) = v13;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v12)
  {
    uint64_t v14 = v4[7];
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v14;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)v4 + 3);
LABEL_15:
  v263 = a3;
  uint64_t v15 = type metadata accessor for MessageSessionTransport();
  uint64_t v16 = *(int *)(v15 + 52);
  uint64_t v17 = (unsigned char *)(a1 + v16);
  uint64_t v18 = (char *)v4 + v16;
  uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v249 = *((void *)v19 - 1);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v249 + 48);
  int v21 = v20((uint64_t)v17, 1, v19);
  v265 = v20;
  int v22 = v20((uint64_t)v18, 1, v19);
  uint64_t v259 = v4;
  if (!v21)
  {
    if (v22)
    {
      sub_247FB33D4((uint64_t)v17, &qword_2692D58F8);
      goto LABEL_21;
    }
    uint64_t v260 = (void *)v15;
    uint64_t v31 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v31;
    swift_bridgeObjectRelease();
    v17[16] = v18[16];
    uint64_t v32 = v19[9];
    uint64_t v33 = &v17[v32];
    uint64_t v34 = &v18[v32];
    uint64_t v35 = sub_248174E60();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v36 + 48);
    uint64_t v253 = v33;
    LODWORD(v33) = v37(v33, 1, v35);
    int v38 = v37(v34, 1, v35);
    if (v33)
    {
      if (v38)
      {
        size_t v39 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v40 = v253;
LABEL_35:
        memcpy(v40, v34, v39);
        goto LABEL_38;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v36 + 32))(v253, v34, v35);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v253, 0, 1, v35);
    }
    else
    {
      if (v38)
      {
        (*(void (**)(void *, uint64_t))(v36 + 8))(v253, v35);
        size_t v39 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v40 = v253;
        goto LABEL_35;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v36 + 40))(v253, v34, v35);
    }
LABEL_38:
    uint64_t v53 = v19[10];
    uint64_t v54 = &v17[v53];
    uint64_t v55 = &v18[v53];
    uint64_t v56 = sub_248174EA0();
    uint64_t v57 = *(void *)(v56 - 8);
    uint64_t v58 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v57 + 48);
    uint64_t v254 = v54;
    LODWORD(v54) = v58(v54, 1, v56);
    __src = v55;
    int v59 = v58(v55, 1, v56);
    if (v54)
    {
      uint64_t v15 = (uint64_t)v260;
      if (v59)
      {
        size_t v60 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v61 = v254;
LABEL_43:
        memcpy(v61, __src, v60);
        goto LABEL_46;
      }
      (*(void (**)(void *, void *, uint64_t))(v57 + 32))(v254, __src, v56);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v254, 0, 1, v56);
    }
    else
    {
      uint64_t v15 = (uint64_t)v260;
      if (v59)
      {
        (*(void (**)(void *, uint64_t))(v57 + 8))(v254, v56);
        size_t v60 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v61 = v254;
        goto LABEL_43;
      }
      (*(void (**)(void *, void *, uint64_t))(v57 + 40))(v254, __src, v56);
    }
LABEL_46:
    uint64_t v62 = v19[11];
    uint64_t v63 = &v17[v62];
    uint64_t v64 = &v18[v62];
    uint64_t v65 = sub_248174EF0();
    uint64_t v66 = *(void *)(v65 - 8);
    uint64_t v67 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v66 + 48);
    int v68 = v67(v63, 1, v65);
    int v69 = v67(v64, 1, v65);
    if (v68)
    {
      uint64_t v4 = v259;
      if (!v69)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 32))(v63, v64, v65);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_52:
        uint64_t v30 = v263;
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v4 = v259;
      if (!v69)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 40))(v63, v64, v65);
        goto LABEL_52;
      }
      (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v63, v65);
    }
    uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v63, v64, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_52;
  }
  if (v22)
  {
LABEL_21:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v17, v18, *(void *)(*(void *)(v29 - 8) + 64));
    uint64_t v30 = v263;
    goto LABEL_53;
  }
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  v17[16] = v18[16];
  uint64_t v23 = v19[9];
  int v24 = &v17[v23];
  int v25 = &v18[v23];
  uint64_t v26 = sub_248174E60();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v41 = v19[10];
  uint64_t v42 = &v17[v41];
  uint64_t v43 = &v18[v41];
  uint64_t v44 = sub_248174EA0();
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  uint64_t v4 = v259;
  uint64_t v47 = v19[11];
  uint64_t v48 = &v17[v47];
  uint64_t v49 = &v18[v47];
  uint64_t v50 = sub_248174EF0();
  uint64_t v51 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v51 + 32))(v48, v49, v50);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v249 + 56))(v17, 0, 1, v19);
  uint64_t v30 = v263;
LABEL_53:
  uint64_t v71 = *(int *)(v15 + 56);
  int v72 = (unsigned char *)(a1 + v71);
  uint64_t v73 = (char *)v4 + v71;
  int v74 = v265(a1 + v71, 1, v19);
  int v75 = v265((uint64_t)v73, 1, v19);
  if (!v74)
  {
    if (v75)
    {
      sub_247FB33D4((uint64_t)v72, &qword_2692D58F8);
      goto LABEL_59;
    }
    uint64_t v83 = *((void *)v73 + 1);
    *(void *)int v72 = *(void *)v73;
    *((void *)v72 + 1) = v83;
    swift_bridgeObjectRelease();
    v72[16] = v73[16];
    uint64_t v84 = v19[9];
    uint64_t v85 = &v72[v84];
    uint64_t v86 = &v73[v84];
    uint64_t v87 = sub_248174E60();
    uint64_t v88 = *(void *)(v87 - 8);
    uint64_t v89 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v88 + 48);
    uint64_t v255 = v85;
    LODWORD(v85) = v89(v85, 1, v87);
    int v90 = v89(v86, 1, v87);
    if (v85)
    {
      if (v90)
      {
        size_t v91 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v92 = v255;
LABEL_73:
        memcpy(v92, v86, v91);
        goto LABEL_77;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v88 + 32))(v255, v86, v87);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v88 + 56))(v255, 0, 1, v87);
    }
    else
    {
      if (v90)
      {
        (*(void (**)(void *, uint64_t))(v88 + 8))(v255, v87);
        size_t v91 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v92 = v255;
        goto LABEL_73;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v88 + 40))(v255, v86, v87);
    }
LABEL_77:
    uint64_t v105 = v19[10];
    uint64_t v106 = &v72[v105];
    uint64_t v107 = &v73[v105];
    uint64_t v108 = sub_248174EA0();
    uint64_t v109 = *(void *)(v108 - 8);
    uint64_t v110 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v109 + 48);
    uint64_t v256 = v106;
    LODWORD(v106) = v110(v106, 1, v108);
    int v111 = v110(v107, 1, v108);
    if (v106)
    {
      uint64_t v4 = v259;
      if (v111)
      {
        size_t v112 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v113 = v256;
LABEL_82:
        memcpy(v113, v107, v112);
        goto LABEL_85;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v109 + 32))(v256, v107, v108);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v256, 0, 1, v108);
    }
    else
    {
      uint64_t v4 = v259;
      if (v111)
      {
        (*(void (**)(void *, uint64_t))(v109 + 8))(v256, v108);
        size_t v112 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v113 = v256;
        goto LABEL_82;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v109 + 40))(v256, v107, v108);
    }
LABEL_85:
    uint64_t v114 = v19[11];
    uint64_t v115 = &v72[v114];
    uint64_t v116 = &v73[v114];
    uint64_t v117 = sub_248174EF0();
    uint64_t v118 = *(void *)(v117 - 8);
    uint64_t v119 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v118 + 48);
    int v120 = v119(v115, 1, v117);
    int v121 = v119(v116, 1, v117);
    if (v120)
    {
      if (!v121)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v118 + 32))(v115, v116, v117);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v118 + 56))(v115, 0, 1, v117);
LABEL_91:
        uint64_t v30 = v263;
        goto LABEL_92;
      }
    }
    else
    {
      if (!v121)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v118 + 40))(v115, v116, v117);
        goto LABEL_91;
      }
      (*(void (**)(unsigned char *, uint64_t))(v118 + 8))(v115, v117);
    }
    uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v115, v116, *(void *)(*(void *)(v122 - 8) + 64));
    goto LABEL_91;
  }
  if (v75)
  {
LABEL_59:
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v72, v73, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_92;
  }
  *(_OWORD *)int v72 = *(_OWORD *)v73;
  v72[16] = v73[16];
  uint64_t v76 = v19[9];
  int v77 = &v72[v76];
  int v78 = &v73[v76];
  uint64_t v79 = sub_248174E60();
  uint64_t v80 = *(void *)(v79 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v80 + 48))(v78, 1, v79))
  {
    uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v80 + 32))(v77, v78, v79);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  }
  uint64_t v93 = v19[10];
  uint64_t v94 = &v72[v93];
  uint64_t v95 = &v73[v93];
  uint64_t v96 = sub_248174EA0();
  uint64_t v97 = *(void *)(v96 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
  {
    uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v97 + 32))(v94, v95, v96);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
  }
  uint64_t v99 = v19[11];
  uint64_t v100 = &v72[v99];
  uint64_t v101 = &v73[v99];
  uint64_t v102 = sub_248174EF0();
  uint64_t v103 = *(void *)(v102 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
  {
    uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v100, v101, *(void *)(*(void *)(v104 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v103 + 32))(v100, v101, v102);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v249 + 56))(v72, 0, 1, v19);
  uint64_t v30 = v263;
LABEL_92:
  uint64_t v123 = v30[9];
  uint64_t v124 = a1 + v123;
  uint64_t v125 = (char *)v4 + v123;
  *(void *)(a1 + v123) = *(void *)((char *)v4 + v123);
  swift_release();
  uint64_t v250 = type metadata accessor for MessagePacker();
  __srca = v125;
  uint64_t v126 = *(int *)(v250 + 36);
  uint64_t v257 = v124;
  uint64_t v127 = (unsigned char *)(v124 + v126);
  uint64_t v128 = &v125[v126];
  LODWORD(v124) = v265(v124 + v126, 1, v19);
  long long v261 = v19;
  int v129 = v265((uint64_t)v128, 1, v19);
  if (!v124)
  {
    if (v129)
    {
      sub_247FB33D4((uint64_t)v127, &qword_2692D58F8);
      goto LABEL_98;
    }
    uint64_t v137 = *((void *)v128 + 1);
    *(void *)uint64_t v127 = *(void *)v128;
    *((void *)v127 + 1) = v137;
    swift_bridgeObjectRelease();
    v127[16] = v128[16];
    uint64_t v138 = v19[9];
    uint64_t v139 = &v127[v138];
    uint64_t v140 = &v128[v138];
    uint64_t v141 = sub_248174E60();
    uint64_t v142 = *(void *)(v141 - 8);
    uint64_t v143 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v142 + 48);
    uint64_t v247 = v139;
    LODWORD(v139) = v143(v139, 1, v141);
    int v144 = v143(v140, 1, v141);
    if (v139)
    {
      if (v144)
      {
        size_t v145 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v146 = v247;
LABEL_112:
        memcpy(v146, v140, v145);
        goto LABEL_116;
      }
      (*(void (**)(void *, char *, uint64_t))(v142 + 32))(v247, v140, v141);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v247, 0, 1, v141);
    }
    else
    {
      if (v144)
      {
        (*(void (**)(void *, uint64_t))(v142 + 8))(v247, v141);
        size_t v145 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v146 = v247;
        goto LABEL_112;
      }
      (*(void (**)(void *, char *, uint64_t))(v142 + 40))(v247, v140, v141);
    }
LABEL_116:
    uint64_t v159 = v19[10];
    uint64_t v160 = &v127[v159];
    uint64_t v161 = &v128[v159];
    uint64_t v162 = sub_248174EA0();
    uint64_t v163 = *(void *)(v162 - 8);
    uint64_t v164 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v163 + 48);
    int v248 = v160;
    LODWORD(v160) = v164(v160, 1, v162);
    int v165 = v164(v161, 1, v162);
    if (v160)
    {
      if (v165)
      {
        size_t v166 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v167 = v248;
LABEL_121:
        memcpy(v167, v161, v166);
        goto LABEL_124;
      }
      (*(void (**)(void *, char *, uint64_t))(v163 + 32))(v248, v161, v162);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v163 + 56))(v248, 0, 1, v162);
    }
    else
    {
      if (v165)
      {
        (*(void (**)(void *, uint64_t))(v163 + 8))(v248, v162);
        size_t v166 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
        uint64_t v167 = v248;
        goto LABEL_121;
      }
      (*(void (**)(void *, char *, uint64_t))(v163 + 40))(v248, v161, v162);
    }
LABEL_124:
    uint64_t v168 = v19[11];
    int v169 = &v127[v168];
    int v170 = &v128[v168];
    uint64_t v171 = sub_248174EF0();
    uint64_t v172 = *(void *)(v171 - 8);
    int v173 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v172 + 48);
    int v174 = v173(v169, 1, v171);
    int v175 = v173(v170, 1, v171);
    if (v174)
    {
      uint64_t v4 = v259;
      if (!v175)
      {
        (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v169, v170, v171);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v172 + 56))(v169, 0, 1, v171);
LABEL_130:
        uint64_t v30 = v263;
        goto LABEL_131;
      }
    }
    else
    {
      uint64_t v4 = v259;
      if (!v175)
      {
        (*(void (**)(char *, char *, uint64_t))(v172 + 40))(v169, v170, v171);
        goto LABEL_130;
      }
      (*(void (**)(char *, uint64_t))(v172 + 8))(v169, v171);
    }
    uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v169, v170, *(void *)(*(void *)(v176 - 8) + 64));
    goto LABEL_130;
  }
  if (v129)
  {
LABEL_98:
    uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v127, v128, *(void *)(*(void *)(v136 - 8) + 64));
    goto LABEL_131;
  }
  *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
  v127[16] = v128[16];
  uint64_t v130 = v19[9];
  uint64_t v131 = &v127[v130];
  int v132 = &v128[v130];
  uint64_t v133 = sub_248174E60();
  uint64_t v134 = *(void *)(v133 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48))(v132, 1, v133))
  {
    uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v131, v132, *(void *)(*(void *)(v135 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, char *, uint64_t))(v134 + 32))(v131, v132, v133);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v133);
  }
  uint64_t v147 = v19[10];
  int v148 = &v127[v147];
  int v149 = &v128[v147];
  uint64_t v150 = sub_248174EA0();
  uint64_t v151 = *(void *)(v150 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v149, 1, v150))
  {
    uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v148, v149, *(void *)(*(void *)(v152 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, char *, uint64_t))(v151 + 32))(v148, v149, v150);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v151 + 56))(v148, 0, 1, v150);
  }
  uint64_t v4 = v259;
  uint64_t v153 = v19[11];
  uint64_t v154 = &v127[v153];
  uint64_t v155 = &v128[v153];
  uint64_t v156 = sub_248174EF0();
  uint64_t v157 = *(void *)(v156 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
  {
    uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v154, v155, *(void *)(*(void *)(v158 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, char *, uint64_t))(v157 + 32))(v154, v155, v156);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
  }
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v249 + 56))(v127, 0, 1, v19);
  uint64_t v30 = v263;
LABEL_131:
  uint64_t v177 = *(int *)(v250 + 40);
  int v178 = (void *)(v257 + v177);
  int v179 = &__srca[v177];
  uint64_t v181 = *(void *)v179;
  uint64_t v180 = *((void *)v179 + 1);
  *int v178 = v181;
  v178[1] = v180;
  swift_bridgeObjectRelease();
  uint64_t v182 = v30[10];
  uint64_t v183 = a1 + v182;
  uint64_t v184 = (char *)v4 + v182;
  *(void *)(a1 + v182) = *(void *)((char *)v4 + v182);
  swift_release();
  uint64_t v258 = type metadata accessor for MessageUnpacker();
  uint64_t v185 = *(int *)(v258 + 36);
  uint64_t v186 = v183 + v185;
  uint64_t v264 = v184;
  uint64_t v187 = &v184[v185];
  LODWORD(v184) = v265(v183 + v185, 1, v19);
  int v188 = v265((uint64_t)v187, 1, v19);
  if (!v184)
  {
    if (v188)
    {
      sub_247FB33D4(v186, &qword_2692D58F8);
      goto LABEL_137;
    }
    uint64_t v198 = *((void *)v187 + 1);
    *(void *)uint64_t v186 = *(void *)v187;
    *(void *)(v186 + 8) = v198;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v186 + 16) = v187[16];
    uint64_t v199 = v19[9];
    uint64_t v200 = (void *)(v186 + v199);
    uint64_t v201 = &v187[v199];
    uint64_t v202 = sub_248174E60();
    uint64_t v203 = *(void *)(v202 - 8);
    uint64_t v204 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v203 + 48);
    v266 = v200;
    LODWORD(v200) = v204(v200, 1, v202);
    int v205 = v204(v201, 1, v202);
    if (v200)
    {
      if (v205)
      {
        size_t v206 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v207 = v266;
LABEL_153:
        memcpy(v207, v201, v206);
        goto LABEL_157;
      }
      (*(void (**)(void *, char *, uint64_t))(v203 + 32))(v266, v201, v202);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v203 + 56))(v266, 0, 1, v202);
    }
    else
    {
      if (v205)
      {
        (*(void (**)(void *, uint64_t))(v203 + 8))(v266, v202);
        size_t v206 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        int v207 = v266;
        goto LABEL_153;
      }
      (*(void (**)(void *, char *, uint64_t))(v203 + 40))(v266, v201, v202);
    }
LABEL_157:
    uint64_t v230 = v261[10];
    uint64_t v231 = (void *)(v186 + v230);
    uint64_t v232 = &v187[v230];
    uint64_t v233 = sub_248174EA0();
    uint64_t v234 = *(void *)(v233 - 8);
    uint64_t v235 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v234 + 48);
    long long v262 = v231;
    LODWORD(v231) = v235(v231, 1, v233);
    int v236 = v235(v232, 1, v233);
    if (v231)
    {
      if (!v236)
      {
        (*(void (**)(void *, char *, uint64_t))(v234 + 32))(v262, v232, v233);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v234 + 56))(v262, 0, 1, v233);
        goto LABEL_165;
      }
      size_t v237 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      size_t v238 = v262;
    }
    else
    {
      if (!v236)
      {
        (*(void (**)(void *, char *, uint64_t))(v234 + 40))(v262, v232, v233);
        goto LABEL_165;
      }
      (*(void (**)(void *, uint64_t))(v234 + 8))(v262, v233);
      size_t v237 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      size_t v238 = v262;
    }
    memcpy(v238, v232, v237);
LABEL_165:
    uint64_t v4 = v259;
    uint64_t v239 = v261[11];
    uint64_t v240 = (void *)(v186 + v239);
    char v241 = &v187[v239];
    uint64_t v242 = sub_248174EF0();
    uint64_t v243 = *(void *)(v242 - 8);
    uint64_t v244 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v243 + 48);
    int v245 = v244(v240, 1, v242);
    int v246 = v244(v241, 1, v242);
    if (v245)
    {
      uint64_t v30 = v263;
      if (!v246)
      {
        (*(void (**)(void *, char *, uint64_t))(v243 + 32))(v240, v241, v242);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v243 + 56))(v240, 0, 1, v242);
        goto LABEL_150;
      }
    }
    else
    {
      uint64_t v30 = v263;
      if (!v246)
      {
        (*(void (**)(void *, char *, uint64_t))(v243 + 40))(v240, v241, v242);
        goto LABEL_150;
      }
      (*(void (**)(void *, uint64_t))(v243 + 8))(v240, v242);
    }
    size_t v195 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
    uint64_t v196 = v240;
    uint64_t v197 = v241;
    goto LABEL_138;
  }
  if (v188)
  {
LABEL_137:
    size_t v195 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v196 = (void *)v186;
    uint64_t v197 = v187;
LABEL_138:
    memcpy(v196, v197, v195);
    goto LABEL_150;
  }
  *(_OWORD *)uint64_t v186 = *(_OWORD *)v187;
  *(unsigned char *)(v186 + 16) = v187[16];
  uint64_t v189 = v19[9];
  int v190 = (void *)(v186 + v189);
  int v191 = &v187[v189];
  uint64_t v192 = sub_248174E60();
  uint64_t v193 = *(void *)(v192 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v191, 1, v192))
  {
    uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v190, v191, *(void *)(*(void *)(v194 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v193 + 32))(v190, v191, v192);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
  }
  uint64_t v208 = v19[10];
  size_t v209 = (void *)(v186 + v208);
  uint64_t v210 = &v187[v208];
  uint64_t v211 = sub_248174EA0();
  uint64_t v212 = *(void *)(v211 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v212 + 48))(v210, 1, v211))
  {
    uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v209, v210, *(void *)(*(void *)(v213 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v212 + 32))(v209, v210, v211);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v212 + 56))(v209, 0, 1, v211);
  }
  uint64_t v4 = v259;
  uint64_t v214 = v19[11];
  uint64_t v215 = (void *)(v186 + v214);
  uint64_t v216 = &v187[v214];
  uint64_t v217 = sub_248174EF0();
  uint64_t v218 = *(void *)(v217 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217))
  {
    uint64_t v219 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v215, v216, *(void *)(*(void *)(v219 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v218 + 32))(v215, v216, v217);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v249 + 56))(v186, 0, 1, v19);
LABEL_150:
  uint64_t v220 = *(int *)(v258 + 40);
  uint64_t v221 = (void *)(v183 + v220);
  uint64_t v222 = &v264[v220];
  uint64_t v224 = *(void *)v222;
  uint64_t v223 = *((void *)v222 + 1);
  *uint64_t v221 = v224;
  v221[1] = v223;
  swift_bridgeObjectRelease();
  uint64_t v225 = v30[11];
  uint64_t v226 = a1 + v225;
  uint64_t v227 = (char *)v4 + v225;
  uint64_t v228 = sub_2481748C0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v228 - 8) + 40))(v226, v227, v228);
  *(unsigned char *)(a1 + v30[12]) = *((unsigned char *)v4 + v30[12]);
  return a1;
}

uint64_t sub_2480B67B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2480B67C8);
}

uint64_t sub_2480B67C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for MessageSessionTransport();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for MessagePacker();
    if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
    {
      uint64_t v8 = v11;
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = a3[9];
    }
    else
    {
      uint64_t v14 = type metadata accessor for MessageUnpacker();
      if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
      {
        uint64_t v8 = v14;
        uint64_t v12 = *(void *)(v14 - 8);
        uint64_t v13 = a3[10];
      }
      else
      {
        uint64_t v15 = sub_2481748C0();
        if (*(_DWORD *)(*(void *)(v15 - 8) + 84) != a2)
        {
          unsigned int v17 = *(unsigned __int8 *)(a1 + a3[12]);
          if (v17 >= 2) {
            return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
          }
          else {
            return 0;
          }
        }
        uint64_t v8 = v15;
        uint64_t v12 = *(void *)(v15 - 8);
        uint64_t v13 = a3[11];
      }
    }
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_2480B69AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2480B69C0);
}

uint64_t sub_2480B69C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for MessageSessionTransport();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for MessagePacker();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[9];
    }
    else
    {
      uint64_t v16 = type metadata accessor for MessageUnpacker();
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[10];
      }
      else
      {
        uint64_t result = sub_2481748C0();
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(unsigned char *)(a1 + a4[12]) = a2 + 1;
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[11];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ActivatedMessageSessionTransport()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2480B6BA8(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_2480B6C04(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

unsigned char *sub_2480B6C54(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480B6D20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2480B6D48()
{
  return swift_getWitnessTable();
}

void sub_2480B6D64(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = type metadata accessor for ActivatedMessageSessionTransport();
  sub_2480A97D0(v3, a1, v4);
}

uint64_t sub_2480B6DB0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2480B6E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8C78);
  return sub_2480A99D8(a1, a2, a3);
}

uint64_t sub_2480B6EE4()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2480B6F1C()
{
  uint64_t v1 = type metadata accessor for MessageUnpacker();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  unint64_t v4 = (((*(void *)(*(void *)(v1 - 8) + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = type metadata accessor for MessagePacker();
  uint64_t v32 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v33 = v5;
  uint64_t v34 = (v4 + v32 + 16) & ~v32;
  uint64_t v31 = *(void *)(*(void *)(v5 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 36);
  uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v30 = v2;
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + v7[9];
    uint64_t v10 = sub_248174E60();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = v6 + v7[10];
    uint64_t v13 = sub_248174EA0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v15 = v6 + v7[11];
    uint64_t v16 = sub_248174EF0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v2 = v30;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v18 = v34;
  swift_release();
  uint64_t v19 = v0 + v34 + *(int *)(v33 + 36);
  if (!v8(v19, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + v7[9];
    uint64_t v21 = sub_248174E60();
    uint64_t v22 = *(void *)(v21 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v23 = v19 + v7[10];
    uint64_t v24 = sub_248174EA0();
    uint64_t v25 = *(void *)(v24 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24)) {
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    }
    uint64_t v26 = v19 + v7[11];
    uint64_t v27 = sub_248174EF0();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v18 = v34;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27)) {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v31 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | v32 | 7);
}

uint64_t sub_2480B74C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for MessageUnpacker() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for MessagePacker() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v18 = *(void *)(v1 + 16);
  uint64_t v9 = v1 + v4;
  uint64_t v10 = *(void *)(v1 + v5);
  uint64_t v11 = v1 + v6;
  uint64_t v13 = *(void *)(v1 + v6);
  uint64_t v12 = *(void *)(v11 + 8);
  uint64_t v14 = v1 + v8;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  void *v15 = v2;
  v15[1] = sub_247FCB950;
  return sub_2480A7794(a1, v18, v17, v9, v10, v13, v12, v14);
}

uint64_t AISDeviceClass.rawValue.getter()
{
  return qword_248184D40[*v0];
}

AppleIDSetup::AISDeviceClass_optional __swiftcall AISDeviceClass.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (rawValue > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return (AppleIDSetup::AISDeviceClass_optional)rawValue;
  }
  if ((rawValue - 1) > 0xA) {
    *uint64_t v1 = 0;
  }
  else {
    *uint64_t v1 = byte_248184D2E[(int)rawValue - 1];
  }
  return (AppleIDSetup::AISDeviceClass_optional)rawValue;
}

AppleIDSetup::AISDeviceClass __swiftcall AISDeviceClass.init(value:)(Swift::Int value)
{
  if (value < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (value > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return (char)value;
  }
  if ((value - 1) > 0xA) {
    *uint64_t v1 = 0;
  }
  else {
    *uint64_t v1 = byte_248184D2E[(int)value - 1];
  }
  return (char)value;
}

AppleIDSetup::AISDeviceClass __swiftcall AISDeviceClass.init(deviceModel:)(Swift::String deviceModel)
{
  uint64_t v2 = v1;
  uint64_t v3 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  int v4 = GestaltProductTypeStringToDeviceClass();

  if (v4 == 100)
  {
    char v6 = 4;
  }
  else
  {
    AppleIDSetup::AISDeviceClass result = AISDeviceClass.init(rawValue:)(v4).value;
    char v6 = v7;
    if (v7 == 8) {
      char v6 = 0;
    }
  }
  *uint64_t v2 = v6;
  return result;
}

AppleIDSetup::AISDeviceClass __swiftcall AISDeviceClass.init(deviceClass:)(AppleIDSetup::AISDeviceClass deviceClass)
{
  if ((deviceClass - 1) > 0xAu) {
    *uint64_t v1 = 0;
  }
  else {
    *uint64_t v1 = byte_248184D2E[(char)(deviceClass - 1)];
  }
  return deviceClass;
}

char static AISDeviceClass.current.getter@<W0>(unsigned char *a1@<X8>)
{
  id v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    uint64_t v3 = v2;
    int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    LOBYTE(v2) = AISDeviceClass.init(rawValue:)(deviceClassNumber);
    char v5 = v7;
    if (v7 == 8) {
      char v5 = 0;
    }
    *a1 = v5;
  }
  else
  {
    __break(1u);
  }
  return (char)v2;
}

unint64_t AISDeviceClass.deviceName.getter()
{
  unint64_t result = 0x656369766564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656E6F685069;
      break;
    case 2:
      unint64_t result = 1684099177;
      break;
    case 3:
      unint64_t result = 0x646F50656D6F48;
      break;
    case 4:
      unint64_t result = 6512973;
      break;
    case 5:
      unint64_t result = 0x565420656C707041;
      break;
    case 6:
      unint64_t result = 0x615720656C707041;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_2480B7974(char *a1, char *a2)
{
  return qword_248184D40[*a1] == qword_248184D40[*a2];
}

unint64_t sub_2480B799C()
{
  unint64_t result = qword_2692D9C58;
  if (!qword_2692D9C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9C58);
  }
  return result;
}

uint64_t sub_2480B79F0()
{
  return sub_248175EC0();
}

uint64_t sub_2480B7A40()
{
  return sub_248175E70();
}

uint64_t sub_2480B7A78()
{
  return sub_248175EC0();
}

AppleIDSetup::AISDeviceClass_optional sub_2480B7AC4(Swift::Int *a1)
{
  return AISDeviceClass.init(rawValue:)(*a1);
}

void sub_2480B7ACC(void *a1@<X8>)
{
  *a1 = qword_248184D40[*v1];
}

unint64_t sub_2480B7AE4(void *a1)
{
  a1[1] = sub_2480B7B1C();
  a1[2] = sub_2480B7B70();
  unint64_t result = sub_2480B7BC4();
  a1[3] = result;
  return result;
}

unint64_t sub_2480B7B1C()
{
  unint64_t result = qword_2692D9C60;
  if (!qword_2692D9C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9C60);
  }
  return result;
}

unint64_t sub_2480B7B70()
{
  unint64_t result = qword_2692D9C68;
  if (!qword_2692D9C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9C68);
  }
  return result;
}

unint64_t sub_2480B7BC4()
{
  unint64_t result = qword_2692D9C70;
  if (!qword_2692D9C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9C70);
  }
  return result;
}

uint64_t sub_2480B7C18()
{
  return sub_2481752C0();
}

uint64_t sub_2480B7C78()
{
  return sub_248175260();
}

unsigned char *storeEnumTagSinglePayload for AISDeviceClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480B7D94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AISDeviceClass()
{
  return &type metadata for AISDeviceClass;
}

unint64_t sub_2480B7DCC()
{
  unint64_t result = qword_2692D9C78;
  if (!qword_2692D9C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9C78);
  }
  return result;
}

uint64_t ValueIntercept.__allocating_init(dropBehavior:)(char *a1)
{
  uint64_t v2 = swift_allocObject();
  ValueIntercept.init(dropBehavior:)(a1);
  return v2;
}

BOOL static ValueIntercept.DropBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ValueIntercept.DropBehavior.hash(into:)()
{
  return sub_248175E70();
}

uint64_t sub_2480B7EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2480B8E08(a1, a2, a3, (void (*)(unsigned char *))ValueIntercept.DropBehavior.hash(into:));
}

void ValueIntercept.dropBehavior.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 112);
}

uint64_t sub_2480B7ED8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175370();
  uint64_t v4 = sub_248175700();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2480B7FB0(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175370();
  uint64_t v4 = sub_248175700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

BOOL sub_2480B8090()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v0 = sub_248175370();
  uint64_t v1 = sub_248175700();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v7 - v3;
  sub_2480B7ED8((uint64_t)&v7 - v3);
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v0 - 8) + 48))(v4, 1, v0) != 1;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

unsigned char *ValueIntercept.init(dropBehavior:)(char *a1)
{
  char v2 = *a1;
  swift_defaultActor_initialize();
  uint64_t v3 = &v1[*(void *)(*(void *)v1 + 104)];
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v4 = sub_248175370();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v1[112] = v2;
  return v1;
}

uint64_t sub_2480B8298(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_2480B82E0, v1, 0);
}

uint64_t sub_2480B82E0()
{
  sub_2480B898C();
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[4] + 80);
  type metadata accessor for ValueIntercept();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  void *v4 = v0;
  v4[1] = sub_2480B8434;
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  return MEMORY[0x270FA2360](v5, v1, WitnessTable, 0xD000000000000012, 0x8000000248190800, sub_2480B8CB8, v6, v2);
}

uint64_t sub_2480B8434()
{
  uint64_t v2 = (void *)*v1;
  v2[6] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return MEMORY[0x270FA2498](sub_2480B8568, v3, 0);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_2480B8568()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2480B8580(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v2 = sub_248175370();
  uint64_t v3 = sub_248175700();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = *(void *)(v2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v8 - v4, a1, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, v2);
  return sub_2480B7FB0((uint64_t)v5);
}

uint64_t sub_2480B86AC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = *(void *)(*(void *)v2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v5 = sub_248175370();
  uint64_t v6 = sub_248175700();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v14 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v19 - v15;
  sub_2480B7ED8((uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    char v18 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v5);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v5);
    sub_2480B7FB0((uint64_t)v10);
    sub_248175360();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v5);
    char v18 = 0;
  }
  char *v20 = v18;
  return result;
}

uint64_t sub_2480B8938()
{
  return sub_2480B898C();
}

uint64_t sub_2480B898C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  v15[0] = v1;
  uint64_t v2 = sub_248175370();
  uint64_t v3 = sub_248175700();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v15 - v9;
  uint64_t v11 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v15 - v12;
  sub_2480B7ED8((uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v2) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, v2);
  if (v0[112])
  {
    type metadata accessor for ValueIntercept.DroppedPending();
    swift_getWitnessTable();
    v15[3] = swift_allocError();
    sub_248175350();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v2);
    sub_2480B7FB0((uint64_t)v7);
  }
  else
  {
    type metadata accessor for ValueIntercept.DroppedNew();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v2);
}

uint64_t type metadata accessor for ValueIntercept()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2480B8CB8(uint64_t a1)
{
  return sub_2480B8580(a1);
}

uint64_t ValueIntercept.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175370();
  uint64_t v2 = sub_248175700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ValueIntercept.__deallocating_deinit()
{
  ValueIntercept.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t ValueIntercept.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_2480B8DB8()
{
  return ValueIntercept.unownedExecutor.getter();
}

BOOL ValueIntercept.Decision.isConsumed.getter()
{
  return (*v0 & 1) == 0;
}

uint64_t ValueIntercept.Decision.isRejected.getter()
{
  return *v0;
}

uint64_t sub_2480B8DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2480B8E08(a1, a2, a3, (void (*)(unsigned char *))ValueIntercept.Decision.hash(into:));
}

uint64_t sub_2480B8E08(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_248175E50();
  a4(v6);
  return sub_248175EC0();
}

uint64_t sub_2480B8E4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480B8E68()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480B8E84()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175370();
  uint64_t result = sub_248175700();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ValueIntercept(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ValueIntercept);
}

uint64_t dispatch thunk of ValueIntercept.isWaitingForInterception.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ValueIntercept.__allocating_init(dropBehavior:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ValueIntercept.waitForIntercept()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 152) + **(int **)(*(void *)v1 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  void *v4 = v2;
  v4[1] = sub_247FCB950;
  return v6(a1);
}

uint64_t dispatch thunk of ValueIntercept.offerToIntercept(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of ValueIntercept.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t type metadata accessor for ValueIntercept.DropBehavior()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ValueIntercept.DroppedNew()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for ValueIntercept.DroppedPending()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_2480B9140(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480B920CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for ValueIntercept.Decision()
{
  return __swift_instantiateGenericMetadata();
}

void *_objcCodable.wrappedValue.getter()
{
  uint64_t v0 = (void *)sub_2480AA924();
  id v1 = v0;
  return v0;
}

void _objcCodable.wrappedValue.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*_objcCodable.wrappedValue.modify())()
{
  return nullsub_1;
}

BOOL static _objcCodable.== infix(_:_:)(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  int v3 = *a2;
  BOOL result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    id v6 = v3;
    id v7 = v2;
    char v8 = sub_2481756C0();

    return v8 & 1;
  }
  return result;
}

uint64_t static _objcCodableDictionary<>.== infix(_:_:)(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_unknownObjectRetain_n();
      char v3 = sub_248175100();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      char v3 = 0;
    }
  }
  else
  {
    char v3 = v2 == 0;
  }
  return v3 & 1;
}

uint64_t NSObject<>.into()@<X0>(void *a1@<X8>)
{
  type metadata accessor for DefaultObjcArchiver();
  uint64_t result = type metadata accessor for DefaultObjcUnarchiver();
  *a1 = v1;
  return result;
}

id _customObjcCodable.wrappedValue.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t (*_customObjcCodable.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _customObjcCodable.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_2480B945C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for DefaultObjcArchiver();
  uint64_t result = type metadata accessor for DefaultObjcUnarchiver();
  *a2 = a1;
  return result;
}

id sub_2480B9494@<X0>(void *a1@<X8>)
{
  type metadata accessor for _objcCodable();
  id v2 = (void *)sub_2480AA924();
  *a1 = v2;
  return v2;
}

void sub_2480B94F0(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  _objcCodable.wrappedValue.setter(v1);
}

uint64_t _objcCodable.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  type metadata accessor for DefaultObjcArchiver();
  uint64_t result = type metadata accessor for DefaultObjcUnarchiver();
  *a2 = a1;
  return result;
}

uint64_t sub_2480B9558(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x5664657070617277 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_248175CE0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2480B95F8()
{
  return 0x5664657070617277;
}

uint64_t sub_2480B9618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480B9558(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2480B9648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_247F9B600();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2480B9678(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2480B96CC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t _objcCodable.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v9 = *(void *)(a2 + 16);
  type metadata accessor for _objcCodable.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_248175C20();
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v9 - v5;
  uint64_t v7 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  uint64_t v12 = v7;
  type metadata accessor for DefaultObjcArchiver();
  type metadata accessor for DefaultObjcUnarchiver();
  type metadata accessor for _customObjcCodable();
  uint64_t v11 = &protocol witness table for DefaultObjcArchiver;
  swift_getWitnessTable();
  sub_248175BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

void _objcCodable.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v13 = a2;
  type metadata accessor for _objcCodable.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_248175B40();
  uint64_t v12 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v6 = (char *)&v11 - v5;
  type metadata accessor for DefaultObjcArchiver();
  type metadata accessor for DefaultObjcUnarchiver();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v7 = v12;
    char v8 = v13;
    type metadata accessor for DefaultObjcArchiver();
    type metadata accessor for DefaultObjcUnarchiver();
    type metadata accessor for _customObjcCodable();
    uint64_t v14 = &protocol witness table for DefaultObjcUnarchiver;
    swift_getWitnessTable();
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v4);
    id v9 = v15;
    id v10 = v15;
    void *v8 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
}

void sub_2480B9B18(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_2480B9B34(void *a1, uint64_t a2)
{
  return _objcCodable.encode(to:)(a1, a2);
}

uint64_t _customObjcCodable<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F40();
  if (v6)
  {
    uint64_t v7 = *(uint64_t (**)(void))(a3 + 16);
    id v8 = v6;
    uint64_t v9 = v7();
    if (v4)
    {
    }
    else
    {
      uint64_t v11 = v9;
      unint64_t v12 = v10;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      sub_2480168C4();
      sub_248175D10();

      sub_247FB6CCC(v11, v12);
    }
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    sub_248175D20();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_2480B9C9C(void *a1, uint64_t a2, uint64_t a3)
{
  return _customObjcCodable<>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t _customObjcCodable<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v23 = a3;
  uint64_t v27 = a2;
  uint64_t v8 = sub_2481758A0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F00();
  if (v5) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v20[1] = v11;
  uint64_t v21 = a1;
  uint64_t v12 = v27;
  v20[0] = v9;
  __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  sub_248016918();
  sub_248175CF0();
  uint64_t v13 = v24;
  unint64_t v14 = v25;
  sub_247FB6C20(v24, v25);
  uint64_t v15 = (uint64_t)v21;
  uint64_t v16 = static ObjcUnarchiver.unarchivedObject<A>(assumingType:from:backing:)(v12, v13, v14, (uint64_t)v21, v23, v12, v22);
  sub_247FB6CCC(v13, v14);
  if (!v16)
  {
    swift_allocError();
    uint64_t v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v19 = v12;
    sub_248175880();
    (*(void (**)(uint64_t *, void, uint64_t))(v20[0] + 104))(v19, *MEMORY[0x263F8DCC0], v8);
    swift_willThrow();
    sub_247FB6CCC(v13, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    a1 = v21;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_247FB6CCC(v13, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  *a5 = v16;
  return __swift_destroy_boxed_opaque_existential_1(v15);
}

uint64_t sub_2480BA094@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return _customObjcCodable<>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 32), *(void *)(a3 - 8), a4);
}

uint64_t static _objcCodable<>.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1) {
    BOOL v2 = *a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2) {
    char v3 = 0;
  }
  else {
    char v3 = sub_2481750C0();
  }
  return v3 & 1;
}

uint64_t sub_2480BA114(void *a1, void *a2)
{
  return static _objcCodable<>.< infix(_:_:)(a1, a2);
}

uint64_t _objcCodable.description.getter()
{
  if (!*v0) {
    return 7104878;
  }
  id v1 = objc_msgSend(*v0, sel_description);
  uint64_t v2 = sub_248175160();

  return v2;
}

uint64_t _objcCodable.debugDescription.getter()
{
  return sub_2481756F0();
}

BOOL sub_2480BA1E0(void **a1, void **a2)
{
  return static _objcCodable.== infix(_:_:)(a1, a2);
}

uint64_t _objcCodable.hash(into:)()
{
  return sub_248175710();
}

uint64_t _objcCodable.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t sub_2480BA2C0()
{
  return sub_248175EC0();
}

uint64_t _objcCodableDictionary.wrappedValue.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t _objcCodableDictionary.wrappedValue.setter(uint64_t a1)
{
  uint64_t result = swift_unknownObjectRelease();
  *id v1 = a1;
  return result;
}

uint64_t (*_objcCodableDictionary.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t _objcCodableDictionary.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t _objcCodableDictionary.encode(to:)(void *a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F40();
  if (v2)
  {
    char v3 = self;
    v11[0] = 0;
    swift_unknownObjectRetain();
    id v4 = objc_msgSend(v3, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v2, 1, v11);
    id v5 = v11[0];
    if (v4)
    {
      id v6 = (void *)sub_2481747D0();
      uint64_t v8 = v7;

      v11[0] = v6;
      v11[1] = v8;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
      sub_2480168C4();
      sub_248175D10();
      swift_unknownObjectRelease();
      sub_247FB6CCC((uint64_t)v6, (unint64_t)v8);
    }
    else
    {
      uint64_t v9 = v5;
      sub_248174730();

      swift_willThrow();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    sub_248175D20();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_2480BA508(void *a1)
{
  return _objcCodableDictionary.encode(to:)(a1);
}

uint64_t _objcCodableDictionary.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v6 = sub_2481758A0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F00();
  if (!v3)
  {
    uint64_t v23 = v9;
    uint64_t v24 = a1;
    uint64_t v21 = v7;
    uint64_t v10 = v25;
    uint64_t v22 = a3;
    __swift_project_boxed_opaque_existential_1(v27, v27[3]);
    sub_248016918();
    sub_248175CF0();
    uint64_t v11 = v26[0];
    unint64_t v12 = v26[1];
    sub_2480D5240();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_248185000;
    *(void *)(inited + 32) = sub_247FB3398(0, &qword_2692D9EA0);
    *(void *)(inited + 40) = sub_247FB3398(0, (unint64_t *)&qword_2692D9EA8);
    *(void *)(inited + 48) = sub_247FB3398(0, &qword_2692D9EB0);
    *(void *)(inited + 56) = sub_247FB3398(0, &qword_2692D9EB8);
    *(void *)(inited + 64) = sub_247FB3398(0, &qword_2692D9EC0);
    *(void *)(inited + 72) = sub_247FB3398(0, &qword_2692D9EC8);
    *(void *)(inited + 80) = sub_247FB3398(0, &qword_2692D9ED0);
    *(void *)(inited + 88) = sub_247FB3398(0, &qword_2692D9ED8);
    *(void *)(inited + 96) = sub_247FB3398(0, &qword_2692D9EE0);
    *(void *)(inited + 104) = sub_247FB3398(0, &qword_2692D9EE8);
    sub_247FB3398(0, qword_2692D9EF0);
    sub_247FB6C20(v11, v12);
    sub_2480BAAE4(inited);
    swift_bridgeObjectRelease();
    sub_248175600();
    sub_247FB6CCC(v11, v12);
    swift_bridgeObjectRelease();
    if (v26[3])
    {
      if (swift_dynamicCast())
      {
        sub_247FB6CCC(v11, v12);
        uint64_t v17 = v27[7];
        uint64_t v14 = v22;
        uint64_t v15 = (uint64_t)v24;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
        void *v14 = v17;
        return __swift_destroy_boxed_opaque_existential_1(v15);
      }
    }
    else
    {
      sub_24804FEB8((uint64_t)v26);
    }
    swift_allocError();
    uint64_t v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v19 = v10;
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(v21 + 104))(v19, *MEMORY[0x263F8DCC0], v6);
    swift_willThrow();
    sub_247FB6CCC(v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    a1 = v24;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2480BAAE4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_248015118(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v9;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA100);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA108);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_248015118(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_248015118(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      *(void *)(v2 + 8 * v6 + 32) = v8;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2480BAC14@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return _objcCodableDictionary.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_2480BAC30(void *a1, uint64_t *a2)
{
  return static _objcCodableDictionary<>.== infix(_:_:)(a1, a2);
}

uint64_t _objcCodableDictionary<>.hash(into:)()
{
  return sub_248175710();
}

uint64_t _objcCodableDictionary<>.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t sub_2480BAD08()
{
  return _objcCodableDictionary<>.hashValue.getter();
}

uint64_t sub_2480BAD10()
{
  return _objcCodableDictionary<>.hash(into:)();
}

uint64_t sub_2480BAD18()
{
  return sub_248175EC0();
}

uint64_t type metadata accessor for _objcCodable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _objcCodable.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _customObjcCodable()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_2480BAE04()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480BAE20()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480BAE70()
{
  return 8;
}

void *sub_2480BAE7C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void **sub_2480BAE90(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void sub_2480BAEC0(id *a1)
{
}

void **sub_2480BAEC8(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **sub_2480BAF00(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

void *sub_2480BAF34(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_2480BAF64()
{
  return swift_unknownObjectRelease();
}

void *sub_2480BAF6C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

void *sub_2480BAFA8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t type metadata accessor for _objcCodableDictionary()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_2480BAFF4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2480BB090);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480BB0B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480BB0D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480BB0F0()
{
  return swift_getWitnessTable();
}

id static AISAppleIDSetupError.createError(code:message:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA110);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24817A5E0;
  *(void *)(inited + 32) = sub_248175160();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  *(void *)(inited + 64) = sub_248175160();
  *(void *)(inited + 72) = v8;
  *(void *)(inited + 80) = a2;
  *(void *)(inited + 88) = a3;
  swift_bridgeObjectRetain_n();
  unint64_t v9 = sub_247FB4770(inited);
  uint64_t v10 = qword_2481855E0[v5];
  sub_247FB4FF4(v9);
  swift_bridgeObjectRelease();
  id v11 = objc_allocWithZone(MEMORY[0x263F087E8]);
  unint64_t v12 = (void *)sub_248175130();
  uint64_t v13 = (void *)sub_248174FF0();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v11, sel_initWithDomain_code_userInfo_, v12, v10, v13);

  return v14;
}

uint64_t AISAppleIDSetupError.rawValue.getter()
{
  return qword_2481855E0[*v0];
}

uint64_t static AISAppleIDSetupError.reason(_:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_userInfo);
  uint64_t v3 = sub_248175010();

  uint64_t v4 = sub_248175160();
  if (!*(void *)(v3 + 16) || (unint64_t v6 = sub_247FB64A4(v4, v5), (v7 & 1) == 0))
  {
    long long v18 = 0u;
    long long v19 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_247FB8B14(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
LABEL_7:
    sub_24804FEB8((uint64_t)&v18);
    goto LABEL_8;
  }
  if (swift_dynamicCast()) {
    return v17;
  }
LABEL_8:
  id v8 = objc_msgSend(a1, sel_userInfo);
  uint64_t v9 = sub_248175010();

  uint64_t v10 = sub_248175160();
  if (*(void *)(v9 + 16) && (unint64_t v12 = sub_247FB64A4(v10, v11), (v13 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(v9 + 56) + 32 * v12, (uint64_t)&v18);
  }
  else
  {
    long long v18 = 0u;
    long long v19 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v19 + 1))
  {
    sub_24804FEB8((uint64_t)&v18);
    goto LABEL_16;
  }
  if (!swift_dynamicCast())
  {
LABEL_16:
    id v15 = objc_msgSend(a1, sel_debugDescription);
    uint64_t v14 = sub_248175160();

    return v14;
  }
  return v17;
}

AppleIDSetup::AISAppleIDSetupError_optional __swiftcall AISAppleIDSetupError.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue <= -1003)
  {
    if (rawValue == -1101)
    {
      *int64_t v1 = 4;
      return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
    }
    if (rawValue == -1100)
    {
      *int64_t v1 = 3;
      return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
    }
LABEL_12:
    *int64_t v1 = 5;
    return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
  }
  if (rawValue == -1000)
  {
    *int64_t v1 = 0;
    return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
  }
  if (rawValue == -1001)
  {
    *int64_t v1 = 1;
    return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
  }
  if (rawValue != -1002) {
    goto LABEL_12;
  }
  *int64_t v1 = 2;
  return (AppleIDSetup::AISAppleIDSetupError_optional)rawValue;
}

BOOL sub_2480BB504(char *a1, char *a2)
{
  return qword_2481855E0[*a1] == qword_2481855E0[*a2];
}

uint64_t sub_2480BB528()
{
  return sub_248175EC0();
}

uint64_t sub_2480BB578()
{
  return sub_248175E70();
}

uint64_t sub_2480BB5B0()
{
  return sub_248175EC0();
}

AppleIDSetup::AISAppleIDSetupError_optional sub_2480BB5FC(Swift::Int *a1)
{
  return AISAppleIDSetupError.init(rawValue:)(*a1);
}

void sub_2480BB604(void *a1@<X8>)
{
  *a1 = qword_2481855E0[*v1];
}

unint64_t sub_2480BB620()
{
  unint64_t result = qword_2692DA118;
  if (!qword_2692DA118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA118);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AISAppleIDSetupError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480BB740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AISAppleIDSetupError()
{
  return &type metadata for AISAppleIDSetupError;
}

uint64_t static SymptomReport.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_248175CE0() & 1) == 0) {
    return 0;
  }
  return sub_2480BC92C(v4, v5, v2, v3);
}

AISSymptomReport __swiftcall SymptomReport.into()()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v3 = (objc_class *)sub_248175910();
    uint64_t v7 = *(void *)(v1 + 16);
    id v8 = (unsigned __int8 *)(v1 + 120);
    while (v7)
    {
      unint64_t v13 = *((void *)v8 - 1);
      if (v13 <= 3) {
        uint64_t v9 = qword_248185868[v13];
      }
      else {
        uint64_t v9 = 0;
      }
      unsigned int v10 = *v8;
      v8 += 96;
      id v11 = objc_allocWithZone((Class)AISSymptom);
      swift_bridgeObjectRetain();
      unint64_t v12 = (void *)sub_248175130();
      swift_bridgeObjectRelease();
      objc_msgSend(v11, sel_initWithAltDSID_priority_problemFlag_errorInfo_, v12, v10, v9, sub_248175D60());
      swift_unknownObjectRelease();

      sub_2481758F0();
      sub_248175920();
      sub_248175930();
      uint64_t v3 = (objc_class *)sub_248175900();
      --v7;
      if (!--v2)
      {
        swift_release();
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_10:
    unint64_t v14 = SymptomReport.combinedLegacyProblemFlags.getter();
    id v15 = objc_allocWithZone((Class)AISSymptomReport);
    uint64_t v16 = (void *)sub_248175130();
    swift_bridgeObjectRelease();
    sub_2480355D4();
    uint64_t v17 = (void *)sub_2481752E0();
    swift_bridgeObjectRelease();
    long long v18 = (objc_class *)objc_msgSend(v15, sel_initWithAltDSID_symptoms_combinedProblemFlags_, v16, v17, v14);

    uint64_t v3 = v18;
  }
  result._combinedProblemFlags = v6;
  result._symptoms = v5;
  result._altDSID = v4;
  result.super.Class isa = v3;
  return result;
}

uint64_t SymptomReport.altDSID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SymptomReport.accountID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1[1];
  *(void *)a1 = *v1;
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  return swift_bridgeObjectRetain();
}

unint64_t SymptomReport.unorderedSymptoms.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_retain();
  swift_retain();
  return sub_248013528(v1, v2);
}

uint64_t SymptomReport.symptoms.getter()
{
  return swift_retain();
}

BOOL SymptomReport.isHealthy.getter()
{
  return *(void *)(*(void *)(v0 + 24) + 16) == 0;
}

BOOL SymptomReport.needsRepair.getter()
{
  return *(void *)(*(void *)(v0 + 24) + 16) != 0;
}

unint64_t SymptomReport.allSymptomKinds.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  sub_2480BCEB0();
  swift_retain();
  swift_retain();
  unint64_t result = sub_248175550();
  unint64_t v9 = result;
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v5 = 112;
    while (v4 < *(void *)(v1 + 16))
    {
      unint64_t v6 = *(void *)(v1 + v5);
      ++v4;
      sub_247FEFB98(v6);
      sub_248053BCC(&v8, v6);
      unint64_t result = sub_247FEFBA8(v8);
      v5 += 96;
      if (v2 == v4)
      {
        swift_release();
        swift_release();
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v7 = result;
    swift_release();
    swift_release();
    return v7;
  }
  return result;
}

unint64_t SymptomReport.combinedLegacyProblemFlags.getter()
{
  unint64_t result = SymptomReport.allSymptomKinds.getter();
  int64_t v1 = 0;
  uint64_t v2 = 0;
  unint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v10 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    if (v10 < v7)
    {
      unint64_t v11 = *(void *)(v3 + 8 * v10);
      ++v1;
      if (v11) {
        goto LABEL_24;
      }
      int64_t v1 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_28;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v1);
      if (v11) {
        goto LABEL_24;
      }
      int64_t v1 = v10 + 2;
      if (v10 + 2 >= v7) {
        goto LABEL_28;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v1);
      if (v11) {
        goto LABEL_24;
      }
      int64_t v1 = v10 + 3;
      if (v10 + 3 >= v7) {
        goto LABEL_28;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v1);
      if (v11) {
        goto LABEL_24;
      }
      int64_t v1 = v10 + 4;
      if (v10 + 4 >= v7) {
        goto LABEL_28;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v1);
      if (v11)
      {
LABEL_24:
        unint64_t v6 = (v11 - 1) & v11;
        for (unint64_t i = __clz(__rbit64(v11)) + (v1 << 6); ; unint64_t i = v8 | (v1 << 6))
        {
          unint64_t v13 = *(void *)(*(void *)(result + 48) + 8 * i);
          if (v13 > 3)
          {
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            v2 |= qword_248185868[v13];
            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v8 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v12 = v10 + 5;
      if (v12 < v7)
      {
        unint64_t v11 = *(void *)(v3 + 8 * v12);
        if (v11)
        {
          int64_t v1 = v12;
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v1 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            goto LABEL_30;
          }
          if (v1 >= v7) {
            break;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v1);
          ++v12;
          if (v11) {
            goto LABEL_24;
          }
        }
      }
    }
LABEL_28:
    swift_release();
    return v2;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t SymptomReport.init(altDSID:symptoms:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int64_t v7 = sub_2480BCF04(a3);
  uint64_t v8 = sub_2480BCFFC();
  uint64_t v9 = sub_2480BD004((uint64_t)v7, 0, 1, v8);
  unint64_t v10 = v7[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (v10 <= 0xF)
  {
    uint64_t result = swift_release();
    uint64_t v9 = 0;
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v9;
  a4[3] = v7;
  return result;
}

double SymptomReport.combine(with:)@<D0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  BOOL v8 = v7 == *a1 && v6 == a1[1];
  if (v8 || (sub_248175CE0() & 1) != 0)
  {
    *a2 = v7;
    a2[1] = v6;
    a2[2] = v5;
    a2[3] = v4;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

uint64_t SymptomReport.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_retain();
  sub_247FDEDB8(a1, v3);
  swift_release();
  return swift_release();
}

uint64_t sub_2480BBF6C()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x44495344746C61;
  }
}

uint64_t sub_2480BBFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480BDE04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480BBFD4(uint64_t a1)
{
  unint64_t v2 = sub_2480BD84C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480BC010(uint64_t a1)
{
  unint64_t v2 = sub_2480BD84C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymptomReport.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA128);
  uint64_t v12 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480BD84C();
  sub_248175F60();
  LOBYTE(v13) = 0;
  sub_248175BB0();
  if (!v2)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v10;
    char v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA138);
    sub_2480BD8A0(&qword_2692DA140, (void (*)(void))sub_247FF3D48);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t SymptomReport.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_248175E50();
  sub_2481751A0();
  sub_247FDEDB8((uint64_t)v3, v1);
  return sub_248175EC0();
}

uint64_t SymptomReport.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA148);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  BOOL v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480BD84C();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v15[0]) = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA138);
  char v16 = 1;
  sub_2480BD8A0(&qword_2692DA150, (void (*)(void))sub_247FF3DF0);
  swift_bridgeObjectRetain();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v15[0];
  uint64_t v13 = v15[1];
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  swift_retain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480BC4E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SymptomReport.init(from:)(a1, a2);
}

uint64_t sub_2480BC500(void *a1)
{
  return SymptomReport.encode(to:)(a1);
}

uint64_t sub_2480BC518(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_248175CE0() & 1) == 0) {
    return 0;
  }
  return sub_2480BC92C(v4, v5, v2, v3);
}

uint64_t sub_2480BC5A4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_248175E50();
  sub_2481751A0();
  sub_247FDEDB8((uint64_t)v3, v1);
  return sub_248175EC0();
}

uint64_t sub_2480BC608(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  sub_2481751A0();
  return sub_247FDEDB8(a1, v3);
}

uint64_t sub_2480BC64C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_248175E50();
  sub_2481751A0();
  sub_247FDEDB8((uint64_t)v3, v1);
  return sub_248175EC0();
}

uint64_t SymptomReport.description.getter()
{
  strcpy((char *)v1, "SymptomReport(");
  swift_bridgeObjectRetain();
  IdMSAccount.ID.description.getter();
  sub_2481751D0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  SymptomReport.allSymptomKinds.getter();
  sub_2480BCEB0();
  sub_248175540();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  return v1[0];
}

uint64_t SymptomReport.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = SymptomReport.description.getter();
  swift_retain();
  swift_retain();
  sub_2480BD614(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2480BC874()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = SymptomReport.description.getter();
  swift_retain();
  swift_retain();
  sub_2480BD614(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRetain();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2480BC92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v42 = a4 + 32;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v7 = v6;
  unint64_t v8 = 0;
  uint64_t v9 = a2 + 64;
  unint64_t v43 = v5;
  while (1)
  {
    uint64_t v62 = v7;
    if (v8 == v5)
    {
      int v56 = 0;
      unint64_t v10 = v5;
      unint64_t v11 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v12 = 0;
      uint64_t v54 = 0;
      uint64_t v52 = 0;
      uint64_t v53 = 0;
      uint64_t v49 = 0;
      uint64_t v55 = 0;
      uint64_t v63 = 0;
      uint64_t v64 = 0;
      unint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      if (!v7) {
        goto LABEL_30;
      }
      goto LABEL_8;
    }
    if (v8 >= v5) {
      goto LABEL_42;
    }
    uint64_t v24 = v42 + 96 * v8;
    int v56 = *(unsigned __int8 *)(v24 + 88);
    uint64_t v25 = *(void *)(v24 + 72);
    unint64_t v59 = *(void *)(v24 + 80);
    uint64_t v26 = *(void *)(v24 + 56);
    uint64_t v27 = *(void *)(v24 + 64);
    uint64_t v28 = *(void *)(v24 + 40);
    uint64_t v29 = *(void *)(v24 + 48);
    uint64_t v30 = *(void *)(v24 + 24);
    uint64_t v31 = *(void *)(v24 + 32);
    uint64_t v32 = *(void *)(v24 + 8);
    uint64_t v55 = *(void *)(v24 + 16);
    uint64_t v63 = *(void *)v24;
    swift_bridgeObjectRetain();
    uint64_t v64 = v32;
    uint64_t v33 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v26;
    unint64_t v11 = v59;
    swift_bridgeObjectRetain();
    sub_247FEFB98(v59);
    uint64_t v7 = v62;
    if (!v62) {
      break;
    }
    uint64_t v49 = v30;
    uint64_t v50 = v27;
    uint64_t v51 = v25;
    uint64_t v52 = v31;
    uint64_t v53 = v33;
    uint64_t v54 = v29;
    unint64_t v10 = v8 + 1;
    uint64_t v12 = v34;
LABEL_8:
    if (!v7)
    {
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x2480BCEA0);
    }
    unint64_t v45 = v10;
    int v48 = *(unsigned __int8 *)(v9 + 56);
    uint64_t v14 = *(void *)(v9 + 40);
    unint64_t v13 = *(void *)(v9 + 48);
    uint64_t v16 = *(void *)(v9 + 24);
    uint64_t v47 = *(void *)(v9 + 32);
    uint64_t v18 = *(void *)(v9 + 8);
    uint64_t v20 = *(void *)(v9 - 8);
    uint64_t v57 = *(void *)v9;
    uint64_t v60 = *(void *)(v9 + 16);
    uint64_t v22 = *(void *)(v9 - 24);
    uint64_t v46 = *(void *)(v9 - 16);
    uint64_t v23 = *(void *)(v9 - 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FEFB98(v13);
    if (!v64)
    {
      uint64_t v19 = v57;
      uint64_t v17 = v60;
      uint64_t v21 = v46;
      uint64_t v15 = v47;
      goto LABEL_30;
    }
    if (!v22)
    {
      uint64_t v39 = v54;
      uint64_t v31 = v52;
      uint64_t v40 = v53;
      uint64_t v27 = v50;
      uint64_t v25 = v51;
      uint64_t v30 = v49;
      goto LABEL_38;
    }
    uint64_t v44 = v12;
    if ((v63 != v23 || v64 != v22) && (sub_248175CE0() & 1) == 0) {
      goto LABEL_34;
    }
    switch(v11)
    {
      case 0uLL:
        if (v13) {
          goto LABEL_33;
        }
        goto LABEL_23;
      case 1uLL:
        if (v13 != 1) {
          goto LABEL_33;
        }
        goto LABEL_23;
      case 2uLL:
        if (v13 != 2) {
          goto LABEL_33;
        }
LABEL_23:
        sub_247FEFB98(v13);
        sub_247FEFBA8(v11);
        unint64_t v36 = v11;
        goto LABEL_26;
      case 3uLL:
        if (v13 != 3) {
          goto LABEL_33;
        }
        unint64_t v36 = 3;
LABEL_26:
        sub_247FEFBA8(v13);
        sub_247FEFBA8(v36);
        goto LABEL_27;
      default:
        if (v13 < 4)
        {
LABEL_33:
          sub_247FEFB98(v13);
          sub_247FEFB98(v11);
          sub_247FEFBA8(v11);
          sub_247FEFBA8(v13);
LABEL_34:
          sub_2480BDF5C(v23, v22, v46, v20, v57, v18, v60, v16, v47, v14, v13);
          sub_2480BDF5C(v63, v64, v55, v49, v52, v53, v54, v44, v50, v51, v11);
LABEL_35:
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          return 0;
        }
        sub_247FEFB98(v13);
        sub_247FEFB98(v11);
        sub_247FEFB98(v13);
        sub_247FEFB98(v11);
        char v35 = sub_24815D598(v11, v13);
        sub_247FEFBA8(v11);
        sub_247FEFBA8(v13);
        sub_247FEFBA8(v13);
        sub_247FEFBA8(v11);
        if ((v35 & 1) == 0) {
          goto LABEL_34;
        }
LABEL_27:
        sub_2480BDF5C(v23, v22, v46, v20, v57, v18, v60, v16, v47, v14, v13);
        sub_2480BDF5C(v63, v64, v55, v49, v52, v53, v54, v44, v50, v51, v11);
        uint64_t v7 = v62 - 1;
        v9 += 96;
        unint64_t v5 = v43;
        unint64_t v8 = v45;
        if (v56 != v48) {
          goto LABEL_35;
        }
        break;
    }
  }
  uint64_t v40 = v33;
  uint64_t v39 = v29;
  uint64_t v12 = v34;
  if (v64)
  {
LABEL_38:
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_2480BDF5C(v63, v64, v55, v30, v31, v40, v39, v12, v27, v25, v11);
    return 0;
  }
  unint64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
LABEL_30:
  uint64_t v58 = v19;
  uint64_t v61 = v17;
  uint64_t v37 = v21;
  uint64_t v38 = v15;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v22)
  {
    sub_2480BDF5C(v23, v22, v37, v20, v58, v18, v61, v16, v38, v14, v13);
    return 0;
  }
  return 1;
}

unint64_t sub_2480BCEB0()
{
  unint64_t result = qword_2692DA120;
  if (!qword_2692DA120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA120);
  }
  return result;
}

void *sub_2480BCF04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA188);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 96);
  unint64_t v5 = sub_2480BD334(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_247FBB1C4();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2480BCFFC()
{
  return 0;
}

uint64_t sub_2480BD004(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = MEMORY[0x24C572F90](*(void *)(a1 + 16));
  uint64_t v9 = 0;
  if (a3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = a2;
  }
  if (v10 <= v8) {
    uint64_t v10 = v8;
  }
  if (v10 <= a4) {
    uint64_t v11 = a4;
  }
  else {
    uint64_t v11 = v10;
  }
  if (v11 >= 5)
  {
    uint64_t v9 = MEMORY[0x24C572FA0]();
    sub_2480BD08C(a1, (void *)(v9 + 16), v9 + 32);
  }
  return v9;
}

uint64_t sub_2480BD08C(uint64_t result, void *a2, uint64_t a3)
{
  uint64_t v16 = *(void *)(result + 16);
  if (v16)
  {
    uint64_t v4 = 0;
    uint64_t v15 = result + 32;
    do
    {
      unint64_t v5 = *(void *)(v15 + 96 * v4 + 80);
      sub_248175E50();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FEFB98(v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      switch(v5)
      {
        case 0uLL:
        case 1uLL:
        case 2uLL:
        case 3uLL:
          sub_248175E70();
          break;
        default:
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_247FDE2AC((uint64_t)v20, v5);
          sub_247FEFBA8(v5);
          break;
      }
      sub_248175E80();
      uint64_t v6 = sub_248175EC0();
      uint64_t v7 = 1 << *a2;
      BOOL v8 = __OFSUB__(v7, 1);
      uint64_t v9 = v7 - 1;
      if (v8)
      {
        __break(1u);
        JUMPOUT(0x2480BD324);
      }
      uint64_t v19 = v4;
      uint64_t v10 = v9 & v6;
      uint64_t v11 = sub_248174A70();
      uint64_t v18 = v12;
      uint64_t v14 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FEFBA8(v5);
      v20[0] = a2;
      v20[1] = a3;
      void v20[2] = v10;
      uint64_t v21 = v11;
      uint64_t v22 = v18;
      uint64_t v23 = v14;
      char v24 = 0;
      while (v21)
        sub_248174A90();
      unint64_t result = sub_248174A80();
      ++v4;
    }
    while (v19 + 1 != v16);
  }
  return result;
}

void *sub_2480BD334(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 56);
  uint64_t v4 = a4 + 56;
  uint64_t v5 = v6;
  uint64_t v31 = v4;
  uint64_t v7 = -1 << *(unsigned char *)(v4 - 24);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v5;
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *unint64_t result = a4;
    result[1] = v31;
    result[2] = ~v7;
    result[3] = v12;
    result[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  uint64_t v28 = -1 << *(unsigned char *)(v4 - 24);
  uint64_t v29 = result;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v30 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v15 = v14 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v19 = *(void *)(a4 + 48) + 96 * v15;
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 72);
    unint64_t v23 = *(void *)(v19 + 80);
    char v24 = *(unsigned char *)(v19 + 88);
    long long v25 = *(_OWORD *)(v19 + 24);
    long long v26 = *(_OWORD *)(v19 + 40);
    long long v27 = *(_OWORD *)(v19 + 56);
    *(void *)uint64_t v11 = *(void *)v19;
    *(void *)(v11 + 8) = v20;
    *(void *)(v11 + 16) = v21;
    *(_OWORD *)(v11 + 24) = v25;
    *(_OWORD *)(v11 + 40) = v26;
    *(_OWORD *)(v11 + 56) = v27;
    *(void *)(v11 + 72) = v22;
    *(void *)(v11 + 80) = v23;
    *(unsigned char *)(v11 + 88) = v24;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FEFB98(v23);
      goto LABEL_38;
    }
    v11 += 96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = (void *)sub_247FEFB98(v23);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v16 >= v30) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v31 + 8 * v16);
    if (!v17)
    {
      v12 += 2;
      if (v16 + 1 >= v30)
      {
        unint64_t v9 = 0;
        int64_t v12 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v31 + 8 * v12);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v30) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v31 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v12 = v16 + 3;
        if (v16 + 3 < v30)
        {
          unint64_t v17 = *(void *)(v31 + 8 * v12);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v12;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v30)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v31 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v30)
              {
                unint64_t v9 = 0;
                int64_t v12 = v30 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v31 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v16 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v28;
      unint64_t result = v29;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v12 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2480BD614(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_retain();
    swift_retain();
    uint64_t v4 = (uint64_t *)(a2 + 64);
    char v5 = 1;
    do
    {
      uint64_t v8 = *(v4 - 4);
      uint64_t v9 = *(v4 - 3);
      uint64_t v10 = *(v4 - 1);
      uint64_t v11 = v4[1];
      uint64_t v19 = *v4;
      uint64_t v20 = *(v4 - 2);
      uint64_t v12 = v4[3];
      uint64_t v13 = v4[5];
      uint64_t v17 = v4[4];
      uint64_t v18 = v4[2];
      unint64_t v14 = v4[6];
      char v16 = *((unsigned char *)v4 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FEFB98(v14);
      if ((v5 & 1) == 0) {
        sub_2481751D0();
      }
      v4 += 12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA180);
      uint64_t v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_24817B010;
      *(void *)(v6 + 56) = &type metadata for Symptom;
      uint64_t v7 = swift_allocObject();
      *(void *)(v6 + 32) = v7;
      *(void *)(v7 + 16) = v8;
      *(void *)(v7 + 24) = v9;
      *(void *)(v7 + 32) = v20;
      *(void *)(v7 + 40) = v10;
      *(void *)(v7 + 48) = v19;
      *(void *)(v7 + 56) = v11;
      *(void *)(v7 + 64) = v18;
      *(void *)(v7 + 72) = v12;
      *(void *)(v7 + 80) = v17;
      *(void *)(v7 + 88) = v13;
      *(void *)(v7 + 96) = v14;
      *(unsigned char *)(v7 + 104) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FEFB98(v14);
      sub_248175E40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FEFBA8(v14);
      char v5 = 0;
      --v2;
    }
    while (v2);
    swift_release();
    swift_release();
  }
  sub_2481751D0();
  return 91;
}

unint64_t sub_2480BD84C()
{
  unint64_t result = qword_2692DA130;
  if (!qword_2692DA130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA130);
  }
  return result;
}

uint64_t sub_2480BD8A0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DA138);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2480BD910(void *a1)
{
  a1[1] = sub_247FE0E2C();
  a1[2] = sub_247FE0AEC();
  unint64_t result = sub_2480BD948();
  a1[3] = result;
  return result;
}

unint64_t sub_2480BD948()
{
  unint64_t result = qword_2692DA158;
  if (!qword_2692DA158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA158);
  }
  return result;
}

unint64_t sub_2480BD9A0()
{
  unint64_t result = qword_2692DA160;
  if (!qword_2692DA160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA160);
  }
  return result;
}

uint64_t destroy for SymptomReport()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for SymptomReport(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SymptomReport(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SymptomReport(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SymptomReport(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymptomReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymptomReport()
{
  return &type metadata for SymptomReport;
}

unsigned char *storeEnumTagSinglePayload for SymptomReport.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480BDCC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymptomReport.CodingKeys()
{
  return &type metadata for SymptomReport.CodingKeys;
}

unint64_t sub_2480BDD00()
{
  unint64_t result = qword_2692DA168;
  if (!qword_2692DA168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA168);
  }
  return result;
}

unint64_t sub_2480BDD58()
{
  unint64_t result = qword_2692DA170;
  if (!qword_2692DA170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA170);
  }
  return result;
}

unint64_t sub_2480BDDB0()
{
  unint64_t result = qword_2692DA178;
  if (!qword_2692DA178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA178);
  }
  return result;
}

uint64_t sub_2480BDE04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44495344746C61 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000248192510)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2480BDEF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) >= 4uLL) {
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 105, 7);
}

void sub_2480BDF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FEFBA8(a11);
  }
}

uint64_t CUPasswordType.into(withPassword:)@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  char v4 = 1;
  uint64_t result = 4;
  switch(a2)
  {
    case 1:
      break;
    case 2:
      uint64_t result = 6;
      break;
    case 3:
      uint64_t result = 8;
      break;
    case 4:
      char v4 = 0;
      uint64_t result = 4;
      break;
    case 5:
      if (a1) {
        uint64_t result = sub_2481751B0();
      }
      else {
        uint64_t result = 0;
      }
      char v4 = 0;
      break;
    case 7:
      char v4 = 2;
      uint64_t result = 1;
      break;
    case 8:
      uint64_t result = 2;
      goto LABEL_11;
    default:
      uint64_t result = 0;
LABEL_11:
      char v4 = 2;
      break;
  }
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v4;
  return result;
}

uint64_t *DiscoveryModel.CodeType.replacingUnknown(with:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2;
  unsigned int v4 = *((unsigned __int8 *)v2 + 8);
  if (v4 >= 2 && v3 == 0)
  {
    LOBYTE(v4) = *((unsigned char *)result + 8);
    uint64_t v3 = *result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t DiscoveryModel.CodeType.into()()
{
  unint64_t v1 = *(void *)v0;
  if (!*(unsigned char *)(v0 + 8))
  {
    v1 -= 4;
    if (v1 < 5)
    {
      BOOL v2 = (unsigned int *)&unk_248185894;
      return v2[v1];
    }
    return 5;
  }
  if (*(unsigned char *)(v0 + 8) != 1)
  {
    BOOL v2 = (unsigned int *)&unk_248185888;
    return v2[v1];
  }
  v1 -= 4;
  if (v1 >= 5) {
    return 5;
  }
  BOOL v2 = (unsigned int *)&unk_2481858A8;
  return v2[v1];
}

uint64_t AISChildSetupFlowResult.error.getter()
{
  return 0;
}

id AISChildSetupFlowResult.authResponse.getter()
{
  return *(id *)(v0 + OBJC_IVAR___AISChildSetupFlowResult_authResponse);
}

id AISChildSetupFlowResult.__allocating_init(authResponse:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___AISChildSetupFlowResult_authResponse] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISChildSetupFlowResult.init(authResponse:)(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR___AISChildSetupFlowResult_authResponse] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISChildSetupFlowResult.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AISChildSetupFlowResult.init()()
{
}

id AISChildSetupFlowResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AISChildSetupFlowResult()
{
  return self;
}

uint64_t method lookup function for AISChildSetupFlowResult(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISChildSetupFlowResult);
}

uint64_t dispatch thunk of AISChildSetupFlowResult.__allocating_init(authResponse:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t CBDevice.into()@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_identifier);
  if (v3)
  {
    unsigned int v4 = v3;
    uint64_t v5 = sub_248175160();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  unsigned __int16 v8 = (unsigned __int16)objc_msgSend(v1, sel_proximityServicePSM);
  unsigned __int8 v9 = objc_msgSend(v1, sel_nearbyActionType);
  unsigned int v10 = objc_msgSend(v1, sel_nearbyActionFlags);
  uint64_t result = AISDeviceClass.init(deviceClass:)((Swift::UInt8)objc_msgSend(v1, sel_nearbyActionDeviceClass));
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  *(_WORD *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 20) = v9;
  *(_DWORD *)(a1 + 24) = v10;
  *(_WORD *)(a1 + 28) = v12;
  return result;
}

uint64_t BLEDevice.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BLEDevice.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *objc_super v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*BLEDevice.identifier.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.proximityServicePSM.getter()
{
  return *(unsigned __int16 *)(v0 + 16);
}

uint64_t BLEDevice.proximityServicePSM.setter(uint64_t result)
{
  *(_WORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*BLEDevice.proximityServicePSM.modify())()
{
  return nullsub_1;
}

void BLEDevice.nearbyActionPayload.getter(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 24);
  __int16 v3 = *(_WORD *)(v1 + 28);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 20);
  *(_DWORD *)(a1 + 4) = v2;
  *(_WORD *)(a1 + 8) = v3;
}

uint64_t BLEDevice.nearbyActionPayload.setter(uint64_t result)
{
  int v2 = *(_DWORD *)(result + 4);
  __int16 v3 = *(_WORD *)(result + 8);
  *(unsigned char *)(v1 + 20) = *(unsigned char *)result;
  *(_DWORD *)(v1 + 24) = v2;
  *(_WORD *)(v1 + 28) = v3;
  return result;
}

uint64_t (*BLEDevice.nearbyActionPayload.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.init(identifier:proximityServicePSM:nearbyActionPayload:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, __int16 a3@<W2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a4;
  int v6 = *((_DWORD *)a4 + 1);
  __int16 v7 = *((_WORD *)a4 + 4);
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(_WORD *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 20) = v5;
  *(_DWORD *)(a5 + 24) = v6;
  *(_WORD *)(a5 + 28) = v7;
  return result;
}

uint64_t BLEDevice.hash(into:)()
{
  if (*(void *)(v0 + 8))
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_248175E80();
  }
  sub_248175E90();
  sub_248175E80();
  sub_248175EA0();
  sub_248175E70();
  return sub_248175E80();
}

uint64_t sub_2480BE620()
{
  if (*v0) {
    return 0xD000000000000013;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_2480BE688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480BFD74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480BE6B0(uint64_t a1)
{
  unint64_t v2 = sub_2480BF4F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480BE6EC(uint64_t a1)
{
  unint64_t v2 = sub_2480BF4F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t BLEDevice.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA198);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v25 = *(unsigned __int16 *)(v1 + 16);
  int v7 = *(unsigned __int8 *)(v1 + 20);
  int v18 = *(_DWORD *)(v1 + 24);
  int v19 = v7;
  int v8 = *(unsigned __int8 *)(v1 + 28);
  int v16 = *(unsigned __int8 *)(v1 + 29);
  int v17 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480BF4F8();
  sub_248175F60();
  char v28 = 0;
  uint64_t v9 = v20;
  sub_248175B60();
  if (!v9)
  {
    char v11 = v16;
    char v10 = v17;
    int v13 = v18;
    char v12 = v19;
    char v27 = 1;
    sub_248175C00();
    char v21 = v12;
    int v22 = v13;
    char v23 = v10;
    char v24 = v11;
    char v26 = 2;
    sub_2480BF54C();
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t BLEDevice.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_248175E50();
  sub_248175E80();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  sub_248175E90();
  sub_248175E80();
  sub_248175EA0();
  sub_248175E70();
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t BLEDevice.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA1B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480BF4F8();
  sub_248175F20();
  if (!v2)
  {
    char v22 = 0;
    uint64_t v9 = sub_248175A70();
    uint64_t v11 = v10;
    char v21 = 1;
    swift_bridgeObjectRetain();
    int v19 = sub_248175B10();
    char v20 = 2;
    sub_2480BF5A0();
    sub_248175AF0();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    char v13 = v16[4];
    int v14 = v17;
    __int16 v15 = v18;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(_WORD *)(a2 + 16) = v19;
    *(unsigned char *)(a2 + 20) = v13;
    *(_DWORD *)(a2 + 24) = v14;
    *(_WORD *)(a2 + 28) = v15;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480BEC34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BLEDevice.init(from:)(a1, a2);
}

uint64_t sub_2480BEC4C(void *a1)
{
  return BLEDevice.encode(to:)(a1);
}

uint64_t sub_2480BEC70()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_248175E50();
  sub_248175E80();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  sub_248175E90();
  sub_248175E80();
  sub_248175EA0();
  sub_248175E70();
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t BLEDevice.NearbyActionPayload.type.getter()
{
  return *v0;
}

uint64_t BLEDevice.NearbyActionPayload.type.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*BLEDevice.NearbyActionPayload.type.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.NearbyActionPayload.flags.getter()
{
  return *(unsigned int *)(v0 + 4);
}

uint64_t BLEDevice.NearbyActionPayload.flags.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  return result;
}

uint64_t (*BLEDevice.NearbyActionPayload.flags.modify())()
{
  return nullsub_1;
}

void BLEDevice.NearbyActionPayload.deviceClass.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *BLEDevice.NearbyActionPayload.deviceClass.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*BLEDevice.NearbyActionPayload.deviceClass.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.NearbyActionPayload.problemFlags.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t BLEDevice.NearbyActionPayload.problemFlags.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 9) = result;
  return result;
}

uint64_t (*BLEDevice.NearbyActionPayload.problemFlags.modify())()
{
  return nullsub_1;
}

uint64_t BLEDevice.NearbyActionPayload.init(type:flags:deviceClass:problemFlags:)@<X0>(uint64_t result@<X0>, int a2@<W1>, char *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  char v5 = *a3;
  *(unsigned char *)a5 = result;
  *(_DWORD *)(a5 + 4) = a2;
  *(unsigned char *)(a5 + 8) = v5;
  *(unsigned char *)(a5 + 9) = a4;
  return result;
}

uint64_t BLEDevice.NearbyActionPayload.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175EF0();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    char v5 = sub_248175C60();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    int v6 = sub_248175C70();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    Swift::Int v7 = sub_248175C50();
    AISDeviceClass.init(rawValue:)(v7);
    int v8 = v14;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
    char v10 = sub_248175C60();
    if (v8 == 8) {
      char v11 = 0;
    }
    else {
      char v11 = v8;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    *(unsigned char *)a2 = v5;
    *(_DWORD *)(a2 + 4) = v6;
    *(unsigned char *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 9) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t BLEDevice.NearbyActionPayload.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F30();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  sub_248175C90();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_248175CA0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_248175C80();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_248175C90();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t BLEDevice.NearbyActionPayload.hash(into:)()
{
  return sub_248175E80();
}

uint64_t BLEDevice.NearbyActionPayload.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t sub_2480BF1F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BLEDevice.NearbyActionPayload.init(from:)(a1, a2);
}

uint64_t sub_2480BF208(void *a1)
{
  return BLEDevice.NearbyActionPayload.encode(to:)(a1);
}

uint64_t sub_2480BF224()
{
  return sub_248175EC0();
}

uint64_t sub_2480BF2B4()
{
  return sub_248175E80();
}

uint64_t sub_2480BF31C()
{
  return sub_248175EC0();
}

BOOL _s12AppleIDSetup9BLEDeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int16 *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 20);
  int v6 = *(_DWORD *)(a1 + 24);
  uint64_t v7 = *(char *)(a1 + 28);
  int v8 = *(unsigned __int8 *)(a1 + 29);
  uint64_t v9 = *(void *)(a2 + 8);
  int v10 = *(unsigned __int16 *)(a2 + 16);
  int v11 = *(unsigned __int8 *)(a2 + 20);
  int v12 = *(_DWORD *)(a2 + 24);
  uint64_t v13 = *(char *)(a2 + 28);
  int v14 = *(unsigned __int8 *)(a2 + 29);
  if (!v3)
  {
    BOOL result = 0;
    if (v9) {
      return result;
    }
    goto LABEL_10;
  }
  if (v9)
  {
    if (*(void *)a1 == *(void *)a2 && v3 == v9)
    {
      if (v4 != v10) {
        return 0;
      }
      return v5 == v11 && v6 == v12 && qword_248185C20[v7] == qword_248185C20[v13] && v8 == v14;
    }
    char v16 = sub_248175CE0();
    BOOL result = 0;
    if ((v16 & 1) == 0) {
      return result;
    }
LABEL_10:
    if (v4 != v10) {
      return result;
    }
    return v5 == v11 && v6 == v12 && qword_248185C20[v7] == qword_248185C20[v13] && v8 == v14;
  }
  return 0;
}

BOOL _s12AppleIDSetup9BLEDeviceV19NearbyActionPayloadV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2 || *((_DWORD *)a1 + 1) != *((_DWORD *)a2 + 1)) {
    return 0;
  }
  return qword_248185C20[(char)a1[8]] == qword_248185C20[(char)a2[8]] && a1[9] == a2[9];
}

unint64_t sub_2480BF4F8()
{
  unint64_t result = qword_2692DA1A0;
  if (!qword_2692DA1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1A0);
  }
  return result;
}

unint64_t sub_2480BF54C()
{
  unint64_t result = qword_2692DA1A8;
  if (!qword_2692DA1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1A8);
  }
  return result;
}

unint64_t sub_2480BF5A0()
{
  unint64_t result = qword_2692DA1B8;
  if (!qword_2692DA1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1B8);
  }
  return result;
}

uint64_t sub_2480BF5F4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480BF7C8(a1, a2, a3, (uint64_t (*)(void))sub_2480BF634, (uint64_t (*)(void))sub_2480BF688, (uint64_t (*)(void))sub_2480BF6DC);
}

unint64_t sub_2480BF634()
{
  unint64_t result = qword_2692DA1C0;
  if (!qword_2692DA1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1C0);
  }
  return result;
}

unint64_t sub_2480BF688()
{
  unint64_t result = qword_2692DA1C8;
  if (!qword_2692DA1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1C8);
  }
  return result;
}

unint64_t sub_2480BF6DC()
{
  unint64_t result = qword_2692DA1D0;
  if (!qword_2692DA1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1D0);
  }
  return result;
}

unint64_t sub_2480BF734()
{
  unint64_t result = qword_2692DA1D8;
  if (!qword_2692DA1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1D8);
  }
  return result;
}

uint64_t sub_2480BF788(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480BF7C8(a1, a2, a3, (uint64_t (*)(void))sub_2480BF5A0, (uint64_t (*)(void))sub_2480BF54C, (uint64_t (*)(void))sub_2480BF81C);
}

uint64_t sub_2480BF7C8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_2480BF81C()
{
  unint64_t result = qword_2692DA1E0;
  if (!qword_2692DA1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1E0);
  }
  return result;
}

unint64_t sub_2480BF874()
{
  unint64_t result = qword_2692DA1E8;
  if (!qword_2692DA1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1E8);
  }
  return result;
}

uint64_t initializeWithCopy for BLEDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 20) = *(void *)(a2 + 20);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BLEDevice(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(unsigned char *)(a1 + 29) = *(unsigned char *)(a2 + 29);
  return a1;
}

__n128 __swift_memcpy30_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 14) = *(_OWORD *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for BLEDevice(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_WORD *)(a1 + 28) = *(_WORD *)(a2 + 28);
  return a1;
}

uint64_t getEnumTagSinglePayload for BLEDevice(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 30)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BLEDevice(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 30) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 30) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BLEDevice()
{
  return &type metadata for BLEDevice;
}

uint64_t __swift_memcpy10_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for BLEDevice.NearbyActionPayload(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 8;
  int v5 = v3 - 8;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BLEDevice.NearbyActionPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 7;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BLEDevice.NearbyActionPayload()
{
  return &type metadata for BLEDevice.NearbyActionPayload;
}

unsigned char *storeEnumTagSinglePayload for BLEDevice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480BFC34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BLEDevice.CodingKeys()
{
  return &type metadata for BLEDevice.CodingKeys;
}

unint64_t sub_2480BFC70()
{
  unint64_t result = qword_2692DA1F0;
  if (!qword_2692DA1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1F0);
  }
  return result;
}

unint64_t sub_2480BFCC8()
{
  unint64_t result = qword_2692DA1F8;
  if (!qword_2692DA1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA1F8);
  }
  return result;
}

unint64_t sub_2480BFD20()
{
  unint64_t result = qword_2692DA200;
  if (!qword_2692DA200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA200);
  }
  return result;
}

uint64_t sub_2480BFD74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002481925B0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002481925D0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2480BFECC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v5);
  int v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_248175ED0();
  MEMORY[0x270FA5388](v13);
  __int16 v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_248175350();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_248175360();
  }
}