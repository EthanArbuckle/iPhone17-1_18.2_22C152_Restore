uint64_t XPCSession.send<A, B>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_2480C0134, 0, 0);
}

uint64_t sub_2480C0134()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  long long v4 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = v4;
  *(void *)(v3 + 48) = v1;
  *(void *)(v3 + 56) = v2;
  v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  void *v5 = v0;
  v5[1] = sub_2480C0230;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v7, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2480C064C, v3, v6);
}

uint64_t sub_2480C0230()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FC0034, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t XPCSession.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return MEMORY[0x270FA2498](sub_2480C0394, 0, 0);
}

uint64_t sub_2480C0394()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  uint64_t v5 = sub_248174CE0();
  *uint64_t v4 = v0;
  v4[1] = sub_24804B3C0;
  uint64_t v6 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v6, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2480C07E0, v3, v5);
}

uint64_t sub_2480C0498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v19[0] = a3;
  v19[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v12 = sub_248175370();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v15 = (char *)v19 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v19 - v14, a1, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = a4;
  *((void *)v17 + 3) = a5;
  *((void *)v17 + 4) = a6;
  *((void *)v17 + 5) = a7;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v17[v16], v15, v12);
  sub_248174C40();
  return swift_release();
}

uint64_t sub_2480C064C(uint64_t a1)
{
  return sub_2480C0498(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_2480C065C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA228);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_248174C30();
  return swift_release();
}

uint64_t sub_2480C07E0(uint64_t a1)
{
  return sub_2480C065C(a1);
}

uint64_t sub_2480C07EC(uint64_t a1, uint64_t a2)
{
  return sub_2480C0C10(a1, a2, MEMORY[0x263F8F440], &qword_2692DA220, &qword_2692DA228);
}

uint64_t XPCSession.send(_:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_2480C0838, 0, 0);
}

uint64_t sub_2480C0838()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = sub_248174CB0();
  *uint64_t v2 = v0;
  v2[1] = sub_2480C092C;
  uint64_t v4 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v4, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2480C0BB0, v1, v3);
}

uint64_t sub_2480C092C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FBF7C0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_2480C0A68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA230);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_248174C20();
  return swift_release();
}

uint64_t sub_2480C0BB0(uint64_t a1)
{
  return sub_2480C0A68(a1);
}

unint64_t sub_2480C0BB8()
{
  unint64_t result = qword_2692D98C8;
  if (!qword_2692D98C8)
  {
    sub_248174CA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_2692D98C8);
  }
  return result;
}

uint64_t sub_2480C0C10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t *a5)
{
  v24 = a5;
  uint64_t v25 = a2;
  uint64_t v8 = sub_248174CA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a3(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v15 = (char *)&v23 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_247FBB338(a1, (uint64_t)v18, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v19(v11, v18, v8);
    sub_2480C0BB8();
    uint64_t v20 = swift_allocError();
    v19(v21, v11, v8);
    uint64_t v26 = v20;
    __swift_instantiateConcreteTypeFromMangledName(v24);
    return sub_248175350();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    __swift_instantiateConcreteTypeFromMangledName(v24);
    return sub_248175360();
  }
}

uint64_t sub_2480C0E68()
{
  return objectdestroy_44Tm(&qword_2692DA230);
}

uint64_t sub_2480C0E74(uint64_t a1)
{
  return sub_2480C0ED0(a1, &qword_2692DA230, MEMORY[0x263F8F418], &qword_2692DA238);
}

uint64_t sub_2480C0E9C()
{
  return objectdestroy_44Tm(&qword_2692DA228);
}

uint64_t sub_2480C0EA8(uint64_t a1)
{
  return sub_2480C0ED0(a1, &qword_2692DA228, MEMORY[0x263F8F440], &qword_2692DA220);
}

uint64_t sub_2480C0ED0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_2480C0C10(a1, v4 + ((*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), a3, a4, a2);
}

uint64_t sub_2480C0F5C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v1 = sub_248175370();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2480C100C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v2 = sub_248175370();
  return sub_2480BFECC(a1, v2);
}

uint64_t HandshakeCommand.Request.isKeepAlive.getter()
{
  return *v0;
}

uint64_t HandshakeCommand.Request.isKeepAlive.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.isKeepAlive.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.minSupportedVersion.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t HandshakeCommand.Request.minSupportedVersion.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.minSupportedVersion.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.maxSupportedVersion.getter()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t HandshakeCommand.Request.maxSupportedVersion.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

uint64_t (*HandshakeCommand.Request.maxSupportedVersion.modify())()
{
  return nullsub_1;
}

void HandshakeCommand.Request.deviceInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  char v10 = *(unsigned char *)(v1 + 72);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  sub_247FF6A2C(v2, v3, v4, v5, v6, v7);
}

__n128 HandshakeCommand.Request.deviceInfo.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  __n128 v6 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  char v4 = *((unsigned char *)a1 + 64);
  sub_247FF6B84(*(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
  *(_OWORD *)(v1 + 8) = v8;
  *(_OWORD *)(v1 + 24) = v7;
  __n128 result = v6;
  *(__n128 *)(v1 + 40) = v6;
  *(void *)(v1 + 56) = v2;
  *(void *)(v1 + 64) = v3;
  *(unsigned char *)(v1 + 72) = v4;
  return result;
}

uint64_t (*HandshakeCommand.Request.deviceInfo.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.selfAccountId.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  uint64_t v4 = v1[12];
  uint64_t v5 = v1[13];
  uint64_t v6 = v1[14];
  uint64_t v7 = v1[15];
  uint64_t v8 = v1[16];
  uint64_t v9 = v1[17];
  uint64_t v10 = v1[18];
  uint64_t v11 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_247F9819C(v2, v3);
}

__n128 HandshakeCommand.Request.selfAccountId.setter(long long *a1)
{
  long long v8 = *a1;
  long long v6 = a1[2];
  long long v7 = a1[1];
  __n128 v5 = (__n128)a1[3];
  uint64_t v2 = *((void *)a1 + 8);
  uint64_t v3 = *((void *)a1 + 9);
  sub_247F982A0(*(void *)(v1 + 80), *(void *)(v1 + 88));
  *(_OWORD *)(v1 + 80) = v8;
  *(_OWORD *)(v1 + 96) = v7;
  __n128 result = v5;
  *(_OWORD *)(v1 + 112) = v6;
  *(__n128 *)(v1 + 128) = v5;
  *(void *)(v1 + 144) = v2;
  *(void *)(v1 + 152) = v3;
  return result;
}

uint64_t (*HandshakeCommand.Request.selfAccountId.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Request.accountIDsByService.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 HandshakeCommand.Request.init(isKeepAlive:minSupportedVersion:maxSupportedVersion:deviceInfo:selfAccountId:accountIDsByService:)@<Q0>(char a1@<W0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *(unsigned char *)(a4 + 64);
  *(unsigned char *)a7 = a1;
  *(unsigned char *)(a7 + 1) = a2;
  *(unsigned char *)(a7 + 2) = a3;
  long long v8 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a7 + 8) = *(_OWORD *)a4;
  *(_OWORD *)(a7 + 24) = v8;
  long long v9 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a7 + 40) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a7 + 56) = v9;
  *(unsigned char *)(a7 + 72) = v7;
  long long v10 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a7 + 80) = *(_OWORD *)a5;
  *(_OWORD *)(a7 + 96) = v10;
  long long v11 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a7 + 112) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a7 + 128) = v11;
  __n128 result = *(__n128 *)(a5 + 64);
  *(__n128 *)(a7 + 144) = result;
  *(void *)(a7 + 160) = a6;
  return result;
}

uint64_t HandshakeCommand.Request.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  __n128 v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload
    || (type metadata accessor for V1Command.Request(0),
        int v6 = swift_getEnumCaseMultiPayload(),
        __n128 v5 = type metadata accessor for V1Command.Request,
        v6))
  {
    sub_247FF3E44(a1, v5);
    sub_247FF6B84(0, 0, 0, 0, 0, 0);
    sub_247F982A0(0, 0);
    sub_2480C148C((uint64_t)v13);
  }
  else
  {
    long long v8 = *(_OWORD *)(a1 + 144);
    v13[8] = *(_OWORD *)(a1 + 128);
    v13[9] = v8;
    uint64_t v14 = *(void *)(a1 + 160);
    long long v9 = *(_OWORD *)(a1 + 80);
    v13[4] = *(_OWORD *)(a1 + 64);
    v13[5] = v9;
    long long v10 = *(_OWORD *)(a1 + 112);
    v13[6] = *(_OWORD *)(a1 + 96);
    v13[7] = v10;
    long long v11 = *(_OWORD *)(a1 + 16);
    v13[0] = *(_OWORD *)a1;
    v13[1] = v11;
    long long v12 = *(_OWORD *)(a1 + 48);
    v13[2] = *(_OWORD *)(a1 + 32);
    v13[3] = v12;
    nullsub_1(v13);
  }
  return sub_2480C14C4((uint64_t)v13, a2);
}

double sub_2480C148C(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  return result;
}

uint64_t sub_2480C14C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t HandshakeCommand.Request.into()@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 144) = v2;
  *(void *)(a1 + 160) = *(void *)(v1 + 160);
  long long v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v3;
  long long v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  type metadata accessor for V1Command.Request(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t HandshakeCommand.Request.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[11];
  uint64_t v7 = v1[10];
  uint64_t v8 = v1[20];
  sub_248175E80();
  sub_248175E80();
  sub_248175E80();
  if (v3)
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    sub_248175E80();
    if (v4) {
      SetupReport.LocaleInfo.hash(into:)();
    }
  }
  sub_248175E80();
  if (!v5)
  {
    sub_248175E80();
    if (v8) {
      goto LABEL_6;
    }
    return sub_248175E80();
  }
  sub_248175E80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  sub_247F982A0(v7, v5);
  if (!v8) {
    return sub_248175E80();
  }
LABEL_6:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2480211E0(a1, v8);
  return swift_bridgeObjectRelease();
}

unint64_t sub_2480C1830(char a1)
{
  unint64_t result = 0x6C417065654B7369;
  switch(a1)
  {
    case 1:
    case 2:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6E49656369766564;
      break;
    case 4:
      unint64_t result = 0x6F636341666C6573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2480C1900()
{
  return sub_2480C1830(*v0);
}

uint64_t sub_2480C1908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480C5A64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480C1930(uint64_t a1)
{
  unint64_t v2 = sub_2480C3A58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480C196C(uint64_t a1)
{
  unint64_t v2 = sub_2480C3A58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HandshakeCommand.Request.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA248);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v46 = *(unsigned __int8 *)(v1 + 1);
  int v34 = *(unsigned __int8 *)(v1 + 2);
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v32 = *(void *)(v1 + 16);
  uint64_t v33 = v7;
  uint64_t v25 = *(void *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v30 = *(void *)(v1 + 40);
  uint64_t v31 = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v28 = *(void *)(v1 + 56);
  uint64_t v29 = v9;
  uint64_t v27 = *(void *)(v1 + 64);
  int v26 = *(unsigned __int8 *)(v1 + 72);
  uint64_t v15 = *(void *)(v1 + 80);
  uint64_t v16 = *(void *)(v1 + 88);
  uint64_t v24 = *(void *)(v1 + 96);
  uint64_t v23 = *(void *)(v1 + 104);
  uint64_t v22 = *(void *)(v1 + 112);
  uint64_t v21 = *(void *)(v1 + 120);
  uint64_t v20 = *(void *)(v1 + 128);
  uint64_t v19 = *(void *)(v1 + 136);
  uint64_t v18 = *(void *)(v1 + 144);
  uint64_t v10 = *(void *)(v1 + 160);
  uint64_t v17 = *(void *)(v1 + 152);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480C3A58();
  sub_248175F60();
  LOBYTE(v36) = 0;
  uint64_t v11 = v35;
  sub_248175BC0();
  if (!v11)
  {
    uint64_t v13 = v32;
    uint64_t v12 = v33;
    LOBYTE(v36) = 1;
    sub_248175BF0();
    LOBYTE(v36) = 2;
    sub_248175BF0();
    uint64_t v36 = v12;
    uint64_t v37 = v13;
    uint64_t v38 = v25;
    uint64_t v39 = v31;
    uint64_t v40 = v30;
    uint64_t v41 = v29;
    uint64_t v42 = v28;
    uint64_t v43 = v27;
    LOBYTE(v44) = v26;
    char v47 = 3;
    sub_247FF9CC8();
    sub_248175B90();
    uint64_t v36 = v15;
    uint64_t v37 = v16;
    uint64_t v38 = v24;
    uint64_t v39 = v23;
    uint64_t v40 = v22;
    uint64_t v41 = v21;
    uint64_t v42 = v20;
    uint64_t v43 = v19;
    uint64_t v44 = v18;
    uint64_t v45 = v17;
    char v47 = 4;
    sub_24801607C();
    sub_248175B90();
    uint64_t v36 = v10;
    char v47 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA258);
    sub_2480C3AAC();
    sub_248175B90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HandshakeCommand.Request.hashValue.getter()
{
  sub_248175E50();
  HandshakeCommand.Request.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t *HandshakeCommand.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA268);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2480C3A58();
  sub_248175F20();
  if (v2)
  {
    uint64_t v44 = v2;
    uint64_t v53 = 0;
    uint64_t v51 = 0;
    long long v52 = 0uLL;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    long long v50 = 0uLL;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v45 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    sub_247FF6B84(0, 0, v49, 0, 0, 0);
    return (uint64_t *)sub_247F982A0(v50, *((uint64_t *)&v50 + 1));
  }
  else
  {
    v64[0] = 0;
    int v10 = sub_248175AD0();
    v64[0] = 1;
    int v12 = sub_248175B00();
    int v42 = v10;
    v64[0] = 2;
    int v13 = sub_248175B00();
    v54[0] = 3;
    sub_247FF9D1C();
    sub_248175AA0();
    int v36 = v13;
    int v37 = v12;
    uint64_t v35 = a2;
    long long v14 = *(_OWORD *)v64;
    uint64_t v15 = *(void *)&v64[16];
    v54[0] = 4;
    int v41 = v66;
    long long v38 = *(_OWORD *)v65;
    long long v39 = *(_OWORD *)&v65[16];
    uint64_t v40 = *(void *)&v65[32];
    sub_247FF6A2C(*(uint64_t *)v64, *(uint64_t *)&v64[8], *(uint64_t *)&v64[16], *(uint64_t *)v65, *(uint64_t *)&v65[8], *(uint64_t *)&v65[16]);
    sub_248016124();
    sub_248175AA0();
    uint64_t v49 = v15;
    long long v34 = v14;
    long long v50 = *(_OWORD *)v64;
    uint64_t v16 = *(void *)v65;
    uint64_t v51 = *(void *)&v64[16];
    long long v52 = *(_OWORD *)&v65[8];
    uint64_t v17 = *(void *)&v65[32];
    uint64_t v53 = *(void *)&v65[24];
    uint64_t v19 = v66;
    uint64_t v18 = v67;
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA258);
    uint64_t v45 = v18;
    char v77 = 5;
    uint64_t v46 = v19;
    uint64_t v47 = v17;
    uint64_t v48 = v16;
    sub_247F9819C(v50, *((uint64_t *)&v50 + 1));
    sub_2480C3B44();
    sub_248175AA0();
    uint64_t v44 = 0;
    v42 &= 1u;
    LOBYTE(v17) = v42;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v33 = v78;
    v54[0] = v17;
    v54[1] = v37;
    v54[2] = v36;
    *(_OWORD *)&v54[8] = v34;
    uint64_t v20 = v50;
    *(void *)&v54[24] = v49;
    long long v55 = v38;
    long long v56 = v39;
    *(void *)&long long v57 = v40;
    BYTE8(v57) = v41;
    uint64_t v21 = *((void *)&v50 + 1);
    long long v58 = v50;
    *(void *)&long long v59 = v51;
    *((void *)&v59 + 1) = v48;
    long long v60 = v52;
    *(void *)&long long v61 = v53;
    *((void *)&v61 + 1) = v47;
    *(void *)&long long v62 = v46;
    *((void *)&v62 + 1) = v45;
    uint64_t v63 = v78;
    sub_2480C3C20((uint64_t *)v54);
    sub_247F982A0(v20, v21);
    long long v22 = v34;
    uint64_t v23 = v49;
    long long v24 = v38;
    long long v25 = v39;
    uint64_t v26 = v40;
    sub_247FF6B84(v34, *((uint64_t *)&v34 + 1), v49, v38, *((uint64_t *)&v38 + 1), v39);
    long long v27 = v62;
    uint64_t v28 = v35;
    *(_OWORD *)(v35 + 128) = v61;
    *(_OWORD *)(v28 + 144) = v27;
    *(void *)(v28 + 160) = v63;
    long long v29 = v58;
    *(_OWORD *)(v28 + 64) = v57;
    *(_OWORD *)(v28 + 80) = v29;
    long long v30 = v60;
    *(_OWORD *)(v28 + 96) = v59;
    *(_OWORD *)(v28 + 112) = v30;
    long long v31 = *(_OWORD *)&v54[16];
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v54;
    *(_OWORD *)(v28 + 16) = v31;
    long long v32 = v56;
    *(_OWORD *)(v28 + 32) = v55;
    *(_OWORD *)(v28 + 48) = v32;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    v64[0] = v42;
    v64[1] = v37;
    v64[2] = v36;
    *(_OWORD *)&v64[8] = v22;
    *(void *)v65 = v23;
    *(_OWORD *)&v65[8] = v24;
    *(_OWORD *)&v65[24] = v25;
    uint64_t v66 = v26;
    LOBYTE(v67) = v41;
    long long v68 = v50;
    uint64_t v69 = v51;
    uint64_t v70 = v48;
    long long v71 = v52;
    uint64_t v72 = v53;
    uint64_t v73 = v47;
    uint64_t v74 = v46;
    uint64_t v75 = v45;
    uint64_t v76 = v33;
    return sub_2480C3CD8((uint64_t *)v64);
  }
}

uint64_t sub_2480C2404@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 144) = v2;
  *(void *)(a1 + 160) = *(void *)(v1 + 160);
  long long v3 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v3;
  long long v4 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  type metadata accessor for V1Command.Request(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t *sub_2480C2494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HandshakeCommand.Request.init(from:)(a1, a2);
}

uint64_t sub_2480C24AC(void *a1)
{
  return HandshakeCommand.Request.encode(to:)(a1);
}

uint64_t sub_2480C24C8()
{
  sub_248175E50();
  HandshakeCommand.Request.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t sub_2480C250C()
{
  sub_248175E50();
  HandshakeCommand.Request.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t HandshakeCommand.Response.isKeepAlive.getter()
{
  return *v0;
}

uint64_t HandshakeCommand.Response.isKeepAlive.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*HandshakeCommand.Response.isKeepAlive.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.isAccepted.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t HandshakeCommand.Response.isAccepted.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*HandshakeCommand.Response.isAccepted.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.rejectionReason.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HandshakeCommand.Response.rejectionReason.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*HandshakeCommand.Response.rejectionReason.modify())()
{
  return nullsub_1;
}

uint64_t HandshakeCommand.Response.selectedVersion.getter()
{
  return *(unsigned __int8 *)(v0 + 24) | (*(unsigned __int8 *)(v0 + 25) << 8);
}

uint64_t HandshakeCommand.Response.selectedVersion.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  *(unsigned char *)(v1 + 25) = BYTE1(result) & 1;
  return result;
}

uint64_t (*HandshakeCommand.Response.selectedVersion.modify())()
{
  return nullsub_1;
}

void HandshakeCommand.Response.deviceInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  uint64_t v9 = *(void *)(v1 + 88);
  char v10 = *(unsigned char *)(v1 + 96);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  sub_247FF6A2C(v2, v3, v4, v5, v6, v7);
}

__n128 HandshakeCommand.Response.deviceInfo.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  __n128 v6 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  char v4 = *((unsigned char *)a1 + 64);
  sub_247FF6B84(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
  *(_OWORD *)(v1 + 32) = v8;
  *(_OWORD *)(v1 + 48) = v7;
  __n128 result = v6;
  *(__n128 *)(v1 + 64) = v6;
  *(void *)(v1 + 80) = v2;
  *(void *)(v1 + 88) = v3;
  *(unsigned char *)(v1 + 96) = v4;
  return result;
}

uint64_t (*HandshakeCommand.Response.deviceInfo.modify())()
{
  return nullsub_1;
}

__n128 HandshakeCommand.Response.init(isKeepAlive:isAccepted:rejectionReason:selectedVersion:deviceInfo:)@<Q0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *(unsigned char *)(a6 + 64);
  *(unsigned char *)a7 = a1;
  *(unsigned char *)(a7 + 1) = a2;
  *(void *)(a7 + 8) = a3;
  *(void *)(a7 + 16) = a4;
  *(unsigned char *)(a7 + 24) = a5;
  *(unsigned char *)(a7 + 25) = HIBYTE(a5) & 1;
  long long v8 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 32) = *(_OWORD *)a6;
  *(_OWORD *)(a7 + 48) = v8;
  __n128 result = *(__n128 *)(a6 + 32);
  long long v10 = *(_OWORD *)(a6 + 48);
  *(__n128 *)(a7 + 64) = result;
  *(_OWORD *)(a7 + 80) = v10;
  *(unsigned char *)(a7 + 96) = v7;
  return result;
}

__n128 HandshakeCommand.Response.init(from:)@<Q0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload == 1
    && (type metadata accessor for V1Command.Response(0),
        int v6 = swift_getEnumCaseMultiPayload(),
        uint64_t v5 = type metadata accessor for V1Command.Response,
        !v6))
  {
    unsigned __int8 v8 = a1[96];
    uint64_t v9 = 256;
    if (a1[1]) {
      uint64_t v10 = 256;
    }
    else {
      uint64_t v10 = 0;
    }
    if (!a1[25]) {
      uint64_t v9 = 0;
    }
    uint64_t v11 = v9 | a1[24];
    *(void *)a2 = v10 | *a1;
    *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
    *(void *)(a2 + 24) = v11;
    long long v12 = *((_OWORD *)a1 + 3);
    *(_OWORD *)(a2 + 32) = *((_OWORD *)a1 + 2);
    *(_OWORD *)(a2 + 48) = v12;
    __n128 result = *((__n128 *)a1 + 4);
    long long v13 = *((_OWORD *)a1 + 5);
    *(__n128 *)(a2 + 64) = result;
    *(_OWORD *)(a2 + 80) = v13;
    *(unsigned char *)(a2 + 96) = v8;
  }
  else
  {
    sub_247FF3E44((uint64_t)a1, v5);
    swift_bridgeObjectRelease();
    sub_247FF6B84(0, 0, 0, 0, 0, 0);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 1;
    result.n128_u64[0] = 0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 72) = 0u;
    *(_OWORD *)(a2 + 81) = 0u;
  }
  return result;
}

uint64_t HandshakeCommand.Response.into()@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 1);
  char v3 = *(unsigned char *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 25);
  char v5 = *(unsigned char *)(v1 + 96);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(unsigned char *)(a1 + 1) = v2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(unsigned char *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 25) = v4;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 96) = v5;
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t HandshakeCommand.Response.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 25);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 72);
  sub_248175E80();
  sub_248175E80();
  if (v1)
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_248175E80();
    if (v2) {
      goto LABEL_6;
    }
  }
  sub_248175E80();
LABEL_6:
  sub_248175E80();
  if (v3)
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    sub_248175E80();
    if (v5) {
      SetupReport.LocaleInfo.hash(into:)();
    }
  }
  return sub_248175E80();
}

uint64_t sub_2480C2B18()
{
  uint64_t result = 0x6C417065654B7369;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7470656363417369;
      break;
    case 2:
      uint64_t result = 0x6F697463656A6572;
      break;
    case 3:
      uint64_t result = 0x64657463656C6573;
      break;
    case 4:
      uint64_t result = 0x6E49656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480C2BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480C5D14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480C2C18(uint64_t a1)
{
  unint64_t v2 = sub_2480C4118();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480C2C54(uint64_t a1)
{
  unint64_t v2 = sub_2480C4118();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t HandshakeCommand.Response.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA278);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v37 = *(unsigned __int8 *)(v1 + 1);
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v25 = *(void *)(v1 + 16);
  uint64_t v26 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 24);
  int v23 = *(unsigned __int8 *)(v1 + 25);
  int v24 = v7;
  uint64_t v14 = *(void *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v15 = *(void *)(v1 + 40);
  uint64_t v16 = v8;
  uint64_t v17 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v21 = *(void *)(v1 + 72);
  uint64_t v22 = v9;
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t v19 = *(void *)(v1 + 88);
  uint64_t v20 = v10;
  int v18 = *(unsigned __int8 *)(v1 + 96);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480C4118();
  sub_248175F60();
  LOBYTE(v28) = 0;
  uint64_t v11 = v27;
  sub_248175BC0();
  if (!v11)
  {
    LOBYTE(v28) = 1;
    sub_248175BC0();
    LOBYTE(v28) = 2;
    sub_248175B60();
    LOBYTE(v28) = 3;
    sub_248175BA0();
    uint64_t v28 = v14;
    uint64_t v29 = v15;
    uint64_t v30 = v16;
    uint64_t v31 = v17;
    uint64_t v32 = v22;
    uint64_t v33 = v21;
    uint64_t v34 = v20;
    uint64_t v35 = v19;
    char v36 = v18;
    char v38 = 4;
    sub_247FF9CC8();
    sub_248175B90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HandshakeCommand.Response.hashValue.getter()
{
  return sub_248175EC0();
}

void HandshakeCommand.Response.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA288);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480C4118();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
  }
  else
  {
    LOBYTE(v52) = 0;
    char v9 = sub_248175AD0();
    LOBYTE(v52) = 1;
    LODWORD(v51) = sub_248175AD0();
    LOBYTE(v52) = 2;
    uint64_t v10 = sub_248175A70();
    uint64_t v12 = v11;
    uint64_t v50 = v10;
    LOBYTE(v52) = 3;
    swift_bridgeObjectRetain();
    int v61 = sub_248175AB0();
    char v62 = 4;
    sub_247FF9D1C();
    sub_248175AA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    int v40 = v51 & 1;
    int v41 = v9 & 1;
    uint64_t v13 = v52;
    uint64_t v14 = v53;
    uint64_t v15 = v54;
    uint64_t v16 = v55;
    uint64_t v51 = v56;
    uint64_t v43 = v58;
    uint64_t v44 = v57;
    uint64_t v42 = v59;
    int v49 = v60;
    uint64_t v46 = v53;
    uint64_t v47 = v52;
    uint64_t v45 = v54;
    sub_247FF6A2C(v52, v53, v54, v55, v56, v57);
    sub_247FF6B84(0, 0, 0, 0, 0, 0);
    swift_bridgeObjectRetain();
    uint64_t v17 = v14;
    uint64_t v18 = v15;
    uint64_t v19 = v16;
    uint64_t v20 = v16;
    uint64_t v48 = v16;
    uint64_t v21 = v51;
    uint64_t v23 = v43;
    uint64_t v22 = v44;
    sub_247FF6A2C(v13, v17, v18, v19, v51, v44);
    uint64_t v24 = v20;
    uint64_t v25 = v21;
    uint64_t v26 = v22;
    uint64_t v27 = v23;
    sub_247FF6B84(v47, v46, v45, v24, v25, v22);
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v41;
    *(unsigned char *)(a2 + 1) = v40;
    *(void *)(a2 + 8) = v50;
    *(void *)(a2 + 16) = v12;
    char v28 = BYTE1(v61);
    *(unsigned char *)(a2 + 24) = v61;
    *(unsigned char *)(a2 + 25) = v28 & 1;
    uint64_t v30 = v46;
    uint64_t v29 = v47;
    *(void *)(a2 + 32) = v47;
    *(void *)(a2 + 40) = v30;
    uint64_t v31 = v45;
    uint64_t v32 = v48;
    *(void *)(a2 + 48) = v45;
    *(void *)(a2 + 56) = v32;
    *(void *)(a2 + 64) = v51;
    *(void *)(a2 + 72) = v26;
    *(void *)(a2 + 80) = v27;
    *(void *)(a2 + 88) = v42;
    *(unsigned char *)(a2 + 96) = v49;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v33 = v29;
    uint64_t v34 = v30;
    uint64_t v35 = v31;
    uint64_t v36 = v48;
    uint64_t v37 = v51;
    uint64_t v38 = v44;
  }
  sub_247FF6B84(v33, v34, v35, v36, v37, v38);
}

uint64_t sub_2480C33E0@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 1);
  char v3 = *(unsigned char *)(v1 + 24);
  char v4 = *(unsigned char *)(v1 + 25);
  char v5 = *(unsigned char *)(v1 + 96);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(unsigned char *)(a1 + 1) = v2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(unsigned char *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 25) = v4;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 96) = v5;
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

void sub_2480C3480(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_2480C3498(void *a1)
{
  return HandshakeCommand.Response.encode(to:)(a1);
}

uint64_t sub_2480C34B4()
{
  return sub_248175EC0();
}

uint64_t sub_2480C3544()
{
  return sub_248175EC0();
}

BOOL _s12AppleIDSetup16HandshakeCommandO7RequestV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL result = 0;
  if (((*a1 ^ *a2) & 1) != 0 || a1[1] != a2[1] || a1[2] != a2[2]) {
    return result;
  }
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 2);
  uint64_t v6 = *((void *)a1 + 3);
  uint64_t v7 = *((void *)a1 + 4);
  uint64_t v9 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  uint64_t v11 = *((void *)a1 + 7);
  uint64_t v10 = *((void *)a1 + 8);
  unsigned __int8 v12 = a1[72];
  uint64_t v13 = *((void *)a1 + 10);
  long long v14 = *(_OWORD *)(a1 + 88);
  long long v15 = *(_OWORD *)(a1 + 104);
  long long v16 = *(_OWORD *)(a1 + 120);
  long long v17 = *(_OWORD *)(a1 + 136);
  uint64_t v19 = *((void *)a1 + 19);
  uint64_t v18 = *((void *)a1 + 20);
  uint64_t v20 = *((void *)a2 + 1);
  uint64_t v21 = *((void *)a2 + 2);
  uint64_t v22 = *((void *)a2 + 3);
  uint64_t v71 = *((void *)a2 + 4);
  uint64_t v74 = *((void *)a2 + 5);
  uint64_t v77 = *((void *)a2 + 6);
  uint64_t v23 = *((void *)a2 + 8);
  uint64_t v80 = *((void *)a2 + 7);
  unsigned __int8 v24 = a2[72];
  uint64_t v26 = *((void *)a2 + 10);
  uint64_t v25 = *((void *)a2 + 11);
  uint64_t v27 = *((void *)a2 + 12);
  uint64_t v28 = *((void *)a2 + 13);
  uint64_t v29 = *((void *)a2 + 14);
  uint64_t v30 = *((void *)a2 + 15);
  uint64_t v31 = *((void *)a2 + 16);
  uint64_t v32 = *((void *)a2 + 17);
  uint64_t v33 = *((void *)a2 + 18);
  uint64_t v34 = *((void *)a2 + 19);
  uint64_t v35 = *((void *)a2 + 20);
  if (!v5)
  {
    uint64_t v56 = *((void *)a2 + 20);
    uint64_t v57 = v18;
    if (!v21) {
      goto LABEL_9;
    }
LABEL_16:
    uint64_t v84 = v4;
    *(void *)&long long v85 = v5;
    *((void *)&v85 + 1) = v6;
    *(void *)&long long v86 = v7;
    *((void *)&v86 + 1) = v9;
    *(void *)&long long v87 = v8;
    *((void *)&v87 + 1) = v11;
    *(void *)&long long v88 = v10;
    BYTE8(v88) = v12;
    uint64_t v89 = v20;
    uint64_t v90 = v21;
    uint64_t v91 = v22;
    uint64_t v92 = v71;
    uint64_t v93 = v74;
    uint64_t v94 = v77;
    uint64_t v95 = v80;
    uint64_t v96 = v23;
    LOBYTE(v97) = v24;
    sub_247FF6A2C(v20, v21, v22, v71, v74, v77);
    sub_247FFBFF4(&v84);
    return 0;
  }
  uint64_t v84 = v4;
  *(void *)&long long v85 = v5;
  *((void *)&v85 + 1) = v6;
  *(void *)&long long v86 = v7;
  *((void *)&v86 + 1) = v9;
  *(void *)&long long v87 = v8;
  *((void *)&v87 + 1) = v11;
  *(void *)&long long v88 = v10;
  BYTE8(v88) = v12;
  uint64_t v69 = v4;
  uint64_t v70 = v6;
  unsigned __int8 v68 = v12;
  if (!v21)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FF6AA4(v9, v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FF6AA4(v9, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6BFC(v9, v8);
    unsigned __int8 v12 = v68;
    uint64_t v4 = v69;
    uint64_t v6 = v70;
    goto LABEL_16;
  }
  uint64_t v56 = v35;
  uint64_t v57 = v18;
  v82[0] = v20;
  v82[1] = v21;
  v82[2] = v22;
  v82[3] = v71;
  v82[4] = v74;
  v82[5] = v77;
  v82[6] = v80;
  v82[7] = v23;
  char v83 = v24 & 1;
  uint64_t v75 = v13;
  uint64_t v78 = v26;
  uint64_t v81 = v25;
  uint64_t v54 = v30;
  uint64_t v55 = v29;
  uint64_t v52 = v32;
  uint64_t v53 = v31;
  uint64_t v49 = v34;
  uint64_t v72 = v27;
  uint64_t v66 = v28;
  long long v62 = v15;
  long long v64 = v14;
  long long v58 = v17;
  long long v60 = v16;
  uint64_t v50 = v33;
  uint64_t v51 = v19;
  sub_247FF6A2C(v4, v5, v6, v7, v9, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FF6AA4(v9, v8);
  char v48 = _s12AppleIDSetup11IdMSAccountV10DeviceInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v84, (uint64_t)v82);
  uint64_t v36 = *((void *)&v86 + 1);
  uint64_t v37 = v87;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FF6BFC(v36, v37);
  sub_247FF6B84(v69, v5, v70, v7, v9, v8);
  uint64_t v34 = v49;
  uint64_t v33 = v50;
  uint64_t v19 = v51;
  uint64_t v32 = v52;
  long long v17 = v58;
  long long v16 = v60;
  long long v15 = v62;
  long long v14 = v64;
  uint64_t v31 = v53;
  uint64_t v30 = v54;
  uint64_t v29 = v55;
  uint64_t v28 = v66;
  uint64_t v27 = v72;
  uint64_t v13 = v75;
  uint64_t v26 = v78;
  uint64_t v25 = v81;
  if ((v48 & 1) == 0) {
    return 0;
  }
LABEL_9:
  if (!(void)v14)
  {
    if (!v25)
    {
LABEL_18:
      if (v57)
      {
        if (!v56) {
          return 0;
        }
        swift_bridgeObjectRetain();
        uint64_t v39 = swift_bridgeObjectRetain();
        char v40 = sub_2480F4790(v39, v56);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (v40 & 1) != 0;
      }
      return !v56;
    }
LABEL_23:
    uint64_t v84 = v13;
    long long v85 = v14;
    long long v86 = v15;
    long long v87 = v16;
    long long v88 = v17;
    uint64_t v89 = v19;
    uint64_t v90 = v26;
    uint64_t v91 = v25;
    uint64_t v92 = v27;
    uint64_t v93 = v28;
    uint64_t v94 = v29;
    uint64_t v95 = v30;
    uint64_t v96 = v31;
    uint64_t v97 = v32;
    uint64_t v98 = v33;
    uint64_t v99 = v34;
    sub_247F9819C(v26, v25);
    sub_2480C5FA4(&v84);
    return 0;
  }
  if (!v25)
  {
    uint64_t v76 = v13;
    uint64_t v79 = v26;
    uint64_t v73 = v27;
    uint64_t v67 = v28;
    uint64_t v41 = v29;
    uint64_t v42 = v30;
    uint64_t v43 = v31;
    uint64_t v44 = v32;
    long long v63 = v15;
    long long v65 = v14;
    long long v59 = v17;
    long long v61 = v16;
    uint64_t v45 = v19;
    uint64_t v46 = v33;
    uint64_t v47 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v34 = v47;
    uint64_t v33 = v46;
    uint64_t v19 = v45;
    long long v17 = v59;
    long long v16 = v61;
    long long v15 = v63;
    long long v14 = v65;
    uint64_t v32 = v44;
    uint64_t v31 = v43;
    uint64_t v30 = v42;
    uint64_t v29 = v41;
    uint64_t v28 = v67;
    uint64_t v27 = v73;
    uint64_t v13 = v76;
    uint64_t v26 = v79;
    uint64_t v25 = 0;
    goto LABEL_23;
  }
  if (v13 == v26 && (void)v14 == v25) {
    goto LABEL_18;
  }
  char v38 = sub_248175CE0();
  BOOL result = 0;
  if (v38) {
    goto LABEL_18;
  }
  return result;
}

unint64_t sub_2480C3A58()
{
  unint64_t result = qword_2692DA250;
  if (!qword_2692DA250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA250);
  }
  return result;
}

unint64_t sub_2480C3AAC()
{
  unint64_t result = qword_2692DA260;
  if (!qword_2692DA260)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DA258);
    sub_2480C3BDC(&qword_2692D50D0);
    sub_24801607C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA260);
  }
  return result;
}

unint64_t sub_2480C3B44()
{
  unint64_t result = qword_2692DA270;
  if (!qword_2692DA270)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DA258);
    sub_2480C3BDC(&qword_2692D5100);
    sub_248016124();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA270);
  }
  return result;
}

uint64_t sub_2480C3BDC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AIDAServiceType(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_2480C3C20(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v4 = a1[10];
  sub_247FF6A2C(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_247F9819C(v4, v2);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_2480C3CD8(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v4 = a1[10];
  sub_247FF6B84(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_247F982A0(v4, v2);
  swift_bridgeObjectRelease();
  return a1;
}

BOOL _s12AppleIDSetup16HandshakeCommandO8ResponseV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = 0;
  if (*a1 != *a2 || ((a1[1] ^ a2[1]) & 1) != 0) {
    return v2;
  }
  uint64_t v3 = *((void *)a1 + 2);
  int v4 = a1[24];
  unsigned __int8 v5 = a1[25];
  uint64_t v6 = *((void *)a1 + 4);
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  uint64_t v9 = *((void *)a1 + 7);
  uint64_t v11 = *((void *)a1 + 8);
  uint64_t v10 = *((void *)a1 + 9);
  uint64_t v13 = *((void *)a1 + 10);
  uint64_t v12 = *((void *)a1 + 11);
  unsigned __int8 v14 = a1[96];
  uint64_t v15 = *((void *)a2 + 2);
  int v16 = a2[24];
  int v17 = a2[25];
  uint64_t v19 = *((void *)a2 + 4);
  uint64_t v18 = *((void *)a2 + 5);
  uint64_t v21 = *((void *)a2 + 6);
  uint64_t v20 = *((void *)a2 + 7);
  uint64_t v22 = *((void *)a2 + 8);
  uint64_t v23 = *((void *)a2 + 9);
  uint64_t v24 = *((void *)a2 + 10);
  uint64_t v25 = *((void *)a2 + 11);
  unsigned __int8 v26 = a2[96];
  if (!v3)
  {
    if (v15) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v15) {
    return 0;
  }
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && v3 == v15) {
    goto LABEL_10;
  }
  uint64_t v57 = *((void *)a2 + 8);
  uint64_t v60 = *((void *)a1 + 10);
  uint64_t v50 = *((void *)a1 + 7);
  uint64_t v51 = *((void *)a1 + 5);
  uint64_t v62 = *((void *)a1 + 6);
  uint64_t v48 = *((void *)a1 + 9);
  uint64_t v49 = *((void *)a1 + 8);
  uint64_t v46 = *((void *)a2 + 5);
  uint64_t v47 = *((void *)a1 + 11);
  uint64_t v27 = *((void *)a1 + 4);
  unsigned __int8 v28 = a1[96];
  uint64_t v29 = *((void *)a2 + 11);
  uint64_t v53 = *((void *)a2 + 7);
  uint64_t v55 = *((void *)a2 + 10);
  uint64_t v30 = *((void *)a2 + 6);
  uint64_t v31 = *((void *)a2 + 4);
  unsigned __int8 v45 = a2[96];
  int v32 = a1[24];
  char v33 = sub_248175CE0();
  int v4 = v32;
  unsigned __int8 v26 = v45;
  uint64_t v19 = v31;
  uint64_t v18 = v46;
  uint64_t v12 = v47;
  uint64_t v21 = v30;
  uint64_t v20 = v53;
  uint64_t v24 = v55;
  uint64_t v22 = v57;
  uint64_t v13 = v60;
  uint64_t v25 = v29;
  unsigned __int8 v14 = v28;
  uint64_t v6 = v27;
  uint64_t v10 = v48;
  uint64_t v11 = v49;
  uint64_t v9 = v50;
  uint64_t v7 = v51;
  uint64_t v8 = v62;
  uint64_t v2 = 0;
  if (v33)
  {
LABEL_10:
    if (v5)
    {
      if (!v17) {
        return 0;
      }
    }
    else
    {
      if (v4 == v16) {
        char v34 = v17;
      }
      else {
        char v34 = 1;
      }
      if (v34) {
        return 0;
      }
    }
    if (v7)
    {
      uint64_t v66 = v6;
      uint64_t v67 = v7;
      uint64_t v68 = v8;
      uint64_t v69 = v9;
      uint64_t v70 = v11;
      uint64_t v71 = v10;
      uint64_t v72 = v13;
      uint64_t v73 = v12;
      unsigned __int8 v74 = v14;
      uint64_t v44 = v6;
      unsigned __int8 v43 = v14;
      if (v18)
      {
        v64[0] = v19;
        v64[1] = v18;
        v64[2] = v21;
        v64[3] = v20;
        v64[4] = v22;
        v64[5] = v23;
        v64[6] = v24;
        v64[7] = v25;
        char v65 = v26 & 1;
        sub_247FF6A2C(v6, v7, v8, v9, v11, v10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FF6AA4(v11, v10);
        char v58 = _s12AppleIDSetup11IdMSAccountV10DeviceInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v66, (uint64_t)v64);
        uint64_t v35 = v7;
        uint64_t v36 = v70;
        uint64_t v37 = v11;
        uint64_t v38 = v71;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FF6BFC(v36, v38);
        sub_247FF6B84(v44, v35, v8, v9, v37, v10);
        return (v58 & 1) != 0;
      }
      uint64_t v39 = v12;
      uint64_t v61 = v23;
      uint64_t v63 = v25;
      uint64_t v56 = v24;
      uint64_t v59 = v22;
      uint64_t v52 = v21;
      uint64_t v54 = v20;
      uint64_t v40 = v19;
      unsigned __int8 v41 = v26;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FF6AA4(v11, v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FF6AA4(v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FF6BFC(v11, v10);
      unsigned __int8 v26 = v41;
      uint64_t v19 = v40;
      uint64_t v18 = 0;
      uint64_t v21 = v52;
      uint64_t v20 = v54;
      uint64_t v22 = v59;
      uint64_t v23 = v61;
      uint64_t v24 = v56;
      uint64_t v25 = v63;
      unsigned __int8 v14 = v43;
      uint64_t v6 = v44;
      uint64_t v12 = v39;
    }
    else if (!v18)
    {
      return 1;
    }
    uint64_t v66 = v6;
    uint64_t v67 = v7;
    uint64_t v68 = v8;
    uint64_t v69 = v9;
    uint64_t v70 = v11;
    uint64_t v71 = v10;
    uint64_t v72 = v13;
    uint64_t v73 = v12;
    unsigned __int8 v74 = v14;
    uint64_t v75 = v19;
    uint64_t v76 = v18;
    uint64_t v77 = v21;
    uint64_t v78 = v20;
    uint64_t v79 = v22;
    uint64_t v80 = v23;
    uint64_t v81 = v24;
    uint64_t v82 = v25;
    unsigned __int8 v83 = v26;
    sub_247FF6A2C(v19, v18, v21, v20, v22, v23);
    sub_247FFBFF4(&v66);
    return 0;
  }
  return v2;
}

unint64_t sub_2480C4118()
{
  unint64_t result = qword_2692DA280;
  if (!qword_2692DA280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA280);
  }
  return result;
}

unint64_t sub_2480C4170()
{
  unint64_t result = qword_2692DA290;
  if (!qword_2692DA290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA290);
  }
  return result;
}

unint64_t sub_2480C41C4(uint64_t a1)
{
  unint64_t result = sub_2480C41EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2480C41EC()
{
  unint64_t result = qword_2692DA298;
  if (!qword_2692DA298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA298);
  }
  return result;
}

unint64_t sub_2480C4244()
{
  unint64_t result = qword_2692DA2A0;
  if (!qword_2692DA2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2A0);
  }
  return result;
}

unint64_t sub_2480C4298(uint64_t a1)
{
  unint64_t result = sub_2480C42C0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2480C42C0()
{
  unint64_t result = qword_2692DA2A8;
  if (!qword_2692DA2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2A8);
  }
  return result;
}

uint64_t sub_2480C4314(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480C45E0(a1, a2, a3, (uint64_t (*)(void))sub_2480C4354, (uint64_t (*)(void))sub_2480C43A8, (uint64_t (*)(void))sub_2480C43FC);
}

unint64_t sub_2480C4354()
{
  unint64_t result = qword_2692DA2B0;
  if (!qword_2692DA2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2B0);
  }
  return result;
}

unint64_t sub_2480C43A8()
{
  unint64_t result = qword_2692DA2B8;
  if (!qword_2692DA2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2B8);
  }
  return result;
}

unint64_t sub_2480C43FC()
{
  unint64_t result = qword_2692DA2C0;
  if (!qword_2692DA2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2C0);
  }
  return result;
}

unint64_t sub_2480C4454()
{
  unint64_t result = qword_2692DA2C8;
  if (!qword_2692DA2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2C8);
  }
  return result;
}

unint64_t sub_2480C44A8(uint64_t a1)
{
  unint64_t result = sub_2480C44D0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2480C44D0()
{
  unint64_t result = qword_2692DA2D0;
  if (!qword_2692DA2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2D0);
  }
  return result;
}

unint64_t sub_2480C4524(uint64_t a1)
{
  unint64_t result = sub_2480C454C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2480C454C()
{
  unint64_t result = qword_2692DA2D8;
  if (!qword_2692DA2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2D8);
  }
  return result;
}

uint64_t sub_2480C45A0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480C45E0(a1, a2, a3, (uint64_t (*)(void))sub_2480C4634, (uint64_t (*)(void))sub_2480C4688, (uint64_t (*)(void))sub_2480C46DC);
}

uint64_t sub_2480C45E0(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_2480C4634()
{
  unint64_t result = qword_2692DA2E0;
  if (!qword_2692DA2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2E0);
  }
  return result;
}

unint64_t sub_2480C4688()
{
  unint64_t result = qword_2692DA2E8;
  if (!qword_2692DA2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2E8);
  }
  return result;
}

unint64_t sub_2480C46DC()
{
  unint64_t result = qword_2692DA2F0;
  if (!qword_2692DA2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2F0);
  }
  return result;
}

unint64_t sub_2480C4734()
{
  unint64_t result = qword_2692DA2F8;
  if (!qword_2692DA2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA2F8);
  }
  return result;
}

unint64_t sub_2480C478C()
{
  unint64_t result = qword_2692DA300;
  if (!qword_2692DA300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA300);
  }
  return result;
}

unint64_t sub_2480C47E4()
{
  unint64_t result = qword_2692DA308;
  if (!qword_2692DA308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA308);
  }
  return result;
}

unint64_t sub_2480C4838(uint64_t a1)
{
  unint64_t result = sub_2480C4244();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand()
{
  return &type metadata for HandshakeCommand;
}

uint64_t destroy for HandshakeCommand.Request(void *a1)
{
  if (a1[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[6])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HandshakeCommand.Request(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  if (v4)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v6 = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6)
    {
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v6;
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v13 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v13;
    }
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    uint64_t v10 = *(void *)(a2 + 88);
    if (v10) {
      goto LABEL_8;
    }
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v8;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    long long v9 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(void *)(a2 + 88);
    if (v10)
    {
LABEL_8:
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v10;
      uint64_t v14 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v14;
      uint64_t v15 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v15;
      uint64_t v16 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v16;
      uint64_t v17 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_9;
    }
  }
  long long v11 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v11;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  long long v12 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v12;
LABEL_9:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HandshakeCommand.Request(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  uint64_t v6 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16))
  {
    if (!v6)
    {
      sub_247FFB0F4(a1 + 8);
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
      long long v13 = *(_OWORD *)(v5 + 32);
      long long v12 = *(_OWORD *)(v5 + 48);
      long long v14 = *(_OWORD *)(v5 + 16);
      *(unsigned char *)(v4 + 64) = *(unsigned char *)(v5 + 64);
      *(_OWORD *)(v4 + 32) = v13;
      *(_OWORD *)(v4 + 48) = v12;
      *(_OWORD *)(v4 + 16) = v14;
      goto LABEL_16;
    }
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v7 = (_OWORD *)(a1 + 40);
    long long v8 = (_OWORD *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    if (*(void *)(a1 + 48))
    {
      if (v9)
      {
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_247FFB0A0(a1 + 40);
        long long v18 = *(_OWORD *)(a2 + 56);
        *uint64_t v7 = *v8;
        *(_OWORD *)(a1 + 56) = v18;
      }
      goto LABEL_15;
    }
    if (!v9)
    {
      long long v19 = *(_OWORD *)(a2 + 56);
      *uint64_t v7 = *v8;
      *(_OWORD *)(a1 + 56) = v19;
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  if (!v6)
  {
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    long long v15 = *(_OWORD *)(a2 + 24);
    long long v16 = *(_OWORD *)(a2 + 40);
    long long v17 = *(_OWORD *)(a2 + 56);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v16;
    *(_OWORD *)(a1 + 56) = v17;
    *(_OWORD *)(a1 + 24) = v15;
    goto LABEL_16;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
LABEL_11:
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  long long v11 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v11;
LABEL_15:
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
LABEL_16:
  uint64_t v20 = (_OWORD *)(a1 + 80);
  uint64_t v21 = (_OWORD *)(a2 + 80);
  uint64_t v22 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88))
  {
    if (v22)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FACD88(a1 + 80);
      *uint64_t v20 = *v21;
      long long v23 = *(_OWORD *)(a2 + 144);
      long long v25 = *(_OWORD *)(a2 + 96);
      long long v24 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v23;
      *(_OWORD *)(a1 + 96) = v25;
      *(_OWORD *)(a1 + 112) = v24;
    }
  }
  else if (v22)
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v20 = *v21;
    long long v26 = *(_OWORD *)(a2 + 96);
    long long v27 = *(_OWORD *)(a2 + 112);
    long long v28 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v28;
    *(_OWORD *)(a1 + 96) = v26;
    *(_OWORD *)(a1 + 112) = v27;
  }
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for HandshakeCommand.Request(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6)
  {
    sub_247FFB0F4(v4);
LABEL_7:
    long long v9 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v4 + 48) = v9;
    *(unsigned char *)(v4 + 64) = *(unsigned char *)(v5 + 64);
    long long v10 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(v4 + 16) = v10;
    goto LABEL_11;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 48))
  {
LABEL_9:
    long long v11 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v11;
    goto LABEL_10;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (!v8)
  {
    sub_247FFB0A0(a1 + 40);
    goto LABEL_9;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
LABEL_10:
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
LABEL_11:
  if (!*(void *)(a1 + 88))
  {
LABEL_15:
    long long v17 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    long long v18 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v18;
    goto LABEL_16;
  }
  uint64_t v12 = *(void *)(a2 + 88);
  if (!v12)
  {
    sub_247FACD88(a1 + 80);
    goto LABEL_15;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v16;
  swift_bridgeObjectRelease();
LABEL_16:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HandshakeCommand.Request(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeCommand.Request(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Request()
{
  return &type metadata for HandshakeCommand.Request;
}

uint64_t destroy for HandshakeCommand.Response(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(a1 + 72);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t initializeWithCopy for HandshakeCommand.Response(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v5;
    uint64_t v6 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v6;
    uint64_t v7 = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7)
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v7;
      uint64_t v8 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v11 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v11;
    }
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
  }
  return a1;
}

uint64_t assignWithCopy for HandshakeCommand.Response(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v7 = (_OWORD *)(a1 + 64);
      uint64_t v8 = (_OWORD *)(a2 + 64);
      uint64_t v9 = *(void *)(a2 + 72);
      if (*(void *)(a1 + 72))
      {
        if (v9)
        {
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_247FFB0A0(a1 + 64);
          long long v18 = *(_OWORD *)(a2 + 80);
          *uint64_t v7 = *v8;
          *(_OWORD *)(a1 + 80) = v18;
        }
        goto LABEL_15;
      }
      if (!v9)
      {
        long long v19 = *(_OWORD *)(a2 + 80);
        *uint64_t v7 = *v8;
        *(_OWORD *)(a1 + 80) = v19;
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    sub_247FFB0F4(a1 + 32);
    *uint64_t v4 = *v5;
    long long v13 = *(_OWORD *)(a2 + 64);
    long long v12 = *(_OWORD *)(a2 + 80);
    long long v14 = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 48) = v14;
  }
  else
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v10 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v10)
      {
        long long v11 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v11;
LABEL_15:
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        return a1;
      }
LABEL_11:
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    *uint64_t v4 = *v5;
    long long v15 = *(_OWORD *)(a2 + 48);
    long long v16 = *(_OWORD *)(a2 + 64);
    long long v17 = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v16;
    *(_OWORD *)(a1 + 80) = v17;
    *(_OWORD *)(a1 + 48) = v15;
  }
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for HandshakeCommand.Response(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  if (*(void *)(a1 + 40))
  {
    uint64_t v5 = *(void *)(a2 + 40);
    if (v5)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v6;
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 72))
      {
        uint64_t v7 = *(void *)(a2 + 72);
        if (v7)
        {
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v7;
          swift_bridgeObjectRelease();
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          swift_bridgeObjectRelease();
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          swift_bridgeObjectRelease();
LABEL_10:
          *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
          return a1;
        }
        sub_247FFB0A0(a1 + 64);
      }
      long long v10 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v10;
      goto LABEL_10;
    }
    sub_247FFB0F4(a1 + 32);
  }
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for HandshakeCommand.Response(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 97)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HandshakeCommand.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Response()
{
  return &type metadata for HandshakeCommand.Response;
}

unsigned char *storeEnumTagSinglePayload for HandshakeCommand.Response.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480C5718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Response.CodingKeys()
{
  return &type metadata for HandshakeCommand.Response.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for HandshakeCommand.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480C581CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HandshakeCommand.Request.CodingKeys()
{
  return &type metadata for HandshakeCommand.Request.CodingKeys;
}

unint64_t sub_2480C5858()
{
  unint64_t result = qword_2692DA310;
  if (!qword_2692DA310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA310);
  }
  return result;
}

unint64_t sub_2480C58B0()
{
  unint64_t result = qword_2692DA318;
  if (!qword_2692DA318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA318);
  }
  return result;
}

unint64_t sub_2480C5908()
{
  unint64_t result = qword_2692DA320;
  if (!qword_2692DA320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA320);
  }
  return result;
}

unint64_t sub_2480C5960()
{
  unint64_t result = qword_2692DA328;
  if (!qword_2692DA328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA328);
  }
  return result;
}

unint64_t sub_2480C59B8()
{
  unint64_t result = qword_2692DA330;
  if (!qword_2692DA330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA330);
  }
  return result;
}

unint64_t sub_2480C5A10()
{
  unint64_t result = qword_2692DA338;
  if (!qword_2692DA338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA338);
  }
  return result;
}

uint64_t sub_2480C5A64(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C417065654B7369 && a2 == 0xEB00000000657669;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002481925F0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000248192610 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E49656369766564 && a2 == 0xEA00000000006F66 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F636341666C6573 && a2 == 0xED00006449746E75 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000248192630)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_2480C5D14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C417065654B7369 && a2 == 0xEB00000000657669;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7470656363417369 && a2 == 0xEA00000000006465 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F697463656A6572 && a2 == 0xEF6E6F736165526ELL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEF6E6F6973726556 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E49656369766564 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t *sub_2480C5FA4(uint64_t *a1)
{
  uint64_t v4 = a1[10];
  uint64_t v2 = a1[11];
  sub_247F982A0(*a1, a1[1]);
  sub_247F982A0(v4, v2);
  return a1;
}

uint64_t sub_2480C6050(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2480C6078(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_2480C60A0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA228);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  type metadata accessor for MachSetupMessage();
  sub_2480D4958(&qword_2692D9850, (void (*)(uint64_t))type metadata accessor for MachSetupMessage);
  sub_248174C30();
  return swift_release();
}

uint64_t sub_2480C6250(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA228);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  type metadata accessor for MachRepairMessage();
  sub_2480D4958(&qword_2692D6870, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
  sub_248174C30();
  return swift_release();
}

uint64_t sub_2480C6400()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_2692DA340);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2692DA340);
  if (qword_2692D4D78 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2692D6A90);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

id RepairController.queue.getter()
{
  return *(id *)(v0 + 112);
}

uint64_t sub_2480C64D0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = qword_2692D4DC0;
    swift_retain();
    if (v1 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_248174B90();
    __swift_project_value_buffer(v2, (uint64_t)qword_2692DA340);
    swift_retain_n();
    swift_retain_n();
    uint64_t v3 = sub_248174B70();
    os_log_type_t v4 = sub_2481755C0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v11 = v6;
      *(_DWORD *)uint64_t v5 = 136315394;
      sub_248174C80();
      swift_retain();
      uint64_t v7 = sub_248175190();
      sub_247FB6D24(v7, v8, &v11);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2080;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9888);
      uint64_t v9 = sub_248175190();
      sub_247FB6D24(v9, v10, &v11);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v3, v4, "Repair controller session changed from %s to %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v6, -1, -1);
      MEMORY[0x24C574E00](v5, -1, -1);
    }
    else
    {

      swift_release_n();
      swift_release_n();
    }
    sub_248174C50();
    return swift_release();
  }
  return result;
}

uint64_t RepairController.__allocating_init(queue:endpoint:inactiveSession:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  RepairController.init(queue:endpoint:inactiveSession:)(a1, a2, a3);
  return v6;
}

uint64_t RepairController.init(queue:endpoint:inactiveSession:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v6 = sub_248175620();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v26 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_248175610();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97C0);
  MEMORY[0x270FA5388](v11 - 8);
  long long v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_248174D50();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  long long v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_248174D80();
  MEMORY[0x270FA5388](v18 - 8);
  swift_defaultActor_initialize();
  *(void *)(v4 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession) = 0;
  if (!a1)
  {
    v24[1] = v10;
    uint64_t v25 = v6;
    qos_class_self();
    sub_248174D40();
    int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    uint64_t v20 = v27;
    if (v19 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F050], v14);
      sub_247FB33D4((uint64_t)v13, &qword_2692D97C0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    }
    sub_248003BB0();
    sub_248174D70();
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_2480D4958(&qword_26B13BE98, MEMORY[0x263F8F0F8]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13BE60);
    sub_24809FFEC(&qword_26B13BE68, &qword_26B13BE60);
    sub_2481757A0();
    (*(void (**)(char *, void, uint64_t))(v20 + 104))(v26, *MEMORY[0x263F8F130], v25);
    a1 = sub_248175650();
  }
  uint64_t v21 = v28;
  uint64_t v22 = v29;
  *(void *)(v4 + 112) = a1;
  sub_247FE06A4(v21, v4 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, &qword_2692D97D0);
  *(void *)(v4 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = v22;
  swift_release();
  return v4;
}

uint64_t RepairController.__allocating_init()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97D0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_248174C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for RepairController();
  uint64_t v4 = swift_allocObject();
  RepairController.init(queue:endpoint:inactiveSession:)(0, (uint64_t)v2, 0);
  return v4;
}

uint64_t type metadata accessor for RepairController()
{
  uint64_t result = qword_2692DA3A0;
  if (!qword_2692DA3A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2480C6CD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_248174B90();
  __swift_project_value_buffer(v5, (uint64_t)qword_2692DA340);
  uint64_t v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755C0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_247F93000, v6, v7, "Invalidating setup controller", v8, 2u);
    MEMORY[0x24C574E00](v8, -1, -1);
  }

  uint64_t v9 = sub_2481753D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  unint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v1;
  swift_retain();
  sub_247FFC270((uint64_t)v4, (uint64_t)&unk_2692DA360, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_2480C6E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_2480C6EAC, a4, 0);
}

uint64_t sub_2480C6EAC()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession);
  swift_retain();
  return MEMORY[0x270FA2498](sub_24809685C, 0, 0);
}

uint64_t sub_2480C6F28()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2480C6F68(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_247FCB950;
  return MEMORY[0x270FA2498](sub_2480C6EAC, v4, 0);
}

uint64_t RepairController.deinit()
{
  uint64_t v1 = v0;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  __swift_project_value_buffer(v2, (uint64_t)qword_2692DA340);
  swift_retain_n();
  uint64_t v3 = sub_248174B70();
  os_log_type_t v4 = sub_2481755C0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v10 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    type metadata accessor for RepairController();
    swift_retain();
    uint64_t v7 = sub_248175190();
    sub_247FB6D24(v7, v8, &v10);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_247F93000, v3, v4, "RepairController deinitialized: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v6, -1, -1);
    MEMORY[0x24C574E00](v5, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  if (*(void *)(v1 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession))
  {
    swift_retain();
    sub_248174C50();
    swift_release();
  }

  sub_247FB33D4(v1 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, &qword_2692D97D0);
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t RepairController.__deallocating_deinit()
{
  RepairController.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_2480C7288(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  v3[24] = type metadata accessor for MachRepairMessage();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = type metadata accessor for RepairContext();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2480C7394, v2, 0);
}

uint64_t sub_2480C7394()
{
  uint64_t v21 = v0;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[22];
  uint64_t v3 = sub_248174B90();
  v0[33] = __swift_project_value_buffer(v3, (uint64_t)qword_2692DA340);
  sub_2480D17C8(v2, v1, (uint64_t (*)(void))type metadata accessor for RepairContext);
  os_log_type_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755B0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[32];
  if (v6)
  {
    uint64_t v8 = v0[31];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_2480D17C8(v7, v8, (uint64_t (*)(void))type metadata accessor for RepairContext);
    uint64_t v11 = sub_248175190();
    v0[20] = sub_247FB6D24(v11, v12, &v20);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480D1768(v7, (uint64_t (*)(void))type metadata accessor for RepairContext);
    _os_log_impl(&dword_247F93000, v4, v5, "Performing Apple ID Repair with context: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v10, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
    sub_2480D1768(v0[32], (uint64_t (*)(void))type metadata accessor for RepairContext);
  }

  uint64_t v13 = sub_2480CABC8(v0[22]);
  v0[34] = v13;
  uint64_t v14 = v0[28];
  uint64_t v15 = v0[23];
  uint64_t v16 = v0[22];
  uint64_t v17 = OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession;
  v0[35] = OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession;
  uint64_t v18 = *(void *)(v15 + v17);
  *(void *)(v15 + v17) = v13;
  swift_retain_n();
  sub_2480C64D0(v18);
  swift_release();
  swift_release();
  sub_2480D17C8(v16, v14, (uint64_t (*)(void))type metadata accessor for RepairModel);
  swift_storeEnumTagMultiPayload();
  return MEMORY[0x270FA2498](sub_2480C76FC, 0, 0);
}

uint64_t sub_2480C76FC()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[28];
  uint64_t v3 = swift_task_alloc();
  v0[36] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  *os_log_type_t v4 = v0;
  v4[1] = sub_2480C77F0;
  uint64_t v5 = v0[29];
  uint64_t v6 = v0[24];
  return MEMORY[0x270FA2360](v5, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2480D1760, v3, v6);
}

uint64_t sub_2480C77F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2480C8400;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 224);
    uint64_t v6 = *(void *)(v2 + 184);
    swift_task_dealloc();
    sub_2480D1768(v5, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v3 = sub_2480C7938;
    uint64_t v4 = v6;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_2480C7938()
{
  uint64_t v75 = v0;
  sub_2480D17C8(v0[29], v0[27], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6)
  {
    uint64_t v22 = v0[27];
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *(void *)(v22 + 8);
    uint64_t v25 = *(void *)(v22 + 16);
    uint64_t v26 = *(void *)(v22 + 24);
    uint64_t v27 = *(void *)(v22 + 32);
    char v28 = *(unsigned char *)(v22 + 40);
    sub_247FE42BC(*(void *)v22, v24, v25, v26, v27, v28);
    uint64_t v73 = v23;
    sub_247FE42BC(v23, v24, v25, v26, v27, v28);
    uint64_t v29 = sub_248174B70();
    os_log_type_t v30 = sub_2481755D0();
    if (os_log_type_enabled(v29, v30))
    {
      os_log_type_t v69 = v30;
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v66 = (void *)swift_slowAlloc();
      uint64_t v68 = v31;
      *(_DWORD *)uint64_t v31 = 138412290;
      sub_247FE15B8();
      swift_allocError();
      *(void *)uint64_t v32 = v73;
      *(void *)(v32 + 8) = v24;
      *(void *)(v32 + 16) = v25;
      *(void *)(v32 + 24) = v26;
      *(void *)(v32 + 32) = v27;
      *(unsigned char *)(v32 + 40) = v28;
      sub_247FE42BC(v73, v24, v25, v26, v27, v28);
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      v0[18] = v33;
      sub_248175730();
      *uint64_t v66 = v33;
      sub_247FE0600(v73, v24, v25, v26, v27, v28);
      sub_247FE0600(v73, v24, v25, v26, v27, v28);
      _os_log_impl(&dword_247F93000, v29, v69, "Failed to perform repair with error: %@", v68, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v66, -1, -1);
      MEMORY[0x24C574E00](v68, -1, -1);
    }
    else
    {
      sub_247FE0600(v73, v24, v25, v26, v27, v28);
      sub_247FE0600(v73, v24, v25, v26, v27, v28);
    }
    uint64_t v48 = v0[35];
    uint64_t v49 = v0[29];
    uint64_t v50 = v0[23];

    sub_247FE15B8();
    swift_allocError();
    *(void *)uint64_t v51 = v73;
    *(void *)(v51 + 8) = v24;
    *(void *)(v51 + 16) = v25;
    *(void *)(v51 + 24) = v26;
    *(void *)(v51 + 32) = v27;
    *(unsigned char *)(v51 + 40) = v28;
    swift_willThrow();
    sub_2480D1768(v49, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v52 = *(void *)(v50 + v48);
    *(void *)(v50 + v48) = 0;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v2 = (uint64_t *)v0[27];
      uint64_t v3 = v2[1];
      uint64_t v4 = v2[3];
      uint64_t v63 = v2[2];
      uint64_t v64 = *v2;
      uint64_t v5 = v2[5];
      uint64_t v6 = v2[7];
      uint64_t v65 = v2[6];
      uint64_t v7 = v2[9];
      uint64_t v61 = v2[8];
      uint64_t v62 = v2[4];
      uint64_t v9 = v2[10];
      uint64_t v8 = v2[11];
      uint64_t v10 = v2[13];
      uint64_t v71 = v2[12];
      uint64_t v72 = v8;
      uint64_t v11 = v2[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2480354C0(v8, v71);
      swift_bridgeObjectRetain();
      uint64_t v70 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v67 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2480354C0(v8, v71);
      unint64_t v12 = sub_248174B70();
      os_log_type_t v13 = sub_2481755B0();
      BOOL v14 = os_log_type_enabled(v12, v13);
      uint64_t v60 = v0[29];
      if (v14)
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 136315138;
        v74[0] = v59;
        v0[2] = v64;
        v0[3] = v3;
        v0[4] = v63;
        v0[5] = v70;
        v0[6] = v62;
        v0[7] = v5;
        v0[8] = v65;
        v0[9] = v6;
        v0[10] = v61;
        v0[11] = v67;
        v0[12] = v9;
        v0[13] = v72;
        v0[14] = v71;
        v0[15] = v10;
        v0[16] = v11;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2480354C0(v72, v71);
        uint64_t v16 = sub_248175190();
        v0[19] = sub_247FB6D24(v16, v17, v74);
        sub_248175730();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FE0708(v72, v71);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FE0708(v72, v71);
        _os_log_impl(&dword_247F93000, v12, v13, "Finished Apple ID Repair with report: %s", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v59, -1, -1);
        MEMORY[0x24C574E00](v15, -1, -1);

        sub_2480D1768(v60, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
        uint64_t v19 = v61;
        uint64_t v18 = v62;
        uint64_t v21 = v63;
        uint64_t v20 = v64;
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FE0708(v8, v71);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FE0708(v8, v71);
        sub_2480D1768(v60, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
        uint64_t v21 = v63;
        uint64_t v20 = v64;
        uint64_t v19 = v61;
        uint64_t v18 = v62;
      }
      uint64_t v43 = v0[35];
      uint64_t v44 = v0[23];
      unsigned __int8 v45 = (void *)v0[21];
      *unsigned __int8 v45 = v20;
      v45[1] = v3;
      v45[2] = v21;
      v45[3] = v70;
      v45[4] = v18;
      v45[5] = v5;
      v45[6] = v65;
      v45[7] = v6;
      v45[8] = v19;
      v45[9] = v67;
      v45[10] = v9;
      v45[11] = v72;
      v45[12] = v71;
      v45[13] = v10;
      v45[14] = v11;
      uint64_t v46 = *(void *)(v44 + v43);
      *(void *)(v44 + v43) = 0;
      sub_2480C64D0(v46);
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v47 = (uint64_t (*)(void))v0[1];
      goto LABEL_16;
    }
    sub_2480D17C8(v0[29], v0[26], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    char v34 = sub_248174B70();
    os_log_type_t v35 = sub_2481755D0();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v37 = v0[26];
    if (v36)
    {
      uint64_t v38 = v0[25];
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      v74[0] = v40;
      *(_DWORD *)uint64_t v39 = 136315138;
      sub_2480D17C8(v37, v38, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v41 = sub_248175190();
      v0[17] = sub_247FB6D24(v41, v42, v74);
      sub_248175730();
      swift_bridgeObjectRelease();
      sub_2480D1768(v37, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      _os_log_impl(&dword_247F93000, v34, v35, "Received unexpected response: %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v40, -1, -1);
      MEMORY[0x24C574E00](v39, -1, -1);
    }
    else
    {
      sub_2480D1768(v0[26], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    }

    uint64_t v53 = v0[35];
    uint64_t v54 = v0[29];
    uint64_t v55 = v0[27];
    uint64_t v56 = v0[23];
    sub_247FE15B8();
    swift_allocError();
    *(_OWORD *)uint64_t v57 = 0u;
    *(_OWORD *)(v57 + 16) = 0u;
    *(void *)(v57 + 32) = 0;
    *(unsigned char *)(v57 + 40) = 4;
    swift_willThrow();
    sub_2480D1768(v54, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    sub_2480D1768(v55, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v52 = *(void *)(v56 + v53);
    *(void *)(v56 + v53) = 0;
  }
  sub_2480C64D0(v52);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v47();
}

uint64_t sub_2480C8400()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 184);
  swift_task_dealloc();
  sub_2480D1768(v1, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  return MEMORY[0x270FA2498](sub_2480C848C, v2, 0);
}

uint64_t sub_2480C848C()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[23];
  uint64_t v3 = *(void *)(v2 + v1);
  *(void *)(v2 + v1) = 0;
  sub_2480C64D0(v3);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2480C856C(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = type metadata accessor for MachRepairMessage();
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = type metadata accessor for RepairContext();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2480C8660, v2, 0);
}

uint64_t sub_2480C8660()
{
  uint64_t v21 = v0;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[6];
  uint64_t v3 = sub_248174B90();
  v0[15] = __swift_project_value_buffer(v3, (uint64_t)qword_2692DA340);
  sub_2480D17C8(v2, v1, (uint64_t (*)(void))type metadata accessor for RepairContext);
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755B0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[14];
  if (v6)
  {
    uint64_t v8 = v0[13];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_2480D17C8(v7, v8, (uint64_t (*)(void))type metadata accessor for RepairContext);
    uint64_t v11 = sub_248175190();
    v0[4] = sub_247FB6D24(v11, v12, &v20);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480D1768(v7, (uint64_t (*)(void))type metadata accessor for RepairContext);
    _os_log_impl(&dword_247F93000, v4, v5, "Generating symptom report with context: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v10, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
    sub_2480D1768(v0[14], (uint64_t (*)(void))type metadata accessor for RepairContext);
  }

  uint64_t v13 = sub_2480CABC8(v0[6]);
  v0[16] = v13;
  uint64_t v14 = v0[10];
  uint64_t v15 = v0[7];
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession;
  v0[17] = OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession;
  uint64_t v18 = *(void *)(v15 + v17);
  *(void *)(v15 + v17) = v13;
  swift_retain_n();
  sub_2480C64D0(v18);
  swift_release();
  swift_release();
  sub_2480D17C8(v16, v14, (uint64_t (*)(void))type metadata accessor for RepairModel);
  swift_storeEnumTagMultiPayload();
  return MEMORY[0x270FA2498](sub_2480C89B4, 0, 0);
}

uint64_t sub_2480C89B4()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[10];
  uint64_t v3 = swift_task_alloc();
  v0[18] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_2480C8AA8;
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[8];
  return MEMORY[0x270FA2360](v5, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2480D49CC, v3, v6);
}

uint64_t sub_2480C8AA8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_2480C926C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 80);
    uint64_t v6 = *(void *)(v2 + 56);
    swift_task_dealloc();
    sub_2480D1768(v5, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v3 = sub_2480C8BF0;
    uint64_t v4 = v6;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_2480C8BF0()
{
  uint64_t v48 = v0;
  sub_2480D17C8(v0[11], v0[9], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6)
  {
    uint64_t v14 = v0[9];
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v18 = *(void *)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 24);
    uint64_t v19 = *(void *)(v14 + 32);
    char v20 = *(unsigned char *)(v14 + 40);
    sub_247FE42BC(*(void *)v14, v16, v18, v17, v19, v20);
    uint64_t v46 = v15;
    sub_247FE42BC(v15, v16, v18, v17, v19, v20);
    uint64_t v21 = sub_248174B70();
    os_log_type_t v22 = sub_2481755D0();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t typea = v22;
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      sub_247FE15B8();
      swift_allocError();
      *(void *)uint64_t v25 = v46;
      *(void *)(v25 + 8) = v16;
      *(void *)(v25 + 16) = v18;
      *(void *)(v25 + 24) = v17;
      *(void *)(v25 + 32) = v19;
      *(unsigned char *)(v25 + 40) = v20;
      sub_247FE42BC(v46, v16, v18, v17, v19, v20);
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      v0[2] = v26;
      sub_248175730();
      void *v24 = v26;
      sub_247FE0600(v46, v16, v18, v17, v19, v20);
      sub_247FE0600(v46, v16, v18, v17, v19, v20);
      _os_log_impl(&dword_247F93000, v21, typea, "Failed to generate symptom report with error: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v24, -1, -1);
      MEMORY[0x24C574E00](v23, -1, -1);
    }
    else
    {
      sub_247FE0600(v15, v16, v18, v17, v19, v20);
      sub_247FE0600(v15, v16, v18, v17, v19, v20);
    }
    uint64_t v38 = v0[17];
    uint64_t v45 = v0[11];
    uint64_t v39 = v0[7];

    sub_247FE15B8();
    swift_allocError();
    *(void *)uint64_t v40 = v46;
    *(void *)(v40 + 8) = v16;
    *(void *)(v40 + 16) = v18;
    *(void *)(v40 + 24) = v17;
    *(void *)(v40 + 32) = v19;
    *(unsigned char *)(v40 + 40) = v20;
    swift_willThrow();
    sub_2480D1768(v45, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v32 = *(void *)(v39 + v38);
    *(void *)(v39 + v38) = 0;
  }
  else
  {
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v2 = (uint64_t *)v0[9];
      uint64_t v4 = *v2;
      uint64_t v3 = v2[1];
      uint64_t v5 = v2[2];
      uint64_t v6 = v2[3];
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v7 = sub_248174B70();
      os_log_type_t v8 = sub_2481755B0();
      BOOL v9 = os_log_type_enabled(v7, v8);
      uint64_t v10 = v0[11];
      if (v9)
      {
        uint64_t v44 = v0[11];
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t type = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 136315138;
        v47[0] = type;
        v47[1] = v4;
        v47[2] = v3;
        v47[3] = v5;
        v47[4] = v6;
        uint64_t v12 = SymptomReport.description.getter();
        v0[3] = sub_247FB6D24(v12, v13, v47);
        sub_248175730();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        swift_release_n();
        swift_release_n();
        _os_log_impl(&dword_247F93000, v7, v8, "Generated Apple ID symptom report: %s", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](type, -1, -1);
        MEMORY[0x24C574E00](v11, -1, -1);

        sub_2480D1768(v44, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
        swift_release_n();
        sub_2480D1768(v10, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      }
      uint64_t v33 = v0[17];
      uint64_t v34 = v0[7];
      os_log_type_t v35 = (uint64_t *)v0[5];
      *os_log_type_t v35 = v4;
      v35[1] = v3;
      v35[2] = v5;
      v35[3] = v6;
      uint64_t v36 = *(void *)(v34 + v33);
      *(void *)(v34 + v33) = 0;
      sub_2480C64D0(v36);
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v37 = (uint64_t (*)(void))v0[1];
      goto LABEL_13;
    }
    uint64_t v27 = v0[17];
    uint64_t v28 = v0[11];
    uint64_t v29 = v0[9];
    uint64_t v30 = v0[7];
    sub_247FE15B8();
    swift_allocError();
    *(_OWORD *)uint64_t v31 = 0u;
    *(_OWORD *)(v31 + 16) = 0u;
    *(void *)(v31 + 32) = 0;
    *(unsigned char *)(v31 + 40) = 4;
    swift_willThrow();
    sub_2480D1768(v28, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    sub_2480D1768(v29, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v32 = *(void *)(v30 + v27);
    *(void *)(v30 + v27) = 0;
  }
  sub_2480C64D0(v32);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
LABEL_13:
  return v37();
}

uint64_t sub_2480C926C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 56);
  swift_task_dealloc();
  sub_2480D1768(v1, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  return MEMORY[0x270FA2498](sub_2480C92F8, v2, 0);
}

uint64_t sub_2480C92F8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(void *)(v2 + v1);
  *(void *)(v2 + v1) = 0;
  sub_2480C64D0(v3);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_2480C93BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v50 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v52 = (uint64_t)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for MachRepairMessage();
  uint64_t v6 = MEMORY[0x270FA5388](v59);
  uint64_t v57 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  char v58 = (char *)v47 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v54 = (uint64_t)v47 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v56 = (char *)v47 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v47 - v14;
  uint64_t v16 = sub_248174CE0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  char v20 = (char *)v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  os_log_type_t v22 = (char *)v47 - v21;
  if (qword_2692D4D68 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_248174B90();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_2692D6A60);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v25(v22, a1, v16);
  uint64_t v55 = v24;
  uint64_t v26 = sub_248174B70();
  os_log_type_t v27 = sub_2481755C0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v53 = v15;
    uint64_t v29 = (uint8_t *)v28;
    uint64_t v48 = swift_slowAlloc();
    *(void *)&long long v61 = v48;
    uint64_t v49 = a1;
    *(_DWORD *)uint64_t v29 = 136315138;
    v47[1] = v29 + 4;
    v25(v20, (uint64_t)v22, v16);
    uint64_t v30 = sub_248175190();
    uint64_t v60 = sub_247FB6D24(v30, v31, (uint64_t *)&v61);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    _os_log_impl(&dword_247F93000, v26, v27, "Received XPC message: %s", v29, 0xCu);
    uint64_t v32 = v48;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v32, -1, -1);
    uint64_t v33 = v29;
    uint64_t v15 = v53;
    MEMORY[0x24C574E00](v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  }

  sub_2480D4958(&qword_2692D6868, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
  uint64_t v34 = (uint64_t)v56;
  sub_248174CD0();
  uint64_t v35 = (uint64_t)v57;
  uint64_t v36 = (uint64_t)v58;
  sub_2480D33F4(v34, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  uint64_t v37 = v54;
  sub_2480D17C8((uint64_t)v15, v54, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    uint64_t v38 = v52;
    sub_247FE06A4(v37, v52, &qword_2692D6630);
    sub_2480C9D38(v38, v50, v51);
    swift_storeEnumTagMultiPayload();
    sub_2480D4958(&qword_2692D6870, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
    sub_248174CC0();
    sub_2480D1768(v36, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    sub_247FB33D4(v38, &qword_2692D6630);
    uint64_t v39 = (uint64_t)v15;
  }
  else
  {
    uint64_t v53 = v15;
    sub_2480D17C8((uint64_t)v15, v35, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v40 = sub_248174B70();
    os_log_type_t v41 = sub_2481755C0();
    if (os_log_type_enabled(v40, v41))
    {
      unint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(void *)&long long v61 = v43;
      *(_DWORD *)unint64_t v42 = 136315138;
      uint64_t v56 = (char *)(v42 + 4);
      sub_2480D17C8(v35, v36, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v44 = sub_248175190();
      uint64_t v60 = sub_247FB6D24(v44, v45, (uint64_t *)&v61);
      sub_248175730();
      swift_bridgeObjectRelease();
      sub_2480D1768(v35, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      _os_log_impl(&dword_247F93000, v40, v41, "Received unexpected mach repair message: %s", v42, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v43, -1, -1);
      MEMORY[0x24C574E00](v42, -1, -1);
    }
    else
    {
      sub_2480D1768(v35, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    }

    *(void *)(v36 + 32) = 0;
    *(_OWORD *)uint64_t v36 = 0u;
    *(_OWORD *)(v36 + 16) = 0u;
    *(unsigned char *)(v36 + 40) = 4;
    swift_storeEnumTagMultiPayload();
    sub_2480D4958(&qword_2692D6870, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
    sub_248174CC0();
    sub_2480D1768(v36, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    sub_2480D1768((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v39 = v54;
  }
  return sub_2480D1768(v39, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
}

void sub_2480C9D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v56 = a3;
  uint64_t v59 = a2;
  uint64_t v4 = type metadata accessor for RepairContext();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v53 = v11;
  uint64_t v55 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v52 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v47 - v16;
  if (qword_2692D4D58 != -1) {
    swift_once();
  }
  uint64_t v51 = sub_248174B90();
  __swift_project_value_buffer(v51, (uint64_t)qword_26930EEA0);
  sub_247FBB338(a1, (uint64_t)v17, &qword_2692D6630);
  uint64_t v18 = sub_248174B70();
  os_log_type_t v19 = sub_2481755C0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v54 = a1;
  if (v20)
  {
    uint64_t v49 = v9;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v47 = v7;
    os_log_type_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v48 = v4;
    uint64_t v24 = v23;
    *(void *)&long long aBlock = v23;
    *(_DWORD *)os_log_type_t v22 = 136315138;
    sub_247FBB338((uint64_t)v17, (uint64_t)v15, &qword_2692D6630);
    uint64_t v25 = sub_248175190();
    v66[0] = sub_247FB6D24(v25, v26, (uint64_t *)&aBlock);
    uint64_t v9 = v49;
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FB33D4((uint64_t)v17, &qword_2692D6630);
    _os_log_impl(&dword_247F93000, v18, v19, "Received coordinated model update: %s", v22, 0xCu);
    swift_arrayDestroy();
    uint64_t v27 = v24;
    uint64_t v4 = v48;
    MEMORY[0x24C574E00](v27, -1, -1);
    uint64_t v28 = v22;
    uint64_t v7 = v47;
    MEMORY[0x24C574E00](v28, -1, -1);
  }
  else
  {
    sub_247FB33D4((uint64_t)v17, &qword_2692D6630);
  }

  uint64_t isEscapingClosureAtFileLocation = v59;
  sub_247FBB338(v59 + *(int *)(v4 + 20), (uint64_t)&aBlock, &qword_2692D6FF0);
  if (v62)
  {
    sub_247FB8480(&aBlock, (uint64_t)v66);
    uint64_t v30 = v67;
    uint64_t v31 = v68;
    __swift_project_boxed_opaque_existential_1(v66, v67);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
    if (!v32) {
      uint64_t v32 = *(id *)(v50 + 112);
    }
    uint64_t v33 = v32;
    sub_247FF649C((uint64_t)v66, (uint64_t)v65);
    sub_247FBB338(v54, (uint64_t)v15, &qword_2692D6630);
    uint64_t v34 = v57;
    uint64_t v9 = v55;
    uint64_t v35 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v55, v56, v58);
    unint64_t v36 = (*(unsigned __int8 *)(v52 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    unint64_t v37 = (v13 + *(unsigned __int8 *)(v34 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v38 = swift_allocObject();
    sub_247FB8480(v65, v38 + 16);
    sub_247FE06A4((uint64_t)v15, v38 + v36, &qword_2692D6630);
    (*(void (**)(unint64_t, char *, uint64_t))(v34 + 32))(v38 + v37, v9, v35);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_2480D2C30;
    *(void *)(v39 + 24) = v38;
    uint64_t v63 = sub_2480D2D18;
    uint64_t v64 = v39;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    long long v61 = sub_2480C6078;
    uint64_t v62 = &block_descriptor_54;
    uint64_t v40 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    dispatch_async_and_wait(v33, v40);

    _Block_release(v40);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_17;
  }
  sub_247FB33D4((uint64_t)&aBlock, &qword_2692D6FF0);
  if (qword_2692D4D68 != -1) {
LABEL_17:
  }
    swift_once();
  __swift_project_value_buffer(v51, (uint64_t)qword_2692D6A60);
  sub_2480D17C8(isEscapingClosureAtFileLocation, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RepairContext);
  os_log_type_t v41 = sub_248174B70();
  os_log_type_t v42 = sub_2481755D0();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(void *)&long long aBlock = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    sub_2480D17C8((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for RepairContext);
    uint64_t v45 = sub_248175190();
    v66[0] = sub_247FB6D24(v45, v46, (uint64_t *)&aBlock);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480D1768((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RepairContext);
    _os_log_impl(&dword_247F93000, v41, v42, "Unable to use exchange from context: %s", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v44, -1, -1);
    MEMORY[0x24C574E00](v43, -1, -1);
  }
  else
  {
    sub_2480D1768((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for RepairContext);
  }
}

uint64_t sub_2480CA504(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[4];
  uint64_t v18 = a1[3];
  v17[1] = __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_247FBB338(a2, (uint64_t)v11, &qword_2692D6630);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v14 = (v10 + *(unsigned __int8 *)(v6 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v15 = swift_allocObject();
  sub_247FE06A4((uint64_t)v11, v15 + v13, &qword_2692D6630);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v15 + v14, (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v12 + 16))(a2, sub_2480D3318, v15, v18, v12);
  return swift_release();
}

uint64_t sub_2480CA734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = type metadata accessor for MachRepairMessage();
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (uint64_t)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C8);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628);
  uint64_t v9 = MEMORY[0x270FA5388](v34);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)v33 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v33 - v18;
  if (qword_2692D4D58 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_248174B90();
  __swift_project_value_buffer(v20, (uint64_t)qword_26930EEA0);
  sub_247FBB338(a2, (uint64_t)v19, &qword_2692D6630);
  uint64_t v36 = a1;
  sub_247FBB338(a1, (uint64_t)v13, &qword_2692D6628);
  uint64_t v21 = sub_248174B70();
  os_log_type_t v22 = sub_2481755C0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    v33[0] = v7;
    uint64_t v25 = v24;
    uint64_t v41 = v24;
    *(_DWORD *)uint64_t v23 = 136315394;
    v33[1] = a3;
    sub_247FBB338((uint64_t)v19, (uint64_t)v17, &qword_2692D6630);
    uint64_t v26 = sub_248175190();
    uint64_t v40 = sub_247FB6D24(v26, v27, &v41);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FB33D4((uint64_t)v19, &qword_2692D6630);
    *(_WORD *)(v23 + 12) = 2080;
    sub_247FBB338((uint64_t)v13, (uint64_t)v11, &qword_2692D6628);
    uint64_t v28 = sub_248175190();
    uint64_t v40 = sub_247FB6D24(v28, v29, &v41);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FB33D4((uint64_t)v13, &qword_2692D6628);
    _os_log_impl(&dword_247F93000, v21, v22, "Responding to model update (%s) with response: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    uint64_t v30 = v25;
    uint64_t v7 = v33[0];
    MEMORY[0x24C574E00](v30, -1, -1);
    MEMORY[0x24C574E00](v23, -1, -1);
  }
  else
  {
    sub_247FB33D4((uint64_t)v19, &qword_2692D6630);
    sub_247FB33D4((uint64_t)v13, &qword_2692D6628);
  }

  sub_247FBB338(v36, v39, &qword_2692D6628);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v31 = v35;
  sub_248175410();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v31, v7);
}

uint64_t sub_2480CABC8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v2 - 8);
  long long v61 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3E0);
  uint64_t v67 = *(void *)(v63 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v63);
  uint64_t v68 = v5;
  uint64_t v69 = (uint64_t)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3E8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3F0);
  uint64_t v73 = *(void *)(v11 - 8);
  uint64_t v74 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v59 = v13;
  uint64_t v60 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v75 = (char *)&v57 - v14;
  uint64_t v62 = type metadata accessor for RepairContext();
  uint64_t v65 = *(void *)(v62 - 8);
  uint64_t v15 = *(void *)(v65 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v62);
  uint64_t v66 = (uint64_t)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v57 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v57 - v20;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v71 = v7;
  uint64_t v22 = sub_248174B90();
  __swift_project_value_buffer(v22, (uint64_t)qword_2692DA340);
  uint64_t v70 = a1;
  sub_2480D17C8(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for RepairContext);
  uint64_t v23 = sub_248174B70();
  os_log_type_t v24 = sub_2481755C0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v58 = v8;
    uint64_t v27 = v26;
    uint64_t v77 = v26;
    uint64_t v57 = v9;
    *(_DWORD *)uint64_t v25 = 136315138;
    sub_2480D17C8((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for RepairContext);
    uint64_t v28 = sub_248175190();
    uint64_t v76 = sub_247FB6D24(v28, v29, &v77);
    uint64_t v9 = v57;
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480D1768((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for RepairContext);
    _os_log_impl(&dword_247F93000, v23, v24, "Creating new XPC session for context: %s", v25, 0xCu);
    swift_arrayDestroy();
    uint64_t v30 = v27;
    uint64_t v8 = v58;
    MEMORY[0x24C574E00](v30, -1, -1);
    MEMORY[0x24C574E00](v25, -1, -1);
  }
  else
  {
    sub_2480D1768((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for RepairContext);
  }

  uint64_t v63 = swift_allocBox();
  uint64_t v32 = v31;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
  MEMORY[0x270FA5388](v34);
  *(&v57 - 2) = v32;
  type metadata accessor for MachRepairMessage();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v64, *MEMORY[0x263F8F580], v8);
  sub_248175480();
  uint64_t v35 = (uint64_t)v71;
  sub_247FBB338(v32, (uint64_t)v71, &qword_2692DA3E0);
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = v69;
  sub_247FBB338(v35, v69, &qword_2692DA3E0);
  uint64_t v38 = v66;
  sub_2480D17C8(v70, v66, (uint64_t (*)(void))type metadata accessor for RepairContext);
  unint64_t v39 = (*(unsigned __int8 *)(v67 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  unint64_t v40 = (v68 + *(unsigned __int8 *)(v65 + 80) + v39) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v36;
  sub_247FE06A4(v37, v41 + v39, &qword_2692DA3E0);
  uint64_t v42 = v38;
  uint64_t v43 = v63;
  sub_2480D33F4(v42, v41 + v40, (uint64_t (*)(void))type metadata accessor for RepairContext);
  swift_retain();
  swift_retain();
  uint64_t v44 = v72;
  uint64_t v45 = sub_2480CD344((uint64_t)sub_2480D3D2C, v41, (uint64_t)sub_2480D3E18, v43);
  if (v44)
  {
    swift_release();
    swift_release();
    sub_247FB33D4(v35, &qword_2692DA3E0);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v74);
    swift_release();
  }
  else
  {
    sub_247FB33D4(v35, &qword_2692DA3E0);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v46 = sub_2481753D0();
    uint64_t v47 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v61, 1, 1, v46);
    uint64_t v49 = v73;
    uint64_t v48 = v74;
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
    uint64_t v72 = v45;
    uint64_t v51 = v60;
    v50(v60, v75, v74);
    unint64_t v52 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    unint64_t v53 = (v59 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    *(void *)(v54 + 24) = 0;
    uint64_t v55 = v51;
    uint64_t v45 = v72;
    (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v54 + v52, v55, v48);
    *(void *)(v54 + v53) = v45;
    swift_retain();
    sub_24804B560(v47, (uint64_t)&unk_2692DA400, v54);
    swift_release();
    sub_247FB33D4(v47, &qword_2692D9520);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v75, v48);
  }
  swift_release();
  return v45;
}

uint64_t sub_2480CB47C(uint64_t a1, uint64_t a2)
{
  sub_247FB33D4(a2, &qword_2692DA3E0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  return v5(a2, 0, 1, v4);
}

double sub_2480CB54C@<D0>(uint64_t a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v46 = a2;
  uint64_t v50 = a1;
  uint64_t v52 = a4;
  uint64_t v4 = type metadata accessor for RepairContext();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v47 = (uint8_t *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_248174CE0();
  uint64_t v51 = *(void *)(v53 - 8);
  uint64_t v6 = *(void *)(v51 + 64);
  uint64_t v7 = MEMORY[0x270FA5388](v53);
  uint64_t v48 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v49 = (char *)&v43 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3E0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v43 - v19;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v22 = Strong;
    sub_247FBB338((uint64_t)v46, (uint64_t)v13, &qword_2692DA3E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      uint64_t v34 = v5;
      uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      uint64_t v48 = (char *)(v15 + 32);
      v46(v20, v13, v14);
      uint64_t v35 = sub_2481753D0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v45, 1, 1, v35);
      uint64_t v36 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v49, v50, v53);
      sub_2480D17C8(v43, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for RepairContext);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
      unint64_t v37 = (*(unsigned __int8 *)(v36 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      unint64_t v38 = (v6 + *(unsigned __int8 *)(v44 + 80) + v37) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      unint64_t v39 = (v34 + *(unsigned __int8 *)(v15 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      unint64_t v40 = (char *)swift_allocObject();
      *((void *)v40 + 2) = 0;
      *((void *)v40 + 3) = 0;
      *((void *)v40 + 4) = v22;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v40[v37], v49, v53);
      sub_2480D33F4((uint64_t)v47, (uint64_t)&v40[v38], (uint64_t (*)(void))type metadata accessor for RepairContext);
      v46(&v40[v39], v18, v14);
      swift_retain();
      sub_247FFC0C4(v45, (uint64_t)&unk_2692DA420, (uint64_t)v40);
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      goto LABEL_11;
    }
    swift_release();
    sub_247FB33D4((uint64_t)v13, &qword_2692DA3E0);
  }
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_248174B90();
  __swift_project_value_buffer(v23, (uint64_t)qword_2692DA340);
  uint64_t v24 = v51;
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  uint64_t v26 = v48;
  uint64_t v27 = v53;
  v25(v48, v50, v53);
  uint64_t v28 = sub_248174B70();
  os_log_type_t v29 = sub_2481755D0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    uint64_t v55 = v50;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v47 = v30 + 4;
    v25(v49, (uint64_t)v26, v27);
    uint64_t v31 = sub_248175190();
    uint64_t v54 = sub_247FB6D24(v31, v32, &v55);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v27);
    _os_log_impl(&dword_247F93000, v28, v29, "Received a new XPC message but lost self: %s", v30, 0xCu);
    uint64_t v33 = v50;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v30, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v27);
  }

LABEL_11:
  uint64_t v41 = (_OWORD *)v52;
  *(void *)(v52 + 32) = 0;
  double result = 0.0;
  *uint64_t v41 = 0u;
  v41[1] = 0u;
  return result;
}

uint64_t sub_2480CBC04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return MEMORY[0x270FA2498](sub_2480CBC28, a4, 0);
}

uint64_t sub_2480CBC28()
{
  sub_2480C93BC(v0[3], v0[4], v0[5]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_2480CBC8C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_248174CA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_projectBox();
  if (qword_2692D4D68 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_248174B90();
  __swift_project_value_buffer(v10, (uint64_t)qword_2692D6A60);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v11(v8, a1, v5);
  uint64_t v12 = sub_248174B70();
  os_log_type_t v13 = sub_2481755D0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v23 = v9;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v24 = v4;
    *(_DWORD *)uint64_t v14 = 138412290;
    v21[1] = v14 + 4;
    sub_2480D4958(&qword_2692D98C8, MEMORY[0x263F8F408]);
    swift_allocError();
    v11(v15, (uint64_t)v8, v5);
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v25 = v16;
    uint64_t v4 = v24;
    sub_248175730();
    uint64_t v17 = v22;
    *uint64_t v22 = v16;
    uint64_t v9 = v23;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    _os_log_impl(&dword_247F93000, v12, v13, "XPC session cancelled: %@", v14, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v17, -1, -1);
    MEMORY[0x24C574E00](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  swift_beginAccess();
  sub_247FBB338(v9, (uint64_t)v4, &qword_2692DA3E0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_248175420();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v4, v18);
  }
  return result;
}

uint64_t sub_2480CC05C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_248174CE0();
  v5[4] = v6;
  v5[5] = *(void *)(v6 - 8);
  v5[6] = swift_task_alloc();
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for MachRepairMessage();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA408);
  v5[17] = swift_task_alloc();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA410);
  v5[18] = v8;
  v5[19] = *(void *)(v8 - 8);
  v5[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2480CC264, 0, 0);
}

uint64_t sub_2480CC264()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3F0);
  sub_248175440();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[21] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2480CC324;
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  return MEMORY[0x270FA1F68](v2, 0, 0, v3);
}

uint64_t sub_2480CC324()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2480CC420, 0, 0);
}

uint64_t sub_2480CC420()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[10] + 48))(v1, 1, v0[9]) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    if (qword_2692D4D68 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_248174B90();
    __swift_project_value_buffer(v2, (uint64_t)qword_2692D6A60);
    uint64_t v3 = sub_248174B70();
    os_log_type_t v4 = sub_2481755B0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_247F93000, v3, v4, "End of outgoing messages to daemon", v5, 2u);
      MEMORY[0x24C574E00](v5, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    sub_2480D33F4(v1, v0[16], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    if (qword_2692D4D68 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[15];
    uint64_t v9 = v0[16];
    uint64_t v10 = sub_248174B90();
    v0[22] = __swift_project_value_buffer(v10, (uint64_t)qword_2692D6A60);
    sub_2480D17C8(v9, v8, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v11 = sub_248174B70();
    os_log_type_t v12 = sub_2481755C0();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[15];
    if (v13)
    {
      uint64_t v15 = v0[14];
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v26 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      sub_2480D17C8(v14, v15, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v18 = sub_248175190();
      *(void *)(v16 + 4) = sub_247FB6D24(v18, v19, &v26);
      swift_bridgeObjectRelease();
      sub_2480D1768(v14, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      _os_log_impl(&dword_247F93000, v11, v12, "Sending message: %s", (uint8_t *)v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v17, -1, -1);
      MEMORY[0x24C574E00](v16, -1, -1);
    }
    else
    {
      sub_2480D1768(v0[15], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    }

    uint64_t v20 = v0[16];
    uint64_t v21 = v0[3];
    uint64_t v22 = swift_task_alloc();
    v0[23] = v22;
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = v20;
    uint64_t v23 = (void *)swift_task_alloc();
    v0[24] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_2480CC8B0;
    uint64_t v24 = v0[8];
    uint64_t v25 = v0[4];
    return MEMORY[0x270FA2360](v24, 0, 0, 0x293A5F28646E6573, 0xE800000000000000, sub_2480D4034, v22, v25);
  }
}

uint64_t sub_2480CC8B0()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_2480CC9CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_2480CCCC4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480CC9CC()
{
  uint64_t v25 = v0;
  swift_task_dealloc();
  uint64_t v1 = (void *)v0[25];
  sub_2480D17C8(v0[16], v0[11], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755D0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[16];
  if (v6)
  {
    uint64_t v8 = v0[14];
    uint64_t v9 = v0[11];
    uint64_t v23 = v0[16];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = v12;
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_2480D17C8(v9, v8, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v13 = sub_248175190();
    *(void *)(v10 + 4) = sub_247FB6D24(v13, v14, &v24);
    swift_bridgeObjectRelease();
    sub_2480D1768(v9, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    *(_WORD *)(v10 + 12) = 2112;
    id v15 = v1;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v10 + 14) = v16;
    void *v11 = v16;

    _os_log_impl(&dword_247F93000, v4, v5, "Failed to send message (%s) with error: %@", (uint8_t *)v10, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v12, -1, -1);
    MEMORY[0x24C574E00](v10, -1, -1);

    uint64_t v17 = v23;
  }
  else
  {
    uint64_t v18 = v0[11];

    sub_2480D1768(v18, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v17 = v7;
  }
  sub_2480D1768(v17, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  unint64_t v19 = (void *)swift_task_alloc();
  v0[21] = (uint64_t)v19;
  *unint64_t v19 = v0;
  v19[1] = sub_2480CC324;
  uint64_t v20 = v0[17];
  uint64_t v21 = v0[18];
  return MEMORY[0x270FA1F68](v20, 0, 0, v21);
}

uint64_t sub_2480CCCC4()
{
  uint64_t v55 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[5] + 16);
  v1(v0[7], v0[8], v0[4]);
  id v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[7];
  if (v4)
  {
    uint64_t v6 = v0[5];
    uint64_t v7 = v0[6];
    uint64_t v8 = v0[4];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    v54[0] = v51;
    *(_DWORD *)uint64_t v9 = 136315138;
    v1(v7, v5, v8);
    uint64_t v10 = sub_248175190();
    *(void *)(v9 + 4) = sub_247FB6D24(v10, v11, v54);
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v12(v5, v8);
    _os_log_impl(&dword_247F93000, v2, v3, "Sent message and received reply: %s", (uint8_t *)v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v51, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0[5] + 8);
    v12(v0[7], v0[4]);
  }

  uint64_t v13 = (void *)v0[25];
  sub_2480D4958(&qword_2692D6868, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
  sub_248174CD0();
  if (v13)
  {
    v12(v0[8], v0[4]);
    sub_2480D17C8(v0[16], v0[11], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    id v14 = v13;
    id v15 = v13;
    uint64_t v16 = sub_248174B70();
    os_log_type_t v17 = sub_2481755D0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[16];
    if (v18)
    {
      uint64_t v20 = v0[14];
      uint64_t v21 = v0[11];
      uint64_t v52 = v0[16];
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v54[0] = v24;
      *(_DWORD *)uint64_t v22 = 136315394;
      sub_2480D17C8(v21, v20, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v25 = sub_248175190();
      *(void *)(v22 + 4) = sub_247FB6D24(v25, v26, v54);
      swift_bridgeObjectRelease();
      sub_2480D1768(v21, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      *(_WORD *)(v22 + 12) = 2112;
      id v27 = v13;
      uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v22 + 14) = v28;
      *uint64_t v23 = v28;

      _os_log_impl(&dword_247F93000, v16, v17, "Failed to send message (%s) with error: %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v23, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v24, -1, -1);
      MEMORY[0x24C574E00](v22, -1, -1);

      uint64_t v29 = v52;
    }
    else
    {
      uint64_t v40 = v0[11];

      sub_2480D1768(v40, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v29 = v19;
    }
  }
  else
  {
    sub_2480D17C8(v0[13], v0[12], (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    uint64_t v30 = sub_248174B70();
    os_log_type_t v31 = sub_2481755C0();
    BOOL v32 = os_log_type_enabled(v30, v31);
    uint64_t v33 = v0[16];
    if (v32)
    {
      uint64_t v34 = v0[14];
      uint64_t v35 = v0[12];
      uint64_t v50 = v0[4];
      uint64_t v53 = v0[8];
      uint64_t v49 = v0[13];
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      v54[0] = v37;
      *(_DWORD *)uint64_t v36 = 136315138;
      sub_2480D17C8(v35, v34, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v38 = sub_248175190();
      *(void *)(v36 + 4) = sub_247FB6D24(v38, v39, v54);
      swift_bridgeObjectRelease();
      sub_2480D1768(v35, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      _os_log_impl(&dword_247F93000, v30, v31, "Decoded response: %s", (uint8_t *)v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v37, -1, -1);
      MEMORY[0x24C574E00](v36, -1, -1);

      sub_2480D1768(v49, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      v12(v53, v50);
    }
    else
    {
      uint64_t v42 = v0[12];
      uint64_t v41 = v0[13];
      uint64_t v43 = v0[8];
      uint64_t v44 = v0[4];

      sub_2480D1768(v42, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      sub_2480D1768(v41, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      v12(v43, v44);
    }
    uint64_t v29 = v33;
  }
  sub_2480D1768(v29, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  uint64_t v45 = (void *)swift_task_alloc();
  v0[21] = v45;
  *uint64_t v45 = v0;
  v45[1] = sub_2480CC324;
  uint64_t v46 = v0[17];
  uint64_t v47 = v0[18];
  return MEMORY[0x270FA1F68](v46, 0, 0, v47);
}

uint64_t sub_2480CD344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v37 = a1;
  uint64_t v38 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97D0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_248174C90();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v7 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession);
  if (v17)
  {
    uint64_t v18 = qword_2692D4DC0;
    swift_retain();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v19 = sub_248174B90();
    __swift_project_value_buffer(v19, (uint64_t)qword_2692DA340);
    swift_retain_n();
    uint64_t v20 = sub_248174B70();
    os_log_type_t v21 = sub_2481755C0();
    if (os_log_type_enabled(v20, v21))
    {
      v35[1] = a2;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v36 = v6;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v40 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      v35[0] = v23 + 4;
      uint64_t v39 = v17;
      sub_248174C80();
      swift_retain();
      uint64_t v25 = sub_248175190();
      uint64_t v39 = sub_247FB6D24(v25, v26, &v40);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v20, v21, "Activating inactive session: %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v24, -1, -1);
      id v27 = v23;
      uint64_t v6 = v36;
      MEMORY[0x24C574E00](v27, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    sub_248174BD0();
    sub_248174C10();
    sub_248174C00();
    sub_248174C60();
    if (v6) {
      swift_release();
    }
  }
  else
  {
    sub_247FBB338(v7 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, (uint64_t)v12, &qword_2692D97D0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_247FB33D4((uint64_t)v12, &qword_2692D97D0);
      if (qword_2692D4DC0 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_248174B90();
      __swift_project_value_buffer(v28, (uint64_t)qword_2692DA340);
      uint64_t v29 = sub_248174B70();
      os_log_type_t v30 = sub_2481755C0();
      if (os_log_type_enabled(v29, v30))
      {
        os_log_type_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v31 = 0;
        _os_log_impl(&dword_247F93000, v29, v30, "Creating new repair xpc session from scratch", v31, 2u);
        MEMORY[0x24C574E00](v31, -1, -1);
      }

      uint64_t v32 = sub_2480CDBCC(0xD000000000000022, 0x8000000248190A20, v37, a2, a3);
      if (!v5) {
        return v32;
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
      uint64_t v33 = sub_2480CD828(v16, v37, a2, a3, v38);
      if (!v5) {
        uint64_t v17 = v33;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
  return v17;
}

uint64_t sub_2480CD828(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v8 = sub_248174BF0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v36 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_248174C90();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v34 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v30 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v30 - v17;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_248174B90();
  __swift_project_value_buffer(v19, (uint64_t)qword_2692DA340);
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v35 = a1;
  uint64_t v41 = v20;
  v20(v18, a1, v10);
  os_log_type_t v21 = sub_248174B70();
  os_log_type_t v22 = sub_2481755C0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v32 = a5;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v43 = v31;
    uint64_t v33 = v5;
    *(_DWORD *)uint64_t v24 = 136315138;
    v30[1] = v24 + 4;
    v41(v16, v18, v10);
    uint64_t v25 = sub_248175190();
    uint64_t v42 = sub_247FB6D24(v25, v26, &v43);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    _os_log_impl(&dword_247F93000, v21, v22, "Creating new session with xpc endpoint: %s", v24, 0xCu);
    uint64_t v27 = v31;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v27, -1, -1);
    MEMORY[0x24C574E00](v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
  }

  sub_248174C80();
  v41(v34, v35, v10);
  id v28 = *(id *)(v37 + 112);
  sub_248174BE0();
  swift_retain();
  swift_retain();
  return sub_248174C70();
}

uint64_t sub_2480CDBCC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v21[6] = a5;
  uint64_t v10 = sub_248174BF0();
  MEMORY[0x270FA5388](v10 - 8);
  v21[5] = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_248174B90();
  __swift_project_value_buffer(v12, (uint64_t)qword_2692DA340);
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_248174B70();
  os_log_type_t v14 = sub_2481755C0();
  if (os_log_type_enabled(v13, v14))
  {
    v21[3] = v5;
    uint64_t v15 = swift_slowAlloc();
    void v21[2] = a4;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v22 = v17;
    v21[1] = a3;
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    v21[7] = sub_247FB6D24(a1, a2, &v22);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, v13, v14, "Creating new session for mach service: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v17, -1, -1);
    MEMORY[0x24C574E00](v16, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_248174C80();
  uint64_t v18 = *(void **)(v21[4] + 112);
  swift_bridgeObjectRetain();
  id v19 = v18;
  sub_248174BE0();
  swift_retain();
  swift_retain();
  return sub_248174BC0();
}

uint64_t RepairController.unownedExecutor.getter()
{
  return v0;
}

uint64_t __RepairController.repairController.getter()
{
  return swift_retain();
}

id __RepairController.__allocating_init(queue:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97D0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_allocWithZone(v1);
  uint64_t v7 = sub_248174C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  type metadata accessor for RepairController();
  uint64_t v8 = swift_allocObject();
  id v9 = a1;
  swift_defaultActor_initialize();
  *(void *)(v8 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  *(void *)(v8 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession) = 0;
  *(void *)(v8 + 112) = v9;
  sub_247FE06A4((uint64_t)v5, v8 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, &qword_2692D97D0);
  *(void *)(v8 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  swift_release();
  uint64_t v10 = (objc_class *)type metadata accessor for __RepairController();
  uint64_t v11 = (char *)objc_allocWithZone(v10);
  *(void *)&v11[OBJC_IVAR_____AISRepairController_repairController] = v8;
  v14.receiver = v11;
  v14.super_class = v10;
  id v12 = objc_msgSendSuper2(&v14, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v12;
}

id __RepairController.init(queue:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D97D0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_248174C90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for RepairController();
  uint64_t v6 = swift_allocObject();
  id v7 = a1;
  swift_defaultActor_initialize();
  *(void *)(v6 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  *(void *)(v6 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_activeSession) = 0;
  *(void *)(v6 + 112) = v7;
  sub_247FE06A4((uint64_t)v4, v6 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_endpoint, &qword_2692D97D0);
  *(void *)(v6 + OBJC_IVAR____TtC12AppleIDSetup16RepairController_inactiveSession) = 0;
  swift_release();
  uint64_t v8 = (objc_class *)type metadata accessor for __RepairController();
  id v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR_____AISRepairController_repairController] = v6;
  v12.receiver = v9;
  v12.super_class = v8;
  id v10 = objc_msgSendSuper2(&v12, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v10;
}

uint64_t sub_2480CE1BC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480CF6A4(a1, a2, a3, "__AISRepairController repair with context called: %@", (uint64_t)&unk_26FC44648, (void (*)(uint64_t, uint64_t))sub_247F98D10, (uint64_t)&unk_2692DA388, (uint64_t)&unk_26FC445F8);
}

uint64_t sub_2480CE238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[60] = a6;
  v7[61] = a7;
  v7[58] = a4;
  v7[59] = a5;
  uint64_t v8 = sub_248174D30();
  v7[62] = v8;
  v7[63] = *(void *)(v8 - 8);
  v7[64] = swift_task_alloc();
  uint64_t v9 = sub_248174D80();
  v7[65] = v9;
  v7[66] = *(void *)(v9 - 8);
  v7[67] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2480CE358, 0, 0);
}

uint64_t sub_2480CE358()
{
  v0[68] = *(void *)(v0[58] + OBJC_IVAR_____AISRepairController_repairController);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[69] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_2480CE408;
  uint64_t v2 = v0[59];
  return sub_2480C7288((uint64_t)(v0 + 17), v2);
}

uint64_t sub_2480CE408()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2480CECB4;
  }
  else {
    uint64_t v2 = sub_2480CE51C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480CE51C()
{
  uint64_t v59 = v0;
  uint64_t v1 = v0[17];
  v0[2] = v1;
  uint64_t v2 = (uint64_t)(v0 + 2);
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[23];
  uint64_t v8 = v0[24];
  uint64_t v9 = v0[25];
  uint64_t v10 = v0[26];
  uint64_t v11 = v0[27];
  uint64_t v12 = v0[28];
  uint64_t v13 = v0[29];
  uint64_t v14 = v0[30];
  uint64_t v15 = v0[31];
  v0[3] = v0[18];
  v0[4] = v3;
  uint64_t v52 = v3;
  uint64_t v53 = v4;
  v0[5] = v4;
  v0[6] = v5;
  uint64_t v55 = v5;
  uint64_t v56 = v7;
  uint64_t v57 = v6;
  v0[7] = v6;
  v0[8] = v7;
  uint64_t v54 = v8;
  v0[9] = v8;
  v0[10] = v9;
  uint64_t v50 = v12;
  uint64_t v51 = v10;
  v0[11] = v10;
  v0[12] = v11;
  v0[13] = v12;
  v0[14] = v13;
  v0[15] = v14;
  v0[16] = v15;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_248174B90();
  __swift_project_value_buffer(v16, (uint64_t)qword_2692DA340);
  sub_2480D34D4(v1, v46, v52, v53, v55, v57, v56, v54, v9, v51, v11, v50, v13);
  id v17 = 0;
  uint64_t v49 = v13;
  uint64_t v48 = v9;
  sub_2480D34D4(v1, v46, v52, v53, v55, v57, v56, v54, v9, v51, v11, v50, v13);
  id v18 = 0;
  id v19 = sub_248174B70();
  os_log_type_t v20 = sub_2481755B0();
  log = v19;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v58[0] = v38;
    *(_DWORD *)uint64_t v21 = 136315394;
    sub_247FE06A4((uint64_t)(v0 + 2), (uint64_t)(v0 + 32), &qword_2692DA3D8);
    sub_2480D34D4(v1, v46, v52, v53, v55, v57, v56, v54, v9, v51, v11, v50, v49);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3D8);
    uint64_t v22 = sub_248175190();
    uint64_t v24 = v44;
    v44[54] = sub_247FB6D24(v22, v23, v58);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480D3580(v1, v46, v52, v53, v55, v57, v56, v54, v9, v51, v11, v50, v49);
    sub_2480D3580(v1, v46, v52, v53, v55, v57, v56, v54, v9, v51, v11, v50, v49);
    *(_WORD *)(v21 + 12) = 2080;
    v44[55] = 0;
    id v25 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9870);
    uint64_t v26 = sub_248175190();
    v44[56] = sub_247FB6D24(v26, v27, v58);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, log, v20, "Returning repair report converted into objc: %s with error: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v38, -1, -1);
    MEMORY[0x24C574E00](v21, -1, -1);

    uint64_t v28 = v46;
  }
  else
  {
    sub_2480D3580(v1, v46, v52, v53, v55, v57, v56, v54, v9, v51, v11, v50, v49);
    sub_2480D3580(v1, v46, v52, v53, v55, v57, v56, v54, v9, v51, v11, v50, v49);

    uint64_t v28 = v46;
    uint64_t v24 = v44;
  }
  uint64_t v29 = v24[67];
  uint64_t v45 = v24[66];
  uint64_t v47 = v24[65];
  os_log_t loga = (os_log_t)v24[63];
  uint64_t v30 = v24[61];
  *(void *)uint64_t type = v24[64];
  uint64_t v41 = v24[62];
  uint64_t v31 = v24[60];
  uint64_t v39 = *(void **)(v24[68] + 112);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v31;
  v32[3] = v30;
  sub_247FE06A4(v2, (uint64_t)(v32 + 4), &qword_2692DA3D8);
  v32[19] = 0;
  v24[51] = sub_2480D36C4;
  v24[52] = v32;
  v24[47] = MEMORY[0x263EF8330];
  v24[48] = 1107296256;
  v24[49] = sub_2480360BC;
  v24[50] = &block_descriptor_70;
  uint64_t v33 = _Block_copy(v24 + 47);
  sub_2480D34D4(v1, v28, v52, v53, v55, v57, v56, v54, v48, v51, v11, v50, v49);
  id v34 = 0;
  id v35 = v39;
  sub_247F98D10(v31);
  sub_248174D60();
  v24[53] = MEMORY[0x263F8EE78];
  sub_2480D4958((unint64_t *)&qword_2692D8C98, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CA0);
  sub_24809FFEC((unint64_t *)&qword_2692D8CA8, &qword_2692D8CA0);
  sub_2481757A0();
  MEMORY[0x24C573B30](0, v29, *(void *)type, v33);
  _Block_release(v33);

  sub_2480D3580(v1, v28, v52, v53, v55, v57, v56, v54, v48, v51, v11, v50, v49);
  ((void (*)(os_log_type_t *, uint64_t))loga[1].isa)(*(os_log_type_t **)type, v41);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v29, v47);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(void))v24[1];
  return v36();
}

uint64_t sub_2480CECB4()
{
  uint64_t v44 = v0;
  unint64_t v1 = 0x2692D4000uLL;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 560);
  uint64_t v3 = sub_248174B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_2692DA340);
  id v4 = v2;
  id v5 = v2;
  uint64_t v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755D0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void **)(v0 + 560);
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(void *)uint64_t type = v3;
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 456) = v13;
    sub_248175730();
    void *v11 = v13;
    unint64_t v1 = 0x2692D4000;

    _os_log_impl(&dword_247F93000, v6, v7, "Failed to repair with error: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    uint64_t v14 = v11;
    uint64_t v3 = *(void *)type;
    MEMORY[0x24C574E00](v14, -1, -1);
    MEMORY[0x24C574E00](v10, -1, -1);
  }
  else
  {
  }
  uint64_t v15 = *(void **)(v0 + 560);

  *(void *)(v0 + 128) = 0;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  if (*(void *)(v1 + 3520) != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v3, (uint64_t)qword_2692DA340);
  sub_2480D34D4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  id v16 = v15;
  sub_2480D34D4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  id v17 = v15;
  id v18 = sub_248174B70();
  os_log_type_t v19 = sub_2481755B0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v43 = v38;
    *(_DWORD *)uint64_t v20 = 136315394;
    sub_247FE06A4(v0 + 16, v0 + 256, &qword_2692DA3D8);
    sub_2480D34D4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3D8);
    uint64_t v21 = sub_248175190();
    *(void *)(v0 + 432) = sub_247FB6D24(v21, v22, &v43);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480D3580(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    sub_2480D3580(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    *(_WORD *)(v20 + 12) = 2080;
    *(void *)(v0 + 440) = v15;
    id v23 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9870);
    uint64_t v24 = sub_248175190();
    *(void *)(v0 + 448) = sub_247FB6D24(v24, v25, &v43);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v18, v19, "Returning repair report converted into objc: %s with error: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v38, -1, -1);
    MEMORY[0x24C574E00](v20, -1, -1);
  }
  else
  {
    sub_2480D3580(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    sub_2480D3580(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
  uint64_t v26 = *(void *)(v0 + 536);
  *(void *)os_log_type_t typea = *(void *)(v0 + 528);
  uint64_t v42 = *(void *)(v0 + 520);
  uint64_t v27 = *(void *)(v0 + 512);
  uint64_t v39 = *(void *)(v0 + 504);
  uint64_t v29 = *(void *)(v0 + 488);
  uint64_t v28 = *(void *)(v0 + 496);
  uint64_t v30 = *(void *)(v0 + 480);
  uint64_t v37 = *(void **)(*(void *)(v0 + 544) + 112);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v30;
  v31[3] = v29;
  sub_247FE06A4(v0 + 16, (uint64_t)(v31 + 4), &qword_2692DA3D8);
  v31[19] = v15;
  *(void *)(v0 + 408) = sub_2480D36C4;
  *(void *)(v0 + 416) = v31;
  *(void *)(v0 + 376) = MEMORY[0x263EF8330];
  *(void *)(v0 + 384) = 1107296256;
  *(void *)(v0 + 392) = sub_2480360BC;
  *(void *)(v0 + 400) = &block_descriptor_70;
  uint64_t v32 = _Block_copy((const void *)(v0 + 376));
  sub_2480D34D4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  id v33 = v15;
  id v34 = v37;
  sub_247F98D10(v30);
  sub_248174D60();
  *(void *)(v0 + 424) = MEMORY[0x263F8EE78];
  sub_2480D4958((unint64_t *)&qword_2692D8C98, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CA0);
  sub_24809FFEC((unint64_t *)&qword_2692D8CA8, &qword_2692D8CA0);
  sub_2481757A0();
  MEMORY[0x24C573B30](0, v26, v27, v32);
  _Block_release(v32);

  sub_2480D3580(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v27, v28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)typea + 8))(v26, v42);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

void sub_2480CF498(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    sub_247FE06A4(a3, (uint64_t)&v8, &qword_2692DA3D8);
    if (*((void *)&v8 + 1))
    {
      RepairReport.into()(v9);
      os_log_type_t v7 = v6;
    }
    else
    {
      os_log_type_t v7 = 0;
    }
    a1(v7, a4);
  }
}

uint64_t sub_2480CF628(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480CF6A4(a1, a2, a3, "__AISRepairController generate symptom report with context called: %@", (uint64_t)&unk_26FC446C0, (void (*)(uint64_t, uint64_t))sub_2480D49A4, (uint64_t)&unk_2692DA398, (uint64_t)&unk_26FC44670);
}

uint64_t sub_2480CF6A4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8)
{
  uint64_t v80 = a4;
  uint64_t v81 = a8;
  uint64_t v89 = a2;
  uint64_t v82 = sub_248174D30();
  uint64_t v13 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  long long v85 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_248174D80();
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  unsigned __int8 v83 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v16 - 8);
  id v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for RepairContext();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v72 = v19;
  uint64_t v73 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v75 = (uint64_t)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v78 = (uint64_t)&v72 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v92 = (char *)&v72 - v26;
  uint64_t v74 = v27;
  MEMORY[0x270FA5388](v25);
  uint64_t v88 = (uint64_t)&v72 - v28;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_248174B90();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_2692DA340);
  id v31 = a1;
  uint64_t v94 = v30;
  uint64_t v32 = sub_248174B70();
  os_log_type_t v33 = sub_2481755B0();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v90 = a3;
  uint64_t v91 = a6;
  uint64_t v79 = a7;
  uint64_t v76 = v18;
  uint64_t v77 = a5;
  uint64_t v87 = v13;
  if (v34)
  {
    id v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    *(_DWORD *)id v35 = 138412290;
    v116[0] = (uint64_t)v31;
    id v37 = v31;
    sub_248175730();
    *uint64_t v36 = v31;

    _os_log_impl(&dword_247F93000, v32, v33, v80, v35, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v36, -1, -1);
    MEMORY[0x24C574E00](v35, -1, -1);
  }
  else
  {
  }
  uint64_t v38 = v31;
  uint64_t v39 = sub_248174B70();
  os_log_type_t v40 = sub_2481755C0();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 138412290;
    v116[0] = (uint64_t)v38;
    uint64_t v43 = v38;
    sub_248175730();
    *uint64_t v42 = v38;

    _os_log_impl(&dword_247F93000, v39, v40, "Attempting to build repair context with compat objective-c context: %@", v41, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v42, -1, -1);
    MEMORY[0x24C574E00](v41, -1, -1);
  }
  else
  {

    uint64_t v39 = v38;
  }
  uint64_t v44 = (uint64_t)v92;

  char v100 = 0;
  long long v98 = 0u;
  long long v99 = 0u;
  long long v96 = 0u;
  long long v97 = 0u;
  long long v95 = 0u;
  uint64_t v102 = 0;
  uint64_t v103 = 0;
  uint64_t v101 = 0;
  __int16 v105 = 192;
  int v104 = 0;
  long long v106 = 0u;
  long long v107 = 0u;
  uint64_t v108 = 1;
  char v109 = 2;
  uint64_t v110 = 0;
  v112 = &type metadata for AutomaticRepairModelExchange;
  v113 = &protocol witness table for AutomaticRepairModelExchange;
  uint64_t v45 = (void *)swift_allocObject();
  v111 = v45;
  v45[2] = &unk_2692DC090;
  v45[3] = 0;
  v45[4] = &unk_2692DC098;
  v45[5] = 0;
  v45[6] = &unk_2692DC0A0;
  v45[7] = 0;
  v45[8] = &unk_2692DC0A8;
  v45[9] = 0;
  v45[10] = &unk_2692DC0B0;
  v45[11] = 0;
  v45[12] = &unk_2692DC0B8;
  v45[13] = 0;
  v45[14] = &unk_2692DC0C0;
  v45[15] = 0;
  v45[16] = &unk_2692DC0C8;
  v45[17] = 0;
  v45[18] = &unk_2692DC0D0;
  v45[19] = 0;
  v45[21] = 0;
  v45[22] = 0;
  v45[20] = &unk_2692DC0D8;
  v45[23] = &unk_2692DC0E0;
  v45[24] = 0;
  v45[25] = &unk_2692DC0E8;
  v45[26] = 0;
  v45[27] = &unk_2692DC0F0;
  v45[28] = 0;
  v45[29] = &unk_2692DC0F8;
  v45[30] = 0;
  v45[31] = &unk_2692DC100;
  v45[32] = 0;
  v45[33] = &unk_2692DC108;
  v45[34] = 0;
  v45[35] = &unk_2692DC110;
  v45[36] = 0;
  v45[37] = &unk_2692DC118;
  v45[38] = 0;
  v45[39] = &unk_2692DC120;
  v45[40] = 0;
  v45[41] = &unk_2692DC128;
  v45[42] = 0;
  v45[43] = &unk_2692DC130;
  v45[44] = 0;
  v45[45] = &unk_2692DC138;
  v45[46] = 0;
  v45[47] = &unk_2692DC140;
  v45[48] = 0;
  v45[49] = &unk_2692DC148;
  v45[50] = 0;
  v45[51] = &unk_2692DC150;
  v45[52] = 0;
  v45[53] = &unk_2692DC158;
  v45[54] = 0;
  v45[55] = &unk_2692DC160;
  v45[56] = 0;
  v45[57] = &unk_2692DC168;
  v45[58] = 0;
  v45[59] = &unk_2692DC170;
  v45[60] = 0;
  v45[61] = &unk_2692DC178;
  v45[62] = 0;
  v45[63] = &unk_2692DC180;
  v45[64] = 0;
  v45[65] = &unk_2692DC188;
  v45[66] = 0;
  v45[67] = &unk_2692DC190;
  v45[68] = 0;
  v45[69] = &unk_2692DC198;
  v45[70] = 0;
  v45[71] = &unk_2692DC1A0;
  v45[72] = 0;
  v45[73] = &unk_2692DC1A8;
  v45[74] = 0;
  v45[75] = &unk_2692DC1B0;
  v45[76] = 0;
  v45[77] = &unk_2692DC1B8;
  v45[78] = 0;
  v45[79] = &unk_2692DC1C0;
  v45[80] = 0;
  v45[81] = &unk_2692DC1C8;
  v45[82] = 0;
  v45[83] = &unk_2692DC1D0;
  v45[84] = 0;
  v45[85] = &unk_2692DC1D8;
  v45[86] = 0;
  v45[87] = &unk_2692DC1E0;
  v45[88] = 0;
  v45[89] = &unk_2692D6EF0;
  v45[90] = 0;
  v45[91] = &unk_2692D6EF8;
  v45[92] = 0;
  v45[93] = &unk_2692D6F00;
  v45[94] = 0;
  v45[95] = &unk_2692D6F08;
  v45[96] = 0;
  v45[97] = &unk_2692D6F10;
  v45[98] = 0;
  uint64_t v114 = 0;
  char v115 = 0;
  RepairContext.Builder._context(_:)(v38, (uint64_t)v116);
  RepairContext.Builder.build()(v44);
  uint64_t v46 = v88;
  sub_2480D33F4(v44, v88, (uint64_t (*)(void))type metadata accessor for RepairContext);
  uint64_t v47 = v78;
  sub_2480D17C8(v46, v78, (uint64_t (*)(void))type metadata accessor for RepairContext);
  uint64_t v48 = (char *)v93;
  uint64_t v49 = sub_248174B70();
  os_log_type_t v50 = sub_2481755C0();
  BOOL v51 = os_log_type_enabled(v49, v50);
  id v93 = v48;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v94 = swift_slowAlloc();
    v116[0] = v94;
    *(_DWORD *)uint64_t v52 = 136315394;
    *(void *)&long long v95 = *(void *)&v48[OBJC_IVAR_____AISRepairController_repairController];
    type metadata accessor for RepairController();
    swift_retain();
    uint64_t v53 = sub_248175190();
    *(void *)&long long v95 = sub_247FB6D24(v53, v54, v116);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2080;
    uint64_t v55 = v75;
    sub_2480D17C8(v47, v75, (uint64_t (*)(void))type metadata accessor for RepairContext);
    uint64_t v56 = sub_248175190();
    *(void *)&long long v95 = sub_247FB6D24(v56, v57, v116);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480D1768(v47, (uint64_t (*)(void))type metadata accessor for RepairContext);
    _os_log_impl(&dword_247F93000, v49, v50, "Calling repair controller (%s with built context: %s", (uint8_t *)v52, 0x16u);
    uint64_t v58 = v94;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v58, -1, -1);
    MEMORY[0x24C574E00](v52, -1, -1);

    uint64_t v60 = v89;
    uint64_t v59 = v90;
    uint64_t v61 = (uint64_t)v76;
  }
  else
  {

    sub_2480D1768(v47, (uint64_t (*)(void))type metadata accessor for RepairContext);
    uint64_t v60 = v89;
    uint64_t v59 = v90;
    uint64_t v61 = (uint64_t)v76;
    uint64_t v55 = v75;
  }
  uint64_t v62 = v73;
  uint64_t v63 = v74;
  uint64_t v64 = sub_2481753D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v61, 1, 1, v64);
  uint64_t v65 = v88;
  sub_2480D17C8(v88, v55, (uint64_t (*)(void))type metadata accessor for RepairContext);
  unint64_t v66 = (*(unsigned __int8 *)(v62 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  uint64_t v67 = (void *)swift_allocObject();
  v67[2] = 0;
  v67[3] = 0;
  id v68 = v93;
  v67[4] = v93;
  sub_2480D33F4(v55, (uint64_t)v67 + v66, (uint64_t (*)(void))type metadata accessor for RepairContext);
  uint64_t v69 = (void *)((char *)v67 + ((v63 + v66 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v69 = v60;
  v69[1] = v59;
  id v70 = v68;
  v91(v60, v59);
  sub_247FFC0C4(v61, v79, (uint64_t)v67);
  swift_release();
  return sub_2480D1768(v65, (uint64_t (*)(void))type metadata accessor for RepairContext);
}

uint64_t sub_2480D0698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[23] = a6;
  v7[24] = a7;
  v7[21] = a4;
  v7[22] = a5;
  uint64_t v8 = sub_248174D30();
  v7[25] = v8;
  v7[26] = *(void *)(v8 - 8);
  v7[27] = swift_task_alloc();
  uint64_t v9 = sub_248174D80();
  v7[28] = v9;
  v7[29] = *(void *)(v9 - 8);
  v7[30] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_2480D07B8, 0, 0);
}

uint64_t sub_2480D07B8()
{
  v0[31] = *(void *)(v0[21] + OBJC_IVAR_____AISRepairController_repairController);
  unint64_t v1 = (void *)swift_task_alloc();
  v0[32] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_2480D0868;
  uint64_t v2 = v0[22];
  return sub_2480C856C((uint64_t)(v0 + 8), v2);
}

uint64_t sub_2480D0868()
{
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2480D0EC0;
  }
  else {
    uint64_t v2 = sub_2480D097C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_2480D097C()
{
  id v35 = v0;
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v3 = v0[11];
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_248174B90();
  __swift_project_value_buffer(v5, (uint64_t)qword_2692DA340);
  sub_2480354C0(v2, v1);
  id v6 = 0;
  sub_2480354C0(v2, v1);
  id v7 = 0;
  uint64_t v8 = sub_248174B70();
  os_log_type_t v9 = sub_2481755B0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v34 = v32;
    *(_DWORD *)uint64_t v10 = 136315394;
    v0[12] = v2;
    v0[13] = v1;
    v0[14] = v4;
    v0[15] = v3;
    sub_2480354C0(v2, v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3D0);
    uint64_t v11 = sub_248175190();
    v0[17] = sub_247FB6D24(v11, v12, &v34);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FE0708(v2, v1);
    uint64_t v13 = v3;
    sub_247FE0708(v2, v1);
    *(_WORD *)(v10 + 12) = 2080;
    v0[18] = 0;
    id v14 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9870);
    uint64_t v15 = sub_248175190();
    v0[19] = sub_247FB6D24(v15, v16, &v34);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v8, v9, "Returning symptom report converted into objc: %s with error: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v32, -1, -1);
    MEMORY[0x24C574E00](v10, -1, -1);

    uint64_t v17 = v1;
  }
  else
  {
    sub_247FE0708(v2, v1);
    sub_247FE0708(v2, v1);

    uint64_t v17 = v1;
    uint64_t v13 = v3;
  }
  uint64_t v18 = v0[30];
  uint64_t v31 = v0[29];
  uint64_t v33 = v0[28];
  *(void *)uint64_t type = v0[26];
  uint64_t v19 = v0[24];
  uint64_t v28 = v0[27];
  uint64_t v29 = v0[25];
  uint64_t v20 = v0[23];
  uint64_t v21 = *(void **)(v0[31] + 112);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = v20;
  v22[3] = v19;
  v22[4] = v2;
  v22[5] = v17;
  v22[6] = v4;
  v22[7] = v13;
  v22[8] = 0;
  v0[6] = sub_2480D34C0;
  v0[7] = v22;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_2480360BC;
  v0[5] = &block_descriptor_63;
  uint64_t v27 = _Block_copy(v0 + 2);
  sub_2480354C0(v2, v17);
  id v23 = 0;
  id v24 = v21;
  sub_247F98D10(v20);
  sub_248174D60();
  v0[16] = MEMORY[0x263F8EE78];
  sub_2480D4958((unint64_t *)&qword_2692D8C98, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CA0);
  sub_24809FFEC((unint64_t *)&qword_2692D8CA8, &qword_2692D8CA0);
  sub_2481757A0();
  MEMORY[0x24C573B30](0, v18, v28, v27);
  _Block_release(v27);

  sub_247FE0708(v2, v17);
  (*(void (**)(uint64_t, uint64_t))(*(void *)type + 8))(v28, v29);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v18, v33);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_2480D0EC0()
{
  uint64_t v43 = v0;
  unint64_t v1 = 0x2692D4000uLL;
  if (qword_2692D4DC0 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[33];
  uint64_t v3 = sub_248174B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_2692DA340);
  id v4 = v2;
  id v5 = v2;
  id v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755D0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  os_log_type_t v9 = (void *)v0[33];
  if (v8)
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[20] = v13;
    unint64_t v1 = 0x2692D4000;
    sub_248175730();
    void *v11 = v13;

    _os_log_impl(&dword_247F93000, v6, v7, "Failed to generate symptom report with error: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v11, -1, -1);
    MEMORY[0x24C574E00](v10, -1, -1);
  }
  else
  {
  }
  id v14 = (void *)v0[33];

  if (*(void *)(v1 + 3520) != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v3, (uint64_t)qword_2692DA340);
  sub_2480354C0(0, 0);
  id v15 = v14;
  sub_2480354C0(0, 0);
  id v16 = v14;
  uint64_t v17 = sub_248174B70();
  os_log_type_t v18 = sub_2481755B0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v42 = v20;
    *(_DWORD *)uint64_t v19 = 136315394;
    *((_OWORD *)v0 + 6) = 0u;
    *((_OWORD *)v0 + 7) = 0u;
    sub_2480354C0(0, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3D0);
    uint64_t v21 = sub_248175190();
    v0[17] = sub_247FB6D24(v21, v22, &v42);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FE0708(0, 0);
    sub_247FE0708(0, 0);
    *(_WORD *)(v19 + 12) = 2080;
    v0[18] = v14;
    id v23 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9870);
    uint64_t v24 = sub_248175190();
    v0[19] = sub_247FB6D24(v24, v25, &v42);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v17, v18, "Returning symptom report converted into objc: %s with error: %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v20, -1, -1);
    MEMORY[0x24C574E00](v19, -1, -1);
  }
  else
  {
    sub_247FE0708(0, 0);
    sub_247FE0708(0, 0);
  }
  uint64_t v26 = v14;
  uint64_t v27 = v0[30];
  uint64_t v28 = v0[27];
  uint64_t v40 = v0[29];
  uint64_t v41 = v0[28];
  uint64_t v29 = v0[24];
  uint64_t v38 = v0[25];
  uint64_t v39 = v0[26];
  uint64_t v30 = v0[23];
  uint64_t v31 = *(void **)(v0[31] + 112);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v30;
  *(void *)(v32 + 24) = v29;
  *(_OWORD *)(v32 + 32) = 0u;
  *(_OWORD *)(v32 + 48) = 0u;
  *(void *)(v32 + 64) = v26;
  v0[6] = sub_2480D34C0;
  v0[7] = v32;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_2480360BC;
  v0[5] = &block_descriptor_63;
  uint64_t v33 = _Block_copy(v0 + 2);
  sub_2480354C0(0, 0);
  id v34 = v26;
  id v35 = v31;
  sub_247F98D10(v30);
  sub_248174D60();
  v0[16] = MEMORY[0x263F8EE78];
  sub_2480D4958((unint64_t *)&qword_2692D8C98, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D8CA0);
  sub_24809FFEC((unint64_t *)&qword_2692D8CA8, &qword_2692D8CA0);
  sub_2481757A0();
  MEMORY[0x24C573B30](0, v27, v28, v33);
  _Block_release(v33);

  sub_247FE0708(0, 0);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v28, v38);
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v27, v41);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

void sub_2480D1534(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    if (a4) {
      unint64_t v5 = (unint64_t)SymptomReport.into()();
    }
    else {
      unint64_t v5 = 0;
    }
    id v6 = (id)v5;
    a1();
  }
}

id __RepairController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void __RepairController.init()()
{
}

id __RepairController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for __RepairController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2480D1760(uint64_t a1)
{
  return sub_24809F318(a1);
}

uint64_t sub_2480D1768(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2480D17C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for __RepairController()
{
  return self;
}

uint64_t sub_2480D1854()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 792, 7);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_2480D1A30(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RepairContext() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_247FD79D0;
  return sub_2480CE238(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t objectdestroy_11Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v28 = type metadata accessor for RepairContext();
  uint64_t v29 = *(unsigned __int8 *)(*(void *)(v28 - 8) + 80);
  uint64_t v25 = *(void *)(*(void *)(v28 - 8) + 64);
  swift_unknownObjectRelease();

  uint64_t v26 = (v29 + 40) & ~v29;
  uint64_t v1 = v0 + v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = type metadata accessor for RepairModel();
  uint64_t v2 = v0 + v26 + *(int *)(v27 + 20);
  sub_247FE51A0(*(void **)(v2 + 8), *(id *)(v2 + 16), *(void *)(v2 + 24), *(unsigned int *)(v2 + 32) | ((unint64_t)*(unsigned __int16 *)(v2 + 36) << 32));
  unsigned int v3 = *(unsigned __int8 *)(v2 + 88);
  if (v3 <= 0xF9) {
    sub_247FA98EC(*(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v2 + 168), *(void *)(v2 + 176), *(void *)(v2 + 184), *(void *)(v2 + 192), *(void *)(v2 + 200), *(void *)(v2 + 208), *(unsigned __int8 *)(v2 + 216));
  if (*(void *)(v2 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for SetupModel();
  uint64_t v5 = v2 + *(int *)(v4 + 32);
  uint64_t v6 = type metadata accessor for IdMSAccount();
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    uint64_t v9 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = v5 + *(int *)(v6 + 24);
    sub_247FAC1EC(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(void *)(v10 + 48), *(void *)(v10 + 56), *(void *)(v10 + 64), *(unsigned char *)(v10 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v5 + v11[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5 + v11[10];
  sub_247F98958(*(void **)v12, *(void **)(v12 + 8), *(void **)(v12 + 16), *(void **)(v12 + 24), *(void *)(v12 + 32), *(void **)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void **)(v12 + 64), *(void **)(v12 + 72), *(unsigned char *)(v12 + 80));
  if (*(void *)(v5 + v11[11])) {
    swift_release();
  }
  uint64_t v13 = v2 + *(int *)(v4 + 36);
  if (!v7(v13, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + *(int *)(v6 + 20);
    uint64_t v15 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v13 + *(int *)(v6 + 24);
    sub_247FAC1EC(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(void *)(v16 + 24), *(void *)(v16 + 32), *(void *)(v16 + 40), *(void *)(v16 + 48), *(void *)(v16 + 56), *(void *)(v16 + 64), *(unsigned char *)(v16 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (int *)type metadata accessor for SignInModel();
  os_log_type_t v18 = (void *)(v13 + v17[5]);
  if (v18[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v19 = v18[11];
    if (v19 >> 60 != 15) {
      sub_247FB6CCC(v18[10], v19);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + v17[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v13 + v17[13]), *(void *)(v13 + v17[13] + 8), *(unsigned char *)(v13 + v17[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + v17[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v1 + *(int *)(v27 + 24);
  unsigned int v21 = *(unsigned __int8 *)(v20 + 40);
  if (v21 <= 0xFA) {
    sub_247FE0600(*(void *)v20, *(void *)(v20 + 8), *(void *)(v20 + 16), *(void *)(v20 + 24), *(void *)(v20 + 32), v21);
  }
  unint64_t v22 = (v25 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = v1 + *(int *)(v28 + 20);
  if (*(void *)(v23 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v23);
  }
  if (*(void *)(v0 + v22)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, v22 + 16, v29 | 7);
}

uint64_t sub_2480D2114(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for RepairContext() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_247FD79D0;
  return sub_2480D0698(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_2480D2250()
{
  return type metadata accessor for RepairController();
}

void sub_2480D2258()
{
  sub_2480A0890();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for RepairController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for RepairController);
}

uint64_t dispatch thunk of RepairController.__allocating_init(queue:endpoint:inactiveSession:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of RepairController.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of RepairController.repair(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 184) + **(int **)(*(void *)v2 + 184));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FD79D0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of RepairController.generateSymptomReport(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 192) + **(int **)(*(void *)v2 + 192));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FCB950;
  return v8(a1, a2);
}

uint64_t method lookup function for __RepairController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for __RepairController);
}

uint64_t dispatch thunk of __RepairController.repair(with:completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of __RepairController.generateSymptomReport(with:completionHandler:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t sub_2480D25FC()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2480D2634(uint64_t a1, uint64_t a2)
{
  sub_24809EFEC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_2480D2650()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  uint64_t v31 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v29 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v2 = *(void *)(v32 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v27 = *(void *)(v2 + 64);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v30 = (v31 + 56) & ~v31;
  uint64_t v3 = v0 + v30 + *(int *)(v1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for RepairModel();
  uint64_t v4 = v3 + *(int *)(v26 + 20);
  sub_247FE51A0(*(void **)(v4 + 8), *(id *)(v4 + 16), *(void *)(v4 + 24), *(unsigned int *)(v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v4 + 36) << 32));
  unsigned int v5 = *(unsigned __int8 *)(v4 + 88);
  if (v5 <= 0xF9) {
    sub_247FA98EC(*(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v4 + 168), *(void *)(v4 + 176), *(void *)(v4 + 184), *(void *)(v4 + 192), *(void *)(v4 + 200), *(void *)(v4 + 208), *(unsigned __int8 *)(v4 + 216));
  if (*(void *)(v4 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SetupModel();
  uint64_t v7 = v4 + *(int *)(v6 + 32);
  uint64_t v8 = type metadata accessor for IdMSAccount();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + *(int *)(v8 + 20);
    uint64_t v11 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = v7 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v7 + v13[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7 + v13[10];
  sub_247F98958(*(void **)v14, *(void **)(v14 + 8), *(void **)(v14 + 16), *(void **)(v14 + 24), *(void *)(v14 + 32), *(void **)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void **)(v14 + 64), *(void **)(v14 + 72), *(unsigned char *)(v14 + 80));
  if (*(void *)(v7 + v13[11])) {
    swift_release();
  }
  uint64_t v15 = v4 + *(int *)(v6 + 36);
  if (!v9(v15, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v15 + *(int *)(v8 + 20);
    uint64_t v17 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t v18 = v15 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(void *)(v18 + 64), *(unsigned char *)(v18 + 72));
    swift_bridgeObjectRelease();
  }
  unint64_t v19 = (int *)type metadata accessor for SignInModel();
  uint64_t v20 = (void *)(v15 + v19[5]);
  if (v20[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = v20[11];
    if (v21 >> 60 != 15) {
      sub_247FB6CCC(v20[10], v21);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v15 + v19[13]), *(void *)(v15 + v19[13] + 8), *(unsigned char *)(v15 + v19[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = v3 + *(int *)(v26 + 24);
  unsigned int v23 = *(unsigned __int8 *)(v22 + 40);
  if (v23 <= 0xFA) {
    sub_247FE0600(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(void *)(v22 + 24), *(void *)(v22 + 32), v23);
  }
  uint64_t v24 = (v30 + v29 + v28) & ~v28;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v24, v32);
  return MEMORY[0x270FA0238](v0, v24 + v27, v31 | v28 | 7);
}

uint64_t sub_2480D2C30()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0) - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return sub_2480CA504((void *)(v0 + 16), v0 + v2, v5);
}

uint64_t sub_2480D2D08()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2480D2D18()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2480D2D40()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  uint64_t v31 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v29 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v2 = *(void *)(v32 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v27 = *(void *)(v2 + 64);
  uint64_t v33 = v0;
  uint64_t v30 = (v31 + 16) & ~v31;
  uint64_t v3 = v0 + v30 + *(int *)(v1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for RepairModel();
  uint64_t v4 = v3 + *(int *)(v26 + 20);
  sub_247FE51A0(*(void **)(v4 + 8), *(id *)(v4 + 16), *(void *)(v4 + 24), *(unsigned int *)(v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v4 + 36) << 32));
  unsigned int v5 = *(unsigned __int8 *)(v4 + 88);
  if (v5 <= 0xF9) {
    sub_247FA98EC(*(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v4 + 168), *(void *)(v4 + 176), *(void *)(v4 + 184), *(void *)(v4 + 192), *(void *)(v4 + 200), *(void *)(v4 + 208), *(unsigned __int8 *)(v4 + 216));
  if (*(void *)(v4 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SetupModel();
  uint64_t v7 = v4 + *(int *)(v6 + 32);
  uint64_t v8 = type metadata accessor for IdMSAccount();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + *(int *)(v8 + 20);
    uint64_t v11 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = v7 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v7 + v13[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7 + v13[10];
  sub_247F98958(*(void **)v14, *(void **)(v14 + 8), *(void **)(v14 + 16), *(void **)(v14 + 24), *(void *)(v14 + 32), *(void **)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void **)(v14 + 64), *(void **)(v14 + 72), *(unsigned char *)(v14 + 80));
  if (*(void *)(v7 + v13[11])) {
    swift_release();
  }
  uint64_t v15 = v4 + *(int *)(v6 + 36);
  if (!v9(v15, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v15 + *(int *)(v8 + 20);
    uint64_t v17 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t v18 = v15 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(void *)(v18 + 64), *(unsigned char *)(v18 + 72));
    swift_bridgeObjectRelease();
  }
  unint64_t v19 = (int *)type metadata accessor for SignInModel();
  uint64_t v20 = (void *)(v15 + v19[5]);
  if (v20[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = v20[11];
    if (v21 >> 60 != 15) {
      sub_247FB6CCC(v20[10], v21);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v15 + v19[13]), *(void *)(v15 + v19[13] + 8), *(unsigned char *)(v15 + v19[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = v3 + *(int *)(v26 + 24);
  unsigned int v23 = *(unsigned __int8 *)(v22 + 40);
  if (v23 <= 0xFA) {
    sub_247FE0600(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(void *)(v22 + 24), *(void *)(v22 + 32), v23);
  }
  uint64_t v24 = (v30 + v29 + v28) & ~v28;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v33 + v24, v32);
  return MEMORY[0x270FA0238](v33, v24 + v27, v31 | v28 | 7);
}

uint64_t sub_2480D3318(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0) - 8);
  uint64_t v7 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_2480CA734(a1, v1 + v4, v7);
}

uint64_t sub_2480D33F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2480D345C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 72, 7);
}

void sub_2480D34C0()
{
  sub_2480D1534(*(void (**)(void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_2480D34D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2480354C0(a12, a13);
  }
}

void sub_2480D3580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FE0708(a12, a13);
  }
}

uint64_t sub_2480D362C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 128))
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
  }

  return MEMORY[0x270FA0238](v0, 160, 7);
}

void sub_2480D36C4()
{
  sub_2480CF498(*(void (**)(void *, uint64_t))(v0 + 16), *(void *)(v0 + 24), v0 + 32, *(void *)(v0 + 152));
}

uint64_t sub_2480D36D4(uint64_t a1)
{
  return sub_2480CB47C(a1, *(void *)(v1 + 16));
}

uint64_t sub_2480D36DC()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2480D3714()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3E0) - 8);
  uint64_t v36 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = (v36 + 24) & ~v36;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v32 = type metadata accessor for RepairContext();
  uint64_t v35 = *(unsigned __int8 *)(*(void *)(v32 - 8) + 80);
  uint64_t v4 = (v2 + v3 + v35) & ~v35;
  uint64_t v33 = *(void *)(*(void *)(v32 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = v0 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = type metadata accessor for RepairModel();
  uint64_t v9 = v0 + v4 + *(int *)(v31 + 20);
  sub_247FE51A0(*(void **)(v9 + 8), *(id *)(v9 + 16), *(void *)(v9 + 24), *(unsigned int *)(v9 + 32) | ((unint64_t)*(unsigned __int16 *)(v9 + 36) << 32));
  unsigned int v10 = *(unsigned __int8 *)(v9 + 88);
  if (v10 <= 0xF9) {
    sub_247FA98EC(*(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(void *)(v9 + 72), *(void *)(v9 + 80), v10);
  }
  uint64_t v34 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v9 + 168), *(void *)(v9 + 176), *(void *)(v9 + 184), *(void *)(v9 + 192), *(void *)(v9 + 200), *(void *)(v9 + 208), *(unsigned __int8 *)(v9 + 216));
  if (*(void *)(v9 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for SetupModel();
  uint64_t v12 = v9 + *(int *)(v11 + 32);
  uint64_t v13 = type metadata accessor for IdMSAccount();
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
  if (!v14(v12, 1, v13))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v12 + *(int *)(v13 + 20);
    uint64_t v16 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v12 + *(int *)(v13 + 24);
    sub_247FAC1EC(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(void *)(v17 + 64), *(unsigned char *)(v17 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v12 + v18[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v12 + v18[10];
  sub_247F98958(*(void **)v19, *(void **)(v19 + 8), *(void **)(v19 + 16), *(void **)(v19 + 24), *(void *)(v19 + 32), *(void **)(v19 + 40), *(void *)(v19 + 48), *(void *)(v19 + 56), *(void **)(v19 + 64), *(void **)(v19 + 72), *(unsigned char *)(v19 + 80));
  if (*(void *)(v12 + v18[11])) {
    swift_release();
  }
  uint64_t v20 = v9 + *(int *)(v11 + 36);
  if (!v14(v20, 1, v13))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v20 + *(int *)(v13 + 20);
    uint64_t v22 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    uint64_t v23 = v20 + *(int *)(v13 + 24);
    sub_247FAC1EC(*(void *)v23, *(void *)(v23 + 8), *(void *)(v23 + 16), *(void *)(v23 + 24), *(void *)(v23 + 32), *(void *)(v23 + 40), *(void *)(v23 + 48), *(void *)(v23 + 56), *(void *)(v23 + 64), *(unsigned char *)(v23 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = (int *)type metadata accessor for SignInModel();
  uint64_t v25 = (void *)(v20 + v24[5]);
  if (v25[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v26 = v25[11];
    if (v26 >> 60 != 15) {
      sub_247FB6CCC(v25[10], v26);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v20 + v24[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v20 + v24[13]), *(void *)(v20 + v24[13] + 8), *(unsigned char *)(v20 + v24[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v20 + v24[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v27 = v8 + *(int *)(v31 + 24);
  unsigned int v28 = *(unsigned __int8 *)(v27 + 40);
  if (v28 <= 0xFA) {
    sub_247FE0600(*(void *)v27, *(void *)(v27 + 8), *(void *)(v27 + 16), *(void *)(v27 + 24), *(void *)(v27 + 32), v28);
  }
  uint64_t v29 = v8 + *(int *)(v32 + 20);
  if (*(void *)(v29 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v29);
  }
  return MEMORY[0x270FA0238](v0, v34 + v33, v36 | v35 | 7);
}

double sub_2480D3D2C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3E0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for RepairContext() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return sub_2480CB54C(a1, (void (*)(char *, char *, uint64_t))(v2 + v6), v9, a2);
}

uint64_t sub_2480D3E18(uint64_t a1)
{
  return sub_2480CBC8C(a1);
}

uint64_t sub_2480D3E20()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_2480D3F0C(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3F0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  unsigned int v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unsigned int v10 = v2;
  v10[1] = sub_247FD79D0;
  return sub_2480CC05C(a1, v6, v7, v8, v9);
}

uint64_t sub_2480D4034(uint64_t a1)
{
  return sub_2480C6250(a1);
}

uint64_t sub_2480D4044()
{
  uint64_t v1 = sub_248174CE0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v39 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v39 + 40) & ~v39;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v33 = type metadata accessor for RepairContext();
  uint64_t v38 = *(unsigned __int8 *)(*(void *)(v33 - 8) + 80);
  uint64_t v35 = *(void *)(*(void *)(v33 - 8) + 64);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0);
  uint64_t v34 = *(void *)(v37 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v31 = *(void *)(v34 + 64);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v36 = (v3 + v4 + v38) & ~v38;
  uint64_t v5 = v0 + v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = type metadata accessor for RepairModel();
  uint64_t v6 = v0 + v36 + *(int *)(v30 + 20);
  sub_247FE51A0(*(void **)(v6 + 8), *(id *)(v6 + 16), *(void *)(v6 + 24), *(unsigned int *)(v6 + 32) | ((unint64_t)*(unsigned __int16 *)(v6 + 36) << 32));
  unsigned int v7 = *(unsigned __int8 *)(v6 + 88);
  if (v7 <= 0xF9) {
    sub_247FA98EC(*(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(void *)(v6 + 72), *(void *)(v6 + 80), v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v6 + 168), *(void *)(v6 + 176), *(void *)(v6 + 184), *(void *)(v6 + 192), *(void *)(v6 + 200), *(void *)(v6 + 208), *(unsigned __int8 *)(v6 + 216));
  if (*(void *)(v6 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for SetupModel();
  uint64_t v9 = v6 + *(int *)(v8 + 32);
  uint64_t v10 = type metadata accessor for IdMSAccount();
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (!v11(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v9 + *(int *)(v10 + 20);
    uint64_t v13 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = v9 + *(int *)(v10 + 24);
    sub_247FAC1EC(*(void *)v14, *(void *)(v14 + 8), *(void *)(v14 + 16), *(void *)(v14 + 24), *(void *)(v14 + 32), *(void *)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void *)(v14 + 64), *(unsigned char *)(v14 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v9 + v15[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v9 + v15[10];
  sub_247F98958(*(void **)v16, *(void **)(v16 + 8), *(void **)(v16 + 16), *(void **)(v16 + 24), *(void *)(v16 + 32), *(void **)(v16 + 40), *(void *)(v16 + 48), *(void *)(v16 + 56), *(void **)(v16 + 64), *(void **)(v16 + 72), *(unsigned char *)(v16 + 80));
  if (*(void *)(v9 + v15[11])) {
    swift_release();
  }
  uint64_t v17 = v6 + *(int *)(v8 + 36);
  if (!v11(v17, 1, v10))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v17 + *(int *)(v10 + 20);
    uint64_t v19 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    uint64_t v20 = v17 + *(int *)(v10 + 24);
    sub_247FAC1EC(*(void *)v20, *(void *)(v20 + 8), *(void *)(v20 + 16), *(void *)(v20 + 24), *(void *)(v20 + 32), *(void *)(v20 + 40), *(void *)(v20 + 48), *(void *)(v20 + 56), *(void *)(v20 + 64), *(unsigned char *)(v20 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = (int *)type metadata accessor for SignInModel();
  uint64_t v22 = (void *)(v17 + v21[5]);
  if (v22[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v23 = v22[11];
    if (v23 >> 60 != 15) {
      sub_247FB6CCC(v22[10], v23);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + v21[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v17 + v21[13]), *(void *)(v17 + v21[13] + 8), *(unsigned char *)(v17 + v21[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v17 + v21[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = v5 + *(int *)(v30 + 24);
  unsigned int v25 = *(unsigned __int8 *)(v24 + 40);
  if (v25 <= 0xFA) {
    sub_247FE0600(*(void *)v24, *(void *)(v24 + 8), *(void *)(v24 + 16), *(void *)(v24 + 24), *(void *)(v24 + 32), v25);
  }
  uint64_t v26 = v5 + *(int *)(v33 + 20);
  if (*(void *)(v26 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v26);
  }
  uint64_t v27 = (v36 + v35 + v32) & ~v32;
  uint64_t v28 = v27 + v31;
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v0 + v27, v37);
  return MEMORY[0x270FA0238](v0, v28, v39 | v38 | v32 | 7);
}

uint64_t sub_2480D469C()
{
  uint64_t v2 = *(void *)(sub_248174CE0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for RepairContext() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692DA3C0) - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = *(void *)(v0 + 32);
  uint64_t v11 = v0 + v3;
  uint64_t v12 = v0 + v6;
  uint64_t v13 = v0 + (v9 & ~v8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *uint64_t v14 = v1;
  v14[4] = v12;
  v14[5] = v13;
  v14[2] = v10;
  v14[3] = v11;
  v14[1] = sub_247FD79D0;
  return MEMORY[0x270FA2498](sub_2480CBC28, v10, 0);
}

uint64_t objectdestroy_85Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA228);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2480D48E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692DA228) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  return sub_2480C07EC(a1, v4);
}

uint64_t sub_2480D4958(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Curve25519.Signing.PrivateKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2480D4BA0(MEMORY[0x263F04588], MEMORY[0x263F04598], a1);
}

uint64_t sub_2480D49FC()
{
  return sub_248174E40();
}

uint64_t sub_2480D4A14()
{
  return sub_248174E50();
}

uint64_t sub_2480D4A3C@<X0>(uint64_t a1@<X8>)
{
  return sub_2480D4C78(MEMORY[0x263F04588], MEMORY[0x263F04598], a1);
}

uint64_t sub_2480D4A6C()
{
  return sub_248174E30();
}

uint64_t Curve25519.Signing.PublicKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2480D4D50(MEMORY[0x263F04590], a1);
}

uint64_t sub_2480D4ABC()
{
  return sub_248174E70() & 1;
}

uint64_t sub_2480D4B20@<X0>(uint64_t a1@<X8>)
{
  return sub_2480D4E30(MEMORY[0x263F04590], a1);
}

uint64_t sub_2480D4B3C()
{
  return sub_248174E90();
}

uint64_t Curve25519.KeyAgreement.PrivateKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2480D4BA0(MEMORY[0x263F04568], MEMORY[0x263F04560], a1);
}

uint64_t sub_2480D4BA0@<X0>(void (*a1)(void)@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  a1();
  uint64_t v5 = a2(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(a3, 0, 1, v5);
}

uint64_t sub_2480D4C24()
{
  return sub_248174E10();
}

uint64_t sub_2480D4C4C@<X0>(uint64_t a1@<X8>)
{
  return sub_2480D4C78(MEMORY[0x263F04568], MEMORY[0x263F04560], a1);
}

uint64_t sub_2480D4C78@<X0>(void (*a1)(void)@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  a1();
  uint64_t v5 = a2(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  return v6(a3, 0, 1, v5);
}

uint64_t sub_2480D4D00()
{
  return sub_248174E00();
}

uint64_t Curve25519.KeyAgreement.PublicKey.complimentaryKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2480D4D50(MEMORY[0x263F04580], a1);
}

uint64_t sub_2480D4D50@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

_UNKNOWN **sub_2480D4DC4()
{
  return &protocol witness table for Curve25519.Signing.PublicKey;
}

_UNKNOWN **sub_2480D4DD0()
{
  return &protocol witness table for Curve25519.Signing.PrivateKey;
}

_UNKNOWN **sub_2480D4DDC()
{
  return &protocol witness table for Curve25519.Signing.PrivateKey;
}

_UNKNOWN **sub_2480D4DE8()
{
  return &protocol witness table for Curve25519.KeyAgreement.PublicKey;
}

_UNKNOWN **sub_2480D4DF4()
{
  return &protocol witness table for Curve25519.KeyAgreement.PublicKey;
}

_UNKNOWN **sub_2480D4E00()
{
  return &protocol witness table for Curve25519.KeyAgreement.PrivateKey;
}

_UNKNOWN **sub_2480D4E0C()
{
  return &protocol witness table for Curve25519.KeyAgreement.PrivateKey;
}

uint64_t sub_2480D4E18@<X0>(uint64_t a1@<X8>)
{
  return sub_2480D4E30(MEMORY[0x263F04580], a1);
}

uint64_t sub_2480D4E30@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  return v4(a2, 1, 1, v3);
}

uint64_t sub_2480D4EA4()
{
  return sub_248174DE0();
}

id static AISDaemonInterface.xpcInterface()()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_26FC59370);
  sub_2480D5240();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24817B010;
  *(void *)(inited + 32) = type metadata accessor for SignOutContext();
  sub_2480D4F98(inited);
  swift_setDeallocating();
  return v0;
}

unint64_t DaemonMachServiceName.getter()
{
  return 0xD00000000000001ALL;
}

void sub_2480D4F98(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C0]), sel_init);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    do
    {
      ++v4;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA100);
      objc_msgSend(v2, sel_addObject_, sub_248175D60());
      swift_unknownObjectRelease();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  id v5 = v2;
  sub_248175520();

  sub_2481759C0();
  __break(1u);
}

id AISDaemonInterface.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id AISDaemonInterface.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISDaemonInterface();
  return objc_msgSendSuper2(&v2, sel_init);
}

id AISDaemonInterface.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISDaemonInterface();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2480D5240()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA100);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    objc_super v2 = (uint64_t *)&unk_2692DA430;
  }
  else {
    objc_super v2 = (uint64_t *)&unk_2692DA428;
  }
  return __swift_instantiateConcreteTypeFromMangledName(v2);
}

uint64_t type metadata accessor for AISDaemonInterface()
{
  return self;
}

uint64_t Message.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_2481748C0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Message.version.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t Message.metrics.getter@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(a1 + 40));
  return swift_bridgeObjectRetain();
}

uint64_t Message.metrics.setter(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(a2 + 40);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = v3;
  return result;
}

uint64_t (*Message.metrics.modify())()
{
  return nullsub_1;
}

uint64_t Message.command.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t Message.command.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*Message.command.modify())()
{
  return nullsub_1;
}

uint64_t static Message.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_248174890() & 1) != 0
    && (uint64_t v4 = type metadata accessor for Message(),
        *(unsigned __int8 *)(a1 + *(int *)(v4 + 36)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 36)))
    && (uint64_t v5 = *(int *)(v4 + 40),
        uint64_t v6 = *(void *)(a1 + v5),
        uint64_t v8 = *(void *)(a2 + v5),
        uint64_t v9 = v6,
        (static Message.Metrics.== infix(_:_:)(&v9, &v8) & 1) != 0))
  {
    return sub_248175100() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for Message()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Message.hash(into:)()
{
  return sub_2481750B0();
}

uint64_t sub_2480D55EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2480D5790(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F6973726576;
      break;
    case 2:
      uint64_t result = 0x7363697274656DLL;
      break;
    case 3:
      uint64_t result = 0x646E616D6D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480D5818()
{
  return sub_2480D5790(*v0);
}

uint64_t sub_2480D5824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480D55EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480D5854(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_2480D58A8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t Message.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v13 = a2;
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a2 + 16);
  v12[1] = *(void *)(a2 + 24);
  v12[2] = v5;
  type metadata accessor for Message.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_248175C20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  char v19 = 0;
  sub_2481748C0();
  sub_247FD16F4(&qword_2692DA438);
  uint64_t v10 = v14;
  sub_248175BE0();
  if (!v10)
  {
    char v18 = 1;
    sub_248175BF0();
    uint64_t v15 = *(void *)(v3 + *(int *)(v13 + 40));
    char v17 = 2;
    type metadata accessor for Message.Metrics();
    swift_getWitnessTable();
    sub_248175BE0();
    char v16 = 3;
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t type metadata accessor for Message.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Message.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t Message.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v23 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  unsigned int v25 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_2481748C0();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Message.CodingKeys();
  swift_getWitnessTable();
  uint64_t v32 = sub_248175B40();
  uint64_t v26 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v28 = a3;
  uint64_t v11 = (int *)type metadata accessor for Message();
  uint64_t v22 = *((void *)v11 - 1);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v21 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v31 = v10;
  uint64_t v14 = (uint64_t)v33;
  sub_248175F20();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v26;
  uint64_t v16 = v27;
  uint64_t v33 = a1;
  char v38 = 0;
  sub_247FD16F4(qword_2692DA440);
  uint64_t v17 = v29;
  sub_248175AF0();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v30, v17);
  char v37 = 1;
  v13[v11[9]] = sub_248175B00();
  type metadata accessor for Message.Metrics();
  char v36 = 2;
  swift_getWitnessTable();
  sub_248175AF0();
  *(void *)&v13[v11[10]] = v34;
  char v35 = 3;
  char v18 = v25;
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v31, v32);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v13[v11[11]], v18, a2);
  uint64_t v19 = v22;
  (*(void (**)(uint64_t, char *, int *))(v22 + 16))(v24, v13, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return (*(uint64_t (**)(char *, int *))(v19 + 8))(v13, v11);
}

uint64_t sub_2480D6124@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return Message.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_2480D6144(void *a1, uint64_t a2)
{
  return Message.encode(to:)(a1, a2);
}

uint64_t sub_2480D615C(uint64_t a1, uint64_t a2)
{
  return static Message.== infix(_:_:)(a1, a2);
}

uint64_t sub_2480D6170()
{
  return sub_248175EC0();
}

uint64_t sub_2480D61B4(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2480D6214()
{
  return sub_247FD16F4(&qword_2692D5B50);
}

uint64_t sub_2480D6248(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_2480D62C8()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of IdentifiableMessage.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IdentifiableMessage.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2480D630C()
{
  uint64_t result = sub_2481748C0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_2480D63F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_2481748C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unsigned int v12 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (((v11 + (v8 & 0xFFFFFFFFFFFFFFF8) + 16) & ~v11) + *(void *)(*(void *)(v9 - 8) + 64) <= 0x18
      ? (BOOL v13 = v12 > 7)
      : (BOOL v13 = 1),
        v13))
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    unint64_t v14 = ((unint64_t)a1 + v8) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = ((unint64_t)a2 + v8) & 0xFFFFFFFFFFFFFFF8;
    *(void *)(v14 + 8) = *(void *)(v15 + 8);
    uint64_t v16 = (v14 + v11 + 16) & ~v11;
    uint64_t v17 = (v15 + v11 + 16) & ~v11;
    char v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v18(v16, v17, v9);
  }
  return a1;
}

uint64_t sub_2480D65A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2481748C0();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  unint64_t v6 = (*(void *)(v5 + 56) + a1) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v8 = *(uint64_t (**)(unint64_t))(v7 + 8);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return v8(v9);
}

uint64_t sub_2480D6660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2481748C0();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = v8 + a1;
  uint64_t v10 = v8 + a2;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  BOOL v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 16 + v9) & ~v14;
  uint64_t v16 = (v14 + 16 + v10) & ~v14;
  swift_bridgeObjectRetain();
  v13(v15, v16, v11);
  return a1;
}

uint64_t sub_2480D6750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2481748C0();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40);
  unint64_t v9 = v8 + a1;
  unint64_t v10 = v8 + a2;
  *(unsigned char *)unint64_t v9 = *(unsigned char *)v10;
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((*(unsigned __int8 *)(v13 + 80) + 16 + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(unsigned __int8 *)(v13 + 80) + 16 + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2480D6840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2481748C0();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = v8 + a1;
  uint64_t v10 = v8 + a2;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v10 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 32))((*(unsigned __int8 *)(v11 + 80) + 16 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 16 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_2480D6918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2481748C0();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24);
  unint64_t v9 = v8 + a1;
  unint64_t v10 = v8 + a2;
  *(unsigned char *)unint64_t v9 = *(unsigned char *)v10;
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)((v10 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((*(unsigned __int8 *)(v13 + 80) + 16 + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(unsigned __int8 *)(v13 + 80) + 16 + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2480D69F8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_2481748C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v8 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v13) {
    goto LABEL_28;
  }
  unint64_t v14 = ((v11 + (v10 & 0xFFFFFFFFFFFFFFF8) + 16) & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v18 < 2)
    {
LABEL_28:
      if (v8 == v13)
      {
        uint64_t v22 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
        return v22(a1, v8, v6);
      }
      else
      {
        unint64_t v23 = ((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8;
        if ((v12 & 0x80000000) != 0)
        {
          unsigned int v25 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v25((v23 + v11 + 16) & ~v11);
        }
        else
        {
          unint64_t v24 = *(void *)(v23 + 8);
          if (v24 >= 0xFFFFFFFF) {
            LODWORD(v24) = -1;
          }
          return (v24 + 1);
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_28;
  }
LABEL_18:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = ((v11 + (v10 & 0xFFFFFFF8) + 16) & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v13 + (v21 | v19) + 1;
}

void sub_2480D6C90(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_2481748C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v10 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  size_t v16 = ((v13 + (v12 & 0xFFFFFFFFFFFFFFF8) + 16) & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v15)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v15 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v15 < a2)
  {
    unsigned int v18 = ~v15 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x2480D6FACLL);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if (v10 == v15)
        {
          uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v22(a1, a2, v10, v8);
        }
        else
        {
          unint64_t v23 = (unint64_t)&a1[v12] & 0xFFFFFFFFFFFFFFF8;
          if ((v14 & 0x80000000) != 0)
          {
            unsigned int v25 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
            v25((v23 + v13 + 16) & ~v13, a2);
          }
          else
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v24 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v24 = (a2 - 1);
            }
            *(void *)(v23 + 8) = v24;
          }
        }
      }
      return;
  }
}

unsigned char *sub_2480D6FD4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480D70A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_2480D70C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480D70E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2480D7100()
{
  return swift_getWitnessTable();
}

uint64_t static V1CommandProtocol.version.getter()
{
  return 1;
}

uint64_t V1CommandVersion.getter()
{
  return 1;
}

uint64_t static V1Command.version.getter()
{
  return 1;
}

void V1Command.Request.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AuthenticateCommand.Request(0);
  MEMORY[0x270FA5388](v4);
  unsigned int v6 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SignInCommand.Request(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2480E44A4(v2, (uint64_t)v12, type metadata accessor for V1Command.Request);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2480E336C((uint64_t)v12, (uint64_t)v9, type metadata accessor for SignInCommand.Request);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = type metadata accessor for IdMSAccount();
      sub_248174700();
      sub_2480E3530(&qword_2692D5898, MEMORY[0x263F06A30]);
      sub_2481750B0();
      int v19 = &v9[*(int *)(v18 + 24)];
      uint64_t v21 = *(void *)v19;
      uint64_t v20 = *((void *)v19 + 1);
      uint64_t v22 = *((void *)v19 + 2);
      uint64_t v23 = *((void *)v19 + 3);
      uint64_t v25 = *((void *)v19 + 4);
      uint64_t v24 = *((void *)v19 + 5);
      uint64_t v26 = *((void *)v19 + 6);
      uint64_t v27 = *((void *)v19 + 7);
      uint64_t v28 = *((void *)v19 + 8);
      switch(v19[72])
      {
        case 1:
          uint64_t v75 = *((void *)v19 + 2);
          uint64_t v76 = v28;
          uint64_t v77 = v25;
          uint64_t v78 = v26;
          *(void *)&long long v79 = v24;
          sub_248175E70();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          if (v23)
          {
            sub_248175E80();
            swift_bridgeObjectRetain();
            uint64_t v55 = v75;
            sub_2481751A0();
            swift_bridgeObjectRelease();
            char v72 = 1;
            uint64_t v70 = v76;
            uint64_t v56 = v21;
            uint64_t v57 = v20;
            uint64_t v58 = v55;
            goto LABEL_16;
          }
          sub_248175E80();
          sub_247FAC1EC(v21, v20, v75, 0, v77, v79, v78, v27, v76, 1);
          break;
        case 2:
          uint64_t v78 = *((void *)v19 + 6);
          *(void *)&long long v79 = v24;
          uint64_t v76 = v28;
          uint64_t v77 = v25;
          uint64_t v75 = v22;
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          char v72 = 2;
          uint64_t v70 = v76;
          uint64_t v56 = v21;
          uint64_t v57 = v20;
          uint64_t v58 = v75;
LABEL_16:
          sub_247FAC1EC(v56, v57, v58, v23, v77, v79, v78, v27, v70, v72);
          break;
        case 3:
          sub_248175E70();
          break;
        default:
          uint64_t v78 = *((void *)v19 + 6);
          *(void *)&long long v79 = v24;
          uint64_t v76 = v28;
          uint64_t v77 = v25;
          uint64_t v75 = v22;
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          sub_248175EB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v59 = *(void *)&v9[*(int *)(v18 + 28)];
      swift_bridgeObjectRetain();
      sub_247FDE2AC(a1, v59);
      swift_bridgeObjectRelease();
      uint64_t v60 = &v9[*(int *)(v7 + 20)];
      uint64_t v61 = *((void *)v60 + 10);
      unint64_t v62 = *((void *)v60 + 11);
      sub_2481751A0();
      sub_248175E80();
      if (v62 >> 60 != 15)
      {
        sub_247FB6C20(v61, v62);
        sub_2481747E0();
        sub_247FB846C(v61, v62);
      }
      sub_248175E80();
      sub_248175E80();
      sub_2480E33D4((uint64_t)v9, type metadata accessor for SignInCommand.Request);
      break;
    case 2u:
      uint64_t v29 = *(void *)v12;
      unint64_t v30 = *((void *)v12 + 1);
      uint64_t v31 = *((void *)v12 + 2);
      unint64_t v32 = *((void *)v12 + 3);
      char v33 = v12[32];
      sub_248175E70();
      *(void *)&v91[0] = v29;
      *((void *)&v91[0] + 1) = v30;
      *(void *)&v91[1] = v31;
      *((void *)&v91[1] + 1) = v32;
      LOBYTE(v92) = v33;
      AnisetteCommand.Request.hash(into:)();
      sub_2480E32D8(v29, v30, v31, v32, v33);
      break;
    case 3u:
      sub_2480E336C((uint64_t)v12, (uint64_t)v6, type metadata accessor for AuthenticateCommand.Request);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = type metadata accessor for IdMSAccount();
      sub_248174700();
      sub_2480E3530(&qword_2692D5898, MEMORY[0x263F06A30]);
      sub_2481750B0();
      char v35 = &v6[*(int *)(v34 + 24)];
      uint64_t v37 = *(void *)v35;
      uint64_t v36 = *((void *)v35 + 1);
      uint64_t v38 = *((void *)v35 + 2);
      uint64_t v39 = *((void *)v35 + 3);
      uint64_t v41 = *((void *)v35 + 4);
      uint64_t v40 = *((void *)v35 + 5);
      uint64_t v42 = *((void *)v35 + 6);
      uint64_t v43 = *((void *)v35 + 7);
      uint64_t v44 = *((void *)v35 + 8);
      switch(v35[72])
      {
        case 1:
          uint64_t v75 = *((void *)v35 + 2);
          uint64_t v76 = v44;
          uint64_t v77 = v41;
          uint64_t v78 = v42;
          *(void *)&long long v79 = v40;
          sub_248175E70();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          if (v39)
          {
            sub_248175E80();
            swift_bridgeObjectRetain();
            uint64_t v63 = v75;
            sub_2481751A0();
            swift_bridgeObjectRelease();
            char v73 = 1;
            uint64_t v71 = v76;
            uint64_t v64 = v37;
            uint64_t v65 = v36;
            uint64_t v66 = v63;
            goto LABEL_24;
          }
          sub_248175E80();
          sub_247FAC1EC(v37, v36, v75, 0, v77, v79, v78, v43, v76, 1);
          break;
        case 2:
          uint64_t v78 = *((void *)v35 + 6);
          *(void *)&long long v79 = v40;
          uint64_t v76 = v44;
          uint64_t v77 = v41;
          uint64_t v75 = v38;
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          char v73 = 2;
          uint64_t v71 = v76;
          uint64_t v64 = v37;
          uint64_t v65 = v36;
          uint64_t v66 = v75;
LABEL_24:
          sub_247FAC1EC(v64, v65, v66, v39, v77, v79, v78, v43, v71, v73);
          break;
        case 3:
          sub_248175E70();
          break;
        default:
          uint64_t v78 = *((void *)v35 + 6);
          *(void *)&long long v79 = v40;
          uint64_t v76 = v44;
          uint64_t v77 = v41;
          uint64_t v75 = v38;
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          sub_248175EB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v67 = *(void *)&v6[*(int *)(v34 + 28)];
      swift_bridgeObjectRetain();
      sub_247FDE2AC(a1, v67);
      swift_bridgeObjectRelease();
      id v68 = &v6[*(int *)(v4 + 20)];
      if (*((void *)v68 + 1))
      {
        uint64_t v69 = *((void *)v68 + 4);
        long long v79 = *(_OWORD *)(v68 + 40);
        uint64_t v78 = *((void *)v68 + 7);
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        if ((void)v79)
        {
          *(void *)&v91[0] = v69;
          *(_OWORD *)((char *)v91 + 8) = v79;
          *((void *)&v91[1] + 1) = v78;
          sub_248175E80();
          SetupReport.LocaleInfo.hash(into:)();
        }
        else
        {
          sub_248175E80();
        }
      }
      sub_248175E80();
      sub_2480E33D4((uint64_t)v6, type metadata accessor for AuthenticateCommand.Request);
      break;
    case 4u:
      uint64_t v45 = *(void *)v12;
      uint64_t v46 = *((void *)v12 + 1);
      uint64_t v47 = *((void *)v12 + 3);
      uint64_t v78 = *((void *)v12 + 2);
      *(void *)&long long v79 = v45;
      uint64_t v48 = *((void *)v12 + 4);
      uint64_t v49 = *((void *)v12 + 5);
      uint64_t v50 = *((void *)v12 + 7);
      uint64_t v76 = *((void *)v12 + 6);
      uint64_t v77 = v48;
      uint64_t v51 = *((void *)v12 + 9);
      uint64_t v75 = *((void *)v12 + 8);
      unint64_t v52 = *((void *)v12 + 10);
      unsigned int v53 = v12[88];
      sub_248175E70();
      if (v53 >> 6)
      {
        if (v53 >> 6 == 1)
        {
          uint64_t v74[3] = v53 & 0x3F;
          sub_248175E70();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          switch(v52)
          {
            case 0uLL:
            case 1uLL:
            case 2uLL:
            case 3uLL:
              sub_248175E70();
              break;
            default:
              sub_248175E70();
              swift_bridgeObjectRetain();
              sub_247FDE2AC(a1, v52);
              sub_247FEFBA8(v52);
              break;
          }
          sub_248175E80();
          sub_247FF4AC0(v79, v46, v78, v47, v77, v49, v76, v50, v75, v51, v52, v53);
        }
        else
        {
          sub_248175E70();
        }
      }
      else
      {
        sub_248175E70();
        uint64_t v54 = v79;
        sub_2481751A0();
        sub_247FF4AC0(v54, v46, v78, v47, v77, v49, v76, v50, v75, v51, v52, v53);
      }
      break;
    default:
      long long v13 = *((_OWORD *)v12 + 9);
      long long v98 = *((_OWORD *)v12 + 8);
      long long v99 = v13;
      uint64_t v100 = *((void *)v12 + 20);
      long long v14 = *((_OWORD *)v12 + 5);
      long long v94 = *((_OWORD *)v12 + 4);
      long long v95 = v14;
      long long v15 = *((_OWORD *)v12 + 7);
      long long v96 = *((_OWORD *)v12 + 6);
      long long v97 = v15;
      long long v16 = *((_OWORD *)v12 + 1);
      v91[0] = *(_OWORD *)v12;
      v91[1] = v16;
      long long v17 = *((_OWORD *)v12 + 3);
      long long v92 = *((_OWORD *)v12 + 2);
      long long v93 = v17;
      sub_248175E70();
      long long v88 = v98;
      long long v89 = v99;
      uint64_t v90 = v100;
      long long v84 = v94;
      long long v85 = v95;
      long long v86 = v96;
      long long v87 = v97;
      long long v80 = v91[0];
      long long v81 = v91[1];
      long long v82 = v92;
      long long v83 = v93;
      HandshakeCommand.Request.hash(into:)(a1);
      sub_2480C3CD8((uint64_t *)v91);
      break;
  }
}

uint64_t sub_2480D7E00(uint64_t a1)
{
  unint64_t v2 = sub_2480E3578();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480D7E3C(uint64_t a1)
{
  unint64_t v2 = sub_2480E3578();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480D7E78(uint64_t a1)
{
  unint64_t v2 = sub_2480E34DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480D7EB4(uint64_t a1)
{
  unint64_t v2 = sub_2480E34DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480D7EF0()
{
  uint64_t result = 0x6B616873646E6168;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E496E676973;
      break;
    case 2:
      uint64_t result = 0x6574746573696E61;
      break;
    case 3:
      uint64_t result = 0x69746E6568747561;
      break;
    case 4:
      uint64_t result = 0x726961706572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480D7FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480EF374(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480D7FC8(uint64_t a1)
{
  unint64_t v2 = sub_2480E3434();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480D8004(uint64_t a1)
{
  unint64_t v2 = sub_2480E3434();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480D8040(uint64_t a1)
{
  unint64_t v2 = sub_2480E3674();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480D807C(uint64_t a1)
{
  unint64_t v2 = sub_2480E3674();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480D80B8(uint64_t a1)
{
  unint64_t v2 = sub_2480E3488();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480D80F4(uint64_t a1)
{
  unint64_t v2 = sub_2480E3488();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480D8130(uint64_t a1)
{
  unint64_t v2 = sub_2480E3620();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480D816C(uint64_t a1)
{
  unint64_t v2 = sub_2480E3620();
  return MEMORY[0x270FA00B8](a1, v2);
}

void V1Command.Request.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA5A0);
  uint64_t v76 = *(void *)(v2 - 8);
  unint64_t v77 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v75 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA5A8);
  uint64_t v73 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v72 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for AuthenticateCommand.Request(0);
  MEMORY[0x270FA5388](v70);
  uint64_t v71 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA5B0);
  uint64_t v68 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v67 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA5B8);
  uint64_t v65 = *(void *)(v9 - 8);
  uint64_t v66 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for SignInCommand.Request(0);
  MEMORY[0x270FA5388](v61);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA5C0);
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  long long v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x270FA5388](v15);
  long long v17 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA5C8);
  uint64_t v78 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  int v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E3434();
  long long v80 = v19;
  sub_248175F60();
  sub_2480E44A4(v79, (uint64_t)v17, type metadata accessor for V1Command.Request);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2480E336C((uint64_t)v17, (uint64_t)v12, type metadata accessor for SignInCommand.Request);
      LOBYTE(v92) = 1;
      sub_2480E3620();
      uint64_t v28 = v63;
      uint64_t v29 = v103;
      unint64_t v30 = v80;
      sub_248175B50();
      sub_2480E3530(&qword_2692D74D8, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
      uint64_t v31 = v66;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v28, v31);
      sub_2480E33D4((uint64_t)v12, type metadata accessor for SignInCommand.Request);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v30, v29);
      break;
    case 2u:
      unint64_t v33 = *((void *)v17 + 1);
      uint64_t v79 = *(void *)v17;
      uint64_t v32 = v79;
      unint64_t v34 = *((void *)v17 + 3);
      uint64_t v76 = *((void *)v17 + 2);
      unint64_t v77 = v33;
      char v35 = v17[32];
      LOBYTE(v92) = 2;
      sub_2480E3578();
      uint64_t v36 = v67;
      uint64_t v37 = v103;
      uint64_t v38 = v80;
      sub_248175B50();
      *(void *)&long long v92 = v32;
      *((void *)&v92 + 1) = v33;
      uint64_t v39 = v76;
      *(void *)&long long v93 = v76;
      *((void *)&v93 + 1) = v34;
      LOBYTE(v94) = v35;
      sub_2480E35CC();
      uint64_t v40 = v69;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v36, v40);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v38, v37);
      sub_2480E32D8(v79, v77, v39, v34, v35);
      break;
    case 3u:
      uint64_t v41 = v71;
      sub_2480E336C((uint64_t)v17, v71, type metadata accessor for AuthenticateCommand.Request);
      LOBYTE(v92) = 3;
      sub_2480E34DC();
      uint64_t v42 = v72;
      uint64_t v43 = v103;
      uint64_t v44 = v80;
      sub_248175B50();
      sub_2480E3530(&qword_2692D6E48, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
      uint64_t v45 = v74;
      sub_248175BE0();
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v42, v45);
      sub_2480E33D4(v41, type metadata accessor for AuthenticateCommand.Request);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v44, v43);
      break;
    case 4u:
      uint64_t v47 = *(void *)v17;
      uint64_t v46 = *((void *)v17 + 1);
      uint64_t v48 = (char *)*((void *)v17 + 2);
      uint64_t v49 = *((void *)v17 + 4);
      uint64_t v79 = *((void *)v17 + 3);
      uint64_t v66 = *((void *)v17 + 5);
      uint64_t v67 = v48;
      uint64_t v50 = *((void *)v17 + 7);
      uint64_t v74 = *((void *)v17 + 6);
      uint64_t v51 = *((void *)v17 + 8);
      uint64_t v52 = *((void *)v17 + 9);
      uint64_t v64 = *((void *)v17 + 10);
      uint64_t v65 = v51;
      int v53 = v17[88];
      LOBYTE(v92) = 4;
      sub_2480E3488();
      uint64_t v54 = v75;
      sub_248175B50();
      uint64_t v72 = v46;
      uint64_t v73 = v47;
      *(void *)&long long v92 = v47;
      *((void *)&v92 + 1) = v46;
      uint64_t v55 = (uint64_t)v67;
      *(void *)&long long v93 = v67;
      *((void *)&v93 + 1) = v79;
      uint64_t v70 = v50;
      uint64_t v71 = v49;
      *(void *)&long long v94 = v49;
      uint64_t v56 = v66;
      *((void *)&v94 + 1) = v66;
      *(void *)&long long v95 = v74;
      *((void *)&v95 + 1) = v50;
      uint64_t v57 = v65;
      *(void *)&long long v96 = v65;
      *((void *)&v96 + 1) = v52;
      uint64_t v69 = v52;
      unint64_t v58 = v64;
      *(void *)&long long v97 = v64;
      LODWORD(v68) = v53;
      BYTE8(v97) = v53;
      sub_247FF44D8();
      unint64_t v59 = v77;
      sub_248175BE0();
      (*(void (**)(char *, unint64_t))(v76 + 8))(v54, v59);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v80, v103);
      sub_247FF4AC0(v73, v72, v55, v79, v71, v56, v74, v70, v57, v69, v58, v68);
      break;
    default:
      long long v20 = *((_OWORD *)v17 + 9);
      long long v100 = *((_OWORD *)v17 + 8);
      long long v101 = v20;
      uint64_t v102 = *((void *)v17 + 20);
      long long v21 = *((_OWORD *)v17 + 5);
      long long v96 = *((_OWORD *)v17 + 4);
      long long v97 = v21;
      long long v22 = *((_OWORD *)v17 + 7);
      long long v98 = *((_OWORD *)v17 + 6);
      long long v99 = v22;
      long long v23 = *((_OWORD *)v17 + 1);
      long long v92 = *(_OWORD *)v17;
      long long v93 = v23;
      long long v24 = *((_OWORD *)v17 + 3);
      long long v94 = *((_OWORD *)v17 + 2);
      long long v95 = v24;
      LOBYTE(v81) = 0;
      sub_2480E3674();
      uint64_t v25 = v103;
      uint64_t v26 = v80;
      sub_248175B50();
      long long v89 = v100;
      long long v90 = v101;
      uint64_t v91 = v102;
      long long v85 = v96;
      long long v86 = v97;
      long long v87 = v98;
      long long v88 = v99;
      long long v81 = v92;
      long long v82 = v93;
      long long v83 = v94;
      long long v84 = v95;
      sub_2480C43A8();
      uint64_t v27 = v64;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v14, v27);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v26, v25);
      sub_2480C3CD8((uint64_t *)&v92);
      break;
  }
}

uint64_t V1Command.Request.hashValue.getter()
{
  return sub_2480DCBC8((void (*)(unsigned char *))V1Command.Request.hash(into:));
}

uint64_t V1Command.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v91 = a2;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA608);
  uint64_t v83 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  long long v87 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA610);
  uint64_t v82 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  long long v90 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA618);
  uint64_t v81 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  long long v86 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA620);
  uint64_t v76 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  long long v85 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA628);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  long long v84 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA630);
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for V1Command.Request(0);
  uint64_t v10 = MEMORY[0x270FA5388](v92);
  uint64_t v73 = (_OWORD *)((char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v68 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  long long v17 = (char *)&v68 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  long long v20 = (char *)&v68 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  long long v23 = (char *)&v68 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v68 - v24;
  uint64_t v26 = a1[3];
  long long v93 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_2480E3434();
  uint64_t v27 = (uint64_t)v105;
  sub_248175F20();
  if (v27) {
    goto LABEL_10;
  }
  uint64_t v69 = v17;
  uint64_t v72 = v20;
  uint64_t v70 = v23;
  uint64_t v71 = v14;
  uint64_t v28 = v90;
  __int16 v105 = v25;
  uint64_t v29 = v91;
  uint64_t v30 = v89;
  uint64_t v31 = sub_248175B30();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v40 = sub_2481758A0();
    swift_allocError();
    uint64_t v42 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v42 = v92;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v40 - 8) + 104))(v42, *MEMORY[0x263F8DCB0], v40);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v9, v30);
LABEL_10:
    uint64_t v45 = (uint64_t)v93;
    return __swift_destroy_boxed_opaque_existential_1(v45);
  }
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      LOBYTE(v94) = 1;
      sub_2480E3620();
      uint64_t v43 = v85;
      sub_248175A50();
      type metadata accessor for SignInCommand.Request(0);
      sub_2480E3530(&qword_2692D74D0, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
      uint64_t v44 = v77;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v9, v30);
      uint64_t v45 = (uint64_t)v93;
      uint64_t v46 = (uint64_t)v72;
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = v46;
      uint64_t v48 = (uint64_t)v105;
      sub_2480E336C(v47, (uint64_t)v105, type metadata accessor for V1Command.Request);
      goto LABEL_13;
    case 2:
      LOBYTE(v94) = 2;
      sub_2480E3578();
      uint64_t v49 = v86;
      sub_248175A50();
      sub_2480E36C8();
      uint64_t v50 = v49;
      uint64_t v51 = v78;
      sub_248175AF0();
      uint64_t v52 = v88;
      (*(void (**)(char *, uint64_t))(v81 + 8))(v50, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v30);
      char v53 = v96;
      long long v54 = v95;
      char v35 = v69;
      *uint64_t v69 = v94;
      v35[1] = v54;
      *((unsigned char *)v35 + 32) = v53;
      goto LABEL_12;
    case 3:
      LOBYTE(v94) = 3;
      sub_2480E34DC();
      uint64_t v55 = v28;
      sub_248175A50();
      type metadata accessor for AuthenticateCommand.Request(0);
      sub_2480E3530(&qword_2692D6E40, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
      uint64_t v56 = (uint64_t)v71;
      uint64_t v57 = v79;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v55, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v9, v30);
      swift_storeEnumTagMultiPayload();
      uint64_t v48 = (uint64_t)v105;
      sub_2480E336C(v56, (uint64_t)v105, type metadata accessor for V1Command.Request);
      uint64_t v45 = (uint64_t)v93;
      uint64_t v29 = v91;
      goto LABEL_13;
    case 4:
      LOBYTE(v94) = 4;
      sub_2480E3488();
      unint64_t v58 = v87;
      sub_248175A50();
      sub_247FF4484();
      uint64_t v60 = v58;
      uint64_t v61 = v80;
      sub_248175AF0();
      uint64_t v62 = v88;
      (*(void (**)(char *, uint64_t))(v83 + 8))(v60, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v9, v30);
      uint64_t v63 = v99;
      char v64 = BYTE8(v99);
      long long v65 = v95;
      char v35 = v73;
      *uint64_t v73 = v94;
      v35[1] = v65;
      long long v66 = v97;
      void v35[2] = v96;
      v35[3] = v66;
      v35[4] = v98;
      *((void *)v35 + 10) = v63;
      *((unsigned char *)v35 + 88) = v64;
      goto LABEL_12;
    default:
      LOBYTE(v94) = 0;
      sub_2480E3674();
      uint64_t v32 = v84;
      sub_248175A50();
      sub_2480C4354();
      uint64_t v33 = v75;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v32, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v88 + 8))(v9, v30);
      long long v34 = v103;
      char v35 = v70;
      *((_OWORD *)v70 + 8) = v102;
      v35[9] = v34;
      *((void *)v35 + 20) = v104;
      long long v36 = v99;
      v35[4] = v98;
      v35[5] = v36;
      long long v37 = v101;
      v35[6] = v100;
      v35[7] = v37;
      long long v38 = v95;
      *char v35 = v94;
      v35[1] = v38;
      long long v39 = v97;
      void v35[2] = v96;
      v35[3] = v39;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      uint64_t v67 = (uint64_t)v35;
      uint64_t v48 = (uint64_t)v105;
      sub_2480E336C(v67, (uint64_t)v105, type metadata accessor for V1Command.Request);
      uint64_t v45 = (uint64_t)v93;
LABEL_13:
      sub_2480E336C(v48, v29, type metadata accessor for V1Command.Request);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v45);
}

uint64_t sub_2480D987C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return V1Command.Request.init(from:)(a1, a2);
}

void sub_2480D9894(void *a1)
{
}

uint64_t sub_2480D98B0(uint64_t a1, uint64_t a2)
{
  return sub_2480DD4CC(a1, a2, (void (*)(unsigned char *))V1Command.Request.hash(into:));
}

uint64_t sub_2480D98CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2480DD530(a1, a2, a3, (void (*)(unsigned char *))V1Command.Request.hash(into:));
}

void V1Command.Response.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AuthenticateCommand.Response(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AnisetteCommand.Response();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignInCommand.Response(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x270FA5388](v12);
  long long v14 = (unsigned __int8 *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2480E44A4(v1, (uint64_t)v14, type metadata accessor for V1Command.Response);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2480E336C((uint64_t)v14, (uint64_t)v11, type metadata accessor for SignInCommand.Response);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = type metadata accessor for IdMSAccount();
      sub_248174700();
      sub_2480E3530(&qword_2692D5898, MEMORY[0x263F06A30]);
      uint64_t v28 = (long long *)a1;
      sub_2481750B0();
      uint64_t v29 = &v11[*(int *)(v27 + 24)];
      uint64_t v30 = *(void *)v29;
      uint64_t v31 = *((void *)v29 + 1);
      uint64_t v32 = *((void *)v29 + 2);
      uint64_t v33 = *((void *)v29 + 3);
      uint64_t v34 = *((void *)v29 + 4);
      uint64_t v35 = *((void *)v29 + 5);
      uint64_t v36 = *((void *)v29 + 6);
      uint64_t v37 = *((void *)v29 + 7);
      uint64_t v38 = *((void *)v29 + 8);
      switch(v29[72])
      {
        case 1:
          uint64_t v60 = *((void *)v29 + 2);
          uint64_t v61 = v38;
          uint64_t v62 = v34;
          uint64_t v63 = v36;
          long long v39 = v28;
          sub_248175E70();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          sub_248175E80();
          if (v33)
          {
            swift_bridgeObjectRetain();
            uint64_t v46 = v60;
            sub_2481751A0();
            swift_bridgeObjectRelease();
            uint64_t v54 = v61;
            uint64_t v47 = v30;
            uint64_t v48 = v31;
            uint64_t v49 = v46;
            uint64_t v50 = v33;
          }
          else
          {
            uint64_t v54 = v61;
            uint64_t v47 = v30;
            uint64_t v48 = v31;
            uint64_t v49 = v60;
            uint64_t v50 = 0;
          }
          sub_247FAC1EC(v47, v48, v49, v50, v62, v35, v63, v37, v54, 1);
          break;
        case 2:
          uint64_t v61 = *((void *)v29 + 5);
          uint64_t v62 = v34;
          uint64_t v51 = v38;
          long long v39 = v28;
          uint64_t v63 = v36;
          uint64_t v52 = v32;
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          sub_247FAC1EC(v30, v31, v52, v33, v62, v61, v63, v37, v51, 2);
          break;
        case 3:
          long long v39 = v28;
          sub_248175E70();
          break;
        default:
          uint64_t v61 = *((void *)v29 + 8);
          uint64_t v62 = v34;
          long long v39 = v28;
          uint64_t v63 = v36;
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          sub_248175EB0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v53 = *(void *)&v11[*(int *)(v27 + 28)];
      swift_bridgeObjectRetain();
      sub_247FDE2AC((uint64_t)v39, v53);
      swift_bridgeObjectRelease();
      sub_248020D1C(v39, *(void *)&v11[*(int *)(v9 + 20)]);
      uint64_t v40 = type metadata accessor for SignInCommand.Response;
      uint64_t v41 = (uint64_t)v11;
      goto LABEL_19;
    case 2u:
      sub_2480E336C((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response);
      sub_248175E70();
      AnisetteCommand.Response.hash(into:)(a1);
      uint64_t v40 = (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response;
      uint64_t v41 = (uint64_t)v8;
      goto LABEL_19;
    case 3u:
      sub_2480E336C((uint64_t)v14, (uint64_t)v5, type metadata accessor for AuthenticateCommand.Response);
      sub_248175E70();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
      sub_2480E450C();
      sub_2481750B0();
      uint64_t v40 = type metadata accessor for AuthenticateCommand.Response;
      uint64_t v41 = (uint64_t)v5;
LABEL_19:
      sub_2480E33D4(v41, v40);
      break;
    case 4u:
      uint64_t v42 = *(void *)v14;
      uint64_t v43 = *((void *)v14 + 1);
      uint64_t v44 = *((void *)v14 + 2);
      unint64_t v45 = *((void *)v14 + 3);
      sub_248175E70();
      if (v45 >> 62)
      {
        sub_248175E70();
        if (v45 >> 62 == 1) {
          sub_248175E80();
        }
      }
      else
      {
        sub_248175E70();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        sub_247FDEDB8(a1, v45);
        sub_247FF40F8(v42, v43, v44, v45);
        sub_247FF40F8(v42, v43, v44, v45);
      }
      break;
    default:
      LODWORD(v61) = *v14;
      LODWORD(v60) = v14[1];
      uint64_t v15 = *((void *)v14 + 2);
      uint64_t v59 = *((void *)v14 + 1);
      int v16 = v14[24];
      int v57 = v14[25];
      int v58 = v16;
      uint64_t v17 = *((void *)v14 + 5);
      uint64_t v19 = *((void *)v14 + 6);
      uint64_t v20 = *((void *)v14 + 7);
      uint64_t v22 = *((void *)v14 + 8);
      uint64_t v21 = *((void *)v14 + 9);
      uint64_t v62 = *((void *)v14 + 4);
      uint64_t v18 = v62;
      uint64_t v63 = v21;
      uint64_t v23 = *((void *)v14 + 10);
      uint64_t v24 = *((void *)v14 + 11);
      uint64_t v55 = v17;
      uint64_t v56 = v23;
      unsigned __int8 v25 = v14[96];
      sub_248175E70();
      char v64 = v61;
      char v65 = v60;
      uint64_t v66 = v59;
      uint64_t v67 = v15;
      char v68 = v58;
      char v69 = v57;
      uint64_t v70 = v18;
      uint64_t v26 = v55;
      uint64_t v71 = v55;
      uint64_t v72 = v19;
      uint64_t v73 = v20;
      uint64_t v74 = v22;
      uint64_t v75 = v21;
      uint64_t v76 = v56;
      uint64_t v77 = v24;
      unsigned __int8 v78 = v25;
      HandshakeCommand.Response.hash(into:)();
      swift_bridgeObjectRelease();
      sub_247FF6B84(v62, v26, v19, v20, v22, v63);
      break;
  }
}

uint64_t sub_2480DA0A8(uint64_t a1)
{
  unint64_t v2 = sub_2480E4684();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DA0E4(uint64_t a1)
{
  unint64_t v2 = sub_2480E4684();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DA120(uint64_t a1)
{
  unint64_t v2 = sub_2480E4630();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DA15C(uint64_t a1)
{
  unint64_t v2 = sub_2480E4630();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DA198(uint64_t a1)
{
  unint64_t v2 = sub_2480E4588();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DA1D4(uint64_t a1)
{
  unint64_t v2 = sub_2480E4588();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DA210(uint64_t a1)
{
  unint64_t v2 = sub_2480E472C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DA24C(uint64_t a1)
{
  unint64_t v2 = sub_2480E472C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DA288(uint64_t a1)
{
  unint64_t v2 = sub_2480E45DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DA2C4(uint64_t a1)
{
  unint64_t v2 = sub_2480E45DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DA300(uint64_t a1)
{
  unint64_t v2 = sub_2480E46D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DA33C(uint64_t a1)
{
  unint64_t v2 = sub_2480E46D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

void V1Command.Response.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA640);
  uint64_t v64 = *(void *)(v2 - 8);
  uint64_t v65 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v63 = (uint64_t)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA648);
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v60 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for AuthenticateCommand.Response(0);
  MEMORY[0x270FA5388](v58);
  uint64_t v59 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA650);
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v55 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for AnisetteCommand.Response();
  MEMORY[0x270FA5388](v53);
  uint64_t v54 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA658);
  uint64_t v51 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for SignInCommand.Response(0);
  MEMORY[0x270FA5388](v48);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA660);
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x270FA5388](v14);
  int v16 = (unsigned __int8 *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA668);
  uint64_t v67 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E4588();
  uint64_t v66 = v18;
  sub_248175F60();
  sub_2480E44A4(v68, (uint64_t)v16, type metadata accessor for V1Command.Response);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2480E336C((uint64_t)v16, (uint64_t)v11, type metadata accessor for SignInCommand.Response);
      LOBYTE(v69) = 1;
      sub_2480E46D8();
      uint64_t v29 = v82;
      uint64_t v30 = v66;
      sub_248175B50();
      sub_2480E3530(&qword_2692D7508, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
      uint64_t v31 = v52;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v9, v31);
      sub_2480E33D4((uint64_t)v11, type metadata accessor for SignInCommand.Response);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v30, v29);
      break;
    case 2u:
      uint64_t v32 = v54;
      sub_2480E336C((uint64_t)v16, v54, (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response);
      LOBYTE(v69) = 2;
      sub_2480E4684();
      uint64_t v33 = v55;
      uint64_t v34 = v82;
      uint64_t v35 = v66;
      sub_248175B50();
      sub_2480E3530(&qword_2692DA690, (void (*)(uint64_t))type metadata accessor for AnisetteCommand.Response);
      uint64_t v36 = v57;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v36);
      uint64_t v37 = (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response;
      goto LABEL_6;
    case 3u:
      uint64_t v32 = v59;
      sub_2480E336C((uint64_t)v16, v59, type metadata accessor for AuthenticateCommand.Response);
      LOBYTE(v69) = 3;
      sub_2480E4630();
      uint64_t v38 = v60;
      uint64_t v34 = v82;
      uint64_t v35 = v66;
      sub_248175B50();
      sub_2480E3530(&qword_2692D6E78, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
      uint64_t v39 = v62;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v39);
      uint64_t v37 = type metadata accessor for AuthenticateCommand.Response;
LABEL_6:
      sub_2480E33D4(v32, v37);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v35, v34);
      break;
    case 4u:
      uint64_t v40 = *(void *)v16;
      uint64_t v41 = *((void *)v16 + 1);
      uint64_t v42 = *((void *)v16 + 2);
      unint64_t v43 = *((void *)v16 + 3);
      LOBYTE(v69) = 4;
      sub_2480E45DC();
      uint64_t v44 = v63;
      uint64_t v45 = v82;
      uint64_t v46 = v66;
      sub_248175B50();
      uint64_t v69 = v40;
      uint64_t v70 = v41;
      uint64_t v71 = v42;
      unint64_t v72 = v43;
      sub_247FF47BC();
      uint64_t v47 = v65;
      sub_248175BE0();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v44, v47);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v46, v45);
      sub_247FF40F8(v40, v41, v42, v43);
      break;
    default:
      LODWORD(v61) = *v16;
      LODWORD(v60) = v16[1];
      uint64_t v19 = *((void *)v16 + 2);
      uint64_t v59 = *((void *)v16 + 1);
      uint64_t v62 = v19;
      LODWORD(v58) = v16[24];
      LODWORD(v57) = v16[25];
      uint64_t v21 = *((void *)v16 + 5);
      uint64_t v68 = *((void *)v16 + 4);
      uint64_t v20 = v68;
      uint64_t v23 = *((void *)v16 + 7);
      uint64_t v64 = *((void *)v16 + 6);
      uint64_t v22 = v64;
      uint64_t v65 = v21;
      uint64_t v24 = *((void *)v16 + 9);
      uint64_t v63 = *((void *)v16 + 8);
      uint64_t v25 = v63;
      uint64_t v56 = v24;
      uint64_t v55 = (char *)*((void *)v16 + 10);
      uint64_t v54 = *((void *)v16 + 11);
      LODWORD(v53) = v16[96];
      LOBYTE(v69) = 0;
      sub_2480E472C();
      uint64_t v26 = v66;
      sub_248175B50();
      LOBYTE(v69) = v61;
      BYTE1(v69) = (_BYTE)v60;
      uint64_t v70 = v59;
      uint64_t v71 = v19;
      LOBYTE(v72) = v58;
      BYTE1(v72) = v57;
      uint64_t v73 = v20;
      uint64_t v74 = v21;
      uint64_t v75 = v22;
      uint64_t v76 = v23;
      uint64_t v27 = v56;
      uint64_t v77 = v25;
      uint64_t v78 = v56;
      uint64_t v79 = v55;
      uint64_t v80 = v54;
      char v81 = v53;
      sub_2480C4688();
      uint64_t v28 = v50;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v28);
      (*(void (**)(char *, uint64_t))(v67 + 8))(v26, v82);
      swift_bridgeObjectRelease();
      sub_247FF6B84(v68, v65, v64, v23, v63, v27);
      break;
  }
}

uint64_t V1Command.Response.hashValue.getter()
{
  return sub_2480DCBC8((void (*)(unsigned char *))V1Command.Response.hash(into:));
}

uint64_t V1Command.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6A8);
  uint64_t v78 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v82 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6B0);
  uint64_t v77 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  long long v85 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6B8);
  uint64_t v76 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  char v81 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6C0);
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v80 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6C8);
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v79 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6D0);
  uint64_t v83 = *(void *)(v8 - 8);
  uint64_t v84 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for V1Command.Response(0);
  uint64_t v11 = MEMORY[0x270FA5388](v87);
  uint64_t v68 = (_OWORD *)((char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v63 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v63 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v63 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v63 - v25;
  uint64_t v27 = a1[3];
  uint64_t v88 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_2480E4588();
  uint64_t v28 = (uint64_t)v95;
  sub_248175F20();
  if (v28) {
    goto LABEL_10;
  }
  uint64_t v64 = v24;
  uint64_t v66 = v21;
  uint64_t v67 = v18;
  uint64_t v65 = v15;
  uint64_t v29 = v85;
  uint64_t v30 = v86;
  long long v95 = v26;
  uint64_t v31 = v84;
  uint64_t v32 = sub_248175B30();
  if (*(void *)(v32 + 16) != 1)
  {
    uint64_t v42 = sub_2481758A0();
    swift_allocError();
    uint64_t v44 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v44 = v87;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x263F8DCB0], v42);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v10, v31);
LABEL_10:
    uint64_t v48 = (uint64_t)v88;
    return __swift_destroy_boxed_opaque_existential_1(v48);
  }
  switch(*(unsigned char *)(v32 + 32))
  {
    case 1:
      v89[0] = 1;
      sub_2480E46D8();
      uint64_t v45 = v80;
      sub_248175A50();
      type metadata accessor for SignInCommand.Response(0);
      sub_2480E3530(&qword_2692D7500, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
      uint64_t v46 = v45;
      uint64_t v47 = v72;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v10, v31);
      uint64_t v48 = (uint64_t)v88;
      uint64_t v49 = (uint64_t)v66;
      swift_storeEnumTagMultiPayload();
      uint64_t v50 = v49;
      uint64_t v51 = (uint64_t)v95;
      sub_2480E336C(v50, (uint64_t)v95, type metadata accessor for V1Command.Response);
      goto LABEL_13;
    case 2:
      v89[0] = 2;
      sub_2480E4684();
      uint64_t v52 = v81;
      sub_248175A50();
      type metadata accessor for AnisetteCommand.Response();
      sub_2480E3530(&qword_2692DA6D8, (void (*)(uint64_t))type metadata accessor for AnisetteCommand.Response);
      uint64_t v53 = v73;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v52, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v10, v31);
      uint64_t v39 = (uint64_t)v67;
      goto LABEL_12;
    case 3:
      v89[0] = 3;
      sub_2480E4630();
      uint64_t v54 = v29;
      sub_248175A50();
      type metadata accessor for AuthenticateCommand.Response(0);
      sub_2480E3530(&qword_2692D6E70, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
      uint64_t v55 = (uint64_t)v65;
      uint64_t v56 = v74;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v54, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v10, v31);
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = (uint64_t)v95;
      sub_2480E336C(v55, (uint64_t)v95, type metadata accessor for V1Command.Response);
      uint64_t v48 = (uint64_t)v88;
      uint64_t v30 = v86;
      goto LABEL_13;
    case 4:
      v89[0] = 4;
      sub_2480E45DC();
      uint64_t v57 = v82;
      sub_248175A50();
      sub_247FF4768();
      uint64_t v59 = v57;
      uint64_t v60 = v75;
      sub_248175AF0();
      uint64_t v61 = v83;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v59, v60);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v31);
      long long v62 = *(_OWORD *)&v89[16];
      uint64_t v39 = (uint64_t)v68;
      *uint64_t v68 = *(_OWORD *)v89;
      *(_OWORD *)(v39 + 16) = v62;
      goto LABEL_12;
    default:
      v89[0] = 0;
      sub_2480E472C();
      uint64_t v33 = v79;
      sub_248175A50();
      sub_2480C4634();
      uint64_t v34 = v70;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v33, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v10, v31);
      char v35 = v89[1];
      char v36 = v89[24];
      char v37 = v89[25];
      char v38 = v94;
      uint64_t v39 = (uint64_t)v64;
      *uint64_t v64 = v89[0];
      *(unsigned char *)(v39 + 1) = v35;
      *(_OWORD *)(v39 + 8) = *(_OWORD *)&v89[8];
      *(unsigned char *)(v39 + 24) = v36;
      *(unsigned char *)(v39 + 25) = v37;
      long long v40 = v91;
      *(_OWORD *)(v39 + 32) = v90;
      *(_OWORD *)(v39 + 48) = v40;
      long long v41 = v93;
      *(_OWORD *)(v39 + 64) = v92;
      *(_OWORD *)(v39 + 80) = v41;
      *(unsigned char *)(v39 + 96) = v38;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = (uint64_t)v95;
      sub_2480E336C(v39, (uint64_t)v95, type metadata accessor for V1Command.Response);
      uint64_t v48 = (uint64_t)v88;
LABEL_13:
      sub_2480E336C(v51, v30, type metadata accessor for V1Command.Response);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v48);
}

uint64_t sub_2480DBB00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return V1Command.Response.init(from:)(a1, a2);
}

void sub_2480DBB18(void *a1)
{
}

uint64_t sub_2480DBB34(uint64_t a1, uint64_t a2)
{
  return sub_2480DD4CC(a1, a2, (void (*)(unsigned char *))V1Command.Response.hash(into:));
}

uint64_t sub_2480DBB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2480DD530(a1, a2, a3, (void (*)(unsigned char *))V1Command.Response.hash(into:));
}

uint64_t static V1CommandError.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if (v5 != 1)
    {
      uint64_t v21 = v4 | v2;
      if (v4 | v2 | v3)
      {
        if (v3 == 1 && v21 == 0)
        {
          if (v9 == 2 && v7 == 1 && !(v8 | v6))
          {
            char v17 = 1;
            sub_2480E47A0(1, 0, 0, 2);
            sub_2480E47A0(1, 0, 0, 2);
            return v17 & 1;
          }
          goto LABEL_48;
        }
        if (v3 != 2 || v21)
        {
          if (v3 != 3 || v21)
          {
            if (v9 != 2 || v7 != 4 || v8 | v6) {
              goto LABEL_48;
            }
            sub_2480E47A0(4, 0, 0, 2);
            uint64_t v23 = 4;
          }
          else
          {
            if (v9 != 2 || v7 != 3 || v8 | v6) {
              goto LABEL_48;
            }
            sub_2480E47A0(3, 0, 0, 2);
            uint64_t v23 = 3;
          }
        }
        else
        {
          if (v9 != 2 || v7 != 2 || v8 | v6) {
            goto LABEL_48;
          }
          sub_2480E47A0(2, 0, 0, 2);
          uint64_t v23 = 2;
        }
      }
      else
      {
        if (v9 != 2 || (v8 | v6 | v7) != 0) {
          goto LABEL_48;
        }
        sub_2480E47A0(0, 0, 0, 2);
        uint64_t v23 = 0;
      }
      sub_2480E47A0(v23, 0, 0, 2);
      char v17 = 1;
      return v17 & 1;
    }
    if (v9 == 1)
    {
      uint64_t v10 = *(void *)(v3 + 24);
      uint64_t v43 = *(void *)(v3 + 32);
      char v11 = *(unsigned char *)(v3 + 40);
      uint64_t v30 = *(void *)(v3 + 56);
      uint64_t v31 = *(void *)(v3 + 64);
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(v7 + 16);
      uint64_t v39 = *(void *)(v3 + 48);
      uint64_t v40 = *(void *)(v7 + 24);
      uint64_t v14 = *(void *)(v7 + 32);
      char v41 = *(unsigned char *)(v3 + 72);
      char v42 = *(unsigned char *)(v7 + 40);
      uint64_t v15 = *(void *)(v7 + 48);
      uint64_t v33 = *(void *)(v7 + 56);
      uint64_t v34 = *(void *)(a2 + 8);
      uint64_t v32 = *(void *)(v7 + 64);
      char v38 = *(unsigned char *)(v7 + 72);
      uint64_t v48 = *(void *)(v3 + 16);
      uint64_t v49 = v10;
      uint64_t v50 = v43;
      char v51 = v11;
      uint64_t v44 = v13;
      uint64_t v45 = v40;
      uint64_t v46 = v14;
      char v47 = v42;
      uint64_t v36 = v12;
      sub_2480E4780(v7, v34, v12, 1);
      uint64_t v35 = v4;
      sub_2480E4780(v3, v2, v4, 1);
      uint64_t v37 = v48;
      sub_2480E4780(v48, v10, v43, v11);
      sub_2480E4780(v13, v40, v14, v42);
      sub_2480E4780(v39, v30, v31, v41);
      uint64_t v16 = v15;
      sub_2480E4780(v15, v33, v32, v38);
      if (static V1CommandError.== infix(_:_:)(&v48, &v44))
      {
        uint64_t v48 = v39;
        uint64_t v49 = v30;
        uint64_t v50 = v31;
        char v51 = v41;
        uint64_t v44 = v15;
        uint64_t v45 = v33;
        uint64_t v46 = v32;
        char v47 = v38;
        char v17 = static V1CommandError.== infix(_:_:)(&v48, &v44);
        sub_2480E47A0(v13, v40, v14, v42);
        sub_2480E47A0(v37, v10, v43, v11);
        sub_2480E47A0(v16, v33, v32, v38);
        sub_2480E47A0(v39, v30, v31, v41);
        sub_2480E47A0(v3, v2, v35, 1);
        sub_2480E47A0(v7, v34, v36, 1);
        return v17 & 1;
      }
      sub_2480E47A0(v15, v33, v32, v38);
      sub_2480E47A0(v39, v30, v31, v41);
      sub_2480E47A0(v13, v40, v14, v42);
      sub_2480E47A0(v37, v10, v43, v11);
      sub_2480E47A0(v3, v2, v35, 1);
      uint64_t v25 = v7;
      uint64_t v26 = v34;
      uint64_t v27 = v36;
      char v28 = 1;
LABEL_49:
      sub_2480E47A0(v25, v26, v27, v28);
      char v17 = 0;
      return v17 & 1;
    }
LABEL_48:
    sub_2480E4780(*(void *)a2, *(void *)(a2 + 8), v8, v9);
    sub_2480E4780(v3, v2, v4, v5);
    sub_2480E47A0(v3, v2, v4, v5);
    uint64_t v25 = v7;
    uint64_t v26 = v6;
    uint64_t v27 = v8;
    char v28 = v9;
    goto LABEL_49;
  }
  if (*(unsigned char *)(a2 + 24)) {
    goto LABEL_48;
  }
  uint64_t v18 = *(void *)a1;
  if (v3 == v7 && v2 == v6)
  {
    sub_2480E4780(v18, v2, v8, 0);
    sub_2480E4780(v3, v2, v4, 0);
    sub_2480E47A0(v3, v2, v4, 0);
    sub_2480E47A0(v3, v2, v8, 0);
  }
  else
  {
    char v20 = sub_248175CE0();
    sub_2480E4780(v7, v6, v8, 0);
    sub_2480E4780(v3, v2, v4, 0);
    sub_2480E47A0(v3, v2, v4, 0);
    sub_2480E47A0(v7, v6, v8, 0);
    char v17 = 0;
    if ((v20 & 1) == 0) {
      return v17 & 1;
    }
  }
  char v17 = v4 == v8;
  return v17 & 1;
}

uint64_t V1Command.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x270FA5388](v3 - 8);
  int v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for V1Command(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2480E44A4(v1, (uint64_t)v11, type metadata accessor for V1Command);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2480E336C((uint64_t)v11, (uint64_t)v5, type metadata accessor for V1Command.Response);
      sub_248175E70();
      V1Command.Response.hash(into:)(a1);
      return sub_2480E33D4((uint64_t)v5, type metadata accessor for V1Command.Response);
    }
    else
    {
      uint64_t v14 = *(void *)v11;
      uint64_t v15 = *((void *)v11 + 1);
      uint64_t v16 = *((void *)v11 + 2);
      char v17 = v11[24];
      sub_248175E70();
      v18[0] = v14;
      v18[1] = v15;
      v18[2] = v16;
      char v19 = v17;
      V1CommandError.hash(into:)(a1);
      return sub_2480E47A0(v14, v15, v16, v17);
    }
  }
  else
  {
    sub_2480E336C((uint64_t)v11, (uint64_t)v8, type metadata accessor for V1Command.Request);
    sub_248175E70();
    V1Command.Request.hash(into:)(a1);
    return sub_2480E33D4((uint64_t)v8, type metadata accessor for V1Command.Request);
  }
}

uint64_t sub_2480DC2E0()
{
  uint64_t v1 = 0x65736E6F70736572;
  if (*v0 != 1) {
    uint64_t v1 = 0x6572756C696166;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74736575716572;
  }
}

uint64_t sub_2480DC33C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480EF5A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480DC364(uint64_t a1)
{
  unint64_t v2 = sub_2480E47E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DC3A0(uint64_t a1)
{
  unint64_t v2 = sub_2480E47E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DC3DC(uint64_t a1)
{
  unint64_t v2 = sub_2480E4834();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DC418(uint64_t a1)
{
  unint64_t v2 = sub_2480E4834();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DC454(uint64_t a1)
{
  unint64_t v2 = sub_2480E4930();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DC490(uint64_t a1)
{
  unint64_t v2 = sub_2480E4930();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DC4CC(uint64_t a1)
{
  unint64_t v2 = sub_2480E48DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DC508(uint64_t a1)
{
  unint64_t v2 = sub_2480E48DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t V1Command.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6E0);
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v40 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6E8);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  char v38 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6F0);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for V1Command(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA6F8);
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  MEMORY[0x270FA5388](v15);
  char v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E47E0();
  sub_248175F60();
  sub_2480E44A4(v44, (uint64_t)v14, type metadata accessor for V1Command);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v19 = v37;
      sub_2480E336C((uint64_t)v14, v37, type metadata accessor for V1Command.Response);
      LOBYTE(v47) = 1;
      sub_2480E48DC();
      char v20 = v38;
      uint64_t v21 = v46;
      sub_248175B50();
      sub_2480E3530(&qword_2692DA720, (void (*)(uint64_t))type metadata accessor for V1Command.Response);
      uint64_t v22 = v41;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v22);
      sub_2480E33D4(v19, type metadata accessor for V1Command.Response);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v21);
    }
    else
    {
      uint64_t v26 = *(void *)v14;
      uint64_t v27 = *((void *)v14 + 1);
      uint64_t v28 = *((void *)v14 + 2);
      char v29 = v14[24];
      LOBYTE(v47) = 2;
      sub_2480E4834();
      uint64_t v30 = v40;
      uint64_t v31 = v46;
      sub_248175B50();
      uint64_t v47 = v26;
      uint64_t v48 = v27;
      uint64_t v49 = v28;
      char v50 = v29;
      sub_2480E4888();
      uint64_t v32 = v43;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v32);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v31);
      return sub_2480E47A0(v26, v27, v28, v29);
    }
  }
  else
  {
    sub_2480E336C((uint64_t)v14, (uint64_t)v11, type metadata accessor for V1Command.Request);
    LOBYTE(v47) = 0;
    sub_2480E4930();
    uint64_t v24 = v46;
    sub_248175B50();
    sub_2480E3530(&qword_2692DA730, (void (*)(uint64_t))type metadata accessor for V1Command.Request);
    uint64_t v25 = v35;
    sub_248175BE0();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v25);
    sub_2480E33D4((uint64_t)v11, type metadata accessor for V1Command.Request);
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v24);
  }
}

uint64_t V1Command.hashValue.getter()
{
  return sub_2480DCBC8((void (*)(unsigned char *))V1Command.hash(into:));
}

uint64_t sub_2480DCBC8(void (*a1)(unsigned char *))
{
  sub_248175E50();
  a1(v3);
  return sub_248175EC0();
}

uint64_t V1Command.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA738);
  uint64_t v59 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v65 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA740);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  uint64_t v58 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v64 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA748);
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  MEMORY[0x270FA5388](v7);
  long long v62 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA750);
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for V1Command(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  char v17 = (char *)&v49 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  char v20 = (char *)&v49 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v49 - v21;
  uint64_t v23 = a1[3];
  uint64_t v66 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v23);
  sub_2480E47E0();
  uint64_t v24 = v70;
  sub_248175F20();
  if (v24) {
    goto LABEL_9;
  }
  char v51 = v20;
  char v50 = v14;
  uint64_t v52 = v17;
  uint64_t v53 = v22;
  uint64_t v26 = v62;
  uint64_t v25 = v63;
  uint64_t v28 = v64;
  uint64_t v27 = v65;
  uint64_t v70 = v11;
  uint64_t v29 = sub_248175B30();
  if (*(void *)(v29 + 16) != 1)
  {
    uint64_t v30 = v10;
    uint64_t v31 = sub_2481758A0();
    swift_allocError();
    uint64_t v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v33 = v70;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v30, v25);
LABEL_9:
    uint64_t v39 = (uint64_t)v66;
    return __swift_destroy_boxed_opaque_existential_1(v39);
  }
  if (*(unsigned char *)(v29 + 32))
  {
    if (*(unsigned char *)(v29 + 32) == 1)
    {
      LOBYTE(v67) = 1;
      sub_2480E48DC();
      sub_248175A50();
      type metadata accessor for V1Command.Response(0);
      sub_2480E3530(&qword_2692DA760, (void (*)(uint64_t))type metadata accessor for V1Command.Response);
      uint64_t v37 = (uint64_t)v52;
      uint64_t v38 = v57;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v28, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v25);
      uint64_t v39 = (uint64_t)v66;
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = v37;
    }
    else
    {
      uint64_t v64 = (char *)v29;
      LOBYTE(v67) = 2;
      sub_2480E4834();
      sub_248175A50();
      long long v62 = v10;
      sub_2480E4984();
      uint64_t v43 = v54;
      sub_248175AF0();
      uint64_t v39 = (uint64_t)v66;
      uint64_t v44 = v61;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v62, v25);
      uint64_t v45 = v68;
      char v46 = v69;
      uint64_t v47 = v50;
      *char v50 = v67;
      *((void *)v47 + 2) = v45;
      *((unsigned char *)v47 + 24) = v46;
      swift_storeEnumTagMultiPayload();
      uint64_t v40 = (uint64_t)v47;
    }
  }
  else
  {
    LOBYTE(v67) = 0;
    sub_2480E4930();
    uint64_t v34 = v25;
    uint64_t v35 = v26;
    sub_248175A50();
    type metadata accessor for V1Command.Request(0);
    sub_2480E3530(&qword_2692DA768, (void (*)(uint64_t))type metadata accessor for V1Command.Request);
    uint64_t v41 = (uint64_t)v51;
    uint64_t v42 = v56;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v42);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v34);
    uint64_t v39 = (uint64_t)v66;
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = v41;
  }
  uint64_t v48 = (uint64_t)v53;
  sub_2480E336C(v40, (uint64_t)v53, type metadata accessor for V1Command);
  sub_2480E336C(v48, v60, type metadata accessor for V1Command);
  return __swift_destroy_boxed_opaque_existential_1(v39);
}

uint64_t sub_2480DD480@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return V1Command.init(from:)(a1, a2);
}

uint64_t sub_2480DD498(void *a1)
{
  return V1Command.encode(to:)(a1);
}

uint64_t sub_2480DD4B4(uint64_t a1, uint64_t a2)
{
  return sub_2480DD4CC(a1, a2, (void (*)(unsigned char *))V1Command.hash(into:));
}

uint64_t sub_2480DD4CC(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_248175E50();
  a3(v5);
  return sub_248175EC0();
}

uint64_t sub_2480DD518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2480DD530(a1, a2, a3, (void (*)(unsigned char *))V1Command.hash(into:));
}

uint64_t sub_2480DD530(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_248175E50();
  a4(v6);
  return sub_248175EC0();
}

uint64_t V1CommandError.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*((unsigned char *)v1 + 24))
  {
    sub_248175E70();
    sub_2481751A0();
    return sub_248175E70();
  }
  if (*((unsigned char *)v1 + 24) != 1) {
    return sub_248175E70();
  }
  uint64_t v4 = *(void *)(v3 + 16);
  uint64_t v5 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 48);
  uint64_t v8 = *(void *)(v3 + 56);
  uint64_t v9 = *(void *)(v3 + 64);
  char v10 = *(unsigned char *)(v3 + 40);
  char v11 = *(unsigned char *)(v3 + 72);
  sub_248175E70();
  sub_2480E4780(v4, v5, v6, v10);
  sub_2480E4780(v7, v8, v9, v11);
  V1CommandError.hash(into:)(a1);
  V1CommandError.hash(into:)(a1);
  sub_2480E47A0(v4, v5, v6, v10);
  return sub_2480E47A0(v7, v8, v9, v11);
}

unint64_t sub_2480DD724(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x636972656E6567;
      break;
    case 2:
      unint64_t result = 0x64657473656ELL;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x636E614372657375;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2480DD810()
{
  return sub_2480DD724(*v0);
}

uint64_t sub_2480DD818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480EF700(a1, a2);
  *a3 = result;
  return result;
}

void sub_2480DD840(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2480DD84C(uint64_t a1)
{
  unint64_t v2 = sub_2480E49D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DD888(uint64_t a1)
{
  unint64_t v2 = sub_2480E49D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DD8C4()
{
  if (*v0) {
    return 1701080931;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_2480DD8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480EF9E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480DD91C(uint64_t a1)
{
  unint64_t v2 = sub_2480E4BD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DD958(uint64_t a1)
{
  unint64_t v2 = sub_2480E4BD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DD994(uint64_t a1)
{
  unint64_t v2 = sub_2480E4B7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DD9D0(uint64_t a1)
{
  unint64_t v2 = sub_2480E4B7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DDA0C(uint64_t a1)
{
  unint64_t v2 = sub_2480E4A80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DDA48(uint64_t a1)
{
  unint64_t v2 = sub_2480E4A80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DDA84(uint64_t a1)
{
  unint64_t v2 = sub_2480E4B28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DDAC0(uint64_t a1)
{
  unint64_t v2 = sub_2480E4B28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DDAFC(uint64_t a1)
{
  unint64_t v2 = sub_2480E4AD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DDB38(uint64_t a1)
{
  unint64_t v2 = sub_2480E4AD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DDB74(uint64_t a1)
{
  unint64_t v2 = sub_2480E4C24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DDBB0(uint64_t a1)
{
  unint64_t v2 = sub_2480E4C24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480DDBEC(uint64_t a1)
{
  unint64_t v2 = sub_2480E4A2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DDC28(uint64_t a1)
{
  unint64_t v2 = sub_2480E4A2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t V1CommandError.encode(to:)(void *a1)
{
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA770);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v58 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA778);
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v55 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA780);
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA788);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA790);
  uint64_t v73 = *(void *)(v9 - 8);
  uint64_t v74 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v72 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA798);
  uint64_t v70 = *(void *)(v11 - 8);
  uint64_t v71 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA7A0);
  uint64_t v68 = *(void *)(v14 - 8);
  uint64_t v69 = v14;
  MEMORY[0x270FA5388](v14);
  long long v67 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA7A8);
  uint64_t v76 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = *v1;
  uint64_t v18 = v1[1];
  uint64_t v75 = v1[2];
  int v20 = *((unsigned __int8 *)v1 + 24);
  uint64_t v21 = a1[3];
  uint64_t v22 = a1;
  uint64_t v23 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v22, v21);
  sub_2480E49D8();
  sub_248175F60();
  if (v20)
  {
    uint64_t v71 = v16;
    if (v20 == 1)
    {
      uint64_t v24 = *(void *)(v19 + 16);
      uint64_t v25 = *(void *)(v19 + 24);
      uint64_t v26 = *(void *)(v19 + 32);
      uint64_t v27 = v23;
      char v28 = *(unsigned char *)(v19 + 40);
      uint64_t v29 = *(void *)(v19 + 48);
      uint64_t v30 = *(void *)(v19 + 56);
      uint64_t v31 = *(void *)(v19 + 64);
      int v32 = *(unsigned __int8 *)(v19 + 72);
      LOBYTE(v78) = 2;
      sub_2480E4780(v24, v25, v26, v28);
      uint64_t v75 = v29;
      uint64_t v69 = v31;
      uint64_t v70 = v30;
      LODWORD(v68) = v32;
      sub_2480E4780(v29, v30, v31, v32);
      sub_2480E4B7C();
      uint64_t v33 = v71;
      uint64_t v34 = v72;
      long long v67 = v27;
      sub_248175B50();
      uint64_t v78 = v24;
      uint64_t v79 = v25;
      uint64_t v80 = v26;
      char v81 = v28;
      char v82 = 0;
      sub_2480E4888();
      uint64_t v35 = v74;
      uint64_t v36 = v77;
      sub_248175BE0();
      if (v36)
      {
        sub_2480E47A0(v75, v70, v69, v68);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v34, v35);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v67, v33);
        uint64_t v37 = v24;
        uint64_t v38 = v25;
        uint64_t v39 = v26;
        char v40 = v28;
      }
      else
      {
        uint64_t v78 = v75;
        uint64_t v79 = v70;
        uint64_t v80 = v69;
        char v81 = v68;
        char v82 = 1;
        sub_248175BE0();
        sub_2480E47A0(v24, v25, v26, v28);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v34, v35);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v67, v33);
        uint64_t v37 = v75;
        uint64_t v39 = v69;
        uint64_t v38 = v70;
        char v40 = v68;
      }
      return sub_2480E47A0(v37, v38, v39, v40);
    }
    uint64_t v45 = v75 | v18;
    if (v75 | v18 | v19)
    {
      if (v19 != 1 || v45)
      {
        if (v19 != 2 || v45)
        {
          uint64_t v47 = v71;
          if (v19 != 3 || v45)
          {
            LOBYTE(v78) = 6;
            sub_2480E4A2C();
            uint64_t v54 = v58;
            sub_248175B50();
            char v50 = *(void (**)(char *, uint64_t))(v59 + 8);
            char v51 = v54;
            uint64_t v53 = &v84;
          }
          else
          {
            LOBYTE(v78) = 5;
            sub_2480E4A80();
            uint64_t v52 = v55;
            sub_248175B50();
            char v50 = *(void (**)(char *, uint64_t))(v56 + 8);
            char v51 = v52;
            uint64_t v53 = &v83;
          }
          uint64_t v48 = *(v53 - 32);
          goto LABEL_19;
        }
        LOBYTE(v78) = 4;
        sub_2480E4AD4();
        char v46 = v61;
        uint64_t v47 = v71;
        sub_248175B50();
        uint64_t v49 = v62;
        uint64_t v48 = v63;
      }
      else
      {
        LOBYTE(v78) = 3;
        sub_2480E4B28();
        char v46 = v64;
        uint64_t v47 = v71;
        sub_248175B50();
        uint64_t v49 = v65;
        uint64_t v48 = v66;
      }
    }
    else
    {
      LOBYTE(v78) = 0;
      sub_2480E4C24();
      char v46 = v67;
      uint64_t v47 = v71;
      sub_248175B50();
      uint64_t v49 = v68;
      uint64_t v48 = v69;
    }
    char v50 = *(void (**)(char *, uint64_t))(v49 + 8);
    char v51 = v46;
LABEL_19:
    v50(v51, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v23, v47);
  }
  uint64_t v41 = v70;
  LOBYTE(v78) = 1;
  sub_2480E4BD0();
  sub_248175B50();
  LOBYTE(v78) = 0;
  uint64_t v42 = v71;
  uint64_t v43 = v77;
  sub_248175BB0();
  if (!v43)
  {
    LOBYTE(v78) = 1;
    sub_248175BD0();
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v23, v16);
}

uint64_t V1CommandError.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_248175E50();
  V1CommandError.hash(into:)((uint64_t)v4);
  return sub_248175EC0();
}

uint64_t V1CommandError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA7F0);
  uint64_t v56 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v72 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA7F8);
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v71 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA800);
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v70 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA808);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v68 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA810);
  uint64_t v67 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v69 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA818);
  uint64_t v66 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA820);
  uint64_t v55 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA828);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_2480E49D8();
  uint64_t v21 = v75;
  sub_248175F20();
  if (v21)
  {
LABEL_23:
    uint64_t v47 = (uint64_t)v74;
    return __swift_destroy_boxed_opaque_existential_1(v47);
  }
  uint64_t v53 = v15;
  uint64_t v52 = v13;
  uint64_t v22 = v70;
  uint64_t v54 = 0;
  uint64_t v24 = v71;
  uint64_t v23 = v72;
  uint64_t v25 = v69;
  uint64_t v75 = v17;
  uint64_t v26 = v73;
  uint64_t v27 = sub_248175B30();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v33 = sub_2481758A0();
    swift_allocError();
    uint64_t v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v35 = &type metadata for V1CommandError;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v33);
    swift_willThrow();
LABEL_22:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v19, v16);
    goto LABEL_23;
  }
  switch(*(unsigned char *)(v27 + 32))
  {
    case 1:
      uint64_t v72 = (char *)v27;
      char v79 = 1;
      sub_2480E4BD0();
      uint64_t v36 = v54;
      sub_248175A50();
      if (v36) {
        goto LABEL_22;
      }
      char v78 = 0;
      uint64_t v45 = v59;
      uint64_t v30 = sub_248175AC0();
      uint64_t v31 = v46;
      char v77 = 1;
      uint64_t v32 = sub_248175AE0();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v12, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v19, v16);
      char v51 = 0;
      break;
    case 2:
      uint64_t v72 = (char *)v27;
      char v82 = 2;
      sub_2480E4B7C();
      uint64_t v37 = v25;
      uint64_t v38 = v54;
      sub_248175A50();
      if (v38) {
        goto LABEL_22;
      }
      uint64_t v30 = swift_allocObject();
      char v81 = 0;
      sub_2480E4984();
      uint64_t v39 = v65;
      sub_248175AF0();
      char v80 = 1;
      sub_248175AF0();
      uint64_t v49 = v39;
      uint64_t v50 = v75;
      (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v19, v16);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      char v51 = 1;
      break;
    case 3:
      char v83 = 3;
      sub_2480E4B28();
      char v40 = v68;
      uint64_t v41 = v54;
      sub_248175A50();
      if (v41) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v57 + 8))(v40, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v19, v16);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      char v51 = 2;
      uint64_t v30 = 1;
      break;
    case 4:
      char v84 = 4;
      sub_2480E4AD4();
      uint64_t v42 = v54;
      sub_248175A50();
      if (v42) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v60 + 8))(v22, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v19, v16);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v30 = 2;
      goto LABEL_16;
    case 5:
      char v85 = 5;
      sub_2480E4A80();
      uint64_t v43 = v54;
      sub_248175A50();
      if (v43) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v62 + 8))(v24, v63);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v19, v16);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      char v51 = 2;
      uint64_t v30 = 3;
      break;
    case 6:
      char v86 = 6;
      sub_2480E4A2C();
      uint64_t v44 = v54;
      sub_248175A50();
      if (v44) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v19, v16);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      char v51 = 2;
      uint64_t v30 = 4;
      break;
    default:
      char v76 = 0;
      sub_2480E4C24();
      char v28 = v53;
      uint64_t v29 = v54;
      sub_248175A50();
      if (v29) {
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v19, v16);
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
LABEL_16:
      char v51 = 2;
      break;
  }
  uint64_t v47 = (uint64_t)v74;
  *(void *)uint64_t v26 = v30;
  *(void *)(v26 + 8) = v31;
  *(void *)(v26 + 16) = v32;
  *(unsigned char *)(v26 + 24) = v51;
  return __swift_destroy_boxed_opaque_existential_1(v47);
}

uint64_t sub_2480DF1BC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return V1CommandError.init(from:)(a1, a2);
}

uint64_t sub_2480DF1D4(void *a1)
{
  return V1CommandError.encode(to:)(a1);
}

uint64_t sub_2480DF1F0()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_248175E50();
  V1CommandError.hash(into:)((uint64_t)v4);
  return sub_248175EC0();
}

uint64_t sub_2480DF250()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  long long v5 = *v0;
  uint64_t v6 = v1;
  char v7 = v2;
  sub_248175E50();
  V1CommandError.hash(into:)((uint64_t)v4);
  return sub_248175EC0();
}

void Error.into()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_248175CB0();
  if (v6)
  {
    char v7 = (void *)v6;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v3, a1);
  }
  else
  {
    char v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 32))(v8, v3, a1);
  }
  uint64_t v9 = (void *)sub_248174720();

  id v10 = objc_msgSend(v9, sel_domain);
  uint64_t v11 = sub_248175160();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(v9, sel_code);
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 24) = 0;
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  long long v16;
  char v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  void v27[5];
  long long v28;
  char v29;

  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 - 8);
  char v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v10((char *)v27 - v11, v3, a1);
  if (swift_dynamicCast())
  {
    uint64_t v12 = v27[1];
    uint64_t v13 = v27[2];
    id v14 = (id)v27[3];
    uint64_t v15 = v27[4];
    uint64_t v16 = v28;
    uint64_t v17 = v29;
  }
  else
  {
    v10(v9, v3, a1);
    uint64_t v18 = sub_248175CB0();
    if (v18)
    {
      uint64_t v19 = (void *)v18;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
    }
    else
    {
      uint64_t v19 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v20, v9, a1);
    }
    uint64_t v21 = (void *)sub_248174720();

    uint64_t v22 = objc_msgSend(v21, sel_domain);
    uint64_t v12 = sub_248175160();
    uint64_t v13 = v23;

    id v14 = objc_msgSend(v21, sel_code);
    uint64_t v24 = objc_msgSend(v21, sel_localizedDescription);
    uint64_t v15 = sub_248175160();
    uint64_t v26 = v25;

    uint64_t v17 = 0;
    uint64_t v16 = v26;
  }
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v13;
  *(void *)(a2 + 16) = v14;
  *(void *)(a2 + 24) = v15;
  *(_OWORD *)(a2 + 32) = v16;
  *(unsigned char *)(a2 + 48) = v17;
}

uint64_t V1InfoHeader.deviceIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.deviceMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(void *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 V1InfoHeader.deviceMetadata.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v5;
  *(_OWORD *)uint64_t v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  return result;
}

uint64_t (*V1InfoHeader.deviceMetadata.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.osMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  uint64_t v7 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(v1 + 96);
  return sub_2480E4CC8(v2, v3);
}

__n128 V1InfoHeader.osMetadata.setter(__n128 *a1)
{
  __n128 v6 = a1[1];
  __n128 v7 = *a1;
  unint64_t v2 = a1[2].n128_u64[0];
  unint64_t v3 = a1[2].n128_u64[1];
  unsigned __int8 v4 = a1[3].n128_u8[0];
  sub_2480E4D18(v1[3].n128_i64[0], v1[3].n128_i64[1]);
  __n128 result = v6;
  v1[3] = v7;
  v1[4] = v6;
  v1[5].n128_u64[0] = v2;
  v1[5].n128_u64[1] = v3;
  v1[6].n128_u8[0] = v4;
  return result;
}

uint64_t (*V1InfoHeader.osMetadata.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.frameworkMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[13];
  uint64_t v3 = v1[14];
  uint64_t v4 = v1[15];
  uint64_t v5 = v1[16];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_2480E4D68(v2, v3);
}

__n128 V1InfoHeader.frameworkMetadata.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  sub_2480E4DAC(v1[13], v1[14]);
  __n128 result = v5;
  *(__n128 *)(v1 + 13) = v5;
  v1[15] = v2;
  v1[16] = v3;
  return result;
}

uint64_t (*V1InfoHeader.frameworkMetadata.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.clientMetadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[17];
  uint64_t v3 = v1[18];
  uint64_t v4 = v1[19];
  uint64_t v5 = v1[20];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_2480E4D68(v2, v3);
}

__n128 V1InfoHeader.clientMetadata.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  sub_2480E4DAC(v1[17], v1[18]);
  __n128 result = v5;
  *(__n128 *)(v1 + 17) = v5;
  v1[19] = v2;
  v1[20] = v3;
  return result;
}

uint64_t (*V1InfoHeader.clientMetadata.modify())()
{
  return nullsub_1;
}

uint64_t sub_2480DF6BC()
{
  if (qword_2692D4DD0 != -1) {
    swift_once();
  }
  *(void *)&xmmword_2692DA4C8 = qword_2692DA570;
  *(long long *)((char *)&xmmword_2692DA4C8 + 8) = *(_OWORD *)algn_2692DA578;
  unk_2692DA4E0 = *(_OWORD *)&qword_2692DA588;
  qword_2692DA4F0 = qword_2692DA598;
  xmmword_2692DA4F8 = 0u;
  xmmword_2692DA508 = 0u;
  xmmword_2692DA518 = 0u;
  LOBYTE(xmmword_2692DA528) = 0;
  *(long long *)((char *)&xmmword_2692DA528 + 8) = 0u;
  *(long long *)((char *)&xmmword_2692DA538 + 8) = 0u;
  *(long long *)((char *)&xmmword_2692DA548 + 8) = 0u;
  *(long long *)((char *)&xmmword_2692DA558 + 8) = 0u;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void __swiftcall V1InfoHeader.init(deviceMetadata:osMetadata:frameworkMetadata:clientMetadata:)(AppleIDSetup::V1InfoHeader *__return_ptr retstr, AppleIDSetup::V1InfoHeader::DeviceMetadata *deviceMetadata, AppleIDSetup::V1InfoHeader::OSMetadata_optional *osMetadata, AppleIDSetup::V1InfoHeader::BundleMetadata_optional frameworkMetadata, AppleIDSetup::V1InfoHeader::BundleMetadata_optional clientMetadata)
{
  Swift::String_optional model = deviceMetadata->model;
  retstr->deviceMetadata.identifier = deviceMetadata->identifier;
  retstr->deviceMetadata.Swift::String_optional model = model;
  Swift::String type = osMetadata->value.type;
  Swift::String build = osMetadata->value.build;
  retstr->deviceMetadata.Swift::String type = deviceMetadata->type;
  retstr->osMetadata.value.Swift::String type = type;
  Swift::String version = osMetadata->value.version;
  retstr->osMetadata.value.Swift::String build = build;
  retstr->osMetadata.value.Swift::String version = version;
  Swift::String v9 = *(Swift::String *)(frameworkMetadata.value.bundleIdentifier._countAndFlagsBits + 16);
  retstr->frameworkMetadata.value.bundleIdentifier = *(Swift::String *)frameworkMetadata.value.bundleIdentifier._countAndFlagsBits;
  retstr->frameworkMetadata.value.Swift::String version = v9;
  Swift::String v10 = (Swift::String)*((_OWORD *)frameworkMetadata.value.bundleIdentifier._object + 1);
  retstr->clientMetadata.value.bundleIdentifier = *(Swift::String *)frameworkMetadata.value.bundleIdentifier._object;
  retstr->osMetadata.value.isInternal = osMetadata->value.isInternal;
  retstr->clientMetadata.value.Swift::String version = v10;
}

void *static V1InfoHeader.current.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692D4DC8 != -1) {
    swift_once();
  }
  long long v2 = xmmword_2692DA538;
  v12[8] = xmmword_2692DA548;
  v12[9] = xmmword_2692DA558;
  long long v3 = xmmword_2692DA4F8;
  long long v4 = xmmword_2692DA508;
  v12[4] = xmmword_2692DA508;
  v12[5] = xmmword_2692DA518;
  long long v5 = xmmword_2692DA518;
  long long v6 = xmmword_2692DA528;
  v12[6] = xmmword_2692DA528;
  v12[7] = xmmword_2692DA538;
  v12[0] = xmmword_2692DA4C8;
  v12[1] = unk_2692DA4D8;
  long long v8 = xmmword_2692DA4C8;
  long long v7 = unk_2692DA4D8;
  long long v9 = unk_2692DA4E8;
  v12[2] = unk_2692DA4E8;
  void v12[3] = xmmword_2692DA4F8;
  long long v10 = xmmword_2692DA558;
  *(_OWORD *)(a1 + 128) = xmmword_2692DA548;
  *(_OWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v8;
  *(_OWORD *)(a1 + 16) = v7;
  uint64_t v13 = qword_2692DA568;
  *(void *)(a1 + 160) = qword_2692DA568;
  *(_OWORD *)(a1 + 32) = v9;
  *(_OWORD *)(a1 + 48) = v3;
  return sub_2480E4DF0(v12);
}

uint64_t V1InfoHeader.hash(into:)()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[14];
  uint64_t v5 = v0[13];
  uint64_t v3 = v0[18];
  uint64_t v6 = v0[17];
  V1InfoHeader.DeviceMetadata.hash(into:)();
  if (v1)
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  sub_248175E80();
  if (!v2)
  {
    sub_248175E80();
    if (v3) {
      goto LABEL_5;
    }
    return sub_248175E80();
  }
  sub_248175E80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  sub_2481751A0();
  sub_2480E4DAC(v5, v2);
  if (!v3) {
    return sub_248175E80();
  }
LABEL_5:
  sub_248175E80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  sub_2481751A0();
  return sub_2480E4DAC(v6, v3);
}

unint64_t sub_2480DFAB4()
{
  unint64_t result = 0x654D656369766564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x61646174654D736FLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x654D746E65696C63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480DFB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480EFAC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480DFB7C(uint64_t a1)
{
  unint64_t v2 = sub_2480E4ED4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480DFBB8(uint64_t a1)
{
  unint64_t v2 = sub_2480E4ED4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t V1InfoHeader.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA830);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v32 = v1[1];
  long long v33 = v7;
  uint64_t v9 = *((void *)v1 + 4);
  uint64_t v8 = *((void *)v1 + 5);
  uint64_t v10 = *((void *)v1 + 6);
  uint64_t v30 = *((void *)v1 + 7);
  uint64_t v31 = v10;
  uint64_t v11 = *((void *)v1 + 8);
  uint64_t v28 = *((void *)v1 + 9);
  uint64_t v29 = v11;
  uint64_t v12 = *((void *)v1 + 10);
  uint64_t v26 = *((void *)v1 + 11);
  uint64_t v27 = v12;
  int v40 = *((unsigned __int8 *)v1 + 96);
  uint64_t v13 = *((void *)v1 + 13);
  uint64_t v24 = *((void *)v1 + 14);
  uint64_t v25 = v13;
  uint64_t v23 = *((void *)v1 + 15);
  uint64_t v22 = *((void *)v1 + 16);
  long long v20 = *(long long *)((char *)v1 + 136);
  long long v21 = *(long long *)((char *)v1 + 152);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E4ED4();
  sub_248175F60();
  long long v35 = v33;
  long long v36 = v32;
  uint64_t v37 = v9;
  uint64_t v38 = v8;
  char v41 = 0;
  sub_2480E4F28();
  uint64_t v14 = v34;
  sub_248175BE0();
  if (!v14)
  {
    uint64_t v15 = v22;
    uint64_t v16 = v23;
    uint64_t v18 = v24;
    uint64_t v17 = v25;
    *(void *)&long long v35 = v31;
    *((void *)&v35 + 1) = v30;
    *(void *)&long long v36 = v29;
    *((void *)&v36 + 1) = v28;
    uint64_t v37 = v27;
    uint64_t v38 = v26;
    char v39 = v40;
    char v41 = 1;
    sub_2480E4F7C();
    sub_248175B90();
    *(void *)&long long v35 = v17;
    *((void *)&v35 + 1) = v18;
    *(void *)&long long v36 = v16;
    *((void *)&v36 + 1) = v15;
    char v41 = 2;
    sub_2480E4FD0();
    sub_248175B90();
    long long v35 = v20;
    long long v36 = v21;
    char v41 = 3;
    sub_248175B90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t V1InfoHeader.hashValue.getter()
{
  return sub_248175EC0();
}

void *V1InfoHeader.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA858);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  char v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_2480E4ED4();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    sub_2480E4D18(0, 0);
    sub_2480E4DAC(0, 0);
    return (void *)sub_2480E4DAC(0, 0);
  }
  else
  {
    uint64_t v49 = a2;
    uint64_t v50 = v6;
    LOBYTE(v52) = 0;
    sub_2480E5024();
    sub_248175AF0();
    uint64_t v10 = v63;
    uint64_t v11 = *((void *)&v64 + 1);
    uint64_t v41 = v64;
    uint64_t v42 = v62;
    uint64_t v12 = v66;
    uint64_t v40 = v65;
    LOBYTE(v52) = 1;
    sub_2480E5078();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_248175AA0();
    uint64_t v37 = v12;
    uint64_t v38 = v11;
    uint64_t v39 = v10;
    uint64_t v13 = v62;
    uint64_t v15 = v65;
    uint64_t v14 = v66;
    LODWORD(v10) = v67;
    LOBYTE(v52) = 2;
    uint64_t v47 = v63;
    long long v48 = v64;
    sub_2480E4CC8(v62, v63);
    unint64_t v36 = sub_2480E50CC();
    sub_248175AA0();
    *(void *)&long long v46 = v15;
    *((void *)&v46 + 1) = v14;
    uint64_t v45 = v13;
    int v83 = v10;
    uint64_t v16 = v63;
    long long v17 = v64;
    char v84 = 3;
    uint64_t v18 = v62;
    sub_2480E4D68(v62, v63);
    sub_248175AA0();
    uint64_t v43 = v18;
    uint64_t v44 = v16;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v5);
    uint64_t v19 = v79;
    uint64_t v20 = v80;
    uint64_t v21 = v81;
    uint64_t v50 = v82;
    sub_2480E4D68(v79, v80);
    sub_2480E4DAC(0, 0);
    *(void *)&long long v52 = v42;
    *((void *)&v52 + 1) = v39;
    *(void *)&long long v53 = v41;
    *((void *)&v53 + 1) = v38;
    *(void *)&long long v54 = v40;
    *((void *)&v54 + 1) = v37;
    *(void *)&long long v55 = v45;
    *((void *)&v55 + 1) = v47;
    long long v56 = v48;
    long long v57 = v46;
    LOBYTE(v58) = v83;
    *((void *)&v58 + 1) = v18;
    *(void *)uint64_t v59 = v16;
    *(_OWORD *)&v59[8] = v17;
    uint64_t v35 = v20;
    unint64_t v36 = v19;
    *(void *)&v59[24] = v19;
    *(void *)&long long v60 = v20;
    uint64_t v34 = v21;
    *((void *)&v60 + 1) = v21;
    uint64_t v61 = v50;
    sub_2480E4DF0(&v52);
    sub_2480E4DAC(v19, v20);
    uint64_t v22 = v43;
    sub_2480E4DAC(v43, v16);
    sub_2480E4D18(v45, v47);
    uint64_t v23 = v37;
    swift_bridgeObjectRelease();
    uint64_t v24 = v38;
    swift_bridgeObjectRelease();
    uint64_t v25 = v39;
    swift_bridgeObjectRelease();
    long long v26 = v60;
    uint64_t v27 = v49;
    *(_OWORD *)(v49 + 128) = *(_OWORD *)&v59[16];
    *(_OWORD *)(v27 + 144) = v26;
    *(void *)(v27 + 160) = v61;
    long long v28 = v57;
    *(_OWORD *)(v27 + 64) = v56;
    *(_OWORD *)(v27 + 80) = v28;
    long long v29 = *(_OWORD *)v59;
    *(_OWORD *)(v27 + 96) = v58;
    *(_OWORD *)(v27 + 112) = v29;
    long long v30 = v53;
    *(_OWORD *)uint64_t v27 = v52;
    *(_OWORD *)(v27 + 16) = v30;
    long long v31 = v55;
    *(_OWORD *)(v27 + 32) = v54;
    *(_OWORD *)(v27 + 48) = v31;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    uint64_t v62 = v42;
    uint64_t v63 = v25;
    *(void *)&long long v64 = v41;
    *((void *)&v64 + 1) = v24;
    uint64_t v65 = v40;
    uint64_t v66 = v23;
    uint64_t v67 = v45;
    uint64_t v68 = v47;
    long long v69 = v48;
    long long v70 = v46;
    char v71 = v83;
    uint64_t v72 = v22;
    uint64_t v73 = v44;
    long long v74 = v17;
    unint64_t v75 = v36;
    uint64_t v76 = v35;
    uint64_t v77 = v34;
    uint64_t v78 = v50;
    return sub_2480E5120(&v62);
  }
}

void *sub_2480E05D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return V1InfoHeader.init(from:)(a1, a2);
}

uint64_t sub_2480E05E8(void *a1)
{
  return V1InfoHeader.encode(to:)(a1);
}

uint64_t sub_2480E0604()
{
  return sub_248175EC0();
}

uint64_t sub_2480E0648()
{
  return sub_248175EC0();
}

uint64_t V1InfoHeader.DeviceMetadata.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.DeviceMetadata.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*V1InfoHeader.DeviceMetadata.identifier.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.DeviceMetadata.model.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.DeviceMetadata.model.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*V1InfoHeader.DeviceMetadata.model.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.DeviceMetadata.type.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.DeviceMetadata.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*V1InfoHeader.DeviceMetadata.type.modify())()
{
  return nullsub_1;
}

void __swiftcall V1InfoHeader.DeviceMetadata.init(identifier:model:type:)(AppleIDSetup::V1InfoHeader::DeviceMetadata *__return_ptr retstr, Swift::String_optional identifier, Swift::String_optional model, Swift::String_optional type)
{
  retstr->identifier = identifier;
  retstr->Swift::String_optional model = model;
  retstr->Swift::String type = type;
}

void sub_2480E082C()
{
  id v0 = objc_msgSend(self, sel_currentDevice);
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = objc_msgSend(v0, sel_uniqueDeviceIdentifier);
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = sub_248175160();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    id v9 = objc_msgSend(v1, sel_modelNumber);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v7 = sub_248175160();
      uint64_t v8 = v11;
    }
    else
    {

      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  qword_2692DA570 = v4;
  *(void *)algn_2692DA578 = v6;
  qword_2692DA580 = v7;
  unk_2692DA588 = v8;
  qword_2692DA590 = 0;
  qword_2692DA598 = 0;
}

uint64_t static V1InfoHeader.DeviceMetadata.current.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692D4DD0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2692DA598;
  *(void *)a1 = qword_2692DA570;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)algn_2692DA578;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&qword_2692DA588;
  *(void *)(a1 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t V1InfoHeader.DeviceMetadata.hash(into:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[5];
  if (v0[1])
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
LABEL_8:
    sub_248175E80();
    if (v2) {
      goto LABEL_4;
    }
    return sub_248175E80();
  }
  sub_248175E80();
  if (!v1) {
    goto LABEL_8;
  }
LABEL_3:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (!v2) {
    return sub_248175E80();
  }
LABEL_4:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480E0AD8()
{
  uint64_t v1 = 0x6C65646F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 1701869940;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_2480E0B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480EFCC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480E0B54(uint64_t a1)
{
  unint64_t v2 = sub_2480E5204();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480E0B90(uint64_t a1)
{
  unint64_t v2 = sub_2480E5204();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t V1InfoHeader.DeviceMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA878);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E5204();
  sub_248175F60();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_248175B60();
  if (!v9)
  {
    char v13 = 1;
    sub_248175B60();
    char v12 = 2;
    sub_248175B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t V1InfoHeader.DeviceMetadata.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t V1InfoHeader.DeviceMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA888);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E5204();
  sub_248175F20();
  if (!v2)
  {
    char v26 = 0;
    uint64_t v9 = sub_248175A70();
    uint64_t v12 = v11;
    uint64_t v23 = v9;
    char v25 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_248175A70();
    uint64_t v15 = v14;
    uint64_t v22 = v13;
    char v24 = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_248175A70();
    uint64_t v18 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v21 = v16;
    v19(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *a2 = v23;
    a2[1] = v12;
    a2[2] = v22;
    a2[3] = v15;
    a2[4] = v21;
    a2[5] = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480E105C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return V1InfoHeader.DeviceMetadata.init(from:)(a1, a2);
}

uint64_t sub_2480E1074(void *a1)
{
  return V1InfoHeader.DeviceMetadata.encode(to:)(a1);
}

uint64_t sub_2480E1090()
{
  return sub_248175EC0();
}

uint64_t sub_2480E10E8()
{
  return sub_248175EC0();
}

uint64_t V1InfoHeader.OSMetadata.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.OSMetadata.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*V1InfoHeader.OSMetadata.type.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.OSMetadata.build.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.OSMetadata.build.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*V1InfoHeader.OSMetadata.build.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.OSMetadata.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.OSMetadata.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*V1InfoHeader.OSMetadata.version.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.OSMetadata.isInternal.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t V1InfoHeader.OSMetadata.isInternal.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*V1InfoHeader.OSMetadata.isInternal.modify())()
{
  return nullsub_1;
}

void __swiftcall V1InfoHeader.OSMetadata.init(type:build:version:isInternal:)(AppleIDSetup::V1InfoHeader::OSMetadata *__return_ptr retstr, Swift::String type, Swift::String build, Swift::String version, Swift::Bool isInternal)
{
  retstr->Swift::String type = type;
  retstr->Swift::String build = build;
  retstr->Swift::String version = version;
  retstr->isInternal = isInternal;
}

uint64_t V1InfoHeader.OSMetadata.hash(into:)()
{
  return sub_248175E80();
}

uint64_t sub_2480E13CC()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646C697562;
      break;
    case 2:
      uint64_t result = 0x6E6F6973726576;
      break;
    case 3:
      uint64_t result = 0x6E7265746E497369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480E1454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480EFE10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480E147C(uint64_t a1)
{
  unint64_t v2 = sub_2480E5258();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480E14B8(uint64_t a1)
{
  unint64_t v2 = sub_2480E5258();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t V1InfoHeader.OSMetadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA890);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  v15[2] = *(void *)(v1 + 24);
  v15[3] = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  v15[0] = *(void *)(v1 + 40);
  v15[1] = v9;
  int v16 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_2480E5258();
  sub_248175F60();
  char v20 = 0;
  sub_248175BB0();
  if (!v2)
  {
    char v19 = 1;
    sub_248175BB0();
    char v18 = 2;
    sub_248175BB0();
    char v17 = 3;
    sub_248175BC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t V1InfoHeader.OSMetadata.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t V1InfoHeader.OSMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA8A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E5258();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v29 = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v28 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_248175AC0();
  uint64_t v25 = v13;
  uint64_t v23 = v12;
  char v27 = 2;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_248175AC0();
  uint64_t v22 = v14;
  char v26 = 3;
  swift_bridgeObjectRetain();
  char v16 = sub_248175AD0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v17 = v16 & 1;
  uint64_t v18 = v25;
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v11;
  uint64_t v19 = v22;
  *(void *)(a2 + 16) = v23;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v19;
  *(unsigned char *)(a2 + 48) = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480E1AB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return V1InfoHeader.OSMetadata.init(from:)(a1, a2);
}

uint64_t sub_2480E1ACC(void *a1)
{
  return V1InfoHeader.OSMetadata.encode(to:)(a1);
}

uint64_t sub_2480E1AEC()
{
  return sub_248175E80();
}

uint64_t sub_2480E1BA0()
{
  return sub_248175EC0();
}

uint64_t V1InfoHeader.BundleMetadata.bundleIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.BundleMetadata.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*V1InfoHeader.BundleMetadata.bundleIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t V1InfoHeader.BundleMetadata.version.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t V1InfoHeader.BundleMetadata.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*V1InfoHeader.BundleMetadata.version.modify())()
{
  return nullsub_1;
}

AppleIDSetup::V1InfoHeader::BundleMetadata __swiftcall V1InfoHeader.BundleMetadata.init(bundleIdentifier:version:)(Swift::String bundleIdentifier, Swift::String version)
{
  *uint64_t v2 = bundleIdentifier;
  v2[1] = version;
  result.Swift::String version = version;
  result.bundleIdentifier = bundleIdentifier;
  return result;
}

void static V1InfoHeader.BundleMetadata.framework.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
}

uint64_t V1InfoHeader.BundleMetadata.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480E1E1C()
{
  if (*v0) {
    return 0x6E6F6973726576;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_2480E1E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480EFFC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480E1E84(uint64_t a1)
{
  unint64_t v2 = sub_2480E52AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480E1EC0(uint64_t a1)
{
  unint64_t v2 = sub_2480E52AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t V1InfoHeader.BundleMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA8A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E52AC();
  sub_248175F60();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_248175BB0();
  if (!v8)
  {
    char v11 = 1;
    sub_248175BB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t V1InfoHeader.BundleMetadata.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t V1InfoHeader.BundleMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA8B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480E52AC();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_248175AC0();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480E22E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return V1InfoHeader.BundleMetadata.init(from:)(a1, a2);
}

uint64_t sub_2480E22F8(void *a1)
{
  return V1InfoHeader.BundleMetadata.encode(to:)(a1);
}

uint64_t sub_2480E2314()
{
  return sub_248175EC0();
}

uint64_t sub_2480E237C()
{
  sub_2481751A0();
  return sub_2481751A0();
}

uint64_t sub_2480E23CC()
{
  return sub_248175EC0();
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV10OSMetadataV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_248175CE0(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (char v14 = sub_248175CE0(), result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v10) {
        return v6 ^ v11 ^ 1u;
      }
      char v15 = sub_248175CE0();
      uint64_t result = 0;
      if (v15) {
        return v6 ^ v11 ^ 1u;
      }
    }
  }
  return result;
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV14BundleMetadataV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_248175CE0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_248175CE0();
    }
  }
  return result;
}

uint64_t _s12AppleIDSetup12V1InfoHeaderV14DeviceMetadataV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v12 = a2[5];
  if (!v3)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v8) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v8 || (char v13 = sub_248175CE0(), result = 0, (v13 & 1) != 0))
  {
LABEL_8:
    if (v6)
    {
      if (!v11) {
        return 0;
      }
      if (v4 != v9 || v6 != v11)
      {
        char v15 = sub_248175CE0();
        uint64_t result = 0;
        if ((v15 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v11)
    {
      return 0;
    }
    if (v7)
    {
      if (v12 && (v5 == v10 && v7 == v12 || (sub_248175CE0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s12AppleIDSetup12V1InfoHeaderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v40 = *(void *)(a1 + 80);
  uint64_t v41 = *(void *)(a1 + 64);
  uint64_t v42 = *(void *)(a1 + 88);
  int v39 = *(unsigned __int8 *)(a1 + 96);
  uint64_t v38 = *(void *)(a1 + 112);
  uint64_t v35 = *(void *)(a1 + 104);
  uint64_t v36 = *(void *)(a1 + 128);
  uint64_t v25 = *(void *)(a1 + 152);
  uint64_t v27 = *(void *)(a1 + 136);
  uint64_t v28 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 88);
  char v11 = *(unsigned char *)(a2 + 96);
  uint64_t v33 = *(void *)(a1 + 120);
  uint64_t v34 = *(void *)(a2 + 104);
  uint64_t v37 = *(void *)(a2 + 112);
  uint64_t v32 = *(void *)(a2 + 120);
  uint64_t v30 = *(void *)(a1 + 144);
  uint64_t v31 = *(void *)(a2 + 128);
  uint64_t v26 = *(void *)(a2 + 136);
  uint64_t v29 = *(void *)(a2 + 144);
  long long v12 = *(_OWORD *)(a1 + 16);
  v44[0] = *(_OWORD *)a1;
  v44[1] = v12;
  v44[2] = *(_OWORD *)(a1 + 32);
  long long v13 = *(_OWORD *)(a2 + 16);
  v43[0] = *(_OWORD *)a2;
  v43[1] = v13;
  uint64_t v23 = *(void *)(a2 + 152);
  uint64_t v24 = *(void *)(a2 + 160);
  v43[2] = *(_OWORD *)(a2 + 32);
  if ((_s12AppleIDSetup12V1InfoHeaderV14DeviceMetadataV2eeoiySbAE_AEtFZ_0(v44, v43) & 1) == 0) {
    return 0;
  }
  if (!v2)
  {
    if (!v5) {
      goto LABEL_20;
    }
LABEL_17:
    sub_2480E4CC8(v6, v5);
    sub_2480E4D18(v3, v2);
    sub_2480E4D18(v6, v5);
    return 0;
  }
  if (!v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  if (v3 == v6 && v2 == v5 || (char v14 = sub_248175CE0(), result = 0, (v14 & 1) != 0))
  {
    if (v41 == v8 && v4 == v7 || (char v16 = sub_248175CE0(), result = 0, (v16 & 1) != 0))
    {
      if (v40 == v10 && v42 == v9)
      {
        if (((((v11 & 1) == 0) ^ v39) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        char v17 = sub_248175CE0();
        BOOL result = 0;
        if ((v17 & 1) == 0 || ((((v11 & 1) == 0) ^ v39) & 1) == 0) {
          return result;
        }
      }
LABEL_20:
      if (v38)
      {
        if (v37)
        {
          if (v35 != v34 || v38 != v37)
          {
            char v18 = sub_248175CE0();
            BOOL result = 0;
            if ((v18 & 1) == 0) {
              return result;
            }
          }
          if (v33 != v32 || v36 != v31)
          {
            char v19 = sub_248175CE0();
            BOOL result = 0;
            if ((v19 & 1) == 0) {
              return result;
            }
          }
          goto LABEL_30;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else if (!v37)
      {
LABEL_30:
        if (v30)
        {
          uint64_t v20 = v29;
          if (v29) {
            return (v27 == v26 && v30 == v29 || (sub_248175CE0() & 1) != 0)
          }
                && (v25 == v23 && v28 == v24 || (sub_248175CE0() & 1) != 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v20 = v29;
          if (!v29) {
            return 1;
          }
        }
        sub_2480E4D68(v26, v20);
        sub_2480E4DAC(v27, v30);
        uint64_t v21 = v26;
        uint64_t v22 = v20;
        goto LABEL_45;
      }
      sub_2480E4D68(v34, v37);
      sub_2480E4DAC(v35, v38);
      uint64_t v21 = v34;
      uint64_t v22 = v37;
LABEL_45:
      sub_2480E4DAC(v21, v22);
      return 0;
    }
  }
  return result;
}

uint64_t _s12AppleIDSetup9V1CommandO7RequestO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v96 = a1;
  *((void *)&v96 + 1) = a2;
  uint64_t v2 = type metadata accessor for AuthenticateCommand.Request(0);
  MEMORY[0x270FA5388](v2 - 8);
  *((void *)&v95 + 1) = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SignInCommand.Request(0);
  MEMORY[0x270FA5388](v4 - 8);
  *(void *)&long long v95 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for V1Command.Request(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  long long v12 = (uint64_t *)((char *)&v82 - v11);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  char v15 = (char *)&v82 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  char v18 = (uint64_t *)((char *)&v82 - v17);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v82 - v19;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAC00);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (uint64_t)&v24[*(int *)(v22 + 56)];
  sub_2480E44A4(v96, (uint64_t)v24, type metadata accessor for V1Command.Request);
  sub_2480E44A4(*((uint64_t *)&v96 + 1), v25, type metadata accessor for V1Command.Request);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2480E44A4((uint64_t)v24, (uint64_t)v18, type metadata accessor for V1Command.Request);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v31 = (void *)v95;
        sub_2480E336C(v25, v95, type metadata accessor for SignInCommand.Request);
        char v32 = _s12AppleIDSetup13SignInCommandV7RequestV2eeoiySbAE_AEtFZ_0(v18, v31);
        uint64_t v33 = type metadata accessor for SignInCommand.Request;
        sub_2480E33D4((uint64_t)v31, type metadata accessor for SignInCommand.Request);
        uint64_t v34 = (uint64_t)v18;
        goto LABEL_10;
      }
      sub_2480E33D4((uint64_t)v18, type metadata accessor for SignInCommand.Request);
      goto LABEL_18;
    case 2u:
      sub_2480E44A4((uint64_t)v24, (uint64_t)v15, type metadata accessor for V1Command.Request);
      uint64_t v35 = v24;
      uint64_t v37 = *(void *)v15;
      unint64_t v36 = *((void *)v15 + 1);
      uint64_t v39 = *((void *)v15 + 2);
      unint64_t v38 = *((void *)v15 + 3);
      char v40 = v15[32];
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v93 = v35;
        uint64_t v41 = *(void *)v25;
        unint64_t v42 = *(void *)(v25 + 8);
        uint64_t v43 = *(void *)(v25 + 16);
        *((void *)&v96 + 1) = *(void *)(v25 + 24);
        LODWORD(v96) = *(unsigned __int8 *)(v25 + 32);
        *(void *)&long long v112 = v37;
        *((void *)&v112 + 1) = v36;
        *(void *)&long long v113 = v39;
        *((void *)&v113 + 1) = v38;
        LOBYTE(v114) = v40;
        *(void *)&long long v101 = v41;
        *((void *)&v101 + 1) = v42;
        *(void *)&long long v102 = v43;
        *((void *)&v102 + 1) = *((void *)&v96 + 1);
        LOBYTE(v103) = v96;
        char v32 = _s12AppleIDSetup15AnisetteCommandV7RequestO2eeoiySbAE_AEtFZ_0((uint64_t)&v112, (uint64_t)&v101);
        sub_2480E32D8(v41, v42, v43, *((unint64_t *)&v96 + 1), v96);
        sub_2480E32D8(v37, v36, v39, v38, v40);
        goto LABEL_13;
      }
      sub_2480E32D8(v37, v36, v39, v38, v40);
      uint64_t v24 = v35;
      goto LABEL_18;
    case 3u:
      sub_2480E44A4((uint64_t)v24, (uint64_t)v12, type metadata accessor for V1Command.Request);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_2480E33D4((uint64_t)v12, type metadata accessor for AuthenticateCommand.Request);
        goto LABEL_18;
      }
      uint64_t v44 = (void *)*((void *)&v95 + 1);
      sub_2480E336C(v25, *((uint64_t *)&v95 + 1), type metadata accessor for AuthenticateCommand.Request);
      char v32 = _s12AppleIDSetup19AuthenticateCommandV7RequestV2eeoiySbAE_AEtFZ_0(v12, v44);
      uint64_t v33 = type metadata accessor for AuthenticateCommand.Request;
      sub_2480E33D4((uint64_t)v44, type metadata accessor for AuthenticateCommand.Request);
      uint64_t v34 = (uint64_t)v12;
LABEL_10:
      sub_2480E33D4(v34, v33);
      goto LABEL_20;
    case 4u:
      sub_2480E44A4((uint64_t)v24, (uint64_t)v9, type metadata accessor for V1Command.Request);
      uint64_t v45 = *((void *)v9 + 1);
      *(void *)&long long v94 = *(void *)v9;
      *((void *)&v94 + 1) = v45;
      uint64_t v46 = *((void *)v9 + 3);
      *(void *)&long long v95 = *((void *)v9 + 2);
      *((void *)&v95 + 1) = v46;
      uint64_t v47 = *((void *)v9 + 5);
      uint64_t v48 = *((void *)v9 + 6);
      *(void *)&long long v96 = *((void *)v9 + 4);
      *((void *)&v96 + 1) = v47;
      uint64_t v50 = *((void *)v9 + 7);
      uint64_t v49 = *((void *)v9 + 8);
      uint64_t v51 = *((void *)v9 + 9);
      unint64_t v52 = *((void *)v9 + 10);
      unsigned __int8 v53 = v9[88];
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        sub_247FF4AC0(v94, *((uint64_t *)&v94 + 1), v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), v48, v50, v49, v51, v52, v53);
        goto LABEL_18;
      }
      uint64_t v54 = *(void *)(v25 + 8);
      uint64_t v83 = *(void *)v25;
      uint64_t v84 = v54;
      uint64_t v55 = *(void *)(v25 + 24);
      uint64_t v85 = *(void *)(v25 + 16);
      uint64_t v86 = v55;
      uint64_t v56 = *(void *)(v25 + 40);
      uint64_t v87 = *(void *)(v25 + 32);
      uint64_t v88 = v56;
      uint64_t v57 = *(void *)(v25 + 48);
      uint64_t v89 = *(void *)(v25 + 56);
      uint64_t v90 = v57;
      uint64_t v58 = v50;
      uint64_t v91 = v48;
      uint64_t v92 = v50;
      uint64_t v59 = *(void *)(v25 + 64);
      uint64_t v60 = *(void *)(v25 + 72);
      uint64_t v61 = v48;
      unint64_t v62 = *(void *)(v25 + 80);
      long long v93 = v24;
      unsigned __int8 v63 = *(unsigned char *)(v25 + 88);
      long long v112 = v94;
      long long v113 = v95;
      long long v114 = v96;
      *(void *)&long long v115 = v61;
      *((void *)&v115 + 1) = v58;
      *(void *)&long long v116 = v49;
      *((void *)&v116 + 1) = v51;
      *(void *)&long long v117 = v52;
      BYTE8(v117) = v53;
      *(void *)&long long v101 = v83;
      *((void *)&v101 + 1) = v54;
      *(void *)&long long v102 = v85;
      *((void *)&v102 + 1) = v55;
      *(void *)&long long v103 = v87;
      *((void *)&v103 + 1) = v56;
      *(void *)&long long v104 = v57;
      *((void *)&v104 + 1) = v89;
      *(void *)&long long v105 = v59;
      *((void *)&v105 + 1) = v60;
      *(void *)&long long v106 = v62;
      BYTE8(v106) = v63;
      char v32 = _s12AppleIDSetup13RepairCommandV7RequestO2eeoiySbAE_AEtFZ_0((uint64_t)&v112, (uint64_t)&v101);
      sub_247FF4AC0(v83, v84, v85, v86, v87, v88, v90, v89, v59, v60, v62, v63);
      sub_247FF4AC0(v94, *((uint64_t *)&v94 + 1), v95, *((uint64_t *)&v95 + 1), v96, *((uint64_t *)&v96 + 1), v91, v92, v49, v51, v52, v53);
LABEL_13:
      uint64_t v64 = (uint64_t)v93;
      goto LABEL_21;
    default:
      sub_2480E44A4((uint64_t)v24, (uint64_t)v20, type metadata accessor for V1Command.Request);
      long long v26 = *((_OWORD *)v20 + 9);
      long long v120 = *((_OWORD *)v20 + 8);
      long long v121 = v26;
      uint64_t v122 = *((void *)v20 + 20);
      long long v27 = *((_OWORD *)v20 + 5);
      long long v116 = *((_OWORD *)v20 + 4);
      long long v117 = v27;
      long long v28 = *((_OWORD *)v20 + 7);
      long long v118 = *((_OWORD *)v20 + 6);
      long long v119 = v28;
      long long v29 = *((_OWORD *)v20 + 1);
      long long v112 = *(_OWORD *)v20;
      long long v113 = v29;
      long long v30 = *((_OWORD *)v20 + 3);
      long long v114 = *((_OWORD *)v20 + 2);
      long long v115 = v30;
      if (swift_getEnumCaseMultiPayload())
      {
        sub_2480C3CD8((uint64_t *)&v112);
LABEL_18:
        sub_247FB33D4((uint64_t)v24, &qword_2692DAC00);
        char v32 = 0;
      }
      else
      {
        long long v65 = *(_OWORD *)(v25 + 112);
        long long v66 = *(_OWORD *)(v25 + 144);
        long long v109 = *(_OWORD *)(v25 + 128);
        long long v110 = v66;
        long long v67 = *(_OWORD *)(v25 + 48);
        long long v68 = *(_OWORD *)(v25 + 80);
        long long v105 = *(_OWORD *)(v25 + 64);
        long long v106 = v68;
        long long v69 = *(_OWORD *)(v25 + 80);
        long long v70 = *(_OWORD *)(v25 + 112);
        long long v107 = *(_OWORD *)(v25 + 96);
        long long v108 = v70;
        long long v71 = *(_OWORD *)(v25 + 16);
        long long v101 = *(_OWORD *)v25;
        long long v102 = v71;
        long long v72 = *(_OWORD *)(v25 + 48);
        long long v74 = *(_OWORD *)v25;
        long long v73 = *(_OWORD *)(v25 + 16);
        long long v103 = *(_OWORD *)(v25 + 32);
        long long v104 = v72;
        long long v75 = *((_OWORD *)v20 + 9);
        v99[8] = *((_OWORD *)v20 + 8);
        v99[9] = v75;
        long long v76 = *((_OWORD *)v20 + 5);
        v99[4] = *((_OWORD *)v20 + 4);
        v99[5] = v76;
        long long v77 = *((_OWORD *)v20 + 7);
        v99[6] = *((_OWORD *)v20 + 6);
        v99[7] = v77;
        long long v78 = *((_OWORD *)v20 + 1);
        v99[0] = *(_OWORD *)v20;
        v99[1] = v78;
        long long v79 = *((_OWORD *)v20 + 3);
        v99[2] = *((_OWORD *)v20 + 2);
        v99[3] = v79;
        long long v80 = *(_OWORD *)(v25 + 144);
        v97[8] = v109;
        v97[9] = v80;
        v97[4] = v105;
        v97[5] = v69;
        v97[6] = v107;
        v97[7] = v65;
        v97[0] = v74;
        v97[1] = v73;
        uint64_t v111 = *(void *)(v25 + 160);
        uint64_t v100 = *((void *)v20 + 20);
        uint64_t v98 = *(void *)(v25 + 160);
        v97[2] = v103;
        v97[3] = v67;
        char v32 = _s12AppleIDSetup16HandshakeCommandO7RequestV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)v99, (unsigned __int8 *)v97);
        sub_2480C3CD8((uint64_t *)&v101);
        sub_2480C3CD8((uint64_t *)&v112);
LABEL_20:
        uint64_t v64 = (uint64_t)v24;
LABEL_21:
        sub_2480E33D4(v64, type metadata accessor for V1Command.Request);
      }
      return v32 & 1;
  }
}

uint64_t type metadata accessor for V1Command.Request(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_26B13BDE0);
}

uint64_t sub_2480E32D8(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  int v7 = (a4 >> 60) & 3 | v6;
  if (v7 == 3)
  {
    unint64_t v9 = a4 & 0xCFFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRelease();
    BOOL result = a3;
    a2 = v9;
    return sub_247FB6CCC(result, a2);
  }
  if (v7 != 2)
  {
    if (v7) {
      return result;
    }
    return sub_247FB6CCC(result, a2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480E336C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2480E33D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2480E3434()
{
  unint64_t result = qword_2692DA5D0;
  if (!qword_2692DA5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA5D0);
  }
  return result;
}

unint64_t sub_2480E3488()
{
  unint64_t result = qword_2692DA5D8;
  if (!qword_2692DA5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA5D8);
  }
  return result;
}

unint64_t sub_2480E34DC()
{
  unint64_t result = qword_2692DA5E0;
  if (!qword_2692DA5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA5E0);
  }
  return result;
}

uint64_t sub_2480E3530(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2480E3578()
{
  unint64_t result = qword_2692DA5E8;
  if (!qword_2692DA5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA5E8);
  }
  return result;
}

unint64_t sub_2480E35CC()
{
  unint64_t result = qword_2692DA5F0;
  if (!qword_2692DA5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA5F0);
  }
  return result;
}

unint64_t sub_2480E3620()
{
  unint64_t result = qword_2692DA5F8;
  if (!qword_2692DA5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA5F8);
  }
  return result;
}

unint64_t sub_2480E3674()
{
  unint64_t result = qword_2692DA600;
  if (!qword_2692DA600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA600);
  }
  return result;
}

unint64_t sub_2480E36C8()
{
  unint64_t result = qword_2692DA638;
  if (!qword_2692DA638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA638);
  }
  return result;
}

uint64_t _s12AppleIDSetup9V1CommandO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for V1Command.Response(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for V1Command.Request(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for V1Command(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  long long v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  char v15 = (char *)&v37 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DABF0);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_2480E44A4(a1, (uint64_t)v21, type metadata accessor for V1Command);
  sub_2480E44A4(a2, v22, type metadata accessor for V1Command);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_2480E44A4((uint64_t)v21, (uint64_t)v15, type metadata accessor for V1Command);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v24 = v38;
        sub_2480E336C(v22, v38, type metadata accessor for V1Command.Response);
        char v25 = _s12AppleIDSetup9V1CommandO8ResponseO2eeoiySbAE_AEtFZ_0((uint64_t)v15, v24);
        long long v26 = type metadata accessor for V1Command.Response;
        sub_2480E33D4(v24, type metadata accessor for V1Command.Response);
        uint64_t v27 = (uint64_t)v15;
LABEL_13:
        sub_2480E33D4(v27, v26);
        goto LABEL_14;
      }
      sub_2480E33D4((uint64_t)v15, type metadata accessor for V1Command.Response);
    }
    else
    {
      sub_2480E44A4((uint64_t)v21, (uint64_t)v12, type metadata accessor for V1Command);
      uint64_t v29 = *(void *)v12;
      uint64_t v28 = *((void *)v12 + 1);
      uint64_t v30 = *((void *)v12 + 2);
      char v31 = v12[24];
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v32 = *(void *)v22;
        uint64_t v33 = *(void *)(v22 + 8);
        uint64_t v34 = *(void *)(v22 + 16);
        char v35 = *(unsigned char *)(v22 + 24);
        v41[0] = v29;
        v41[1] = v28;
        v41[2] = v30;
        char v42 = v31;
        v39[0] = v32;
        v39[1] = v33;
        v39[2] = v34;
        char v40 = v35;
        char v25 = static V1CommandError.== infix(_:_:)((uint64_t)v41, (uint64_t)v39);
        sub_2480E47A0(v32, v33, v34, v35);
        sub_2480E47A0(v29, v28, v30, v31);
LABEL_14:
        sub_2480E33D4((uint64_t)v21, type metadata accessor for V1Command);
        return v25 & 1;
      }
      sub_2480E47A0(v29, v28, v30, v31);
    }
  }
  else
  {
    sub_2480E44A4((uint64_t)v21, (uint64_t)v17, type metadata accessor for V1Command);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_2480E336C(v22, (uint64_t)v8, type metadata accessor for V1Command.Request);
      char v25 = _s12AppleIDSetup9V1CommandO7RequestO2eeoiySbAE_AEtFZ_0((uint64_t)v17, (uint64_t)v8);
      long long v26 = type metadata accessor for V1Command.Request;
      sub_2480E33D4((uint64_t)v8, type metadata accessor for V1Command.Request);
      uint64_t v27 = (uint64_t)v17;
      goto LABEL_13;
    }
    sub_2480E33D4((uint64_t)v17, type metadata accessor for V1Command.Request);
  }
  sub_247FB33D4((uint64_t)v21, &qword_2692DABF0);
  char v25 = 0;
  return v25 & 1;
}

uint64_t _s12AppleIDSetup9V1CommandO8ResponseO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v82 = a2;
  uint64_t v81 = a1;
  uint64_t v2 = type metadata accessor for AuthenticateCommand.Response(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v80 = (uint64_t)v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AnisetteCommand.Response();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v79 = (uint64_t)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for SignInCommand.Response(0);
  MEMORY[0x270FA5388](v78);
  uint64_t v7 = (void *)((char *)v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for V1Command.Response(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (void *)((char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v71 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v71 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (void *)((char *)v71 - v19);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v71 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DABF8);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  long long v26 = (char *)v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (uint64_t)&v26[*(int *)(v24 + 56)];
  sub_2480E44A4(v81, (uint64_t)v26, type metadata accessor for V1Command.Response);
  sub_2480E44A4(v82, v27, type metadata accessor for V1Command.Response);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2480E44A4((uint64_t)v26, (uint64_t)v20, type metadata accessor for V1Command.Response);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v47 = type metadata accessor for SignInCommand.Response;
        uint64_t v48 = (uint64_t)v20;
        goto LABEL_19;
      }
      sub_2480E336C(v27, (uint64_t)v7, type metadata accessor for SignInCommand.Response);
      if ((_s12AppleIDSetup11IdMSAccountV2eeoiySbAC_ACtFZ_0(v20, v7) & 1) == 0
        || (sub_2480F4274(*(void *)((char *)v20 + *(int *)(v78 + 20)), *(void *)((char *)v7 + *(int *)(v78 + 20))) & 1) == 0)
      {
        sub_2480E33D4((uint64_t)v7, type metadata accessor for SignInCommand.Response);
        sub_2480E33D4((uint64_t)v20, type metadata accessor for SignInCommand.Response);
        sub_2480E33D4((uint64_t)v26, type metadata accessor for V1Command.Response);
        goto LABEL_21;
      }
      sub_2480E33D4((uint64_t)v7, type metadata accessor for SignInCommand.Response);
      sub_2480E33D4((uint64_t)v20, type metadata accessor for SignInCommand.Response);
      sub_2480E33D4((uint64_t)v26, type metadata accessor for V1Command.Response);
      char v35 = 1;
      return v35 & 1;
    case 2u:
      sub_2480E44A4((uint64_t)v26, (uint64_t)v17, type metadata accessor for V1Command.Response);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v34 = v79;
        sub_2480E336C(v27, v79, (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response);
        char v35 = _s12AppleIDSetup15AnisetteCommandV8ResponseO2eeoiySbAE_AEtFZ_0((uint64_t)v17, v34);
        unint64_t v36 = (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response;
        sub_2480E33D4(v34, (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response);
        uint64_t v37 = (uint64_t)v17;
        goto LABEL_8;
      }
      uint64_t v47 = (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response;
      uint64_t v48 = (uint64_t)v17;
      goto LABEL_19;
    case 3u:
      sub_2480E44A4((uint64_t)v26, (uint64_t)v14, type metadata accessor for V1Command.Response);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v38 = v80;
        sub_2480E336C(v27, v80, type metadata accessor for AuthenticateCommand.Response);
        sub_247FF9DC8();
        sub_247FF9E1C();
        sub_247FF9E70();
        char v35 = sub_248174A50();
        unint64_t v36 = type metadata accessor for AuthenticateCommand.Response;
        sub_2480E33D4(v38, type metadata accessor for AuthenticateCommand.Response);
        uint64_t v37 = (uint64_t)v14;
LABEL_8:
        sub_2480E33D4(v37, v36);
        goto LABEL_23;
      }
      uint64_t v47 = type metadata accessor for AuthenticateCommand.Response;
      uint64_t v48 = (uint64_t)v14;
LABEL_19:
      sub_2480E33D4(v48, v47);
      goto LABEL_20;
    case 4u:
      sub_2480E44A4((uint64_t)v26, (uint64_t)v11, type metadata accessor for V1Command.Response);
      uint64_t v40 = *v11;
      uint64_t v39 = v11[1];
      uint64_t v42 = v11[2];
      unint64_t v41 = v11[3];
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v43 = *(void *)v27;
        uint64_t v44 = *(void *)(v27 + 8);
        uint64_t v46 = *(void *)(v27 + 16);
        unint64_t v45 = *(void *)(v27 + 24);
        uint64_t v96 = v40;
        uint64_t v97 = v39;
        uint64_t v98 = v42;
        unint64_t v99 = v41;
        uint64_t v83 = v43;
        uint64_t v84 = v44;
        uint64_t v85 = v46;
        unint64_t v86 = v45;
        char v35 = _s12AppleIDSetup13RepairCommandV8ResponseO2eeoiySbAE_AEtFZ_0(&v96, &v83);
        sub_247FF40F8(v43, v44, v46, v45);
        sub_247FF40F8(v40, v39, v42, v41);
        goto LABEL_23;
      }
      sub_247FF40F8(v40, v39, v42, v41);
      goto LABEL_20;
    default:
      sub_2480E44A4((uint64_t)v26, (uint64_t)v22, type metadata accessor for V1Command.Response);
      uint64_t v28 = *((void *)v22 + 2);
      uint64_t v30 = *((void *)v22 + 4);
      uint64_t v29 = *((void *)v22 + 5);
      uint64_t v31 = *((void *)v22 + 6);
      uint64_t v32 = *((void *)v22 + 7);
      uint64_t v79 = *((void *)v22 + 8);
      uint64_t v80 = *((void *)v22 + 9);
      uint64_t v81 = *((void *)v22 + 10);
      uint64_t v82 = *((void *)v22 + 11);
      char v33 = v22[96];
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        sub_247FF6B84(v30, v29, v31, v32, v79, v80);
LABEL_20:
        sub_247FB33D4((uint64_t)v26, &qword_2692DABF8);
LABEL_21:
        char v35 = 0;
      }
      else
      {
        char v49 = v22[25];
        char v50 = v22[24];
        uint64_t v51 = *((void *)v22 + 1);
        char v52 = v22[1];
        char v53 = *v22;
        char v54 = *(unsigned char *)v27;
        char v55 = *(unsigned char *)(v27 + 1);
        uint64_t v57 = *(void *)(v27 + 8);
        uint64_t v56 = *(void *)(v27 + 16);
        char v58 = *(unsigned char *)(v27 + 24);
        char v59 = *(unsigned char *)(v27 + 25);
        uint64_t v60 = *(void *)(v27 + 40);
        uint64_t v73 = *(void *)(v27 + 32);
        uint64_t v61 = *(void *)(v27 + 48);
        uint64_t v62 = *(void *)(v27 + 56);
        uint64_t v64 = *(void *)(v27 + 64);
        uint64_t v63 = *(void *)(v27 + 72);
        uint64_t v65 = *(void *)(v27 + 88);
        uint64_t v72 = *(void *)(v27 + 80);
        v71[1] = v65;
        char v66 = *(unsigned char *)(v27 + 96);
        LOBYTE(v96) = v53;
        BYTE1(v96) = v52;
        uint64_t v97 = v51;
        uint64_t v98 = v28;
        uint64_t v74 = v28;
        LOBYTE(v99) = v50;
        BYTE1(v99) = v49;
        uint64_t v77 = v30;
        uint64_t v100 = v30;
        uint64_t v101 = v29;
        uint64_t v78 = v29;
        uint64_t v76 = v31;
        uint64_t v102 = v31;
        uint64_t v103 = v32;
        uint64_t v75 = v32;
        uint64_t v104 = v79;
        uint64_t v105 = v80;
        uint64_t v106 = v81;
        uint64_t v107 = v82;
        char v108 = v33;
        LOBYTE(v83) = v54;
        BYTE1(v83) = v55;
        uint64_t v84 = v57;
        uint64_t v85 = v56;
        LOBYTE(v86) = v58;
        BYTE1(v86) = v59;
        uint64_t v87 = v73;
        uint64_t v88 = v60;
        uint64_t v89 = v61;
        uint64_t v67 = v60;
        uint64_t v68 = v61;
        uint64_t v90 = v62;
        uint64_t v91 = v64;
        uint64_t v69 = v62;
        uint64_t v92 = v63;
        uint64_t v93 = v72;
        uint64_t v94 = v65;
        char v95 = v66;
        char v35 = _s12AppleIDSetup16HandshakeCommandO8ResponseV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v96, (unsigned __int8 *)&v83);
        swift_bridgeObjectRelease();
        sub_247FF6B84(v73, v67, v68, v69, v64, v63);
        swift_bridgeObjectRelease();
        sub_247FF6B84(v77, v78, v76, v75, v79, v80);
LABEL_23:
        sub_2480E33D4((uint64_t)v26, type metadata accessor for V1Command.Response);
      }
      return v35 & 1;
  }
}

uint64_t type metadata accessor for V1Command.Response(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_26B13BDF0);
}

uint64_t sub_2480E44A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2480E450C()
{
  unint64_t result = qword_2692D6DC0;
  if (!qword_2692D6DC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D6DA8);
    sub_247FF9EC4();
    sub_247FF9F18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DC0);
  }
  return result;
}

unint64_t sub_2480E4588()
{
  unint64_t result = qword_2692DA670;
  if (!qword_2692DA670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA670);
  }
  return result;
}

unint64_t sub_2480E45DC()
{
  unint64_t result = qword_2692DA678;
  if (!qword_2692DA678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA678);
  }
  return result;
}

unint64_t sub_2480E4630()
{
  unint64_t result = qword_2692DA680;
  if (!qword_2692DA680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA680);
  }
  return result;
}

unint64_t sub_2480E4684()
{
  unint64_t result = qword_2692DA688;
  if (!qword_2692DA688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA688);
  }
  return result;
}

unint64_t sub_2480E46D8()
{
  unint64_t result = qword_2692DA698;
  if (!qword_2692DA698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA698);
  }
  return result;
}

unint64_t sub_2480E472C()
{
  unint64_t result = qword_2692DA6A0;
  if (!qword_2692DA6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA6A0);
  }
  return result;
}

uint64_t sub_2480E4780(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_retain();
  }
  if (!a4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2480E47A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
    return swift_release();
  }
  if (!a4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for V1Command(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_26B13BE20);
}

unint64_t sub_2480E47E0()
{
  unint64_t result = qword_2692DA700;
  if (!qword_2692DA700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA700);
  }
  return result;
}

unint64_t sub_2480E4834()
{
  unint64_t result = qword_2692DA708;
  if (!qword_2692DA708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA708);
  }
  return result;
}

unint64_t sub_2480E4888()
{
  unint64_t result = qword_2692DA710;
  if (!qword_2692DA710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA710);
  }
  return result;
}

unint64_t sub_2480E48DC()
{
  unint64_t result = qword_2692DA718;
  if (!qword_2692DA718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA718);
  }
  return result;
}

unint64_t sub_2480E4930()
{
  unint64_t result = qword_2692DA728;
  if (!qword_2692DA728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA728);
  }
  return result;
}

unint64_t sub_2480E4984()
{
  unint64_t result = qword_2692DA758;
  if (!qword_2692DA758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA758);
  }
  return result;
}

unint64_t sub_2480E49D8()
{
  unint64_t result = qword_2692DA7B0;
  if (!qword_2692DA7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA7B0);
  }
  return result;
}

unint64_t sub_2480E4A2C()
{
  unint64_t result = qword_2692DA7B8;
  if (!qword_2692DA7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA7B8);
  }
  return result;
}

unint64_t sub_2480E4A80()
{
  unint64_t result = qword_2692DA7C0;
  if (!qword_2692DA7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA7C0);
  }
  return result;
}

unint64_t sub_2480E4AD4()
{
  unint64_t result = qword_2692DA7C8;
  if (!qword_2692DA7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA7C8);
  }
  return result;
}

unint64_t sub_2480E4B28()
{
  unint64_t result = qword_2692DA7D0;
  if (!qword_2692DA7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA7D0);
  }
  return result;
}

unint64_t sub_2480E4B7C()
{
  unint64_t result = qword_2692DA7D8;
  if (!qword_2692DA7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA7D8);
  }
  return result;
}

unint64_t sub_2480E4BD0()
{
  unint64_t result = qword_2692DA7E0;
  if (!qword_2692DA7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA7E0);
  }
  return result;
}

unint64_t sub_2480E4C24()
{
  unint64_t result = qword_2692DA7E8;
  if (!qword_2692DA7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA7E8);
  }
  return result;
}

uint64_t sub_2480E4C78()
{
  sub_2480E47A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_2480E47A0(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));
  return MEMORY[0x270FA0238](v0, 73, 7);
}

uint64_t sub_2480E4CC8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2480E4D18(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2480E4D68(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2480E4DAC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_2480E4DF0(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v5 = a1[14];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[18];
  uint64_t v8 = a1[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2480E4CC8(v2, v3);
  sub_2480E4D68(v6, v5);
  sub_2480E4D68(v8, v7);
  return a1;
}

unint64_t sub_2480E4ED4()
{
  unint64_t result = qword_2692DA838;
  if (!qword_2692DA838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA838);
  }
  return result;
}

unint64_t sub_2480E4F28()
{
  unint64_t result = qword_2692DA840;
  if (!qword_2692DA840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA840);
  }
  return result;
}

unint64_t sub_2480E4F7C()
{
  unint64_t result = qword_2692DA848;
  if (!qword_2692DA848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA848);
  }
  return result;
}

unint64_t sub_2480E4FD0()
{
  unint64_t result = qword_2692DA850;
  if (!qword_2692DA850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA850);
  }
  return result;
}

unint64_t sub_2480E5024()
{
  unint64_t result = qword_2692DA860;
  if (!qword_2692DA860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA860);
  }
  return result;
}

unint64_t sub_2480E5078()
{
  unint64_t result = qword_2692DA868;
  if (!qword_2692DA868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA868);
  }
  return result;
}

unint64_t sub_2480E50CC()
{
  unint64_t result = qword_2692DA870;
  if (!qword_2692DA870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA870);
  }
  return result;
}

void *sub_2480E5120(void *a1)
{
  uint64_t v2 = a1[6];
  uint64_t v3 = a1[7];
  uint64_t v5 = a1[14];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[18];
  uint64_t v8 = a1[17];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2480E4D18(v2, v3);
  sub_2480E4DAC(v6, v5);
  sub_2480E4DAC(v8, v7);
  return a1;
}

unint64_t sub_2480E5204()
{
  unint64_t result = qword_2692DA880;
  if (!qword_2692DA880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA880);
  }
  return result;
}

unint64_t sub_2480E5258()
{
  unint64_t result = qword_2692DA898;
  if (!qword_2692DA898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA898);
  }
  return result;
}

unint64_t sub_2480E52AC()
{
  unint64_t result = qword_2692DA8B0;
  if (!qword_2692DA8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA8B0);
  }
  return result;
}

uint64_t sub_2480E5300()
{
  return sub_2480E3530(&qword_2692DA8C0, (void (*)(uint64_t))type metadata accessor for V1Command);
}

uint64_t sub_2480E5348(uint64_t a1)
{
  uint64_t result = sub_2480E3530(&qword_2692DA8C8, (void (*)(uint64_t))type metadata accessor for V1Command.Request);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2480E53A0(void *a1)
{
  a1[1] = sub_2480E3530(&qword_2692DA768, (void (*)(uint64_t))type metadata accessor for V1Command.Request);
  a1[2] = sub_2480E3530(&qword_2692DA730, (void (*)(uint64_t))type metadata accessor for V1Command.Request);
  uint64_t result = sub_2480E3530(&qword_2692DA8D0, (void (*)(uint64_t))type metadata accessor for V1Command.Request);
  a1[3] = result;
  return result;
}

uint64_t sub_2480E544C()
{
  return sub_2480E3530(&qword_2692DA8D8, (void (*)(uint64_t))type metadata accessor for V1Command.Request);
}

uint64_t sub_2480E5494(uint64_t a1)
{
  uint64_t result = sub_2480E3530(&qword_2692DA8E0, (void (*)(uint64_t))type metadata accessor for V1Command.Response);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2480E54EC(void *a1)
{
  a1[1] = sub_2480E3530(&qword_2692DA760, (void (*)(uint64_t))type metadata accessor for V1Command.Response);
  a1[2] = sub_2480E3530(&qword_2692DA720, (void (*)(uint64_t))type metadata accessor for V1Command.Response);
  uint64_t result = sub_2480E3530(&qword_2692DA8E8, (void (*)(uint64_t))type metadata accessor for V1Command.Response);
  a1[3] = result;
  return result;
}

uint64_t sub_2480E5598()
{
  return sub_2480E3530(&qword_2692DA8F0, (void (*)(uint64_t))type metadata accessor for V1Command.Response);
}

uint64_t sub_2480E55E0()
{
  return sub_2480E3530(&qword_2692DA8F8, (void (*)(uint64_t))type metadata accessor for V1Command.Request);
}

uint64_t sub_2480E5628()
{
  return sub_2480E3530(&qword_2692DA900, (void (*)(uint64_t))type metadata accessor for V1Command.Response);
}

uint64_t sub_2480E5670(void *a1)
{
  a1[1] = sub_2480E3530(&qword_26B13BE18, (void (*)(uint64_t))type metadata accessor for V1Command);
  a1[2] = sub_2480E3530(&qword_26B13BE00, (void (*)(uint64_t))type metadata accessor for V1Command);
  uint64_t result = sub_2480E3530(&qword_26B13BE08, (void (*)(uint64_t))type metadata accessor for V1Command);
  a1[3] = result;
  return result;
}

uint64_t sub_2480E571C()
{
  return sub_2480E3530(&qword_26B13BE10, (void (*)(uint64_t))type metadata accessor for V1Command);
}

uint64_t sub_2480E5764(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480E5BFC(a1, a2, a3, (uint64_t (*)(void))sub_2480E4984, (uint64_t (*)(void))sub_2480E4888, (uint64_t (*)(void))sub_2480E57A4);
}

unint64_t sub_2480E57A4()
{
  unint64_t result = qword_2692DA908;
  if (!qword_2692DA908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA908);
  }
  return result;
}

unint64_t sub_2480E57FC()
{
  unint64_t result = qword_2692DA910;
  if (!qword_2692DA910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA910);
  }
  return result;
}

uint64_t sub_2480E5850(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480E5BFC(a1, a2, a3, (uint64_t (*)(void))sub_2480E5890, (uint64_t (*)(void))sub_2480E58E4, (uint64_t (*)(void))sub_2480E5938);
}

unint64_t sub_2480E5890()
{
  unint64_t result = qword_2692DA918;
  if (!qword_2692DA918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA918);
  }
  return result;
}

unint64_t sub_2480E58E4()
{
  unint64_t result = qword_2692DA920;
  if (!qword_2692DA920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA920);
  }
  return result;
}

unint64_t sub_2480E5938()
{
  unint64_t result = qword_2692DA928;
  if (!qword_2692DA928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA928);
  }
  return result;
}

unint64_t sub_2480E5990()
{
  unint64_t result = qword_2692DA930;
  if (!qword_2692DA930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA930);
  }
  return result;
}

uint64_t sub_2480E59E4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480E5BFC(a1, a2, a3, (uint64_t (*)(void))sub_2480E5024, (uint64_t (*)(void))sub_2480E4F28, (uint64_t (*)(void))sub_2480E5A24);
}

unint64_t sub_2480E5A24()
{
  unint64_t result = qword_2692DA938;
  if (!qword_2692DA938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA938);
  }
  return result;
}

unint64_t sub_2480E5A7C()
{
  unint64_t result = qword_2692DA940;
  if (!qword_2692DA940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA940);
  }
  return result;
}

uint64_t sub_2480E5AD0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480E5BFC(a1, a2, a3, (uint64_t (*)(void))sub_2480E5078, (uint64_t (*)(void))sub_2480E4F7C, (uint64_t (*)(void))sub_2480E5B10);
}

unint64_t sub_2480E5B10()
{
  unint64_t result = qword_2692DA948;
  if (!qword_2692DA948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA948);
  }
  return result;
}

unint64_t sub_2480E5B68()
{
  unint64_t result = qword_2692DA950;
  if (!qword_2692DA950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA950);
  }
  return result;
}

uint64_t sub_2480E5BBC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480E5BFC(a1, a2, a3, (uint64_t (*)(void))sub_2480E50CC, (uint64_t (*)(void))sub_2480E4FD0, (uint64_t (*)(void))sub_2480E5C50);
}

uint64_t sub_2480E5BFC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_2480E5C50()
{
  unint64_t result = qword_2692DA958;
  if (!qword_2692DA958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA958);
  }
  return result;
}

unint64_t sub_2480E5CA8()
{
  unint64_t result = qword_2692DA960;
  if (!qword_2692DA960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA960);
  }
  return result;
}

uint64_t dispatch thunk of V1CommandMessageProtocol.into()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of V1CommandMessageProtocol.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

unint64_t initializeBufferWithCopyOfBuffer for V1Command(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = *(void *)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      uint64_t v15 = *(void *)(a2 + 16);
      char v16 = *(unsigned char *)(a2 + 24);
      sub_2480E4780(v13, v14, v15, v16);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(void *)(a1 + 16) = v15;
      *(unsigned char *)(a1 + 24) = v16;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        type metadata accessor for V1Command.Response(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v21 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v21;
            uint64_t v22 = *(void *)(a2 + 24);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = v22;
            uint64_t v23 = *(void *)(a2 + 40);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(void *)(a1 + 40) = v23;
            uint64_t v24 = *(void *)(a2 + 56);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = v24;
            uint64_t v25 = *(void *)(a2 + 72);
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = v25;
            uint64_t v26 = type metadata accessor for IdMSAccount();
            uint64_t v27 = *(int *)(v26 + 20);
            uint64_t v145 = a1 + v27;
            uint64_t v150 = v26;
            uint64_t v137 = a2 + v27;
            uint64_t v28 = sub_248174700();
            v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v130(v145, v137, v28);
            uint64_t v29 = *(int *)(v26 + 24);
            uint64_t v30 = a1 + v29;
            uint64_t v31 = a2 + v29;
            uint64_t v32 = *(void *)v31;
            uint64_t v33 = *(void *)(v31 + 8);
            uint64_t v34 = *(void *)(v31 + 16);
            uint64_t v35 = *(void *)(v31 + 24);
            uint64_t v36 = *(void *)(v31 + 32);
            uint64_t v37 = *(void *)(v31 + 40);
            uint64_t v127 = *(void *)(v31 + 56);
            uint64_t v131 = *(void *)(v31 + 48);
            uint64_t v138 = *(void *)(v31 + 64);
            LOBYTE(v145) = *(unsigned char *)(v31 + 72);
            sub_247FABF8C(*(void *)v31, v33, v34, v35, v36, v37, v131, v127, v138, v145);
            *(void *)uint64_t v30 = v32;
            *(void *)(v30 + 8) = v33;
            *(void *)(v30 + 16) = v34;
            *(void *)(v30 + 24) = v35;
            *(void *)(v30 + 32) = v36;
            *(void *)(v30 + 40) = v37;
            *(void *)(v30 + 48) = v131;
            *(void *)(v30 + 56) = v127;
            *(void *)(v30 + 64) = v138;
            *(unsigned char *)(v30 + 72) = v145;
            *(void *)(a1 + *(int *)(v150 + 28)) = *(void *)(a2 + *(int *)(v150 + 28));
            uint64_t v38 = type metadata accessor for SignInCommand.Response(0);
            *(void *)(a1 + *(int *)(v38 + 20)) = *(void *)(a2 + *(int *)(v38 + 20));
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 2u:
            type metadata accessor for AnisetteCommand.Response();
            int v39 = swift_getEnumCaseMultiPayload();
            uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[v39]);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
            (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
            break;
          case 4u:
            uint64_t v42 = *(void *)a2;
            uint64_t v43 = *(void *)(a2 + 8);
            uint64_t v45 = *(void *)(a2 + 16);
            unint64_t v44 = *(void *)(a2 + 24);
            sub_247FF4F40(v42, v43, v45, v44);
            *(void *)a1 = v42;
            *(void *)(a1 + 8) = v43;
            *(void *)(a1 + 16) = v45;
            *(void *)(a1 + 24) = v44;
            break;
          default:
            *(_WORD *)a1 = *(_WORD *)a2;
            uint64_t v7 = *(void *)(a2 + 16);
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = v7;
            *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
            uint64_t v8 = *(void *)(a2 + 40);
            swift_bridgeObjectRetain();
            if (v8)
            {
              *(void *)(a1 + 32) = *(void *)(a2 + 32);
              *(void *)(a1 + 40) = v8;
              uint64_t v9 = *(void *)(a2 + 56);
              *(void *)(a1 + 48) = *(void *)(a2 + 48);
              *(void *)(a1 + 56) = v9;
              uint64_t v10 = *(void *)(a2 + 72);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v10)
              {
                *(void *)(a1 + 64) = *(void *)(a2 + 64);
                *(void *)(a1 + 72) = v10;
                uint64_t v11 = *(void *)(a2 + 88);
                *(void *)(a1 + 80) = *(void *)(a2 + 80);
                *(void *)(a1 + 88) = v11;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v116 = *(_OWORD *)(a2 + 80);
                *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
                *(_OWORD *)(a1 + 80) = v116;
              }
              *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
            }
            else
            {
              long long v110 = *(_OWORD *)(a2 + 80);
              *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
              *(_OWORD *)(a1 + 80) = v110;
              *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
              long long v111 = *(_OWORD *)(a2 + 48);
              *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
              *(_OWORD *)(a1 + 48) = v111;
            }
            break;
        }
      }
      else
      {
        type metadata accessor for V1Command.Request(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v46 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v46;
            uint64_t v47 = *(void *)(a2 + 24);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = v47;
            uint64_t v48 = *(void *)(a2 + 40);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(void *)(a1 + 40) = v48;
            uint64_t v49 = *(void *)(a2 + 56);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = v49;
            uint64_t v50 = *(void *)(a2 + 72);
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = v50;
            uint64_t v51 = type metadata accessor for IdMSAccount();
            uint64_t v52 = *(int *)(v51 + 20);
            uint64_t v146 = a1 + v52;
            uint64_t v151 = v51;
            uint64_t v139 = a2 + v52;
            uint64_t v53 = sub_248174700();
            v132 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v132(v146, v139, v53);
            uint64_t v54 = *(int *)(v51 + 24);
            uint64_t v55 = a1 + v54;
            uint64_t v56 = a2 + v54;
            uint64_t v57 = *(void *)(v56 + 8);
            uint64_t v58 = *(void *)(v56 + 16);
            uint64_t v59 = *(void *)(v56 + 24);
            uint64_t v60 = *(void *)(v56 + 32);
            uint64_t v61 = *(void *)(v56 + 40);
            uint64_t v62 = *(void *)(v56 + 48);
            uint64_t v128 = *(void *)(v56 + 56);
            uint64_t v133 = *(void *)v56;
            uint64_t v140 = *(void *)(v56 + 64);
            LOBYTE(v146) = *(unsigned char *)(v56 + 72);
            sub_247FABF8C(*(void *)v56, v57, v58, v59, v60, v61, v62, v128, v140, v146);
            *(void *)uint64_t v55 = v133;
            *(void *)(v55 + 8) = v57;
            *(void *)(v55 + 16) = v58;
            *(void *)(v55 + 24) = v59;
            *(void *)(v55 + 32) = v60;
            *(void *)(v55 + 40) = v61;
            *(void *)(v55 + 48) = v62;
            *(void *)(v55 + 56) = v128;
            *(void *)(v55 + 64) = v140;
            *(unsigned char *)(v55 + 72) = v146;
            *(void *)(a1 + *(int *)(v151 + 28)) = *(void *)(a2 + *(int *)(v151 + 28));
            v152 = (int *)type metadata accessor for SignInCommand.Request(0);
            uint64_t v63 = v152[5];
            uint64_t v64 = a1 + v63;
            uint64_t v65 = (void *)(a2 + v63);
            uint64_t v66 = v65[1];
            *(void *)uint64_t v64 = *v65;
            *(void *)(v64 + 8) = v66;
            uint64_t v67 = v65[3];
            *(void *)(v64 + 16) = v65[2];
            *(void *)(v64 + 24) = v67;
            uint64_t v68 = v65[5];
            *(void *)(v64 + 32) = v65[4];
            *(void *)(v64 + 40) = v68;
            uint64_t v69 = v65[7];
            *(void *)(v64 + 48) = v65[6];
            *(void *)(v64 + 56) = v69;
            uint64_t v70 = v65[9];
            *(void *)(v64 + 64) = v65[8];
            *(void *)(v64 + 72) = v70;
            unint64_t v141 = v65[11];
            v147 = v65 + 10;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v141 >> 60 == 15)
            {
              *(_OWORD *)(v64 + 80) = *(_OWORD *)v147;
            }
            else
            {
              uint64_t v109 = *v147;
              sub_247FB6C20(*v147, v141);
              *(void *)(v64 + 80) = v109;
              *(void *)(v64 + 88) = v141;
            }
            *(unsigned char *)(a1 + v152[6]) = *(unsigned char *)(a2 + v152[6]);
            *(unsigned char *)(a1 + v152[7]) = *(unsigned char *)(a2 + v152[7]);
            break;
          case 2u:
            uint64_t v71 = *(void *)a2;
            unint64_t v72 = *(void *)(a2 + 8);
            uint64_t v73 = *(void *)(a2 + 16);
            unint64_t v74 = *(void *)(a2 + 24);
            char v75 = *(unsigned char *)(a2 + 32);
            sub_2480E684C(v71, v72, v73, v74, v75);
            *(void *)a1 = v71;
            *(void *)(a1 + 8) = v72;
            *(void *)(a1 + 16) = v73;
            *(void *)(a1 + 24) = v74;
            *(unsigned char *)(a1 + 32) = v75;
            break;
          case 3u:
            uint64_t v76 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v76;
            uint64_t v77 = *(void *)(a2 + 24);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = v77;
            uint64_t v78 = *(void *)(a2 + 40);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(void *)(a1 + 40) = v78;
            uint64_t v79 = *(void *)(a2 + 56);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = v79;
            uint64_t v80 = *(void *)(a2 + 72);
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = v80;
            uint64_t v81 = type metadata accessor for IdMSAccount();
            uint64_t v82 = *(int *)(v81 + 20);
            uint64_t v148 = a1 + v82;
            uint64_t v153 = v81;
            uint64_t v142 = a2 + v82;
            uint64_t v83 = sub_248174700();
            v134 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v134(v148, v142, v83);
            uint64_t v84 = *(int *)(v81 + 24);
            uint64_t v85 = a1 + v84;
            uint64_t v86 = a2 + v84;
            uint64_t v87 = *(void *)(v86 + 8);
            uint64_t v88 = *(void *)(v86 + 16);
            uint64_t v89 = *(void *)(v86 + 24);
            uint64_t v90 = *(void *)(v86 + 32);
            uint64_t v91 = *(void *)(v86 + 40);
            uint64_t v92 = *(void *)(v86 + 48);
            uint64_t v129 = *(void *)(v86 + 56);
            uint64_t v135 = *(void *)v86;
            uint64_t v143 = *(void *)(v86 + 64);
            LOBYTE(v148) = *(unsigned char *)(v86 + 72);
            sub_247FABF8C(*(void *)v86, v87, v88, v89, v90, v91, v92, v129, v143, v148);
            *(void *)uint64_t v85 = v135;
            *(void *)(v85 + 8) = v87;
            *(void *)(v85 + 16) = v88;
            *(void *)(v85 + 24) = v89;
            *(void *)(v85 + 32) = v90;
            *(void *)(v85 + 40) = v91;
            *(void *)(v85 + 48) = v92;
            *(void *)(v85 + 56) = v129;
            *(void *)(v85 + 64) = v143;
            *(unsigned char *)(v85 + 72) = v148;
            *(void *)(a1 + *(int *)(v153 + 28)) = *(void *)(a2 + *(int *)(v153 + 28));
            uint64_t v93 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
            uint64_t v94 = a1 + v93;
            uint64_t v95 = a2 + v93;
            uint64_t v96 = *(void *)(a2 + v93 + 8);
            swift_bridgeObjectRetain();
            if (v96)
            {
              *(void *)uint64_t v94 = *(void *)v95;
              *(void *)(v94 + 8) = v96;
              uint64_t v97 = *(void *)(v95 + 24);
              *(void *)(v94 + 16) = *(void *)(v95 + 16);
              *(void *)(v94 + 24) = v97;
              uint64_t v98 = *(void *)(v95 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v98)
              {
                *(void *)(v94 + 32) = *(void *)(v95 + 32);
                *(void *)(v94 + 40) = v98;
                uint64_t v99 = *(void *)(v95 + 56);
                *(void *)(v94 + 48) = *(void *)(v95 + 48);
                *(void *)(v94 + 56) = v99;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v117 = *(_OWORD *)(v95 + 48);
                *(_OWORD *)(v94 + 32) = *(_OWORD *)(v95 + 32);
                *(_OWORD *)(v94 + 48) = v117;
              }
              *(unsigned char *)(v94 + 64) = *(unsigned char *)(v95 + 64);
            }
            else
            {
              long long v114 = *(_OWORD *)(v95 + 48);
              *(_OWORD *)(v94 + 32) = *(_OWORD *)(v95 + 32);
              *(_OWORD *)(v94 + 48) = v114;
              *(unsigned char *)(v94 + 64) = *(unsigned char *)(v95 + 64);
              long long v115 = *(_OWORD *)(v95 + 16);
              *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
              *(_OWORD *)(v94 + 16) = v115;
            }
            break;
          case 4u:
            uint64_t v100 = *(void *)a2;
            uint64_t v101 = *(void *)(a2 + 8);
            uint64_t v102 = *(void *)(a2 + 16);
            uint64_t v103 = *(void *)(a2 + 24);
            uint64_t v104 = *(void *)(a2 + 32);
            uint64_t v105 = *(void *)(a2 + 40);
            uint64_t v106 = *(void *)(a2 + 48);
            uint64_t v136 = *(void *)(a2 + 64);
            uint64_t v144 = *(void *)(a2 + 72);
            unint64_t v149 = *(void *)(a2 + 80);
            unsigned __int8 v154 = *(unsigned char *)(a2 + 88);
            uint64_t v107 = *(void *)a2;
            uint64_t v108 = *(void *)(a2 + 56);
            sub_247FF49AC(v107, v101, v102, v103, v104, v105, v106, v108, v136, v144, v149, v154);
            *(void *)a1 = v100;
            *(void *)(a1 + 8) = v101;
            *(void *)(a1 + 16) = v102;
            *(void *)(a1 + 24) = v103;
            *(void *)(a1 + 32) = v104;
            *(void *)(a1 + 40) = v105;
            *(void *)(a1 + 48) = v106;
            *(void *)(a1 + 56) = v108;
            *(void *)(a1 + 64) = v136;
            *(void *)(a1 + 72) = v144;
            *(void *)(a1 + 80) = v149;
            *(unsigned char *)(a1 + 88) = v154;
            break;
          default:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
            uint64_t v17 = *(void *)(a2 + 16);
            if (v17)
            {
              *(void *)(a1 + 8) = *(void *)(a2 + 8);
              *(void *)(a1 + 16) = v17;
              uint64_t v18 = *(void *)(a2 + 32);
              *(void *)(a1 + 24) = *(void *)(a2 + 24);
              *(void *)(a1 + 32) = v18;
              uint64_t v19 = *(void *)(a2 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v19)
              {
                *(void *)(a1 + 40) = *(void *)(a2 + 40);
                *(void *)(a1 + 48) = v19;
                uint64_t v20 = *(void *)(a2 + 64);
                *(void *)(a1 + 56) = *(void *)(a2 + 56);
                *(void *)(a1 + 64) = v20;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v118 = *(_OWORD *)(a2 + 56);
                *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
                *(_OWORD *)(a1 + 56) = v118;
              }
              *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
            }
            else
            {
              long long v112 = *(_OWORD *)(a2 + 56);
              *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
              *(_OWORD *)(a1 + 56) = v112;
              *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
              long long v113 = *(_OWORD *)(a2 + 24);
              *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
              *(_OWORD *)(a1 + 24) = v113;
            }
            uint64_t v119 = *(void *)(a2 + 88);
            if (v119)
            {
              *(void *)(a1 + 80) = *(void *)(a2 + 80);
              *(void *)(a1 + 88) = v119;
              uint64_t v120 = *(void *)(a2 + 104);
              *(void *)(a1 + 96) = *(void *)(a2 + 96);
              *(void *)(a1 + 104) = v120;
              uint64_t v121 = *(void *)(a2 + 120);
              *(void *)(a1 + 112) = *(void *)(a2 + 112);
              *(void *)(a1 + 120) = v121;
              uint64_t v122 = *(void *)(a2 + 136);
              *(void *)(a1 + 128) = *(void *)(a2 + 128);
              *(void *)(a1 + 136) = v122;
              uint64_t v123 = *(void *)(a2 + 152);
              *(void *)(a1 + 144) = *(void *)(a2 + 144);
              *(void *)(a1 + 152) = v123;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v124 = *(_OWORD *)(a2 + 128);
              *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
              *(_OWORD *)(a1 + 128) = v124;
              *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
              long long v125 = *(_OWORD *)(a2 + 96);
              *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
              *(_OWORD *)(a1 + 96) = v125;
            }
            *(void *)(a1 + 160) = *(void *)(a2 + 160);
            swift_bridgeObjectRetain();
            break;
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2480E684C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  int v7 = (a4 >> 60) & 3 | v6;
  if (v7 == 3)
  {
    unint64_t v9 = a4 & 0xCFFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    unint64_t result = a3;
    a2 = v9;
    return sub_247FB6C20(result, a2);
  }
  if (v7 != 2)
  {
    if (v7) {
      return result;
    }
    return sub_247FB6C20(result, a2);
  }
  return swift_bridgeObjectRetain();
}

void destroy for V1Command(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      char v6 = *(unsigned char *)(a1 + 24);
      sub_2480E47A0(v3, v4, v5, v6);
      break;
    case 1:
      type metadata accessor for V1Command.Response(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 40))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 72))
            {
LABEL_35:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_36;
            }
          }
          break;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v12 = type metadata accessor for IdMSAccount();
          uint64_t v13 = a1 + *(int *)(v12 + 20);
          uint64_t v14 = sub_248174700();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
          uint64_t v15 = a1 + *(int *)(v12 + 24);
          sub_247FAC1EC(*(void *)v15, *(void *)(v15 + 8), *(void *)(v15 + 16), *(void *)(v15 + 24), *(void *)(v15 + 32), *(void *)(v15 + 40), *(void *)(v15 + 48), *(void *)(v15 + 56), *(void *)(v15 + 64), *(unsigned char *)(v15 + 72));
          swift_bridgeObjectRelease();
          type metadata accessor for SignInCommand.Response(0);
LABEL_36:
          swift_bridgeObjectRelease();
          break;
        case 2u:
          type metadata accessor for AnisetteCommand.Response();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
              char v16 = &qword_2692D7490;
              goto LABEL_42;
            case 3u:
            case 4u:
              char v16 = &qword_2692DA968;
              goto LABEL_42;
            case 5u:
              char v16 = &qword_2692DA970;
              goto LABEL_42;
            default:
              return;
          }
        case 3u:
          char v16 = &qword_2692D6DA8;
LABEL_42:
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(v16);
          uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8);
          v34(a1, v33);
          break;
        case 4u:
          uint64_t v17 = *(void *)a1;
          uint64_t v18 = *(void *)(a1 + 8);
          uint64_t v19 = *(void *)(a1 + 16);
          unint64_t v20 = *(void *)(a1 + 24);
          sub_247FF40F8(v17, v18, v19, v20);
          break;
        default:
          return;
      }
      break;
    case 0:
      type metadata accessor for V1Command.Request(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          if (*(void *)(a1 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 48))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
          if (*(void *)(a1 + 88))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_36;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v21 = type metadata accessor for IdMSAccount();
          uint64_t v22 = a1 + *(int *)(v21 + 20);
          uint64_t v23 = sub_248174700();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
          uint64_t v24 = a1 + *(int *)(v21 + 24);
          sub_247FAC1EC(*(void *)v24, *(void *)(v24 + 8), *(void *)(v24 + 16), *(void *)(v24 + 24), *(void *)(v24 + 32), *(void *)(v24 + 40), *(void *)(v24 + 48), *(void *)(v24 + 56), *(void *)(v24 + 64), *(unsigned char *)(v24 + 72));
          swift_bridgeObjectRelease();
          uint64_t v25 = a1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v26 = *(void *)(v25 + 88);
          if (v26 >> 60 != 15)
          {
            uint64_t v27 = *(void *)(v25 + 80);
            sub_247FB6CCC(v27, v26);
          }
          break;
        case 2u:
          uint64_t v7 = *(void *)a1;
          unint64_t v8 = *(void *)(a1 + 8);
          uint64_t v9 = *(void *)(a1 + 16);
          unint64_t v10 = *(void *)(a1 + 24);
          char v11 = *(unsigned char *)(a1 + 32);
          sub_2480E32D8(v7, v8, v9, v10, v11);
          break;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v28 = type metadata accessor for IdMSAccount();
          uint64_t v29 = a1 + *(int *)(v28 + 20);
          uint64_t v30 = sub_248174700();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
          uint64_t v31 = a1 + *(int *)(v28 + 24);
          sub_247FAC1EC(*(void *)v31, *(void *)(v31 + 8), *(void *)(v31 + 16), *(void *)(v31 + 24), *(void *)(v31 + 32), *(void *)(v31 + 40), *(void *)(v31 + 48), *(void *)(v31 + 56), *(void *)(v31 + 64), *(unsigned char *)(v31 + 72));
          swift_bridgeObjectRelease();
          uint64_t v32 = a1 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
          if (*(void *)(v32 + 8))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v32 + 40)) {
              goto LABEL_35;
            }
          }
          break;
        case 4u:
          sub_247FF4AC0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
          break;
        default:
          return;
      }
      break;
  }
}

uint64_t initializeWithCopy for V1Command(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = *(void *)a2;
    uint64_t v11 = *(void *)(a2 + 8);
    uint64_t v12 = *(void *)(a2 + 16);
    char v13 = *(unsigned char *)(a2 + 24);
    sub_2480E4780(v10, v11, v12, v13);
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v11;
    *(void *)(a1 + 16) = v12;
    *(unsigned char *)(a1 + 24) = v13;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for V1Command.Response(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v18 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v18;
          uint64_t v19 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v19;
          uint64_t v20 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v20;
          uint64_t v21 = *(void *)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v21;
          uint64_t v22 = *(void *)(a2 + 72);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v22;
          uint64_t v23 = type metadata accessor for IdMSAccount();
          uint64_t v24 = *(int *)(v23 + 20);
          uint64_t v141 = a1 + v24;
          uint64_t v146 = v23;
          uint64_t v134 = a2 + v24;
          uint64_t v25 = sub_248174700();
          uint64_t v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v128(v141, v134, v25);
          uint64_t v26 = *(int *)(v23 + 24);
          uint64_t v27 = a1 + v26;
          uint64_t v28 = a2 + v26;
          uint64_t v29 = *(void *)(v28 + 8);
          uint64_t v30 = *(void *)(v28 + 16);
          uint64_t v31 = *(void *)(v28 + 24);
          uint64_t v32 = *(void *)(v28 + 32);
          uint64_t v33 = *(void *)(v28 + 40);
          uint64_t v35 = *(void *)(v28 + 48);
          uint64_t v34 = *(void *)(v28 + 56);
          uint64_t v129 = *(void *)v28;
          uint64_t v135 = *(void *)(v28 + 64);
          LOBYTE(v141) = *(unsigned char *)(v28 + 72);
          sub_247FABF8C(*(void *)v28, v29, v30, v31, v32, v33, v35, v34, v135, v141);
          *(void *)uint64_t v27 = v129;
          *(void *)(v27 + 8) = v29;
          *(void *)(v27 + 16) = v30;
          *(void *)(v27 + 24) = v31;
          *(void *)(v27 + 32) = v32;
          *(void *)(v27 + 40) = v33;
          *(void *)(v27 + 48) = v35;
          *(void *)(v27 + 56) = v34;
          *(void *)(v27 + 64) = v135;
          *(unsigned char *)(v27 + 72) = v141;
          *(void *)(a1 + *(int *)(v146 + 28)) = *(void *)(a2 + *(int *)(v146 + 28));
          uint64_t v36 = type metadata accessor for SignInCommand.Response(0);
          *(void *)(a1 + *(int *)(v36 + 20)) = *(void *)(a2 + *(int *)(v36 + 20));
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 2u:
          type metadata accessor for AnisetteCommand.Response();
          int v37 = swift_getEnumCaseMultiPayload();
          uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[v37]);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
          break;
        case 4u:
          uint64_t v40 = *(void *)a2;
          uint64_t v41 = *(void *)(a2 + 8);
          uint64_t v43 = *(void *)(a2 + 16);
          unint64_t v42 = *(void *)(a2 + 24);
          sub_247FF4F40(v40, v41, v43, v42);
          *(void *)a1 = v40;
          *(void *)(a1 + 8) = v41;
          *(void *)(a1 + 16) = v43;
          *(void *)(a1 + 24) = v42;
          break;
        default:
          *(_WORD *)a1 = *(_WORD *)a2;
          uint64_t v5 = *(void *)(a2 + 16);
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = v5;
          *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
          uint64_t v6 = *(void *)(a2 + 40);
          swift_bridgeObjectRetain();
          if (v6)
          {
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(void *)(a1 + 40) = v6;
            uint64_t v7 = *(void *)(a2 + 56);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = v7;
            uint64_t v8 = *(void *)(a2 + 72);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v8)
            {
              *(void *)(a1 + 64) = *(void *)(a2 + 64);
              *(void *)(a1 + 72) = v8;
              uint64_t v9 = *(void *)(a2 + 88);
              *(void *)(a1 + 80) = *(void *)(a2 + 80);
              *(void *)(a1 + 88) = v9;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v117 = *(_OWORD *)(a2 + 80);
              *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
              *(_OWORD *)(a1 + 80) = v117;
            }
            *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
          }
          else
          {
            long long v111 = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            *(_OWORD *)(a1 + 80) = v111;
            *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
            long long v112 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v112;
          }
          break;
      }
    }
    else
    {
      type metadata accessor for V1Command.Request(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v44 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v44;
          uint64_t v45 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v45;
          uint64_t v46 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v46;
          uint64_t v47 = *(void *)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v47;
          uint64_t v48 = *(void *)(a2 + 72);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v48;
          uint64_t v49 = type metadata accessor for IdMSAccount();
          uint64_t v50 = *(int *)(v49 + 20);
          uint64_t v142 = a1 + v50;
          uint64_t v147 = v49;
          uint64_t v136 = a2 + v50;
          uint64_t v51 = sub_248174700();
          v130 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v130(v142, v136, v51);
          uint64_t v52 = *(int *)(v49 + 24);
          uint64_t v53 = a1 + v52;
          uint64_t v54 = a2 + v52;
          uint64_t v55 = *(void *)v54;
          uint64_t v56 = *(void *)(v54 + 8);
          uint64_t v57 = *(void *)(v54 + 16);
          uint64_t v58 = *(void *)(v54 + 24);
          uint64_t v59 = *(void *)(v54 + 32);
          uint64_t v60 = *(void *)(v54 + 40);
          uint64_t v61 = *(void *)(v54 + 48);
          uint64_t v131 = *(void *)(v54 + 56);
          uint64_t v137 = *(void *)(v54 + 64);
          LOBYTE(v142) = *(unsigned char *)(v54 + 72);
          sub_247FABF8C(*(void *)v54, v56, v57, v58, v59, v60, v61, v131, v137, v142);
          *(void *)uint64_t v53 = v55;
          *(void *)(v53 + 8) = v56;
          *(void *)(v53 + 16) = v57;
          *(void *)(v53 + 24) = v58;
          *(void *)(v53 + 32) = v59;
          *(void *)(v53 + 40) = v60;
          *(void *)(v53 + 48) = v61;
          *(void *)(v53 + 56) = v131;
          *(void *)(v53 + 64) = v137;
          *(unsigned char *)(v53 + 72) = v142;
          *(void *)(a1 + *(int *)(v147 + 28)) = *(void *)(a2 + *(int *)(v147 + 28));
          uint64_t v148 = (int *)type metadata accessor for SignInCommand.Request(0);
          uint64_t v62 = v148[5];
          uint64_t v63 = a1 + v62;
          uint64_t v64 = (void *)(a2 + v62);
          uint64_t v65 = v64[1];
          *(void *)uint64_t v63 = *v64;
          *(void *)(v63 + 8) = v65;
          uint64_t v66 = v64[3];
          *(void *)(v63 + 16) = v64[2];
          *(void *)(v63 + 24) = v66;
          uint64_t v67 = v64[5];
          *(void *)(v63 + 32) = v64[4];
          *(void *)(v63 + 40) = v67;
          uint64_t v68 = v64[7];
          *(void *)(v63 + 48) = v64[6];
          *(void *)(v63 + 56) = v68;
          uint64_t v69 = v64[9];
          *(void *)(v63 + 64) = v64[8];
          *(void *)(v63 + 72) = v69;
          uint64_t v143 = v64 + 10;
          unint64_t v70 = v64[11];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v70 >> 60 == 15)
          {
            *(_OWORD *)(v63 + 80) = *(_OWORD *)v143;
          }
          else
          {
            uint64_t v110 = *v143;
            sub_247FB6C20(*v143, v70);
            *(void *)(v63 + 80) = v110;
            *(void *)(v63 + 88) = v70;
          }
          *(unsigned char *)(a1 + v148[6]) = *(unsigned char *)(a2 + v148[6]);
          *(unsigned char *)(a1 + v148[7]) = *(unsigned char *)(a2 + v148[7]);
          break;
        case 2u:
          uint64_t v71 = *(void *)a2;
          unint64_t v72 = *(void *)(a2 + 8);
          uint64_t v73 = *(void *)(a2 + 16);
          unint64_t v74 = *(void *)(a2 + 24);
          char v75 = *(unsigned char *)(a2 + 32);
          sub_2480E684C(v71, v72, v73, v74, v75);
          *(void *)a1 = v71;
          *(void *)(a1 + 8) = v72;
          *(void *)(a1 + 16) = v73;
          *(void *)(a1 + 24) = v74;
          *(unsigned char *)(a1 + 32) = v75;
          break;
        case 3u:
          uint64_t v76 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v76;
          uint64_t v77 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v77;
          uint64_t v78 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v78;
          uint64_t v79 = *(void *)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v79;
          uint64_t v80 = *(void *)(a2 + 72);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v80;
          uint64_t v81 = type metadata accessor for IdMSAccount();
          uint64_t v82 = *(int *)(v81 + 20);
          uint64_t v144 = a1 + v82;
          uint64_t v149 = v81;
          uint64_t v138 = a2 + v82;
          uint64_t v83 = sub_248174700();
          v132 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v132(v144, v138, v83);
          uint64_t v84 = *(int *)(v81 + 24);
          uint64_t v85 = a1 + v84;
          uint64_t v86 = a2 + v84;
          uint64_t v87 = *(void *)(v86 + 8);
          uint64_t v88 = *(void *)(v86 + 16);
          uint64_t v89 = *(void *)(v86 + 24);
          uint64_t v90 = *(void *)(v86 + 32);
          uint64_t v91 = *(void *)(v86 + 40);
          uint64_t v93 = *(void *)(v86 + 48);
          uint64_t v92 = *(void *)(v86 + 56);
          uint64_t v133 = *(void *)v86;
          uint64_t v139 = *(void *)(v86 + 64);
          LOBYTE(v144) = *(unsigned char *)(v86 + 72);
          sub_247FABF8C(*(void *)v86, v87, v88, v89, v90, v91, v93, v92, v139, v144);
          *(void *)uint64_t v85 = v133;
          *(void *)(v85 + 8) = v87;
          *(void *)(v85 + 16) = v88;
          *(void *)(v85 + 24) = v89;
          *(void *)(v85 + 32) = v90;
          *(void *)(v85 + 40) = v91;
          *(void *)(v85 + 48) = v93;
          *(void *)(v85 + 56) = v92;
          *(void *)(v85 + 64) = v139;
          *(unsigned char *)(v85 + 72) = v144;
          *(void *)(a1 + *(int *)(v149 + 28)) = *(void *)(a2 + *(int *)(v149 + 28));
          uint64_t v94 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
          uint64_t v95 = a1 + v94;
          uint64_t v96 = a2 + v94;
          uint64_t v97 = *(void *)(a2 + v94 + 8);
          swift_bridgeObjectRetain();
          if (v97)
          {
            *(void *)uint64_t v95 = *(void *)v96;
            *(void *)(v95 + 8) = v97;
            uint64_t v98 = *(void *)(v96 + 24);
            *(void *)(v95 + 16) = *(void *)(v96 + 16);
            *(void *)(v95 + 24) = v98;
            uint64_t v99 = *(void *)(v96 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v99)
            {
              *(void *)(v95 + 32) = *(void *)(v96 + 32);
              *(void *)(v95 + 40) = v99;
              uint64_t v100 = *(void *)(v96 + 56);
              *(void *)(v95 + 48) = *(void *)(v96 + 48);
              *(void *)(v95 + 56) = v100;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v118 = *(_OWORD *)(v96 + 48);
              *(_OWORD *)(v95 + 32) = *(_OWORD *)(v96 + 32);
              *(_OWORD *)(v95 + 48) = v118;
            }
            *(unsigned char *)(v95 + 64) = *(unsigned char *)(v96 + 64);
          }
          else
          {
            long long v115 = *(_OWORD *)(v96 + 48);
            *(_OWORD *)(v95 + 32) = *(_OWORD *)(v96 + 32);
            *(_OWORD *)(v95 + 48) = v115;
            *(unsigned char *)(v95 + 64) = *(unsigned char *)(v96 + 64);
            long long v116 = *(_OWORD *)(v96 + 16);
            *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
            *(_OWORD *)(v95 + 16) = v116;
          }
          break;
        case 4u:
          uint64_t v101 = *(void *)a2;
          uint64_t v102 = *(void *)(a2 + 8);
          uint64_t v103 = *(void *)(a2 + 16);
          uint64_t v104 = *(void *)(a2 + 24);
          uint64_t v105 = *(void *)(a2 + 32);
          uint64_t v106 = *(void *)(a2 + 40);
          uint64_t v107 = *(void *)(a2 + 48);
          uint64_t v108 = *(void *)(a2 + 56);
          uint64_t v140 = *(void *)(a2 + 64);
          uint64_t v145 = *(void *)(a2 + 72);
          unint64_t v150 = *(void *)(a2 + 80);
          unsigned __int8 v109 = *(unsigned char *)(a2 + 88);
          sub_247FF49AC(v101, v102, v103, v104, v105, v106, v107, v108, v140, v145, v150, v109);
          *(void *)a1 = v101;
          *(void *)(a1 + 8) = v102;
          *(void *)(a1 + 16) = v103;
          *(void *)(a1 + 24) = v104;
          *(void *)(a1 + 32) = v105;
          *(void *)(a1 + 40) = v106;
          *(void *)(a1 + 48) = v107;
          *(void *)(a1 + 56) = v108;
          *(void *)(a1 + 64) = v140;
          *(void *)(a1 + 72) = v145;
          *(void *)(a1 + 80) = v150;
          *(unsigned char *)(a1 + 88) = v109;
          break;
        default:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
          uint64_t v14 = *(void *)(a2 + 16);
          if (v14)
          {
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = v14;
            uint64_t v15 = *(void *)(a2 + 32);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(void *)(a1 + 32) = v15;
            uint64_t v16 = *(void *)(a2 + 48);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v16)
            {
              *(void *)(a1 + 40) = *(void *)(a2 + 40);
              *(void *)(a1 + 48) = v16;
              uint64_t v17 = *(void *)(a2 + 64);
              *(void *)(a1 + 56) = *(void *)(a2 + 56);
              *(void *)(a1 + 64) = v17;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v119 = *(_OWORD *)(a2 + 56);
              *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
              *(_OWORD *)(a1 + 56) = v119;
            }
            *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
          }
          else
          {
            long long v113 = *(_OWORD *)(a2 + 56);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(_OWORD *)(a1 + 56) = v113;
            *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
            long long v114 = *(_OWORD *)(a2 + 24);
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            *(_OWORD *)(a1 + 24) = v114;
          }
          uint64_t v120 = *(void *)(a2 + 88);
          if (v120)
          {
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = v120;
            uint64_t v121 = *(void *)(a2 + 104);
            *(void *)(a1 + 96) = *(void *)(a2 + 96);
            *(void *)(a1 + 104) = v121;
            uint64_t v122 = *(void *)(a2 + 120);
            *(void *)(a1 + 112) = *(void *)(a2 + 112);
            *(void *)(a1 + 120) = v122;
            uint64_t v123 = *(void *)(a2 + 136);
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            *(void *)(a1 + 136) = v123;
            uint64_t v124 = *(void *)(a2 + 152);
            *(void *)(a1 + 144) = *(void *)(a2 + 144);
            *(void *)(a1 + 152) = v124;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v125 = *(_OWORD *)(a2 + 128);
            *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 128) = v125;
            *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
            long long v126 = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 96) = v126;
          }
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          swift_bridgeObjectRetain();
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for V1Command(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2480E33D4(a1, type metadata accessor for V1Command);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v7 = *(void *)a2;
      uint64_t v8 = *(void *)(a2 + 8);
      uint64_t v9 = *(void *)(a2 + 16);
      char v10 = *(unsigned char *)(a2 + 24);
      sub_2480E4780(v7, v8, v9, v10);
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 24) = v10;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        type metadata accessor for V1Command.Response(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            uint64_t v12 = type metadata accessor for IdMSAccount();
            uint64_t v13 = *(int *)(v12 + 20);
            uint64_t v112 = a1 + v13;
            uint64_t v117 = v12;
            uint64_t v105 = a2 + v13;
            uint64_t v14 = sub_248174700();
            uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v99(v112, v105, v14);
            uint64_t v15 = *(int *)(v12 + 24);
            uint64_t v16 = a1 + v15;
            uint64_t v17 = a2 + v15;
            uint64_t v18 = *(void *)(v17 + 8);
            uint64_t v19 = *(void *)(v17 + 16);
            uint64_t v20 = *(void *)(v17 + 24);
            uint64_t v21 = *(void *)(v17 + 32);
            uint64_t v22 = *(void *)(v17 + 40);
            uint64_t v24 = *(void *)(v17 + 48);
            uint64_t v23 = *(void *)(v17 + 56);
            uint64_t v100 = *(void *)v17;
            uint64_t v106 = *(void *)(v17 + 64);
            LOBYTE(v112) = *(unsigned char *)(v17 + 72);
            sub_247FABF8C(*(void *)v17, v18, v19, v20, v21, v22, v24, v23, v106, v112);
            *(void *)uint64_t v16 = v100;
            *(void *)(v16 + 8) = v18;
            *(void *)(v16 + 16) = v19;
            *(void *)(v16 + 24) = v20;
            *(void *)(v16 + 32) = v21;
            *(void *)(v16 + 40) = v22;
            *(void *)(v16 + 48) = v24;
            *(void *)(v16 + 56) = v23;
            *(void *)(v16 + 64) = v106;
            *(unsigned char *)(v16 + 72) = v112;
            *(void *)(a1 + *(int *)(v117 + 28)) = *(void *)(a2 + *(int *)(v117 + 28));
            uint64_t v25 = type metadata accessor for SignInCommand.Response(0);
            *(void *)(a1 + *(int *)(v25 + 20)) = *(void *)(a2 + *(int *)(v25 + 20));
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 2u:
            type metadata accessor for AnisetteCommand.Response();
            int v26 = swift_getEnumCaseMultiPayload();
            uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[v26]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
            break;
          case 4u:
            uint64_t v29 = *(void *)a2;
            uint64_t v30 = *(void *)(a2 + 8);
            uint64_t v32 = *(void *)(a2 + 16);
            unint64_t v31 = *(void *)(a2 + 24);
            sub_247FF4F40(v29, v30, v32, v31);
            *(void *)a1 = v29;
            *(void *)(a1 + 8) = v30;
            *(void *)(a1 + 16) = v32;
            *(void *)(a1 + 24) = v31;
            break;
          default:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
            uint64_t v5 = *(void *)(a2 + 40);
            swift_bridgeObjectRetain();
            if (v5)
            {
              *(void *)(a1 + 32) = *(void *)(a2 + 32);
              *(void *)(a1 + 40) = *(void *)(a2 + 40);
              *(void *)(a1 + 48) = *(void *)(a2 + 48);
              *(void *)(a1 + 56) = *(void *)(a2 + 56);
              uint64_t v6 = *(void *)(a2 + 72);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v6)
              {
                *(void *)(a1 + 64) = *(void *)(a2 + 64);
                *(void *)(a1 + 72) = *(void *)(a2 + 72);
                *(void *)(a1 + 80) = *(void *)(a2 + 80);
                *(void *)(a1 + 88) = *(void *)(a2 + 88);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v92 = *(_OWORD *)(a2 + 80);
                *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
                *(_OWORD *)(a1 + 80) = v92;
              }
              *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
            }
            else
            {
              *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
              long long v83 = *(_OWORD *)(a2 + 48);
              long long v84 = *(_OWORD *)(a2 + 64);
              long long v85 = *(_OWORD *)(a2 + 80);
              *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
              *(_OWORD *)(a1 + 64) = v84;
              *(_OWORD *)(a1 + 80) = v85;
              *(_OWORD *)(a1 + 48) = v83;
            }
            break;
        }
      }
      else
      {
        type metadata accessor for V1Command.Request(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            uint64_t v33 = type metadata accessor for IdMSAccount();
            uint64_t v34 = *(int *)(v33 + 20);
            uint64_t v113 = a1 + v34;
            uint64_t v118 = v33;
            uint64_t v107 = a2 + v34;
            uint64_t v35 = sub_248174700();
            uint64_t v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v101(v113, v107, v35);
            uint64_t v36 = *(int *)(v33 + 24);
            uint64_t v37 = a1 + v36;
            uint64_t v38 = a2 + v36;
            uint64_t v39 = *(void *)v38;
            uint64_t v40 = *(void *)(v38 + 8);
            uint64_t v41 = *(void *)(v38 + 16);
            uint64_t v42 = *(void *)(v38 + 24);
            uint64_t v43 = *(void *)(v38 + 32);
            uint64_t v44 = *(void *)(v38 + 40);
            uint64_t v45 = *(void *)(v38 + 48);
            uint64_t v102 = *(void *)(v38 + 56);
            uint64_t v108 = *(void *)(v38 + 64);
            LOBYTE(v113) = *(unsigned char *)(v38 + 72);
            sub_247FABF8C(*(void *)v38, v40, v41, v42, v43, v44, v45, v102, v108, v113);
            *(void *)uint64_t v37 = v39;
            *(void *)(v37 + 8) = v40;
            *(void *)(v37 + 16) = v41;
            *(void *)(v37 + 24) = v42;
            *(void *)(v37 + 32) = v43;
            *(void *)(v37 + 40) = v44;
            *(void *)(v37 + 48) = v45;
            *(void *)(v37 + 56) = v102;
            *(void *)(v37 + 64) = v108;
            *(unsigned char *)(v37 + 72) = v113;
            *(void *)(a1 + *(int *)(v118 + 28)) = *(void *)(a2 + *(int *)(v118 + 28));
            long long v119 = (int *)type metadata accessor for SignInCommand.Request(0);
            uint64_t v46 = v119[5];
            uint64_t v47 = a1 + v46;
            uint64_t v48 = (void *)(a2 + v46);
            *(void *)uint64_t v47 = *v48;
            *(void *)(v47 + 8) = v48[1];
            *(void *)(v47 + 16) = v48[2];
            *(void *)(v47 + 24) = v48[3];
            *(void *)(v47 + 32) = v48[4];
            *(void *)(v47 + 40) = v48[5];
            *(void *)(v47 + 48) = v48[6];
            *(void *)(v47 + 56) = v48[7];
            *(void *)(v47 + 64) = v48[8];
            *(void *)(v47 + 72) = v48[9];
            long long v114 = v48 + 10;
            unint64_t v49 = v48[11];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v49 >> 60 == 15)
            {
              *(_OWORD *)(v47 + 80) = *(_OWORD *)v114;
            }
            else
            {
              uint64_t v82 = *v114;
              sub_247FB6C20(*v114, v49);
              *(void *)(v47 + 80) = v82;
              *(void *)(v47 + 88) = v49;
            }
            *(unsigned char *)(a1 + v119[6]) = *(unsigned char *)(a2 + v119[6]);
            *(unsigned char *)(a1 + v119[7]) = *(unsigned char *)(a2 + v119[7]);
            break;
          case 2u:
            uint64_t v50 = *(void *)a2;
            unint64_t v51 = *(void *)(a2 + 8);
            uint64_t v52 = *(void *)(a2 + 16);
            unint64_t v53 = *(void *)(a2 + 24);
            char v54 = *(unsigned char *)(a2 + 32);
            sub_2480E684C(v50, v51, v52, v53, v54);
            *(void *)a1 = v50;
            *(void *)(a1 + 8) = v51;
            *(void *)(a1 + 16) = v52;
            *(void *)(a1 + 24) = v53;
            *(unsigned char *)(a1 + 32) = v54;
            break;
          case 3u:
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = *(void *)(a2 + 8);
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(void *)(a1 + 24) = *(void *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            uint64_t v55 = type metadata accessor for IdMSAccount();
            uint64_t v56 = *(int *)(v55 + 20);
            uint64_t v115 = a1 + v56;
            uint64_t v120 = v55;
            uint64_t v109 = a2 + v56;
            uint64_t v57 = sub_248174700();
            uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v103(v115, v109, v57);
            uint64_t v58 = *(int *)(v55 + 24);
            uint64_t v59 = a1 + v58;
            uint64_t v60 = a2 + v58;
            uint64_t v61 = *(void *)(v60 + 8);
            uint64_t v62 = *(void *)(v60 + 16);
            uint64_t v63 = *(void *)(v60 + 24);
            uint64_t v64 = *(void *)(v60 + 32);
            uint64_t v65 = *(void *)(v60 + 40);
            uint64_t v67 = *(void *)(v60 + 48);
            uint64_t v66 = *(void *)(v60 + 56);
            uint64_t v104 = *(void *)v60;
            uint64_t v110 = *(void *)(v60 + 64);
            LOBYTE(v115) = *(unsigned char *)(v60 + 72);
            sub_247FABF8C(*(void *)v60, v61, v62, v63, v64, v65, v67, v66, v110, v115);
            *(void *)uint64_t v59 = v104;
            *(void *)(v59 + 8) = v61;
            *(void *)(v59 + 16) = v62;
            *(void *)(v59 + 24) = v63;
            *(void *)(v59 + 32) = v64;
            *(void *)(v59 + 40) = v65;
            *(void *)(v59 + 48) = v67;
            *(void *)(v59 + 56) = v66;
            *(void *)(v59 + 64) = v110;
            *(unsigned char *)(v59 + 72) = v115;
            *(void *)(a1 + *(int *)(v120 + 28)) = *(void *)(a2 + *(int *)(v120 + 28));
            uint64_t v68 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
            uint64_t v69 = a1 + v68;
            uint64_t v70 = a2 + v68;
            uint64_t v71 = *(void *)(a2 + v68 + 8);
            swift_bridgeObjectRetain();
            if (v71)
            {
              *(void *)uint64_t v69 = *(void *)v70;
              *(void *)(v69 + 8) = *(void *)(v70 + 8);
              *(void *)(v69 + 16) = *(void *)(v70 + 16);
              *(void *)(v69 + 24) = *(void *)(v70 + 24);
              uint64_t v72 = *(void *)(v70 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v72)
              {
                *(void *)(v69 + 32) = *(void *)(v70 + 32);
                *(void *)(v69 + 40) = *(void *)(v70 + 40);
                *(void *)(v69 + 48) = *(void *)(v70 + 48);
                *(void *)(v69 + 56) = *(void *)(v70 + 56);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v97 = *(_OWORD *)(v70 + 48);
                *(_OWORD *)(v69 + 32) = *(_OWORD *)(v70 + 32);
                *(_OWORD *)(v69 + 48) = v97;
              }
              *(unsigned char *)(v69 + 64) = *(unsigned char *)(v70 + 64);
            }
            else
            {
              *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
              long long v89 = *(_OWORD *)(v70 + 16);
              long long v90 = *(_OWORD *)(v70 + 32);
              long long v91 = *(_OWORD *)(v70 + 48);
              *(unsigned char *)(v69 + 64) = *(unsigned char *)(v70 + 64);
              *(_OWORD *)(v69 + 32) = v90;
              *(_OWORD *)(v69 + 48) = v91;
              *(_OWORD *)(v69 + 16) = v89;
            }
            break;
          case 4u:
            uint64_t v73 = *(void *)a2;
            uint64_t v74 = *(void *)(a2 + 8);
            uint64_t v75 = *(void *)(a2 + 16);
            uint64_t v76 = *(void *)(a2 + 24);
            uint64_t v77 = *(void *)(a2 + 32);
            uint64_t v78 = *(void *)(a2 + 40);
            uint64_t v79 = *(void *)(a2 + 48);
            uint64_t v80 = *(void *)(a2 + 56);
            uint64_t v111 = *(void *)(a2 + 64);
            uint64_t v116 = *(void *)(a2 + 72);
            unint64_t v121 = *(void *)(a2 + 80);
            unsigned __int8 v81 = *(unsigned char *)(a2 + 88);
            sub_247FF49AC(v73, v74, v75, v76, v77, v78, v79, v80, v111, v116, v121, v81);
            *(void *)a1 = v73;
            *(void *)(a1 + 8) = v74;
            *(void *)(a1 + 16) = v75;
            *(void *)(a1 + 24) = v76;
            *(void *)(a1 + 32) = v77;
            *(void *)(a1 + 40) = v78;
            *(void *)(a1 + 48) = v79;
            *(void *)(a1 + 56) = v80;
            *(void *)(a1 + 64) = v111;
            *(void *)(a1 + 72) = v116;
            *(void *)(a1 + 80) = v121;
            *(unsigned char *)(a1 + 88) = v81;
            break;
          default:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
            *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
            if (*(void *)(a2 + 16))
            {
              *(void *)(a1 + 8) = *(void *)(a2 + 8);
              *(void *)(a1 + 16) = *(void *)(a2 + 16);
              *(void *)(a1 + 24) = *(void *)(a2 + 24);
              *(void *)(a1 + 32) = *(void *)(a2 + 32);
              uint64_t v11 = *(void *)(a2 + 48);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v11)
              {
                *(void *)(a1 + 40) = *(void *)(a2 + 40);
                *(void *)(a1 + 48) = *(void *)(a2 + 48);
                *(void *)(a1 + 56) = *(void *)(a2 + 56);
                *(void *)(a1 + 64) = *(void *)(a2 + 64);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v93 = *(_OWORD *)(a2 + 56);
                *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
                *(_OWORD *)(a1 + 56) = v93;
              }
              *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
            }
            else
            {
              *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
              long long v86 = *(_OWORD *)(a2 + 24);
              long long v87 = *(_OWORD *)(a2 + 40);
              long long v88 = *(_OWORD *)(a2 + 56);
              *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
              *(_OWORD *)(a1 + 40) = v87;
              *(_OWORD *)(a1 + 56) = v88;
              *(_OWORD *)(a1 + 24) = v86;
            }
            if (*(void *)(a2 + 88))
            {
              *(void *)(a1 + 80) = *(void *)(a2 + 80);
              *(void *)(a1 + 88) = *(void *)(a2 + 88);
              *(void *)(a1 + 96) = *(void *)(a2 + 96);
              *(void *)(a1 + 104) = *(void *)(a2 + 104);
              *(void *)(a1 + 112) = *(void *)(a2 + 112);
              *(void *)(a1 + 120) = *(void *)(a2 + 120);
              *(void *)(a1 + 128) = *(void *)(a2 + 128);
              *(void *)(a1 + 136) = *(void *)(a2 + 136);
              *(void *)(a1 + 144) = *(void *)(a2 + 144);
              *(void *)(a1 + 152) = *(void *)(a2 + 152);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
              long long v94 = *(_OWORD *)(a2 + 96);
              long long v95 = *(_OWORD *)(a2 + 112);
              long long v96 = *(_OWORD *)(a2 + 144);
              *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
              *(_OWORD *)(a1 + 144) = v96;
              *(_OWORD *)(a1 + 96) = v94;
              *(_OWORD *)(a1 + 112) = v95;
            }
            *(void *)(a1 + 160) = *(void *)(a2 + 160);
            swift_bridgeObjectRetain();
            break;
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for V1Command(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v28 = type metadata accessor for V1Command.Response(0);
    int v29 = swift_getEnumCaseMultiPayload();
    switch(v29)
    {
      case 3:
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v60 - 8) + 32))(a1, a2, v60);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        type metadata accessor for AnisetteCommand.Response();
        int v61 = swift_getEnumCaseMultiPayload();
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[v61]);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v62 - 8) + 32))(a1, a2, v62);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        long long v30 = a2[3];
        a1[2] = a2[2];
        a1[3] = v30;
        a1[4] = a2[4];
        long long v31 = a2[1];
        *a1 = *a2;
        a1[1] = v31;
        uint64_t v32 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v33 = v32[5];
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        uint64_t v37 = v32[6];
        uint64_t v38 = (_OWORD *)((char *)a1 + v37);
        uint64_t v39 = (_OWORD *)((char *)a2 + v37);
        long long v40 = v39[3];
        v38[2] = v39[2];
        v38[3] = v40;
        *(_OWORD *)((char *)v38 + 57) = *(_OWORD *)((char *)v39 + 57);
        long long v41 = v39[1];
        *uint64_t v38 = *v39;
        v38[1] = v41;
        *(void *)((char *)a1 + v32[7]) = *(void *)((char *)a2 + v32[7]);
        uint64_t v42 = type metadata accessor for SignInCommand.Response(0);
        *(void *)((char *)a1 + *(int *)(v42 + 20)) = *(void *)((char *)a2 + *(int *)(v42 + 20));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
        break;
    }
    goto LABEL_17;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for V1Command.Request(0);
    int v8 = swift_getEnumCaseMultiPayload();
    if (v8 == 3)
    {
      long long v43 = a2[3];
      a1[2] = a2[2];
      a1[3] = v43;
      a1[4] = a2[4];
      long long v44 = a2[1];
      *a1 = *a2;
      a1[1] = v44;
      uint64_t v45 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v46 = v45[5];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      uint64_t v49 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      uint64_t v50 = v45[6];
      unint64_t v51 = (_OWORD *)((char *)a1 + v50);
      uint64_t v52 = (_OWORD *)((char *)a2 + v50);
      long long v53 = v52[3];
      v51[2] = v52[2];
      v51[3] = v53;
      *(_OWORD *)((char *)v51 + 57) = *(_OWORD *)((char *)v52 + 57);
      long long v54 = v52[1];
      *unint64_t v51 = *v52;
      v51[1] = v54;
      *(void *)((char *)a1 + v45[7]) = *(void *)((char *)a2 + v45[7]);
      uint64_t v55 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      long long v58 = *((_OWORD *)v57 + 3);
      *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
      *((_OWORD *)v56 + 3) = v58;
      v56[64] = v57[64];
      long long v59 = *((_OWORD *)v57 + 1);
      *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
      *((_OWORD *)v56 + 1) = v59;
      swift_storeEnumTagMultiPayload();
    }
    else if (v8 == 1)
    {
      long long v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      a1[4] = a2[4];
      long long v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      uint64_t v16 = v11[6];
      uint64_t v17 = (_OWORD *)((char *)a1 + v16);
      uint64_t v18 = (_OWORD *)((char *)a2 + v16);
      long long v19 = v18[3];
      void v17[2] = v18[2];
      v17[3] = v19;
      *(_OWORD *)((char *)v17 + 57) = *(_OWORD *)((char *)v18 + 57);
      long long v20 = v18[1];
      _OWORD *v17 = *v18;
      v17[1] = v20;
      *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
      uint64_t v21 = (int *)type metadata accessor for SignInCommand.Request(0);
      uint64_t v22 = v21[5];
      uint64_t v23 = (_OWORD *)((char *)a1 + v22);
      uint64_t v24 = (_OWORD *)((char *)a2 + v22);
      long long v25 = v24[3];
      v23[2] = v24[2];
      v23[3] = v25;
      long long v26 = v24[5];
      v23[4] = v24[4];
      v23[5] = v26;
      long long v27 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v27;
      *((unsigned char *)a1 + v21[6]) = *((unsigned char *)a2 + v21[6]);
      *((unsigned char *)a1 + v21[7]) = *((unsigned char *)a2 + v21[7]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
LABEL_17:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for V1Command(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2480E33D4((uint64_t)a1, type metadata accessor for V1Command);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v28 = type metadata accessor for V1Command.Response(0);
      int v29 = swift_getEnumCaseMultiPayload();
      switch(v29)
      {
        case 3:
          uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v60 - 8) + 32))(a1, a2, v60);
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          type metadata accessor for AnisetteCommand.Response();
          int v61 = swift_getEnumCaseMultiPayload();
          uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[v61]);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v62 - 8) + 32))(a1, a2, v62);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          long long v30 = a2[3];
          a1[2] = a2[2];
          a1[3] = v30;
          a1[4] = a2[4];
          long long v31 = a2[1];
          *a1 = *a2;
          a1[1] = v31;
          uint64_t v32 = (int *)type metadata accessor for IdMSAccount();
          uint64_t v33 = v32[5];
          uint64_t v34 = (char *)a1 + v33;
          uint64_t v35 = (char *)a2 + v33;
          uint64_t v36 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
          uint64_t v37 = v32[6];
          uint64_t v38 = (_OWORD *)((char *)a1 + v37);
          uint64_t v39 = (_OWORD *)((char *)a2 + v37);
          long long v40 = v39[3];
          v38[2] = v39[2];
          v38[3] = v40;
          *(_OWORD *)((char *)v38 + 57) = *(_OWORD *)((char *)v39 + 57);
          long long v41 = v39[1];
          *uint64_t v38 = *v39;
          v38[1] = v41;
          *(void *)((char *)a1 + v32[7]) = *(void *)((char *)a2 + v32[7]);
          uint64_t v42 = type metadata accessor for SignInCommand.Response(0);
          *(void *)((char *)a1 + *(int *)(v42 + 20)) = *(void *)((char *)a2 + *(int *)(v42 + 20));
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
          break;
      }
      goto LABEL_18;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for V1Command.Request(0);
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 3)
      {
        long long v43 = a2[3];
        a1[2] = a2[2];
        a1[3] = v43;
        a1[4] = a2[4];
        long long v44 = a2[1];
        *a1 = *a2;
        a1[1] = v44;
        uint64_t v45 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v46 = v45[5];
        uint64_t v47 = (char *)a1 + v46;
        uint64_t v48 = (char *)a2 + v46;
        uint64_t v49 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
        uint64_t v50 = v45[6];
        unint64_t v51 = (_OWORD *)((char *)a1 + v50);
        uint64_t v52 = (_OWORD *)((char *)a2 + v50);
        long long v53 = v52[3];
        v51[2] = v52[2];
        v51[3] = v53;
        *(_OWORD *)((char *)v51 + 57) = *(_OWORD *)((char *)v52 + 57);
        long long v54 = v52[1];
        *unint64_t v51 = *v52;
        v51[1] = v54;
        *(void *)((char *)a1 + v45[7]) = *(void *)((char *)a2 + v45[7]);
        uint64_t v55 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        long long v58 = *((_OWORD *)v57 + 3);
        *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
        *((_OWORD *)v56 + 3) = v58;
        v56[64] = v57[64];
        long long v59 = *((_OWORD *)v57 + 1);
        *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
        *((_OWORD *)v56 + 1) = v59;
        swift_storeEnumTagMultiPayload();
      }
      else if (v8 == 1)
      {
        long long v9 = a2[3];
        a1[2] = a2[2];
        a1[3] = v9;
        a1[4] = a2[4];
        long long v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        uint64_t v11 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v12 = v11[5];
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        uint64_t v16 = v11[6];
        uint64_t v17 = (_OWORD *)((char *)a1 + v16);
        uint64_t v18 = (_OWORD *)((char *)a2 + v16);
        long long v19 = v18[3];
        void v17[2] = v18[2];
        v17[3] = v19;
        *(_OWORD *)((char *)v17 + 57) = *(_OWORD *)((char *)v18 + 57);
        long long v20 = v18[1];
        _OWORD *v17 = *v18;
        v17[1] = v20;
        *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
        uint64_t v21 = (int *)type metadata accessor for SignInCommand.Request(0);
        uint64_t v22 = v21[5];
        uint64_t v23 = (_OWORD *)((char *)a1 + v22);
        uint64_t v24 = (_OWORD *)((char *)a2 + v22);
        long long v25 = v24[3];
        v23[2] = v24[2];
        v23[3] = v25;
        long long v26 = v24[5];
        v23[4] = v24[4];
        v23[5] = v26;
        long long v27 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v27;
        *((unsigned char *)a1 + v21[6]) = *((unsigned char *)a2 + v21[6]);
        *((unsigned char *)a1 + v21[7]) = *((unsigned char *)a2 + v21[7]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_2480E8F70()
{
  uint64_t result = type metadata accessor for V1Command.Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for V1Command.Response(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for V1Command.Request(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v11 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v11;
        uint64_t v12 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v12;
        uint64_t v13 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v13;
        uint64_t v14 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v14;
        uint64_t v15 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v15;
        uint64_t v16 = type metadata accessor for IdMSAccount();
        uint64_t v17 = *(int *)(v16 + 20);
        uint64_t v101 = a1 + v17;
        uint64_t v105 = v16;
        uint64_t v96 = a2 + v17;
        uint64_t v18 = sub_248174700();
        long long v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92(v101, v96, v18);
        uint64_t v19 = *(int *)(v16 + 24);
        uint64_t v20 = a1 + v19;
        uint64_t v21 = a2 + v19;
        uint64_t v22 = *(void *)v21;
        uint64_t v23 = *(void *)(v21 + 8);
        uint64_t v24 = *(void *)(v21 + 16);
        uint64_t v25 = *(void *)(v21 + 24);
        uint64_t v26 = *(void *)(v21 + 32);
        uint64_t v27 = *(void *)(v21 + 40);
        uint64_t v28 = *(void *)(v21 + 48);
        uint64_t v93 = *(void *)(v21 + 56);
        uint64_t v97 = *(void *)(v21 + 64);
        LOBYTE(v101) = *(unsigned char *)(v21 + 72);
        sub_247FABF8C(*(void *)v21, v23, v24, v25, v26, v27, v28, v93, v97, v101);
        *(void *)uint64_t v20 = v22;
        *(void *)(v20 + 8) = v23;
        *(void *)(v20 + 16) = v24;
        *(void *)(v20 + 24) = v25;
        *(void *)(v20 + 32) = v26;
        *(void *)(v20 + 40) = v27;
        *(void *)(v20 + 48) = v28;
        *(void *)(v20 + 56) = v93;
        *(void *)(v20 + 64) = v97;
        *(unsigned char *)(v20 + 72) = v101;
        *(void *)(a1 + *(int *)(v105 + 28)) = *(void *)(a2 + *(int *)(v105 + 28));
        uint64_t v106 = (int *)type metadata accessor for SignInCommand.Request(0);
        uint64_t v29 = v106[5];
        uint64_t v30 = a1 + v29;
        long long v31 = (void *)(a2 + v29);
        uint64_t v32 = v31[1];
        *(void *)uint64_t v30 = *v31;
        *(void *)(v30 + 8) = v32;
        uint64_t v33 = v31[3];
        *(void *)(v30 + 16) = v31[2];
        *(void *)(v30 + 24) = v33;
        uint64_t v34 = v31[5];
        *(void *)(v30 + 32) = v31[4];
        *(void *)(v30 + 40) = v34;
        uint64_t v35 = v31[7];
        *(void *)(v30 + 48) = v31[6];
        *(void *)(v30 + 56) = v35;
        uint64_t v36 = v31[9];
        *(void *)(v30 + 64) = v31[8];
        *(void *)(v30 + 72) = v36;
        uint64_t v102 = v31 + 10;
        unint64_t v37 = v31[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37 >> 60 == 15)
        {
          *(_OWORD *)(v30 + 80) = *(_OWORD *)v102;
        }
        else
        {
          uint64_t v77 = *v102;
          sub_247FB6C20(*v102, v37);
          *(void *)(v30 + 80) = v77;
          *(void *)(v30 + 88) = v37;
        }
        *(unsigned char *)(a1 + v106[6]) = *(unsigned char *)(a2 + v106[6]);
        *(unsigned char *)(a1 + v106[7]) = *(unsigned char *)(a2 + v106[7]);
        goto LABEL_25;
      case 2u:
        uint64_t v38 = *(void *)a2;
        unint64_t v39 = *(void *)(a2 + 8);
        uint64_t v40 = *(void *)(a2 + 16);
        unint64_t v41 = *(void *)(a2 + 24);
        char v42 = *(unsigned char *)(a2 + 32);
        sub_2480E684C(v38, v39, v40, v41, v42);
        *(void *)a1 = v38;
        *(void *)(a1 + 8) = v39;
        *(void *)(a1 + 16) = v40;
        *(void *)(a1 + 24) = v41;
        *(unsigned char *)(a1 + 32) = v42;
        goto LABEL_25;
      case 3u:
        uint64_t v43 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v43;
        uint64_t v44 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v44;
        uint64_t v45 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v45;
        uint64_t v46 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v46;
        uint64_t v47 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v47;
        uint64_t v48 = type metadata accessor for IdMSAccount();
        uint64_t v49 = *(int *)(v48 + 20);
        uint64_t v103 = a1 + v49;
        uint64_t v107 = v48;
        uint64_t v98 = a2 + v49;
        uint64_t v50 = sub_248174700();
        long long v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94(v103, v98, v50);
        uint64_t v51 = *(int *)(v48 + 24);
        uint64_t v52 = a1 + v51;
        uint64_t v53 = a2 + v51;
        uint64_t v54 = *(void *)(v53 + 8);
        uint64_t v55 = *(void *)(v53 + 16);
        uint64_t v56 = *(void *)(v53 + 24);
        uint64_t v57 = *(void *)(v53 + 32);
        uint64_t v58 = *(void *)(v53 + 40);
        uint64_t v60 = *(void *)(v53 + 48);
        uint64_t v59 = *(void *)(v53 + 56);
        uint64_t v95 = *(void *)v53;
        uint64_t v99 = *(void *)(v53 + 64);
        LOBYTE(v103) = *(unsigned char *)(v53 + 72);
        sub_247FABF8C(*(void *)v53, v54, v55, v56, v57, v58, v60, v59, v99, v103);
        *(void *)uint64_t v52 = v95;
        *(void *)(v52 + 8) = v54;
        *(void *)(v52 + 16) = v55;
        *(void *)(v52 + 24) = v56;
        *(void *)(v52 + 32) = v57;
        *(void *)(v52 + 40) = v58;
        *(void *)(v52 + 48) = v60;
        *(void *)(v52 + 56) = v59;
        *(void *)(v52 + 64) = v99;
        *(unsigned char *)(v52 + 72) = v103;
        *(void *)(a1 + *(int *)(v107 + 28)) = *(void *)(a2 + *(int *)(v107 + 28));
        uint64_t v61 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
        uint64_t v62 = a1 + v61;
        uint64_t v63 = a2 + v61;
        uint64_t v64 = *(void *)(a2 + v61 + 8);
        swift_bridgeObjectRetain();
        if (v64)
        {
          *(void *)uint64_t v62 = *(void *)v63;
          *(void *)(v62 + 8) = v64;
          uint64_t v65 = *(void *)(v63 + 24);
          *(void *)(v62 + 16) = *(void *)(v63 + 16);
          *(void *)(v62 + 24) = v65;
          uint64_t v66 = *(void *)(v63 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v66)
          {
            *(void *)(v62 + 32) = *(void *)(v63 + 32);
            *(void *)(v62 + 40) = v66;
            uint64_t v67 = *(void *)(v63 + 56);
            *(void *)(v62 + 48) = *(void *)(v63 + 48);
            *(void *)(v62 + 56) = v67;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v90 = *(_OWORD *)(v63 + 48);
            *(_OWORD *)(v62 + 32) = *(_OWORD *)(v63 + 32);
            *(_OWORD *)(v62 + 48) = v90;
          }
          *(unsigned char *)(v62 + 64) = *(unsigned char *)(v63 + 64);
        }
        else
        {
          long long v83 = *(_OWORD *)(v63 + 48);
          *(_OWORD *)(v62 + 32) = *(_OWORD *)(v63 + 32);
          *(_OWORD *)(v62 + 48) = v83;
          *(unsigned char *)(v62 + 64) = *(unsigned char *)(v63 + 64);
          long long v84 = *(_OWORD *)(v63 + 16);
          *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
          *(_OWORD *)(v62 + 16) = v84;
        }
        goto LABEL_25;
      case 4u:
        uint64_t v68 = *(void *)a2;
        uint64_t v69 = *(void *)(a2 + 8);
        uint64_t v70 = *(void *)(a2 + 16);
        uint64_t v71 = *(void *)(a2 + 24);
        uint64_t v72 = *(void *)(a2 + 32);
        uint64_t v73 = *(void *)(a2 + 40);
        uint64_t v74 = *(void *)(a2 + 48);
        uint64_t v75 = *(void *)(a2 + 56);
        uint64_t v100 = *(void *)(a2 + 64);
        uint64_t v104 = *(void *)(a2 + 72);
        unint64_t v108 = *(void *)(a2 + 80);
        unsigned __int8 v76 = *(unsigned char *)(a2 + 88);
        sub_247FF49AC(v68, v69, v70, v71, v72, v73, v74, v75, v100, v104, v108, v76);
        *(void *)a1 = v68;
        *(void *)(a1 + 8) = v69;
        *(void *)(a1 + 16) = v70;
        *(void *)(a1 + 24) = v71;
        *(void *)(a1 + 32) = v72;
        *(void *)(a1 + 40) = v73;
        *(void *)(a1 + 48) = v74;
        *(void *)(a1 + 56) = v75;
        *(void *)(a1 + 64) = v100;
        *(void *)(a1 + 72) = v104;
        *(void *)(a1 + 80) = v108;
        *(unsigned char *)(a1 + 88) = v76;
        goto LABEL_25;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
        uint64_t v6 = *(void *)(a2 + 16);
        if (v6)
        {
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = v6;
          uint64_t v7 = *(void *)(a2 + 32);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = v7;
          uint64_t v8 = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v8)
          {
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = v8;
            uint64_t v9 = *(void *)(a2 + 64);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            *(void *)(a1 + 64) = v9;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v85 = *(_OWORD *)(a2 + 56);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(_OWORD *)(a1 + 56) = v85;
          }
          *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
          uint64_t v80 = *(void *)(a2 + 88);
          if (v80) {
            goto LABEL_21;
          }
        }
        else
        {
          long long v78 = *(_OWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(_OWORD *)(a1 + 56) = v78;
          *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
          long long v79 = *(_OWORD *)(a2 + 24);
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          *(_OWORD *)(a1 + 24) = v79;
          uint64_t v80 = *(void *)(a2 + 88);
          if (v80)
          {
LABEL_21:
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = v80;
            uint64_t v86 = *(void *)(a2 + 104);
            *(void *)(a1 + 96) = *(void *)(a2 + 96);
            *(void *)(a1 + 104) = v86;
            uint64_t v87 = *(void *)(a2 + 120);
            *(void *)(a1 + 112) = *(void *)(a2 + 112);
            *(void *)(a1 + 120) = v87;
            uint64_t v88 = *(void *)(a2 + 136);
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            *(void *)(a1 + 136) = v88;
            uint64_t v89 = *(void *)(a2 + 152);
            *(void *)(a1 + 144) = *(void *)(a2 + 144);
            *(void *)(a1 + 152) = v89;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_22;
          }
        }
        long long v81 = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 128) = v81;
        *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
        long long v82 = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 96) = v82;
LABEL_22:
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        swift_bridgeObjectRetain();
LABEL_25:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
  }
  uint64_t v10 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

void destroy for V1Command.Request(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (*(void *)(a1 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 48))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      if (*(void *)(a1 + 88))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_18;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for IdMSAccount();
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_248174700();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      uint64_t v5 = a1 + *(int *)(v2 + 24);
      sub_247FAC1EC(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(unsigned char *)(v5 + 72));
      swift_bridgeObjectRelease();
      uint64_t v6 = a1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v6 + 88);
      if (v7 >> 60 != 15)
      {
        uint64_t v8 = *(void *)(v6 + 80);
        sub_247FB6CCC(v8, v7);
      }
      break;
    case 2u:
      uint64_t v9 = *(void *)a1;
      unint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = *(void *)(a1 + 16);
      unint64_t v12 = *(void *)(a1 + 24);
      char v13 = *(unsigned char *)(a1 + 32);
      sub_2480E32D8(v9, v10, v11, v12, v13);
      break;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = type metadata accessor for IdMSAccount();
      uint64_t v15 = a1 + *(int *)(v14 + 20);
      uint64_t v16 = sub_248174700();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      uint64_t v17 = a1 + *(int *)(v14 + 24);
      sub_247FAC1EC(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(void *)(v17 + 64), *(unsigned char *)(v17 + 72));
      swift_bridgeObjectRelease();
      uint64_t v18 = a1 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
      if (*(void *)(v18 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v18 + 40))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
        }
      }
      break;
    case 4u:
      sub_247FF4AC0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for V1Command.Request(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v9;
      uint64_t v10 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v10;
      uint64_t v11 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v11;
      uint64_t v12 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v12;
      uint64_t v13 = type metadata accessor for IdMSAccount();
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v98 = a1 + v14;
      uint64_t v102 = v13;
      uint64_t v93 = a2 + v14;
      uint64_t v15 = sub_248174700();
      uint64_t v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v89(v98, v93, v15);
      uint64_t v16 = *(int *)(v13 + 24);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = *(void *)(v18 + 8);
      uint64_t v20 = *(void *)(v18 + 16);
      uint64_t v21 = *(void *)(v18 + 24);
      uint64_t v22 = *(void *)(v18 + 32);
      uint64_t v23 = *(void *)(v18 + 40);
      uint64_t v25 = *(void *)(v18 + 48);
      uint64_t v24 = *(void *)(v18 + 56);
      uint64_t v90 = *(void *)v18;
      uint64_t v94 = *(void *)(v18 + 64);
      LOBYTE(v98) = *(unsigned char *)(v18 + 72);
      sub_247FABF8C(*(void *)v18, v19, v20, v21, v22, v23, v25, v24, v94, v98);
      *(void *)uint64_t v17 = v90;
      *(void *)(v17 + 8) = v19;
      *(void *)(v17 + 16) = v20;
      *(void *)(v17 + 24) = v21;
      *(void *)(v17 + 32) = v22;
      *(void *)(v17 + 40) = v23;
      *(void *)(v17 + 48) = v25;
      *(void *)(v17 + 56) = v24;
      *(void *)(v17 + 64) = v94;
      *(unsigned char *)(v17 + 72) = v98;
      *(void *)(a1 + *(int *)(v102 + 28)) = *(void *)(a2 + *(int *)(v102 + 28));
      uint64_t v103 = (int *)type metadata accessor for SignInCommand.Request(0);
      uint64_t v26 = v103[5];
      uint64_t v27 = a1 + v26;
      uint64_t v28 = (void *)(a2 + v26);
      uint64_t v29 = v28[1];
      *(void *)uint64_t v27 = *v28;
      *(void *)(v27 + 8) = v29;
      uint64_t v30 = v28[3];
      *(void *)(v27 + 16) = v28[2];
      *(void *)(v27 + 24) = v30;
      uint64_t v31 = v28[5];
      *(void *)(v27 + 32) = v28[4];
      *(void *)(v27 + 40) = v31;
      uint64_t v32 = v28[7];
      *(void *)(v27 + 48) = v28[6];
      *(void *)(v27 + 56) = v32;
      uint64_t v33 = v28[9];
      *(void *)(v27 + 64) = v28[8];
      *(void *)(v27 + 72) = v33;
      uint64_t v99 = v28 + 10;
      unint64_t v34 = v28[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34 >> 60 == 15)
      {
        *(_OWORD *)(v27 + 80) = *(_OWORD *)v99;
      }
      else
      {
        uint64_t v74 = *v99;
        sub_247FB6C20(*v99, v34);
        *(void *)(v27 + 80) = v74;
        *(void *)(v27 + 88) = v34;
      }
      *(unsigned char *)(a1 + v103[6]) = *(unsigned char *)(a2 + v103[6]);
      *(unsigned char *)(a1 + v103[7]) = *(unsigned char *)(a2 + v103[7]);
      goto LABEL_23;
    case 2u:
      uint64_t v35 = *(void *)a2;
      unint64_t v36 = *(void *)(a2 + 8);
      uint64_t v37 = *(void *)(a2 + 16);
      unint64_t v38 = *(void *)(a2 + 24);
      char v39 = *(unsigned char *)(a2 + 32);
      sub_2480E684C(v35, v36, v37, v38, v39);
      *(void *)a1 = v35;
      *(void *)(a1 + 8) = v36;
      *(void *)(a1 + 16) = v37;
      *(void *)(a1 + 24) = v38;
      *(unsigned char *)(a1 + 32) = v39;
      goto LABEL_23;
    case 3u:
      uint64_t v40 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v40;
      uint64_t v41 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v41;
      uint64_t v42 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v42;
      uint64_t v43 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v43;
      uint64_t v44 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v44;
      uint64_t v45 = type metadata accessor for IdMSAccount();
      uint64_t v46 = *(int *)(v45 + 20);
      uint64_t v100 = a1 + v46;
      uint64_t v104 = v45;
      uint64_t v95 = a2 + v46;
      uint64_t v47 = sub_248174700();
      long long v91 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v91(v100, v95, v47);
      uint64_t v48 = *(int *)(v45 + 24);
      uint64_t v49 = a1 + v48;
      uint64_t v50 = a2 + v48;
      uint64_t v51 = *(void *)(v50 + 8);
      uint64_t v52 = *(void *)(v50 + 16);
      uint64_t v53 = *(void *)(v50 + 24);
      uint64_t v54 = *(void *)(v50 + 32);
      uint64_t v55 = *(void *)(v50 + 40);
      uint64_t v57 = *(void *)(v50 + 48);
      uint64_t v56 = *(void *)(v50 + 56);
      uint64_t v92 = *(void *)v50;
      uint64_t v96 = *(void *)(v50 + 64);
      LOBYTE(v100) = *(unsigned char *)(v50 + 72);
      sub_247FABF8C(*(void *)v50, v51, v52, v53, v54, v55, v57, v56, v96, v100);
      *(void *)uint64_t v49 = v92;
      *(void *)(v49 + 8) = v51;
      *(void *)(v49 + 16) = v52;
      *(void *)(v49 + 24) = v53;
      *(void *)(v49 + 32) = v54;
      *(void *)(v49 + 40) = v55;
      *(void *)(v49 + 48) = v57;
      *(void *)(v49 + 56) = v56;
      *(void *)(v49 + 64) = v96;
      *(unsigned char *)(v49 + 72) = v100;
      *(void *)(a1 + *(int *)(v104 + 28)) = *(void *)(a2 + *(int *)(v104 + 28));
      uint64_t v58 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
      uint64_t v59 = a1 + v58;
      uint64_t v60 = a2 + v58;
      uint64_t v61 = *(void *)(a2 + v58 + 8);
      swift_bridgeObjectRetain();
      if (v61)
      {
        *(void *)uint64_t v59 = *(void *)v60;
        *(void *)(v59 + 8) = v61;
        uint64_t v62 = *(void *)(v60 + 24);
        *(void *)(v59 + 16) = *(void *)(v60 + 16);
        *(void *)(v59 + 24) = v62;
        uint64_t v63 = *(void *)(v60 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v63)
        {
          *(void *)(v59 + 32) = *(void *)(v60 + 32);
          *(void *)(v59 + 40) = v63;
          uint64_t v64 = *(void *)(v60 + 56);
          *(void *)(v59 + 48) = *(void *)(v60 + 48);
          *(void *)(v59 + 56) = v64;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v82 = *(_OWORD *)(v60 + 48);
          *(_OWORD *)(v59 + 32) = *(_OWORD *)(v60 + 32);
          *(_OWORD *)(v59 + 48) = v82;
        }
        *(unsigned char *)(v59 + 64) = *(unsigned char *)(v60 + 64);
      }
      else
      {
        long long v80 = *(_OWORD *)(v60 + 48);
        *(_OWORD *)(v59 + 32) = *(_OWORD *)(v60 + 32);
        *(_OWORD *)(v59 + 48) = v80;
        *(unsigned char *)(v59 + 64) = *(unsigned char *)(v60 + 64);
        long long v81 = *(_OWORD *)(v60 + 16);
        *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
        *(_OWORD *)(v59 + 16) = v81;
      }
      goto LABEL_23;
    case 4u:
      uint64_t v65 = *(void *)a2;
      uint64_t v66 = *(void *)(a2 + 8);
      uint64_t v67 = *(void *)(a2 + 16);
      uint64_t v68 = *(void *)(a2 + 24);
      uint64_t v69 = *(void *)(a2 + 32);
      uint64_t v70 = *(void *)(a2 + 40);
      uint64_t v71 = *(void *)(a2 + 48);
      uint64_t v72 = *(void *)(a2 + 56);
      uint64_t v97 = *(void *)(a2 + 64);
      uint64_t v101 = *(void *)(a2 + 72);
      unint64_t v105 = *(void *)(a2 + 80);
      unsigned __int8 v73 = *(unsigned char *)(a2 + 88);
      sub_247FF49AC(v65, v66, v67, v68, v69, v70, v71, v72, v97, v101, v105, v73);
      *(void *)a1 = v65;
      *(void *)(a1 + 8) = v66;
      *(void *)(a1 + 16) = v67;
      *(void *)(a1 + 24) = v68;
      *(void *)(a1 + 32) = v69;
      *(void *)(a1 + 40) = v70;
      *(void *)(a1 + 48) = v71;
      *(void *)(a1 + 56) = v72;
      *(void *)(a1 + 64) = v97;
      *(void *)(a1 + 72) = v101;
      *(void *)(a1 + 80) = v105;
      *(unsigned char *)(a1 + 88) = v73;
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
      uint64_t v4 = *(void *)(a2 + 16);
      if (v4)
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v4;
        uint64_t v5 = *(void *)(a2 + 32);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = v5;
        uint64_t v6 = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6)
        {
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = v6;
          uint64_t v7 = *(void *)(a2 + 64);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = v7;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v83 = *(_OWORD *)(a2 + 56);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          *(_OWORD *)(a1 + 56) = v83;
        }
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        uint64_t v77 = *(void *)(a2 + 88);
        if (v77) {
          goto LABEL_21;
        }
      }
      else
      {
        long long v75 = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 56) = v75;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        long long v76 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        *(_OWORD *)(a1 + 24) = v76;
        uint64_t v77 = *(void *)(a2 + 88);
        if (v77)
        {
LABEL_21:
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = v77;
          uint64_t v84 = *(void *)(a2 + 104);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(void *)(a1 + 104) = v84;
          uint64_t v85 = *(void *)(a2 + 120);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          *(void *)(a1 + 120) = v85;
          uint64_t v86 = *(void *)(a2 + 136);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          *(void *)(a1 + 136) = v86;
          uint64_t v87 = *(void *)(a2 + 152);
          *(void *)(a1 + 144) = *(void *)(a2 + 144);
          *(void *)(a1 + 152) = v87;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_22;
        }
      }
      long long v78 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v78;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      long long v79 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v79;
LABEL_22:
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      goto LABEL_23;
  }
}

uint64_t assignWithCopy for V1Command.Request(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2480E33D4(a1, type metadata accessor for V1Command.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v5 = type metadata accessor for IdMSAccount();
        uint64_t v6 = *(int *)(v5 + 20);
        uint64_t v76 = a1 + v6;
        uint64_t v80 = v5;
        uint64_t v71 = a2 + v6;
        uint64_t v7 = sub_248174700();
        uint64_t v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v67(v76, v71, v7);
        uint64_t v8 = *(int *)(v5 + 24);
        uint64_t v9 = a1 + v8;
        uint64_t v10 = a2 + v8;
        uint64_t v11 = *(void *)(v10 + 8);
        uint64_t v12 = *(void *)(v10 + 16);
        uint64_t v13 = *(void *)(v10 + 24);
        uint64_t v14 = *(void *)(v10 + 32);
        uint64_t v15 = *(void *)(v10 + 40);
        uint64_t v17 = *(void *)(v10 + 48);
        uint64_t v16 = *(void *)(v10 + 56);
        uint64_t v68 = *(void *)v10;
        uint64_t v72 = *(void *)(v10 + 64);
        LOBYTE(v76) = *(unsigned char *)(v10 + 72);
        sub_247FABF8C(*(void *)v10, v11, v12, v13, v14, v15, v17, v16, v72, v76);
        *(void *)uint64_t v9 = v68;
        *(void *)(v9 + 8) = v11;
        *(void *)(v9 + 16) = v12;
        *(void *)(v9 + 24) = v13;
        *(void *)(v9 + 32) = v14;
        *(void *)(v9 + 40) = v15;
        *(void *)(v9 + 48) = v17;
        *(void *)(v9 + 56) = v16;
        *(void *)(v9 + 64) = v72;
        *(unsigned char *)(v9 + 72) = v76;
        *(void *)(a1 + *(int *)(v80 + 28)) = *(void *)(a2 + *(int *)(v80 + 28));
        long long v81 = (int *)type metadata accessor for SignInCommand.Request(0);
        uint64_t v18 = v81[5];
        uint64_t v19 = a1 + v18;
        uint64_t v20 = (void *)(a2 + v18);
        *(void *)uint64_t v19 = *v20;
        *(void *)(v19 + 8) = v20[1];
        *(void *)(v19 + 16) = v20[2];
        *(void *)(v19 + 24) = v20[3];
        *(void *)(v19 + 32) = v20[4];
        *(void *)(v19 + 40) = v20[5];
        *(void *)(v19 + 48) = v20[6];
        *(void *)(v19 + 56) = v20[7];
        *(void *)(v19 + 64) = v20[8];
        *(void *)(v19 + 72) = v20[9];
        uint64_t v77 = v20 + 10;
        unint64_t v21 = v20[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21 >> 60 == 15)
        {
          *(_OWORD *)(v19 + 80) = *(_OWORD *)v77;
        }
        else
        {
          uint64_t v54 = *v77;
          sub_247FB6C20(*v77, v21);
          *(void *)(v19 + 80) = v54;
          *(void *)(v19 + 88) = v21;
        }
        *(unsigned char *)(a1 + v81[6]) = *(unsigned char *)(a2 + v81[6]);
        *(unsigned char *)(a1 + v81[7]) = *(unsigned char *)(a2 + v81[7]);
        goto LABEL_24;
      case 2u:
        uint64_t v22 = *(void *)a2;
        unint64_t v23 = *(void *)(a2 + 8);
        uint64_t v24 = *(void *)(a2 + 16);
        unint64_t v25 = *(void *)(a2 + 24);
        char v26 = *(unsigned char *)(a2 + 32);
        sub_2480E684C(v22, v23, v24, v25, v26);
        *(void *)a1 = v22;
        *(void *)(a1 + 8) = v23;
        *(void *)(a1 + 16) = v24;
        *(void *)(a1 + 24) = v25;
        *(unsigned char *)(a1 + 32) = v26;
        goto LABEL_24;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v27 = type metadata accessor for IdMSAccount();
        uint64_t v28 = *(int *)(v27 + 20);
        uint64_t v78 = a1 + v28;
        uint64_t v82 = v27;
        uint64_t v73 = a2 + v28;
        uint64_t v29 = sub_248174700();
        uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v69(v78, v73, v29);
        uint64_t v30 = *(int *)(v27 + 24);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = a2 + v30;
        uint64_t v33 = *(void *)(v32 + 8);
        uint64_t v34 = *(void *)(v32 + 16);
        uint64_t v35 = *(void *)(v32 + 24);
        uint64_t v36 = *(void *)(v32 + 32);
        uint64_t v37 = *(void *)(v32 + 40);
        uint64_t v39 = *(void *)(v32 + 48);
        uint64_t v38 = *(void *)(v32 + 56);
        uint64_t v70 = *(void *)v32;
        uint64_t v74 = *(void *)(v32 + 64);
        LOBYTE(v78) = *(unsigned char *)(v32 + 72);
        sub_247FABF8C(*(void *)v32, v33, v34, v35, v36, v37, v39, v38, v74, v78);
        *(void *)uint64_t v31 = v70;
        *(void *)(v31 + 8) = v33;
        *(void *)(v31 + 16) = v34;
        *(void *)(v31 + 24) = v35;
        *(void *)(v31 + 32) = v36;
        *(void *)(v31 + 40) = v37;
        *(void *)(v31 + 48) = v39;
        *(void *)(v31 + 56) = v38;
        *(void *)(v31 + 64) = v74;
        *(unsigned char *)(v31 + 72) = v78;
        *(void *)(a1 + *(int *)(v82 + 28)) = *(void *)(a2 + *(int *)(v82 + 28));
        uint64_t v40 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
        uint64_t v41 = a1 + v40;
        uint64_t v42 = a2 + v40;
        uint64_t v43 = *(void *)(a2 + v40 + 8);
        swift_bridgeObjectRetain();
        if (v43)
        {
          *(void *)uint64_t v41 = *(void *)v42;
          *(void *)(v41 + 8) = *(void *)(v42 + 8);
          *(void *)(v41 + 16) = *(void *)(v42 + 16);
          *(void *)(v41 + 24) = *(void *)(v42 + 24);
          uint64_t v44 = *(void *)(v42 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v44)
          {
            *(void *)(v41 + 32) = *(void *)(v42 + 32);
            *(void *)(v41 + 40) = *(void *)(v42 + 40);
            *(void *)(v41 + 48) = *(void *)(v42 + 48);
            *(void *)(v41 + 56) = *(void *)(v42 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v65 = *(_OWORD *)(v42 + 48);
            *(_OWORD *)(v41 + 32) = *(_OWORD *)(v42 + 32);
            *(_OWORD *)(v41 + 48) = v65;
          }
          *(unsigned char *)(v41 + 64) = *(unsigned char *)(v42 + 64);
        }
        else
        {
          *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
          long long v61 = *(_OWORD *)(v42 + 16);
          long long v62 = *(_OWORD *)(v42 + 32);
          long long v63 = *(_OWORD *)(v42 + 48);
          *(unsigned char *)(v41 + 64) = *(unsigned char *)(v42 + 64);
          *(_OWORD *)(v41 + 32) = v62;
          *(_OWORD *)(v41 + 48) = v63;
          *(_OWORD *)(v41 + 16) = v61;
        }
        goto LABEL_24;
      case 4u:
        uint64_t v45 = *(void *)a2;
        uint64_t v46 = *(void *)(a2 + 8);
        uint64_t v47 = *(void *)(a2 + 16);
        uint64_t v48 = *(void *)(a2 + 24);
        uint64_t v49 = *(void *)(a2 + 32);
        uint64_t v50 = *(void *)(a2 + 40);
        uint64_t v51 = *(void *)(a2 + 48);
        uint64_t v52 = *(void *)(a2 + 56);
        uint64_t v75 = *(void *)(a2 + 64);
        uint64_t v79 = *(void *)(a2 + 72);
        unint64_t v83 = *(void *)(a2 + 80);
        unsigned __int8 v53 = *(unsigned char *)(a2 + 88);
        sub_247FF49AC(v45, v46, v47, v48, v49, v50, v51, v52, v75, v79, v83, v53);
        *(void *)a1 = v45;
        *(void *)(a1 + 8) = v46;
        *(void *)(a1 + 16) = v47;
        *(void *)(a1 + 24) = v48;
        *(void *)(a1 + 32) = v49;
        *(void *)(a1 + 40) = v50;
        *(void *)(a1 + 48) = v51;
        *(void *)(a1 + 56) = v52;
        *(void *)(a1 + 64) = v75;
        *(void *)(a1 + 72) = v79;
        *(void *)(a1 + 80) = v83;
        *(unsigned char *)(a1 + 88) = v53;
        goto LABEL_24;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
        *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
        if (*(void *)(a2 + 16))
        {
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          uint64_t v4 = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v4)
          {
            *(void *)(a1 + 40) = *(void *)(a2 + 40);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = *(void *)(a2 + 56);
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v64 = *(_OWORD *)(a2 + 56);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(_OWORD *)(a1 + 56) = v64;
          }
          *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
          if (*(void *)(a2 + 88)) {
            goto LABEL_20;
          }
        }
        else
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          long long v55 = *(_OWORD *)(a2 + 24);
          long long v56 = *(_OWORD *)(a2 + 40);
          long long v57 = *(_OWORD *)(a2 + 56);
          *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
          *(_OWORD *)(a1 + 40) = v56;
          *(_OWORD *)(a1 + 56) = v57;
          *(_OWORD *)(a1 + 24) = v55;
          if (*(void *)(a2 + 88))
          {
LABEL_20:
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            *(void *)(a1 + 96) = *(void *)(a2 + 96);
            *(void *)(a1 + 104) = *(void *)(a2 + 104);
            *(void *)(a1 + 112) = *(void *)(a2 + 112);
            *(void *)(a1 + 120) = *(void *)(a2 + 120);
            *(void *)(a1 + 128) = *(void *)(a2 + 128);
            *(void *)(a1 + 136) = *(void *)(a2 + 136);
            *(void *)(a1 + 144) = *(void *)(a2 + 144);
            *(void *)(a1 + 152) = *(void *)(a2 + 152);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_21;
          }
        }
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        long long v58 = *(_OWORD *)(a2 + 96);
        long long v59 = *(_OWORD *)(a2 + 112);
        long long v60 = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 144) = v60;
        *(_OWORD *)(a1 + 96) = v58;
        *(_OWORD *)(a1 + 112) = v59;
LABEL_21:
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        swift_bridgeObjectRetain();
LABEL_24:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for V1Command.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    long long v26 = a2[3];
    a1[2] = a2[2];
    a1[3] = v26;
    a1[4] = a2[4];
    long long v27 = a2[1];
    *a1 = *a2;
    a1[1] = v27;
    uint64_t v28 = (int *)type metadata accessor for IdMSAccount();
    uint64_t v29 = v28[5];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = sub_248174700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    uint64_t v33 = v28[6];
    uint64_t v34 = (_OWORD *)((char *)a1 + v33);
    uint64_t v35 = (_OWORD *)((char *)a2 + v33);
    long long v36 = v35[3];
    v34[2] = v35[2];
    v34[3] = v36;
    *(_OWORD *)((char *)v34 + 57) = *(_OWORD *)((char *)v35 + 57);
    long long v37 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v37;
    *(void *)((char *)a1 + v28[7]) = *(void *)((char *)a2 + v28[7]);
    uint64_t v38 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
    uint64_t v39 = (char *)a1 + v38;
    uint64_t v40 = (char *)a2 + v38;
    long long v41 = *((_OWORD *)v40 + 3);
    *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
    *((_OWORD *)v39 + 3) = v41;
    v39[64] = v40[64];
    long long v42 = *((_OWORD *)v40 + 1);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v42;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    long long v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = (int *)type metadata accessor for IdMSAccount();
    uint64_t v10 = v9[5];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_248174700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    uint64_t v14 = v9[6];
    uint64_t v15 = (_OWORD *)((char *)a1 + v14);
    uint64_t v16 = (_OWORD *)((char *)a2 + v14);
    long long v17 = v16[3];
    v15[2] = v16[2];
    v15[3] = v17;
    *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v16 + 57);
    long long v18 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v18;
    *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
    uint64_t v19 = (int *)type metadata accessor for SignInCommand.Request(0);
    uint64_t v20 = v19[5];
    unint64_t v21 = (_OWORD *)((char *)a1 + v20);
    uint64_t v22 = (_OWORD *)((char *)a2 + v20);
    long long v23 = v22[3];
    void v21[2] = v22[2];
    v21[3] = v23;
    long long v24 = v22[5];
    v21[4] = v22[4];
    v21[5] = v24;
    long long v25 = v22[1];
    _OWORD *v21 = *v22;
    v21[1] = v25;
    *((unsigned char *)a1 + v19[6]) = *((unsigned char *)a2 + v19[6]);
    *((unsigned char *)a1 + v19[7]) = *((unsigned char *)a2 + v19[7]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for V1Command.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2480E33D4((uint64_t)a1, type metadata accessor for V1Command.Request);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      long long v26 = a2[3];
      a1[2] = a2[2];
      a1[3] = v26;
      a1[4] = a2[4];
      long long v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      uint64_t v28 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v29 = v28[5];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      uint64_t v33 = v28[6];
      uint64_t v34 = (_OWORD *)((char *)a1 + v33);
      uint64_t v35 = (_OWORD *)((char *)a2 + v33);
      long long v36 = v35[3];
      v34[2] = v35[2];
      v34[3] = v36;
      *(_OWORD *)((char *)v34 + 57) = *(_OWORD *)((char *)v35 + 57);
      long long v37 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v37;
      *(void *)((char *)a1 + v28[7]) = *(void *)((char *)a2 + v28[7]);
      uint64_t v38 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      long long v41 = *((_OWORD *)v40 + 3);
      *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
      *((_OWORD *)v39 + 3) = v41;
      v39[64] = v40[64];
      long long v42 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v42;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      a1[4] = a2[4];
      long long v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      uint64_t v14 = v9[6];
      uint64_t v15 = (_OWORD *)((char *)a1 + v14);
      uint64_t v16 = (_OWORD *)((char *)a2 + v14);
      long long v17 = v16[3];
      v15[2] = v16[2];
      v15[3] = v17;
      *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v16 + 57);
      long long v18 = v16[1];
      _OWORD *v15 = *v16;
      v15[1] = v18;
      *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
      uint64_t v19 = (int *)type metadata accessor for SignInCommand.Request(0);
      uint64_t v20 = v19[5];
      unint64_t v21 = (_OWORD *)((char *)a1 + v20);
      uint64_t v22 = (_OWORD *)((char *)a2 + v20);
      long long v23 = v22[3];
      void v21[2] = v22[2];
      v21[3] = v23;
      long long v24 = v22[5];
      v21[4] = v22[4];
      v21[5] = v24;
      long long v25 = v22[1];
      _OWORD *v21 = *v22;
      v21[1] = v25;
      *((unsigned char *)a1 + v19[6]) = *((unsigned char *)a2 + v19[6]);
      *((unsigned char *)a1 + v19[7]) = *((unsigned char *)a2 + v19[7]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2480EADE4()
{
  uint64_t result = type metadata accessor for SignInCommand.Request(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AuthenticateCommand.Request(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for V1Command.Response(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v12;
        uint64_t v13 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v13;
        uint64_t v14 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v14;
        uint64_t v15 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v15;
        uint64_t v16 = *(void *)(a2 + 72);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = v16;
        uint64_t v17 = type metadata accessor for IdMSAccount();
        uint64_t v18 = *(int *)(v17 + 20);
        uint64_t v46 = a1 + v18;
        uint64_t v47 = v17;
        uint64_t v44 = a2 + v18;
        uint64_t v19 = sub_248174700();
        long long v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v42(v46, v44, v19);
        uint64_t v20 = *(int *)(v17 + 24);
        uint64_t v21 = a1 + v20;
        uint64_t v22 = a2 + v20;
        uint64_t v23 = *(void *)v22;
        uint64_t v24 = *(void *)(v22 + 8);
        uint64_t v25 = *(void *)(v22 + 16);
        uint64_t v26 = *(void *)(v22 + 24);
        uint64_t v27 = *(void *)(v22 + 32);
        uint64_t v28 = *(void *)(v22 + 40);
        uint64_t v41 = *(void *)(v22 + 56);
        uint64_t v43 = *(void *)(v22 + 48);
        uint64_t v45 = *(void *)(v22 + 64);
        LOBYTE(v46) = *(unsigned char *)(v22 + 72);
        sub_247FABF8C(*(void *)v22, v24, v25, v26, v27, v28, v43, v41, v45, v46);
        *(void *)uint64_t v21 = v23;
        *(void *)(v21 + 8) = v24;
        *(void *)(v21 + 16) = v25;
        *(void *)(v21 + 24) = v26;
        *(void *)(v21 + 32) = v27;
        *(void *)(v21 + 40) = v28;
        *(void *)(v21 + 48) = v43;
        *(void *)(v21 + 56) = v41;
        *(void *)(v21 + 64) = v45;
        *(unsigned char *)(v21 + 72) = v46;
        *(void *)(a1 + *(int *)(v47 + 28)) = *(void *)(a2 + *(int *)(v47 + 28));
        uint64_t v29 = type metadata accessor for SignInCommand.Response(0);
        *(void *)(a1 + *(int *)(v29 + 20)) = *(void *)(a2 + *(int *)(v29 + 20));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        type metadata accessor for AnisetteCommand.Response();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[EnumCaseMultiPayload]);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
        break;
      case 4u:
        uint64_t v33 = *(void *)a2;
        uint64_t v34 = *(void *)(a2 + 8);
        uint64_t v36 = *(void *)(a2 + 16);
        unint64_t v35 = *(void *)(a2 + 24);
        sub_247FF4F40(v33, v34, v36, v35);
        *(void *)a1 = v33;
        *(void *)(a1 + 8) = v34;
        *(void *)(a1 + 16) = v36;
        *(void *)(a1 + 24) = v35;
        break;
      default:
        *(_WORD *)a1 = *(_WORD *)a2;
        uint64_t v6 = *(void *)(a2 + 16);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = v6;
        *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
        uint64_t v7 = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        if (v7)
        {
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v7;
          uint64_t v8 = *(void *)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v8;
          uint64_t v9 = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v9)
          {
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = v9;
            uint64_t v10 = *(void *)(a2 + 88);
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = v10;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v39 = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            *(_OWORD *)(a1 + 80) = v39;
          }
          *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        }
        else
        {
          long long v37 = *(_OWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          *(_OWORD *)(a1 + 80) = v37;
          *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
          long long v38 = *(_OWORD *)(a2 + 48);
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 48) = v38;
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for V1Command.Response(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t result = a1[5];
      if (result)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = a1[9];
        if (result)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_6;
        }
      }
      break;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for IdMSAccount();
      uint64_t v4 = (char *)a1 + *(int *)(v3 + 20);
      uint64_t v5 = sub_248174700();
      (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      uint64_t v6 = (char *)a1 + *(int *)(v3 + 24);
      sub_247FAC1EC(*(void *)v6, *((void *)v6 + 1), *((void *)v6 + 2), *((void *)v6 + 3), *((void *)v6 + 4), *((void *)v6 + 5), *((void *)v6 + 6), *((void *)v6 + 7), *((void *)v6 + 8), v6[72]);
      swift_bridgeObjectRelease();
      type metadata accessor for SignInCommand.Response(0);
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2:
      type metadata accessor for AnisetteCommand.Response();
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 2:
          uint64_t v7 = &qword_2692D7490;
          goto LABEL_18;
        case 3:
        case 4:
          uint64_t v7 = &qword_2692DA968;
          goto LABEL_18;
        case 5:
          uint64_t v7 = &qword_2692DA970;
          goto LABEL_18;
        default:
          return result;
      }
    case 3:
      uint64_t v7 = &qword_2692D6DA8;
LABEL_18:
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(v7);
      uint64_t v13 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v12 - 8) + 8);
      uint64_t result = v13(a1, v12);
      break;
    case 4:
      uint64_t v8 = *a1;
      uint64_t v9 = a1[1];
      uint64_t v10 = a1[2];
      unint64_t v11 = a1[3];
      uint64_t result = sub_247FF40F8(v8, v9, v10, v11);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for V1Command.Response(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v9;
      uint64_t v10 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v10;
      uint64_t v11 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v11;
      uint64_t v12 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v12;
      uint64_t v13 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v13;
      uint64_t v14 = type metadata accessor for IdMSAccount();
      uint64_t v15 = *(int *)(v14 + 20);
      uint64_t v43 = a1 + v15;
      uint64_t v44 = v14;
      uint64_t v41 = a2 + v15;
      uint64_t v16 = sub_248174700();
      long long v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v39(v43, v41, v16);
      uint64_t v17 = *(int *)(v14 + 24);
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      uint64_t v22 = *(void *)(v19 + 16);
      uint64_t v23 = *(void *)(v19 + 24);
      uint64_t v24 = *(void *)(v19 + 32);
      uint64_t v25 = *(void *)(v19 + 40);
      uint64_t v26 = *(void *)(v19 + 48);
      uint64_t v40 = *(void *)(v19 + 56);
      uint64_t v42 = *(void *)(v19 + 64);
      LOBYTE(v43) = *(unsigned char *)(v19 + 72);
      sub_247FABF8C(*(void *)v19, v21, v22, v23, v24, v25, v26, v40, v42, v43);
      *(void *)uint64_t v18 = v20;
      *(void *)(v18 + 8) = v21;
      *(void *)(v18 + 16) = v22;
      *(void *)(v18 + 24) = v23;
      *(void *)(v18 + 32) = v24;
      *(void *)(v18 + 40) = v25;
      *(void *)(v18 + 48) = v26;
      *(void *)(v18 + 56) = v40;
      *(void *)(v18 + 64) = v42;
      *(unsigned char *)(v18 + 72) = v43;
      *(void *)(a1 + *(int *)(v44 + 28)) = *(void *)(a2 + *(int *)(v44 + 28));
      uint64_t v27 = type metadata accessor for SignInCommand.Response(0);
      *(void *)(a1 + *(int *)(v27 + 20)) = *(void *)(a2 + *(int *)(v27 + 20));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      type metadata accessor for AnisetteCommand.Response();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[EnumCaseMultiPayload]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
      swift_storeEnumTagMultiPayload();
      break;
    case 3u:
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      break;
    case 4u:
      uint64_t v31 = *(void *)a2;
      uint64_t v32 = *(void *)(a2 + 8);
      uint64_t v34 = *(void *)(a2 + 16);
      unint64_t v33 = *(void *)(a2 + 24);
      sub_247FF4F40(v31, v32, v34, v33);
      *(void *)a1 = v31;
      *(void *)(a1 + 8) = v32;
      *(void *)(a1 + 16) = v34;
      *(void *)(a1 + 24) = v33;
      break;
    default:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v4 = *(void *)(a2 + 16);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = v4;
      *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
      uint64_t v5 = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      if (v5)
      {
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v5;
        uint64_t v6 = *(void *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = v6;
        uint64_t v7 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v7)
        {
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v7;
          uint64_t v8 = *(void *)(a2 + 88);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = v8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v37 = *(_OWORD *)(a2 + 80);
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
          *(_OWORD *)(a1 + 80) = v37;
        }
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      }
      else
      {
        long long v35 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v35;
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        long long v36 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v36;
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for V1Command.Response(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2480E33D4(a1, type metadata accessor for V1Command.Response);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        uint64_t v6 = type metadata accessor for IdMSAccount();
        uint64_t v7 = *(int *)(v6 + 20);
        uint64_t v36 = a1 + v7;
        uint64_t v37 = v6;
        uint64_t v34 = a2 + v7;
        uint64_t v8 = sub_248174700();
        uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32(v36, v34, v8);
        uint64_t v9 = *(int *)(v6 + 24);
        uint64_t v10 = a1 + v9;
        uint64_t v11 = a2 + v9;
        uint64_t v12 = *(void *)v11;
        uint64_t v13 = *(void *)(v11 + 8);
        uint64_t v14 = *(void *)(v11 + 16);
        uint64_t v15 = *(void *)(v11 + 24);
        uint64_t v16 = *(void *)(v11 + 32);
        uint64_t v17 = *(void *)(v11 + 40);
        uint64_t v18 = *(void *)(v11 + 48);
        uint64_t v33 = *(void *)(v11 + 56);
        uint64_t v35 = *(void *)(v11 + 64);
        LOBYTE(v36) = *(unsigned char *)(v11 + 72);
        sub_247FABF8C(*(void *)v11, v13, v14, v15, v16, v17, v18, v33, v35, v36);
        *(void *)uint64_t v10 = v12;
        *(void *)(v10 + 8) = v13;
        *(void *)(v10 + 16) = v14;
        *(void *)(v10 + 24) = v15;
        *(void *)(v10 + 32) = v16;
        *(void *)(v10 + 40) = v17;
        *(void *)(v10 + 48) = v18;
        *(void *)(v10 + 56) = v33;
        *(void *)(v10 + 64) = v35;
        *(unsigned char *)(v10 + 72) = v36;
        *(void *)(a1 + *(int *)(v37 + 28)) = *(void *)(a2 + *(int *)(v37 + 28));
        uint64_t v19 = type metadata accessor for SignInCommand.Response(0);
        *(void *)(a1 + *(int *)(v19 + 20)) = *(void *)(a2 + *(int *)(v19 + 20));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        type metadata accessor for AnisetteCommand.Response();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[EnumCaseMultiPayload]);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        break;
      case 4u:
        uint64_t v23 = *(void *)a2;
        uint64_t v24 = *(void *)(a2 + 8);
        uint64_t v26 = *(void *)(a2 + 16);
        unint64_t v25 = *(void *)(a2 + 24);
        sub_247FF4F40(v23, v24, v26, v25);
        *(void *)a1 = v23;
        *(void *)(a1 + 8) = v24;
        *(void *)(a1 + 16) = v26;
        *(void *)(a1 + 24) = v25;
        break;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
        uint64_t v4 = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        if (v4)
        {
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          uint64_t v5 = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v5)
          {
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v30 = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
            *(_OWORD *)(a1 + 80) = v30;
          }
          *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        }
        else
        {
          *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
          long long v27 = *(_OWORD *)(a2 + 48);
          long long v28 = *(_OWORD *)(a2 + 64);
          long long v29 = *(_OWORD *)(a2 + 80);
          *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
          *(_OWORD *)(a1 + 64) = v28;
          *(_OWORD *)(a1 + 80) = v29;
          *(_OWORD *)(a1 + 48) = v27;
        }
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for V1Command.Response(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      type metadata accessor for AnisetteCommand.Response();
      int v21 = swift_getEnumCaseMultiPayload();
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[v21]);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      long long v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      a1[4] = a2[4];
      long long v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v10 = v9[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      uint64_t v14 = v9[6];
      uint64_t v15 = (_OWORD *)((char *)a1 + v14);
      uint64_t v16 = (_OWORD *)((char *)a2 + v14);
      long long v17 = v16[3];
      v15[2] = v16[2];
      v15[3] = v17;
      *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v16 + 57);
      long long v18 = v16[1];
      _OWORD *v15 = *v16;
      v15[1] = v18;
      *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
      uint64_t v19 = type metadata accessor for SignInCommand.Response(0);
      *(void *)((char *)a1 + *(int *)(v19 + 20)) = *(void *)((char *)a2 + *(int *)(v19 + 20));
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for V1Command.Response(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2480E33D4((uint64_t)a1, type metadata accessor for V1Command.Response);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        type metadata accessor for AnisetteCommand.Response();
        int v21 = swift_getEnumCaseMultiPayload();
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(off_265237530[v21]);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        long long v7 = a2[3];
        a1[2] = a2[2];
        a1[3] = v7;
        a1[4] = a2[4];
        long long v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        uint64_t v9 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v10 = v9[5];
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        uint64_t v14 = v9[6];
        uint64_t v15 = (_OWORD *)((char *)a1 + v14);
        uint64_t v16 = (_OWORD *)((char *)a2 + v14);
        long long v17 = v16[3];
        v15[2] = v16[2];
        v15[3] = v17;
        *(_OWORD *)((char *)v15 + 57) = *(_OWORD *)((char *)v16 + 57);
        long long v18 = v16[1];
        _OWORD *v15 = *v16;
        v15[1] = v18;
        *(void *)((char *)a1 + v9[7]) = *(void *)((char *)a2 + v9[7]);
        uint64_t v19 = type metadata accessor for SignInCommand.Response(0);
        *(void *)((char *)a1 + *(int *)(v19 + 20)) = *(void *)((char *)a2 + *(int *)(v19 + 20));
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_2480EC1F4()
{
  type metadata accessor for SignInCommand.Response(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for AnisetteCommand.Response();
    if (v1 <= 0x3F)
    {
      sub_247FFBAA8();
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

uint64_t destroy for V1CommandError(uint64_t a1)
{
  return sub_2480E47A0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_2480E4780(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_2480E4780(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_2480E47A0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for V1CommandError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_2480E47A0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for V1CommandError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for V1CommandError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2480EC4CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2480EC4E4(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError()
{
  return &type metadata for V1CommandError;
}

uint64_t destroy for V1InfoHeader(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[7])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[18];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for V1InfoHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    uint64_t v9 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v9;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = *(void *)(a2 + 112);
    if (v10) {
      goto LABEL_3;
    }
LABEL_6:
    long long v16 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v16;
    uint64_t v12 = *(void *)(a2 + 144);
    if (v12) {
      goto LABEL_4;
    }
LABEL_7:
    long long v17 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v17;
    return a1;
  }
  long long v15 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  if (!v10) {
    goto LABEL_6;
  }
LABEL_3:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = *(void *)(a2 + 144);
  if (!v12) {
    goto LABEL_7;
  }
LABEL_4:
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  uint64_t v14 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = v13;
  *(void *)(a1 + 160) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for V1InfoHeader(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (long long *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v6)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    }
    else
    {
      sub_2480EC9DC(a1 + 48);
      long long v8 = *(_OWORD *)(a2 + 64);
      long long v7 = *(_OWORD *)(a2 + 80);
      long long v9 = *v5;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *(_OWORD *)(a1 + 64) = v8;
      *(_OWORD *)(a1 + 80) = v7;
      *uint64_t v4 = v9;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *v5;
    long long v11 = *(_OWORD *)(a2 + 64);
    long long v12 = *(_OWORD *)(a2 + 80);
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v11;
    *(_OWORD *)(a1 + 80) = v12;
    *uint64_t v4 = v10;
  }
  uint64_t v13 = (_OWORD *)(a1 + 104);
  uint64_t v14 = (_OWORD *)(a2 + 104);
  uint64_t v15 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v15)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2480ECA0C(a1 + 104);
      long long v16 = *(_OWORD *)(a2 + 120);
      *uint64_t v13 = *v14;
      *(_OWORD *)(a1 + 120) = v16;
    }
  }
  else if (v15)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 120);
    *uint64_t v13 = *v14;
    *(_OWORD *)(a1 + 120) = v17;
  }
  long long v18 = (_OWORD *)(a1 + 136);
  uint64_t v19 = (_OWORD *)(a2 + 136);
  uint64_t v20 = *(void *)(a2 + 144);
  if (*(void *)(a1 + 144))
  {
    if (v20)
    {
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2480ECA0C(a1 + 136);
      long long v21 = *(_OWORD *)(a2 + 152);
      _OWORD *v18 = *v19;
      *(_OWORD *)(a1 + 152) = v21;
    }
  }
  else if (v20)
  {
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)(a2 + 152);
    _OWORD *v18 = *v19;
    *(_OWORD *)(a1 + 152) = v22;
  }
  return a1;
}

uint64_t sub_2480EC9DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_2480ECA0C(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for V1InfoHeader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56))
  {
    uint64_t v7 = *(void *)(a2 + 56);
    if (v7)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      goto LABEL_6;
    }
    sub_2480EC9DC(a1 + 48);
  }
  long long v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_6:
  if (*(void *)(a1 + 112))
  {
    uint64_t v11 = *(void *)(a2 + 112);
    if (v11)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v11;
      swift_bridgeObjectRelease();
      uint64_t v12 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v12;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_2480ECA0C(a1 + 104);
  }
  long long v13 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v13;
LABEL_11:
  if (!*(void *)(a1 + 144))
  {
LABEL_15:
    long long v16 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v16;
    return a1;
  }
  uint64_t v14 = *(void *)(a2 + 144);
  if (!v14)
  {
    sub_2480ECA0C(a1 + 136);
    goto LABEL_15;
  }
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for V1InfoHeader(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for V1InfoHeader(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for V1InfoHeader()
{
  return &type metadata for V1InfoHeader;
}

uint64_t getEnumTagSinglePayload for V1InfoHeader.DeviceMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for V1InfoHeader.DeviceMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for V1InfoHeader.DeviceMetadata()
{
  return &type metadata for V1InfoHeader.DeviceMetadata;
}

uint64_t initializeWithCopy for V1InfoHeader.OSMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for V1InfoHeader.OSMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for V1InfoHeader.OSMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for V1InfoHeader.OSMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for V1InfoHeader.OSMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for V1InfoHeader.OSMetadata()
{
  return &type metadata for V1InfoHeader.OSMetadata;
}

void *initializeWithCopy for V1InfoHeader.BundleMetadata(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for V1InfoHeader.BundleMetadata(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for V1InfoHeader.BundleMetadata(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for V1InfoHeader.BundleMetadata()
{
  return &type metadata for V1InfoHeader.BundleMetadata;
}

ValueMetadata *type metadata accessor for V1InfoHeader.BundleMetadata.CodingKeys()
{
  return &type metadata for V1InfoHeader.BundleMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for V1InfoHeader.OSMetadata.CodingKeys()
{
  return &type metadata for V1InfoHeader.OSMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for V1InfoHeader.DeviceMetadata.CodingKeys()
{
  return &type metadata for V1InfoHeader.DeviceMetadata.CodingKeys;
}

unsigned char *_s12AppleIDSetup12V1InfoHeaderV10OSMetadataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480ED168);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for V1InfoHeader.CodingKeys()
{
  return &type metadata for V1InfoHeader.CodingKeys;
}

uint64_t getEnumTagSinglePayload for V1CommandError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for V1CommandError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480ED2FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError.CodingKeys()
{
  return &type metadata for V1CommandError.CodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnknownCodingKeys()
{
  return &type metadata for V1CommandError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.GenericCodingKeys()
{
  return &type metadata for V1CommandError.GenericCodingKeys;
}

unsigned char *_s12AppleIDSetup12V1InfoHeaderV14BundleMetadataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480ED420);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for V1CommandError.NestedCodingKeys()
{
  return &type metadata for V1CommandError.NestedCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedRequestCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedRequestCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedResponseCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedResponseCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UnexpectedFailureCodingKeys()
{
  return &type metadata for V1CommandError.UnexpectedFailureCodingKeys;
}

ValueMetadata *type metadata accessor for V1CommandError.UserCancelledCodingKeys()
{
  return &type metadata for V1CommandError.UserCancelledCodingKeys;
}

unsigned char *_s12AppleIDSetup12V1InfoHeaderV14DeviceMetadataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480ED564);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for V1Command.CodingKeys()
{
  return &type metadata for V1Command.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.RequestCodingKeys()
{
  return &type metadata for V1Command.RequestCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.ResponseCodingKeys()
{
  return &type metadata for V1Command.ResponseCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.FailureCodingKeys()
{
  return &type metadata for V1Command.FailureCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.CodingKeys()
{
  return &type metadata for V1Command.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.HandshakeCodingKeys()
{
  return &type metadata for V1Command.Response.HandshakeCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.SignInCodingKeys()
{
  return &type metadata for V1Command.Response.SignInCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.AnisetteCodingKeys()
{
  return &type metadata for V1Command.Response.AnisetteCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.AuthenticateCodingKeys()
{
  return &type metadata for V1Command.Response.AuthenticateCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Response.RepairCodingKeys()
{
  return &type metadata for V1Command.Response.RepairCodingKeys;
}

unsigned char *_s12AppleIDSetup9V1CommandO8ResponseO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480ED700);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for V1Command.Request.CodingKeys()
{
  return &type metadata for V1Command.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.HandshakeCodingKeys()
{
  return &type metadata for V1Command.Request.HandshakeCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.SignInCodingKeys()
{
  return &type metadata for V1Command.Request.SignInCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.AnisetteCodingKeys()
{
  return &type metadata for V1Command.Request.AnisetteCodingKeys;
}

ValueMetadata *type metadata accessor for V1Command.Request.AuthenticateCodingKeys()
{
  return &type metadata for V1Command.Request.AuthenticateCodingKeys;
}

unsigned char *_s12AppleIDSetup9V1CommandO17RequestCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2480ED814);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for V1Command.Request.RepairCodingKeys()
{
  return &type metadata for V1Command.Request.RepairCodingKeys;
}

unint64_t sub_2480ED850()
{
  unint64_t result = qword_2692DA978;
  if (!qword_2692DA978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA978);
  }
  return result;
}

unint64_t sub_2480ED8A8()
{
  unint64_t result = qword_2692DA980;
  if (!qword_2692DA980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA980);
  }
  return result;
}

unint64_t sub_2480ED900()
{
  unint64_t result = qword_2692DA988;
  if (!qword_2692DA988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA988);
  }
  return result;
}

unint64_t sub_2480ED958()
{
  unint64_t result = qword_2692DA990;
  if (!qword_2692DA990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA990);
  }
  return result;
}

unint64_t sub_2480ED9B0()
{
  unint64_t result = qword_2692DA998;
  if (!qword_2692DA998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA998);
  }
  return result;
}

unint64_t sub_2480EDA08()
{
  unint64_t result = qword_2692DA9A0;
  if (!qword_2692DA9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9A0);
  }
  return result;
}

unint64_t sub_2480EDA60()
{
  unint64_t result = qword_2692DA9A8;
  if (!qword_2692DA9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9A8);
  }
  return result;
}

unint64_t sub_2480EDAB8()
{
  unint64_t result = qword_2692DA9B0;
  if (!qword_2692DA9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9B0);
  }
  return result;
}

unint64_t sub_2480EDB10()
{
  unint64_t result = qword_2692DA9B8;
  if (!qword_2692DA9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9B8);
  }
  return result;
}

unint64_t sub_2480EDB68()
{
  unint64_t result = qword_2692DA9C0;
  if (!qword_2692DA9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9C0);
  }
  return result;
}

unint64_t sub_2480EDBC0()
{
  unint64_t result = qword_2692DA9C8;
  if (!qword_2692DA9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9C8);
  }
  return result;
}

unint64_t sub_2480EDC18()
{
  unint64_t result = qword_2692DA9D0;
  if (!qword_2692DA9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9D0);
  }
  return result;
}

unint64_t sub_2480EDC70()
{
  unint64_t result = qword_2692DA9D8;
  if (!qword_2692DA9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9D8);
  }
  return result;
}

unint64_t sub_2480EDCC8()
{
  unint64_t result = qword_2692DA9E0;
  if (!qword_2692DA9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9E0);
  }
  return result;
}

unint64_t sub_2480EDD20()
{
  unint64_t result = qword_2692DA9E8;
  if (!qword_2692DA9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9E8);
  }
  return result;
}

unint64_t sub_2480EDD78()
{
  unint64_t result = qword_2692DA9F0;
  if (!qword_2692DA9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9F0);
  }
  return result;
}

unint64_t sub_2480EDDD0()
{
  unint64_t result = qword_2692DA9F8;
  if (!qword_2692DA9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DA9F8);
  }
  return result;
}

unint64_t sub_2480EDE28()
{
  unint64_t result = qword_2692DAA00;
  if (!qword_2692DAA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA00);
  }
  return result;
}

unint64_t sub_2480EDE80()
{
  unint64_t result = qword_2692DAA08;
  if (!qword_2692DAA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA08);
  }
  return result;
}

unint64_t sub_2480EDED8()
{
  unint64_t result = qword_2692DAA10;
  if (!qword_2692DAA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA10);
  }
  return result;
}

unint64_t sub_2480EDF30()
{
  unint64_t result = qword_2692DAA18;
  if (!qword_2692DAA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA18);
  }
  return result;
}

unint64_t sub_2480EDF88()
{
  unint64_t result = qword_2692DAA20;
  if (!qword_2692DAA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA20);
  }
  return result;
}

unint64_t sub_2480EDFE0()
{
  unint64_t result = qword_2692DAA28;
  if (!qword_2692DAA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA28);
  }
  return result;
}

unint64_t sub_2480EE038()
{
  unint64_t result = qword_2692DAA30;
  if (!qword_2692DAA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA30);
  }
  return result;
}

unint64_t sub_2480EE090()
{
  unint64_t result = qword_2692DAA38;
  if (!qword_2692DAA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA38);
  }
  return result;
}

unint64_t sub_2480EE0E8()
{
  unint64_t result = qword_2692DAA40;
  if (!qword_2692DAA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA40);
  }
  return result;
}

unint64_t sub_2480EE140()
{
  unint64_t result = qword_2692DAA48;
  if (!qword_2692DAA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA48);
  }
  return result;
}

unint64_t sub_2480EE198()
{
  unint64_t result = qword_2692DAA50;
  if (!qword_2692DAA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA50);
  }
  return result;
}

unint64_t sub_2480EE1F0()
{
  unint64_t result = qword_2692DAA58;
  if (!qword_2692DAA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA58);
  }
  return result;
}

unint64_t sub_2480EE248()
{
  unint64_t result = qword_2692DAA60;
  if (!qword_2692DAA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA60);
  }
  return result;
}

unint64_t sub_2480EE2A0()
{
  unint64_t result = qword_2692DAA68;
  if (!qword_2692DAA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA68);
  }
  return result;
}

unint64_t sub_2480EE2F8()
{
  unint64_t result = qword_2692DAA70;
  if (!qword_2692DAA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA70);
  }
  return result;
}

unint64_t sub_2480EE350()
{
  unint64_t result = qword_2692DAA78;
  if (!qword_2692DAA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA78);
  }
  return result;
}

unint64_t sub_2480EE3A8()
{
  unint64_t result = qword_2692DAA80;
  if (!qword_2692DAA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA80);
  }
  return result;
}

unint64_t sub_2480EE400()
{
  unint64_t result = qword_2692DAA88;
  if (!qword_2692DAA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA88);
  }
  return result;
}

unint64_t sub_2480EE458()
{
  unint64_t result = qword_2692DAA90;
  if (!qword_2692DAA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA90);
  }
  return result;
}

unint64_t sub_2480EE4B0()
{
  unint64_t result = qword_2692DAA98;
  if (!qword_2692DAA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAA98);
  }
  return result;
}

unint64_t sub_2480EE508()
{
  unint64_t result = qword_2692DAAA0;
  if (!qword_2692DAAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAA0);
  }
  return result;
}

unint64_t sub_2480EE560()
{
  unint64_t result = qword_2692DAAA8;
  if (!qword_2692DAAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAA8);
  }
  return result;
}

unint64_t sub_2480EE5B8()
{
  unint64_t result = qword_2692DAAB0;
  if (!qword_2692DAAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAB0);
  }
  return result;
}

unint64_t sub_2480EE610()
{
  unint64_t result = qword_2692DAAB8;
  if (!qword_2692DAAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAB8);
  }
  return result;
}

unint64_t sub_2480EE668()
{
  unint64_t result = qword_2692DAAC0;
  if (!qword_2692DAAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAC0);
  }
  return result;
}

unint64_t sub_2480EE6C0()
{
  unint64_t result = qword_2692DAAC8;
  if (!qword_2692DAAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAC8);
  }
  return result;
}

unint64_t sub_2480EE718()
{
  unint64_t result = qword_2692DAAD0;
  if (!qword_2692DAAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAD0);
  }
  return result;
}

unint64_t sub_2480EE770()
{
  unint64_t result = qword_2692DAAD8;
  if (!qword_2692DAAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAD8);
  }
  return result;
}

unint64_t sub_2480EE7C8()
{
  unint64_t result = qword_2692DAAE0;
  if (!qword_2692DAAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAE0);
  }
  return result;
}

unint64_t sub_2480EE820()
{
  unint64_t result = qword_2692DAAE8;
  if (!qword_2692DAAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAE8);
  }
  return result;
}

unint64_t sub_2480EE878()
{
  unint64_t result = qword_2692DAAF0;
  if (!qword_2692DAAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAF0);
  }
  return result;
}

unint64_t sub_2480EE8D0()
{
  unint64_t result = qword_2692DAAF8;
  if (!qword_2692DAAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAAF8);
  }
  return result;
}

unint64_t sub_2480EE928()
{
  unint64_t result = qword_2692DAB00;
  if (!qword_2692DAB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB00);
  }
  return result;
}

unint64_t sub_2480EE980()
{
  unint64_t result = qword_2692DAB08;
  if (!qword_2692DAB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB08);
  }
  return result;
}

unint64_t sub_2480EE9D8()
{
  unint64_t result = qword_2692DAB10;
  if (!qword_2692DAB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB10);
  }
  return result;
}

unint64_t sub_2480EEA30()
{
  unint64_t result = qword_2692DAB18;
  if (!qword_2692DAB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB18);
  }
  return result;
}

unint64_t sub_2480EEA88()
{
  unint64_t result = qword_2692DAB20;
  if (!qword_2692DAB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB20);
  }
  return result;
}

unint64_t sub_2480EEAE0()
{
  unint64_t result = qword_2692DAB28;
  if (!qword_2692DAB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB28);
  }
  return result;
}

unint64_t sub_2480EEB38()
{
  unint64_t result = qword_2692DAB30;
  if (!qword_2692DAB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB30);
  }
  return result;
}

unint64_t sub_2480EEB90()
{
  unint64_t result = qword_2692DAB38;
  if (!qword_2692DAB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB38);
  }
  return result;
}

unint64_t sub_2480EEBE8()
{
  unint64_t result = qword_2692DAB40;
  if (!qword_2692DAB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB40);
  }
  return result;
}

unint64_t sub_2480EEC40()
{
  unint64_t result = qword_2692DAB48;
  if (!qword_2692DAB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB48);
  }
  return result;
}

unint64_t sub_2480EEC98()
{
  unint64_t result = qword_2692DAB50;
  if (!qword_2692DAB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB50);
  }
  return result;
}

unint64_t sub_2480EECF0()
{
  unint64_t result = qword_2692DAB58;
  if (!qword_2692DAB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB58);
  }
  return result;
}

unint64_t sub_2480EED48()
{
  unint64_t result = qword_2692DAB60;
  if (!qword_2692DAB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB60);
  }
  return result;
}

unint64_t sub_2480EEDA0()
{
  unint64_t result = qword_2692DAB68;
  if (!qword_2692DAB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB68);
  }
  return result;
}

unint64_t sub_2480EEDF8()
{
  unint64_t result = qword_2692DAB70;
  if (!qword_2692DAB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB70);
  }
  return result;
}

unint64_t sub_2480EEE50()
{
  unint64_t result = qword_2692DAB78;
  if (!qword_2692DAB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB78);
  }
  return result;
}

unint64_t sub_2480EEEA8()
{
  unint64_t result = qword_2692DAB80;
  if (!qword_2692DAB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB80);
  }
  return result;
}

unint64_t sub_2480EEF00()
{
  unint64_t result = qword_2692DAB88;
  if (!qword_2692DAB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB88);
  }
  return result;
}

unint64_t sub_2480EEF58()
{
  unint64_t result = qword_2692DAB90;
  if (!qword_2692DAB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB90);
  }
  return result;
}

unint64_t sub_2480EEFB0()
{
  unint64_t result = qword_2692DAB98;
  if (!qword_2692DAB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAB98);
  }
  return result;
}

unint64_t sub_2480EF008()
{
  unint64_t result = qword_2692DABA0;
  if (!qword_2692DABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABA0);
  }
  return result;
}

unint64_t sub_2480EF060()
{
  unint64_t result = qword_2692DABA8;
  if (!qword_2692DABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABA8);
  }
  return result;
}

unint64_t sub_2480EF0B8()
{
  unint64_t result = qword_2692DABB0;
  if (!qword_2692DABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABB0);
  }
  return result;
}

unint64_t sub_2480EF110()
{
  unint64_t result = qword_2692DABB8;
  if (!qword_2692DABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABB8);
  }
  return result;
}

unint64_t sub_2480EF168()
{
  unint64_t result = qword_2692DABC0;
  if (!qword_2692DABC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABC0);
  }
  return result;
}

unint64_t sub_2480EF1C0()
{
  unint64_t result = qword_2692DABC8;
  if (!qword_2692DABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABC8);
  }
  return result;
}

unint64_t sub_2480EF218()
{
  unint64_t result = qword_2692DABD0;
  if (!qword_2692DABD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABD0);
  }
  return result;
}

unint64_t sub_2480EF270()
{
  unint64_t result = qword_2692DABD8;
  if (!qword_2692DABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABD8);
  }
  return result;
}

unint64_t sub_2480EF2C8()
{
  unint64_t result = qword_2692DABE0;
  if (!qword_2692DABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABE0);
  }
  return result;
}

unint64_t sub_2480EF320()
{
  unint64_t result = qword_2692DABE8;
  if (!qword_2692DABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DABE8);
  }
  return result;
}

uint64_t sub_2480EF374(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B616873646E6168 && a2 == 0xE900000000000065;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E496E676973 && a2 == 0xE600000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574746573696E61 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69746E6568747561 && a2 == 0xEC00000065746163 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726961706572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2480EF5A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74736575716572 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2480EF700(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636972656E6567 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657473656ELL && a2 == 0xE600000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002481927E0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000248192800 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000248192820 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x636E614372657375 && a2 == 0xED000064656C6C65)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2480EF9E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2480EFAC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654D656369766564 && a2 == 0xEE00617461646174;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61646174654D736FLL && a2 == 0xEA00000000006174 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000248192840 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654D746E65696C63 && a2 == 0xEE00617461646174)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2480EFCC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2480EFE10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646C697562 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E7265746E497369 && a2 == 0xEA00000000006C61)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2480EFFC0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000248192860 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_2480F0104()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse);
  swift_beginAccess();
  BOOL v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_2480F01B4(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse);
  swift_beginAccess();
  unsigned int v4 = *v3;
  *id v3 = a1;
}

void sub_2480F0208(void **a1, void *a2)
{
  BOOL v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse);
  swift_beginAccess();
  unsigned int v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_2480F026C())()
{
  return j__swift_endAccess;
}

uint64_t sub_2480F02C8()
{
  *(void *)(v1 + 64) = v0;
  return MEMORY[0x270FA2498](sub_2480F02E8, 0, 0);
}

uint64_t sub_2480F02E8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse;
  v0[9] = OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse;
  id v3 = (void **)(v1 + v2);
  swift_beginAccess();
  unsigned int v4 = *v3;
  if (*v3)
  {
    uint64_t v5 = qword_26B13B728;
    id v6 = v4;
    if (v5 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_248174B90();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B13B730);
    int v8 = sub_248174B70();
    os_log_type_t v9 = sub_2481755C0();
    if (os_log_type_enabled(v8, v9))
    {
      long long v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v10 = 0;
      _os_log_impl(&dword_247F93000, v8, v9, "AISConfigurationStore using cached cachedChildCutOffResponse", v10, 2u);
      MEMORY[0x24C574E00](v10, -1, -1);
    }

    uint64_t v11 = (uint64_t (*)(id))v0[1];
    return v11(v6);
  }
  else
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_248174B90();
    v0[10] = __swift_project_value_buffer(v13, (uint64_t)qword_26B13B730);
    uint64_t v14 = sub_248174B70();
    os_log_type_t v15 = sub_2481755C0();
    if (os_log_type_enabled(v14, v15))
    {
      long long v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v16 = 0;
      _os_log_impl(&dword_247F93000, v14, v15, "AISConfigurationStore requesting fetchMaxAgeForChildAccount", v16, 2u);
      MEMORY[0x24C574E00](v16, -1, -1);
    }

    objc_msgSend(objc_allocWithZone(MEMORY[0x263F3C000]), sel_init);
    id v17 = objc_msgSend(self, sel_sharedSession);
    id v18 = objc_allocWithZone((Class)sub_248174980());
    v0[11] = sub_248174970();
    uint64_t v20 = (uint64_t (*)(void))((int)*MEMORY[0x263F3BD60] + MEMORY[0x263F3BD60]);
    uint64_t v19 = (void *)swift_task_alloc();
    v0[12] = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_2480F05E0;
    return v20();
  }
}

uint64_t sub_2480F05E0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = v1;
  swift_task_dealloc();
  if (v1) {
    unsigned int v4 = sub_2480F08B8;
  }
  else {
    unsigned int v4 = sub_2480F06F4;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_2480F06F4()
{
  uint64_t v2 = (id *)(v0 + 104);
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = (objc_class *)type metadata accessor for AISChildAccountCutOffAgeResponse();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR___AISChildAccountCutOffAgeResponse_wrappedResponse] = v1;
  *(void *)(v0 + 40) = v6;
  *(void *)(v0 + 48) = v5;
  id v7 = v1;
  id v8 = objc_msgSendSuper2((objc_super *)(v0 + 40), sel_init);
  os_log_type_t v9 = *(void **)(v4 + v3);
  *(void *)(v4 + v3) = v8;
  id v10 = v8;

  id v11 = v10;
  uint64_t v12 = sub_248174B70();
  os_log_type_t v13 = sub_2481755C0();
  if (os_log_type_enabled(v12, v13))
  {
    id v18 = *(void **)(v0 + 104);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 134217984;
    *(void *)(v0 + 56) = sub_248174990();
    sub_248175730();

    _os_log_impl(&dword_247F93000, v12, v13, "AISConfigurationStore fetchMaxAgeForChildAccount completed maxAge:%ld", v14, 0xCu);
    MEMORY[0x24C574E00](v14, -1, -1);

    uint64_t v2 = (id *)(v0 + 88);
  }
  else
  {
    os_log_type_t v15 = *(void **)(v0 + 88);
  }
  long long v16 = *(uint64_t (**)(id))(v0 + 8);
  return v16(v11);
}

uint64_t sub_2480F08B8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id AISChildAccountCutOffAgeResponse.__allocating_init(wrappedResponse:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___AISChildAccountCutOffAgeResponse_wrappedResponse] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for AISChildAccountCutOffAgeResponse()
{
  return self;
}

uint64_t sub_2480F0AF8(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  id v4 = a2;
  objc_super v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  void *v5 = v2;
  v5[1] = sub_2480F0BBC;
  v5[8] = v4;
  return MEMORY[0x270FA2498](sub_2480F02E8, 0, 0);
}

uint64_t sub_2480F0BBC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 16);
  uint64_t v7 = *v2;
  swift_task_dealloc();

  id v8 = *(void (***)(void, void, void))(v5 + 24);
  if (v3)
  {
    os_log_type_t v9 = (void *)sub_248174720();

    ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
    _Block_release(v8);
  }
  else
  {
    ((void (**)(void, void *, void))v8)[2](v8, a1, 0);
    _Block_release(v8);
  }
  id v10 = *(uint64_t (**)(void))(v7 + 8);
  return v10();
}

id AISConfigurationStore.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id AISConfigurationStore.init()()
{
  *(void *)&v0[OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISConfigurationStore();
  return objc_msgSendSuper2(&v2, sel_init);
}

id AISConfigurationStore.__deallocating_deinit()
{
  return sub_2480F1008(type metadata accessor for AISConfigurationStore);
}

id AISChildAccountCutOffAgeResponse.init(wrappedResponse:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___AISChildAccountCutOffAgeResponse_wrappedResponse] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for AISChildAccountCutOffAgeResponse();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_2480F0EF8()
{
  return sub_2481749A0();
}

uint64_t sub_2480F0F64()
{
  return sub_248174990();
}

void AISChildAccountCutOffAgeResponse.init()()
{
}

id AISChildAccountCutOffAgeResponse.__deallocating_deinit()
{
  return sub_2480F1008(type metadata accessor for AISChildAccountCutOffAgeResponse);
}

id sub_2480F1008(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_2480F1050@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for AISConfigurationStore()
{
  return self;
}

id sub_2480F10A4@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  objc_super v3 = (void **)(*a1 + OBJC_IVAR___AISConfigurationStore_cachedChildCutOffResponse);
  swift_beginAccess();
  id v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for AISConfigurationStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISConfigurationStore);
}

uint64_t dispatch thunk of AISConfigurationStore.cachedChildCutOffResponse.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of AISConfigurationStore.cachedChildCutOffResponse.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AISConfigurationStore.cachedChildCutOffResponse.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AISConfigurationStore.fetchMaxAgeForChildAccount()()
{
  objc_super v2 = *(int **)((*MEMORY[0x263F8EED0] & *v0) + 0x70);
  uint64_t v5 = (uint64_t (*)(void))((char *)v2 + *v2);
  objc_super v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *objc_super v3 = v1;
  v3[1] = sub_2480467F8;
  return v5();
}

uint64_t method lookup function for AISChildAccountCutOffAgeResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISChildAccountCutOffAgeResponse);
}

uint64_t dispatch thunk of AISChildAccountCutOffAgeResponse.__allocating_init(wrappedResponse:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of AISChildAccountCutOffAgeResponse.childCutOffAgeLocalized.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AISChildAccountCutOffAgeResponse.childCutOffAge.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t sub_2480F1358()
{
  _Block_release(*(const void **)(v0 + 16));

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2480F1398()
{
  objc_super v2 = *(const void **)(v0 + 16);
  objc_super v3 = *(void **)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_247FCB950;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_2692DAC28 + dword_2692DAC28);
  return v5(v2, v3);
}

uint64_t sub_2480F1450(unsigned __int8 a1, uint64_t *a2)
{
  int v3 = a1;
  if (a1 == 8) {
    return v3 == 8;
  }
  unsigned __int8 v5 = a1;
  uint64_t result = sub_2480F2A5C((uint64_t)&v5, a2);
  if (!v2) {
    return v3 == 8;
  }
  return result;
}

uint64_t sub_2480F149C(unint64_t a1, char a2, uint64_t *a3)
{
  if (a2) {
    return a2 & 1;
  }
  if (a1 <= 1)
  {
    uint64_t v5 = sub_248175130();
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *a3;
    *a3 = 0x8000000000000000;
    sub_247FB7E94(v5, 0x7079745F776F6C66, 0xE900000000000065, isUniquelyReferenced_nonNull_native);
    *a3 = v8;
    swift_bridgeObjectRelease();
    return a2 & 1;
  }
  uint64_t result = sub_248175D50();
  __break(1u);
  return result;
}

uint64_t sub_2480F159C()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2480F15D0(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_2480F1610())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F1664@<X0>(uint64_t a1@<X8>)
{
  return sub_2480F17A4(&OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate, a1);
}

uint64_t sub_2480F1670(uint64_t a1)
{
  return sub_2480F1800(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate);
}

uint64_t (*sub_2480F167C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F16D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73E0);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24801D250(a1, (uint64_t)v10);
  uint64_t v11 = *a2 + *a5;
  swift_beginAccess();
  sub_24809F780((uint64_t)v10, v11);
  return swift_endAccess();
}

uint64_t sub_2480F1798@<X0>(uint64_t a1@<X8>)
{
  return sub_2480F17A4(&OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate, a1);
}

uint64_t sub_2480F17A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_24801D250(v4, a2);
}

uint64_t sub_2480F17F4(uint64_t a1)
{
  return sub_2480F1800(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate);
}

uint64_t sub_2480F1800(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  sub_24809F780(a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_2480F1858())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F18B4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2480F18FC(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_2480F1948())()
{
  return j__swift_endAccess;
}

uint64_t sub_2480F19A4@<X0>(unsigned char *a1@<X8>)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_2480F19F4(char *a1)
{
  char v2 = *a1;
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
  uint64_t result = swift_beginAccess();
  *int v3 = v2;
  return result;
}

uint64_t (*sub_2480F1A48())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F1AA4()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2480F1AEC(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_2480F1B38())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F1B94()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2480F1BDC(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_2480F1C28())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F1C84()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2480F1CCC(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_2480F1D18())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F1D74()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_2480F1DBC(char a1)
{
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
  uint64_t result = swift_beginAccess();
  *int v3 = a1;
  return result;
}

uint64_t (*sub_2480F1E08())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F1E64()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2480F1EB0(uint64_t a1, char a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v5 = a1;
  *(unsigned char *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2480F1F10())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F1F6C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  *uint64_t v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480F1FD8()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2480F2030(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2480F2090())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2480F20EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73E0);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v74 = (uint64_t)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v75 = (uint64_t)v72 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v76 = (uint64_t)v72 - v7;
  uint64_t v8 = sub_248174850();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v73 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v72 - v12;
  unint64_t v14 = sub_247FB4894(MEMORY[0x263F8EE78]);
  swift_beginAccess();
  int v15 = *(unsigned __int8 *)(v1 + 16);
  if (v15 != 2)
  {
    id v16 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v15 & 1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v85 = v14;
    sub_247FB7E94((uint64_t)v16, 0x6F6363615F77656ELL, 0xEB00000000746E75, isUniquelyReferenced_nonNull_native);
    unint64_t v14 = v85;
    swift_bridgeObjectRelease();
  }
  id v18 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  swift_beginAccess();
  id v19 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *v18);
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v84 = v14;
  sub_247FB7E94((uint64_t)v19, 0x6574656C706D6F63, 0xEF70757465735F64, v20);
  v86[0] = v84;
  swift_bridgeObjectRelease();
  uint64_t v21 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
  swift_beginAccess();
  sub_2480F1450(*v21, v86);
  long long v22 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
  swift_beginAccess();
  int v23 = *v22;
  if (v23 != 2)
  {
    id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v23 & 1);
    uint64_t v25 = v86[0];
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v83 = v25;
    sub_247FB7E94((uint64_t)v24, 0x676173755F707061, 0xE900000000000065, v26);
    v86[0] = v83;
    swift_bridgeObjectRelease();
  }
  long long v27 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
  swift_beginAccess();
  int v28 = *v27;
  if (v28 != 2)
  {
    id v29 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v28 & 1);
    uint64_t v30 = v86[0];
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v82 = v30;
    sub_247FB7E94((uint64_t)v29, 0x625F6F745F6B7361, 0xEA00000000007975, v31);
    v86[0] = v82;
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
  swift_beginAccess();
  int v33 = *v32;
  if (v33 != 2)
  {
    id v34 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v33 & 1);
    uint64_t v35 = v86[0];
    char v36 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v81 = v35;
    sub_247FB7E94((uint64_t)v34, 0x6661735F6D6D6F63, 0xEB00000000797465, v36);
    v86[0] = v81;
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
  swift_beginAccess();
  int v38 = *v37;
  if (v38 != 2)
  {
    id v39 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v38 & 1);
    uint64_t v40 = v86[0];
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v80 = v40;
    sub_247FB7E94((uint64_t)v39, 0x645F6E6565726373, 0xEF65636E61747369, v41);
    v86[0] = v80;
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  swift_beginAccess();
  sub_2480F149C(*(void *)v42, *(unsigned char *)(v42 + 8), v86);
  uint64_t v43 = v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate;
  swift_beginAccess();
  uint64_t v44 = v76;
  sub_24801D250(v43, v76);
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v45(v44, 1, v8) == 1) {
    goto LABEL_14;
  }
  v72[0] = v43;
  v72[1] = v2;
  uint64_t v46 = v13;
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  v47(v46, v44, v8);
  uint64_t v48 = v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate;
  swift_beginAccess();
  uint64_t v49 = v48;
  uint64_t v44 = v75;
  sub_24801D250(v49, v75);
  if (v45(v44, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v46, v8);
    uint64_t v43 = v72[0];
LABEL_14:
    sub_2480F30EC(v44);
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v50 = sub_248174B90();
    __swift_project_value_buffer(v50, (uint64_t)qword_26B13B730);
    swift_retain_n();
    uint64_t v51 = sub_248174B70();
    os_log_type_t v52 = sub_2481755D0();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v79[0] = v54;
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v55 = v74;
      sub_24801D250(v43, v74);
      uint64_t v56 = sub_248175190();
      uint64_t v78 = sub_247FB6D24(v56, v57, v79);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v58 = v1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate;
      swift_beginAccess();
      sub_24801D250(v58, v55);
      uint64_t v59 = sub_248175190();
      uint64_t v77 = sub_247FB6D24(v59, v60, v79);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v51, v52, "AISChildSetupAnalyticsEvent startDate (%s) and endDate (%s) should not be nil", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v54, -1, -1);
      MEMORY[0x24C574E00](v53, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    return v86[0];
  }
  long long v61 = v73;
  v47(v73, v44, v8);
  sub_248174820();
  double v63 = v62;
  uint64_t result = sub_248174820();
  double v66 = v63 - v65;
  if ((~*(void *)&v66 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v66 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v66 < 9.22337204e18)
  {
    uint64_t v67 = v46;
    id v68 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, (uint64_t)v66);
    uint64_t v69 = v86[0];
    char v70 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v78 = v69;
    sub_247FB7E94((uint64_t)v68, 0x6570735F656D6974, 0xEA0000000000746ELL, v70);
    v86[0] = v78;
    swift_bridgeObjectRelease();
    uint64_t v71 = *(void (**)(char *, uint64_t))(v9 + 8);
    v71(v61, v8);
    v71(v67, v8);
    return v86[0];
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2480F2A5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_248175130();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *a2;
  *a2 = 0x8000000000000000;
  sub_247FB7E94(v3, 0xD000000000000012, 0x8000000248192B30, isUniquelyReferenced_nonNull_native);
  *a2 = v6;
  return swift_bridgeObjectRelease();
}

unint64_t AISChildSetupScreen.rawValue.getter()
{
  unint64_t result = 0x6F4C746E65726170;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6950796C696D6166;
      break;
    case 2:
      unint64_t result = 0x65646F6373736170;
      break;
    case 3:
      unint64_t result = 0x676F4C646C696863;
      break;
    case 4:
      unint64_t result = 0x657243646C696863;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 7:
      unint64_t result = 0x706552646C696863;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t AISChildSetupAnalyticsEvent.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  AISChildSetupAnalyticsEvent.init()();
  return v0;
}

uint64_t AISChildSetupAnalyticsEvent.init()()
{
  *(unsigned char *)(v0 + 16) = 2;
  uint64_t v1 = v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate;
  uint64_t v2 = sub_248174850();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate, 1, 1, v2);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen) = 8;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety) = 2;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance) = 2;
  uint64_t v4 = v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  *(void *)uint64_t v4 = 0;
  *(unsigned char *)(v4 + 8) = 1;
  uint64_t v5 = (void *)(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  void *v5 = 0xD000000000000030;
  v5[1] = 0x8000000248192A30;
  return v0;
}

uint64_t AISChildSetupAnalyticsEvent.deinit()
{
  sub_2480F30EC(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate);
  sub_2480F30EC(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AISChildSetupAnalyticsEvent.__deallocating_deinit()
{
  sub_2480F30EC(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate);
  sub_2480F30EC(v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_2480F2FB4()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2480F3010()
{
  return sub_2480F20EC();
}

AppleIDSetup::AISChildSetupScreen_optional __swiftcall AISChildSetupScreen.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_248175A30();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_2480F3090(unsigned __int8 *a1, char *a2)
{
  return sub_2481208B0(*a1, *a2);
}

uint64_t sub_2480F309C()
{
  return sub_248121874();
}

uint64_t sub_2480F30A8()
{
  return sub_2481214BC();
}

uint64_t sub_2480F30B0()
{
  return sub_248121874();
}

AppleIDSetup::AISChildSetupScreen_optional sub_2480F30B8(Swift::String *a1)
{
  return AISChildSetupScreen.init(rawValue:)(*a1);
}

unint64_t sub_2480F30C4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AISChildSetupScreen.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2480F30EC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2480F3150()
{
  unint64_t result = qword_2692DAC38;
  if (!qword_2692DAC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAC38);
  }
  return result;
}

uint64_t sub_2480F31A4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_2480F31EC(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_2480F3230@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_6Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate, a2);
}

uint64_t sub_2480F323C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2480F16D8(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate);
}

uint64_t sub_2480F325C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_6Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate, a2);
}

uint64_t keypath_get_6Tm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_24801D250(v4, a3);
}

uint64_t sub_2480F32BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_2480F16D8(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate);
}

uint64_t sub_2480F32DC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_2480F3330(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_2480F3380@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_12Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen, a2);
}

uint64_t sub_2480F338C(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_13Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
}

uint64_t sub_2480F3398@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_12Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage, a2);
}

uint64_t sub_2480F33A4(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_13Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
}

uint64_t sub_2480F33B0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_12Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy, a2);
}

uint64_t sub_2480F33BC(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_13Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
}

uint64_t sub_2480F33C8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_12Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety, a2);
}

uint64_t sub_2480F33D4(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_13Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
}

uint64_t sub_2480F33E0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_get_12Tm(a1, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance, a2);
}

uint64_t keypath_get_12Tm@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  uint64_t v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_2480F343C(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_13Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
}

uint64_t keypath_set_13Tm(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *a1;
  uint64_t v6 = (unsigned char *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *uint64_t v6 = v5;
  return result;
}

uint64_t sub_2480F3494@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 8);
  *(void *)a2 = *(void *)v3;
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_2480F34F0(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *a2 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v4 = v2;
  *(unsigned char *)(v4 + 8) = v3;
  return result;
}

uint64_t sub_2480F3550@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v3 = (void *)(*a1 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_name);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of AISAnalyticsEventProtocol.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AISAnalyticsEventProtocol.payload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AISAnalyticsEventProtocol.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2480F35E8()
{
  return type metadata accessor for AISChildSetupAnalyticsEvent();
}

uint64_t type metadata accessor for AISChildSetupAnalyticsEvent()
{
  uint64_t result = qword_2692DAC40;
  if (!qword_2692DAC40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2480F363C()
{
  sub_2480F3D04();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for AISChildSetupAnalyticsEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISChildSetupAnalyticsEvent);
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.isNewChildAccount.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.isNewChildAccount.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.isNewChildAccount.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.startDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.startDate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.startDate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.endDate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.endDate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.endDate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.completedSetup.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.completedSetup.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.completedSetup.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.lastViewedScreen.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.lastViewedScreen.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.lastViewedScreen.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.appUsage.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.appUsage.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.appUsage.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.askToBuy.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.askToBuy.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.askToBuy.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.commSafety.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 336))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.commSafety.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.commSafety.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.screenDistance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.screenDistance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.screenDistance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.flowType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.flowType.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 392))(a1, a2 & 1);
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.flowType.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.name.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.name.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.payload.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 432))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of AISChildSetupAnalyticsEvent.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 448))();
}

void sub_2480F3D04()
{
  if (!qword_2692DAC50)
  {
    sub_248174850();
    unint64_t v0 = sub_248175700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2692DAC50);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AISChildSetupScreen(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480F3E28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AISChildSetupScreen()
{
  return &type metadata for AISChildSetupScreen;
}

uint64_t sub_2480F3E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    do
    {
      uint64_t v5 = sub_248175160();
      uint64_t v7 = v6;
      if (v5 == sub_248175160() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = sub_248175CE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      v3 += 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_2480F3F3C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_248175CE0(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_248175CE0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_2480F4004(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = v2 - 1;
      uint64_t v4 = (long long *)(a2 + 56);
      BOOL v5 = (long long *)(a1 + 56);
      do
      {
        long long v21 = *(v5 - 1);
        long long v6 = v5[1];
        long long v22 = *v5;
        long long v23 = v6;
        long long v24 = v5[2];
        long long v15 = *(v4 - 1);
        long long v7 = v4[1];
        long long v16 = *v4;
        uint64_t v8 = *((void *)v5 - 3);
        uint64_t v25 = *((void *)v5 + 6);
        uint64_t v9 = *((void *)v4 + 6);
        uint64_t v14 = *((void *)v4 - 3);
        long long v17 = v7;
        long long v18 = v4[2];
        uint64_t v19 = v9;
        uint64_t v20 = v8;
        char v10 = _s12AppleIDSetup11SetupReportV2eeoiySbAC_ACtFZ_0(&v20, &v14);
        BOOL v12 = v3-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        v4 += 5;
        v5 += 5;
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

void static SetupReport.LocaleInfo.current.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_248174900();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  BOOL v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2481748F0();
  uint64_t v6 = sub_2481748D0();
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = sub_2481748E0();
  char v10 = (__CFString *)sub_248175130();
  CFPropertyListRef v11 = CFPreferencesCopyValue(v10, (CFStringRef)*MEMORY[0x263EFFE48], (CFStringRef)*MEMORY[0x263EFFE70], (CFStringRef)*MEMORY[0x263EFFE50]);

  if (v11
    && (v13[1] = v11, __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7160),
                      swift_dynamicCast()))
  {
    uint64_t v12 = v13[0];
  }
  else
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
  }
  *a1 = v6;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v12;
}

uint64_t sub_2480F4274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v57 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v50 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7580);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  long long v15 = (void **)((char *)&v50 - v14);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v56 = v8;
  uint64_t v53 = a1;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v17 = a1 + 64;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v17 - 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v16;
  int64_t v58 = 0;
  uint64_t v59 = v61 + 16;
  uint64_t v54 = (void (**)(char *, char *, uint64_t))(v61 + 32);
  uint64_t v55 = (void (**)(char *, uint64_t))(v61 + 8);
  uint64_t v51 = v17;
  int64_t v52 = (unint64_t)(v19 + 63) >> 6;
  int64_t v50 = v52 - 1;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      uint64_t v23 = (v21 - 1) & v21;
      unint64_t v24 = v22 | (v58 << 6);
LABEL_8:
      uint64_t v25 = *(void **)(*(void *)(v53 + 48) + 8 * v24);
      uint64_t v26 = v61;
      unint64_t v27 = *(void *)(v53 + 56) + *(void *)(v61 + 72) * v24;
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7588);
      (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(&v12[*(int *)(v28 + 48)], v27, v4);
      *(void *)uint64_t v12 = v25;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 0, 1, v28);
      id v29 = v25;
      goto LABEL_27;
    }
    int64_t v30 = v58 + 1;
    if (__OFADD__(v58, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v30 < v52)
    {
      unint64_t v31 = *(void *)(v51 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      int64_t v32 = v58 + 2;
      ++v58;
      if (v30 + 1 < v52)
      {
        unint64_t v31 = *(void *)(v51 + 8 * v32);
        if (v31) {
          goto LABEL_15;
        }
        int64_t v58 = v30 + 1;
        if (v30 + 2 < v52)
        {
          unint64_t v31 = *(void *)(v51 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_12;
          }
          int64_t v32 = v30 + 3;
          int64_t v58 = v30 + 2;
          if (v30 + 3 < v52) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7588);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v12, 1, 1, v33);
    uint64_t v23 = 0;
LABEL_27:
    sub_24802423C((uint64_t)v12, (uint64_t)v15);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7588);
    int v35 = (*(uint64_t (**)(void **, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v15, 1, v34);
    BOOL v36 = v35 == 1;
    if (v35 == 1) {
      return v36;
    }
    unint64_t v60 = v23;
    uint64_t v37 = v12;
    int v38 = (char *)v15 + *(int *)(v34 + 48);
    uint64_t v39 = a2;
    uint64_t v40 = v15;
    char v41 = *v15;
    uint64_t v42 = v56;
    (*v54)(v56, v38, v4);
    unint64_t v43 = sub_247FB63CC((uint64_t)v41);
    char v45 = v44;

    if ((v45 & 1) == 0)
    {
      (*v55)(v42, v4);
      return 0;
    }
    uint64_t v46 = v61;
    uint64_t v47 = v57;
    (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v57, *(void *)(v39 + 56) + *(void *)(v61 + 72) * v43, v4);
    sub_2480F83EC();
    char v48 = sub_248175100();
    uint64_t v49 = *(void (**)(char *, uint64_t))(v46 + 8);
    v49(v47, v4);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v49)(v42, v4);
    a2 = v39;
    uint64_t v12 = v37;
    long long v15 = v40;
    unint64_t v21 = v60;
    if ((v48 & 1) == 0) {
      return v36;
    }
  }
  unint64_t v31 = *(void *)(v51 + 8 * v32);
  if (v31)
  {
LABEL_15:
    int64_t v30 = v32;
LABEL_12:
    uint64_t v23 = (v31 - 1) & v31;
    unint64_t v24 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v58 = v30;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v30 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v30 >= v52)
    {
      int64_t v58 = v50;
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v51 + 8 * v30);
    ++v32;
    if (v31) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2480F4790(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v22 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v24 = result;
  while (1)
  {
    if (v6)
    {
      uint64_t v25 = (v6 - 1) & v6;
      int64_t v26 = v3;
      unint64_t v7 = __clz(__rbit64(v6)) | (v3 << 6);
      goto LABEL_23;
    }
    int64_t v8 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v8 >= v23) {
      return 1;
    }
    unint64_t v9 = *(void *)(v22 + 8 * v8);
    int64_t v10 = v3 + 1;
    if (!v9)
    {
      int64_t v10 = v3 + 2;
      if (v3 + 2 >= v23) {
        return 1;
      }
      unint64_t v9 = *(void *)(v22 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v3 + 3;
        if (v3 + 3 >= v23) {
          return 1;
        }
        unint64_t v9 = *(void *)(v22 + 8 * v10);
        if (!v9) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v25 = (v9 - 1) & v9;
    int64_t v26 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_23:
    uint64_t v12 = *(void **)(*(void *)(result + 48) + 8 * v7);
    uint64_t v13 = (uint64_t *)(*(void *)(result + 56) + 80 * v7);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain();
    id v16 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_247FB63CC((uint64_t)v16);
    LOBYTE(v12) = v18;

    if ((v12 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v19 = (void *)(*(void *)(a2 + 56) + 80 * v17);
    if (*v19 == v15 && v19[1] == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v24;
      unint64_t v6 = v25;
      int64_t v3 = v26;
    }
    else
    {
      char v21 = sub_248175CE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = v24;
      unint64_t v6 = v25;
      int64_t v3 = v26;
      if ((v21 & 1) == 0) {
        return 0;
      }
    }
  }
  uint64_t v11 = v3 + 4;
  if (v3 + 4 >= v23) {
    return 1;
  }
  unint64_t v9 = *(void *)(v22 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v3 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v23) {
      return 1;
    }
    unint64_t v9 = *(void *)(v22 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_2480F4A54(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v25 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v25) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v25) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v25) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v25) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v10);
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v10);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    id v18 = v14;
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_247FB63CC((uint64_t)v18);
    char v21 = v20;

    if ((v21 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v22 = (void *)(*(void *)(a2 + 56) + 16 * v19);
    if (*v22 == v17 && v22[1] == v16)
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v24 = sub_248175CE0();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v24 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v25) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v25) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

void __swiftcall SetupReport.into()(AISSetupReport *__return_ptr retstr)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[6];
  uint64_t v17 = v1[5];
  uint64_t v18 = v1[9];
  id v5 = objc_msgSend(objc_allocWithZone((Class)AISSetupReport), sel_init);
  type metadata accessor for AIDAServiceType(0);
  sub_2480C3BDC((unint64_t *)&qword_26B13BE70);
  uint64_t v6 = (void *)sub_248174FF0();
  objc_msgSend(v5, sel_setAccountAltDSIDsByService_, v6);

  if (v2) {
    uint64_t v7 = (void *)sub_248175130();
  }
  else {
    uint64_t v7 = 0;
  }
  objc_msgSend(v5, sel_setCreatedPersonaID_, v7);

  if (v3) {
    unint64_t v8 = (void *)sub_248175130();
  }
  else {
    unint64_t v8 = 0;
  }
  objc_msgSend(v5, sel_setAltDSID_, v8);

  if (v4)
  {
    id v9 = objc_allocWithZone((Class)AISSetupReportLocaleInfo);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v10 = objc_msgSend(v9, sel_init);
    int64_t v11 = (void *)sub_248175130();
    objc_msgSend(v10, sel_setLocaleID_, v11);

    unint64_t v12 = (void *)sub_2481752E0();
    objc_msgSend(v10, sel_setLanguages_, v12);

    int64_t v13 = (void *)sub_2481752E0();
    objc_msgSend(v10, sel_setKeyboards_, v13);

    sub_247FF6BFC(v17, v4);
  }
  else
  {
    id v10 = 0;
  }
  objc_msgSend(v5, sel_setPeerDeviceLocaleInfo_, v10);

  uint64_t v14 = *(void *)(v18 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    sub_248175910();
    uint64_t v15 = v18 + 56;
    do
    {
      SetupReport.into()(*(AISSetupReport **)(v15 - 24));
      sub_2481758F0();
      sub_248175920();
      sub_248175930();
      sub_248175900();
      v15 += 80;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  sub_2480F6288();
  uint64_t v16 = (void *)sub_2481752E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setChildReports_, v16);
}

uint64_t SetupReport.accountAltDSIDsByService.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetupReport.newPersonaID.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetupReport.altDSID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetupReport.peerDeviceLocaleInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_247FF6AA4(v2, v3);
}

uint64_t SetupReport.childReports.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetupReport.childReports.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*SetupReport.childReports.modify())()
{
  return nullsub_1;
}

__n128 SetupReport.init(accountAltDSIDsByService:newPersonaID:altDSID:peerDeviceLocaleInfo:childReports:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __n128 result = *(__n128 *)a6;
  long long v9 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a8 + 40) = *(_OWORD *)a6;
  *(void *)a8 = a1;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(_OWORD *)(a8 + 56) = v9;
  *(void *)(a8 + 72) = a7;
  return result;
}

uint64_t SetupReport.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[9];
  swift_bridgeObjectRetain();
  sub_248021420(a1, v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
LABEL_6:
    sub_248175E80();
    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_248175E80();
  if (!v5) {
    goto LABEL_6;
  }
LABEL_3:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_4:
    sub_248175E80();
    SetupReport.LocaleInfo.hash(into:)();
    goto LABEL_8;
  }
LABEL_7:
  sub_248175E80();
LABEL_8:
  swift_bridgeObjectRetain();
  sub_2480F6C60(a1, v7);
  return swift_bridgeObjectRelease();
}

unint64_t sub_2480F51CC(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F7372655077656ELL;
      break;
    case 2:
      unint64_t result = 0x44495344746C61;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0x706552646C696863;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2480F5298()
{
  return sub_2480F51CC(*v0);
}

uint64_t sub_2480F52A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480F8034(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480F52C8(uint64_t a1)
{
  unint64_t v2 = sub_2480F7128();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480F5304(uint64_t a1)
{
  unint64_t v2 = sub_2480F7128();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetupReport.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAC60);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v24 = v1[2];
  uint64_t v25 = v8;
  uint64_t v10 = v1[3];
  uint64_t v22 = v1[4];
  uint64_t v23 = v10;
  uint64_t v11 = v1[5];
  uint64_t v20 = v1[6];
  uint64_t v21 = v11;
  uint64_t v12 = v1[8];
  uint64_t v18 = v1[7];
  uint64_t v19 = v12;
  uint64_t v17 = v1[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480F7128();
  sub_248175F60();
  uint64_t v26 = v9;
  char v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAC70);
  sub_2480F717C();
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v14 = v20;
    uint64_t v13 = v21;
    LOBYTE(v26) = 1;
    sub_248175B60();
    LOBYTE(v26) = 2;
    sub_248175B60();
    uint64_t v26 = v13;
    uint64_t v27 = v14;
    uint64_t v28 = v18;
    uint64_t v29 = v19;
    char v30 = 3;
    sub_248016C64();
    sub_248175B90();
    uint64_t v26 = v17;
    char v30 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAC80);
    sub_2480F7300(&qword_2692DAC88, (void (*)(void))sub_2480F7214);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t SetupReport.hashValue.getter()
{
  uint64_t v1 = v0[9];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  long long v7 = *(_OWORD *)(v0 + 5);
  long long v8 = *(_OWORD *)(v0 + 7);
  uint64_t v9 = v1;
  sub_248175E50();
  SetupReport.hash(into:)((uint64_t)v3);
  return sub_248175EC0();
}

uint64_t SetupReport.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAC98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480F7128();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAC70);
  char v45 = 0;
  sub_2480F7268();
  sub_248175AF0();
  uint64_t v9 = v41;
  LOBYTE(v41) = 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_248175A70();
  uint64_t v40 = v11;
  uint64_t v36 = v10;
  uint64_t v38 = v9;
  LOBYTE(v41) = 2;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_248175A70();
  char v45 = 3;
  uint64_t v13 = v12;
  sub_248016CB8();
  swift_bridgeObjectRetain();
  sub_248175AA0();
  uint64_t v37 = v13;
  uint64_t v14 = v43;
  uint64_t v34 = v42;
  uint64_t v35 = v41;
  uint64_t v15 = v44;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAC80);
  uint64_t v32 = v14;
  char v45 = 4;
  uint64_t v39 = v15;
  sub_247FF6AA4(v35, v34);
  sub_2480F7300(&qword_2692DACA8, (void (*)(void))sub_2480F7370);
  sub_248175AF0();
  uint64_t v16 = v38;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v41;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  uint64_t v20 = v39;
  sub_247FF6AA4(v35, v34);
  swift_bridgeObjectRetain();
  uint64_t v21 = v19;
  uint64_t v22 = v20;
  sub_247FF6BFC(v21, v18);
  swift_bridgeObjectRelease();
  uint64_t v23 = v40;
  swift_bridgeObjectRelease();
  uint64_t v24 = v37;
  swift_bridgeObjectRelease();
  uint64_t v25 = v36;
  *a2 = v16;
  a2[1] = v25;
  uint64_t v26 = v33;
  uint64_t v27 = v34;
  a2[2] = v23;
  a2[3] = v26;
  uint64_t v28 = v35;
  a2[4] = v24;
  a2[5] = v28;
  uint64_t v29 = v32;
  a2[6] = v27;
  a2[7] = v29;
  a2[8] = v22;
  a2[9] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FF6BFC(v28, v27);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480F5B94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SetupReport.init(from:)(a1, a2);
}

uint64_t sub_2480F5BAC(void *a1)
{
  return SetupReport.encode(to:)(a1);
}

uint64_t sub_2480F5BC8()
{
  uint64_t v1 = v0[9];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  long long v7 = *(_OWORD *)(v0 + 5);
  long long v8 = *(_OWORD *)(v0 + 7);
  uint64_t v9 = v1;
  sub_248175E50();
  SetupReport.hash(into:)((uint64_t)v3);
  return sub_248175EC0();
}

uint64_t sub_2480F5C40()
{
  uint64_t v1 = v0[9];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  long long v7 = *(_OWORD *)(v0 + 5);
  long long v8 = *(_OWORD *)(v0 + 7);
  uint64_t v9 = v1;
  sub_248175E50();
  SetupReport.hash(into:)((uint64_t)v3);
  return sub_248175EC0();
}

AISSetupReportLocaleInfo __swiftcall SetupReport.LocaleInfo.into()()
{
  id v0 = objc_msgSend(objc_allocWithZone((Class)AISSetupReportLocaleInfo), sel_init);
  uint64_t v1 = (void *)sub_248175130();
  objc_msgSend(v0, sel_setLocaleID_, v1);

  uint64_t v2 = (void *)sub_2481752E0();
  objc_msgSend(v0, sel_setLanguages_, v2);

  uint64_t v3 = (void *)sub_2481752E0();
  objc_msgSend(v0, sel_setKeyboards_, v3);

  long long v7 = (objc_class *)v0;
  result._keyboards = v6;
  result._languages = v5;
  result._localeID = v4;
  result.super.isa = v7;
  return result;
}

uint64_t AISSetupReport.into()@<X0>(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_accountAltDSIDsByService);
  type metadata accessor for AIDAServiceType(0);
  sub_2480C3BDC((unint64_t *)&qword_26B13BE70);
  uint64_t v4 = sub_248175010();

  id v5 = objc_msgSend(v1, sel_createdPersonaID);
  if (v5)
  {
    long long v6 = v5;
    uint64_t v7 = sub_248175160();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  id v10 = objc_msgSend(v1, sel_altDSID);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_248175160();
    uint64_t v47 = v13;
    uint64_t v48 = v12;
  }
  else
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
  }
  id v14 = objc_msgSend(v1, sel_peerDeviceLocaleInfo);
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = objc_msgSend(v14, sel_localeID);
    uint64_t v17 = sub_248175160();
    uint64_t v45 = v18;
    uint64_t v46 = v17;

    id v19 = objc_msgSend(v15, sel_languages);
    uint64_t v44 = sub_2481752F0();

    id v20 = objc_msgSend(v15, sel_keyboards);
    uint64_t v43 = sub_2481752F0();
  }
  else
  {
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
  }
  id v21 = objc_msgSend(v1, sel_childReports);
  sub_2480F6288();
  unint64_t v22 = sub_2481752F0();

  if (!(v22 >> 62))
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v49 = v9;
    if (v23) {
      goto LABEL_12;
    }
LABEL_22:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x263F8EE78];
LABEL_23:
    *a1 = v4;
    a1[1] = v7;
    a1[2] = v49;
    a1[3] = v48;
    a1[4] = v47;
    a1[5] = v46;
    a1[6] = v45;
    a1[7] = v44;
    a1[8] = v43;
    a1[9] = v26;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_2481759D0();
  swift_bridgeObjectRelease();
  uint64_t v49 = v9;
  if (!v23) {
    goto LABEL_22;
  }
LABEL_12:
  uint64_t v56 = MEMORY[0x263F8EE78];
  uint64_t result = sub_248015138(0, v23 & ~(v23 >> 63), 0);
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v42 = a1;
    uint64_t v25 = 0;
    uint64_t v26 = v56;
    do
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x24C573D60](v25, v22);
      }
      else {
        id v27 = *(id *)(v22 + 8 * v25 + 32);
      }
      uint64_t v28 = v27;
      AISSetupReport.into()(&v50);

      uint64_t v29 = v50;
      long long v30 = v51;
      long long v31 = v52;
      long long v32 = v53;
      long long v33 = v54;
      uint64_t v34 = v55;
      uint64_t v56 = v26;
      unint64_t v36 = *(void *)(v26 + 16);
      unint64_t v35 = *(void *)(v26 + 24);
      if (v36 >= v35 >> 1)
      {
        long long v40 = v52;
        long long v41 = v51;
        long long v38 = v54;
        long long v39 = v53;
        sub_248015138(v35 > 1, v36 + 1, 1);
        long long v33 = v38;
        long long v32 = v39;
        long long v31 = v40;
        long long v30 = v41;
        uint64_t v26 = v56;
      }
      *(void *)(v26 + 16) = v36 + 1;
      unint64_t v37 = v26 + 80 * v36;
      *(void *)(v37 + 32) = v29;
      ++v25;
      *(_OWORD *)(v37 + 40) = v30;
      *(_OWORD *)(v37 + 56) = v31;
      *(_OWORD *)(v37 + 72) = v32;
      *(_OWORD *)(v37 + 88) = v33;
      *(void *)(v37 + 104) = v34;
    }
    while (v23 != v25);
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v42;
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

AppleIDSetup::SetupReport::LocaleInfo __swiftcall AISSetupReportLocaleInfo.into()()
{
  uint64_t v2 = v0;
  id v3 = objc_msgSend(v1, sel_localeID);
  uint64_t v4 = sub_248175160();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(v1, sel_languages);
  uint64_t v8 = sub_2481752F0();

  id v9 = objc_msgSend(v1, sel_keyboards);
  uint64_t v10 = sub_2481752F0();

  *uint64_t v2 = v4;
  v2[1] = v6;
  v2[2] = v8;
  v2[3] = v10;
  result.keyboards._rawValue = v14;
  result.languages._rawValue = v13;
  result.localeID._object = v12;
  result.localeID._countAndFlagsBits = v11;
  return result;
}

uint64_t SetupReport.LocaleInfo.localeID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetupReport.LocaleInfo.languages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetupReport.LocaleInfo.keyboards.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SetupReport.LocaleInfo.preferredLanguage.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

AppleIDSetup::SetupReport::LocaleInfo __swiftcall SetupReport.LocaleInfo.init(localeID:languages:keyboards:)(Swift::String localeID, Swift::OpaquePointer languages, Swift::OpaquePointer keyboards)
{
  *(Swift::String *)uint64_t v3 = localeID;
  *(Swift::OpaquePointer *)(v3 + 16) = languages;
  *(Swift::OpaquePointer *)(v3 + 24) = keyboards;
  result.localeID = localeID;
  result.keyboards = keyboards;
  result.languages = languages;
  return result;
}

unint64_t sub_2480F6288()
{
  unint64_t result = qword_2692DAC58;
  if (!qword_2692DAC58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2692DAC58);
  }
  return result;
}

uint64_t static SetupReport.LocaleInfo.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[3];
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = (void *)a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_248175CE0() & 1) == 0 || (sub_2480F3F3C(v2, v5) & 1) == 0) {
    return 0;
  }
  return sub_2480F3F3C(v3, v4);
}

uint64_t SetupReport.LocaleInfo.hash(into:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175E70();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_248175E70();
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2480F6490()
{
  uint64_t v1 = 0x65676175676E616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6472616F6279656BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x4449656C61636F6CLL;
  }
}

uint64_t sub_2480F64F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480F827C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480F651C(uint64_t a1)
{
  unint64_t v2 = sub_2480F73C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480F6558(uint64_t a1)
{
  unint64_t v2 = sub_2480F73C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetupReport.LocaleInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DACB8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480F73C4();
  sub_248175F60();
  LOBYTE(v15) = 0;
  uint64_t v8 = v13;
  sub_248175BB0();
  if (!v8)
  {
    uint64_t v9 = v11;
    uint64_t v15 = v12;
    char v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7160);
    sub_2480F7418(&qword_2692DACC8);
    sub_248175BE0();
    uint64_t v15 = v9;
    char v14 = 2;
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SetupReport.LocaleInfo.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t SetupReport.LocaleInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DACD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480F73C4();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v19) = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  uint64_t v16 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7160);
  char v18 = 1;
  uint64_t v12 = sub_2480F7418(&qword_2692DACD8);
  swift_bridgeObjectRetain();
  uint64_t v17 = v12;
  sub_248175AF0();
  char v18 = 2;
  uint64_t v15 = v19;
  swift_bridgeObjectRetain();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a2 = v16;
  a2[1] = v11;
  a2[2] = v15;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2480F6AE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SetupReport.LocaleInfo.init(from:)(a1, a2);
}

uint64_t sub_2480F6AFC(void *a1)
{
  return SetupReport.LocaleInfo.encode(to:)(a1);
}

uint64_t sub_2480F6B14(void *a1, void *a2)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[3];
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = (void *)a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_248175CE0() & 1) == 0 || (sub_2480F3F3C(v2, v5) & 1) == 0) {
    return 0;
  }
  return sub_2480F3F3C(v3, v4);
}

uint64_t sub_2480F6BA8()
{
  return sub_248175EC0();
}

uint64_t sub_2480F6C08()
{
  return sub_248175EC0();
}

uint64_t sub_2480F6C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_248175E70();
  uint64_t v23 = v4;
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v22 = a2 + 32;
    do
    {
      uint64_t v7 = (uint64_t *)(v22 + 80 * v6);
      uint64_t v8 = *v7;
      uint64_t v10 = v7[4];
      uint64_t v9 = v7[5];
      uint64_t v11 = v7[6];
      uint64_t v12 = v7[7];
      uint64_t v13 = v7[8];
      uint64_t v14 = v7[9];
      uint64_t v15 = v7[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v25 = v13;
      sub_247FF6AA4(v9, v11);
      swift_bridgeObjectRetain();
      sub_248021420(a1, v8);
      swift_bridgeObjectRelease();
      if (v15)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        uint64_t v16 = v13;
        if (v10) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_248175E80();
        uint64_t v16 = v13;
        if (v10)
        {
LABEL_7:
          sub_248175E80();
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          uint64_t v17 = v12;
          if (v11) {
            goto LABEL_11;
          }
          goto LABEL_3;
        }
      }
      sub_248175E80();
      uint64_t v17 = v12;
      if (v11)
      {
LABEL_11:
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        sub_248175E70();
        uint64_t v18 = *(void *)(v17 + 16);
        uint64_t v24 = v9;
        if (v18)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = v17 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_2481751A0();
            swift_bridgeObjectRelease();
            v19 += 16;
            --v18;
          }
          while (v18);
          swift_bridgeObjectRelease();
          uint64_t v9 = v24;
          uint64_t v16 = v25;
        }
        sub_248175E70();
        uint64_t v20 = *(void *)(v16 + 16);
        if (v20)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = v16 + 40;
          do
          {
            swift_bridgeObjectRetain();
            sub_2481751A0();
            swift_bridgeObjectRelease();
            v21 += 16;
            --v20;
          }
          while (v20);
          swift_bridgeObjectRelease();
          uint64_t v9 = v24;
        }
        goto LABEL_4;
      }
LABEL_3:
      sub_248175E80();
LABEL_4:
      ++v6;
      swift_bridgeObjectRetain();
      sub_2480F6C60(a1, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FF6BFC(v9, v11);
      uint64_t result = swift_bridgeObjectRelease();
    }
    while (v6 != v23);
  }
  return result;
}

uint64_t _s12AppleIDSetup11SetupReportV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v19 = a1[5];
  uint64_t v20 = a1[6];
  uint64_t v17 = (void *)a1[8];
  uint64_t v18 = (void *)a1[7];
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v16 = (void *)a2[7];
  uint64_t v14 = a1[9];
  uint64_t v15 = (void *)a2[8];
  uint64_t v13 = a2[9];
  if ((sub_2480F4A54(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v4)
  {
    if (!v8 || (v2 != v6 || v4 != v8) && (sub_248175CE0() & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (!v5)
  {
    if (!v9) {
      goto LABEL_16;
    }
    return 0;
  }
  if (!v9 || (v3 != v7 || v5 != v9) && (sub_248175CE0() & 1) == 0) {
    return 0;
  }
LABEL_16:
  if (!v20)
  {
    if (!v11) {
      goto LABEL_25;
    }
    goto LABEL_29;
  }
  if (!v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_29:
    sub_247FF6AA4(v10, v11);
    sub_247FF6BFC(v19, v20);
    sub_247FF6BFC(v10, v11);
    return 0;
  }
  if ((v19 != v10 || v20 != v11) && (sub_248175CE0() & 1) == 0
    || (sub_2480F3F3C(v18, v16) & 1) == 0
    || (sub_2480F3F3C(v17, v15) & 1) == 0)
  {
    return 0;
  }
LABEL_25:
  return sub_2480F4004(v14, v13);
}

unint64_t sub_2480F7128()
{
  unint64_t result = qword_2692DAC68;
  if (!qword_2692DAC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAC68);
  }
  return result;
}

unint64_t sub_2480F717C()
{
  unint64_t result = qword_2692DAC78;
  if (!qword_2692DAC78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DAC70);
    sub_2480C3BDC(&qword_2692D50D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAC78);
  }
  return result;
}

unint64_t sub_2480F7214()
{
  unint64_t result = qword_2692DAC90;
  if (!qword_2692DAC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAC90);
  }
  return result;
}

unint64_t sub_2480F7268()
{
  unint64_t result = qword_2692DACA0;
  if (!qword_2692DACA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DAC70);
    sub_2480C3BDC(&qword_2692D5100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DACA0);
  }
  return result;
}

uint64_t sub_2480F7300(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DAC80);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2480F7370()
{
  unint64_t result = qword_2692DACB0;
  if (!qword_2692DACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DACB0);
  }
  return result;
}

unint64_t sub_2480F73C4()
{
  unint64_t result = qword_2692DACC0;
  if (!qword_2692DACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DACC0);
  }
  return result;
}

uint64_t sub_2480F7418(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D7160);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2480F747C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480F75A8(a1, a2, a3, (uint64_t (*)(void))sub_2480F7370, (uint64_t (*)(void))sub_2480F7214, (uint64_t (*)(void))sub_2480F74BC);
}

unint64_t sub_2480F74BC()
{
  unint64_t result = qword_2692DACE0;
  if (!qword_2692DACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DACE0);
  }
  return result;
}

unint64_t sub_2480F7514()
{
  unint64_t result = qword_2692DACE8;
  if (!qword_2692DACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DACE8);
  }
  return result;
}

uint64_t sub_2480F7568(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480F75A8(a1, a2, a3, (uint64_t (*)(void))sub_248016CB8, (uint64_t (*)(void))sub_248016C64, (uint64_t (*)(void))sub_2480F75FC);
}

uint64_t sub_2480F75A8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_2480F75FC()
{
  unint64_t result = qword_2692DACF0;
  if (!qword_2692DACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DACF0);
  }
  return result;
}

unint64_t sub_2480F7654()
{
  unint64_t result = qword_2692DACF8;
  if (!qword_2692DACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DACF8);
  }
  return result;
}

uint64_t destroy for SetupReport(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SetupReport(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    a1[5] = a2[5];
    a1[6] = v6;
    uint64_t v7 = a2[8];
    a1[7] = a2[7];
    a1[8] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 7) = v8;
  }
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SetupReport(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 5;
  uint64_t v5 = a2 + 5;
  uint64_t v6 = a2[6];
  if (a1[6])
  {
    if (v6)
    {
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FFB0A0((uint64_t)(a1 + 5));
      long long v7 = *(_OWORD *)(a2 + 7);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 7) = v7;
    }
  }
  else if (v6)
  {
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 7);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 7) = v8;
  }
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetupReport(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 48)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  if (!v6)
  {
    sub_247FFB0A0(a1 + 40);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v7;
    goto LABEL_6;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupReport(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SetupReport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupReport()
{
  return &type metadata for SetupReport;
}

uint64_t destroy for SetupReport.LocaleInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SetupReport.LocaleInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SetupReport.LocaleInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SetupReport.LocaleInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SetupReport.LocaleInfo()
{
  return &type metadata for SetupReport.LocaleInfo;
}

unsigned char *storeEnumTagSinglePayload for SetupReport.LocaleInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480F7CE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupReport.LocaleInfo.CodingKeys()
{
  return &type metadata for SetupReport.LocaleInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SetupReport.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480F7DECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupReport.CodingKeys()
{
  return &type metadata for SetupReport.CodingKeys;
}

unint64_t sub_2480F7E28()
{
  unint64_t result = qword_2692DAD00;
  if (!qword_2692DAD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD00);
  }
  return result;
}

unint64_t sub_2480F7E80()
{
  unint64_t result = qword_2692DAD08;
  if (!qword_2692DAD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD08);
  }
  return result;
}

unint64_t sub_2480F7ED8()
{
  unint64_t result = qword_2692DAD10;
  if (!qword_2692DAD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD10);
  }
  return result;
}

unint64_t sub_2480F7F30()
{
  unint64_t result = qword_2692DAD18;
  if (!qword_2692DAD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD18);
  }
  return result;
}

unint64_t sub_2480F7F88()
{
  unint64_t result = qword_2692DAD20;
  if (!qword_2692DAD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD20);
  }
  return result;
}

unint64_t sub_2480F7FE0()
{
  unint64_t result = qword_2692DAD28;
  if (!qword_2692DAD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD28);
  }
  return result;
}

uint64_t sub_2480F8034(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000248192B50 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F7372655077656ELL && a2 == 0xEC0000004449616ELL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000248192B70 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x706552646C696863 && a2 == 0xEC0000007374726FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2480F827C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C61636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676175676E616CLL && a2 == 0xE900000000000073 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6472616F6279656BLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_2480F83EC()
{
  unint64_t result = qword_2692DAD30;
  if (!qword_2692DAD30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D7490);
    sub_247FF9E1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD30);
  }
  return result;
}

uint64_t SignInModel.init(account:srpResults:requiredServices:desiredServices:shouldBackgroundDesiredServices:suppressCloudDataProtectionSetup:deviceUserKind:state:peerDeviceLocaleInfo:serverDeviceModel:)@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t *a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, long long *a10, uint64_t a11, uint64_t a12)
{
  long long v30 = a2[1];
  long long v31 = *a2;
  long long v28 = a2[3];
  long long v29 = a2[2];
  long long v27 = a2[4];
  uint64_t v14 = *((void *)a2 + 10);
  uint64_t v15 = *((void *)a2 + 11);
  uint64_t v16 = a7[1];
  uint64_t v32 = *a7;
  char v17 = *((unsigned char *)a7 + 16);
  long long v36 = *a8;
  uint64_t v34 = *((void *)a8 + 3);
  uint64_t v35 = *((void *)a8 + 2);
  char v33 = *((unsigned char *)a8 + 32);
  long long v42 = *a10;
  uint64_t v40 = *((void *)a10 + 3);
  uint64_t v41 = *((void *)a10 + 2);
  uint64_t v18 = type metadata accessor for IdMSAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a9, 1, 1, v18);
  uint64_t v19 = (int *)type metadata accessor for SignInModel();
  uint64_t v20 = a9 + v19[5];
  *(_OWORD *)(v20 + 64) = 0u;
  *(_OWORD *)(v20 + 80) = 0u;
  *(_OWORD *)(v20 + 32) = 0u;
  *(_OWORD *)(v20 + 48) = 0u;
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  uint64_t v21 = a9 + v19[10];
  *(_OWORD *)uint64_t v21 = 0u;
  *(_OWORD *)(v21 + 16) = 0u;
  uint64_t v22 = (void *)(a9 + v19[11]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  *(void *)(a9 + v19[12]) = 0;
  uint64_t v23 = (void *)(a9 + v19[14]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  *(unsigned char *)(a9 + v19[15]) = 0;
  sub_247F9805C(a1, a9);
  sub_2480F8704(*(void *)v20, *(void *)(v20 + 8), *(void *)(v20 + 16), *(void *)(v20 + 24), *(void *)(v20 + 32), *(void *)(v20 + 40), *(void *)(v20 + 48), *(void *)(v20 + 56), *(void *)(v20 + 64), *(void *)(v20 + 72), *(void *)(v20 + 80), *(void *)(v20 + 88));
  *(_OWORD *)uint64_t v20 = v31;
  *(_OWORD *)(v20 + 16) = v30;
  *(_OWORD *)(v20 + 32) = v29;
  *(_OWORD *)(v20 + 48) = v28;
  *(_OWORD *)(v20 + 64) = v27;
  *(void *)(v20 + 80) = v14;
  *(void *)(v20 + 88) = v15;
  *(void *)(a9 + v19[6]) = a3;
  *(void *)(a9 + v19[7]) = a4;
  *(unsigned char *)(a9 + v19[8]) = a6;
  *(unsigned char *)(a9 + v19[9]) = a5;
  uint64_t v24 = a9 + v19[13];
  *(void *)uint64_t v24 = v32;
  *(void *)(v24 + 8) = v16;
  *(unsigned char *)(v24 + 16) = v17;
  uint64_t v25 = a9 + v19[16];
  *(_OWORD *)uint64_t v25 = v36;
  *(void *)(v25 + 16) = v35;
  *(void *)(v25 + 24) = v34;
  *(unsigned char *)(v25 + 32) = v33;
  sub_247FF6BFC(*(void *)v21, *(void *)(v21 + 8));
  *(_OWORD *)uint64_t v21 = v42;
  *(void *)(v21 + 16) = v41;
  *(void *)(v21 + 24) = v40;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v22 = a11;
  v22[1] = a12;
  return result;
}

uint64_t type metadata accessor for SignInModel()
{
  uint64_t result = qword_2692DAED0;
  if (!qword_2692DAED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2480F8704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FB846C(a11, a12);
  }
}

uint64_t SignInModel.account.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247F97FA8(v1, a1);
}

uint64_t SignInModel.account.setter(uint64_t a1)
{
  return sub_247F9805C(a1, v1);
}

uint64_t (*SignInModel.account.modify())()
{
  return nullsub_1;
}

void SignInModel.srpResults.getter(uint64_t *a1@<X8>)
{
  int v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SignInModel() + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v12 = v3[8];
  uint64_t v13 = v3[9];
  uint64_t v15 = v3[10];
  unint64_t v14 = v3[11];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v15;
  a1[11] = v14;
  sub_2480F8834(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v15, v14);
}

void sub_2480F8834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FB8458(a11, a12);
  }
}

__n128 SignInModel.srpResults.setter(long long *a1)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  long long v7 = a1[3];
  long long v8 = a1[2];
  __n128 v6 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  uint64_t v3 = *((void *)a1 + 11);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for SignInModel() + 20);
  sub_2480F8704(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), *(void *)(v4 + 88));
  *(_OWORD *)uint64_t v4 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v7;
  __n128 result = v6;
  *(__n128 *)(v4 + 64) = v6;
  *(void *)(v4 + 80) = v2;
  *(void *)(v4 + 88) = v3;
  return result;
}

uint64_t (*SignInModel.srpResults.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.requiredServices.getter()
{
  type metadata accessor for SignInModel();
  return swift_bridgeObjectRetain();
}

uint64_t SignInModel.requiredServices.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SignInModel() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SignInModel.requiredServices.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.desiredServices.getter()
{
  type metadata accessor for SignInModel();
  return swift_bridgeObjectRetain();
}

uint64_t SignInModel.desiredServices.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SignInModel() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SignInModel.desiredServices.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.suppressCloudDataProtectionSetup.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SignInModel() + 32));
}

uint64_t SignInModel.suppressCloudDataProtectionSetup.setter(char a1)
{
  uint64_t result = type metadata accessor for SignInModel();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*SignInModel.suppressCloudDataProtectionSetup.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.shouldBackgroundDesiredServices.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SignInModel() + 36));
}

uint64_t SignInModel.peerDeviceLocaleInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SignInModel() + 40));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  return sub_247FF6AA4(v4, v5);
}

__n128 SignInModel.peerDeviceLocaleInfo.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SignInModel() + 40));
  sub_247FF6BFC(*v4, v4[1]);
  __n128 result = v6;
  *(__n128 *)uint64_t v4 = v6;
  v4[2] = v2;
  v4[3] = v3;
  return result;
}

uint64_t (*SignInModel.peerDeviceLocaleInfo.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.serverDeviceModel.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SignInModel() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignInModel.serverDeviceModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SignInModel() + 44));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SignInModel.serverDeviceModel.modify())(void)
{
  return nullsub_1;
}

void *SignInModel.messageSessionTemplate.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for SignInModel() + 48));
  id v2 = v1;
  return v1;
}

void sub_2480F8DE0(void **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for SignInModel() + 48);
  uint64_t v5 = *(void **)(a2 + v4);
  id v6 = v3;

  *(void *)(a2 + v4) = v3;
}

void SignInModel.messageSessionTemplate.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SignInModel() + 48);

  *(void *)(v1 + v3) = a1;
}

void (*SignInModel.messageSessionTemplate.modify(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for SignInModel();
  v2[4] = sub_247FA106C();
  return sub_247FA569C;
}

uint64_t SignInModel.deviceUserKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignInModel() + 52);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  char v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  return sub_247FE42A8(v4, v5, v6);
}

uint64_t SignInModel.deviceUserKind.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for SignInModel() + 52);
  uint64_t result = sub_247FE52C4(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = v4;
  return result;
}

uint64_t (*SignInModel.deviceUserKind.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.newPersonaID.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SignInModel() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignInModel.newPersonaID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for SignInModel() + 56));
  uint64_t result = swift_bridgeObjectRelease();
  void *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SignInModel.newPersonaID.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.isFinal.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SignInModel() + 60));
}

uint64_t SignInModel.isFinal.setter(char a1)
{
  uint64_t result = type metadata accessor for SignInModel();
  *(unsigned char *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*SignInModel.isFinal.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignInModel() + 64);
  uint64_t v4 = *(void *)v3;
  unint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(v3 + 32);
  return sub_2480F9180(v4, v5);
}

uint64_t sub_2480F9180(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 SignInModel.state.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  uint64_t v5 = v1 + *(int *)(type metadata accessor for SignInModel() + 64);
  sub_2480F9234(*(void *)v5, *(void *)(v5 + 8));
  __n128 result = v7;
  *(__n128 *)uint64_t v5 = v7;
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v3;
  *(unsigned char *)(v5 + 32) = v4;
  return result;
}

uint64_t sub_2480F9234(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*SignInModel.state.modify())(void)
{
  return nullsub_1;
}

uint64_t SignInModel.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_247FA7688(a1);
  unsigned __int8 v4 = (int *)type metadata accessor for SignInModel();
  uint64_t v5 = (uint64_t *)(v1 + v4[5]);
  uint64_t v6 = v5[1];
  if (v6)
  {
    uint64_t v7 = v5[3];
    uint64_t v26 = v5[2];
    uint64_t v27 = v5[5];
    uint64_t v28 = *v5;
    uint64_t v8 = v5[7];
    uint64_t v24 = v5[6];
    uint64_t v25 = v5[4];
    uint64_t v9 = v5[9];
    uint64_t v23 = v5[8];
    uint64_t v10 = v5[10];
    unint64_t v11 = v5[11];
    sub_248175E80();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FB8458(v10, v11);
    sub_2481751A0();
    sub_248175E80();
    if (v11 >> 60 != 15)
    {
      sub_247FB6C20(v10, v11);
      sub_2481747E0();
      sub_247FB846C(v10, v11);
    }
    sub_2480F8704(v28, v6, v26, v7, v25, v27, v24, v8, v23, v9, v10, v11);
  }
  else
  {
    sub_248175E80();
  }
  uint64_t v12 = *(void *)(v1 + v4[6]);
  swift_bridgeObjectRetain();
  sub_247FDE2AC(a1, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v2 + v4[7]);
  swift_bridgeObjectRetain();
  sub_247FDE2AC(a1, v13);
  swift_bridgeObjectRelease();
  sub_248175E80();
  sub_248175E80();
  if (*(void *)(v2 + v4[10] + 8))
  {
    sub_248175E80();
    SetupReport.LocaleInfo.hash(into:)();
  }
  else
  {
    sub_248175E80();
  }
  if (*(void *)(v2 + v4[11] + 8))
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_248175E80();
  }
  unint64_t v14 = *(void **)(v2 + v4[12]);
  sub_248175E80();
  if (v14)
  {
    id v15 = v14;
    sub_2481756D0();
  }
  uint64_t v16 = v2 + v4[13];
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  switch(*(unsigned char *)(v16 + 16))
  {
    case 1:
    case 2:
      sub_248175E70();
      sub_248175E80();
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FE52C4(v17, v18, 0);
      break;
  }
  if (*(void *)(v2 + v4[14] + 8))
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_248175E80();
  }
  sub_248175E80();
  uint64_t v19 = (uint64_t *)(v2 + v4[16]);
  unint64_t v20 = v19[1];
  if (v20 <= 2) {
    return sub_248175E70();
  }
  uint64_t v22 = *v19;
  sub_248175E70();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  sub_2481751A0();
  sub_248175E80();
  return sub_2480F9234(v22, v20);
}

unint64_t sub_2480F9770(char a1)
{
  unint64_t result = 0x746E756F636361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C75736552707273;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x5364657269736564;
      break;
    case 4:
      unint64_t result = 0xD000000000000020;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0x7355656369766564;
      break;
    case 10:
      unint64_t result = 0x6F7372655077656ELL;
      break;
    case 11:
      unint64_t result = 0x6C616E69467369;
      break;
    case 12:
      unint64_t result = 0x6574617473;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2480F9928()
{
  return sub_2480F9770(*v0);
}

uint64_t sub_2480F9930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2481020F4(a1, a2);
  *a3 = result;
  return result;
}

void sub_2480F9958(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_2480F9964(uint64_t a1)
{
  unint64_t v2 = sub_2480FE308();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480F99A0(uint64_t a1)
{
  unint64_t v2 = sub_2480FE308();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SignInModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480FE308();
  sub_248175F60();
  LOBYTE(v22) = 0;
  type metadata accessor for IdMSAccount();
  sub_2480FEA7C(&qword_2692D5098, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  sub_248175B90();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for SignInModel();
    uint64_t v10 = (long long *)(v3 + v9[5]);
    long long v11 = v10[1];
    long long v22 = *v10;
    long long v23 = v11;
    long long v12 = v10[3];
    long long v24 = v10[2];
    long long v25 = v12;
    long long v13 = v10[5];
    long long v26 = v10[4];
    long long v27 = v13;
    char v28 = 1;
    sub_247FF9FC0();
    sub_248175B90();
    *(void *)&long long v22 = *(void *)(v3 + v9[6]);
    char v28 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
    sub_2480FE404((unint64_t *)&qword_2692D67E0, &qword_2692D50D0);
    sub_248175BE0();
    *(void *)&long long v22 = *(void *)(v3 + v9[7]);
    char v28 = 3;
    sub_248175BE0();
    LOBYTE(v22) = 4;
    sub_248175BC0();
    LOBYTE(v22) = 5;
    sub_248175BC0();
    unint64_t v14 = (long long *)(v3 + v9[10]);
    long long v15 = v14[1];
    long long v22 = *v14;
    long long v23 = v15;
    char v28 = 6;
    sub_248016C64();
    sub_248175B90();
    LOBYTE(v22) = 7;
    sub_248175B60();
    *(void *)&long long v22 = *(void *)(v3 + v9[12]);
    char v28 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD48);
    sub_2480FE498(&qword_2692DAD50);
    sub_248175BE0();
    uint64_t v16 = (long long *)(v3 + v9[13]);
    char v17 = *((unsigned char *)v16 + 16);
    long long v22 = *v16;
    LOBYTE(v23) = v17;
    char v28 = 9;
    sub_2480FE35C();
    sub_248175BE0();
    LOBYTE(v22) = 10;
    sub_248175B60();
    LOBYTE(v22) = 11;
    sub_248175BC0();
    uint64_t v18 = (long long *)(v3 + v9[16]);
    char v19 = *((unsigned char *)v18 + 32);
    long long v20 = v18[1];
    long long v22 = *v18;
    long long v23 = v20;
    LOBYTE(v24) = v19;
    char v28 = 12;
    sub_2480FE3B0();
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SignInModel.hashValue.getter()
{
  sub_248175E50();
  SignInModel.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t SignInModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD68);
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for SignInModel();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IdMSAccount();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  long long v12 = &v10[v8[5]];
  *((_OWORD *)v12 + 4) = 0u;
  *((_OWORD *)v12 + 5) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  *((_OWORD *)v12 + 3) = 0u;
  *(_OWORD *)long long v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  long long v13 = (uint64_t *)&v10[v8[10]];
  *(_OWORD *)long long v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  uint64_t v56 = v13;
  unint64_t v57 = v8;
  unint64_t v14 = &v10[v8[11]];
  *(void *)unint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  long long v54 = v14;
  uint64_t v55 = v8[12];
  *(void *)&v10[v55] = 0;
  long long v15 = &v10[v8[14]];
  *(void *)long long v15 = 0;
  *((void *)v15 + 1) = 0;
  long long v52 = a1;
  long long v53 = v15;
  uint64_t v16 = v8[15];
  v10[v16] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480FE308();
  uint64_t v49 = v7;
  uint64_t v17 = v51;
  sub_248175F20();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    sub_247FB33D4((uint64_t)v10, &qword_2692D5080);
    sub_2480F8704(*(void *)v12, *((void *)v12 + 1), *((void *)v12 + 2), *((void *)v12 + 3), *((void *)v12 + 4), *((void *)v12 + 5), *((void *)v12 + 6), *((void *)v12 + 7), *((void *)v12 + 8), *((void *)v12 + 9), *((void *)v12 + 10), *((void *)v12 + 11));
    sub_247FF6BFC(*v56, v56[1]);
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v51 = v16;
    LOBYTE(v58) = 0;
    sub_2480FEA7C(&qword_2692D50E0, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
    sub_248175AA0();
    sub_247F9805C((uint64_t)v5, (uint64_t)v10);
    char v65 = 1;
    sub_247FFA0F0();
    sub_248175AA0();
    long long v46 = v58;
    long long v45 = v59;
    long long v44 = v60;
    long long v43 = v61;
    long long v42 = v62;
    uint64_t v18 = v63;
    uint64_t v19 = v64;
    sub_2480F8704(*(void *)v12, *((void *)v12 + 1), *((void *)v12 + 2), *((void *)v12 + 3), *((void *)v12 + 4), *((void *)v12 + 5), *((void *)v12 + 6), *((void *)v12 + 7), *((void *)v12 + 8), *((void *)v12 + 9), *((void *)v12 + 10), *((void *)v12 + 11));
    long long v20 = v45;
    *(_OWORD *)long long v12 = v46;
    *((_OWORD *)v12 + 1) = v20;
    long long v21 = v43;
    *((_OWORD *)v12 + 2) = v44;
    *((_OWORD *)v12 + 3) = v21;
    *((_OWORD *)v12 + 4) = v42;
    *((void *)v12 + 10) = v18;
    *((void *)v12 + 11) = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
    char v65 = 2;
    sub_2480FE404((unint64_t *)&qword_2692D6858, &qword_2692D5100);
    sub_248175AF0();
    long long v22 = v57;
    *(void *)&v10[v57[6]] = v58;
    char v65 = 3;
    sub_248175AF0();
    *(void *)&v10[v22[7]] = v58;
    LOBYTE(v58) = 4;
    char v23 = sub_248175AD0();
    long long v24 = (uint64_t *)v54;
    v10[v22[8]] = v23 & 1;
    LOBYTE(v58) = 5;
    v10[v22[9]] = sub_248175AD0() & 1;
    char v65 = 6;
    sub_248016CB8();
    sub_248175AA0();
    long long v46 = v58;
    long long v25 = v59;
    long long v26 = v56;
    sub_247FF6BFC(*v56, v56[1]);
    *(_OWORD *)long long v26 = v46;
    *((_OWORD *)v26 + 1) = v25;
    LOBYTE(v58) = 7;
    uint64_t v27 = sub_248175A70();
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t *v24 = v27;
    v24[1] = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD48);
    char v65 = 8;
    sub_2480FE498(&qword_2692DAD70);
    sub_248175AF0();
    uint64_t v30 = v58;
    uint64_t v31 = v55;

    *(void *)&v10[v31] = v30;
    char v65 = 9;
    sub_2480FE4E0();
    sub_248175AF0();
    char v32 = v59;
    char v33 = &v10[v57[13]];
    *(_OWORD *)char v33 = v58;
    v33[16] = v32;
    LOBYTE(v58) = 10;
    uint64_t v34 = sub_248175A70();
    uint64_t v36 = v35;
    unint64_t v37 = (uint64_t *)v53;
    swift_bridgeObjectRelease();
    *unint64_t v37 = v34;
    v37[1] = v36;
    LOBYTE(v58) = 11;
    v10[v51] = sub_248175AD0() & 1;
    char v65 = 12;
    sub_2480FE534();
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
    char v38 = v60;
    long long v39 = &v10[v57[16]];
    long long v40 = v59;
    *(_OWORD *)long long v39 = v58;
    *((_OWORD *)v39 + 1) = v40;
    v39[32] = v38;
    sub_2480FE588((uint64_t)v10, v47);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    return sub_248100154((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SignInModel);
  }
}

uint64_t sub_2480FA8A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignInModel.init(from:)(a1, a2);
}

uint64_t sub_2480FA8BC(void *a1)
{
  return SignInModel.encode(to:)(a1);
}

uint64_t sub_2480FA8D8()
{
  sub_248175E50();
  SignInModel.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t sub_2480FA91C()
{
  sub_248175E50();
  SignInModel.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t SignInModel.State.hash(into:)()
{
  if (*(void *)(v0 + 8) <= 2uLL) {
    return sub_248175E70();
  }
  sub_248175E70();
  sub_2481751A0();
  sub_2481751A0();
  return sub_248175E80();
}

uint64_t sub_2480FAA0C()
{
  uint64_t v1 = 0x6567617373656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6465747065636361;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_2480FAA64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24810265C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480FAA8C(uint64_t a1)
{
  unint64_t v2 = sub_2480FE694();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FAAC8(uint64_t a1)
{
  unint64_t v2 = sub_2480FE694();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FAB04()
{
  uint64_t result = 0x6C616974696E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49676E696E676973;
      break;
    case 2:
      uint64_t result = 0x7472656C61;
      break;
    case 3:
      uint64_t result = 0x64656873696E6966;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480FAB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2481027AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480FABBC(uint64_t a1)
{
  unint64_t v2 = sub_2480FE5EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FABF8(uint64_t a1)
{
  unint64_t v2 = sub_2480FE5EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FAC34(uint64_t a1)
{
  unint64_t v2 = sub_2480FE640();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FAC70(uint64_t a1)
{
  unint64_t v2 = sub_2480FE640();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FACAC(uint64_t a1)
{
  unint64_t v2 = sub_2480FE73C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FACE8(uint64_t a1)
{
  unint64_t v2 = sub_2480FE73C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FAD24(uint64_t a1)
{
  unint64_t v2 = sub_2480FE6E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FAD60(uint64_t a1)
{
  unint64_t v2 = sub_2480FE6E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SignInModel.State.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD88);
  uint64_t v32 = *(void *)(v3 - 8);
  uint64_t v33 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v31 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD90);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD98);
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DADA0);
  uint64_t v28 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DADA8);
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  unint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v16 = v1[1];
  uint64_t v26 = v1[2];
  uint64_t v27 = v15;
  uint64_t v25 = v1[3];
  v24[1] = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480FE5EC();
  sub_248175F60();
  switch(v16)
  {
    case 0:
      char v40 = 0;
      sub_2480FE73C();
      uint64_t v18 = v37;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v18);
    case 1:
      char v41 = 1;
      sub_2480FE6E8();
      uint64_t v18 = v37;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v18);
    case 2:
      char v46 = 3;
      sub_2480FE640();
      uint64_t v17 = v31;
      uint64_t v18 = v37;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v33);
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v18);
  }
  char v45 = 2;
  sub_2480FE694();
  long long v20 = v34;
  uint64_t v21 = v37;
  sub_248175B50();
  char v44 = 0;
  uint64_t v22 = v36;
  uint64_t v23 = v38;
  sub_248175BB0();
  if (!v23)
  {
    char v43 = 1;
    sub_248175BB0();
    char v42 = 2;
    sub_248175BC0();
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v14, v21);
}

uint64_t SignInModel.State.hashValue.getter()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_248175E50();
  sub_248175E70();
  if (v1 > 2)
  {
    sub_2481751A0();
    sub_2481751A0();
    sub_248175E80();
  }
  return sub_248175EC0();
}

uint64_t SignInModel.State.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DADD8);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DADE0);
  uint64_t v40 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v48 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DADE8);
  uint64_t v44 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DADF0);
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DADF8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_2480FE5EC();
  uint64_t v16 = v51;
  sub_248175F20();
  if (v16)
  {
    uint64_t v17 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_1(v17);
  }
  uint64_t v39 = v8;
  uint64_t v18 = v48;
  uint64_t v19 = v49;
  uint64_t v51 = v12;
  uint64_t v20 = sub_248175B30();
  uint64_t v21 = v20;
  if (*(void *)(v20 + 16) != 1)
  {
    uint64_t v27 = sub_2481758A0();
    swift_allocError();
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v29 = &type metadata for SignInModel.State;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
    uint64_t v17 = (uint64_t)v50;
    return __swift_destroy_boxed_opaque_existential_1(v17);
  }
  switch(*(unsigned char *)(v20 + 32))
  {
    case 1:
      char v53 = 1;
      sub_2480FE6E8();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v7, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
      uint64_t v22 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      char v26 = 0;
      uint64_t v23 = 1;
      break;
    case 2:
      char v57 = 2;
      sub_2480FE694();
      uint64_t v30 = v18;
      sub_248175A50();
      uint64_t v46 = v21;
      uint64_t v49 = v14;
      char v56 = 0;
      uint64_t v32 = v43;
      uint64_t v22 = sub_248175AC0();
      uint64_t v23 = v35;
      uint64_t v45 = v11;
      char v55 = 1;
      uint64_t v24 = sub_248175AC0();
      uint64_t v25 = v36;
      char v54 = 2;
      LODWORD(v44) = sub_248175AD0();
      uint64_t v37 = v51;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v45);
      char v26 = v44 & 1;
      break;
    case 3:
      char v58 = 3;
      sub_2480FE640();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
      uint64_t v22 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      char v26 = 0;
      uint64_t v23 = 2;
      break;
    default:
      char v52 = 0;
      sub_2480FE73C();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v14, v11);
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      char v26 = 0;
      break;
  }
  uint64_t v33 = (uint64_t)v50;
  uint64_t v34 = v47;
  *uint64_t v47 = v22;
  v34[1] = v23;
  v34[2] = v24;
  v34[3] = v25;
  *((unsigned char *)v34 + 32) = v26;
  return __swift_destroy_boxed_opaque_existential_1(v33);
}

uint64_t sub_2480FBBA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return SignInModel.State.init(from:)(a1, a2);
}

uint64_t sub_2480FBBBC(void *a1)
{
  return SignInModel.State.encode(to:)(a1);
}

uint64_t sub_2480FBBDC()
{
  if (*(void *)(v0 + 8) <= 2uLL) {
    return sub_248175E70();
  }
  sub_248175E70();
  sub_2481751A0();
  sub_2481751A0();
  return sub_248175E80();
}

uint64_t sub_2480FBC90()
{
  unint64_t v1 = *(void *)(v0 + 8);
  sub_248175E50();
  sub_248175E70();
  if (v1 > 2)
  {
    sub_2481751A0();
    sub_2481751A0();
    sub_248175E80();
  }
  return sub_248175EC0();
}

BOOL SignInModel.DeviceUserKind.shouldCreatePersona.getter()
{
  return *(unsigned __int8 *)(v0 + 16) - 1 < 2;
}

BOOL SignInModel.DeviceUserKind.shouldCreateUser.getter()
{
  BOOL result = 0;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
    case 2:
      BOOL result = (*(void *)v0 & 1) == 0;
      break;
    case 3:
      BOOL result = *(_OWORD *)v0 != 0;
      break;
    default:
      return result;
  }
  return result;
}

BOOL SignInModel.DeviceUserKind.isPrimary.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  if ((v3 - 1) >= 2)
  {
    if (*(unsigned char *)(v0 + 16))
    {
      BOOL v4 = (v1 | v2) != 0;
      LOBYTE(v3) = 3;
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    LOBYTE(v3) = 0;
  }
  BOOL v4 = 0;
LABEL_6:
  sub_247FE52C4(v1, v2, v3);
  sub_247FE52C4(1, 0, 3);
  return v4;
}

uint64_t SignInModel.DeviceUserKind.replacingAutomatic(withPrimary:)@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)v2;
  int v5 = *(unsigned __int8 *)(v2 + 16);
  if (v5 == 1)
  {
    uint64_t result = a1();
    uint64_t v7 = 0;
    if (result) {
      uint64_t v4 = 1;
    }
    else {
      v4 &= 1u;
    }
    if (result) {
      LOBYTE(v5) = 3;
    }
    else {
      LOBYTE(v5) = 2;
    }
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 8);
    uint64_t result = sub_247FE42A8(*(void *)v2, v7, *(unsigned char *)(v2 + 16));
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v7;
  *(unsigned char *)(a2 + 16) = v5;
  return result;
}

uint64_t SignInModel.DeviceUserKind.hash(into:)()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
    case 2:
      sub_248175E70();
      uint64_t result = sub_248175E80();
      break;
    case 3:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      uint64_t result = sub_2481751A0();
      break;
  }
  return result;
}

uint64_t sub_2480FBF98()
{
  return 0x73726550796C6E6FLL;
}

uint64_t sub_2480FBFBC(uint64_t a1)
{
  unint64_t v2 = sub_2480FE88C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FBFF8(uint64_t a1)
{
  unint64_t v2 = sub_2480FE88C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FC034()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E697473697865;
      break;
    case 2:
      uint64_t result = 0x6974616D6F747561;
      break;
    case 3:
      uint64_t result = 0x7972616D697270;
      break;
    case 4:
      uint64_t result = 0x7473657567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2480FC0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24810296C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2480FC100(uint64_t a1)
{
  unint64_t v2 = sub_2480FE790();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FC13C(uint64_t a1)
{
  unint64_t v2 = sub_2480FE790();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FC178()
{
  return 0x49656C69666F7270;
}

uint64_t sub_2480FC194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x49656C69666F7270 && a2 == 0xE900000000000044)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_248175CE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2480FC238(uint64_t a1)
{
  unint64_t v2 = sub_2480FE8E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FC274(uint64_t a1)
{
  unint64_t v2 = sub_2480FE8E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FC2B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73726550796C6E6FLL && a2 == 0xEB00000000616E6FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_248175CE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2480FC360(uint64_t a1)
{
  unint64_t v2 = sub_2480FE7E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FC39C(uint64_t a1)
{
  unint64_t v2 = sub_2480FE7E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FC3D8(uint64_t a1)
{
  unint64_t v2 = sub_2480FE934();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FC414(uint64_t a1)
{
  unint64_t v2 = sub_2480FE934();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2480FC450(uint64_t a1)
{
  unint64_t v2 = sub_2480FE838();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480FC48C(uint64_t a1)
{
  unint64_t v2 = sub_2480FE838();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SignInModel.DeviceUserKind.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE00);
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE08);
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE10);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v40 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v38 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE18);
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE20);
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE28);
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  uint64_t v44 = v1[1];
  uint64_t v19 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480FE790();
  sub_248175F60();
  switch(v19)
  {
    case 1:
      char v49 = 2;
      sub_2480FE88C();
      uint64_t v23 = v38;
      uint64_t v24 = v46;
      sub_248175B50();
      uint64_t v25 = v40;
      sub_248175BC0();
      uint64_t v26 = v39;
      goto LABEL_5;
    case 2:
      char v51 = 4;
      sub_2480FE7E4();
      uint64_t v23 = v41;
      uint64_t v24 = v46;
      sub_248175B50();
      uint64_t v25 = v43;
      sub_248175BC0();
      uint64_t v26 = v42;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v24);
      break;
    case 3:
      uint64_t v27 = (uint64_t (**)(char *, uint64_t))(v45 + 8);
      if (v18 | v44)
      {
        char v50 = 3;
        sub_2480FE838();
        uint64_t v28 = v33;
        uint64_t v29 = v46;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
      }
      else
      {
        char v47 = 0;
        sub_2480FE934();
        uint64_t v29 = v46;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v32);
      }
      uint64_t result = (*v27)(v17, v29);
      break;
    default:
      char v48 = 1;
      sub_2480FE8E0();
      uint64_t v20 = v46;
      sub_248175B50();
      uint64_t v21 = v37;
      sub_248175BB0();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v17, v20);
      break;
  }
  return result;
}

uint64_t SignInModel.DeviceUserKind.hashValue.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  sub_248175E50();
  switch(v1)
  {
    case 1:
    case 2:
      sub_248175E70();
      sub_248175E80();
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      sub_2481751A0();
      break;
  }
  return sub_248175EC0();
}

uint64_t SignInModel.DeviceUserKind.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE60);
  uint64_t v59 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v63 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE68);
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  MEMORY[0x270FA5388](v4);
  long long v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE70);
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  long long v62 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE78);
  uint64_t v58 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE80);
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAE88);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  char v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_2480FE790();
  uint64_t v17 = v66;
  sub_248175F20();
  if (v17) {
    goto LABEL_16;
  }
  double v66 = 0;
  uint64_t v50 = v9;
  char v51 = v8;
  uint64_t v18 = v61;
  uint64_t v19 = v62;
  uint64_t v21 = v63;
  uint64_t v20 = v64;
  uint64_t v22 = sub_248175B30();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v25 = v12;
    uint64_t v26 = sub_2481758A0();
    swift_allocError();
    uint64_t v27 = v15;
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v29 = &type metadata for SignInModel.DeviceUserKind;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v25);
LABEL_16:
    uint64_t v24 = (uint64_t)v65;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      char v68 = 1;
      sub_2480FE8E0();
      uint64_t v30 = v51;
      uint64_t v31 = v66;
      sub_248175A50();
      if (v31) {
        goto LABEL_15;
      }
      double v66 = v15;
      uint64_t v32 = v53;
      uint64_t v44 = sub_248175AC0();
      uint64_t v46 = v45;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v66, v12);
      char v47 = 0;
      goto LABEL_20;
    case 2:
      char v69 = 2;
      sub_2480FE88C();
      uint64_t v33 = v66;
      sub_248175A50();
      if (v33) {
        goto LABEL_15;
      }
      uint64_t v40 = v19;
      uint64_t v41 = v52;
      uint64_t v42 = v12;
      char v43 = sub_248175AD0();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v40, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v42);
      uint64_t v24 = (uint64_t)v65;
      uint64_t v46 = 0;
      uint64_t v44 = v43 & 1;
      char v47 = 1;
      goto LABEL_21;
    case 3:
      char v70 = 3;
      sub_2480FE838();
      uint64_t v34 = v60;
      uint64_t v35 = v66;
      sub_248175A50();
      if (v35) {
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      uint64_t v46 = 0;
      char v47 = 3;
      uint64_t v44 = 1;
      goto LABEL_20;
    case 4:
      char v71 = 4;
      sub_2480FE7E4();
      uint64_t v36 = v66;
      sub_248175A50();
      if (v36)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        goto LABEL_16;
      }
      uint64_t v37 = v21;
      uint64_t v38 = v55;
      char v48 = sub_248175AD0();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v37, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      uint64_t v46 = 0;
      uint64_t v44 = v48 & 1;
      char v47 = 2;
LABEL_20:
      uint64_t v24 = (uint64_t)v65;
      goto LABEL_21;
    default:
      char v67 = 0;
      sub_2480FE934();
      uint64_t v23 = v66;
      sub_248175A50();
      if (v23)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        uint64_t v24 = (uint64_t)v65;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v50);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        uint64_t v44 = 0;
        uint64_t v46 = 0;
        char v47 = 3;
        uint64_t v24 = (uint64_t)v65;
LABEL_21:
        *(void *)uint64_t v20 = v44;
        *(void *)(v20 + 8) = v46;
        *(unsigned char *)(v20 + 16) = v47;
      }
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_2480FD42C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignInModel.DeviceUserKind.init(from:)(a1, a2);
}

uint64_t sub_2480FD444(void *a1)
{
  return SignInModel.DeviceUserKind.encode(to:)(a1);
}

uint64_t sub_2480FD468()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 16);
  sub_248175E50();
  switch(v1)
  {
    case 1:
    case 2:
      sub_248175E70();
      sub_248175E80();
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      sub_2481751A0();
      break;
  }
  return sub_248175EC0();
}

uint64_t _s12AppleIDSetup11SignInModelV14DeviceUserKindO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_28;
      }
      BOOL v8 = (*(void *)a1 & 1) == 0;
      sub_247FE52C4(*(void *)a1, v2, 1);
      uint64_t v9 = v5;
      uint64_t v10 = v6;
      char v11 = 1;
      goto LABEL_8;
    case 2:
      if (v7 != 2) {
        goto LABEL_28;
      }
      BOOL v8 = (*(void *)a1 & 1) == 0;
      sub_247FE52C4(*(void *)a1, v2, 2);
      uint64_t v9 = v5;
      uint64_t v10 = v6;
      char v11 = 2;
LABEL_8:
      sub_247FE52C4(v9, v10, v11);
      char v12 = v8 ^ v5;
      return v12 & 1;
    case 3:
      if (v3 | v2)
      {
        if (v7 == 3 && v5 == 1 && v6 == 0)
        {
          sub_247FE52C4(*(void *)a1, v2, 3);
          char v12 = 1;
          sub_247FE52C4(1, 0, 3);
          return v12 & 1;
        }
      }
      else if (v7 == 3 && (v6 | v5) == 0)
      {
        sub_247FE52C4(*(void *)a1, v2, 3);
        sub_247FE52C4(0, 0, 3);
        char v12 = 1;
        return v12 & 1;
      }
      goto LABEL_28;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
LABEL_28:
        sub_247FE42A8(v5, v6, v7);
        sub_247FE52C4(v3, v2, v4);
        sub_247FE52C4(v5, v6, v7);
        char v12 = 0;
      }
      else
      {
        if (v3 == v5 && v2 == v6) {
          char v12 = 1;
        }
        else {
          char v12 = sub_248175CE0();
        }
        sub_247FE42A8(v5, v6, 0);
        sub_247FE42A8(v3, v2, 0);
        sub_247FE52C4(v3, v2, 0);
        sub_247FE52C4(v5, v6, 0);
      }
      return v12 & 1;
  }
}

unint64_t _s12AppleIDSetup11SignInModelV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v7 = *(void *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  if (!v3)
  {
    if (!v8)
    {
      sub_2480F9234(*(void *)a1, 0);
      uint64_t v12 = v7;
      unint64_t v13 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    if (v8 == 1)
    {
      sub_2480F9234(*(void *)a1, 1uLL);
      sub_2480F9234(v7, 1uLL);
      return v8 & 1;
    }
    goto LABEL_12;
  }
  if (v3 != 2)
  {
    if (v8 >= 3 && (v2 == v7 && v3 == v8 || (sub_248175CE0() & 1) != 0))
    {
      if (v5 == v10 && v4 == v9)
      {
        sub_2480F9180(v7, v8);
        sub_2480F9180(v2, v3);
        sub_2480F9234(v2, v3);
        sub_2480F9234(v7, v8);
      }
      else
      {
        char v15 = sub_248175CE0();
        sub_2480F9180(v7, v8);
        sub_2480F9180(v2, v3);
        sub_2480F9234(v2, v3);
        sub_2480F9234(v7, v8);
        LOBYTE(v8) = 0;
        if ((v15 & 1) == 0) {
          return v8 & 1;
        }
      }
      LOBYTE(v8) = ((v6 & 1) == 0) ^ v11;
      return v8 & 1;
    }
    goto LABEL_12;
  }
  if (v8 != 2)
  {
LABEL_12:
    sub_2480F9180(v7, v8);
    sub_2480F9180(v2, v3);
    sub_2480F9234(v2, v3);
    sub_2480F9234(v7, v8);
    LOBYTE(v8) = 0;
    return v8 & 1;
  }
  sub_2480F9234(*(void *)a1, 2uLL);
  uint64_t v12 = v7;
  unint64_t v13 = 2;
LABEL_8:
  sub_2480F9234(v12, v13);
  LOBYTE(v8) = 1;
  return v8 & 1;
}

uint64_t _s12AppleIDSetup11SignInModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IdMSAccount();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v111 = (uint64_t *)((char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58D0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v98 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v98 - v18;
  uint64_t v113 = a1;
  sub_247F97FA8(a1, (uint64_t)&v98 - v18);
  uint64_t v112 = a2;
  sub_247F97FA8(a2, (uint64_t)v17);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_247F97FA8((uint64_t)v19, (uint64_t)v10);
  sub_247F97FA8((uint64_t)v17, v20);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_247FB33D4((uint64_t)v17, &qword_2692D5080);
    sub_247FB33D4((uint64_t)v19, &qword_2692D5080);
    if (v21(v20, 1, v4) == 1)
    {
      sub_247FB33D4((uint64_t)v10, &qword_2692D5080);
      goto LABEL_8;
    }
LABEL_6:
    sub_247FB33D4((uint64_t)v10, &qword_2692D58D0);
    goto LABEL_27;
  }
  sub_247F97FA8((uint64_t)v10, (uint64_t)v14);
  if (v21(v20, 1, v4) == 1)
  {
    sub_247FB33D4((uint64_t)v17, &qword_2692D5080);
    sub_247FB33D4((uint64_t)v19, &qword_2692D5080);
    sub_248100154((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
    goto LABEL_6;
  }
  uint64_t v22 = v111;
  sub_248017EB4(v20, (uint64_t)v111);
  char v23 = _s12AppleIDSetup11IdMSAccountV2eeoiySbAC_ACtFZ_0(v14, v22);
  sub_248100154((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  sub_247FB33D4((uint64_t)v17, &qword_2692D5080);
  sub_247FB33D4((uint64_t)v19, &qword_2692D5080);
  sub_248100154((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  sub_247FB33D4((uint64_t)v10, &qword_2692D5080);
  if ((v23 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_8:
  uint64_t v107 = (int *)type metadata accessor for SignInModel();
  uint64_t v24 = v107[5];
  uint64_t v25 = *(void *)(v113 + v24);
  uint64_t v26 = *(void *)(v113 + v24 + 8);
  uint64_t v28 = *(void *)(v113 + v24 + 16);
  uint64_t v27 = *(void *)(v113 + v24 + 24);
  uint64_t v30 = *(void *)(v113 + v24 + 32);
  uint64_t v29 = *(void *)(v113 + v24 + 40);
  uint64_t v32 = *(void *)(v113 + v24 + 48);
  uint64_t v31 = *(void *)(v113 + v24 + 56);
  uint64_t v34 = *(void *)(v113 + v24 + 64);
  uint64_t v33 = *(void *)(v113 + v24 + 72);
  uint64_t v35 = *(void *)(v113 + v24 + 80);
  unint64_t v36 = *(void *)(v113 + v24 + 88);
  uint64_t v37 = (uint64_t *)(v112 + v24);
  uint64_t v38 = *v37;
  uint64_t v39 = v37[1];
  uint64_t v40 = v37[2];
  uint64_t v41 = v37[3];
  uint64_t v42 = v37[4];
  uint64_t v43 = v37[5];
  uint64_t v44 = v37[6];
  uint64_t v45 = v37[7];
  uint64_t v46 = v37[8];
  uint64_t v47 = v37[9];
  uint64_t v48 = v37[10];
  unint64_t v49 = v37[11];
  if (!v26)
  {
    if (!v39) {
      goto LABEL_13;
    }
LABEL_26:
    *(void *)&long long v124 = v25;
    *((void *)&v124 + 1) = v26;
    *(void *)&long long v125 = v28;
    *((void *)&v125 + 1) = v27;
    uint64_t v126 = v30;
    uint64_t v127 = v29;
    uint64_t v128 = v32;
    uint64_t v129 = v31;
    uint64_t v130 = v34;
    uint64_t v131 = v33;
    uint64_t v132 = v35;
    unint64_t v133 = v36;
    uint64_t v134 = v38;
    uint64_t v135 = v39;
    uint64_t v136 = v40;
    uint64_t v137 = v41;
    uint64_t v138 = v42;
    uint64_t v139 = v43;
    uint64_t v140 = v44;
    uint64_t v141 = v45;
    uint64_t v142 = v46;
    uint64_t v143 = v47;
    uint64_t v144 = v48;
    unint64_t v145 = v49;
    sub_2480F8834(v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
    sub_248102B80((uint64_t)&v124);
    goto LABEL_27;
  }
  *(void *)&long long v124 = v25;
  *((void *)&v124 + 1) = v26;
  *(void *)&long long v125 = v28;
  *((void *)&v125 + 1) = v27;
  uint64_t v126 = v30;
  uint64_t v127 = v29;
  uint64_t v128 = v32;
  uint64_t v129 = v31;
  uint64_t v130 = v34;
  uint64_t v131 = v33;
  uint64_t v132 = v35;
  unint64_t v133 = v36;
  uint64_t v110 = v29;
  uint64_t v111 = (void *)v31;
  uint64_t v105 = v30;
  uint64_t v106 = v32;
  uint64_t v108 = v33;
  uint64_t v109 = v27;
  uint64_t v103 = v25;
  uint64_t v104 = v28;
  uint64_t v102 = v34;
  if (!v39)
  {
    uint64_t v112 = v44;
    uint64_t v113 = v45;
    uint64_t v107 = (int *)v43;
    uint64_t v100 = v41;
    uint64_t v101 = v42;
    uint64_t v99 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FB8458(v35, v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FB8458(v35, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FB846C(v35, v36);
    uint64_t v40 = v99;
    uint64_t v41 = v100;
    uint64_t v42 = v101;
    uint64_t v34 = v102;
    uint64_t v43 = (uint64_t)v107;
    uint64_t v33 = v108;
    uint64_t v44 = v112;
    uint64_t v45 = v113;
    uint64_t v25 = v103;
    uint64_t v28 = v104;
    uint64_t v27 = v109;
    uint64_t v29 = v110;
    uint64_t v30 = v105;
    uint64_t v32 = v106;
    uint64_t v31 = (uint64_t)v111;
    goto LABEL_26;
  }
  *(void *)&long long v114 = v38;
  *((void *)&v114 + 1) = v39;
  *(void *)&long long v115 = v40;
  *((void *)&v115 + 1) = v41;
  uint64_t v116 = v42;
  uint64_t v117 = v43;
  uint64_t v118 = v44;
  uint64_t v119 = v45;
  uint64_t v120 = v46;
  uint64_t v121 = v47;
  uint64_t v122 = v48;
  unint64_t v123 = v49;
  sub_2480F8834(v25, v26, v28, v27, v30, v29, v32, v31, v34, v33, v35, v36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FB8458(v35, v36);
  LODWORD(v101) = _s12AppleIDSetup11IdMSAccountV10SRPResultsV2eeoiySbAE_AEtFZ_0(&v124, &v114);
  uint64_t v50 = v132;
  unint64_t v51 = v133;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FB846C(v50, v51);
  sub_2480F8704(v103, v26, v104, v109, v105, v110, v106, (uint64_t)v111, v102, v108, v35, v36);
  if ((v101 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_13:
  uint64_t v52 = v107;
  uint64_t v54 = v112;
  uint64_t v53 = v113;
  if ((sub_24815D598(*(void *)(v113 + v107[6]), *(void *)(v112 + v107[6])) & 1) == 0
    || (sub_24815D598(*(void *)(v53 + v52[7]), *(void *)(v54 + v52[7])) & 1) == 0
    || *(unsigned __int8 *)(v53 + v52[8]) != *(unsigned __int8 *)(v54 + v52[8])
    || *(unsigned __int8 *)(v53 + v52[9]) != *(unsigned __int8 *)(v54 + v52[9]))
  {
    goto LABEL_27;
  }
  uint64_t v55 = v52[10];
  uint64_t v56 = *(void *)(v53 + v55);
  uint64_t v57 = *(void *)(v53 + v55 + 8);
  uint64_t v59 = *(void **)(v53 + v55 + 16);
  uint64_t v58 = *(void **)(v53 + v55 + 24);
  long long v60 = (uint64_t *)(v54 + v55);
  uint64_t v61 = *v60;
  uint64_t v62 = v60[1];
  uint64_t v64 = (void *)v60[2];
  uint64_t v63 = (void *)v60[3];
  if (!v57)
  {
    if (!v62)
    {
LABEL_30:
      uint64_t v68 = v107[11];
      char v69 = (void *)(v113 + v68);
      uint64_t v70 = *(void *)(v113 + v68 + 8);
      char v71 = (void *)(v54 + v68);
      uint64_t v72 = v71[1];
      if (v70)
      {
        if (!v72) {
          goto LABEL_27;
        }
        if (*v69 != *v71 || v70 != v72)
        {
          char v73 = sub_248175CE0();
          char v66 = 0;
          if ((v73 & 1) == 0) {
            return v66 & 1;
          }
        }
      }
      else if (v72)
      {
        goto LABEL_27;
      }
      uint64_t v74 = v107;
      uint64_t v75 = v107[12];
      uint64_t v76 = v113;
      uint64_t v77 = *(void **)(v113 + v75);
      uint64_t v78 = *(void **)(v54 + v75);
      if (v77)
      {
        if (!v78) {
          goto LABEL_27;
        }
        sub_248102C44();
        id v79 = v78;
        id v80 = v77;
        char v81 = sub_2481756C0();

        if ((v81 & 1) == 0) {
          goto LABEL_27;
        }
      }
      else if (v78)
      {
        goto LABEL_27;
      }
      uint64_t v82 = v74[13];
      char v83 = *(unsigned char *)(v76 + v82 + 16);
      long long v124 = *(_OWORD *)(v76 + v82);
      LOBYTE(v125) = v83;
      uint64_t v84 = (long long *)(v54 + v82);
      char v85 = *((unsigned char *)v84 + 16);
      long long v114 = *v84;
      LOBYTE(v115) = v85;
      if (_s12AppleIDSetup11SignInModelV14DeviceUserKindO2eeoiySbAE_AEtFZ_0((uint64_t)&v124, (uint64_t)&v114))
      {
        uint64_t v86 = v74[14];
        uint64_t v87 = (void *)(v76 + v86);
        uint64_t v88 = *(void *)(v76 + v86 + 8);
        uint64_t v89 = (void *)(v54 + v86);
        uint64_t v90 = v89[1];
        if (v88)
        {
          if (v90)
          {
            uint64_t v54 = v112;
            if (*v87 != *v89 || v88 != v90)
            {
              char v91 = sub_248175CE0();
              char v66 = 0;
              if ((v91 & 1) == 0) {
                return v66 & 1;
              }
            }
LABEL_52:
            if (*(unsigned __int8 *)(v113 + v107[15]) == *(unsigned __int8 *)(v54 + v107[15]))
            {
              uint64_t v92 = v107[16];
              char v93 = *(unsigned char *)(v113 + v92 + 32);
              long long v94 = *(_OWORD *)(v113 + v92 + 16);
              long long v124 = *(_OWORD *)(v113 + v92);
              long long v125 = v94;
              LOBYTE(v126) = v93;
              uint64_t v95 = (long long *)(v112 + v92);
              char v96 = *((unsigned char *)v95 + 32);
              long long v97 = v95[1];
              long long v114 = *v95;
              long long v115 = v97;
              LOBYTE(v116) = v96;
              char v66 = _s12AppleIDSetup11SignInModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)&v124, (uint64_t)&v114);
              return v66 & 1;
            }
          }
        }
        else if (!v90)
        {
          goto LABEL_52;
        }
      }
LABEL_27:
      char v66 = 0;
      return v66 & 1;
    }
LABEL_37:
    sub_247FF6AA4(v61, v62);
    sub_247FF6BFC(v56, v57);
    sub_247FF6BFC(v61, v62);
    goto LABEL_27;
  }
  if (!v62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_37;
  }
  if (v56 == v61 && v57 == v62 || (v65 = sub_248175CE0(), char v66 = 0, (v65 & 1) != 0))
  {
    if ((sub_2480F3F3C(v59, v64) & 1) == 0 || (sub_2480F3F3C(v58, v63) & 1) == 0) {
      goto LABEL_27;
    }
    goto LABEL_30;
  }
  return v66 & 1;
}

unint64_t sub_2480FE308()
{
  unint64_t result = qword_2692DAD40;
  if (!qword_2692DAD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD40);
  }
  return result;
}

unint64_t sub_2480FE35C()
{
  unint64_t result = qword_2692DAD58;
  if (!qword_2692DAD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD58);
  }
  return result;
}

unint64_t sub_2480FE3B0()
{
  unint64_t result = qword_2692DAD60;
  if (!qword_2692DAD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD60);
  }
  return result;
}

uint64_t sub_2480FE404(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D67D8);
    sub_2480FEA7C(a2, type metadata accessor for AIDAServiceType);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2480FE498(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DAD48);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2480FE4E0()
{
  unint64_t result = qword_2692DAD78;
  if (!qword_2692DAD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD78);
  }
  return result;
}

unint64_t sub_2480FE534()
{
  unint64_t result = qword_2692DAD80;
  if (!qword_2692DAD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAD80);
  }
  return result;
}

uint64_t sub_2480FE588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignInModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2480FE5EC()
{
  unint64_t result = qword_2692DADB0;
  if (!qword_2692DADB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DADB0);
  }
  return result;
}

unint64_t sub_2480FE640()
{
  unint64_t result = qword_2692DADB8;
  if (!qword_2692DADB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DADB8);
  }
  return result;
}

unint64_t sub_2480FE694()
{
  unint64_t result = qword_2692DADC0;
  if (!qword_2692DADC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DADC0);
  }
  return result;
}

unint64_t sub_2480FE6E8()
{
  unint64_t result = qword_2692DADC8;
  if (!qword_2692DADC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DADC8);
  }
  return result;
}

unint64_t sub_2480FE73C()
{
  unint64_t result = qword_2692DADD0;
  if (!qword_2692DADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DADD0);
  }
  return result;
}

unint64_t sub_2480FE790()
{
  unint64_t result = qword_2692DAE30;
  if (!qword_2692DAE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAE30);
  }
  return result;
}

unint64_t sub_2480FE7E4()
{
  unint64_t result = qword_2692DAE38;
  if (!qword_2692DAE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAE38);
  }
  return result;
}

unint64_t sub_2480FE838()
{
  unint64_t result = qword_2692DAE40;
  if (!qword_2692DAE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAE40);
  }
  return result;
}

unint64_t sub_2480FE88C()
{
  unint64_t result = qword_2692DAE48;
  if (!qword_2692DAE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAE48);
  }
  return result;
}

unint64_t sub_2480FE8E0()
{
  unint64_t result = qword_2692DAE50;
  if (!qword_2692DAE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAE50);
  }
  return result;
}

unint64_t sub_2480FE934()
{
  unint64_t result = qword_2692DAE58;
  if (!qword_2692DAE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAE58);
  }
  return result;
}

uint64_t sub_2480FE988(void *a1)
{
  a1[1] = sub_2480FEA7C(&qword_2692DAE90, (void (*)(uint64_t))type metadata accessor for SignInModel);
  a1[2] = sub_2480FEA7C(&qword_2692DAE98, (void (*)(uint64_t))type metadata accessor for SignInModel);
  uint64_t result = sub_2480FEA7C(&qword_2692DAEA0, (void (*)(uint64_t))type metadata accessor for SignInModel);
  a1[3] = result;
  return result;
}

uint64_t sub_2480FEA34()
{
  return sub_2480FEA7C(&qword_2692DAEA8, (void (*)(uint64_t))type metadata accessor for SignInModel);
}

uint64_t sub_2480FEA7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2480FEAC4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480FEB04(a1, a2, a3, (uint64_t (*)(void))sub_2480FE534, (uint64_t (*)(void))sub_2480FE3B0, (uint64_t (*)(void))sub_2480FEB58);
}

uint64_t sub_2480FEB04(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_2480FEB58()
{
  unint64_t result = qword_2692DAEB0;
  if (!qword_2692DAEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAEB0);
  }
  return result;
}

unint64_t sub_2480FEBB0()
{
  unint64_t result = qword_2692DAEB8;
  if (!qword_2692DAEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAEB8);
  }
  return result;
}

uint64_t sub_2480FEC04(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2480FEB04(a1, a2, a3, (uint64_t (*)(void))sub_2480FE4E0, (uint64_t (*)(void))sub_2480FE35C, (uint64_t (*)(void))sub_2480FEC44);
}

unint64_t sub_2480FEC44()
{
  unint64_t result = qword_2692DAEC0;
  if (!qword_2692DAEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAEC0);
  }
  return result;
}

unint64_t sub_2480FEC9C()
{
  unint64_t result = qword_2692DAEC8;
  if (!qword_2692DAEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAEC8);
  }
  return result;
}

id sub_2480FECF0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = *(void **)(a1 + *(int *)(type metadata accessor for SignInModel() + 48));
  *a2 = v3;
  return v3;
}

uint64_t *initializeBufferWithCopyOfBuffer for SignInModel(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for IdMSAccount();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v82 = v8;
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = a2[3];
      a1[2] = a2[2];
      a1[3] = v12;
      uint64_t v13 = a2[5];
      a1[4] = a2[4];
      a1[5] = v13;
      uint64_t v14 = a2[7];
      a1[6] = a2[6];
      a1[7] = v14;
      uint64_t v15 = a2[9];
      a1[8] = a2[8];
      a1[9] = v15;
      uint64_t v16 = v7[5];
      id v79 = (char *)a2 + v16;
      char v81 = (char *)a1 + v16;
      uint64_t v17 = sub_248174700();
      uint64_t v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77(v81, v79, v17);
      uint64_t v18 = v7[6];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = *((void *)v20 + 1);
      uint64_t v22 = *((void *)v20 + 2);
      uint64_t v23 = *((void *)v20 + 3);
      uint64_t v24 = *((void *)v20 + 4);
      uint64_t v25 = *((void *)v20 + 5);
      uint64_t v76 = *((void *)v20 + 6);
      uint64_t v78 = *(void *)v20;
      uint64_t v75 = *((void *)v20 + 7);
      uint64_t v80 = *((void *)v20 + 8);
      LOBYTE(v81) = v20[72];
      sub_247FABF8C(*(void *)v20, v21, v22, v23, v24, v25, v76, v75, v80, (char)v81);
      *(void *)uint64_t v19 = v78;
      *((void *)v19 + 1) = v21;
      *((void *)v19 + 2) = v22;
      *((void *)v19 + 3) = v23;
      *((void *)v19 + 4) = v24;
      *((void *)v19 + 5) = v25;
      *((void *)v19 + 6) = v76;
      *((void *)v19 + 7) = v75;
      *((void *)v19 + 8) = v80;
      v19[72] = (char)v81;
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      uint64_t v26 = *(void (**)(uint64_t *, void, uint64_t, int *))(v82 + 56);
      swift_bridgeObjectRetain();
      v26(a1, 0, 1, v7);
    }
    uint64_t v27 = a3[5];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    if (v30)
    {
      *(void *)uint64_t v28 = *v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = v29[3];
      *((void *)v28 + 2) = v29[2];
      *((void *)v28 + 3) = v31;
      uint64_t v32 = v29[5];
      *((void *)v28 + 4) = v29[4];
      *((void *)v28 + 5) = v32;
      uint64_t v33 = v29[7];
      *((void *)v28 + 6) = v29[6];
      *((void *)v28 + 7) = v33;
      uint64_t v34 = v29[9];
      *((void *)v28 + 8) = v29[8];
      *((void *)v28 + 9) = v34;
      uint64_t v35 = v29 + 10;
      unint64_t v36 = v29[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36 >> 60 == 15)
      {
        *((_OWORD *)v28 + 5) = *(_OWORD *)v35;
      }
      else
      {
        uint64_t v40 = *v35;
        sub_247FB6C20(*v35, v36);
        *((void *)v28 + 10) = v40;
        *((void *)v28 + 11) = v36;
      }
    }
    else
    {
      long long v37 = *((_OWORD *)v29 + 3);
      *((_OWORD *)v28 + 2) = *((_OWORD *)v29 + 2);
      *((_OWORD *)v28 + 3) = v37;
      long long v38 = *((_OWORD *)v29 + 5);
      *((_OWORD *)v28 + 4) = *((_OWORD *)v29 + 4);
      *((_OWORD *)v28 + 5) = v38;
      long long v39 = *((_OWORD *)v29 + 1);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v39;
    }
    uint64_t v41 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v41) = *(uint64_t *)((char *)a2 + v41);
    uint64_t v42 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v42) = *((unsigned char *)a2 + v42);
    uint64_t v43 = a3[10];
    uint64_t v44 = (uint64_t *)((char *)a1 + v43);
    uint64_t v45 = (uint64_t *)((char *)a2 + v43);
    uint64_t v46 = *(uint64_t *)((char *)a2 + v43 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v46)
    {
      *uint64_t v44 = *v45;
      v44[1] = v46;
      uint64_t v47 = v45[2];
      uint64_t v48 = v45[3];
      v44[2] = v47;
      v44[3] = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v49 = *((_OWORD *)v45 + 1);
      *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
      *((_OWORD *)v44 + 1) = v49;
    }
    uint64_t v50 = a3[11];
    uint64_t v51 = a3[12];
    uint64_t v52 = (uint64_t *)((char *)a1 + v50);
    uint64_t v53 = (uint64_t *)((char *)a2 + v50);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    uint64_t v55 = *(void **)((char *)a2 + v51);
    *(uint64_t *)((char *)a1 + v51) = (uint64_t)v55;
    uint64_t v56 = a3[13];
    uint64_t v57 = (char *)a1 + v56;
    uint64_t v58 = (char *)a2 + v56;
    uint64_t v59 = *(void *)v58;
    uint64_t v60 = *((void *)v58 + 1);
    char v61 = v58[16];
    swift_bridgeObjectRetain();
    id v62 = v55;
    sub_247FE42A8(v59, v60, v61);
    *(void *)uint64_t v57 = v59;
    *((void *)v57 + 1) = v60;
    v57[16] = v61;
    uint64_t v63 = a3[14];
    uint64_t v64 = a3[15];
    char v65 = (uint64_t *)((char *)a1 + v63);
    char v66 = (uint64_t *)((char *)a2 + v63);
    uint64_t v67 = v66[1];
    *char v65 = *v66;
    v65[1] = v67;
    *((unsigned char *)a1 + v64) = *((unsigned char *)a2 + v64);
    uint64_t v68 = a3[16];
    char v69 = (char *)a1 + v68;
    uint64_t v70 = (char *)a2 + v68;
    unint64_t v71 = *(uint64_t *)((char *)a2 + v68 + 8);
    swift_bridgeObjectRetain();
    if (v71 >= 3)
    {
      *(void *)char v69 = *(void *)v70;
      *((void *)v69 + 1) = v71;
      uint64_t v73 = *((void *)v70 + 3);
      *((void *)v69 + 2) = *((void *)v70 + 2);
      *((void *)v69 + 3) = v73;
      v69[32] = v70[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v72 = *((_OWORD *)v70 + 1);
      *(_OWORD *)char v69 = *(_OWORD *)v70;
      *((_OWORD *)v69 + 1) = v72;
      v69[32] = v70[32];
    }
  }
  return a1;
}

unint64_t destroy for SignInModel(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for IdMSAccount();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 20);
    uint64_t v6 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 24);
    sub_247FAC1EC(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = (void *)(a1 + a2[5]);
  if (v8[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v9 = v8[11];
    if (v9 >> 60 != 15) {
      sub_247FB6CCC(v8[10], v9);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + a2[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(a1 + a2[13]), *(void *)(a1 + a2[13] + 8), *(unsigned char *)(a1 + a2[13] + 16));
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + a2[16] + 8);
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for SignInModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v80 = v7;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    uint64_t v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    uint64_t v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    uint64_t v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    uint64_t v14 = v6[5];
    uint64_t v77 = (char *)a2 + v14;
    id v79 = (char *)a1 + v14;
    uint64_t v15 = sub_248174700();
    uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v75(v79, v77, v15);
    uint64_t v16 = v6[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = *((void *)v18 + 1);
    uint64_t v20 = *((void *)v18 + 2);
    uint64_t v21 = *((void *)v18 + 3);
    uint64_t v22 = *((void *)v18 + 4);
    uint64_t v23 = *((void *)v18 + 5);
    uint64_t v74 = *((void *)v18 + 6);
    uint64_t v76 = *(void *)v18;
    uint64_t v73 = *((void *)v18 + 7);
    uint64_t v78 = *((void *)v18 + 8);
    LOBYTE(v79) = v18[72];
    sub_247FABF8C(*(void *)v18, v19, v20, v21, v22, v23, v74, v73, v78, (char)v79);
    *(void *)uint64_t v17 = v76;
    *((void *)v17 + 1) = v19;
    *((void *)v17 + 2) = v20;
    *((void *)v17 + 3) = v21;
    *((void *)v17 + 4) = v22;
    *((void *)v17 + 5) = v23;
    *((void *)v17 + 6) = v74;
    *((void *)v17 + 7) = v73;
    *((void *)v17 + 8) = v78;
    v17[72] = (char)v79;
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    uint64_t v24 = *(void (**)(void *, void, uint64_t, int *))(v80 + 56);
    swift_bridgeObjectRetain();
    v24(a1, 0, 1, v6);
  }
  uint64_t v25 = a3[5];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  if (v28)
  {
    *(void *)uint64_t v26 = *v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v27[3];
    *((void *)v26 + 2) = v27[2];
    *((void *)v26 + 3) = v29;
    uint64_t v30 = v27[5];
    *((void *)v26 + 4) = v27[4];
    *((void *)v26 + 5) = v30;
    uint64_t v31 = v27[7];
    *((void *)v26 + 6) = v27[6];
    *((void *)v26 + 7) = v31;
    uint64_t v32 = v27[9];
    *((void *)v26 + 8) = v27[8];
    *((void *)v26 + 9) = v32;
    uint64_t v33 = v27 + 10;
    unint64_t v34 = v27[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v34 >> 60 == 15)
    {
      *((_OWORD *)v26 + 5) = *(_OWORD *)v33;
    }
    else
    {
      uint64_t v38 = *v33;
      sub_247FB6C20(*v33, v34);
      *((void *)v26 + 10) = v38;
      *((void *)v26 + 11) = v34;
    }
  }
  else
  {
    long long v35 = *((_OWORD *)v27 + 3);
    *((_OWORD *)v26 + 2) = *((_OWORD *)v27 + 2);
    *((_OWORD *)v26 + 3) = v35;
    long long v36 = *((_OWORD *)v27 + 5);
    *((_OWORD *)v26 + 4) = *((_OWORD *)v27 + 4);
    *((_OWORD *)v26 + 5) = v36;
    long long v37 = *((_OWORD *)v27 + 1);
    *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
    *((_OWORD *)v26 + 1) = v37;
  }
  uint64_t v39 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
  uint64_t v40 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v40) = *((unsigned char *)a2 + v40);
  uint64_t v41 = a3[10];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  uint64_t v44 = *(void *)((char *)a2 + v41 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v44)
  {
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v43[2];
    uint64_t v46 = v43[3];
    v42[2] = v45;
    v42[3] = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v47 = *((_OWORD *)v43 + 1);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v47;
  }
  uint64_t v48 = a3[11];
  uint64_t v49 = a3[12];
  uint64_t v50 = (void *)((char *)a1 + v48);
  uint64_t v51 = (void *)((char *)a2 + v48);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  uint64_t v53 = *(void **)((char *)a2 + v49);
  *(void *)((char *)a1 + v49) = v53;
  uint64_t v54 = a3[13];
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  uint64_t v57 = *(void *)v56;
  uint64_t v58 = *((void *)v56 + 1);
  char v59 = v56[16];
  swift_bridgeObjectRetain();
  id v60 = v53;
  sub_247FE42A8(v57, v58, v59);
  *(void *)uint64_t v55 = v57;
  *((void *)v55 + 1) = v58;
  v55[16] = v59;
  uint64_t v61 = a3[14];
  uint64_t v62 = a3[15];
  uint64_t v63 = (void *)((char *)a1 + v61);
  uint64_t v64 = (void *)((char *)a2 + v61);
  uint64_t v65 = v64[1];
  *uint64_t v63 = *v64;
  v63[1] = v65;
  *((unsigned char *)a1 + v62) = *((unsigned char *)a2 + v62);
  uint64_t v66 = a3[16];
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  unint64_t v69 = *(void *)((char *)a2 + v66 + 8);
  swift_bridgeObjectRetain();
  if (v69 >= 3)
  {
    *(void *)uint64_t v67 = *(void *)v68;
    *((void *)v67 + 1) = v69;
    uint64_t v71 = *((void *)v68 + 3);
    *((void *)v67 + 2) = *((void *)v68 + 2);
    *((void *)v67 + 3) = v71;
    v67[32] = v68[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v70 = *((_OWORD *)v68 + 1);
    *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
    *((_OWORD *)v67 + 1) = v70;
    v67[32] = v68[32];
  }
  return a1;
}

void *assignWithCopy for SignInModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v111 = v7;
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      uint64_t v11 = v6[5];
      uint64_t v106 = (char *)a2 + v11;
      uint64_t v109 = (char *)a1 + v11;
      uint64_t v12 = sub_248174700();
      uint64_t v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v103(v109, v106, v12);
      uint64_t v13 = v6[6];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = *((void *)v15 + 1);
      uint64_t v17 = *((void *)v15 + 2);
      uint64_t v18 = *((void *)v15 + 3);
      uint64_t v19 = *((void *)v15 + 4);
      uint64_t v20 = *((void *)v15 + 5);
      uint64_t v101 = *((void *)v15 + 6);
      uint64_t v104 = *(void *)v15;
      uint64_t v100 = *((void *)v15 + 7);
      uint64_t v107 = *((void *)v15 + 8);
      LOBYTE(v109) = v15[72];
      sub_247FABF8C(*(void *)v15, v16, v17, v18, v19, v20, v101, v100, v107, (char)v109);
      *(void *)uint64_t v14 = v104;
      *((void *)v14 + 1) = v16;
      *((void *)v14 + 2) = v17;
      *((void *)v14 + 3) = v18;
      *((void *)v14 + 4) = v19;
      *((void *)v14 + 5) = v20;
      *((void *)v14 + 6) = v101;
      *((void *)v14 + 7) = v100;
      *((void *)v14 + 8) = v107;
      v14[72] = (char)v109;
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      uint64_t v21 = *(void (**)(void *, void, uint64_t, int *))(v111 + 56);
      swift_bridgeObjectRetain();
      v21(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_248100154((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v35 = v6[5];
  long long v36 = (char *)a1 + v35;
  long long v37 = (char *)a2 + v35;
  uint64_t v38 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  uint64_t v39 = v6[6];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = *((void *)v41 + 1);
  uint64_t v43 = *((void *)v41 + 2);
  uint64_t v44 = *((void *)v41 + 3);
  uint64_t v45 = *((void *)v41 + 4);
  uint64_t v46 = *((void *)v41 + 5);
  uint64_t v105 = *((void *)v41 + 6);
  uint64_t v108 = *(void *)v41;
  uint64_t v102 = *((void *)v41 + 7);
  uint64_t v110 = *((void *)v41 + 8);
  char v113 = v41[72];
  sub_247FABF8C(*(void *)v41, v42, v43, v44, v45, v46, v105, v102, v110, v113);
  uint64_t v47 = *(void *)v40;
  uint64_t v48 = *((void *)v40 + 1);
  uint64_t v49 = *((void *)v40 + 2);
  uint64_t v50 = *((void *)v40 + 3);
  uint64_t v51 = *((void *)v40 + 4);
  uint64_t v52 = *((void *)v40 + 5);
  uint64_t v53 = *((void *)v40 + 6);
  uint64_t v54 = *((void *)v40 + 7);
  uint64_t v55 = *((void *)v40 + 8);
  char v56 = v40[72];
  *(void *)uint64_t v40 = v108;
  *((void *)v40 + 1) = v42;
  *((void *)v40 + 2) = v43;
  *((void *)v40 + 3) = v44;
  *((void *)v40 + 4) = v45;
  *((void *)v40 + 5) = v46;
  *((void *)v40 + 6) = v105;
  *((void *)v40 + 7) = v102;
  *((void *)v40 + 8) = v110;
  v40[72] = v113;
  sub_247FAC1EC(v47, v48, v49, v50, v51, v52, v53, v54, v55, v56);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v23 = a3[5];
  uint64_t v24 = (uint64_t)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a1 + v23 + 8);
  uint64_t v27 = *(void *)((char *)a2 + v23 + 8);
  if (!v26)
  {
    if (!v27)
    {
      long long v57 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *(_OWORD *)(v24 + 16) = v57;
      long long v58 = *((_OWORD *)v25 + 2);
      long long v59 = *((_OWORD *)v25 + 3);
      long long v60 = *((_OWORD *)v25 + 5);
      *(_OWORD *)(v24 + 64) = *((_OWORD *)v25 + 4);
      *(_OWORD *)(v24 + 80) = v60;
      *(_OWORD *)(v24 + 32) = v58;
      *(_OWORD *)(v24 + 48) = v59;
      goto LABEL_24;
    }
    *(void *)uint64_t v24 = *(void *)v25;
    *(void *)(v24 + 8) = *((void *)v25 + 1);
    *(void *)(v24 + 16) = *((void *)v25 + 2);
    *(void *)(v24 + 24) = *((void *)v25 + 3);
    *(void *)(v24 + 32) = *((void *)v25 + 4);
    *(void *)(v24 + 40) = *((void *)v25 + 5);
    *(void *)(v24 + 48) = *((void *)v25 + 6);
    *(void *)(v24 + 56) = *((void *)v25 + 7);
    *(void *)(v24 + 64) = *((void *)v25 + 8);
    *(void *)(v24 + 72) = *((void *)v25 + 9);
    uint64_t v112 = v25 + 80;
    unint64_t v29 = *((void *)v25 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v29 >> 60 == 15)
    {
      *(_OWORD *)(v24 + 80) = *v112;
      goto LABEL_24;
    }
    uint64_t v30 = *(void *)v112;
    goto LABEL_22;
  }
  if (!v27)
  {
    sub_248007274(v24);
    long long v31 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v31;
    long long v32 = *((_OWORD *)v25 + 5);
    long long v34 = *((_OWORD *)v25 + 2);
    long long v33 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 64) = *((_OWORD *)v25 + 4);
    *(_OWORD *)(v24 + 80) = v32;
    *(_OWORD *)(v24 + 32) = v34;
    *(_OWORD *)(v24 + 48) = v33;
    goto LABEL_24;
  }
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = *((void *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v24 + 16) = *((void *)v25 + 2);
  *(void *)(v24 + 24) = *((void *)v25 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v24 + 32) = *((void *)v25 + 4);
  *(void *)(v24 + 40) = *((void *)v25 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v24 + 48) = *((void *)v25 + 6);
  *(void *)(v24 + 56) = *((void *)v25 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v24 + 64) = *((void *)v25 + 8);
  *(void *)(v24 + 72) = *((void *)v25 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = (uint64_t *)(v25 + 80);
  unint64_t v29 = *((void *)v25 + 11);
  if (*(void *)(v24 + 88) >> 60 == 15)
  {
    if (v29 >> 60 != 15)
    {
      uint64_t v30 = *v28;
LABEL_22:
      sub_247FB6C20(v30, v29);
      *(void *)(v24 + 80) = v30;
      *(void *)(v24 + 88) = v29;
      goto LABEL_24;
    }
LABEL_18:
    *(_OWORD *)(v24 + 80) = *(_OWORD *)v28;
    goto LABEL_24;
  }
  if (v29 >> 60 == 15)
  {
    sub_248007220(v24 + 80);
    goto LABEL_18;
  }
  uint64_t v61 = *v28;
  sub_247FB6C20(*v28, *((void *)v25 + 11));
  uint64_t v62 = *(void *)(v24 + 80);
  unint64_t v63 = *(void *)(v24 + 88);
  *(void *)(v24 + 80) = v61;
  *(void *)(v24 + 88) = v29;
  sub_247FB6CCC(v62, v63);
LABEL_24:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v64 = a3[10];
  uint64_t v65 = (void *)((char *)a1 + v64);
  uint64_t v66 = (void *)((char *)a2 + v64);
  uint64_t v67 = *(void *)((char *)a1 + v64 + 8);
  uint64_t v68 = *(void *)((char *)a2 + v64 + 8);
  if (v67)
  {
    if (v68)
    {
      *uint64_t v65 = *v66;
      v65[1] = v66[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v65[2] = v66[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v65[3] = v66[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FFB0A0((uint64_t)v65);
      long long v69 = *((_OWORD *)v66 + 1);
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v69;
    }
  }
  else if (v68)
  {
    *uint64_t v65 = *v66;
    v65[1] = v66[1];
    long long v65[2] = v66[2];
    v65[3] = v66[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v70 = *((_OWORD *)v66 + 1);
    *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
    *((_OWORD *)v65 + 1) = v70;
  }
  uint64_t v71 = a3[11];
  long long v72 = (void *)((char *)a1 + v71);
  uint64_t v73 = (void *)((char *)a2 + v71);
  *long long v72 = *v73;
  v72[1] = v73[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v74 = a3[12];
  uint64_t v75 = *(void **)((char *)a1 + v74);
  uint64_t v76 = *(void **)((char *)a2 + v74);
  *(void *)((char *)a1 + v74) = v76;
  id v77 = v76;

  uint64_t v78 = a3[13];
  id v79 = (char *)a1 + v78;
  uint64_t v80 = (char *)a2 + v78;
  uint64_t v81 = *(void *)v80;
  uint64_t v82 = *((void *)v80 + 1);
  char v83 = v80[16];
  sub_247FE42A8(*(void *)v80, v82, v83);
  uint64_t v84 = *(void *)v79;
  uint64_t v85 = *((void *)v79 + 1);
  *(void *)id v79 = v81;
  *((void *)v79 + 1) = v82;
  char v86 = v79[16];
  v79[16] = v83;
  sub_247FE52C4(v84, v85, v86);
  uint64_t v87 = a3[14];
  uint64_t v88 = (void *)((char *)a1 + v87);
  uint64_t v89 = (void *)((char *)a2 + v87);
  *uint64_t v88 = *v89;
  v88[1] = v89[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  uint64_t v90 = a3[16];
  uint64_t v91 = (uint64_t)a1 + v90;
  uint64_t v92 = (char *)a2 + v90;
  unint64_t v93 = *(void *)((char *)a1 + v90 + 8);
  unint64_t v94 = *((void *)v92 + 1);
  if (v93 >= 3)
  {
    if (v94 >= 3)
    {
      *(void *)uint64_t v91 = *(void *)v92;
      *(void *)(v91 + 8) = *((void *)v92 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v91 + 16) = *((void *)v92 + 2);
      *(void *)(v91 + 24) = *((void *)v92 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v97 = v92[32];
    }
    else
    {
      sub_247FB33D4(v91, &qword_2692D7018);
      char v97 = v92[32];
      long long v98 = *((_OWORD *)v92 + 1);
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *(_OWORD *)(v91 + 16) = v98;
    }
    *(unsigned char *)(v91 + 32) = v97;
  }
  else if (v94 >= 3)
  {
    *(void *)uint64_t v91 = *(void *)v92;
    *(void *)(v91 + 8) = *((void *)v92 + 1);
    *(void *)(v91 + 16) = *((void *)v92 + 2);
    *(void *)(v91 + 24) = *((void *)v92 + 3);
    *(unsigned char *)(v91 + 32) = v92[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v95 = *(_OWORD *)v92;
    long long v96 = *((_OWORD *)v92 + 1);
    *(unsigned char *)(v91 + 32) = v92[32];
    *(_OWORD *)uint64_t v91 = v95;
    *(_OWORD *)(v91 + 16) = v96;
  }
  return a1;
}

uint64_t sub_248100154(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for SignInModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    a1[4] = a2[4];
    long long v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = v6[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_248174700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = v6[6];
    uint64_t v16 = (_OWORD *)((char *)a1 + v15);
    uint64_t v17 = (_OWORD *)((char *)a2 + v15);
    long long v18 = v17[3];
    v16[2] = v17[2];
    v16[3] = v18;
    *(_OWORD *)((char *)v16 + 57) = *(_OWORD *)((char *)v17 + 57);
    long long v19 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v19;
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v20 = a3[5];
  uint64_t v21 = a3[6];
  uint64_t v22 = (_OWORD *)((char *)a1 + v20);
  uint64_t v23 = (_OWORD *)((char *)a2 + v20);
  long long v24 = v23[3];
  v22[2] = v23[2];
  v22[3] = v24;
  long long v25 = v23[5];
  v22[4] = v23[4];
  v22[5] = v25;
  long long v26 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v26;
  *(void *)((char *)a1 + v21) = *(void *)((char *)a2 + v21);
  uint64_t v27 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
  uint64_t v28 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  unint64_t v29 = (_OWORD *)((char *)a1 + v28);
  uint64_t v30 = (_OWORD *)((char *)a2 + v28);
  long long v31 = v30[1];
  *unint64_t v29 = *v30;
  v29[1] = v31;
  uint64_t v32 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v33 = a3[13];
  uint64_t v34 = a3[14];
  uint64_t v35 = (char *)a1 + v33;
  long long v36 = (char *)a2 + v33;
  long long v37 = *(_OWORD *)v36;
  v35[16] = v36[16];
  *(_OWORD *)uint64_t v35 = v37;
  *(_OWORD *)((char *)a1 + v34) = *(_OWORD *)((char *)a2 + v34);
  uint64_t v38 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  v39[32] = v40[32];
  return a1;
}

void *assignWithTake for SignInModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      long long v11 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v11;
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      long long v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v12;
      uint64_t v13 = v6[5];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      uint64_t v17 = v6[6];
      long long v18 = (_OWORD *)((char *)a1 + v17);
      long long v19 = (_OWORD *)((char *)a2 + v17);
      long long v20 = v19[3];
      v18[2] = v19[2];
      void v18[3] = v20;
      *(_OWORD *)((char *)v18 + 57) = *(_OWORD *)((char *)v19 + 57);
      long long v21 = v19[1];
      _OWORD *v18 = *v19;
      v18[1] = v21;
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_248100154((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v69 = a2[1];
  *a1 = *a2;
  a1[1] = v69;
  swift_bridgeObjectRelease();
  uint64_t v70 = a2[3];
  a1[2] = a2[2];
  a1[3] = v70;
  swift_bridgeObjectRelease();
  uint64_t v71 = a2[5];
  a1[4] = a2[4];
  a1[5] = v71;
  swift_bridgeObjectRelease();
  uint64_t v72 = a2[7];
  a1[6] = a2[6];
  a1[7] = v72;
  swift_bridgeObjectRelease();
  uint64_t v73 = a2[9];
  a1[8] = a2[8];
  a1[9] = v73;
  swift_bridgeObjectRelease();
  uint64_t v74 = v6[5];
  uint64_t v75 = (char *)a1 + v74;
  uint64_t v76 = (char *)a2 + v74;
  uint64_t v77 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v75, v76, v77);
  uint64_t v78 = v6[6];
  id v79 = (char *)a1 + v78;
  uint64_t v80 = (char *)a2 + v78;
  uint64_t v81 = *((void *)v80 + 8);
  char v82 = v80[72];
  uint64_t v83 = *(void *)v79;
  uint64_t v84 = *((void *)v79 + 1);
  uint64_t v85 = *((void *)v79 + 2);
  uint64_t v86 = *((void *)v79 + 3);
  uint64_t v87 = *((void *)v79 + 4);
  uint64_t v88 = *((void *)v79 + 5);
  uint64_t v89 = *((void *)v79 + 6);
  uint64_t v90 = *((void *)v79 + 7);
  uint64_t v91 = *((void *)v79 + 8);
  char v92 = v79[72];
  long long v93 = *((_OWORD *)v80 + 1);
  *(_OWORD *)id v79 = *(_OWORD *)v80;
  *((_OWORD *)v79 + 1) = v93;
  long long v94 = *((_OWORD *)v80 + 3);
  *((_OWORD *)v79 + 2) = *((_OWORD *)v80 + 2);
  *((_OWORD *)v79 + 3) = v94;
  *((void *)v79 + 8) = v81;
  v79[72] = v82;
  sub_247FAC1EC(v83, v84, v85, v86, v87, v88, v89, v90, v91, v92);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v23 = a3[5];
  uint64_t v24 = (uint64_t)a1 + v23;
  long long v25 = (char *)a2 + v23;
  if (!*(void *)((char *)a1 + v23 + 8))
  {
LABEL_14:
    long long v34 = *((_OWORD *)v25 + 3);
    *(_OWORD *)(v24 + 32) = *((_OWORD *)v25 + 2);
    *(_OWORD *)(v24 + 48) = v34;
    long long v35 = *((_OWORD *)v25 + 5);
    *(_OWORD *)(v24 + 64) = *((_OWORD *)v25 + 4);
    *(_OWORD *)(v24 + 80) = v35;
    long long v36 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v36;
    goto LABEL_15;
  }
  uint64_t v26 = *((void *)v25 + 1);
  if (!v26)
  {
    sub_248007274(v24);
    goto LABEL_14;
  }
  *(void *)uint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v25 + 3);
  *(void *)(v24 + 16) = *((void *)v25 + 2);
  *(void *)(v24 + 24) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v25 + 5);
  *(void *)(v24 + 32) = *((void *)v25 + 4);
  *(void *)(v24 + 40) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *((void *)v25 + 7);
  *(void *)(v24 + 48) = *((void *)v25 + 6);
  *(void *)(v24 + 56) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)v25 + 9);
  *(void *)(v24 + 64) = *((void *)v25 + 8);
  *(void *)(v24 + 72) = v30;
  swift_bridgeObjectRelease();
  long long v31 = v25 + 80;
  unint64_t v32 = *(void *)(v24 + 88);
  if (v32 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)(v24 + 80) = *v31;
    goto LABEL_15;
  }
  unint64_t v33 = *((void *)v25 + 11);
  if (v33 >> 60 == 15)
  {
    sub_248007220(v24 + 80);
    goto LABEL_12;
  }
  uint64_t v95 = *(void *)(v24 + 80);
  *(void *)(v24 + 80) = *(void *)v31;
  *(void *)(v24 + 88) = v33;
  sub_247FB6CCC(v95, v32);
LABEL_15:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v37) = *((unsigned char *)a2 + v37);
  uint64_t v38 = a3[10];
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  if (*(void *)((char *)a1 + v38 + 8))
  {
    uint64_t v41 = v40[1];
    if (v41)
    {
      *uint64_t v39 = *v40;
      v39[1] = v41;
      swift_bridgeObjectRelease();
      v39[2] = v40[2];
      swift_bridgeObjectRelease();
      void v39[3] = v40[3];
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_247FFB0A0((uint64_t)v39);
  }
  long long v42 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v42;
LABEL_20:
  uint64_t v43 = a3[11];
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *uint64_t v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[12];
  uint64_t v49 = *(void **)((char *)a1 + v48);
  *(void *)((char *)a1 + v48) = *(void *)((char *)a2 + v48);

  uint64_t v50 = a3[13];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  char v53 = v52[16];
  uint64_t v54 = *(void *)v51;
  uint64_t v55 = *((void *)v51 + 1);
  *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
  char v56 = v51[16];
  v51[16] = v53;
  sub_247FE52C4(v54, v55, v56);
  uint64_t v57 = a3[14];
  long long v58 = (void *)((char *)a1 + v57);
  long long v59 = (void *)((char *)a2 + v57);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  *long long v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  unint64_t v63 = (char *)a1 + v62;
  uint64_t v64 = (char *)a2 + v62;
  if (*(void *)((char *)a1 + v62 + 8) >= 3uLL)
  {
    unint64_t v65 = *((void *)v64 + 1);
    if (v65 >= 3)
    {
      *(void *)unint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = v65;
      swift_bridgeObjectRelease();
      uint64_t v67 = *((void *)v64 + 3);
      *((void *)v63 + 2) = *((void *)v64 + 2);
      *((void *)v63 + 3) = v67;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_247FB33D4((uint64_t)a1 + v62, &qword_2692D7018);
  }
  long long v66 = *((_OWORD *)v64 + 1);
  *(_OWORD *)unint64_t v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v66;
LABEL_25:
  v63[32] = v64[32];
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_248100940);
}

uint64_t sub_248100940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SignInModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_248100A18);
}

uint64_t sub_248100A18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_248100AD8()
{
  sub_247FAD6CC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t initializeWithCopy for SignInModel.State(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for SignInModel.State(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 1);
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  return a1;
}

uint64_t assignWithTake for SignInModel.State(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInModel.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SignInModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_248100E60(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.State()
{
  return &type metadata for SignInModel.State;
}

uint64_t destroy for SignInModel.DeviceUserKind(uint64_t a1)
{
  return sub_247FE52C4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s12AppleIDSetup11SignInModelV14DeviceUserKindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_247FE42A8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SignInModel.DeviceUserKind(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_247FE42A8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_247FE52C4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SignInModel.DeviceUserKind(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_247FE52C4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SignInModel.DeviceUserKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SignInModel.DeviceUserKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_248101024(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_24810103C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind()
{
  return &type metadata for SignInModel.DeviceUserKind;
}

unsigned char *storeEnumTagSinglePayload for SignInModel.DeviceUserKind.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248101130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.CodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.CodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.NoneCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.ExistingCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.ExistingCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.AutomaticCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.AutomaticCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.PrimaryCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.PrimaryCodingKeys;
}

unsigned char *_s12AppleIDSetup11SignInModelV14DeviceUserKindO18ExistingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x248101248);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.DeviceUserKind.GuestCodingKeys()
{
  return &type metadata for SignInModel.DeviceUserKind.GuestCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SignInModel.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24810134CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.State.CodingKeys()
{
  return &type metadata for SignInModel.State.CodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.State.InitialCodingKeys()
{
  return &type metadata for SignInModel.State.InitialCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.State.SigningInCodingKeys()
{
  return &type metadata for SignInModel.State.SigningInCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SignInModel.State.AlertCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248101470);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.State.AlertCodingKeys()
{
  return &type metadata for SignInModel.State.AlertCodingKeys;
}

ValueMetadata *type metadata accessor for SignInModel.State.FinishedCodingKeys()
{
  return &type metadata for SignInModel.State.FinishedCodingKeys;
}

uint64_t getEnumTagSinglePayload for SignInModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SignInModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248101614);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SignInModel.CodingKeys()
{
  return &type metadata for SignInModel.CodingKeys;
}

unint64_t sub_248101650()
{
  unint64_t result = qword_2692DAEE0;
  if (!qword_2692DAEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAEE0);
  }
  return result;
}

unint64_t sub_2481016A8()
{
  unint64_t result = qword_2692DAEE8;
  if (!qword_2692DAEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAEE8);
  }
  return result;
}

unint64_t sub_248101700()
{
  unint64_t result = qword_2692DAEF0;
  if (!qword_2692DAEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAEF0);
  }
  return result;
}

unint64_t sub_248101758()
{
  unint64_t result = qword_2692DAEF8;
  if (!qword_2692DAEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAEF8);
  }
  return result;
}

unint64_t sub_2481017B0()
{
  unint64_t result = qword_2692DAF00;
  if (!qword_2692DAF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF00);
  }
  return result;
}

unint64_t sub_248101808()
{
  unint64_t result = qword_2692DAF08;
  if (!qword_2692DAF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF08);
  }
  return result;
}

unint64_t sub_248101860()
{
  unint64_t result = qword_2692DAF10;
  if (!qword_2692DAF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF10);
  }
  return result;
}

unint64_t sub_2481018B8()
{
  unint64_t result = qword_2692DAF18;
  if (!qword_2692DAF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF18);
  }
  return result;
}

unint64_t sub_248101910()
{
  unint64_t result = qword_2692DAF20;
  if (!qword_2692DAF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF20);
  }
  return result;
}

unint64_t sub_248101968()
{
  unint64_t result = qword_2692DAF28;
  if (!qword_2692DAF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF28);
  }
  return result;
}

unint64_t sub_2481019C0()
{
  unint64_t result = qword_2692DAF30;
  if (!qword_2692DAF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF30);
  }
  return result;
}

unint64_t sub_248101A18()
{
  unint64_t result = qword_2692DAF38;
  if (!qword_2692DAF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF38);
  }
  return result;
}

unint64_t sub_248101A70()
{
  unint64_t result = qword_2692DAF40;
  if (!qword_2692DAF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF40);
  }
  return result;
}

unint64_t sub_248101AC8()
{
  unint64_t result = qword_2692DAF48;
  if (!qword_2692DAF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF48);
  }
  return result;
}

unint64_t sub_248101B20()
{
  unint64_t result = qword_2692DAF50;
  if (!qword_2692DAF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF50);
  }
  return result;
}

unint64_t sub_248101B78()
{
  unint64_t result = qword_2692DAF58;
  if (!qword_2692DAF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF58);
  }
  return result;
}

unint64_t sub_248101BD0()
{
  unint64_t result = qword_2692DAF60;
  if (!qword_2692DAF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF60);
  }
  return result;
}

unint64_t sub_248101C28()
{
  unint64_t result = qword_2692DAF68;
  if (!qword_2692DAF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF68);
  }
  return result;
}

unint64_t sub_248101C80()
{
  unint64_t result = qword_2692DAF70;
  if (!qword_2692DAF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF70);
  }
  return result;
}

unint64_t sub_248101CD8()
{
  unint64_t result = qword_2692DAF78;
  if (!qword_2692DAF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF78);
  }
  return result;
}

unint64_t sub_248101D30()
{
  unint64_t result = qword_2692DAF80;
  if (!qword_2692DAF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF80);
  }
  return result;
}

unint64_t sub_248101D88()
{
  unint64_t result = qword_2692DAF88;
  if (!qword_2692DAF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF88);
  }
  return result;
}

unint64_t sub_248101DE0()
{
  unint64_t result = qword_2692DAF90;
  if (!qword_2692DAF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF90);
  }
  return result;
}

unint64_t sub_248101E38()
{
  unint64_t result = qword_2692DAF98;
  if (!qword_2692DAF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAF98);
  }
  return result;
}

unint64_t sub_248101E90()
{
  unint64_t result = qword_2692DAFA0;
  if (!qword_2692DAFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFA0);
  }
  return result;
}

unint64_t sub_248101EE8()
{
  unint64_t result = qword_2692DAFA8;
  if (!qword_2692DAFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFA8);
  }
  return result;
}

unint64_t sub_248101F40()
{
  unint64_t result = qword_2692DAFB0;
  if (!qword_2692DAFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFB0);
  }
  return result;
}

unint64_t sub_248101F98()
{
  unint64_t result = qword_2692DAFB8;
  if (!qword_2692DAFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFB8);
  }
  return result;
}

unint64_t sub_248101FF0()
{
  unint64_t result = qword_2692DAFC0;
  if (!qword_2692DAFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFC0);
  }
  return result;
}

unint64_t sub_248102048()
{
  unint64_t result = qword_2692DAFC8;
  if (!qword_2692DAFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFC8);
  }
  return result;
}

unint64_t sub_2481020A0()
{
  unint64_t result = qword_2692DAFD0;
  if (!qword_2692DAFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFD0);
  }
  return result;
}

uint64_t sub_2481020F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C75736552707273 && a2 == 0xEA00000000007374 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248192B90 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5364657269736564 && a2 == 0xEF73656369767265 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000248192BB0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000248192BE0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000248192B70 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000248191AC0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000248192C00 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7355656369766564 && a2 == 0xEE00646E694B7265 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F7372655077656ELL && a2 == 0xEC0000004449616ELL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6C616E69467369 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_24810265C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465747065636361 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2481027AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x49676E696E676973 && a2 == 0xE90000000000006ELL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7472656C61 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24810296C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697473697865 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7972616D697270 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7473657567 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_248102B80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 176);
  unint64_t v9 = *(void *)(a1 + 184);
  sub_2480F8704(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88));
  sub_2480F8704(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

unint64_t sub_248102C44()
{
  unint64_t result = qword_2692DAFD8;
  if (!qword_2692DAFD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2692DAFD8);
  }
  return result;
}

void __swiftcall Symptom.into()(AISSymptom *__return_ptr retstr)
{
  unint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 88);
  if (v2 > 3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = qword_24818AD68[v2];
  }
  id v5 = objc_allocWithZone((Class)AISSymptom);
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_initWithAltDSID_priority_problemFlag_errorInfo_, v6, v3, v4, sub_248175D60(), 0x296C6C756E28, 0xE600000000000000);
  swift_unknownObjectRelease();
}

uint64_t Symptom.Kind.legacyProblemFlag.getter()
{
  if (*v0 > 3uLL) {
    return 0;
  }
  else {
    return qword_24818AD68[*v0];
  }
}

uint64_t Symptom.accountID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Symptom.altDSID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t Symptom.kind.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 80);
  *a1 = v2;
  return sub_247FEFB98(v2);
}

void Symptom.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 88);
}

__n128 Symptom.init(accountID:kind:priority:errorInfo:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *a2;
  char v6 = *a3;
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v4;
  long long v7 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a4 + 32) = v7;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v9 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(a4 + 48) = result;
  *(_OWORD *)(a4 + 64) = v9;
  *(void *)(a4 + 80) = v5;
  *(unsigned char *)(a4 + 88) = v6;
  return result;
}

double Symptom.init(altDSID:kind:priority:errorInfo:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *a3;
  char v6 = *a4;
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  double result = 0.0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(void *)(a5 + 80) = v5;
  *(unsigned char *)(a5 + 88) = v6;
  return result;
}

uint64_t static Symptom.ErrorInfo.== infix(_:_:)()
{
  return 1;
}

uint64_t Symptom.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *(void *)(v1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_247FDE2AC(a1, v3);
      sub_247FEFBA8(v3);
      break;
  }
  return sub_248175E80();
}

uint64_t sub_24810301C()
{
  uint64_t result = 0x49746E756F636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1684957547;
      break;
    case 2:
      uint64_t result = 0x797469726F697270;
      break;
    case 3:
      uint64_t result = 0x666E49726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2481030A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2481079BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2481030D0(uint64_t a1)
{
  unint64_t v2 = sub_24810611C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810310C(uint64_t a1)
{
  unint64_t v2 = sub_24810611C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Symptom.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAFE0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v18 = v1[1];
  long long v19 = v7;
  long long v8 = v1[2];
  long long v16 = v1[3];
  long long v17 = v8;
  uint64_t v10 = *((void *)v1 + 8);
  uint64_t v9 = *((void *)v1 + 9);
  uint64_t v15 = *((void *)v1 + 10);
  int v27 = *((unsigned __int8 *)v1 + 88);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24810611C();
  sub_248175F60();
  long long v21 = v19;
  long long v22 = v18;
  long long v23 = v17;
  long long v24 = v16;
  uint64_t v25 = v10;
  uint64_t v26 = v9;
  char v28 = 0;
  sub_24801607C();
  uint64_t v11 = v20;
  sub_248175BE0();
  if (!v11)
  {
    char v12 = v27;
    *(void *)&long long v21 = v15;
    char v28 = 1;
    sub_248106170();
    sub_248175BE0();
    LOBYTE(v21) = v12;
    char v28 = 2;
    sub_2481061C4();
    sub_248175BE0();
    LOBYTE(v21) = 3;
    sub_248106218();
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Symptom.hashValue.getter()
{
  unint64_t v1 = *(void *)(v0 + 80);
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_247FDE2AC((uint64_t)v3, v1);
      sub_247FEFBA8(v1);
      break;
  }
  sub_248175E80();
  return sub_248175EC0();
}

unint64_t Symptom.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB008);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24810611C();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v43 = 0;
  sub_248016124();
  sub_248175AF0();
  unint64_t v9 = v33;
  unint64_t v26 = v32;
  int v27 = a2;
  unint64_t v10 = v35;
  unint64_t v11 = v37;
  unint64_t v24 = v36;
  unint64_t v25 = v34;
  unint64_t v31 = v39;
  unint64_t v12 = v41;
  unint64_t v22 = v40;
  unint64_t v23 = v38;
  char v43 = 1;
  sub_24810626C();
  unint64_t v28 = v9;
  swift_bridgeObjectRetain();
  unint64_t v30 = v10;
  swift_bridgeObjectRetain();
  unint64_t v29 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_248175AF0();
  unint64_t v13 = v32;
  char v43 = 2;
  sub_247FEFB98(v32);
  sub_2481062C0();
  sub_248175AF0();
  unint64_t v21 = v13;
  LODWORD(v13) = v32;
  LOBYTE(v32) = 3;
  sub_248106314();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  unint64_t v15 = v28;
  swift_bridgeObjectRetain();
  unint64_t v16 = v30;
  swift_bridgeObjectRetain();
  unint64_t v17 = v29;
  swift_bridgeObjectRetain();
  unint64_t v18 = v31;
  swift_bridgeObjectRetain();
  int v42 = v13;
  swift_bridgeObjectRetain();
  unint64_t v19 = v21;
  sub_247FEFB98(v21);
  sub_247FEFBA8(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = v27;
  *int v27 = v26;
  v20[1] = v15;
  v20[2] = v25;
  v20[3] = v16;
  v20[4] = v24;
  v20[5] = v17;
  v20[6] = v23;
  v20[7] = v18;
  v20[8] = v22;
  v20[9] = v12;
  v20[10] = v19;
  *((unsigned char *)v20 + 88) = v42;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_247FEFBA8(v19);
}

unint64_t sub_2481039B4@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return Symptom.init(from:)(a1, a2);
}

uint64_t sub_2481039CC(void *a1)
{
  return Symptom.encode(to:)(a1);
}

uint64_t sub_2481039F0()
{
  unint64_t v1 = *(void *)(v0 + 80);
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  switch(v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_247FDE2AC((uint64_t)v3, v1);
      sub_247FEFBA8(v1);
      break;
  }
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t Symptom.Priority.rawValue.getter()
{
  return *v0;
}

uint64_t (*static Symptom.ErrorInfo.empty.modify())()
{
  return nullsub_1;
}

uint64_t sub_248103B90(uint64_t a1)
{
  unint64_t v2 = sub_248106368();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248103BCC(uint64_t a1)
{
  unint64_t v2 = sub_248106368();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Symptom.ErrorInfo.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB028);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248106368();
  sub_248175F60();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Symptom.ErrorInfo.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t Symptom.ErrorInfo.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_248103D78(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_248103DA0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB028);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248106368();
  sub_248175F60();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_248103EB0()
{
  return sub_248175EC0();
}

uint64_t sub_248103EE8()
{
  return sub_248175EC0();
}

BOOL static Symptom.Priority.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

AppleIDSetup::Symptom::Priority_optional __swiftcall Symptom.Priority.init(rawValue:)(AppleIDSetup::Symptom::Priority_optional rawValue)
{
  AppleIDSetup::Symptom::Priority value = rawValue.value;
  if ((rawValue.value & 0xFC) != 0) {
    AppleIDSetup::Symptom::Priority value = AppleIDSetup_Symptom_Priority_unknownDefault;
  }
  *unint64_t v1 = value;
  return rawValue;
}

AppleIDSetup::Symptom::Priority_optional sub_248103F48(Swift::UInt8 *a1)
{
  return Symptom.Priority.init(rawValue:)(*a1);
}

BOOL sub_248103F50(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_248103F64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_248103F78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_248103F8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_248103FA0()
{
  return sub_2481752D0();
}

uint64_t sub_248104000()
{
  return sub_248175270();
}

uint64_t Symptom.Kind.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  switch(*v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      uint64_t result = sub_247FDE2AC(a1, v3);
      break;
  }
  return result;
}

unint64_t sub_248104110(char a1)
{
  unint64_t result = 0x65726F7473;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x53676E697373696DLL;
      break;
    case 4:
      unint64_t result = 0x64756F6C63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2481041B8(uint64_t a1)
{
  unint64_t v2 = sub_248106410();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2481041F4(uint64_t a1)
{
  unint64_t v2 = sub_248106410();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248104230(uint64_t a1)
{
  unint64_t v2 = sub_24810650C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810426C(uint64_t a1)
{
  unint64_t v2 = sub_24810650C();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2481042A8()
{
  return sub_248104110(*v0);
}

uint64_t sub_2481042B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248107B78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2481042D8(uint64_t a1)
{
  unint64_t v2 = sub_2481063BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248104314(uint64_t a1)
{
  unint64_t v2 = sub_2481063BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248104350(uint64_t a1)
{
  unint64_t v2 = sub_2481064B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810438C(uint64_t a1)
{
  unint64_t v2 = sub_2481064B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2481043C8(uint64_t a1)
{
  unint64_t v2 = sub_248106464();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248104404(uint64_t a1)
{
  unint64_t v2 = sub_248106464();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248104440(uint64_t a1)
{
  unint64_t v2 = sub_248106560();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810447C(uint64_t a1)
{
  unint64_t v2 = sub_248106560();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Symptom.Kind.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB038);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v34 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB040);
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v35 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB048);
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x270FA5388](v7);
  unint64_t v31 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB050);
  uint64_t v29 = *(void *)(v9 - 8);
  uint64_t v30 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB058);
  uint64_t v28 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB060);
  uint64_t v40 = *(void *)(v15 - 8);
  uint64_t v41 = v15;
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2481063BC();
  sub_248175F60();
  switch(v18)
  {
    case 0:
      char v43 = 0;
      sub_248106560();
      uint64_t v19 = v41;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v12);
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v17, v19);
    case 1:
      char v44 = 1;
      sub_24810650C();
      uint64_t v24 = v41;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v30);
      goto LABEL_8;
    case 2:
      char v45 = 2;
      sub_2481064B8();
      unint64_t v25 = v31;
      uint64_t v24 = v41;
      sub_248175B50();
      uint64_t v27 = v32;
      uint64_t v26 = v33;
      goto LABEL_7;
    case 3:
      char v47 = 4;
      sub_248106410();
      unint64_t v25 = v34;
      uint64_t v24 = v41;
      sub_248175B50();
      uint64_t v27 = v36;
      uint64_t v26 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v17, v24);
      break;
    default:
      char v46 = 3;
      sub_248106464();
      unint64_t v21 = v35;
      uint64_t v22 = v41;
      sub_248175B50();
      uint64_t v42 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
      sub_2481065B4((unint64_t *)&qword_2692D67E0, &qword_2692D50D0);
      uint64_t v23 = v39;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v23);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v17, v22);
      break;
  }
  return result;
}

uint64_t Symptom.Kind.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_248175E50();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      sub_247FDE2AC((uint64_t)v3, v1);
      break;
  }
  return sub_248175EC0();
}

uint64_t Symptom.Kind.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB098);
  uint64_t v47 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  char v56 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB0A0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v55 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB0A8);
  uint64_t v45 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB0B0);
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB0B8);
  uint64_t v46 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB0C0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  long long v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_2481063BC();
  uint64_t v19 = v59;
  sub_248175F20();
  if (v19) {
    goto LABEL_15;
  }
  uint64_t v20 = v13;
  uint64_t v43 = v11;
  uint64_t v44 = 0;
  unint64_t v21 = v54;
  uint64_t v22 = v55;
  uint64_t v59 = v15;
  uint64_t v24 = v56;
  uint64_t v23 = v57;
  uint64_t v25 = sub_248175B30();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v28 = v14;
    uint64_t v29 = sub_2481758A0();
    swift_allocError();
    unint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *unint64_t v31 = &type metadata for Symptom.Kind;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v28);
LABEL_15:
    uint64_t v38 = (uint64_t)v58;
    return __swift_destroy_boxed_opaque_existential_1(v38);
  }
  switch(*(unsigned char *)(v25 + 32))
  {
    case 1:
      char v62 = 1;
      sub_24810650C();
      uint64_t v32 = v44;
      sub_248175A50();
      if (v32) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v10, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v14);
      uint64_t v27 = 1;
      goto LABEL_21;
    case 2:
      char v63 = 2;
      sub_2481064B8();
      uint64_t v33 = v44;
      sub_248175A50();
      if (v33) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v14);
      uint64_t v27 = 2;
      goto LABEL_21;
    case 3:
      uint64_t v54 = (char *)v25;
      char v64 = 3;
      sub_248106464();
      unint64_t v34 = v22;
      unint64_t v35 = v17;
      uint64_t v36 = v44;
      sub_248175A50();
      if (v36) {
        goto LABEL_14;
      }
      uint64_t v40 = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
      sub_2481065B4((unint64_t *)&qword_2692D6858, &qword_2692D5100);
      uint64_t v41 = v52;
      sub_248175AF0();
      uint64_t v42 = v59;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v34, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v40);
      uint64_t v27 = v60;
      goto LABEL_21;
    case 4:
      uint64_t v54 = (char *)v25;
      char v65 = 4;
      sub_248106410();
      uint64_t v37 = v44;
      sub_248175A50();
      if (v37) {
        goto LABEL_14;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v24, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v14);
      uint64_t v27 = 3;
      goto LABEL_21;
    default:
      uint64_t v54 = (char *)v25;
      char v61 = 0;
      sub_248106560();
      uint64_t v26 = v44;
      sub_248175A50();
      if (v26)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v14);
        goto LABEL_15;
      }
      (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v17, v14);
      uint64_t v27 = 0;
LABEL_21:
      uint64_t v38 = (uint64_t)v58;
      *uint64_t v23 = v27;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v38);
}

uint64_t sub_2481053F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Symptom.Kind.init(from:)(a1, a2);
}

uint64_t sub_24810540C(void *a1)
{
  return Symptom.Kind.encode(to:)(a1);
}

uint64_t sub_248105428()
{
  uint64_t v1 = *v0;
  sub_248175E50();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      sub_247FDE2AC((uint64_t)v3, v1);
      break;
  }
  return sub_248175EC0();
}

uint64_t sub_2481054EC(uint64_t a1)
{
  uint64_t v3 = *v1;
  switch(*v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      uint64_t result = sub_247FDE2AC(a1, v3);
      break;
  }
  return result;
}

uint64_t sub_2481055AC()
{
  uint64_t v1 = *v0;
  sub_248175E50();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      sub_247FDE2AC((uint64_t)v3, v1);
      break;
  }
  return sub_248175EC0();
}

uint64_t Symptom.Priority.description.getter()
{
  uint64_t result = 0x6C61636974697263;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x28206D756964656DLL;
      break;
    case 2:
      uint64_t result = 0x2932282068676968;
      break;
    case 3:
      return result;
    default:
      uint64_t result = 0x29302820776F6CLL;
      break;
  }
  return result;
}

uint64_t Symptom.Priority.debugDescription.getter()
{
  uint64_t result = 0x6C61636974697263;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x28206D756964656DLL;
      break;
    case 2:
      uint64_t result = 0x2932282068676968;
      break;
    case 3:
      return result;
    default:
      uint64_t result = 0x29302820776F6CLL;
      break;
  }
  return result;
}

uint64_t sub_2481057A4()
{
  uint64_t result = 0x6C61636974697263;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x28206D756964656DLL;
      break;
    case 2:
      uint64_t result = 0x2932282068676968;
      break;
    case 3:
      return result;
    default:
      uint64_t result = 0x29302820776F6CLL;
      break;
  }
  return result;
}

uint64_t sub_248105840()
{
  uint64_t result = 0x6C61636974697263;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x28206D756964656DLL;
      break;
    case 2:
      uint64_t result = 0x2932282068676968;
      break;
    case 3:
      return result;
    default:
      uint64_t result = 0x29302820776F6CLL;
      break;
  }
  return result;
}

uint64_t Symptom.Kind.description.getter()
{
  uint64_t result = 0x65726F7473;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 7365731;
      break;
    case 2:
      uint64_t result = 0x73736F6C2D6B63;
      break;
    case 3:
      uint64_t result = 0x64756F6C63;
      break;
    default:
      type metadata accessor for AIDAServiceType(0);
      sub_2480C3BDC((unint64_t *)&qword_26B13BE70);
      sub_248175540();
      sub_2481751D0();
      swift_bridgeObjectRelease();
      uint64_t result = 0x20676E697373696DLL;
      break;
  }
  return result;
}

uint64_t Symptom.Kind.debugDescription.getter()
{
  unint64_t v1 = *v0;
  uint64_t result = 0x65726F7473;
  switch(*v0)
  {
    case 0uLL:
      return result;
    case 1uLL:
      uint64_t result = 7365731;
      break;
    case 2uLL:
      uint64_t result = 0x73736F6C2D6B63;
      break;
    case 3uLL:
      uint64_t result = 0x64756F6C63;
      break;
    default:
      type metadata accessor for AIDAServiceType(0);
      sub_2480C3BDC((unint64_t *)&qword_26B13BE70);
      swift_bridgeObjectRetain();
      sub_248175540();
      sub_2481751D0();
      swift_bridgeObjectRelease();
      sub_247FEFBA8(v1);
      uint64_t result = 0x20676E697373696DLL;
      break;
  }
  return result;
}

uint64_t Symptom.description.getter()
{
  unint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  IdMSAccount.ID.description.getter();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  switch(v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
      break;
    default:
      sub_247FEFB98(v1);
      type metadata accessor for AIDAServiceType(0);
      sub_2480C3BDC((unint64_t *)&qword_26B13BE70);
      sub_248175540();
      sub_2481751D0();
      swift_bridgeObjectRelease();
      break;
  }
  sub_2481751D0();
  swift_bridgeObjectRelease();
  sub_247FEFBA8(v1);
  sub_2481751D0();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  return 0x286D6F74706D7953;
}

uint64_t Symptom.debugDescription.getter()
{
  uint64_t v0 = Symptom.description.getter();
  sub_248175190();
  swift_bridgeObjectRetain();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_248105ED8()
{
  uint64_t v0 = Symptom.description.getter();
  sub_248175190();
  swift_bridgeObjectRetain();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s12AppleIDSetup7SymptomV4KindO2eeoiySbAE_AEtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1)
  {
    case 0uLL:
      if (v3) {
        goto LABEL_12;
      }
      unint64_t v2 = 0;
      char v4 = 1;
      break;
    case 1uLL:
      if (v3 != 1) {
        goto LABEL_12;
      }
      unint64_t v2 = 1;
      char v4 = 1;
      break;
    case 2uLL:
      if (v3 != 2) {
        goto LABEL_12;
      }
      char v4 = 1;
      unint64_t v2 = 2;
      break;
    case 3uLL:
      if (v3 != 3) {
        goto LABEL_12;
      }
      char v4 = 1;
      unint64_t v2 = 3;
      break;
    default:
      if (v3 < 4)
      {
LABEL_12:
        sub_247FEFB98(*a2);
        sub_247FEFB98(v2);
        char v4 = 0;
      }
      else
      {
        sub_247FEFB98(*a2);
        sub_247FEFB98(v2);
        char v4 = sub_24815D598(v2, v3);
      }
      break;
  }
  sub_247FEFBA8(v2);
  sub_247FEFBA8(v3);
  return v4 & 1;
}

uint64_t _s12AppleIDSetup7SymptomV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 80);
  int v3 = *(unsigned __int8 *)(a1 + 88);
  unint64_t v4 = *(void *)(a2 + 80);
  int v5 = *(unsigned __int8 *)(a2 + 88);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (char v7 = sub_248175CE0(), result = 0, (v7 & 1) != 0))
  {
    unint64_t v9 = v4;
    unint64_t v10 = v2;
    return _s12AppleIDSetup7SymptomV4KindO2eeoiySbAE_AEtFZ_0(&v10, &v9) & (v3 == v5);
  }
  return result;
}

unint64_t sub_24810611C()
{
  unint64_t result = qword_2692DAFE8;
  if (!qword_2692DAFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFE8);
  }
  return result;
}

unint64_t sub_248106170()
{
  unint64_t result = qword_2692DAFF0;
  if (!qword_2692DAFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFF0);
  }
  return result;
}

unint64_t sub_2481061C4()
{
  unint64_t result = qword_2692DAFF8;
  if (!qword_2692DAFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DAFF8);
  }
  return result;
}

unint64_t sub_248106218()
{
  unint64_t result = qword_2692DB000;
  if (!qword_2692DB000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB000);
  }
  return result;
}

unint64_t sub_24810626C()
{
  unint64_t result = qword_2692DB010;
  if (!qword_2692DB010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB010);
  }
  return result;
}

unint64_t sub_2481062C0()
{
  unint64_t result = qword_2692DB018;
  if (!qword_2692DB018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB018);
  }
  return result;
}

unint64_t sub_248106314()
{
  unint64_t result = qword_2692DB020;
  if (!qword_2692DB020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB020);
  }
  return result;
}

unint64_t sub_248106368()
{
  unint64_t result = qword_2692DB030;
  if (!qword_2692DB030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB030);
  }
  return result;
}

unint64_t sub_2481063BC()
{
  unint64_t result = qword_2692DB068;
  if (!qword_2692DB068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB068);
  }
  return result;
}

unint64_t sub_248106410()
{
  unint64_t result = qword_2692DB070;
  if (!qword_2692DB070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB070);
  }
  return result;
}

unint64_t sub_248106464()
{
  unint64_t result = qword_2692DB078;
  if (!qword_2692DB078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB078);
  }
  return result;
}

unint64_t sub_2481064B8()
{
  unint64_t result = qword_2692DB080;
  if (!qword_2692DB080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB080);
  }
  return result;
}

unint64_t sub_24810650C()
{
  unint64_t result = qword_2692DB088;
  if (!qword_2692DB088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB088);
  }
  return result;
}

unint64_t sub_248106560()
{
  unint64_t result = qword_2692DB090;
  if (!qword_2692DB090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB090);
  }
  return result;
}

uint64_t sub_2481065B4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D67D8);
    sub_2480C3BDC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_248106634(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2481068E4(a1, a2, a3, (uint64_t (*)(void))sub_247FF3DF0, (uint64_t (*)(void))sub_247FF3D48, (uint64_t (*)(void))sub_24801C020);
}

unint64_t sub_248106678()
{
  unint64_t result = qword_2692DB0C8;
  if (!qword_2692DB0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB0C8);
  }
  return result;
}

uint64_t sub_2481066CC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2481068E4(a1, a2, a3, (uint64_t (*)(void))sub_248106314, (uint64_t (*)(void))sub_248106218, (uint64_t (*)(void))sub_24810670C);
}

unint64_t sub_24810670C()
{
  unint64_t result = qword_2692DB0D0;
  if (!qword_2692DB0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB0D0);
  }
  return result;
}

unint64_t sub_248106764()
{
  unint64_t result = qword_2692DB0D8;
  if (!qword_2692DB0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB0D8);
  }
  return result;
}

unint64_t sub_2481067BC()
{
  unint64_t result = qword_2692DB0E0;
  if (!qword_2692DB0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB0E0);
  }
  return result;
}

uint64_t sub_248106810(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2481068E4(a1, a2, a3, (uint64_t (*)(void))sub_2481062C0, (uint64_t (*)(void))sub_2481061C4, (uint64_t (*)(void))sub_248106850);
}

unint64_t sub_248106850()
{
  unint64_t result = qword_2692DB0E8;
  if (!qword_2692DB0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB0E8);
  }
  return result;
}

uint64_t sub_2481068A4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_2481068E4(a1, a2, a3, (uint64_t (*)(void))sub_24810626C, (uint64_t (*)(void))sub_248106170, (uint64_t (*)(void))sub_2480BCEB0);
}

uint64_t sub_2481068E4(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_24810693C()
{
  unint64_t result = qword_2692DB0F0;
  if (!qword_2692DB0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB0F0);
  }
  return result;
}

unint64_t destroy for Symptom(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 80);
  if (result >= 4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Symptom(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  unint64_t v9 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >= 4) {
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 80) = v9;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t assignWithCopy for Symptom(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (unint64_t *)(a1 + 80);
  unint64_t v5 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) >= 4uLL)
  {
    if (v5 >= 4)
    {
      *uint64_t v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_248106BE0(a1 + 80);
      *uint64_t v4 = *(void *)(a2 + 80);
    }
  }
  else
  {
    *uint64_t v4 = v5;
    if (v5 >= 4) {
      swift_bridgeObjectRetain();
    }
  }
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t sub_248106BE0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t assignWithTake for Symptom(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = (unint64_t *)(a1 + 80);
  unint64_t v10 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) >= 4uLL)
  {
    if (v10 >= 4)
    {
      *unint64_t v9 = v10;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_248106BE0(a1 + 80);
  }
  *unint64_t v9 = v10;
LABEL_6:
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for Symptom(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Symptom(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Symptom()
{
  return &type metadata for Symptom;
}

ValueMetadata *type metadata accessor for Symptom.ErrorInfo()
{
  return &type metadata for Symptom.ErrorInfo;
}

ValueMetadata *type metadata accessor for Symptom.Priority()
{
  return &type metadata for Symptom.Priority;
}

uint64_t *initializeBufferWithCopyOfBuffer for Symptom.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for Symptom.Kind(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *assignWithCopy for Symptom.Kind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *assignWithTake for Symptom.Kind(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Symptom.Kind(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Symptom.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_248106FC0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_248106FD8(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for Symptom.Kind()
{
  return &type metadata for Symptom.Kind;
}

unsigned char *storeEnumTagSinglePayload for Symptom.Kind.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2481070D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Symptom.Kind.CodingKeys()
{
  return &type metadata for Symptom.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.Kind.StoreCodingKeys()
{
  return &type metadata for Symptom.Kind.StoreCodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.Kind.CloudDataProtectionCodingKeys()
{
  return &type metadata for Symptom.Kind.CloudDataProtectionCodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.Kind.ContinuationKeyLossCodingKeys()
{
  return &type metadata for Symptom.Kind.ContinuationKeyLossCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Symptom.Kind.MissingServicesCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2481071D8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Symptom.Kind.MissingServicesCodingKeys()
{
  return &type metadata for Symptom.Kind.MissingServicesCodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.Kind.CloudCodingKeys()
{
  return &type metadata for Symptom.Kind.CloudCodingKeys;
}

ValueMetadata *type metadata accessor for Symptom.ErrorInfo.CodingKeys()
{
  return &type metadata for Symptom.ErrorInfo.CodingKeys;
}

unsigned char *_s12AppleIDSetup7SymptomV8PriorityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2481072FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Symptom.CodingKeys()
{
  return &type metadata for Symptom.CodingKeys;
}

unint64_t sub_248107338()
{
  unint64_t result = qword_2692DB0F8;
  if (!qword_2692DB0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB0F8);
  }
  return result;
}

unint64_t sub_248107390()
{
  unint64_t result = qword_2692DB100;
  if (!qword_2692DB100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB100);
  }
  return result;
}

unint64_t sub_2481073E8()
{
  unint64_t result = qword_2692DB108;
  if (!qword_2692DB108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB108);
  }
  return result;
}

unint64_t sub_248107440()
{
  unint64_t result = qword_2692DB110;
  if (!qword_2692DB110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB110);
  }
  return result;
}

unint64_t sub_248107498()
{
  unint64_t result = qword_2692DB118;
  if (!qword_2692DB118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB118);
  }
  return result;
}

unint64_t sub_2481074F0()
{
  unint64_t result = qword_2692DB120;
  if (!qword_2692DB120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB120);
  }
  return result;
}

unint64_t sub_248107548()
{
  unint64_t result = qword_2692DB128;
  if (!qword_2692DB128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB128);
  }
  return result;
}

unint64_t sub_2481075A0()
{
  unint64_t result = qword_2692DB130;
  if (!qword_2692DB130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB130);
  }
  return result;
}

unint64_t sub_2481075F8()
{
  unint64_t result = qword_2692DB138;
  if (!qword_2692DB138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB138);
  }
  return result;
}

unint64_t sub_248107650()
{
  unint64_t result = qword_2692DB140;
  if (!qword_2692DB140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB140);
  }
  return result;
}

unint64_t sub_2481076A8()
{
  unint64_t result = qword_2692DB148;
  if (!qword_2692DB148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB148);
  }
  return result;
}

unint64_t sub_248107700()
{
  unint64_t result = qword_2692DB150;
  if (!qword_2692DB150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB150);
  }
  return result;
}

unint64_t sub_248107758()
{
  unint64_t result = qword_2692DB158;
  if (!qword_2692DB158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB158);
  }
  return result;
}

unint64_t sub_2481077B0()
{
  unint64_t result = qword_2692DB160;
  if (!qword_2692DB160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB160);
  }
  return result;
}

unint64_t sub_248107808()
{
  unint64_t result = qword_2692DB168;
  if (!qword_2692DB168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB168);
  }
  return result;
}

unint64_t sub_248107860()
{
  unint64_t result = qword_2692DB170;
  if (!qword_2692DB170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB170);
  }
  return result;
}

unint64_t sub_2481078B8()
{
  unint64_t result = qword_2692DB178;
  if (!qword_2692DB178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB178);
  }
  return result;
}

unint64_t sub_248107910()
{
  unint64_t result = qword_2692DB180;
  if (!qword_2692DB180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB180);
  }
  return result;
}

unint64_t sub_248107968()
{
  unint64_t result = qword_2692DB188;
  if (!qword_2692DB188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB188);
  }
  return result;
}

uint64_t sub_2481079BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746E756F636361 && a2 == 0xE900000000000044;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x666E49726F727265 && a2 == 0xE90000000000006FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_248107B78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726F7473 && a2 == 0xE500000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000248192C20 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000248192C40 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53676E697373696DLL && a2 == 0xEF73656369767265 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64756F6C63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_248107D9C()
{
  unint64_t result = qword_2692DB190;
  if (!qword_2692DB190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB190);
  }
  return result;
}

ACAccount_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ACAccountStore.account(for:aidaServiceType:)(Swift::String a1, __C::AIDAServiceType aidaServiceType)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  v28[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = sub_248108294();
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D71E0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24817B010;
    *(void *)(v10 + 32) = v8;
    *(void *)(v10 + 40) = v9;
    uint64_t v11 = (void *)sub_2481752E0();
    swift_bridgeObjectRelease();
    v28[0] = 0;
    id v12 = objc_msgSend(v2, sel_accountsWithAccountTypeIdentifiers_error_, v11, v28);

    id v13 = v28[0];
    if (v12)
    {
      sub_24805DDB4();
      unint64_t v14 = sub_2481752F0();
      id v15 = v13;

      swift_bridgeObjectRetain();
      id v16 = sub_248108100(v14, countAndFlagsBits, (uint64_t)object);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v16 = v28[0];
      sub_248174730();

      swift_willThrow();
    }
  }
  else
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_248174B90();
    __swift_project_value_buffer(v18, (uint64_t)qword_26B13B730);
    NSString v19 = aidaServiceType._rawValue;
    uint64_t v20 = sub_248174B70();
    os_log_type_t v21 = sub_2481755C0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      v28[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      type metadata accessor for AIDAServiceType(0);
      id v24 = v19;
      uint64_t v25 = sub_248175190();
      sub_247FB6D24(v25, v26, (uint64_t *)v28);
      sub_248175730();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v20, v21, "No accountType translation for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v23, -1, -1);
      MEMORY[0x24C574E00](v22, -1, -1);
    }
    else
    {
    }
    id v16 = 0;
  }
  uint64_t v27 = (objc_class *)v16;
  result.value.super.isa = v27;
  result.is_nil = v17;
  return result;
}

void *sub_248108100(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_2481759D0())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24C573D60](v6 - 4, a1) : *(id *)(a1 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v10 = objc_msgSend(v7, sel_aida_alternateDSID);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_248175160();
        uint64_t v14 = v13;

        if (v12 == a2 && v14 == a3)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v8;
        }
        char v16 = sub_248175CE0();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_18;
        }
      }

      ++v6;
      if (v9 == v5) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_248108294()
{
  uint64_t v0 = sub_248175160();
  uint64_t v2 = v1;
  if (v0 == sub_248175160() && v2 == v3) {
    goto LABEL_13;
  }
  char v5 = sub_248175CE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5) {
    return sub_248175160();
  }
  uint64_t v6 = sub_248175160();
  uint64_t v8 = v7;
  if (v6 == sub_248175160() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
    return sub_248175160();
  }
  char v11 = sub_248175CE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    return sub_248175160();
  }
  uint64_t v12 = sub_248175160();
  uint64_t v14 = v13;
  if (v12 == sub_248175160() && v14 == v15) {
    goto LABEL_13;
  }
  char v17 = sub_248175CE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17) {
    return sub_248175160();
  }
  uint64_t v18 = sub_248175160();
  uint64_t v20 = v19;
  if (v18 == sub_248175160() && v20 == v21) {
    goto LABEL_13;
  }
  char v22 = sub_248175CE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22) {
    return sub_248175160();
  }
  uint64_t v23 = sub_248175160();
  uint64_t v25 = v24;
  if (v23 == sub_248175160() && v25 == v26)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    return sub_248175160();
  }
  char v27 = sub_248175CE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27) {
    return sub_248175160();
  }
  return 0;
}

uint64_t sub_248108520()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_2692DB198);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2692DB198);
  if (qword_2692D4D88 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2692D6AC0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t sub_2481085E8()
{
  uint64_t v1 = OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    type metadata accessor for AISDaemonConnection();
    uint64_t v3 = swift_allocObject();
    unsigned int v4 = *(void **)(v0 + OBJC_IVAR___AISSignOutController_listenerEndpoint);
    *(void *)(v3 + 16) = v4;
    *(void *)(v3 + 24) = 0;
    uint64_t v5 = *(void *)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    swift_retain();
    id v6 = v4;
    sub_248109E40(v5);
  }
  sub_248109E50(v2);
  return v3;
}

id AISSignOutController.__allocating_init(listenerEndpoint:)(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  uint64_t v4 = OBJC_IVAR___AISSignOutController_listenerEndpoint;
  *(void *)&v3[OBJC_IVAR___AISSignOutController_listenerEndpoint] = 0;
  *(void *)&v3[OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection] = 1;
  uint64_t v5 = *(void **)&v3[v4];
  *(void *)&v3[v4] = a1;
  id v6 = a1;

  v9.receiver = v3;
  v9.super_class = v1;
  id v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

id AISSignOutController.init(listenerEndpoint:)(void *a1)
{
  uint64_t v2 = OBJC_IVAR___AISSignOutController_listenerEndpoint;
  *(void *)&v1[OBJC_IVAR___AISSignOutController_listenerEndpoint] = 0;
  *(void *)&v1[OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection] = 1;
  uint64_t v3 = *(void **)&v1[v2];
  *(void *)&v1[v2] = a1;
  id v4 = a1;

  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AISSignOutController();
  id v5 = objc_msgSendSuper2(&v7, sel_init);

  return v5;
}

uint64_t type metadata accessor for AISSignOutController()
{
  return self;
}

id AISSignOutController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id AISSignOutController.init()()
{
  *(void *)&v0[OBJC_IVAR___AISSignOutController_listenerEndpoint] = 0;
  *(void *)&v0[OBJC_IVAR___AISSignOutController____lazy_storage___daemonConnection] = 1;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISSignOutController();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t sub_248108888(uint64_t a1)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = v1;
  return MEMORY[0x270FA2498](sub_2481088A8, 0, 0);
}

uint64_t sub_2481088A8()
{
  uint64_t v1 = sub_2481085E8();
  v0[19] = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[20] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_248108B08;
    return sub_24803086C();
  }
  else
  {
    if (qword_2692D4DD8 != -1) {
      swift_once();
    }
    id v4 = (void *)v0[17];
    uint64_t v5 = sub_248174B90();
    __swift_project_value_buffer(v5, (uint64_t)qword_2692DB198);
    id v6 = v4;
    objc_super v7 = sub_248174B70();
    os_log_type_t v8 = sub_2481755D0();
    BOOL v9 = os_log_type_enabled(v7, v8);
    id v10 = (void *)v0[17];
    if (v9)
    {
      char v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      *(_DWORD *)char v11 = 138412290;
      v0[15] = v10;
      id v13 = v10;
      sub_248175730();
      *uint64_t v12 = v10;

      _os_log_impl(&dword_247F93000, v7, v8, "Failed to obtain remote object proxy to sign out: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v12, -1, -1);
      MEMORY[0x24C574E00](v11, -1, -1);
    }
    else
    {
    }
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14(0);
  }
}

uint64_t sub_248108B08(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_2481091B0;
  }
  else
  {
    swift_release();
    id v4 = sub_248108C24;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_248108C24()
{
  uint64_t v1 = (void *)v0[21];
  if (v1)
  {
    if (qword_2692D4DD8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)v0[17];
    uint64_t v3 = sub_248174B90();
    __swift_project_value_buffer(v3, (uint64_t)qword_2692DB198);
    id v4 = v2;
    uint64_t v5 = sub_248174B70();
    os_log_type_t v6 = sub_2481755C0();
    BOOL v7 = os_log_type_enabled(v5, v6);
    os_log_type_t v8 = (void *)v0[17];
    if (v7)
    {
      char v27 = v1;
      BOOL v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)BOOL v9 = 138412290;
      v0[16] = v8;
      id v10 = v8;
      sub_248175730();
      *uint64_t v26 = v8;

      _os_log_impl(&dword_247F93000, v5, v6, "Signing out of accounts with context: %@", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v26, -1, -1);
      char v11 = v9;
      uint64_t v1 = v27;
      MEMORY[0x24C574E00](v11, -1, -1);
    }
    else
    {
    }
    uint64_t v22 = v0[17];
    v0[2] = v0;
    v0[7] = v0 + 24;
    v0[3] = sub_248109038;
    uint64_t v23 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_248109294;
    v0[13] = &block_descriptor_5;
    v0[14] = v23;
    objc_msgSend(v1, sel_signOutAllAccountsWith_completionHandler_, v22, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    if (qword_2692D4DD8 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)v0[17];
    uint64_t v13 = sub_248174B90();
    __swift_project_value_buffer(v13, (uint64_t)qword_2692DB198);
    id v14 = v12;
    uint64_t v15 = sub_248174B70();
    os_log_type_t v16 = sub_2481755D0();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = (void *)v0[17];
    if (v17)
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412290;
      v0[15] = v18;
      id v21 = v18;
      sub_248175730();
      *uint64_t v20 = v18;

      _os_log_impl(&dword_247F93000, v15, v16, "Failed to obtain remote object proxy to sign out: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v20, -1, -1);
      MEMORY[0x24C574E00](v19, -1, -1);
    }
    else
    {
    }
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    return v24(0);
  }
}

uint64_t sub_248109038()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_248109218;
  }
  else {
    uint64_t v2 = sub_248109148;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_248109148()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 192);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_2481091B0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_248109218()
{
  swift_willThrow();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_248109294(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    uint64_t v5 = swift_allocError();
    *os_log_type_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_2481094C4(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  id v7 = a3;
  os_log_type_t v8 = (void *)swift_task_alloc();
  v3[5] = v8;
  *os_log_type_t v8 = v3;
  v8[1] = sub_2481095A0;
  v8[17] = v6;
  v8[18] = v7;
  return MEMORY[0x270FA2498](sub_2481088A8, 0, 0);
}

uint64_t sub_2481095A0(char a1)
{
  uint64_t v3 = v1;
  uint64_t v6 = *v2;
  uint64_t v5 = *v2;
  id v7 = *(void **)(*v2 + 24);
  os_log_type_t v8 = *(void **)(*v2 + 16);
  uint64_t v9 = *v2;
  swift_task_dealloc();

  uint64_t v10 = *(void *)(v5 + 32);
  if (v3)
  {
    char v11 = (void *)sub_248174720();

    (*(void (**)(uint64_t, void, void *))(v10 + 16))(v10, 0, v11);
  }
  else
  {
    (*(void (**)(uint64_t, void, void))(v10 + 16))(v10, a1 & 1, 0);
  }
  _Block_release(*(const void **)(v6 + 32));
  uint64_t v12 = *(uint64_t (**)(void))(v9 + 8);
  return v12();
}

id AISSignOutController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISSignOutController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2481097D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_247FD79D0;
  return v6();
}

uint64_t sub_24810989C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  void *v5 = v4;
  v5[1] = sub_247FD79D0;
  return v7();
}

uint64_t sub_248109968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2481753D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2481753C0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24805E05C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_248175340();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t method lookup function for AISSignOutController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISSignOutController);
}

uint64_t dispatch thunk of AISSignOutController.__allocating_init(listenerEndpoint:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of AISSignOutController.signOutAllAccounts(with:)(uint64_t a1)
{
  uint64_t v4 = *(int **)((*MEMORY[0x263F8EED0] & *v1) + 0x98);
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_2480467F8;
  return v7(a1);
}

uint64_t sub_248109C4C()
{
  _Block_release(*(const void **)(v0 + 24));
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_248109C94()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_247FCB950;
  uint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_2692DB1D0 + dword_2692DB1D0);
  return v6(v2, v3, v4);
}

uint64_t sub_248109D50()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248109D88(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_247FCB950;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692DB1F0 + dword_2692DB1F0);
  return v6(a1, v4);
}

uint64_t sub_248109E40(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_248109E50(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t NSXPCListenerEndpoint.archive(with:backing:)(void *a1, void *a2)
{
  return sub_248109EE8(a1, a2);
}

uint64_t sub_248109EE8(void *a1, void *a2)
{
  id v27 = a1;
  uint64_t v31 = sub_2481759A0();
  uint64_t v3 = *(void *)(v31 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v31);
  uint64_t v28 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB200);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_248174D00();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v15 = sub_248175F50();
  sub_248175990();
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_247FB6588((uint64_t)v7), (v17 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v29);
  }
  else
  {
    long long v29 = 0u;
    long long v30 = 0u;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v31;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v31);
  if (*((void *)&v30 + 1))
  {
    int v19 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v19 ^ 1u, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
      uint64_t v20 = sub_248174CF0();
      sub_248174BA0();
      id v21 = objc_msgSend(v26, sel__endpoint);
      sub_248174D20();
      uint64_t v22 = (void *)sub_248175130();
      objc_msgSend(v27, sel_encodeInteger_forKey_, v20, v22);

      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  else
  {
    sub_247FB33D4((uint64_t)&v29, (uint64_t *)&unk_26B13BED0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_247FB33D4((uint64_t)v10, &qword_2692DB200);
  uint64_t v24 = v28;
  sub_248175990();
  type metadata accessor for CodingUserInfoKeyNotFound();
  sub_24810AA74();
  swift_allocError();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v25, v24, v18);
  return swift_willThrow();
}

long long *static NSXPCListenerEndpoint.developedUnarchive(from:backing:)(void *a1, void *a2)
{
  uint64_t v37 = sub_2481759A0();
  uint64_t v4 = *(void *)(v37 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v37);
  uint64_t v36 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v34 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB200);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_248174D00();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v35 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[2] = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v15 = sub_248175F10();
  sub_248175990();
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_247FB6588((uint64_t)v8), (v17 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&v38);
  }
  else
  {
    long long v38 = 0u;
    long long v39 = 0u;
  }
  uint64_t v18 = v13;
  uint64_t v19 = v12;
  uint64_t v20 = v37;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v20);
  if (!*((void *)&v39 + 1))
  {
    sub_247FB33D4((uint64_t)&v38, (uint64_t *)&unk_26B13BED0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v11, 1, 1, v12);
    goto LABEL_11;
  }
  int v21 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v11, v21 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v12) == 1)
  {
LABEL_11:
    sub_247FB33D4((uint64_t)v11, &qword_2692DB200);
    id v27 = (long long *)v36;
    sub_248175990();
    type metadata accessor for CodingUserInfoKeyNotFound();
    sub_24810AA74();
    swift_allocError();
    (*(void (**)(uint64_t, long long *, uint64_t))(v4 + 32))(v29, v27, v20);
    swift_willThrow();
    return v27;
  }
  uint64_t v22 = v35;
  (*(void (**)(void))(v18 + 32))();
  uint64_t v23 = sub_248174D10();
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v25 = MEMORY[0x24C574F20]();
    if (v25 == sub_248174BB0())
    {
      id v27 = (long long *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
      objc_msgSend(v27, sel__setEndpoint_, v24);
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v19);
      return v27;
    }
    uint64_t v26 = v18;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_248172E58();
    *(void *)&long long v38 = 0;
    *((void *)&v38 + 1) = 0xE000000000000000;
    sub_2481751D0();
    uint64_t v40 = v25;
    sub_248175980();
    id v27 = (long long *)v38;
    sub_2481758A0();
    swift_allocError();
    sub_248172EA0(v34[1], v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v26 = v18;
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    sub_248172E58();
    uint64_t v30 = sub_2481758A0();
    swift_allocError();
    uint64_t v32 = v31;
    *(void *)&long long v38 = 0;
    *((void *)&v38 + 1) = 0xE000000000000000;
    swift_bridgeObjectRetain();
    id v27 = &v38;
    sub_248175850();
    swift_bridgeObjectRelease();
    sub_248175880();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB8], v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v19);
  return v27;
}

void static NSXPCListenerEndpoint.intermediateUnarchive(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_248175130();
  id v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = 0;
}

uint64_t sub_24810A94C(void *a1, void *a2)
{
  return sub_248109EE8(a1, a2);
}

void sub_24810A9D8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (void *)sub_248175130();
  id v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = 0;
}

long long *sub_24810AA48@<X0>(void *a1@<X0>, void *a2@<X1>, long long **a3@<X8>)
{
  ACAccount_optional result = static NSXPCListenerEndpoint.developedUnarchive(from:backing:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

unint64_t sub_24810AA74()
{
  unint64_t result = qword_2692DB208;
  if (!qword_2692DB208)
  {
    type metadata accessor for CodingUserInfoKeyNotFound();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB208);
  }
  return result;
}

ValueMetadata *type metadata accessor for NSXPCListenerEndpoint.UnarchivalIntermediate()
{
  return &type metadata for NSXPCListenerEndpoint.UnarchivalIntermediate;
}

uint64_t AnisetteCommand.Request.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  id v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload
    || (type metadata accessor for V1Command.Request(0),
        uint64_t result = swift_getEnumCaseMultiPayload(),
        id v5 = type metadata accessor for V1Command.Request,
        result != 2))
  {
    uint64_t result = sub_2481111E0(a1, v5);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0x3000000000000000;
    char v7 = -1;
  }
  else
  {
    char v7 = *(unsigned char *)(a1 + 32);
    long long v8 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v8;
  }
  *(unsigned char *)(a2 + 32) = v7;
  return result;
}

uint64_t AnisetteCommand.Request.into()@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 32);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v3;
  type metadata accessor for V1Command.Request(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t AnisetteCommand.Request.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  if (v5) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  switch((v4 >> 60) & 3 | v6)
  {
    case 1uLL:
      sub_248175E70();
      uint64_t result = sub_248175E80();
      break;
    case 2uLL:
      sub_248175E70();
      uint64_t result = sub_2481751A0();
      break;
    case 3uLL:
      unint64_t v8 = v4 & 0xCFFFFFFFFFFFFFFFLL;
      sub_248175E70();
      sub_247FB6C20(v3, v8);
      sub_2481751A0();
      sub_2481747E0();
      uint64_t result = sub_247FB6CCC(v3, v8);
      break;
    case 4uLL:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      sub_247FB6C20(v1, v2);
      sub_2481747E0();
      uint64_t result = sub_2480E32D8(v1, v2, v3, v4, v5);
      break;
  }
  return result;
}

unint64_t sub_24810ADD0()
{
  unint64_t result = 0x6F697369766F7270;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1668184435;
      break;
    case 2:
      unint64_t result = 0x6573617265;
      break;
    case 3:
      unint64_t result = 0x7461446863746566;
      break;
    case 4:
      unint64_t result = 0x614479636167656CLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24810AEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248112850(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24810AEC8(uint64_t a1)
{
  unint64_t v2 = sub_24810FCEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810AF04(uint64_t a1)
{
  unint64_t v2 = sub_24810FCEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810AF40(uint64_t a1)
{
  unint64_t v2 = sub_24810FE3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810AF7C(uint64_t a1)
{
  unint64_t v2 = sub_24810FE3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810AFB8()
{
  if (*v0) {
    return 0x79646F4270747468;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_24810AFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2481126E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24810B014(uint64_t a1)
{
  unint64_t v2 = sub_24810FD40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810B050(uint64_t a1)
{
  unint64_t v2 = sub_24810FD40();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24810B08C()
{
  return 0xD000000000000011;
}

uint64_t sub_24810B0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2481127C8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24810B0D4(uint64_t a1)
{
  unint64_t v2 = sub_24810FDE8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810B110(uint64_t a1)
{
  unint64_t v2 = sub_24810FDE8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810B14C()
{
  return 1684632420;
}

uint64_t sub_24810B15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1684632420 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_248175CE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24810B1E4(uint64_t a1)
{
  unint64_t v2 = sub_24810FD94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810B220(uint64_t a1)
{
  unint64_t v2 = sub_24810FD94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810B25C(uint64_t a1)
{
  unint64_t v2 = sub_24810FEE4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810B298(uint64_t a1)
{
  unint64_t v2 = sub_24810FEE4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810B2D4()
{
  return 0x617461446D6973;
}

uint64_t sub_24810B2EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x617461446D6973 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_248175CE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24810B384(uint64_t a1)
{
  unint64_t v2 = sub_24810FE90();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810B3C0(uint64_t a1)
{
  unint64_t v2 = sub_24810FE90();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AnisetteCommand.Request.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB210);
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB218);
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB220);
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB228);
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB230);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB238);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB240);
  uint64_t v62 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v18 = *(void *)v1;
  unint64_t v17 = *(void *)(v1 + 8);
  unint64_t v19 = *(void *)(v1 + 24);
  uint64_t v60 = *(void *)(v1 + 16);
  unint64_t v61 = v17;
  int v20 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v21 = a1[3];
  uint64_t v22 = a1;
  uint64_t v23 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v22, v21);
  sub_24810FCEC();
  sub_248175F60();
  if (v20) {
    int v24 = 4;
  }
  else {
    int v24 = 0;
  }
  switch((v19 >> 60) & 3 | v24)
  {
    case 1uLL:
      LOBYTE(v65) = 3;
      sub_24810FDE8();
      uint64_t v30 = v51;
      uint64_t v31 = v64;
      sub_248175B50();
      uint64_t v32 = v53;
      sub_248175BC0();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v32);
      goto LABEL_10;
    case 2uLL:
      LOBYTE(v65) = 4;
      sub_24810FD94();
      uint64_t v33 = v54;
      uint64_t v34 = v64;
      sub_248175B50();
      uint64_t v35 = v56;
      sub_248175BB0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v33, v35);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v23, v34);
      break;
    case 3uLL:
      unint64_t v36 = v19 & 0xCFFFFFFFFFFFFFFFLL;
      LOBYTE(v65) = 5;
      uint64_t v37 = v60;
      sub_247FB6C20(v60, v36);
      sub_24810FD40();
      long long v38 = v57;
      uint64_t v31 = v64;
      sub_248175B50();
      LOBYTE(v65) = 0;
      uint64_t v39 = v59;
      uint64_t v40 = v63;
      sub_248175BB0();
      if (v40)
      {
        sub_247FB6CCC(v37, v36);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v39);
LABEL_10:
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v23, v31);
      }
      else
      {
        uint64_t v65 = v37;
        unint64_t v66 = v36;
        char v67 = 1;
        sub_2480168C4();
        sub_248175BE0();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v39);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v23, v31);
        uint64_t result = sub_247FB6CCC(v37, v36);
      }
      break;
    case 4uLL:
      if (v60 | v61 | v18 | v19)
      {
        LOBYTE(v65) = 2;
        sub_24810FE3C();
        uint64_t v41 = v46;
        uint64_t v42 = v64;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v48);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v23, v42);
      }
      else
      {
        LOBYTE(v65) = 0;
        sub_24810FEE4();
        uint64_t v43 = v64;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v23, v43);
      }
      break;
    default:
      LOBYTE(v65) = 1;
      uint64_t v25 = v18;
      uint64_t v26 = v18;
      unint64_t v27 = v61;
      sub_247FB6C20(v26, v61);
      sub_24810FE90();
      sub_248175B50();
      uint64_t v65 = v25;
      unint64_t v66 = v27;
      sub_2480168C4();
      uint64_t v28 = v50;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v28);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v23, v64);
      uint64_t result = sub_2480E32D8(v25, v27, v60, v19, v20);
      break;
  }
  return result;
}

uint64_t AnisetteCommand.Request.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t AnisetteCommand.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v61 = a2;
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB280);
  uint64_t v49 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v64 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB288);
  uint64_t v59 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  uint64_t v63 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB290);
  uint64_t v56 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v62 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB298);
  uint64_t v51 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v60 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2A0);
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2A8);
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2B0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_24810FCEC();
  uint64_t v17 = v66;
  sub_248175F20();
  uint64_t v18 = v17;
  if (v17) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  }
  uint64_t v48 = v11;
  uint64_t v47 = v9;
  unint64_t v19 = v8;
  int v20 = v62;
  uint64_t v21 = v63;
  uint64_t v22 = v64;
  uint64_t v66 = v13;
  uint64_t v23 = sub_248175B30();
  if (*(void *)(v23 + 16) != 1)
  {
    uint64_t v28 = sub_2481758A0();
    swift_allocError();
    uint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v30 = &type metadata for AnisetteCommand.Request;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v12);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  }
  switch(*(unsigned char *)(v23 + 32))
  {
    case 1:
      LOBYTE(v67) = 1;
      sub_24810FE90();
      uint64_t v32 = v19;
      sub_248175A50();
      sub_248016918();
      uint64_t v33 = v54;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v12);
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      char v34 = 0;
      uint64_t v25 = v67;
      uint64_t v18 = v68;
      break;
    case 2:
      LOBYTE(v67) = 2;
      sub_24810FE3C();
      uint64_t v35 = v60;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v12);
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      uint64_t v25 = 1;
      goto LABEL_15;
    case 3:
      LOBYTE(v67) = 3;
      sub_24810FDE8();
      sub_248175A50();
      uint64_t v38 = v53;
      uint64_t v18 = 0;
      char v42 = sub_248175AD0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v12);
      uint64_t v26 = 0;
      char v34 = 0;
      uint64_t v25 = v42 & 1;
      uint64_t v27 = 0x1000000000000000;
      break;
    case 4:
      LOBYTE(v67) = 4;
      sub_24810FD94();
      sub_248175A50();
      uint64_t v39 = v57;
      uint64_t v25 = sub_248175AC0();
      uint64_t v18 = v43;
      (*(void (**)(char *, uint64_t))(v59 + 8))(v21, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v12);
      uint64_t v26 = 0;
      char v34 = 0;
      uint64_t v27 = 0x2000000000000000;
      break;
    case 5:
      LOBYTE(v67) = 5;
      sub_24810FD40();
      sub_248175A50();
      LOBYTE(v67) = 0;
      uint64_t v40 = v58;
      uint64_t v41 = v22;
      uint64_t v25 = sub_248175AC0();
      uint64_t v18 = v44;
      uint64_t v63 = v15;
      char v69 = 1;
      sub_248016918();
      sub_248175AF0();
      uint64_t v45 = v66;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v41, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v63, v12);
      char v34 = 0;
      uint64_t v26 = v67;
      uint64_t v27 = v68 | 0x3000000000000000;
      break;
    default:
      LOBYTE(v67) = 0;
      sub_24810FEE4();
      int v24 = v48;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v12);
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
LABEL_15:
      char v34 = 1;
      break;
  }
  uint64_t v36 = (uint64_t)v65;
  uint64_t v37 = v61;
  *unint64_t v61 = v25;
  v37[1] = v18;
  v37[2] = v26;
  v37[3] = v27;
  *((unsigned char *)v37 + 32) = v34;
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

uint64_t sub_24810C774@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 32);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v3;
  type metadata accessor for V1Command.Request(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24810C7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload
    || (type metadata accessor for V1Command.Request(0),
        uint64_t result = swift_getEnumCaseMultiPayload(),
        uint64_t v5 = type metadata accessor for V1Command.Request,
        result != 2))
  {
    uint64_t result = sub_2481111E0(a1, v5);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0x3000000000000000;
    char v7 = -1;
  }
  else
  {
    char v7 = *(unsigned char *)(a1 + 32);
    long long v8 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v8;
  }
  *(unsigned char *)(a2 + 32) = v7;
  return result;
}

uint64_t sub_24810C888@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AnisetteCommand.Request.init(from:)(a1, a2);
}

uint64_t sub_24810C8A0(void *a1)
{
  return AnisetteCommand.Request.encode(to:)(a1);
}

uint64_t sub_24810C8BC()
{
  return sub_248175EC0();
}

uint64_t sub_24810C914()
{
  return sub_248175EC0();
}

uint64_t AnisetteCommand.Response.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload == 1
    && (type metadata accessor for V1Command.Response(0),
        int v6 = swift_getEnumCaseMultiPayload(),
        uint64_t v5 = type metadata accessor for V1Command.Response,
        v6 == 2))
  {
    sub_24810FF84(a1, a2);
    uint64_t v7 = type metadata accessor for AnisetteCommand.Response();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  else
  {
    sub_2481111E0(a1, v5);
    uint64_t v12 = type metadata accessor for AnisetteCommand.Response();
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t AnisetteCommand.Response.into()@<X0>(uint64_t a1@<X8>)
{
  sub_24810FF84(v1, a1);
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t AnisetteCommand.Response.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA970);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA968);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AnisetteCommand.Response();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24810FFE8(v2, (uint64_t)v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
    case 4u:
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v16, v6);
      sub_248175E70();
      sub_2481100EC(&qword_2692DB2C8, (void (*)(void))sub_2480186F8, (void (*)(void))sub_247FF9F18);
      sub_2481750B0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      break;
    case 5u:
      uint64_t v19 = v21;
      uint64_t v18 = v22;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v5, v16, v22);
      sub_248175E70();
      sub_24811004C();
      sub_2481750B0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v18);
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
      sub_248175E70();
      sub_248110564(&qword_2692D7590, (void (*)(void))sub_247FF9F18);
      sub_2481750B0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      break;
  }
  return result;
}

uint64_t sub_24810CF48(uint64_t a1)
{
  unint64_t v2 = sub_248110174();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810CF84(uint64_t a1)
{
  unint64_t v2 = sub_248110174();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810CFC0(uint64_t a1)
{
  unint64_t v2 = sub_248110364();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810CFFC(uint64_t a1)
{
  unint64_t v2 = sub_248110364();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810D038(uint64_t a1)
{
  unint64_t v2 = sub_2481101C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810D074(uint64_t a1)
{
  unint64_t v2 = sub_2481101C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810D0B0(uint64_t a1)
{
  unint64_t v2 = sub_248110310();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810D0EC(uint64_t a1)
{
  unint64_t v2 = sub_248110310();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810D128(uint64_t a1)
{
  unint64_t v2 = sub_2481102BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810D164(uint64_t a1)
{
  unint64_t v2 = sub_2481102BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810D1A0(uint64_t a1)
{
  unint64_t v2 = sub_24811040C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810D1DC(uint64_t a1)
{
  unint64_t v2 = sub_24811040C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24810D218(uint64_t a1)
{
  unint64_t v2 = sub_2481103B8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24810D254(uint64_t a1)
{
  unint64_t v2 = sub_2481103B8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AnisetteCommand.Response.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2D0);
  uint64_t v83 = *(void *)(v2 - 8);
  uint64_t v84 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v80 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA970);
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v82 = v4;
  MEMORY[0x270FA5388](v4);
  id v79 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2D8);
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v76 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2E0);
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v73 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA968);
  uint64_t v85 = *(void *)(v10 - 8);
  uint64_t v86 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v72 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v71 = (char *)&v61 - v13;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2E8);
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v68 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2F0);
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v65 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB2F8);
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
  uint64_t v87 = *(void *)(v17 - 8);
  uint64_t v88 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v61 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v61 - v24;
  uint64_t v26 = type metadata accessor for AnisetteCommand.Response();
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v61 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB300);
  uint64_t v90 = *(void *)(v29 - 8);
  uint64_t v91 = v29;
  MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v61 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248110174();
  uint64_t v89 = v31;
  sub_248175F60();
  sub_24810FFE8(v92, (uint64_t)v28);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v39 = v87;
      uint64_t v38 = v88;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v23, v28, v88);
      char v94 = 1;
      sub_2481103B8();
      uint64_t v40 = v65;
      uint64_t v35 = v91;
      uint64_t v36 = v89;
      sub_248175B50();
      sub_248110564(&qword_2692D7488, (void (*)(void))sub_247FFA014);
      uint64_t v41 = v67;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v40, v41);
      char v42 = *(void (**)(char *, uint64_t))(v39 + 8);
      uint64_t v43 = v23;
      goto LABEL_9;
    case 2u:
      uint64_t v45 = v87;
      uint64_t v44 = v88;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v20, v28, v88);
      char v95 = 2;
      sub_248110364();
      uint64_t v46 = v68;
      uint64_t v47 = v91;
      uint64_t v48 = v89;
      sub_248175B50();
      sub_248110564(&qword_2692D7488, (void (*)(void))sub_247FFA014);
      uint64_t v49 = v70;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v46, v49);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v44);
      return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v48, v47);
    case 3u:
      uint64_t v52 = v85;
      uint64_t v51 = v86;
      uint64_t v53 = v71;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v71, v28, v86);
      char v96 = 3;
      sub_248110310();
      uint64_t v54 = v73;
      uint64_t v35 = v91;
      uint64_t v36 = v89;
      sub_248175B50();
      sub_2481100EC(&qword_2692DB330, (void (*)(void))sub_248016D60, (void (*)(void))sub_247FFA014);
      uint64_t v55 = v75;
      sub_248175BE0();
      uint64_t v56 = v74;
      goto LABEL_7;
    case 4u:
      uint64_t v52 = v85;
      uint64_t v51 = v86;
      uint64_t v53 = v72;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v72, v28, v86);
      char v97 = 4;
      sub_2481102BC();
      uint64_t v54 = v76;
      uint64_t v35 = v91;
      uint64_t v36 = v89;
      sub_248175B50();
      sub_2481100EC(&qword_2692DB330, (void (*)(void))sub_248016D60, (void (*)(void))sub_247FFA014);
      uint64_t v55 = v78;
      sub_248175BE0();
      uint64_t v56 = v77;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v56 + 8))(v54, v55);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v51);
      break;
    case 5u:
      uint64_t v57 = v81;
      uint64_t v38 = v82;
      uint64_t v58 = v79;
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v79, v28, v82);
      char v98 = 5;
      sub_2481101C8();
      uint64_t v59 = v80;
      uint64_t v35 = v91;
      uint64_t v36 = v89;
      sub_248175B50();
      sub_24811021C();
      uint64_t v60 = v84;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v59, v60);
      char v42 = *(void (**)(char *, uint64_t))(v57 + 8);
      uint64_t v43 = v58;
LABEL_9:
      v42(v43, v38);
      break;
    default:
      uint64_t v33 = v87;
      uint64_t v32 = v88;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v25, v28, v88);
      char v93 = 0;
      sub_24811040C();
      char v34 = v62;
      uint64_t v35 = v91;
      uint64_t v36 = v89;
      sub_248175B50();
      sub_248110564(&qword_2692D7488, (void (*)(void))sub_247FFA014);
      uint64_t v37 = v64;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v34, v37);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v32);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v36, v35);
}

uint64_t AnisetteCommand.Response.hashValue.getter()
{
  sub_248175E50();
  AnisetteCommand.Response.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t AnisetteCommand.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB358);
  uint64_t v91 = *(void *)(v3 - 8);
  uint64_t v92 = v3;
  MEMORY[0x270FA5388](v3);
  char v97 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB360);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v89 = v5;
  uint64_t v90 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v100 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB368);
  uint64_t v87 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  MEMORY[0x270FA5388](v8);
  char v96 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB370);
  uint64_t v86 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  char v95 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB378);
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  char v94 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB380);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  char v93 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB388);
  uint64_t v98 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for AnisetteCommand.Response();
  uint64_t v15 = MEMORY[0x270FA5388](v102);
  uint64_t v80 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v81 = (char *)&v75 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v75 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v75 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v75 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v75 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v75 - v31;
  uint64_t v33 = a1[3];
  uint64_t v104 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  sub_248110174();
  uint64_t v34 = v105;
  sub_248175F20();
  if (v34) {
    goto LABEL_18;
  }
  uint64_t v76 = v27;
  id v79 = v24;
  uint64_t v77 = v21;
  uint64_t v78 = v30;
  uint64_t v35 = v99;
  uint64_t v36 = v100;
  uint64_t v105 = 0;
  uint64_t v37 = v101;
  uint64_t v38 = v103;
  uint64_t v39 = sub_248175B30();
  if (*(void *)(v39 + 16) != 1)
  {
    uint64_t v46 = v38;
    uint64_t v47 = sub_2481758A0();
    swift_allocError();
    uint64_t v49 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v49 = v102;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, *MEMORY[0x263F8DCB0], v47);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v14, v46);
LABEL_18:
    uint64_t v45 = (uint64_t)v104;
    return __swift_destroy_boxed_opaque_existential_1(v45);
  }
  uint64_t v40 = *(unsigned __int8 *)(v39 + 32);
  uint64_t v75 = v32;
  switch(v40)
  {
    case 1:
      char v107 = 1;
      sub_2481103B8();
      uint64_t v50 = v94;
      uint64_t v51 = v105;
      sub_248175A50();
      if (v51) {
        goto LABEL_17;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
      sub_248110564(&qword_2692D74A8, (void (*)(void))sub_247FFA144);
      uint64_t v43 = (uint64_t)v76;
      uint64_t v52 = v85;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v50, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v14, v103);
      uint64_t v45 = (uint64_t)v104;
      goto LABEL_9;
    case 2:
      char v108 = 2;
      sub_248110364();
      uint64_t v54 = v95;
      uint64_t v55 = v105;
      sub_248175A50();
      if (v55) {
        goto LABEL_17;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
      sub_248110564(&qword_2692D74A8, (void (*)(void))sub_247FFA144);
      sub_248175AF0();
      uint64_t v56 = v98;
      (*(void (**)(char *, uint64_t))(v86 + 8))(v54, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v103);
      uint64_t v73 = (uint64_t)v79;
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = v73;
      goto LABEL_22;
    case 3:
      char v109 = 3;
      sub_248110310();
      uint64_t v57 = v96;
      uint64_t v58 = v105;
      sub_248175A50();
      if (v58) {
        goto LABEL_17;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA968);
      sub_2481100EC(&qword_2692DB3A0, (void (*)(void))sub_248016DB4, (void (*)(void))sub_247FFA144);
      uint64_t v59 = (uint64_t)v77;
      uint64_t v60 = v88;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v87 + 8))(v57, v60);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v14, v103);
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = v59;
      uint64_t v45 = (uint64_t)v104;
      uint64_t v37 = v101;
      goto LABEL_23;
    case 4:
      char v110 = 4;
      sub_2481102BC();
      uint64_t v61 = v105;
      sub_248175A50();
      if (v61) {
        goto LABEL_17;
      }
      uint64_t v62 = v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA968);
      sub_2481100EC(&qword_2692DB3A0, (void (*)(void))sub_248016DB4, (void (*)(void))sub_247FFA144);
      uint64_t v63 = v81;
      uint64_t v64 = v89;
      sub_248175AF0();
      uint64_t v65 = v98;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v62, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v103);
      goto LABEL_21;
    case 5:
      char v111 = 5;
      sub_2481101C8();
      uint64_t v66 = v97;
      uint64_t v67 = v105;
      sub_248175A50();
      if (v67) {
        goto LABEL_17;
      }
      uint64_t v69 = v66;
      uint64_t v70 = v38;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA970);
      sub_248110460();
      uint64_t v63 = v80;
      uint64_t v71 = v92;
      sub_248175AF0();
      uint64_t v72 = v98;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v69, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v14, v70);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = (uint64_t)v63;
LABEL_22:
      uint64_t v45 = (uint64_t)v104;
      goto LABEL_23;
    default:
      char v106 = 0;
      sub_24811040C();
      uint64_t v41 = v93;
      uint64_t v42 = v105;
      sub_248175A50();
      if (v42)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v98 + 8))(v14, v38);
        goto LABEL_18;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
      sub_248110564(&qword_2692D74A8, (void (*)(void))sub_247FFA144);
      uint64_t v43 = (uint64_t)v78;
      uint64_t v44 = v83;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v14, v103);
      uint64_t v45 = (uint64_t)v104;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      uint64_t v53 = v43;
LABEL_23:
      uint64_t v74 = (uint64_t)v75;
      sub_24810FF84(v53, (uint64_t)v75);
      sub_24810FF84(v74, v37);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v45);
}

uint64_t sub_24810ED58@<X0>(uint64_t a1@<X8>)
{
  sub_24810FF84(v1, a1);
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24810EDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for V1Command(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for V1Command.Response(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_24810FF84(a1, a3);
      uint64_t v6 = 0;
      goto LABEL_7;
    }
    uint64_t v7 = type metadata accessor for V1Command.Response;
  }
  else
  {
    uint64_t v7 = type metadata accessor for V1Command;
  }
  sub_2481111E0(a1, v7);
  uint64_t v6 = 1;
LABEL_7:
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v8(a3, v6, 1, a2);
}

uint64_t sub_24810EEB0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnisetteCommand.Response.init(from:)(a1, a2);
}

uint64_t sub_24810EEC8(void *a1)
{
  return AnisetteCommand.Response.encode(to:)(a1);
}

uint64_t sub_24810EEE4()
{
  sub_248175E50();
  AnisetteCommand.Response.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t sub_24810EF28()
{
  sub_248175E50();
  AnisetteCommand.Response.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t _s12AppleIDSetup15AnisetteCommandV7RequestO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v4 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v7 = *(void *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  if (v6) {
    int v12 = 4;
  }
  else {
    int v12 = 0;
  }
  switch((v4 >> 60) & 3 | v12)
  {
    case 1uLL:
      if (*(unsigned char *)(a2 + 32)) {
        int v16 = 4;
      }
      else {
        int v16 = 0;
      }
      if (((v9 >> 60) & 3 | v16) != 1) {
        goto LABEL_54;
      }
      sub_2480E32D8(*(void *)a1, v2, *(void *)(a1 + 16), v4, v6);
      sub_2480E32D8(v7, v8, v10, v9, v11);
      char v17 = ((v3 & 1) == 0) ^ v7;
      return v17 & 1;
    case 2uLL:
      if (*(unsigned char *)(a2 + 32)) {
        int v18 = 4;
      }
      else {
        int v18 = 0;
      }
      if (((v9 >> 60) & 3 | v18) != 2)
      {
        swift_bridgeObjectRetain();
        goto LABEL_54;
      }
      uint64_t v39 = *(void *)(a1 + 16);
      if (v3 == v7 && v2 == v8) {
        char v17 = 1;
      }
      else {
        char v17 = sub_248175CE0();
      }
      sub_2480E684C(v7, v8, v10, v9, v11);
      sub_2480E684C(v3, v2, v39, v4, v6);
      sub_2480E32D8(v3, v2, v39, v4, v6);
      uint64_t v24 = v7;
      unint64_t v25 = v8;
      uint64_t v26 = v10;
      unint64_t v27 = v9;
      goto LABEL_59;
    case 3uLL:
      if (*(unsigned char *)(a2 + 32)) {
        int v19 = 4;
      }
      else {
        int v19 = 0;
      }
      unint64_t v40 = v4 & 0xCFFFFFFFFFFFFFFFLL;
      if (((v9 >> 60) & 3 | v19) != 3)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = v5;
        unint64_t v15 = v4 & 0xCFFFFFFFFFFFFFFFLL;
        goto LABEL_45;
      }
      if (v3 == v7 && v2 == v8 || (sub_248175CE0() & 1) != 0)
      {
        sub_2480E684C(v7, v8, v10, v9, v11);
        sub_2480E684C(v3, v2, v5, v4, v6);
        sub_247FB6C20(v5, v40);
        sub_247FB6C20(v10, v9 & 0xCFFFFFFFFFFFFFFFLL);
        char v38 = sub_24802CAF4(v5, v40, v10, v9 & 0xCFFFFFFFFFFFFFFFLL);
        sub_247FB6CCC(v10, v9 & 0xCFFFFFFFFFFFFFFFLL);
        sub_247FB6CCC(v5, v40);
        sub_2480E32D8(v3, v2, v5, v4, v6);
        sub_2480E32D8(v7, v8, v10, v9, v11);
        return v38 & 1;
      }
      sub_2480E684C(v7, v8, v10, v9, v11);
      uint64_t v33 = v3;
      unint64_t v34 = v2;
      uint64_t v35 = v5;
      unint64_t v36 = v4;
      char v37 = v6;
      goto LABEL_55;
    case 4uLL:
      if (!(v5 | v2 | v3 | v4))
      {
        if (*(unsigned char *)(a2 + 32)) {
          int v31 = 4;
        }
        else {
          int v31 = 0;
        }
        if (((v9 >> 60) & 3 | v31) == 4 && (v10 | v8 | v7 | v9) == 0)
        {
          sub_2480E32D8(0, 0, 0, 0, v6);
          sub_2480E32D8(0, 0, 0, 0, v11);
          char v17 = 1;
          return v17 & 1;
        }
        goto LABEL_54;
      }
      if (*(unsigned char *)(a2 + 32)) {
        int v21 = 4;
      }
      else {
        int v21 = 0;
      }
      if (((v9 >> 60) & 3 | v21) != 4 || v7 != 1 || (v10 | v8 | v9) != 0) {
        goto LABEL_54;
      }
      char v17 = 1;
      sub_2480E32D8(1, 0, 0, 0, v6);
      uint64_t v24 = 1;
      unint64_t v25 = 0;
      uint64_t v26 = 0;
      unint64_t v27 = 0;
LABEL_59:
      sub_2480E32D8(v24, v25, v26, v27, v11);
      return v17 & 1;
    default:
      if (*(unsigned char *)(a2 + 32)) {
        int v13 = 4;
      }
      else {
        int v13 = 0;
      }
      if ((v9 >> 60) & 3 | v13)
      {
        uint64_t v14 = *(void *)a1;
        unint64_t v15 = v2;
LABEL_45:
        sub_247FB6C20(v14, v15);
LABEL_54:
        uint64_t v33 = v7;
        unint64_t v34 = v8;
        uint64_t v35 = v10;
        unint64_t v36 = v9;
        char v37 = v11;
LABEL_55:
        sub_2480E684C(v33, v34, v35, v36, v37);
        sub_2480E32D8(v3, v2, v5, v4, v6);
        sub_2480E32D8(v7, v8, v10, v9, v11);
        char v17 = 0;
        return v17 & 1;
      }
      else
      {
        sub_2480E684C(*(void *)a2, *(void *)(a2 + 8), v10, v9, v11);
        sub_2480E684C(v3, v2, v5, v4, v6);
        char v28 = sub_24802CAF4(v3, v2, v7, v8);
        uint64_t v29 = v5;
        char v30 = v28;
        sub_2480E32D8(v3, v2, v29, v4, v6);
        sub_2480E32D8(v7, v8, v10, v9, v11);
        return v30 & 1;
      }
  }
}

uint64_t _s12AppleIDSetup15AnisetteCommandV8ResponseO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a1;
  uint64_t v75 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA970);
  uint64_t v68 = *(void *)(v2 - 8);
  uint64_t v69 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v67 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA968);
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v66 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v65 = (char *)&v62 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  uint64_t v73 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v63 = (char *)&v62 - v13;
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v62 - v14;
  uint64_t v16 = type metadata accessor for AnisetteCommand.Response();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  int v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  unint64_t v25 = (char *)&v62 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  char v28 = (char *)&v62 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  int v31 = (char *)&v62 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v62 - v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB548);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  char v37 = (char *)&v62 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = (uint64_t)&v37[*(int *)(v35 + 56)];
  sub_24810FFE8(v74, (uint64_t)v37);
  sub_24810FFE8(v75, v38);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24810FFE8((uint64_t)v37, (uint64_t)v31);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v40 = v72;
        uint64_t v39 = v73;
        uint64_t v41 = v63;
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v63, v38, v72);
        sub_247FF9E1C();
        sub_247FF9E70();
        char v42 = sub_248174A50();
        uint64_t v43 = *(void (**)(char *, uint64_t))(v39 + 8);
        v43(v41, v40);
        uint64_t v44 = v31;
        goto LABEL_8;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v31, v72);
      goto LABEL_21;
    case 2u:
      sub_24810FFE8((uint64_t)v37, (uint64_t)v28);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        (*(void (**)(char *, uint64_t))(v73 + 8))(v28, v72);
        goto LABEL_21;
      }
      uint64_t v40 = v72;
      uint64_t v45 = v73;
      uint64_t v46 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v64, v38, v72);
      sub_247FF9E1C();
      sub_247FF9E70();
      char v42 = sub_248174A50();
      uint64_t v43 = *(void (**)(char *, uint64_t))(v45 + 8);
      v43(v46, v40);
      uint64_t v44 = v28;
LABEL_8:
      v43(v44, v40);
      goto LABEL_23;
    case 3u:
      sub_24810FFE8((uint64_t)v37, (uint64_t)v25);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v48 = v70;
        uint64_t v47 = v71;
        uint64_t v49 = v65;
        (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v65, v38, v71);
        sub_248018750();
        sub_247FF9E1C();
        sub_247FF9E70();
        char v42 = sub_248174A50();
        uint64_t v50 = *(void (**)(char *, uint64_t))(v48 + 8);
        v50(v49, v47);
        uint64_t v51 = v25;
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v70 + 8))(v25, v71);
      goto LABEL_21;
    case 4u:
      sub_24810FFE8((uint64_t)v37, (uint64_t)v22);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        (*(void (**)(char *, uint64_t))(v70 + 8))(v22, v71);
        goto LABEL_21;
      }
      uint64_t v52 = v70;
      uint64_t v47 = v71;
      uint64_t v53 = v66;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v66, v38, v71);
      sub_248018750();
      sub_247FF9E1C();
      sub_247FF9E70();
      char v42 = sub_248174A50();
      uint64_t v50 = *(void (**)(char *, uint64_t))(v52 + 8);
      v50(v53, v47);
      uint64_t v51 = v22;
LABEL_13:
      v50(v51, v47);
      goto LABEL_23;
    case 5u:
      sub_24810FFE8((uint64_t)v37, (uint64_t)v19);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v55 = v67;
        uint64_t v54 = v68;
        uint64_t v56 = v69;
        (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v67, v38, v69);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B13BE58);
        sub_248112B38(&qword_2692DB550);
        sub_247FF9E1C();
        sub_247FF9E70();
        char v42 = sub_248174A50();
        uint64_t v57 = *(void (**)(char *, uint64_t))(v54 + 8);
        v57(v55, v56);
        v57(v19, v56);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v68 + 8))(v19, v69);
      goto LABEL_21;
    default:
      sub_24810FFE8((uint64_t)v37, (uint64_t)v33);
      if (swift_getEnumCaseMultiPayload())
      {
        (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v72);
LABEL_21:
        sub_248112AD8((uint64_t)v37);
        char v42 = 0;
      }
      else
      {
        uint64_t v59 = v72;
        uint64_t v58 = v73;
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v15, v38, v72);
        sub_247FF9E1C();
        sub_247FF9E70();
        char v42 = sub_248174A50();
        uint64_t v60 = *(void (**)(char *, uint64_t))(v58 + 8);
        v60(v15, v59);
        v60(v33, v59);
LABEL_23:
        sub_2481111E0((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response);
      }
      return v42 & 1;
  }
}

unint64_t sub_24810FCEC()
{
  unint64_t result = qword_2692DB248;
  if (!qword_2692DB248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB248);
  }
  return result;
}

unint64_t sub_24810FD40()
{
  unint64_t result = qword_2692DB250;
  if (!qword_2692DB250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB250);
  }
  return result;
}

unint64_t sub_24810FD94()
{
  unint64_t result = qword_2692DB258;
  if (!qword_2692DB258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB258);
  }
  return result;
}

unint64_t sub_24810FDE8()
{
  unint64_t result = qword_2692DB260;
  if (!qword_2692DB260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB260);
  }
  return result;
}

unint64_t sub_24810FE3C()
{
  unint64_t result = qword_2692DB268;
  if (!qword_2692DB268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB268);
  }
  return result;
}

unint64_t sub_24810FE90()
{
  unint64_t result = qword_2692DB270;
  if (!qword_2692DB270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB270);
  }
  return result;
}

unint64_t sub_24810FEE4()
{
  unint64_t result = qword_2692DB278;
  if (!qword_2692DB278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB278);
  }
  return result;
}

uint64_t type metadata accessor for AnisetteCommand.Response()
{
  uint64_t result = qword_26B13BB30;
  if (!qword_26B13BB30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24810FF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnisetteCommand.Response();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24810FFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnisetteCommand.Response();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24811004C()
{
  unint64_t result = qword_2692DB2B8;
  if (!qword_2692DB2B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DA970);
    sub_248112B38(&qword_2692DB2C0);
    sub_247FF9F18();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB2B8);
  }
  return result;
}

uint64_t sub_2481100EC(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DA968);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_248110174()
{
  unint64_t result = qword_2692DB308;
  if (!qword_2692DB308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB308);
  }
  return result;
}

unint64_t sub_2481101C8()
{
  unint64_t result = qword_2692DB310;
  if (!qword_2692DB310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB310);
  }
  return result;
}

unint64_t sub_24811021C()
{
  unint64_t result = qword_2692DB318;
  if (!qword_2692DB318)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DA970);
    sub_248110500(&qword_2692DB320);
    sub_247FFA014();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB318);
  }
  return result;
}

unint64_t sub_2481102BC()
{
  unint64_t result = qword_2692DB328;
  if (!qword_2692DB328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB328);
  }
  return result;
}

unint64_t sub_248110310()
{
  unint64_t result = qword_2692DB338;
  if (!qword_2692DB338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB338);
  }
  return result;
}

unint64_t sub_248110364()
{
  unint64_t result = qword_2692DB340;
  if (!qword_2692DB340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB340);
  }
  return result;
}

unint64_t sub_2481103B8()
{
  unint64_t result = qword_2692DB348;
  if (!qword_2692DB348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB348);
  }
  return result;
}

unint64_t sub_24811040C()
{
  unint64_t result = qword_2692DB350;
  if (!qword_2692DB350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB350);
  }
  return result;
}

unint64_t sub_248110460()
{
  unint64_t result = qword_2692DB390;
  if (!qword_2692DB390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DA970);
    sub_248110500(&qword_2692DB398);
    sub_247FFA144();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB390);
  }
  return result;
}

uint64_t sub_248110500(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B13BE58);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_248110564(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D7490);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2481105E4()
{
  unint64_t result = qword_2692DB3A8;
  if (!qword_2692DB3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB3A8);
  }
  return result;
}

unint64_t sub_248110638(uint64_t a1)
{
  unint64_t result = sub_248110660();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_248110660()
{
  unint64_t result = qword_2692DB3B0;
  if (!qword_2692DB3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB3B0);
  }
  return result;
}

unint64_t sub_2481106B8()
{
  unint64_t result = qword_2692DB3B8;
  if (!qword_2692DB3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB3B8);
  }
  return result;
}

unint64_t sub_24811070C(uint64_t a1)
{
  unint64_t result = sub_248110734();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_248110734()
{
  unint64_t result = qword_2692DB3C0;
  if (!qword_2692DB3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB3C0);
  }
  return result;
}

unint64_t sub_248110788(void *a1)
{
  a1[1] = sub_2480E36C8();
  a1[2] = sub_2480E35CC();
  unint64_t result = sub_2481107C0();
  a1[3] = result;
  return result;
}

unint64_t sub_2481107C0()
{
  unint64_t result = qword_2692DB3C8;
  if (!qword_2692DB3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB3C8);
  }
  return result;
}

unint64_t sub_248110818()
{
  unint64_t result = qword_2692DB3D0;
  if (!qword_2692DB3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB3D0);
  }
  return result;
}

uint64_t sub_24811086C(uint64_t a1)
{
  uint64_t result = sub_248110A40(&qword_2692DB3D8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2481108B0(uint64_t a1)
{
  uint64_t result = sub_248110A40(&qword_2692DB3E0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2481108F4(void *a1)
{
  a1[1] = sub_248110A40(&qword_2692DA6D8);
  a1[2] = sub_248110A40(&qword_2692DA690);
  uint64_t result = sub_248110A40(&qword_2692DB3E8);
  a1[3] = result;
  return result;
}

uint64_t sub_248110980()
{
  return sub_248110A40(&qword_2692DB3F0);
}

unint64_t sub_2481109B8()
{
  unint64_t result = qword_2692DB3F8;
  if (!qword_2692DB3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB3F8);
  }
  return result;
}

uint64_t sub_248110A0C()
{
  return sub_248110A40(&qword_2692DB400);
}

uint64_t sub_248110A40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AnisetteCommand.Response();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_248110A84(uint64_t a1)
{
  unint64_t result = sub_2481106B8();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_248110AB0()
{
  return sub_248110A40(&qword_2692DB3D8);
}

ValueMetadata *type metadata accessor for AnisetteCommand()
{
  return &type metadata for AnisetteCommand;
}

uint64_t destroy for AnisetteCommand.Request(uint64_t a1)
{
  return sub_2480E32D8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for AnisetteCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_2480E684C(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for AnisetteCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_2480E684C(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  sub_2480E32D8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AnisetteCommand.Request(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  unint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  char v8 = *(unsigned char *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = v3;
  sub_2480E32D8(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnisetteCommand.Request(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FC && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1020);
  }
  unsigned int v3 = ((*(void *)(a1 + 24) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 32))) ^ 0x3FF;
  if (v3 >= 0x3FB) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AnisetteCommand.Request(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 1020;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3FC) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FC) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (-a2 & 3) << 60;
      *(unsigned char *)(result + 32) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_248110CD8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    int v1 = 4;
  }
  else {
    int v1 = 0;
  }
  unsigned int v2 = (*(void *)(a1 + 24) >> 60) & 3 | v1;
  if (v2 <= 3) {
    return v2;
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_248110D08(uint64_t result)
{
  *(void *)(result + 24) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_248110D18(uint64_t result, uint64_t a2)
{
  if (a2 < 4)
  {
    *(void *)(result + 24) = *(void *)(result + 24) & 0xCFFFFFFFFFFFFFFFLL | (a2 << 60);
  }
  else
  {
    *(void *)unint64_t result = (a2 - 4);
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
  }
  *(unsigned char *)(result + 32) = a2 > 3;
  return result;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Request()
{
  return &type metadata for AnisetteCommand.Request;
}

uint64_t *initializeBufferWithCopyOfBuffer for AnisetteCommand.Response(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 4u:
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA968);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 5u:
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DA970);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        break;
      default:
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for AnisetteCommand.Response(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 5)
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(off_265237648[(int)result]);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t initializeWithCopy for AnisetteCommand.Response(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(off_265237648[EnumCaseMultiPayload]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for AnisetteCommand.Response(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2481111E0(a1, (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(off_265237648[EnumCaseMultiPayload]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2481111E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for AnisetteCommand.Response(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(off_265237648[EnumCaseMultiPayload]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for AnisetteCommand.Response(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_2481111E0(a1, (uint64_t (*)(void))type metadata accessor for AnisetteCommand.Response);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(off_265237648[EnumCaseMultiPayload]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_248111394()
{
  sub_2481114B8(319, &qword_26B13BE48);
  if (v0 <= 0x3F)
  {
    sub_2481114B8(319, &qword_26B13BE38);
    if (v1 <= 0x3F)
    {
      sub_24811151C();
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_2481114B8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    sub_247FF9E70();
    unint64_t v3 = sub_248174A60();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_24811151C()
{
  if (!qword_26B13BE40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B13BE58);
    sub_247FF9E70();
    unint64_t v0 = sub_248174A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B13BE40);
    }
  }
}

ValueMetadata *type metadata accessor for AnisetteCommand.Response.CodingKeys()
{
  return &type metadata for AnisetteCommand.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Response.ProvisionCodingKeys()
{
  return &type metadata for AnisetteCommand.Response.ProvisionCodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Response.SyncCodingKeys()
{
  return &type metadata for AnisetteCommand.Response.SyncCodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Response.EraseCodingKeys()
{
  return &type metadata for AnisetteCommand.Response.EraseCodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Response.FetchDataCodingKeys()
{
  return &type metadata for AnisetteCommand.Response.FetchDataCodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Response.LegacyDataCodingKeys()
{
  return &type metadata for AnisetteCommand.Response.LegacyDataCodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Response.FetchAttestationHeadersCodingKeys()
{
  return &type metadata for AnisetteCommand.Response.FetchAttestationHeadersCodingKeys;
}

unsigned char *_s12AppleIDSetup15AnisetteCommandV8ResponseO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2481116D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Request.CodingKeys()
{
  return &type metadata for AnisetteCommand.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Request.ProvisionCodingKeys()
{
  return &type metadata for AnisetteCommand.Request.ProvisionCodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Request.SyncCodingKeys()
{
  return &type metadata for AnisetteCommand.Request.SyncCodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Request.EraseCodingKeys()
{
  return &type metadata for AnisetteCommand.Request.EraseCodingKeys;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Request.FetchDataCodingKeys()
{
  return &type metadata for AnisetteCommand.Request.FetchDataCodingKeys;
}

unsigned char *_s12AppleIDSetup15AnisetteCommandV8ResponseO19ProvisionCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2481117E8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Request.LegacyDataCodingKeys()
{
  return &type metadata for AnisetteCommand.Request.LegacyDataCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AnisetteCommand.Request.FetchAttestationHeadersCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2481118ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnisetteCommand.Request.FetchAttestationHeadersCodingKeys()
{
  return &type metadata for AnisetteCommand.Request.FetchAttestationHeadersCodingKeys;
}

unint64_t sub_248111928()
{
  unint64_t result = qword_2692DB408;
  if (!qword_2692DB408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB408);
  }
  return result;
}

unint64_t sub_248111980()
{
  unint64_t result = qword_2692DB410;
  if (!qword_2692DB410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB410);
  }
  return result;
}

unint64_t sub_2481119D8()
{
  unint64_t result = qword_2692DB418;
  if (!qword_2692DB418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB418);
  }
  return result;
}

unint64_t sub_248111A30()
{
  unint64_t result = qword_2692DB420;
  if (!qword_2692DB420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB420);
  }
  return result;
}

unint64_t sub_248111A88()
{
  unint64_t result = qword_2692DB428;
  if (!qword_2692DB428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB428);
  }
  return result;
}

unint64_t sub_248111AE0()
{
  unint64_t result = qword_2692DB430;
  if (!qword_2692DB430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB430);
  }
  return result;
}

unint64_t sub_248111B38()
{
  unint64_t result = qword_2692DB438;
  if (!qword_2692DB438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB438);
  }
  return result;
}

unint64_t sub_248111B90()
{
  unint64_t result = qword_2692DB440;
  if (!qword_2692DB440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB440);
  }
  return result;
}

unint64_t sub_248111BE8()
{
  unint64_t result = qword_2692DB448;
  if (!qword_2692DB448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB448);
  }
  return result;
}

unint64_t sub_248111C40()
{
  unint64_t result = qword_2692DB450;
  if (!qword_2692DB450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB450);
  }
  return result;
}

unint64_t sub_248111C98()
{
  unint64_t result = qword_2692DB458;
  if (!qword_2692DB458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB458);
  }
  return result;
}

unint64_t sub_248111CF0()
{
  unint64_t result = qword_2692DB460;
  if (!qword_2692DB460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB460);
  }
  return result;
}

unint64_t sub_248111D48()
{
  unint64_t result = qword_2692DB468;
  if (!qword_2692DB468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB468);
  }
  return result;
}

unint64_t sub_248111DA0()
{
  unint64_t result = qword_2692DB470;
  if (!qword_2692DB470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB470);
  }
  return result;
}

unint64_t sub_248111DF8()
{
  unint64_t result = qword_2692DB478;
  if (!qword_2692DB478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB478);
  }
  return result;
}

unint64_t sub_248111E50()
{
  unint64_t result = qword_2692DB480;
  if (!qword_2692DB480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB480);
  }
  return result;
}

unint64_t sub_248111EA8()
{
  unint64_t result = qword_2692DB488;
  if (!qword_2692DB488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB488);
  }
  return result;
}

unint64_t sub_248111F00()
{
  unint64_t result = qword_2692DB490;
  if (!qword_2692DB490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB490);
  }
  return result;
}

unint64_t sub_248111F58()
{
  unint64_t result = qword_2692DB498;
  if (!qword_2692DB498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB498);
  }
  return result;
}

unint64_t sub_248111FB0()
{
  unint64_t result = qword_2692DB4A0;
  if (!qword_2692DB4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4A0);
  }
  return result;
}

unint64_t sub_248112008()
{
  unint64_t result = qword_2692DB4A8;
  if (!qword_2692DB4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4A8);
  }
  return result;
}

unint64_t sub_248112060()
{
  unint64_t result = qword_2692DB4B0;
  if (!qword_2692DB4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4B0);
  }
  return result;
}

unint64_t sub_2481120B8()
{
  unint64_t result = qword_2692DB4B8;
  if (!qword_2692DB4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4B8);
  }
  return result;
}

unint64_t sub_248112110()
{
  unint64_t result = qword_2692DB4C0;
  if (!qword_2692DB4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4C0);
  }
  return result;
}

unint64_t sub_248112168()
{
  unint64_t result = qword_2692DB4C8;
  if (!qword_2692DB4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4C8);
  }
  return result;
}

unint64_t sub_2481121C0()
{
  unint64_t result = qword_2692DB4D0;
  if (!qword_2692DB4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4D0);
  }
  return result;
}

unint64_t sub_248112218()
{
  unint64_t result = qword_2692DB4D8;
  if (!qword_2692DB4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4D8);
  }
  return result;
}

unint64_t sub_248112270()
{
  unint64_t result = qword_2692DB4E0;
  if (!qword_2692DB4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4E0);
  }
  return result;
}

unint64_t sub_2481122C8()
{
  unint64_t result = qword_2692DB4E8;
  if (!qword_2692DB4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4E8);
  }
  return result;
}

unint64_t sub_248112320()
{
  unint64_t result = qword_2692DB4F0;
  if (!qword_2692DB4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4F0);
  }
  return result;
}

unint64_t sub_248112378()
{
  unint64_t result = qword_2692DB4F8;
  if (!qword_2692DB4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB4F8);
  }
  return result;
}

unint64_t sub_2481123D0()
{
  unint64_t result = qword_2692DB500;
  if (!qword_2692DB500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB500);
  }
  return result;
}

unint64_t sub_248112428()
{
  unint64_t result = qword_2692DB508;
  if (!qword_2692DB508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB508);
  }
  return result;
}

unint64_t sub_248112480()
{
  unint64_t result = qword_2692DB510;
  if (!qword_2692DB510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB510);
  }
  return result;
}

unint64_t sub_2481124D8()
{
  unint64_t result = qword_2692DB518;
  if (!qword_2692DB518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB518);
  }
  return result;
}

unint64_t sub_248112530()
{
  unint64_t result = qword_2692DB520;
  if (!qword_2692DB520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB520);
  }
  return result;
}

unint64_t sub_248112588()
{
  unint64_t result = qword_2692DB528;
  if (!qword_2692DB528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB528);
  }
  return result;
}

unint64_t sub_2481125E0()
{
  unint64_t result = qword_2692DB530;
  if (!qword_2692DB530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB530);
  }
  return result;
}

unint64_t sub_248112638()
{
  unint64_t result = qword_2692DB538;
  if (!qword_2692DB538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB538);
  }
  return result;
}

unint64_t sub_248112690()
{
  unint64_t result = qword_2692DB540;
  if (!qword_2692DB540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB540);
  }
  return result;
}

uint64_t sub_2481126E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79646F4270747468 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2481127C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000248192D00)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_248175CE0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_248112850(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F697369766F7270 && a2 == 0xE90000000000006ELL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1668184435 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6573617265 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461446863746566 && a2 == 0xE900000000000061 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x614479636167656CLL && a2 == 0xEA00000000006174 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000248192CE0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_248112AD8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB548);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_248112B38(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B13BE58);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_248112BA4()
{
  uint64_t v0 = sub_248174B10();
  __swift_allocate_value_buffer(v0, qword_2692DB558);
  __swift_project_value_buffer(v0, (uint64_t)qword_2692DB558);
  return sub_248174B00();
}

uint64_t Signpost.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = "com.apple.appleidsetup.signpost";
  *(void *)(v4 + 24) = 31;
  *(unsigned char *)(v4 + 32) = 2;
  uint64_t v5 = v4 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_identifier;
  uint64_t v6 = sub_248174AE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)(v4 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_intervalState) = 0;
  uint64_t v7 = v4 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_startTime;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a2;
  return v4;
}

uint64_t Signpost.init(name:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = "com.apple.appleidsetup.signpost";
  *(void *)(v2 + 24) = 31;
  *(unsigned char *)(v2 + 32) = 2;
  uint64_t v5 = v2 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_identifier;
  uint64_t v6 = sub_248174AE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)(v2 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_intervalState) = 0;
  uint64_t v7 = v2 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_startTime;
  *(void *)uint64_t v7 = 0;
  *(unsigned char *)(v7 + 8) = 1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return v2;
}

void sub_248112DB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_248174AE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v52 - v8;
  MEMORY[0x270FA5388](v7);
  unint64_t v11 = (char *)v52 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB588);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v52 - v16;
  if (qword_2692D4DE0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_248174B10();
  uint64_t v19 = __swift_project_value_buffer(v18, (uint64_t)qword_2692DB558);
  sub_248174AF0();
  sub_248174AC0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v17, 0, 1, v2);
  uint64_t v20 = v0 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_identifier;
  swift_beginAccess();
  sub_248113518((uint64_t)v17, v20);
  swift_endAccess();
  sub_248113580(v20, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v15, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v15, v2);
    if (qword_2692D4D80 != -1) {
      swift_once();
    }
    uint64_t v59 = v6;
    uint64_t v25 = sub_248174B90();
    __swift_project_value_buffer(v25, (uint64_t)qword_2692D6AA8);
    uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v58(v9, v11, v2);
    swift_retain_n();
    uint64_t v26 = sub_248174B70();
    os_log_type_t v27 = sub_2481755F0();
    int v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v56 = v11;
      uint64_t v30 = v29;
      uint64_t v54 = swift_slowAlloc();
      v61[0] = v54;
      *(_DWORD *)uint64_t v30 = 136315394;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB590);
      uint64_t v31 = swift_allocObject();
      uint64_t v55 = v19;
      uint64_t v32 = (void *)v31;
      *(_OWORD *)(v31 + 16) = xmmword_24817B010;
      int v53 = v28;
      uint64_t v33 = sub_248174AD0();
      uint64_t v34 = MEMORY[0x263F8E9C0];
      v32[7] = MEMORY[0x263F8E970];
      v32[8] = v34;
      v32[4] = v33;
      uint64_t v35 = sub_248175170();
      uint64_t v60 = sub_247FB6D24(v35, v36, v61);
      sub_248175730();
      swift_bridgeObjectRelease();
      uint64_t v57 = *(void (**)(char *, uint64_t))(v3 + 8);
      v57(v9, v2);
      *(_WORD *)(v30 + 12) = 2080;
      uint64_t v38 = *(void *)(v1 + 40);
      unint64_t v37 = *(void *)(v1 + 48);
      swift_bridgeObjectRetain();
      uint64_t v60 = sub_247FB6D24(v38, v37, v61);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v26, (os_log_type_t)v53, "BEGIN [%s]: %s", (uint8_t *)v30, 0x16u);
      uint64_t v39 = v54;
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v39, -1, -1);
      uint64_t v40 = v30;
      unint64_t v11 = v56;
      MEMORY[0x24C574E00](v40, -1, -1);
    }
    else
    {
      uint64_t v57 = *(void (**)(char *, uint64_t))(v3 + 8);
      v57(v9, v2);

      swift_release_n();
    }
    uint64_t v41 = *(const char **)(v1 + 16);
    char v42 = *(unsigned char *)(v1 + 32);
    uint64_t v43 = sub_248174AF0();
    os_signpost_type_t v44 = sub_248175670();
    if ((sub_2481756E0() & 1) == 0)
    {

      uint64_t v45 = v57;
      v58(v59, v11, v2);
LABEL_24:
      sub_248174B50();
      swift_allocObject();
      *(void *)(v1 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_intervalState) = sub_248174B40();
      swift_release();
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      v45(v11, v2);
      uint64_t v51 = v1 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_startTime;
      *(CFAbsoluteTime *)uint64_t v51 = Current;
      *(unsigned char *)(v51 + 8) = 0;
      return;
    }
    v52[1] = v3;
    if (v42)
    {
      if (!((unint64_t)v41 >> 32))
      {
        if (v41 >> 11 == 27)
        {
LABEL_28:
          __break(1u);
          return;
        }
        if (v41 >> 16 <= 0x10)
        {
          uint64_t v41 = &v62;
LABEL_23:
          uint64_t v47 = v58;
          uint64_t v46 = v59;
          v58(v59, v11, v2);
          uint64_t v48 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v48 = 0;
          os_signpost_id_t v49 = sub_248174AD0();
          _os_signpost_emit_with_name_impl(&dword_247F93000, v43, v44, v49, v41, "", v48, 2u);
          MEMORY[0x24C574E00](v48, -1, -1);

          uint64_t v45 = v57;
          v57(v46, v2);
          v47(v46, v11, v2);
          goto LABEL_24;
        }
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      if (v41) {
        goto LABEL_23;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_27;
  }
  sub_2481135E8((uint64_t)v15);
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_248174B90();
  __swift_project_value_buffer(v21, (uint64_t)qword_26B13B730);
  uint64_t v22 = sub_248174B70();
  os_log_type_t v23 = sub_2481755D0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl(&dword_247F93000, v22, v23, "Could not generate a signpost identifier. Cannot start a sign post.", v24, 2u);
    MEMORY[0x24C574E00](v24, -1, -1);
  }
}

uint64_t sub_248113518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_248113580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2481135E8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_248113648()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_248174B20();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v90 = &v83[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_248174B10();
  Class isa = v5[-1].isa;
  os_log_t v96 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (void (*)(uint64_t, uint64_t))&v83[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB588);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v83[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_248174AE0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  char v94 = &v83[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v83[-v16];
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = &v83[-v19];
  char v21 = *(unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_startTime + 8);
  uint64_t v92 = v22;
  char v93 = v7;
  if (v21)
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v89 = 2960685;
    uint64_t v23 = sub_248174B90();
    __swift_project_value_buffer(v23, (uint64_t)qword_26B13B730);
    uint64_t v24 = sub_248174B70();
    os_log_type_t v25 = sub_2481755D0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v88 = v3;
      uint64_t v27 = v1;
      int v28 = v17;
      uint64_t v29 = v2;
      uint64_t v30 = v11;
      uint64_t v31 = v20;
      uint64_t v32 = v12;
      uint64_t v33 = v26;
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_247F93000, v24, v25, "Could not determine time elapsed for signpost", v26, 2u);
      uint64_t v34 = v33;
      uint64_t v12 = v32;
      uint64_t v20 = v31;
      uint64_t v11 = v30;
      uint64_t v2 = v29;
      uint64_t v17 = v28;
      uint64_t v1 = v27;
      uint64_t v3 = v88;
      MEMORY[0x24C574E00](v34, -1, -1);
    }

    unint64_t v35 = 0xE300000000000000;
  }
  else
  {
    double v36 = *(double *)(v1 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_startTime);
    CFAbsoluteTime v37 = CFAbsoluteTimeGetCurrent() - v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB590);
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = MEMORY[0x263F8D538];
    *(_OWORD *)(v38 + 16) = xmmword_24817B010;
    uint64_t v40 = MEMORY[0x263F8D5B8];
    *(void *)(v38 + 56) = v39;
    *(void *)(v38 + 64) = v40;
    *(CFAbsoluteTime *)(v38 + 32) = v37;
    uint64_t v89 = sub_248175170();
  }
  uint64_t v41 = OBJC_IVAR____TtC12AppleIDSetup8Signpost_intervalState;
  if (*(void *)(v1 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_intervalState))
  {
    unint64_t v91 = v35;
    uint64_t v42 = v1 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_identifier;
    swift_beginAccess();
    sub_248113580(v42, (uint64_t)v10);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      swift_bridgeObjectRelease();
      sub_2481135E8((uint64_t)v10);
      if (qword_26B13B728 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_248174B90();
      __swift_project_value_buffer(v43, (uint64_t)qword_26B13B730);
      os_signpost_type_t v44 = sub_248174B70();
      os_log_type_t v45 = sub_2481755D0();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_247F93000, v44, v45, "We do not have a signpost identifier. Calling an end, but we don't have a beginning.", v46, 2u);
        MEMORY[0x24C574E00](v46, -1, -1);
      }

      return;
    }
    uint64_t v85 = v2;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v20, v10, v11);
    if (qword_2692D4DE0 != -1) {
      swift_once();
    }
    uint64_t v87 = v20;
    uint64_t v88 = v3;
    os_log_t v51 = v96;
    uint64_t v52 = __swift_project_value_buffer((uint64_t)v96, (uint64_t)qword_2692DB558);
    int v53 = v93;
    (*((void (**)(void (*)(uint64_t, uint64_t), uint64_t, os_log_t))isa + 2))(v93, v52, v51);
    if (!*(void *)(v1 + v41))
    {
LABEL_47:
      __break(1u);
      return;
    }
    uint64_t v86 = *(const char **)(v1 + 16);
    char v54 = *(unsigned char *)(v1 + 32);
    swift_retain();
    uint64_t v55 = sub_248174AF0();
    uint64_t v56 = v92;
    sub_248174B30();
    int v84 = sub_248175660();
    if ((sub_2481756E0() & 1) == 0)
    {
      swift_release();

      uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v60(v56, v11);
      (*((void (**)(void, os_log_t))isa + 1))(v53, v96);
LABEL_38:
      uint64_t v64 = v87;
      if (qword_2692D4D80 != -1) {
        swift_once();
      }
      uint64_t v65 = sub_248174B90();
      __swift_project_value_buffer(v65, (uint64_t)qword_2692D6AA8);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v94, v64, v11);
      swift_retain_n();
      unint64_t v66 = v91;
      swift_bridgeObjectRetain();
      uint64_t v67 = v64;
      uint64_t v68 = sub_248174B70();
      os_log_type_t v69 = sub_2481755F0();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = swift_slowAlloc();
        char v93 = v60;
        uint64_t v71 = v70;
        os_log_t v96 = (os_log_t)swift_slowAlloc();
        os_log_t v98 = v96;
        *(_DWORD *)uint64_t v71 = 136315650;
        uint64_t v72 = v94;
        Class isa = (Class)(v71 + 4);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB590);
        uint64_t v73 = v12;
        uint64_t v74 = swift_allocObject();
        *(_OWORD *)(v74 + 16) = xmmword_24817B010;
        uint64_t v75 = sub_248174AD0();
        uint64_t v76 = MEMORY[0x263F8E9C0];
        *(void *)(v74 + 56) = MEMORY[0x263F8E970];
        *(void *)(v74 + 64) = v76;
        *(void *)(v74 + 32) = v75;
        uint64_t v77 = sub_248175170();
        uint64_t v97 = sub_247FB6D24(v77, v78, (uint64_t *)&v98);
        sub_248175730();
        swift_bridgeObjectRelease();
        Class isa = (Class)(v73 + 8);
        id v79 = v93;
        v93((uint64_t)v72, v11);
        *(_WORD *)(v71 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_247FB6D24(v89, v66, (uint64_t *)&v98);
        sub_248175730();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v71 + 22) = 2080;
        uint64_t v80 = *(void *)(v1 + 40);
        unint64_t v81 = *(void *)(v1 + 48);
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_247FB6D24(v80, v81, (uint64_t *)&v98);
        sub_248175730();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_247F93000, v68, v69, "END [%s] %ss: %s", (uint8_t *)v71, 0x20u);
        os_log_t v82 = v96;
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v82, -1, -1);
        MEMORY[0x24C574E00](v71, -1, -1);

        v79((uint64_t)v87, v11);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();

        v60((uint64_t)v94, v11);
        v60((uint64_t)v67, v11);
      }
      return;
    }
    if (v54)
    {
      uint64_t v57 = v85;
      uint64_t v58 = v90;
      if (!((unint64_t)v86 >> 32))
      {
        uint64_t v59 = v88;
        if (v86 >> 11 == 27)
        {
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        if (v86 >> 16 <= 0x10)
        {
          uint64_t v86 = &v99;
          goto LABEL_34;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v57 = v85;
      uint64_t v58 = v90;
      if (v86)
      {
        uint64_t v59 = v88;
LABEL_34:
        swift_retain();
        sub_248174B60();
        swift_release();
        if ((*(unsigned int (**)(unsigned char *, uint64_t))(v59 + 88))(v58, v57) == *MEMORY[0x263F90238])
        {
          uint64_t v61 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(unsigned char *, uint64_t))(v59 + 8))(v58, v57);
          uint64_t v61 = "";
        }
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v17, v56, v11);
        char v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v62 = 0;
        os_signpost_id_t v63 = sub_248174AD0();
        _os_signpost_emit_with_name_impl(&dword_247F93000, v55, (os_signpost_type_t)v84, v63, v86, v61, v62, 2u);
        MEMORY[0x24C574E00](v62, -1, -1);
        swift_release();

        uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
        v60(v56, v11);
        (*((void (**)(void, os_log_t))isa + 1))(v93, v96);
        v60((uint64_t)v17, v11);
        goto LABEL_38;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v47 = sub_248174B90();
  __swift_project_value_buffer(v47, (uint64_t)qword_26B13B730);
  os_log_t v96 = (os_log_t)sub_248174B70();
  os_log_type_t v48 = sub_2481755D0();
  if (os_log_type_enabled(v96, v48))
  {
    os_signpost_id_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_signpost_id_t v49 = 0;
    _os_log_impl(&dword_247F93000, v96, v48, "Could not find non nil interval state, make sure begin() is being called before end().", v49, 2u);
    MEMORY[0x24C574E00](v49, -1, -1);
  }
  os_log_t v50 = v96;
}

uint64_t Signpost.deinit()
{
  swift_bridgeObjectRelease();
  sub_2481135E8(v0 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_identifier);
  swift_release();
  return v0;
}

uint64_t Signpost.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_2481135E8(v0 + OBJC_IVAR____TtC12AppleIDSetup8Signpost_identifier);
  swift_release();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_2481142B8()
{
  return type metadata accessor for Signpost();
}

uint64_t type metadata accessor for Signpost()
{
  uint64_t result = qword_2692DB598;
  if (!qword_2692DB598) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24811430C()
{
  sub_248114438();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for Signpost(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for Signpost);
}

uint64_t dispatch thunk of Signpost.__allocating_init(name:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of Signpost.begin()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of Signpost.end()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

void sub_248114438()
{
  if (!qword_2692DB5A8)
  {
    sub_248174AE0();
    unint64_t v0 = sub_248175700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2692DB5A8);
    }
  }
}

uint64_t RemoteError.domain.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteError.code.getter()
{
  return *(void *)(v0 + 16);
}

AppleIDSetup::RemoteError __swiftcall RemoteError.init(domain:code:)(Swift::String domain, Swift::Int code)
{
  *uint64_t v2 = domain;
  v2[1]._uint64_t countAndFlagsBits = code;
  result.domain = domain;
  result.code = code;
  return result;
}

BOOL static RemoteError.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return v2 == v3;
  }
  char v5 = sub_248175CE0();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t RemoteError.hash(into:)()
{
  return sub_248175E70();
}

uint64_t sub_24811458C(uint64_t a1)
{
  unint64_t v2 = sub_248114778();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2481145C8(uint64_t a1)
{
  unint64_t v2 = sub_248114778();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RemoteError.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB5B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248114778();
  sub_248175F60();
  char v11 = 0;
  uint64_t v7 = v9[1];
  sub_248175BB0();
  if (!v7)
  {
    char v10 = 1;
    sub_248175BD0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_248114778()
{
  unint64_t result = qword_2692DB5B8;
  if (!qword_2692DB5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB5B8);
  }
  return result;
}

uint64_t RemoteError.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t RemoteError.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB5C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248114778();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  char v15 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_248175AE0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_248114A20@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RemoteError.init(from:)(a1, a2);
}

uint64_t sub_248114A38(void *a1)
{
  return RemoteError.encode(to:)(a1);
}

BOOL sub_248114A50(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return v2 == v3;
  }
  char v5 = sub_248175CE0();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_248114AAC()
{
  return sub_248175EC0();
}

uint64_t sub_248114B20()
{
  return sub_248175E70();
}

uint64_t sub_248114B7C()
{
  return sub_248175EC0();
}

AppleIDSetup::RemoteError __swiftcall Error.into()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_248175DF0();
  *uint64_t v1 = v2;
  v1[1] = (uint64_t)v3;
  v1[2] = 0;
  result.code = v4;
  result.domain._object = v3;
  result.domain._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t Result<>.into()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  v20[1] = a4;
  uint64_t v9 = *(void *)(a1 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v10 + 16);
  sub_247FF9E70();
  uint64_t v14 = sub_248175ED0();
  MEMORY[0x270FA5388](v14 - 8);
  char v16 = (char *)v20 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v5, a1);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 32);
  v20[4] = v13;
  v20[5] = v17;
  v20[6] = a2;
  v20[7] = a3;
  v20[8] = v18;
  sub_248114DEC((void (*)(char *))sub_248114DB0, a1, (uint64_t)v16);
  return sub_248174A40();
}

uint64_t sub_248114DB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_248175DF0();
  *a1 = result;
  a1[1] = v3;
  a1[2] = 0;
  return result;
}

uint64_t sub_248114DEC@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v3, v7);
    a1(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_248175ED0();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)(a2 + 16) - 8) + 32))(a3, v3, *(void *)(a2 + 16));
    sub_248175ED0();
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t Result<>.into()(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_248174A40();
}

unint64_t sub_24811508C(void *a1)
{
  a1[1] = sub_247FFA144();
  a1[2] = sub_247FFA014();
  unint64_t result = sub_247FF9F18();
  a1[3] = result;
  return result;
}

void *sub_2481150CC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RemoteError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for RemoteError(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for RemoteError()
{
  return &type metadata for RemoteError;
}

unsigned char *storeEnumTagSinglePayload for RemoteError.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248115278);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteError.CodingKeys()
{
  return &type metadata for RemoteError.CodingKeys;
}

unint64_t sub_2481152B4()
{
  unint64_t result = qword_2692DB5C8;
  if (!qword_2692DB5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB5C8);
  }
  return result;
}

unint64_t sub_24811530C()
{
  unint64_t result = qword_2692DB5D0;
  if (!qword_2692DB5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB5D0);
  }
  return result;
}

unint64_t sub_248115364()
{
  unint64_t result = qword_2692DB5D8;
  if (!qword_2692DB5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB5D8);
  }
  return result;
}

__n128 RepairModel.init(accountID:setupModel:state:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  __n128 v14 = (__n128)a3[1];
  long long v15 = *a3;
  uint64_t v7 = *((void *)a3 + 4);
  char v8 = *((unsigned char *)a3 + 40);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v6;
  long long v9 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a4 + 32) = v9;
  long long v10 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a4 + 48) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a4 + 64) = v10;
  uint64_t v11 = type metadata accessor for RepairModel();
  sub_248118BC0(a2, a4 + *(int *)(v11 + 20));
  uint64_t v12 = a4 + *(int *)(v11 + 24);
  __n128 result = v14;
  *(_OWORD *)uint64_t v12 = v15;
  *(__n128 *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = v7;
  *(unsigned char *)(v12 + 40) = v8;
  return result;
}

uint64_t sub_24811545C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_248120BAC(*a1, *a2);
}

uint64_t sub_248115468()
{
  return sub_248175EC0();
}

uint64_t sub_248115510()
{
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2481155A4()
{
  return sub_248175EC0();
}

uint64_t sub_248115648@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24811E12C();
  *a1 = result;
  return result;
}

void sub_248115678(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000044;
  unint64_t v4 = 0xEA00000000006C65;
  uint64_t v5 = 0x646F4D7075746573;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6574617473;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x49746E756F636361;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2481156DC()
{
  uint64_t v1 = 0x646F4D7075746573;
  if (*v0 != 1) {
    uint64_t v1 = 0x6574617473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x49746E756F636361;
  }
}

uint64_t sub_24811573C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24811E12C();
  *a1 = result;
  return result;
}

uint64_t sub_248115764(uint64_t a1)
{
  unint64_t v2 = sub_248118C38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2481157A0(uint64_t a1)
{
  unint64_t v2 = sub_248118C38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RepairModel.accountID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 RepairModel.accountID.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  __n128 v5 = (__n128)a1[3];
  long long v6 = a1[2];
  uint64_t v2 = *((void *)a1 + 8);
  uint64_t v3 = *((void *)a1 + 9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = v8;
  *(_OWORD *)(v1 + 16) = v7;
  __n128 result = v5;
  *(_OWORD *)(v1 + 32) = v6;
  *(__n128 *)(v1 + 48) = v5;
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  return result;
}

uint64_t (*RepairModel.accountID.modify())()
{
  return nullsub_1;
}

uint64_t RepairModel.setupModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RepairModel();
  return sub_248118D34(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for SetupModel);
}

uint64_t RepairModel.setupModel.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RepairModel() + 20);
  return sub_248001738(a1, v3);
}

uint64_t (*RepairModel.setupModel.modify())(void)
{
  return nullsub_1;
}

uint64_t RepairModel.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for RepairModel() + 24);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  char v9 = *(unsigned char *)(v3 + 40);
  *(unsigned char *)(a1 + 40) = v9;
  return sub_248118C24(v4, v5, v6, v7, v8, v9);
}

__n128 RepairModel.state.setter(long long *a1)
{
  __n128 v6 = (__n128)a1[1];
  long long v7 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  char v3 = *((unsigned char *)a1 + 40);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for RepairModel() + 24);
  sub_2480016BC(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(unsigned char *)(v4 + 40));
  __n128 result = v6;
  *(_OWORD *)uint64_t v4 = v7;
  *(__n128 *)(v4 + 16) = v6;
  *(void *)(v4 + 32) = v2;
  *(unsigned char *)(v4 + 40) = v3;
  return result;
}

uint64_t (*RepairModel.state.modify())(void)
{
  return nullsub_1;
}

uint64_t RepairModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB5E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248118C38();
  sub_248175F60();
  uint64_t v9 = *(void *)(v3 + 8);
  *(void *)&long long v20 = *(void *)v3;
  *((void *)&v20 + 1) = v9;
  long long v10 = *(_OWORD *)(v3 + 32);
  long long v21 = *(_OWORD *)(v3 + 16);
  long long v22 = v10;
  long long v11 = *(_OWORD *)(v3 + 64);
  long long v23 = *(_OWORD *)(v3 + 48);
  long long v24 = v11;
  char v19 = 0;
  sub_24801607C();
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v12 = type metadata accessor for RepairModel();
    LOBYTE(v20) = 1;
    type metadata accessor for SetupModel();
    sub_2481190DC(&qword_2692DB5F0, (void (*)(uint64_t))type metadata accessor for SetupModel);
    sub_248175BE0();
    uint64_t v13 = (long long *)(v3 + *(int *)(v12 + 24));
    uint64_t v14 = *((void *)v13 + 4);
    char v15 = *((unsigned char *)v13 + 40);
    long long v16 = v13[1];
    long long v20 = *v13;
    long long v21 = v16;
    *(void *)&long long v22 = v14;
    BYTE8(v22) = v15;
    char v19 = 2;
    sub_248118C8C();
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RepairModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v4 = type metadata accessor for SetupModel();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB600);
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for RepairModel();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_248118C38();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  uint64_t v14 = (uint64_t)v12;
  uint64_t v26 = v10;
  char v36 = 0;
  sub_248016124();
  uint64_t v15 = v29;
  sub_248175AF0();
  uint64_t v16 = *((void *)&v31 + 1);
  *(void *)uint64_t v14 = v31;
  *(void *)(v14 + 8) = v16;
  long long v17 = v33;
  *(_OWORD *)(v14 + 16) = v32;
  *(_OWORD *)(v14 + 32) = v17;
  long long v18 = v35;
  *(_OWORD *)(v14 + 48) = v34;
  *(_OWORD *)(v14 + 64) = v18;
  LOBYTE(v31) = 1;
  sub_2481190DC(&qword_2692DB608, (void (*)(uint64_t))type metadata accessor for SetupModel);
  sub_248175AF0();
  uint64_t v19 = v26;
  sub_248118BC0((uint64_t)v6, v14 + *(int *)(v26 + 20));
  char v36 = 2;
  sub_248118CE0();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v15);
  uint64_t v20 = v33;
  char v21 = BYTE8(v33);
  uint64_t v22 = v14 + *(int *)(v19 + 24);
  long long v23 = v32;
  *(_OWORD *)uint64_t v22 = v31;
  *(_OWORD *)(v22 + 16) = v23;
  *(void *)(v22 + 32) = v20;
  *(unsigned char *)(v22 + 40) = v21;
  sub_248118D34(v14, v27, (uint64_t (*)(void))type metadata accessor for RepairModel);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_24811C0B4(v14, (uint64_t (*)(void))type metadata accessor for RepairModel);
}

uint64_t RepairModel.update(with:)(uint64_t a1)
{
  sub_24811C0B4(v1, (uint64_t (*)(void))type metadata accessor for RepairModel);
  return sub_248118D34(a1, v1, (uint64_t (*)(void))type metadata accessor for RepairModel);
}

uint64_t RepairModel.hash(into:)(long long *a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for RepairModel();
  SetupModel.hash(into:)(a1);
  switch(*(unsigned char *)(v1 + *(int *)(v3 + 24) + 40))
  {
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      uint64_t result = RepairError.hash(into:)((uint64_t)a1);
      break;
  }
  return result;
}

uint64_t RepairModel.hashValue.getter()
{
  sub_248175E50();
  sub_2481751A0();
  uint64_t v1 = type metadata accessor for RepairModel();
  uint64_t v2 = v0 + *(int *)(v1 + 20);
  sub_248175E70();
  SetupModel.RemoteRole.hash(into:)();
  switch(*(unsigned char *)(v2 + 88))
  {
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)v4);
      break;
  }
  DiscoveryModel.hash(into:)(v4);
  type metadata accessor for SetupModel();
  AuthenticationModel.hash(into:)((uint64_t)v4);
  SignInModel.hash(into:)((uint64_t)v4);
  switch(*(unsigned char *)(v0 + *(int *)(v1 + 24) + 40))
  {
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      RepairError.hash(into:)((uint64_t)v4);
      break;
  }
  return sub_248175EC0();
}

uint64_t sub_248116628@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RepairModel.init(from:)(a1, a2);
}

uint64_t sub_248116640(void *a1)
{
  return RepairModel.encode(to:)(a1);
}

uint64_t sub_248116660(long long *a1, uint64_t a2)
{
  sub_2481751A0();
  uint64_t v5 = v2 + *(int *)(a2 + 20);
  sub_248175E70();
  SetupModel.RemoteRole.hash(into:)();
  switch(*(unsigned char *)(v5 + 88))
  {
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)a1);
      break;
  }
  DiscoveryModel.hash(into:)(a1);
  type metadata accessor for SetupModel();
  AuthenticationModel.hash(into:)((uint64_t)a1);
  SignInModel.hash(into:)((uint64_t)a1);
  switch(*(unsigned char *)(v2 + *(int *)(a2 + 24) + 40))
  {
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      uint64_t result = RepairError.hash(into:)((uint64_t)a1);
      break;
  }
  return result;
}

uint64_t sub_2481168D4(uint64_t a1, uint64_t a2)
{
  sub_248175E50();
  sub_2481751A0();
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  sub_248175E70();
  SetupModel.RemoteRole.hash(into:)();
  switch(*(unsigned char *)(v4 + 88))
  {
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)v6);
      break;
  }
  DiscoveryModel.hash(into:)(v6);
  type metadata accessor for SetupModel();
  AuthenticationModel.hash(into:)((uint64_t)v6);
  SignInModel.hash(into:)((uint64_t)v6);
  switch(*(unsigned char *)(v2 + *(int *)(a2 + 24) + 40))
  {
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      RepairError.hash(into:)((uint64_t)v6);
      break;
  }
  return sub_248175EC0();
}

uint64_t RepairModel.State.hash(into:)(uint64_t a1)
{
  switch(*(unsigned char *)(v1 + 40))
  {
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      uint64_t result = RepairError.hash(into:)(a1);
      break;
  }
  return result;
}

uint64_t sub_248116C54()
{
  uint64_t result = 0x6C616974696E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7075746573;
      break;
    case 2:
      uint64_t result = 0x6E69726961706572;
      break;
    case 3:
      uint64_t result = 0x64656873696E6966;
      break;
    case 4:
      uint64_t result = 0x64656C696166;
      break;
    case 5:
      uint64_t result = 0x7373696D736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248116D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24811E178(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248116D3C(uint64_t a1)
{
  unint64_t v2 = sub_248118D9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248116D78(uint64_t a1)
{
  unint64_t v2 = sub_248118D9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248116DB4(uint64_t a1)
{
  unint64_t v2 = sub_248118DF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248116DF0(uint64_t a1)
{
  unint64_t v2 = sub_248118DF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248116E2C(uint64_t a1)
{
  unint64_t v2 = sub_248118E44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248116E68(uint64_t a1)
{
  unint64_t v2 = sub_248118E44();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248116EA4(uint64_t a1)
{
  unint64_t v2 = sub_248118E98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248116EE0(uint64_t a1)
{
  unint64_t v2 = sub_248118E98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248116F1C(uint64_t a1)
{
  unint64_t v2 = sub_248118F94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248116F58(uint64_t a1)
{
  unint64_t v2 = sub_248118F94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248116F94(uint64_t a1)
{
  unint64_t v2 = sub_248118EEC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248116FD0(uint64_t a1)
{
  unint64_t v2 = sub_248118EEC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24811700C(uint64_t a1)
{
  unint64_t v2 = sub_248118F40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248117048(uint64_t a1)
{
  unint64_t v2 = sub_248118F40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RepairModel.State.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB618);
  uint64_t v53 = *(void *)(v3 - 8);
  uint64_t v54 = v3;
  MEMORY[0x270FA5388](v3);
  os_log_t v51 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB620);
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v52 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB628);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x270FA5388](v7);
  os_log_type_t v48 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB630);
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  os_log_type_t v45 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB638);
  uint64_t v43 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB640);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB648);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  uint64_t v61 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)v1;
  uint64_t v18 = *(void *)(v1 + 8);
  uint64_t v19 = *(void *)(v1 + 16);
  uint64_t v58 = *(void *)(v1 + 24);
  uint64_t v59 = v19;
  uint64_t v57 = *(void *)(v1 + 32);
  int v20 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248118D9C();
  char v21 = v16;
  sub_248175F60();
  switch(v20)
  {
    case 251:
      LOBYTE(v62) = 5;
      sub_248118DF0();
      uint64_t v22 = v51;
      uint64_t v23 = v60;
      sub_248175B50();
      uint64_t v25 = v53;
      uint64_t v24 = v54;
      goto LABEL_5;
    case 252:
      LOBYTE(v62) = 3;
      sub_248118E98();
      uint64_t v22 = v48;
      uint64_t v23 = v60;
      sub_248175B50();
      uint64_t v25 = v49;
      uint64_t v24 = v50;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v21, v23);
    case 253:
      LOBYTE(v62) = 2;
      sub_248118EEC();
      long long v34 = v45;
      uint64_t v23 = v60;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v47);
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v21, v23);
    case 254:
      LOBYTE(v62) = 1;
      sub_248118F40();
      long long v35 = v41;
      uint64_t v36 = v60;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v44);
      goto LABEL_10;
    case 255:
      LOBYTE(v62) = 0;
      sub_248118F94();
      uint64_t v36 = v60;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v42);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v21, v36);
      break;
    default:
      LOBYTE(v62) = 4;
      uint64_t v39 = v17;
      uint64_t v38 = v18;
      uint64_t v26 = v58;
      uint64_t v27 = v59;
      sub_247FE42BC(v17, v18, v59, v58, v57, v20);
      sub_248118E44();
      uint64_t v28 = v52;
      uint64_t v29 = v60;
      sub_248175B50();
      uint64_t v62 = v17;
      uint64_t v30 = v38;
      uint64_t v63 = v38;
      uint64_t v64 = v27;
      uint64_t v65 = v26;
      uint64_t v31 = v57;
      uint64_t v66 = v57;
      char v67 = v20;
      sub_247FE0800();
      uint64_t v32 = v56;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v32);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v29);
      uint64_t result = sub_2480016BC(v39, v30, v59, v58, v31, v20);
      break;
  }
  return result;
}

uint64_t RepairModel.State.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 40);
  sub_248175E50();
  switch(v1)
  {
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      RepairError.hash(into:)((uint64_t)v3);
      break;
  }
  return sub_248175EC0();
}

uint64_t RepairModel.State.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB688);
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v57 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB690);
  uint64_t v52 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v56 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB698);
  uint64_t v48 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v55 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB6A0);
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB6A8);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB6B0);
  uint64_t v42 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB6B8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_248118D9C();
  uint64_t v19 = v63;
  sub_248175F20();
  if (v19) {
    goto LABEL_11;
  }
  uint64_t v41 = v13;
  uint64_t v40 = v11;
  int v20 = v10;
  char v21 = v55;
  uint64_t v22 = v56;
  uint64_t v23 = v57;
  uint64_t v63 = v15;
  uint64_t v24 = sub_248175B30();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v29 = sub_2481758A0();
    swift_allocError();
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v31 = &type metadata for RepairModel.State;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v14);
LABEL_11:
    uint64_t v35 = (uint64_t)v58;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  switch(*(unsigned char *)(v24 + 32))
  {
    case 1:
      LOBYTE(v59) = 1;
      sub_248118F40();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = 0uLL;
      char v28 = -2;
      goto LABEL_13;
    case 2:
      LOBYTE(v59) = 2;
      sub_248118EEC();
      uint64_t v32 = v53;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = 0uLL;
      char v28 = -3;
      goto LABEL_13;
    case 3:
      LOBYTE(v59) = 3;
      sub_248118E98();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = 0uLL;
      char v28 = -4;
      goto LABEL_13;
    case 4:
      LOBYTE(v59) = 4;
      sub_248118E44();
      sub_248175A50();
      sub_247FE0C90();
      uint64_t v33 = v49;
      sub_248175AF0();
      uint64_t v34 = v63;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v22, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v14);
      long long v27 = v59;
      long long v38 = v60;
      uint64_t v26 = v61;
      char v28 = v62;
      goto LABEL_14;
    case 5:
      LOBYTE(v59) = 5;
      sub_248118DF0();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = 0uLL;
      char v28 = -5;
      goto LABEL_13;
    default:
      LOBYTE(v59) = 0;
      sub_248118F94();
      uint64_t v25 = v41;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v40);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = 0uLL;
      char v28 = -1;
LABEL_13:
      long long v38 = 0uLL;
LABEL_14:
      uint64_t v35 = (uint64_t)v58;
      uint64_t v37 = v54;
      *uint64_t v54 = v27;
      v37[1] = v38;
      *((void *)v37 + 4) = v26;
      *((unsigned char *)v37 + 40) = v28;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v35);
}

uint64_t sub_248118234@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return RepairModel.State.init(from:)(a1, a2);
}

uint64_t sub_24811824C(void *a1)
{
  return RepairModel.State.encode(to:)(a1);
}

uint64_t sub_24811826C(uint64_t a1)
{
  switch(*(unsigned char *)(v1 + 40))
  {
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      uint64_t result = RepairError.hash(into:)(a1);
      break;
  }
  return result;
}

uint64_t sub_24811834C()
{
  int v1 = *(unsigned __int8 *)(v0 + 40);
  sub_248175E50();
  switch(v1)
  {
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      RepairError.hash(into:)((uint64_t)v3);
      break;
  }
  return sub_248175EC0();
}

uint64_t RepairModel.description.getter()
{
  return 0;
}

double static RepairModel._defaultModel.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for RepairModel();
  static SetupModel._defaultModel.getter(a1 + *(int *)(v2 + 20));
  *(void *)a1 = 0x20746C7561666544;
  *(void *)(a1 + 8) = 0xEF44495344746C61;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  uint64_t v4 = a1 + *(int *)(v2 + 24);
  *(void *)(v4 + 32) = 0;
  *(_OWORD *)uint64_t v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(unsigned char *)(v4 + 40) = -1;
  return result;
}

uint64_t _s12AppleIDSetup11RepairModelV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  unsigned int v13 = *(unsigned __int8 *)(a2 + 40);
  switch(v7)
  {
    case -5:
      if (v13 != 251) {
        goto LABEL_13;
      }
      uint64_t v14 = *(void *)(a2 + 16);
      uint64_t v15 = *(void *)(a2 + 8);
      sub_2480016BC(*(void *)a1, v3, v5, v4, v6, 251);
      uint64_t v16 = v9;
      uint64_t v17 = v15;
      uint64_t v18 = v14;
      uint64_t v19 = v11;
      uint64_t v20 = v12;
      char v21 = -5;
      goto LABEL_15;
    case -4:
      if (v13 != 252) {
        goto LABEL_13;
      }
      uint64_t v30 = *(void *)(a2 + 16);
      uint64_t v31 = *(void *)(a2 + 8);
      sub_2480016BC(*(void *)a1, v3, v5, v4, v6, 252);
      uint64_t v16 = v9;
      uint64_t v17 = v31;
      uint64_t v18 = v30;
      uint64_t v19 = v11;
      uint64_t v20 = v12;
      char v21 = -4;
      goto LABEL_15;
    case -3:
      if (v13 != 253) {
        goto LABEL_13;
      }
      uint64_t v32 = *(void *)(a2 + 16);
      uint64_t v33 = *(void *)(a2 + 8);
      sub_2480016BC(*(void *)a1, v3, v5, v4, v6, 253);
      uint64_t v16 = v9;
      uint64_t v17 = v33;
      uint64_t v18 = v32;
      uint64_t v19 = v11;
      uint64_t v20 = v12;
      char v21 = -3;
      goto LABEL_15;
    case -2:
      if (v13 != 254) {
        goto LABEL_13;
      }
      uint64_t v34 = *(void *)(a2 + 16);
      uint64_t v35 = *(void *)(a2 + 8);
      sub_2480016BC(*(void *)a1, v3, v5, v4, v6, 254);
      uint64_t v16 = v9;
      uint64_t v17 = v35;
      uint64_t v18 = v34;
      uint64_t v19 = v11;
      uint64_t v20 = v12;
      char v21 = -2;
      goto LABEL_15;
    case -1:
      if (v13 != 255) {
        goto LABEL_13;
      }
      uint64_t v38 = *(void *)(a2 + 16);
      uint64_t v39 = *(void *)(a2 + 8);
      sub_2480016BC(*(void *)a1, v3, v5, v4, v6, 255);
      uint64_t v16 = v9;
      uint64_t v17 = v39;
      uint64_t v18 = v38;
      uint64_t v19 = v11;
      uint64_t v20 = v12;
      char v21 = -1;
LABEL_15:
      sub_2480016BC(v16, v17, v18, v19, v20, v21);
      char v29 = 1;
      break;
    default:
      if (v13 > 0xFA)
      {
LABEL_13:
        char v36 = *(unsigned char *)(a2 + 40);
        uint64_t v43 = *(void *)a2;
        uint64_t v45 = *(void *)(a2 + 8);
        uint64_t v37 = *(void *)(a1 + 32);
        sub_248118C24(*(void *)a2, v45, v10, v11, v12, v13);
        sub_248118C24(v2, v3, v5, v4, v37, v7);
        sub_2480016BC(v2, v3, v5, v4, v37, v7);
        sub_2480016BC(v43, v45, v10, v11, v12, v36);
        char v29 = 0;
      }
      else
      {
        v48[0] = *(void *)a1;
        v48[1] = v3;
        v48[2] = v5;
        v48[3] = v4;
        uint64_t v22 = v6;
        v48[4] = v6;
        char v49 = v7;
        v46[0] = v9;
        v46[1] = v8;
        v46[2] = v10;
        v46[3] = v11;
        uint64_t v41 = v10;
        v46[4] = v12;
        char v47 = v13;
        uint64_t v23 = v10;
        uint64_t v24 = v11;
        uint64_t v25 = v11;
        char v42 = v13;
        uint64_t v26 = v8;
        uint64_t v44 = v8;
        sub_248118C24(v9, v8, v23, v25, v12, v13);
        sub_248118C24(v2, v3, v5, v4, v22, v7);
        uint64_t v27 = v26;
        uint64_t v28 = v24;
        sub_248118C24(v9, v27, v41, v24, v12, v42);
        sub_248118C24(v2, v3, v5, v4, v22, v7);
        char v29 = _s12AppleIDSetup11RepairErrorO2eeoiySbAC_ACtFZ_0((uint64_t)v48, (uint64_t)v46);
        sub_2480016BC(v2, v3, v5, v4, v22, v7);
        sub_2480016BC(v9, v44, v41, v28, v12, v42);
        sub_2480016BC(v9, v44, v41, v28, v12, v42);
        sub_2480016BC(v2, v3, v5, v4, v22, v7);
      }
      break;
  }
  return v29 & 1;
}

uint64_t _s12AppleIDSetup11RepairModelV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *((void *)a1 + 1) == *((void *)a2 + 1);
  if (v4 || (v5 = sub_248175CE0(), char v6 = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = type metadata accessor for RepairModel();
    if (_s12AppleIDSetup10SetupModelV2eeoiySbAC_ACtFZ_0(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)]))
    {
      uint64_t v8 = &a1[*(int *)(v7 + 24)];
      uint64_t v9 = *((void *)v8 + 4);
      char v10 = v8[40];
      long long v11 = *((_OWORD *)v8 + 1);
      v20[0] = *(_OWORD *)v8;
      v20[1] = v11;
      uint64_t v21 = v9;
      char v22 = v10;
      uint64_t v12 = &a2[*(int *)(v7 + 24)];
      uint64_t v13 = *((void *)v12 + 4);
      char v14 = v12[40];
      long long v15 = *((_OWORD *)v12 + 1);
      v17[0] = *(_OWORD *)v12;
      v17[1] = v15;
      uint64_t v18 = v13;
      char v19 = v14;
      char v6 = _s12AppleIDSetup11RepairModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)v20, (uint64_t)v17);
    }
    else
    {
      char v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t type metadata accessor for RepairModel()
{
  uint64_t result = qword_2692DB6E0;
  if (!qword_2692DB6E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_248118BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SetupModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248118C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 <= 0xFAu) {
    return sub_247FE42BC(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

unint64_t sub_248118C38()
{
  unint64_t result = qword_2692DB5E8;
  if (!qword_2692DB5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB5E8);
  }
  return result;
}

unint64_t sub_248118C8C()
{
  unint64_t result = qword_2692DB5F8;
  if (!qword_2692DB5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB5F8);
  }
  return result;
}

unint64_t sub_248118CE0()
{
  unint64_t result = qword_2692DB610;
  if (!qword_2692DB610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB610);
  }
  return result;
}

uint64_t sub_248118D34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_248118D9C()
{
  unint64_t result = qword_2692DB650;
  if (!qword_2692DB650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB650);
  }
  return result;
}

unint64_t sub_248118DF0()
{
  unint64_t result = qword_2692DB658;
  if (!qword_2692DB658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB658);
  }
  return result;
}

unint64_t sub_248118E44()
{
  unint64_t result = qword_2692DB660;
  if (!qword_2692DB660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB660);
  }
  return result;
}

unint64_t sub_248118E98()
{
  unint64_t result = qword_2692DB668;
  if (!qword_2692DB668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB668);
  }
  return result;
}

unint64_t sub_248118EEC()
{
  unint64_t result = qword_2692DB670;
  if (!qword_2692DB670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB670);
  }
  return result;
}

unint64_t sub_248118F40()
{
  unint64_t result = qword_2692DB678;
  if (!qword_2692DB678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB678);
  }
  return result;
}

unint64_t sub_248118F94()
{
  unint64_t result = qword_2692DB680;
  if (!qword_2692DB680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB680);
  }
  return result;
}

uint64_t sub_248118FE8(void *a1)
{
  a1[1] = sub_2481190DC(&qword_2692D6750, (void (*)(uint64_t))type metadata accessor for RepairModel);
  a1[2] = sub_2481190DC(&qword_2692D66B0, (void (*)(uint64_t))type metadata accessor for RepairModel);
  uint64_t result = sub_2481190DC(&qword_2692DB6C0, (void (*)(uint64_t))type metadata accessor for RepairModel);
  a1[3] = result;
  return result;
}

uint64_t sub_248119094()
{
  return sub_2481190DC(&qword_2692DB6C8, (void (*)(uint64_t))type metadata accessor for RepairModel);
}

uint64_t sub_2481190DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_248119124(void *a1)
{
  a1[1] = sub_248118CE0();
  a1[2] = sub_248118C8C();
  unint64_t result = sub_24811915C();
  a1[3] = result;
  return result;
}

unint64_t sub_24811915C()
{
  unint64_t result = qword_2692DB6D0;
  if (!qword_2692DB6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB6D0);
  }
  return result;
}

unint64_t sub_2481191B4()
{
  unint64_t result = qword_2692DB6D8;
  if (!qword_2692DB6D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB6D8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for RepairModel(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    uint64_t v20 = (void *)(v19 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = a2[9];
    a1[8] = a2[8];
    a1[9] = v9;
    uint64_t v10 = *(int *)(a3 + 20);
    v175 = a1;
    long long v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
    uint64_t v13 = *(void **)((char *)a2 + v10 + 8);
    char v14 = *(void **)((char *)a2 + v10 + 16);
    uint64_t v15 = *(unsigned __int16 *)((char *)a2 + v10 + 36);
    uint64_t v197 = *(unsigned int *)((char *)a2 + v10 + 32);
    uint64_t v16 = *(void *)((char *)a2 + v10 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FE4184(v13, v14, v16, v197 | (v15 << 32));
    *((void *)v11 + 1) = v13;
    *((void *)v11 + 2) = v14;
    *((void *)v11 + 3) = v16;
    *((_WORD *)v11 + 18) = v15;
    *((_DWORD *)v11 + 8) = v197;
    unsigned int v17 = v12[88];
    if (v17 <= 0xF9)
    {
      uint64_t v22 = *((void *)v12 + 5);
      uint64_t v21 = *((void *)v12 + 6);
      uint64_t v23 = *((void *)v12 + 7);
      uint64_t v24 = *((void *)v12 + 8);
      uint64_t v25 = *((void *)v12 + 9);
      uint64_t v26 = *((void *)v12 + 10);
      sub_247FA9804(v22, v21, v23, v24, v25, v26, v12[88]);
      *((void *)v11 + 5) = v22;
      *((void *)v11 + 6) = v21;
      *((void *)v11 + 7) = v23;
      *((void *)v11 + 8) = v24;
      *((void *)v11 + 9) = v25;
      *((void *)v11 + 10) = v26;
      v11[88] = v17;
    }
    else
    {
      long long v18 = *(_OWORD *)(v12 + 56);
      *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
      *(_OWORD *)(v11 + 56) = v18;
      *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
      v11[88] = v12[88];
    }
    v11[96] = v12[96];
    v11[97] = v12[97];
    uint64_t v27 = *((void *)v12 + 14);
    *((void *)v11 + 13) = *((void *)v12 + 13);
    *((void *)v11 + 14) = v27;
    uint64_t v28 = *((void *)v12 + 16);
    *((void *)v11 + 15) = *((void *)v12 + 15);
    *((void *)v11 + 16) = v28;
    *((void *)v11 + 17) = *((void *)v12 + 17);
    *((_WORD *)v11 + 72) = *((_WORD *)v12 + 72);
    uint64_t v29 = *((void *)v12 + 20);
    *((void *)v11 + 19) = *((void *)v12 + 19);
    *((void *)v11 + 20) = v29;
    uint64_t v30 = *((void *)v12 + 22);
    uint64_t v198 = *((void *)v12 + 21);
    uint64_t v31 = *((void *)v12 + 23);
    uint64_t v32 = *((void *)v12 + 24);
    uint64_t v33 = *((void *)v12 + 25);
    uint64_t v34 = *((void *)v12 + 26);
    unsigned int v35 = v12[216];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FE41AC(v198, v30, v31, v32, v33, v34, v35);
    *((void *)v11 + 21) = v198;
    *((void *)v11 + 22) = v30;
    *((void *)v11 + 23) = v31;
    *((void *)v11 + 24) = v32;
    *((void *)v11 + 25) = v33;
    *((void *)v11 + 26) = v34;
    v11[216] = v35;
    uint64_t v36 = *((void *)v12 + 29);
    if (v36)
    {
      *((void *)v11 + 28) = *((void *)v12 + 28);
      *((void *)v11 + 29) = v36;
      uint64_t v37 = *((void *)v12 + 31);
      *((void *)v11 + 30) = *((void *)v12 + 30);
      *((void *)v11 + 31) = v37;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v38 = *((_OWORD *)v12 + 15);
      *((_OWORD *)v11 + 14) = *((_OWORD *)v12 + 14);
      *((_OWORD *)v11 + 15) = v38;
    }
    uint64_t v39 = *((void *)v12 + 33);
    *((void *)v11 + 32) = *((void *)v12 + 32);
    *((void *)v11 + 33) = v39;
    uint64_t v40 = *((void *)v12 + 35);
    *((void *)v11 + 34) = *((void *)v12 + 34);
    *((void *)v11 + 35) = v40;
    uint64_t v41 = type metadata accessor for SetupModel();
    uint64_t v42 = *(int *)(v41 + 32);
    uint64_t v43 = &v11[v42];
    uint64_t v44 = &v12[v42];
    uint64_t v45 = (int *)type metadata accessor for IdMSAccount();
    uint64_t v172 = *((void *)v45 - 1);
    uint64_t v46 = *(unsigned int (**)(char *, uint64_t, int *))(v172 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v177 = v46;
    v196 = v45;
    uint64_t v178 = v41;
    v199 = v43;
    if (v46(v44, 1, v45))
    {
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = *((void *)v44 + 1);
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = v48;
      uint64_t v49 = *((void *)v44 + 3);
      *((void *)v43 + 2) = *((void *)v44 + 2);
      *((void *)v43 + 3) = v49;
      uint64_t v50 = *((void *)v44 + 5);
      *((void *)v43 + 4) = *((void *)v44 + 4);
      *((void *)v43 + 5) = v50;
      uint64_t v51 = *((void *)v44 + 7);
      *((void *)v43 + 6) = *((void *)v44 + 6);
      *((void *)v43 + 7) = v51;
      uint64_t v52 = *((void *)v44 + 9);
      *((void *)v199 + 8) = *((void *)v44 + 8);
      *((void *)v199 + 9) = v52;
      uint64_t v53 = v45[5];
      v187 = &v44[v53];
      v192 = &v199[v53];
      uint64_t v54 = sub_248174700();
      v184 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v184(v192, v187, v54);
      uint64_t v55 = v45[6];
      uint64_t v56 = &v199[v55];
      uint64_t v57 = &v44[v55];
      uint64_t v58 = *((void *)v57 + 1);
      uint64_t v185 = *(void *)v57;
      uint64_t v59 = *((void *)v57 + 2);
      uint64_t v60 = *((void *)v57 + 3);
      uint64_t v61 = *((void *)v57 + 4);
      uint64_t v62 = *((void *)v57 + 5);
      uint64_t v180 = *((void *)v57 + 7);
      uint64_t v182 = *((void *)v57 + 6);
      uint64_t v188 = *((void *)v57 + 8);
      LOBYTE(v192) = v57[72];
      sub_247FABF8C(*(void *)v57, v58, v59, v60, v61, v62, v182, v180, v188, (char)v192);
      *(void *)uint64_t v56 = v185;
      *((void *)v56 + 1) = v58;
      *((void *)v56 + 2) = v59;
      *((void *)v56 + 3) = v60;
      *((void *)v56 + 4) = v61;
      *((void *)v56 + 5) = v62;
      uint64_t v43 = v199;
      *((void *)v56 + 6) = v182;
      *((void *)v56 + 7) = v180;
      *((void *)v56 + 8) = v188;
      v56[72] = (char)v192;
      *(void *)&v199[v45[7]] = *(void *)&v44[v45[7]];
      uint64_t v63 = *(void (**)(char *, void, uint64_t, int *))(v172 + 56);
      swift_bridgeObjectRetain();
      v63(v199, 0, 1, v45);
    }
    uint64_t v64 = v44;
    uint64_t v65 = (int *)type metadata accessor for AuthenticationModel();
    uint64_t v66 = v65[5];
    char v67 = &v43[v66];
    uint64_t v68 = &v44[v66];
    uint64_t v69 = *((void *)v68 + 1);
    v176 = v11;
    if (v69)
    {
      *(void *)char v67 = *(void *)v68;
      *((void *)v67 + 1) = v69;
      uint64_t v70 = *((void *)v68 + 3);
      *((void *)v67 + 2) = *((void *)v68 + 2);
      *((void *)v67 + 3) = v70;
      uint64_t v71 = *((void *)v68 + 5);
      *((void *)v67 + 4) = *((void *)v68 + 4);
      *((void *)v67 + 5) = v71;
      uint64_t v72 = *((void *)v68 + 7);
      *((void *)v67 + 6) = *((void *)v68 + 6);
      *((void *)v67 + 7) = v72;
      uint64_t v73 = *((void *)v68 + 9);
      *((void *)v67 + 8) = *((void *)v68 + 8);
      *((void *)v67 + 9) = v73;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v74 = *((_OWORD *)v68 + 3);
      *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
      *((_OWORD *)v67 + 3) = v74;
      *((_OWORD *)v67 + 4) = *((_OWORD *)v68 + 4);
      long long v75 = *((_OWORD *)v68 + 1);
      *(_OWORD *)char v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v75;
    }
    v43[v65[6]] = *((unsigned char *)v64 + v65[6]);
    uint64_t v76 = v65[7];
    uint64_t v77 = &v43[v76];
    unint64_t v78 = (void *)((char *)v64 + v76);
    uint64_t v79 = v78[1];
    *(void *)uint64_t v77 = *v78;
    *((void *)v77 + 1) = v79;
    *(void *)&v43[v65[8]] = *(void *)((char *)v64 + v65[8]);
    v43[v65[9]] = *((unsigned char *)v64 + v65[9]);
    uint64_t v80 = v65[10];
    unint64_t v81 = &v43[v80];
    os_log_t v82 = (char *)v64 + v80;
    uint64_t v83 = (void *)*((void *)v82 + 1);
    v186 = *(void **)v82;
    int v84 = (void *)*((void *)v82 + 2);
    uint64_t v85 = (void *)*((void *)v82 + 5);
    v181 = (void *)*((void *)v82 + 4);
    v183 = (void *)*((void *)v82 + 3);
    v189 = v65;
    v193 = v64;
    uint64_t v86 = *((void *)v82 + 6);
    v179 = (void *)*((void *)v82 + 7);
    uint64_t v87 = (void *)*((void *)v82 + 8);
    uint64_t v88 = (void *)*((void *)v82 + 9);
    char v89 = v82[80];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247F986A0(v186, v83, v84, v183, v181, v85, v86, v179, v87, v88, v89);
    *(void *)unint64_t v81 = v186;
    *((void *)v81 + 1) = v83;
    *((void *)v81 + 2) = v84;
    *((void *)v81 + 3) = v183;
    *((void *)v81 + 4) = v181;
    *((void *)v81 + 5) = v85;
    *((void *)v81 + 6) = v86;
    *((void *)v81 + 7) = v179;
    *((void *)v81 + 8) = v87;
    *((void *)v81 + 9) = v88;
    v81[80] = v89;
    uint64_t v90 = v189[11];
    unint64_t v91 = &v199[v90];
    uint64_t v92 = (void *)((char *)v193 + v90);
    if (*v92)
    {
      uint64_t v93 = v92[1];
      *(void *)unint64_t v91 = *v92;
      *((void *)v91 + 1) = v93;
      swift_retain();
    }
    else
    {
      *(_OWORD *)unint64_t v91 = *(_OWORD *)v92;
    }
    uint64_t v94 = *(int *)(v178 + 36);
    char v95 = &v176[v94];
    os_log_t v96 = &v12[v94];
    if (v177(&v12[v94], 1, v196))
    {
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(v95, v96, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      uint64_t v98 = *((void *)v96 + 1);
      *(void *)char v95 = *(void *)v96;
      *((void *)v95 + 1) = v98;
      uint64_t v99 = *((void *)v96 + 3);
      *((void *)v95 + 2) = *((void *)v96 + 2);
      *((void *)v95 + 3) = v99;
      uint64_t v100 = *((void *)v96 + 5);
      *((void *)v95 + 4) = *((void *)v96 + 4);
      *((void *)v95 + 5) = v100;
      uint64_t v101 = *((void *)v96 + 7);
      *((void *)v95 + 6) = *((void *)v96 + 6);
      *((void *)v95 + 7) = v101;
      uint64_t v102 = *((void *)v96 + 9);
      *((void *)v95 + 8) = *((void *)v96 + 8);
      *((void *)v95 + 9) = v102;
      uint64_t v103 = v196[5];
      v200 = &v95[v103];
      v194 = &v96[v103];
      uint64_t v104 = sub_248174700();
      v190 = *(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v190(v200, v194, v104);
      uint64_t v105 = v196[6];
      char v106 = &v95[v105];
      char v107 = &v96[v105];
      uint64_t v108 = *((void *)v107 + 1);
      uint64_t v109 = *((void *)v107 + 2);
      uint64_t v110 = *((void *)v107 + 3);
      uint64_t v111 = *((void *)v107 + 4);
      uint64_t v112 = *((void *)v107 + 5);
      uint64_t v113 = *((void *)v107 + 6);
      uint64_t v114 = *((void *)v107 + 7);
      uint64_t v191 = *(void *)v107;
      uint64_t v195 = *((void *)v107 + 8);
      LOBYTE(v200) = v107[72];
      sub_247FABF8C(*(void *)v107, v108, v109, v110, v111, v112, v113, v114, v195, (char)v200);
      *(void *)char v106 = v191;
      *((void *)v106 + 1) = v108;
      *((void *)v106 + 2) = v109;
      *((void *)v106 + 3) = v110;
      *((void *)v106 + 4) = v111;
      *((void *)v106 + 5) = v112;
      *((void *)v106 + 6) = v113;
      *((void *)v106 + 7) = v114;
      *((void *)v106 + 8) = v195;
      v106[72] = (char)v200;
      *(void *)&v95[v196[7]] = *(void *)&v96[v196[7]];
      long long v115 = *(void (**)(char *, void, uint64_t, int *))(v172 + 56);
      swift_bridgeObjectRetain();
      v115(v95, 0, 1, v196);
    }
    uint64_t v116 = (int *)type metadata accessor for SignInModel();
    uint64_t v117 = v116[5];
    uint64_t v118 = &v95[v117];
    uint64_t v119 = &v96[v117];
    uint64_t v120 = *((void *)v119 + 1);
    if (v120)
    {
      *(void *)uint64_t v118 = *(void *)v119;
      *((void *)v118 + 1) = v120;
      uint64_t v121 = *((void *)v119 + 3);
      *((void *)v118 + 2) = *((void *)v119 + 2);
      *((void *)v118 + 3) = v121;
      uint64_t v122 = *((void *)v119 + 5);
      *((void *)v118 + 4) = *((void *)v119 + 4);
      *((void *)v118 + 5) = v122;
      uint64_t v123 = *((void *)v119 + 7);
      *((void *)v118 + 6) = *((void *)v119 + 6);
      *((void *)v118 + 7) = v123;
      uint64_t v124 = *((void *)v119 + 9);
      *((void *)v118 + 8) = *((void *)v119 + 8);
      *((void *)v118 + 9) = v124;
      long long v125 = (uint64_t *)(v119 + 80);
      unint64_t v126 = *((void *)v119 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v126 >> 60 == 15)
      {
        *((_OWORD *)v118 + 5) = *(_OWORD *)v125;
      }
      else
      {
        uint64_t v130 = *v125;
        sub_247FB6C20(*v125, v126);
        *((void *)v118 + 10) = v130;
        *((void *)v118 + 11) = v126;
      }
    }
    else
    {
      long long v127 = *((_OWORD *)v119 + 3);
      *((_OWORD *)v118 + 2) = *((_OWORD *)v119 + 2);
      *((_OWORD *)v118 + 3) = v127;
      long long v128 = *((_OWORD *)v119 + 5);
      *((_OWORD *)v118 + 4) = *((_OWORD *)v119 + 4);
      *((_OWORD *)v118 + 5) = v128;
      long long v129 = *((_OWORD *)v119 + 1);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
      *((_OWORD *)v118 + 1) = v129;
    }
    *(void *)&v95[v116[6]] = *(void *)&v96[v116[6]];
    *(void *)&v95[v116[7]] = *(void *)&v96[v116[7]];
    v95[v116[8]] = v96[v116[8]];
    v95[v116[9]] = v96[v116[9]];
    uint64_t v131 = v116[10];
    uint64_t v132 = &v95[v131];
    unint64_t v133 = &v96[v131];
    uint64_t v134 = *(void *)&v96[v131 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v134)
    {
      *(void *)uint64_t v132 = *(void *)v133;
      *((void *)v132 + 1) = v134;
      uint64_t v135 = *((void *)v133 + 2);
      uint64_t v136 = *((void *)v133 + 3);
      *((void *)v132 + 2) = v135;
      *((void *)v132 + 3) = v136;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v137 = *((_OWORD *)v133 + 1);
      *(_OWORD *)uint64_t v132 = *(_OWORD *)v133;
      *((_OWORD *)v132 + 1) = v137;
    }
    uint64_t v138 = v116[11];
    uint64_t v139 = &v95[v138];
    uint64_t v140 = &v96[v138];
    uint64_t v141 = *((void *)v140 + 1);
    *(void *)uint64_t v139 = *(void *)v140;
    *((void *)v139 + 1) = v141;
    uint64_t v142 = v116[12];
    uint64_t v143 = *(void **)&v96[v142];
    *(void *)&v95[v142] = v143;
    uint64_t v144 = v116[13];
    unint64_t v145 = &v95[v144];
    uint64_t v146 = &v96[v144];
    uint64_t v147 = *(void *)v146;
    uint64_t v148 = *((void *)v146 + 1);
    char v149 = v146[16];
    swift_bridgeObjectRetain();
    id v150 = v143;
    sub_247FE42A8(v147, v148, v149);
    *(void *)unint64_t v145 = v147;
    *((void *)v145 + 1) = v148;
    v145[16] = v149;
    uint64_t v151 = v116[14];
    v152 = &v95[v151];
    uint64_t v153 = &v96[v151];
    uint64_t v154 = *((void *)v153 + 1);
    *(void *)v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    v95[v116[15]] = v96[v116[15]];
    uint64_t v155 = v116[16];
    v156 = &v95[v155];
    v157 = &v96[v155];
    unint64_t v158 = *(void *)&v96[v155 + 8];
    swift_bridgeObjectRetain();
    if (v158 >= 3)
    {
      *(void *)v156 = *(void *)v157;
      *((void *)v156 + 1) = v158;
      uint64_t v160 = *((void *)v157 + 3);
      *((void *)v156 + 2) = *((void *)v157 + 2);
      *((void *)v156 + 3) = v160;
      v156[32] = v157[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v159 = *((_OWORD *)v157 + 1);
      *(_OWORD *)v156 = *(_OWORD *)v157;
      *((_OWORD *)v156 + 1) = v159;
      v156[32] = v157[32];
    }
    uint64_t v20 = v175;
    uint64_t v161 = *(int *)(a3 + 24);
    v162 = (char *)v175 + v161;
    v163 = (char *)a2 + v161;
    unsigned int v164 = v163[40];
    if (v164 <= 0xFA)
    {
      uint64_t v166 = *(void *)v163;
      uint64_t v167 = *((void *)v163 + 1);
      uint64_t v168 = *((void *)v163 + 2);
      uint64_t v169 = *((void *)v163 + 3);
      uint64_t v170 = *((void *)v163 + 4);
      sub_247FE42BC(*(void *)v163, v167, v168, v169, v170, v163[40]);
      *(void *)v162 = v166;
      *((void *)v162 + 1) = v167;
      *((void *)v162 + 2) = v168;
      *((void *)v162 + 3) = v169;
      *((void *)v162 + 4) = v170;
      v162[40] = v164;
    }
    else
    {
      long long v165 = *((_OWORD *)v163 + 1);
      *(_OWORD *)v162 = *(_OWORD *)v163;
      *((_OWORD *)v162 + 1) = v165;
      *(_OWORD *)(v162 + 25) = *(_OWORD *)(v163 + 25);
    }
  }
  return v20;
}

unint64_t destroy for RepairModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_247FE51A0(*(void **)(v4 + 8), *(id *)(v4 + 16), *(void *)(v4 + 24), *(unsigned int *)(v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v4 + 36) << 32));
  unsigned int v5 = *(unsigned __int8 *)(v4 + 88);
  if (v5 <= 0xF9) {
    sub_247FA98EC(*(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v4 + 168), *(void *)(v4 + 176), *(void *)(v4 + 184), *(void *)(v4 + 192), *(void *)(v4 + 200), *(void *)(v4 + 208), *(unsigned __int8 *)(v4 + 216));
  if (*(void *)(v4 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SetupModel();
  uint64_t v7 = v4 + *(int *)(v6 + 32);
  uint64_t v8 = type metadata accessor for IdMSAccount();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + *(int *)(v8 + 20);
    uint64_t v11 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = v7 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v7 + v13[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7 + v13[10];
  sub_247F98958(*(void **)v14, *(void **)(v14 + 8), *(void **)(v14 + 16), *(void **)(v14 + 24), *(void *)(v14 + 32), *(void **)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void **)(v14 + 64), *(void **)(v14 + 72), *(unsigned char *)(v14 + 80));
  if (*(void *)(v7 + v13[11])) {
    swift_release();
  }
  uint64_t v15 = v4 + *(int *)(v6 + 36);
  if (!v9(v15, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v15 + *(int *)(v8 + 20);
    uint64_t v17 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t v18 = v15 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(void *)(v18 + 64), *(unsigned char *)(v18 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = (int *)type metadata accessor for SignInModel();
  uint64_t v20 = (void *)(v15 + v19[5]);
  if (v20[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = v20[11];
    if (v21 >> 60 != 15) {
      sub_247FB6CCC(v20[10], v21);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v15 + v19[13]), *(void *)(v15 + v19[13] + 8), *(unsigned char *)(v15 + v19[13] + 16));
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(v15 + v19[16] + 8);
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v23 = a1 + *(int *)(a2 + 24);
  unsigned int v24 = *(unsigned __int8 *)(v23 + 40);
  if (v24 <= 0xFA)
  {
    uint64_t v25 = *(void *)v23;
    uint64_t v26 = *(void *)(v23 + 8);
    uint64_t v27 = *(void *)(v23 + 16);
    uint64_t v28 = *(void *)(v23 + 24);
    uint64_t v29 = *(void *)(v23 + 32);
    return sub_247FE0600(v25, v26, v27, v28, v29, v24);
  }
  return result;
}

void *initializeWithCopy for RepairModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  uint64_t v9 = *(int *)(a3 + 20);
  v171 = a1;
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  uint64_t v12 = *(void **)((char *)a2 + v9 + 8);
  uint64_t v13 = *(void **)((char *)a2 + v9 + 16);
  uint64_t v14 = *(unsigned __int16 *)((char *)a2 + v9 + 36);
  uint64_t v192 = *(unsigned int *)((char *)a2 + v9 + 32);
  uint64_t v15 = *(void *)((char *)a2 + v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE4184(v12, v13, v15, v192 | (v14 << 32));
  *((void *)v10 + 1) = v12;
  *((void *)v10 + 2) = v13;
  *((void *)v10 + 3) = v15;
  *((_WORD *)v10 + 18) = v14;
  *((_DWORD *)v10 + 8) = v192;
  unsigned int v16 = v11[88];
  if (v16 <= 0xF9)
  {
    uint64_t v19 = *((void *)v11 + 5);
    uint64_t v18 = *((void *)v11 + 6);
    uint64_t v20 = *((void *)v11 + 7);
    uint64_t v21 = *((void *)v11 + 8);
    uint64_t v22 = *((void *)v11 + 9);
    uint64_t v23 = *((void *)v11 + 10);
    sub_247FA9804(v19, v18, v20, v21, v22, v23, v11[88]);
    *((void *)v10 + 5) = v19;
    *((void *)v10 + 6) = v18;
    *((void *)v10 + 7) = v20;
    *((void *)v10 + 8) = v21;
    *((void *)v10 + 9) = v22;
    *((void *)v10 + 10) = v23;
    v10[88] = v16;
  }
  else
  {
    long long v17 = *(_OWORD *)(v11 + 56);
    *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
    *(_OWORD *)(v10 + 56) = v17;
    *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    v10[88] = v11[88];
  }
  v10[96] = v11[96];
  v10[97] = v11[97];
  uint64_t v24 = *((void *)v11 + 14);
  *((void *)v10 + 13) = *((void *)v11 + 13);
  *((void *)v10 + 14) = v24;
  uint64_t v25 = *((void *)v11 + 16);
  *((void *)v10 + 15) = *((void *)v11 + 15);
  *((void *)v10 + 16) = v25;
  *((void *)v10 + 17) = *((void *)v11 + 17);
  *((_WORD *)v10 + 72) = *((_WORD *)v11 + 72);
  uint64_t v26 = *((void *)v11 + 20);
  *((void *)v10 + 19) = *((void *)v11 + 19);
  *((void *)v10 + 20) = v26;
  uint64_t v27 = *((void *)v11 + 21);
  uint64_t v193 = *((void *)v11 + 22);
  uint64_t v29 = *((void *)v11 + 23);
  uint64_t v28 = *((void *)v11 + 24);
  uint64_t v30 = *((void *)v11 + 25);
  uint64_t v31 = *((void *)v11 + 26);
  unsigned int v32 = v11[216];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE41AC(v27, v193, v29, v28, v30, v31, v32);
  *((void *)v10 + 21) = v27;
  *((void *)v10 + 22) = v193;
  *((void *)v10 + 23) = v29;
  *((void *)v10 + 24) = v28;
  *((void *)v10 + 25) = v30;
  *((void *)v10 + 26) = v31;
  v10[216] = v32;
  uint64_t v33 = *((void *)v11 + 29);
  if (v33)
  {
    *((void *)v10 + 28) = *((void *)v11 + 28);
    *((void *)v10 + 29) = v33;
    uint64_t v34 = *((void *)v11 + 31);
    *((void *)v10 + 30) = *((void *)v11 + 30);
    *((void *)v10 + 31) = v34;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v35 = *((_OWORD *)v11 + 15);
    *((_OWORD *)v10 + 14) = *((_OWORD *)v11 + 14);
    *((_OWORD *)v10 + 15) = v35;
  }
  uint64_t v36 = *((void *)v11 + 33);
  *((void *)v10 + 32) = *((void *)v11 + 32);
  *((void *)v10 + 33) = v36;
  uint64_t v37 = *((void *)v11 + 35);
  *((void *)v10 + 34) = *((void *)v11 + 34);
  *((void *)v10 + 35) = v37;
  uint64_t v184 = type metadata accessor for SetupModel();
  uint64_t v38 = *(int *)(v184 + 32);
  uint64_t v39 = &v10[v38];
  uint64_t v40 = &v11[v38];
  uint64_t v41 = type metadata accessor for IdMSAccount();
  uint64_t v168 = *(void *)(v41 - 8);
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, int *))(v168 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v183 = v42;
  uint64_t v191 = (int *)v41;
  v194 = v40;
  if (v42(v40, 1, (int *)v41))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v44 = *((void *)v40 + 1);
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = v44;
    uint64_t v45 = *((void *)v40 + 3);
    *((void *)v39 + 2) = *((void *)v40 + 2);
    *((void *)v39 + 3) = v45;
    uint64_t v46 = *((void *)v40 + 5);
    *((void *)v39 + 4) = *((void *)v40 + 4);
    *((void *)v39 + 5) = v46;
    uint64_t v47 = *((void *)v40 + 7);
    *((void *)v39 + 6) = *((void *)v40 + 6);
    *((void *)v39 + 7) = v47;
    uint64_t v48 = *((void *)v40 + 8);
    uint64_t v49 = *((void *)v40 + 9);
    *((void *)v39 + 8) = v48;
    *((void *)v39 + 9) = v49;
    uint64_t v50 = *(int *)(v41 + 20);
    v187 = &v39[v50];
    uint64_t v180 = &v194[v50];
    uint64_t v51 = sub_248174700();
    v177 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v177(v187, v180, v51);
    uint64_t v52 = v191[6];
    uint64_t v53 = &v39[v52];
    uint64_t v54 = &v194[v52];
    uint64_t v55 = *(void *)v54;
    uint64_t v56 = *((void *)v54 + 1);
    uint64_t v58 = *((void *)v54 + 2);
    uint64_t v57 = *((void *)v54 + 3);
    uint64_t v59 = *((void *)v54 + 5);
    uint64_t v60 = *((void *)v54 + 7);
    uint64_t v175 = *((void *)v54 + 6);
    uint64_t v178 = *((void *)v54 + 4);
    uint64_t v181 = *((void *)v54 + 8);
    LOBYTE(v187) = v54[72];
    sub_247FABF8C(*(void *)v54, v56, v58, v57, v178, v59, v175, v60, v181, (char)v187);
    *(void *)uint64_t v53 = v55;
    *((void *)v53 + 1) = v56;
    *((void *)v53 + 2) = v58;
    *((void *)v53 + 3) = v57;
    *((void *)v53 + 4) = v178;
    *((void *)v53 + 5) = v59;
    uint64_t v40 = v194;
    *((void *)v53 + 6) = v175;
    *((void *)v53 + 7) = v60;
    *((void *)v53 + 8) = v181;
    v53[72] = (char)v187;
    *(void *)&v39[v191[7]] = *(void *)&v194[v191[7]];
    uint64_t v61 = *(void (**)(char *, void, uint64_t, int *))(v168 + 56);
    swift_bridgeObjectRetain();
    v61(v39, 0, 1, v191);
  }
  uint64_t v62 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v63 = v62[5];
  uint64_t v64 = &v39[v63];
  uint64_t v65 = &v40[v63];
  uint64_t v66 = *((void *)v65 + 1);
  if (v66)
  {
    *(void *)uint64_t v64 = *(void *)v65;
    *((void *)v64 + 1) = v66;
    uint64_t v67 = *((void *)v65 + 3);
    *((void *)v64 + 2) = *((void *)v65 + 2);
    *((void *)v64 + 3) = v67;
    uint64_t v68 = *((void *)v65 + 5);
    *((void *)v64 + 4) = *((void *)v65 + 4);
    *((void *)v64 + 5) = v68;
    uint64_t v69 = *((void *)v65 + 7);
    *((void *)v64 + 6) = *((void *)v65 + 6);
    *((void *)v64 + 7) = v69;
    uint64_t v70 = *((void *)v65 + 9);
    *((void *)v64 + 8) = *((void *)v65 + 8);
    *((void *)v64 + 9) = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v71 = *((_OWORD *)v65 + 3);
    *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
    *((_OWORD *)v64 + 3) = v71;
    *((_OWORD *)v64 + 4) = *((_OWORD *)v65 + 4);
    long long v72 = *((_OWORD *)v65 + 1);
    *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v72;
  }
  v39[v62[6]] = v40[v62[6]];
  uint64_t v73 = v62[7];
  long long v74 = &v39[v73];
  long long v75 = &v40[v73];
  uint64_t v76 = *((void *)v75 + 1);
  *(void *)long long v74 = *(void *)v75;
  *((void *)v74 + 1) = v76;
  *(void *)&v39[v62[8]] = *(void *)&v40[v62[8]];
  v39[v62[9]] = v40[v62[9]];
  uint64_t v77 = v62[10];
  unint64_t v78 = &v39[v77];
  uint64_t v79 = &v40[v77];
  uint64_t v80 = (void *)*((void *)v79 + 1);
  v176 = *(void **)v79;
  v179 = v62;
  os_log_t v82 = (void *)*((void *)v79 + 2);
  unint64_t v81 = (void *)*((void *)v79 + 3);
  uint64_t v182 = v39;
  v173 = (void *)*((void *)v79 + 4);
  uint64_t v188 = (void *)*((void *)v79 + 5);
  uint64_t v174 = *((void *)v79 + 6);
  uint64_t v83 = (void *)*((void *)v79 + 8);
  uint64_t v172 = (void *)*((void *)v79 + 7);
  int v84 = (void *)*((void *)v79 + 9);
  char v85 = v79[80];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247F986A0(v176, v80, v82, v81, v173, v188, v174, v172, v83, v84, v85);
  *(void *)unint64_t v78 = v176;
  *((void *)v78 + 1) = v80;
  *((void *)v78 + 2) = v82;
  *((void *)v78 + 3) = v81;
  *((void *)v78 + 4) = v173;
  *((void *)v78 + 5) = v188;
  *((void *)v78 + 6) = v174;
  *((void *)v78 + 7) = v172;
  *((void *)v78 + 8) = v83;
  *((void *)v78 + 9) = v84;
  v78[80] = v85;
  uint64_t v86 = v179[11];
  uint64_t v87 = (void *)((char *)v182 + v86);
  uint64_t v88 = &v194[v86];
  if (*(void *)v88)
  {
    uint64_t v89 = *((void *)v88 + 1);
    *uint64_t v87 = *(void *)v88;
    v87[1] = v89;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
  }
  uint64_t v90 = *(int *)(v184 + 36);
  unint64_t v91 = &v10[v90];
  uint64_t v92 = &v11[v90];
  if (v183(v92, 1, v191))
  {
    uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
  }
  else
  {
    uint64_t v94 = *((void *)v92 + 1);
    *(void *)unint64_t v91 = *(void *)v92;
    *((void *)v91 + 1) = v94;
    uint64_t v95 = *((void *)v92 + 3);
    *((void *)v91 + 2) = *((void *)v92 + 2);
    *((void *)v91 + 3) = v95;
    uint64_t v96 = *((void *)v92 + 5);
    *((void *)v91 + 4) = *((void *)v92 + 4);
    *((void *)v91 + 5) = v96;
    uint64_t v97 = *((void *)v92 + 7);
    *((void *)v91 + 6) = *((void *)v92 + 6);
    *((void *)v91 + 7) = v97;
    uint64_t v98 = *((void *)v92 + 9);
    *((void *)v91 + 8) = *((void *)v92 + 8);
    *((void *)v91 + 9) = v98;
    uint64_t v99 = v191[5];
    uint64_t v195 = &v91[v99];
    v189 = &v92[v99];
    uint64_t v100 = sub_248174700();
    uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v185(v195, v189, v100);
    uint64_t v101 = v191[6];
    uint64_t v102 = &v91[v101];
    uint64_t v103 = &v92[v101];
    uint64_t v104 = *((void *)v103 + 1);
    uint64_t v105 = *((void *)v103 + 2);
    uint64_t v106 = *((void *)v103 + 3);
    uint64_t v107 = *((void *)v103 + 4);
    uint64_t v108 = *((void *)v103 + 5);
    uint64_t v109 = *((void *)v103 + 6);
    uint64_t v110 = *((void *)v103 + 7);
    uint64_t v186 = *(void *)v103;
    uint64_t v190 = *((void *)v103 + 8);
    LOBYTE(v195) = v103[72];
    sub_247FABF8C(*(void *)v103, v104, v105, v106, v107, v108, v109, v110, v190, (char)v195);
    *(void *)uint64_t v102 = v186;
    *((void *)v102 + 1) = v104;
    *((void *)v102 + 2) = v105;
    *((void *)v102 + 3) = v106;
    *((void *)v102 + 4) = v107;
    *((void *)v102 + 5) = v108;
    *((void *)v102 + 6) = v109;
    *((void *)v102 + 7) = v110;
    *((void *)v102 + 8) = v190;
    v102[72] = (char)v195;
    *(void *)&v91[v191[7]] = *(void *)&v92[v191[7]];
    uint64_t v111 = *(void (**)(char *, void, uint64_t, int *))(v168 + 56);
    swift_bridgeObjectRetain();
    v111(v91, 0, 1, v191);
  }
  uint64_t v112 = (int *)type metadata accessor for SignInModel();
  uint64_t v113 = v112[5];
  uint64_t v114 = &v91[v113];
  long long v115 = &v92[v113];
  uint64_t v116 = *((void *)v115 + 1);
  if (v116)
  {
    *(void *)uint64_t v114 = *(void *)v115;
    *((void *)v114 + 1) = v116;
    uint64_t v117 = *((void *)v115 + 3);
    *((void *)v114 + 2) = *((void *)v115 + 2);
    *((void *)v114 + 3) = v117;
    uint64_t v118 = *((void *)v115 + 5);
    *((void *)v114 + 4) = *((void *)v115 + 4);
    *((void *)v114 + 5) = v118;
    uint64_t v119 = *((void *)v115 + 7);
    *((void *)v114 + 6) = *((void *)v115 + 6);
    *((void *)v114 + 7) = v119;
    uint64_t v120 = *((void *)v115 + 9);
    *((void *)v114 + 8) = *((void *)v115 + 8);
    *((void *)v114 + 9) = v120;
    uint64_t v121 = (uint64_t *)(v115 + 80);
    unint64_t v122 = *((void *)v115 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v122 >> 60 == 15)
    {
      *((_OWORD *)v114 + 5) = *(_OWORD *)v121;
    }
    else
    {
      uint64_t v126 = *v121;
      sub_247FB6C20(*v121, v122);
      *((void *)v114 + 10) = v126;
      *((void *)v114 + 11) = v122;
    }
  }
  else
  {
    long long v123 = *((_OWORD *)v115 + 3);
    *((_OWORD *)v114 + 2) = *((_OWORD *)v115 + 2);
    *((_OWORD *)v114 + 3) = v123;
    long long v124 = *((_OWORD *)v115 + 5);
    *((_OWORD *)v114 + 4) = *((_OWORD *)v115 + 4);
    *((_OWORD *)v114 + 5) = v124;
    long long v125 = *((_OWORD *)v115 + 1);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *((_OWORD *)v114 + 1) = v125;
  }
  *(void *)&v91[v112[6]] = *(void *)&v92[v112[6]];
  *(void *)&v91[v112[7]] = *(void *)&v92[v112[7]];
  v91[v112[8]] = v92[v112[8]];
  v91[v112[9]] = v92[v112[9]];
  uint64_t v127 = v112[10];
  long long v128 = &v91[v127];
  long long v129 = &v92[v127];
  uint64_t v130 = *(void *)&v92[v127 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v130)
  {
    *(void *)long long v128 = *(void *)v129;
    *((void *)v128 + 1) = v130;
    uint64_t v131 = *((void *)v129 + 2);
    uint64_t v132 = *((void *)v129 + 3);
    *((void *)v128 + 2) = v131;
    *((void *)v128 + 3) = v132;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v133 = *((_OWORD *)v129 + 1);
    *(_OWORD *)long long v128 = *(_OWORD *)v129;
    *((_OWORD *)v128 + 1) = v133;
  }
  uint64_t v134 = v112[11];
  uint64_t v135 = &v91[v134];
  uint64_t v136 = &v92[v134];
  uint64_t v137 = *((void *)v136 + 1);
  *(void *)uint64_t v135 = *(void *)v136;
  *((void *)v135 + 1) = v137;
  uint64_t v138 = v112[12];
  uint64_t v139 = *(void **)&v92[v138];
  *(void *)&v91[v138] = v139;
  uint64_t v140 = v112[13];
  uint64_t v141 = &v91[v140];
  uint64_t v142 = &v92[v140];
  uint64_t v143 = *(void *)v142;
  uint64_t v144 = *((void *)v142 + 1);
  char v145 = v142[16];
  swift_bridgeObjectRetain();
  id v146 = v139;
  sub_247FE42A8(v143, v144, v145);
  *(void *)uint64_t v141 = v143;
  *((void *)v141 + 1) = v144;
  v141[16] = v145;
  uint64_t v147 = v112[14];
  uint64_t v148 = &v91[v147];
  char v149 = &v92[v147];
  uint64_t v150 = *((void *)v149 + 1);
  *(void *)uint64_t v148 = *(void *)v149;
  *((void *)v148 + 1) = v150;
  v91[v112[15]] = v92[v112[15]];
  uint64_t v151 = v112[16];
  v152 = &v91[v151];
  uint64_t v153 = &v92[v151];
  unint64_t v154 = *(void *)&v92[v151 + 8];
  swift_bridgeObjectRetain();
  if (v154 >= 3)
  {
    *(void *)v152 = *(void *)v153;
    *((void *)v152 + 1) = v154;
    uint64_t v156 = *((void *)v153 + 3);
    *((void *)v152 + 2) = *((void *)v153 + 2);
    *((void *)v152 + 3) = v156;
    v152[32] = v153[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v155 = *((_OWORD *)v153 + 1);
    *(_OWORD *)v152 = *(_OWORD *)v153;
    *((_OWORD *)v152 + 1) = v155;
    v152[32] = v153[32];
  }
  uint64_t v157 = *(int *)(a3 + 24);
  unint64_t v158 = (char *)v171 + v157;
  long long v159 = (char *)a2 + v157;
  unsigned int v160 = v159[40];
  if (v160 <= 0xFA)
  {
    uint64_t v162 = *(void *)v159;
    uint64_t v163 = *((void *)v159 + 1);
    uint64_t v164 = *((void *)v159 + 2);
    uint64_t v165 = *((void *)v159 + 3);
    uint64_t v166 = *((void *)v159 + 4);
    sub_247FE42BC(*(void *)v159, v163, v164, v165, v166, v159[40]);
    *(void *)unint64_t v158 = v162;
    *((void *)v158 + 1) = v163;
    *((void *)v158 + 2) = v164;
    *((void *)v158 + 3) = v165;
    *((void *)v158 + 4) = v166;
    v158[40] = v160;
  }
  else
  {
    long long v161 = *((_OWORD *)v159 + 1);
    *(_OWORD *)unint64_t v158 = *(_OWORD *)v159;
    *((_OWORD *)v158 + 1) = v161;
    *(_OWORD *)(v158 + 25) = *(_OWORD *)(v159 + 25);
  }
  return v171;
}

void *assignWithCopy for RepairModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v284 = a3;
  v285 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *((unsigned char *)a1 + v6) = *((unsigned char *)a2 + v6);
  uint64_t v9 = *(void *)((char *)a2 + v6 + 8);
  uint64_t v10 = *(void *)((char *)a2 + v6 + 16);
  uint64_t v11 = *(void *)((char *)a2 + v6 + 24);
  uint64_t v12 = *(unsigned __int16 *)((char *)a2 + v6 + 36);
  uint64_t v13 = *((unsigned int *)v8 + 8);
  sub_247FE4184(*((id *)v8 + 1), *((id *)v8 + 2), *((void *)v8 + 3), v13 | (v12 << 32));
  uint64_t v14 = (void *)*((void *)v7 + 1);
  uint64_t v15 = (void *)*((void *)v7 + 2);
  uint64_t v16 = *((void *)v7 + 3);
  unint64_t v17 = *((unsigned int *)v7 + 8) | ((unint64_t)*((unsigned __int16 *)v7 + 18) << 32);
  *((void *)v7 + 1) = v9;
  *((void *)v7 + 2) = v10;
  *((void *)v7 + 3) = v11;
  *((_DWORD *)v7 + 8) = v13;
  uint64_t v18 = v8;
  *((_WORD *)v7 + 18) = v12;
  sub_247FE51A0(v14, v15, v16, v17);
  uint64_t v19 = v7 + 40;
  uint64_t v20 = (long long *)(v8 + 40);
  unsigned int v21 = v8[88];
  v286 = a1;
  if (v7[88] <= 0xF9u)
  {
    if (v21 <= 0xF9)
    {
      uint64_t v34 = *((void *)v8 + 5);
      uint64_t v35 = *((void *)v8 + 6);
      uint64_t v36 = *((void *)v8 + 7);
      uint64_t v37 = *((void *)v8 + 8);
      uint64_t v38 = *((void *)v18 + 9);
      uint64_t v39 = *((void *)v18 + 10);
      sub_247FA9804(*((void *)v18 + 5), *((void *)v18 + 6), *((void *)v18 + 7), *((void *)v18 + 8), v38, v39, v21);
      uint64_t v40 = *((void *)v7 + 5);
      uint64_t v41 = *((void *)v7 + 6);
      uint64_t v42 = *((void *)v7 + 7);
      uint64_t v43 = *((void *)v7 + 8);
      uint64_t v44 = *((void *)v7 + 9);
      uint64_t v45 = *((void *)v7 + 10);
      *((void *)v7 + 5) = v34;
      *((void *)v7 + 6) = v35;
      *((void *)v7 + 7) = v36;
      *((void *)v7 + 8) = v37;
      *((void *)v7 + 9) = v38;
      *((void *)v7 + 10) = v39;
      char v46 = v7[88];
      v7[88] = v21;
      sub_247FA98EC(v40, v41, v42, v43, v44, v45, v46);
    }
    else
    {
      sub_247FAEE24((uint64_t)(v7 + 40));
      long long v26 = *(_OWORD *)(v8 + 56);
      long long v25 = *(_OWORD *)(v8 + 72);
      long long v27 = *v20;
      v7[88] = v8[88];
      *(_OWORD *)(v7 + 56) = v26;
      *(_OWORD *)(v7 + 72) = v25;
      *uint64_t v19 = v27;
    }
  }
  else if (v21 <= 0xF9)
  {
    uint64_t v28 = *((void *)v8 + 5);
    uint64_t v29 = *((void *)v8 + 6);
    uint64_t v30 = *((void *)v8 + 7);
    uint64_t v31 = *((void *)v8 + 8);
    uint64_t v32 = *((void *)v18 + 9);
    uint64_t v33 = *((void *)v18 + 10);
    sub_247FA9804(*((void *)v18 + 5), *((void *)v18 + 6), *((void *)v18 + 7), *((void *)v18 + 8), v32, v33, v21);
    *((void *)v7 + 5) = v28;
    *((void *)v7 + 6) = v29;
    *((void *)v7 + 7) = v30;
    *((void *)v7 + 8) = v31;
    *((void *)v7 + 9) = v32;
    *((void *)v7 + 10) = v33;
    v7[88] = v21;
  }
  else
  {
    long long v22 = *v20;
    long long v23 = *(_OWORD *)(v8 + 56);
    long long v24 = *(_OWORD *)(v8 + 72);
    v7[88] = v8[88];
    *(_OWORD *)(v7 + 56) = v23;
    *(_OWORD *)(v7 + 72) = v24;
    *uint64_t v19 = v22;
  }
  v7[96] = v18[96];
  v7[97] = v18[97];
  *((void *)v7 + 13) = *((void *)v18 + 13);
  *((void *)v7 + 14) = *((void *)v18 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 15) = *((void *)v18 + 15);
  *((void *)v7 + 16) = *((void *)v18 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = *((void *)v18 + 17);
  v7[144] = v18[144];
  *((void *)v7 + 17) = v47;
  v7[145] = v18[145];
  *((void *)v7 + 19) = *((void *)v18 + 19);
  *((void *)v7 + 20) = *((void *)v18 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = *((void *)v18 + 21);
  uint64_t v49 = *((void *)v18 + 22);
  uint64_t v50 = *((void *)v18 + 23);
  uint64_t v51 = *((void *)v18 + 24);
  uint64_t v52 = *((void *)v18 + 25);
  uint64_t v53 = *((void *)v18 + 26);
  unsigned __int8 v54 = v18[216];
  sub_247FE41AC(v48, v49, v50, v51, v52, v53, v54);
  uint64_t v55 = *((void *)v7 + 21);
  uint64_t v56 = *((void *)v7 + 22);
  uint64_t v57 = *((void *)v7 + 23);
  uint64_t v58 = *((void *)v7 + 24);
  uint64_t v59 = *((void *)v7 + 25);
  uint64_t v60 = *((void *)v7 + 26);
  *((void *)v7 + 21) = v48;
  *((void *)v7 + 22) = v49;
  *((void *)v7 + 23) = v50;
  *((void *)v7 + 24) = v51;
  *((void *)v7 + 25) = v52;
  *((void *)v7 + 26) = v53;
  unsigned int v61 = v7[216];
  v7[216] = v54;
  sub_247FE51C8(v55, v56, v57, v58, v59, v60, v61);
  uint64_t v62 = v7 + 224;
  uint64_t v63 = v18 + 224;
  uint64_t v64 = *((void *)v18 + 29);
  if (*((void *)v7 + 29))
  {
    if (v64)
    {
      *((void *)v7 + 28) = *((void *)v18 + 28);
      *((void *)v7 + 29) = *((void *)v18 + 29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v7 + 30) = *((void *)v18 + 30);
      swift_retain();
      swift_release();
      *((void *)v7 + 31) = *((void *)v18 + 31);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_24800716C((uint64_t)(v7 + 224));
      long long v65 = *((_OWORD *)v18 + 15);
      *uint64_t v62 = *v63;
      *((_OWORD *)v7 + 15) = v65;
    }
  }
  else if (v64)
  {
    *((void *)v7 + 28) = *((void *)v18 + 28);
    *((void *)v7 + 29) = *((void *)v18 + 29);
    *((void *)v7 + 30) = *((void *)v18 + 30);
    *((void *)v7 + 31) = *((void *)v18 + 31);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v66 = *((_OWORD *)v18 + 15);
    *uint64_t v62 = *v63;
    *((_OWORD *)v7 + 15) = v66;
  }
  *((void *)v7 + 32) = *((void *)v18 + 32);
  *((void *)v7 + 33) = *((void *)v18 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v7 + 34) = *((void *)v18 + 34);
  *((void *)v7 + 35) = *((void *)v18 + 35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v298 = type metadata accessor for SetupModel();
  uint64_t v67 = *(int *)(v298 + 32);
  uint64_t v68 = &v7[v67];
  uint64_t v69 = &v18[v67];
  uint64_t v70 = type metadata accessor for IdMSAccount();
  uint64_t v283 = *(void *)(v70 - 8);
  long long v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v283 + 48);
  int v72 = v71(v68, 1, v70);
  v310 = (int *)v70;
  v297 = (uint64_t (*)(char *, uint64_t, int *))v71;
  int v73 = v71(v69, 1, v70);
  v299 = v18;
  v303 = v69;
  v307 = v68;
  if (v72)
  {
    if (!v73)
    {
      *(void *)uint64_t v68 = *(void *)v69;
      *((void *)v68 + 1) = *((void *)v69 + 1);
      *((void *)v68 + 2) = *((void *)v69 + 2);
      *((void *)v68 + 3) = *((void *)v69 + 3);
      *((void *)v68 + 4) = *((void *)v69 + 4);
      *((void *)v68 + 5) = *((void *)v69 + 5);
      *((void *)v68 + 6) = *((void *)v69 + 6);
      *((void *)v68 + 7) = *((void *)v69 + 7);
      *((void *)v68 + 8) = *((void *)v69 + 8);
      *((void *)v68 + 9) = *((void *)v69 + 9);
      uint64_t v74 = *(int *)(v70 + 20);
      v290 = &v69[v74];
      v294 = &v68[v74];
      uint64_t v75 = sub_248174700();
      v288 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v288(v294, v290, v75);
      uint64_t v76 = *(int *)(v70 + 24);
      uint64_t v77 = &v68[v76];
      unint64_t v78 = &v69[v76];
      uint64_t v80 = *(void *)v78;
      uint64_t v79 = *((void *)v78 + 1);
      uint64_t v81 = *((void *)v78 + 2);
      uint64_t v82 = *((void *)v78 + 3);
      uint64_t v83 = *((void *)v78 + 4);
      uint64_t v84 = *((void *)v78 + 5);
      uint64_t v86 = *((void *)v78 + 6);
      uint64_t v85 = *((void *)v78 + 7);
      uint64_t v291 = *((void *)v78 + 8);
      LOBYTE(v294) = v78[72];
      sub_247FABF8C(*(void *)v78, v79, v81, v82, v83, v84, v86, v85, v291, (char)v294);
      *(void *)uint64_t v77 = v80;
      *((void *)v77 + 1) = v79;
      *((void *)v77 + 2) = v81;
      *((void *)v77 + 3) = v82;
      *((void *)v77 + 4) = v83;
      *((void *)v77 + 5) = v84;
      *((void *)v77 + 6) = v86;
      *((void *)v77 + 7) = v85;
      *((void *)v77 + 8) = v291;
      v77[72] = (char)v294;
      uint64_t v69 = v303;
      uint64_t v68 = v307;
      *(void *)&v307[v310[7]] = *(void *)&v303[v310[7]];
      uint64_t v87 = *(void (**)(char *, void, uint64_t, int *))(v283 + 56);
      swift_bridgeObjectRetain();
      v87(v307, 0, 1, v310);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v73)
  {
    sub_24811C0B4((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_20:
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v68, v69, *(void *)(*(void *)(v88 - 8) + 64));
    goto LABEL_21;
  }
  *(void *)uint64_t v68 = *(void *)v69;
  *((void *)v68 + 1) = *((void *)v69 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v68 + 2) = *((void *)v69 + 2);
  *((void *)v68 + 3) = *((void *)v69 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v68 + 4) = *((void *)v69 + 4);
  *((void *)v68 + 5) = *((void *)v69 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v68 + 6) = *((void *)v69 + 6);
  *((void *)v68 + 7) = *((void *)v69 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v68 + 8) = *((void *)v69 + 8);
  *((void *)v68 + 9) = *((void *)v69 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = *(int *)(v70 + 20);
  uint64_t v99 = &v68[v98];
  uint64_t v100 = &v69[v98];
  uint64_t v101 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 24))(v99, v100, v101);
  uint64_t v102 = *(int *)(v70 + 24);
  uint64_t v103 = &v68[v102];
  uint64_t v104 = &v69[v102];
  uint64_t v105 = *(void *)v104;
  uint64_t v106 = *((void *)v104 + 1);
  uint64_t v108 = *((void *)v104 + 2);
  uint64_t v107 = *((void *)v104 + 3);
  uint64_t v110 = *((void *)v104 + 4);
  uint64_t v109 = *((void *)v104 + 5);
  uint64_t v292 = *((void *)v104 + 7);
  uint64_t v295 = *((void *)v104 + 6);
  uint64_t v111 = *((void *)v104 + 8);
  char v112 = v104[72];
  sub_247FABF8C(*(void *)v104, v106, v108, v107, v110, v109, v295, v292, v111, v112);
  uint64_t v113 = *(void *)v103;
  uint64_t v114 = *((void *)v103 + 1);
  uint64_t v115 = *((void *)v103 + 2);
  uint64_t v116 = *((void *)v103 + 3);
  uint64_t v117 = *((void *)v103 + 4);
  uint64_t v118 = *((void *)v103 + 5);
  uint64_t v119 = *((void *)v103 + 6);
  uint64_t v120 = *((void *)v103 + 7);
  uint64_t v121 = *((void *)v103 + 8);
  char v122 = v103[72];
  *(void *)uint64_t v103 = v105;
  *((void *)v103 + 1) = v106;
  *((void *)v103 + 2) = v108;
  *((void *)v103 + 3) = v107;
  *((void *)v103 + 4) = v110;
  *((void *)v103 + 5) = v109;
  *((void *)v103 + 6) = v295;
  *((void *)v103 + 7) = v292;
  *((void *)v103 + 8) = v111;
  v103[72] = v112;
  uint64_t v69 = v303;
  uint64_t v68 = v307;
  sub_247FAC1EC(v113, v114, v115, v116, v117, v118, v119, v120, v121, v122);
  *(void *)&v307[v310[7]] = *(void *)&v303[v310[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v89 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v90 = v89[5];
  unint64_t v91 = &v68[v90];
  uint64_t v92 = &v69[v90];
  uint64_t v93 = *(void *)&v68[v90 + 8];
  uint64_t v94 = *(void *)&v69[v90 + 8];
  if (v93)
  {
    if (v94)
    {
      *(void *)unint64_t v91 = *(void *)v92;
      *((void *)v91 + 1) = *((void *)v92 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v91 + 2) = *((void *)v92 + 2);
      *((void *)v91 + 3) = *((void *)v92 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v91 + 4) = *((void *)v92 + 4);
      *((void *)v91 + 5) = *((void *)v92 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v91 + 6) = *((void *)v92 + 6);
      *((void *)v91 + 7) = *((void *)v92 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v91 + 8) = *((void *)v92 + 8);
      *((void *)v91 + 9) = *((void *)v92 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FACD88((uint64_t)v91);
      *(_OWORD *)unint64_t v91 = *(_OWORD *)v92;
      long long v95 = *((_OWORD *)v92 + 4);
      long long v97 = *((_OWORD *)v92 + 1);
      long long v96 = *((_OWORD *)v92 + 2);
      *((_OWORD *)v91 + 3) = *((_OWORD *)v92 + 3);
      *((_OWORD *)v91 + 4) = v95;
      *((_OWORD *)v91 + 1) = v97;
      *((_OWORD *)v91 + 2) = v96;
    }
  }
  else if (v94)
  {
    *(void *)unint64_t v91 = *(void *)v92;
    *((void *)v91 + 1) = *((void *)v92 + 1);
    *((void *)v91 + 2) = *((void *)v92 + 2);
    *((void *)v91 + 3) = *((void *)v92 + 3);
    *((void *)v91 + 4) = *((void *)v92 + 4);
    *((void *)v91 + 5) = *((void *)v92 + 5);
    *((void *)v91 + 6) = *((void *)v92 + 6);
    *((void *)v91 + 7) = *((void *)v92 + 7);
    *((void *)v91 + 8) = *((void *)v92 + 8);
    *((void *)v91 + 9) = *((void *)v92 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)unint64_t v91 = *(_OWORD *)v92;
    long long v123 = *((_OWORD *)v92 + 1);
    long long v124 = *((_OWORD *)v92 + 2);
    long long v125 = *((_OWORD *)v92 + 4);
    *((_OWORD *)v91 + 3) = *((_OWORD *)v92 + 3);
    *((_OWORD *)v91 + 4) = v125;
    *((_OWORD *)v91 + 1) = v123;
    *((_OWORD *)v91 + 2) = v124;
  }
  v68[v89[6]] = v69[v89[6]];
  uint64_t v126 = v89[7];
  uint64_t v127 = &v68[v126];
  long long v128 = &v69[v126];
  *(void *)uint64_t v127 = *(void *)v128;
  *((void *)v127 + 1) = *((void *)v128 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v68[v89[8]] = *(void *)&v69[v89[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v68[v89[9]] = v69[v89[9]];
  uint64_t v129 = v89[10];
  v296 = v89;
  uint64_t v130 = &v68[v129];
  uint64_t v131 = &v69[v129];
  uint64_t v132 = *(void **)v131;
  long long v133 = (void *)*((void *)v131 + 1);
  uint64_t v134 = (void *)*((void *)v131 + 2);
  uint64_t v135 = (void *)*((void *)v131 + 3);
  uint64_t v136 = (void *)*((void *)v131 + 4);
  uint64_t v137 = (void *)*((void *)v131 + 5);
  uint64_t v139 = *((void *)v131 + 6);
  uint64_t v138 = (void *)*((void *)v131 + 7);
  v287 = (void *)*((void *)v131 + 8);
  v289 = (void *)*((void *)v131 + 9);
  char v293 = v131[80];
  sub_247F986A0(*(void **)v131, v133, v134, v135, v136, v137, v139, v138, v287, v289, v293);
  uint64_t v140 = *(void **)v130;
  uint64_t v141 = (void *)*((void *)v130 + 1);
  uint64_t v142 = (void *)*((void *)v130 + 2);
  uint64_t v143 = (void *)*((void *)v130 + 3);
  uint64_t v144 = *((void *)v130 + 4);
  char v145 = (void *)*((void *)v130 + 5);
  uint64_t v146 = *((void *)v130 + 6);
  uint64_t v147 = *((void *)v130 + 7);
  uint64_t v148 = (void *)*((void *)v130 + 8);
  char v149 = (void *)*((void *)v130 + 9);
  char v150 = v130[80];
  *(void *)uint64_t v130 = v132;
  *((void *)v130 + 1) = v133;
  *((void *)v130 + 2) = v134;
  *((void *)v130 + 3) = v135;
  *((void *)v130 + 4) = v136;
  *((void *)v130 + 5) = v137;
  *((void *)v130 + 6) = v139;
  *((void *)v130 + 7) = v138;
  *((void *)v130 + 8) = v287;
  *((void *)v130 + 9) = v289;
  v130[80] = v293;
  sub_247F98958(v140, v141, v142, v143, v144, v145, v146, v147, v148, v149, v150);
  uint64_t v151 = v296[11];
  v152 = &v307[v151];
  uint64_t v153 = &v303[v151];
  uint64_t v154 = *(void *)&v303[v151];
  if (*(void *)v152)
  {
    if (v154)
    {
      uint64_t v155 = *((void *)v153 + 1);
      *(void *)v152 = v154;
      *((void *)v152 + 1) = v155;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v154)
  {
    uint64_t v156 = *((void *)v153 + 1);
    *(void *)v152 = v154;
    *((void *)v152 + 1) = v156;
    swift_retain();
    goto LABEL_36;
  }
  *(_OWORD *)v152 = *(_OWORD *)v153;
LABEL_36:
  uint64_t v157 = *(int *)(v298 + 36);
  unint64_t v158 = &v7[v157];
  long long v159 = &v299[v157];
  int v160 = v297(&v7[v157], 1, v310);
  int v161 = v297(v159, 1, v310);
  if (v160)
  {
    if (!v161)
    {
      *(void *)unint64_t v158 = *(void *)v159;
      *((void *)v158 + 1) = *((void *)v159 + 1);
      *((void *)v158 + 2) = *((void *)v159 + 2);
      *((void *)v158 + 3) = *((void *)v159 + 3);
      *((void *)v158 + 4) = *((void *)v159 + 4);
      *((void *)v158 + 5) = *((void *)v159 + 5);
      *((void *)v158 + 6) = *((void *)v159 + 6);
      *((void *)v158 + 7) = *((void *)v159 + 7);
      *((void *)v158 + 8) = *((void *)v159 + 8);
      *((void *)v158 + 9) = *((void *)v159 + 9);
      uint64_t v162 = v310[5];
      v304 = &v159[v162];
      v308 = &v158[v162];
      uint64_t v163 = sub_248174700();
      v300 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v300(v308, v304, v163);
      uint64_t v164 = v310[6];
      uint64_t v165 = &v158[v164];
      uint64_t v166 = &v159[v164];
      uint64_t v167 = *((void *)v166 + 1);
      uint64_t v301 = *(void *)v166;
      uint64_t v168 = *((void *)v166 + 2);
      uint64_t v169 = *((void *)v166 + 3);
      uint64_t v170 = *((void *)v166 + 4);
      uint64_t v171 = *((void *)v166 + 5);
      uint64_t v172 = *((void *)v166 + 6);
      uint64_t v173 = *((void *)v166 + 7);
      uint64_t v305 = *((void *)v166 + 8);
      LOBYTE(v308) = v166[72];
      sub_247FABF8C(*(void *)v166, v167, v168, v169, v170, v171, v172, v173, v305, (char)v308);
      *(void *)uint64_t v165 = v301;
      *((void *)v165 + 1) = v167;
      *((void *)v165 + 2) = v168;
      *((void *)v165 + 3) = v169;
      *((void *)v165 + 4) = v170;
      *((void *)v165 + 5) = v171;
      *((void *)v165 + 6) = v172;
      *((void *)v165 + 7) = v173;
      *((void *)v165 + 8) = v305;
      v165[72] = (char)v308;
      *(void *)&v158[v310[7]] = *(void *)&v159[v310[7]];
      uint64_t v174 = *(void (**)(char *, void, uint64_t, int *))(v283 + 56);
      swift_bridgeObjectRetain();
      v174(v158, 0, 1, v310);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v161)
  {
    sub_24811C0B4((uint64_t)v158, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_41:
    uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v158, v159, *(void *)(*(void *)(v175 - 8) + 64));
    goto LABEL_42;
  }
  *(void *)unint64_t v158 = *(void *)v159;
  *((void *)v158 + 1) = *((void *)v159 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v158 + 2) = *((void *)v159 + 2);
  *((void *)v158 + 3) = *((void *)v159 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v158 + 4) = *((void *)v159 + 4);
  *((void *)v158 + 5) = *((void *)v159 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v158 + 6) = *((void *)v159 + 6);
  *((void *)v158 + 7) = *((void *)v159 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v158 + 8) = *((void *)v159 + 8);
  *((void *)v158 + 9) = *((void *)v159 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v191 = v310[5];
  uint64_t v192 = &v158[v191];
  uint64_t v193 = &v159[v191];
  uint64_t v194 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 24))(v192, v193, v194);
  uint64_t v195 = v310[6];
  v196 = &v158[v195];
  uint64_t v197 = &v159[v195];
  uint64_t v198 = *((void *)v197 + 1);
  uint64_t v302 = *(void *)v197;
  uint64_t v199 = *((void *)v197 + 2);
  uint64_t v200 = *((void *)v197 + 3);
  uint64_t v201 = *((void *)v197 + 4);
  uint64_t v202 = *((void *)v197 + 5);
  uint64_t v203 = *((void *)v197 + 6);
  uint64_t v204 = *((void *)v197 + 7);
  uint64_t v306 = *((void *)v197 + 8);
  char v309 = v197[72];
  sub_247FABF8C(*(void *)v197, v198, v199, v200, v201, v202, v203, v204, v306, v309);
  uint64_t v205 = *(void *)v196;
  uint64_t v206 = *((void *)v196 + 1);
  uint64_t v207 = *((void *)v196 + 2);
  uint64_t v208 = *((void *)v196 + 3);
  uint64_t v209 = *((void *)v196 + 4);
  uint64_t v210 = *((void *)v196 + 5);
  uint64_t v211 = *((void *)v196 + 6);
  uint64_t v212 = *((void *)v196 + 7);
  uint64_t v213 = *((void *)v196 + 8);
  char v214 = v196[72];
  *(void *)v196 = v302;
  *((void *)v196 + 1) = v198;
  *((void *)v196 + 2) = v199;
  *((void *)v196 + 3) = v200;
  *((void *)v196 + 4) = v201;
  *((void *)v196 + 5) = v202;
  *((void *)v196 + 6) = v203;
  *((void *)v196 + 7) = v204;
  *((void *)v196 + 8) = v306;
  v196[72] = v309;
  sub_247FAC1EC(v205, v206, v207, v208, v209, v210, v211, v212, v213, v214);
  *(void *)&v158[v310[7]] = *(void *)&v159[v310[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_42:
  v176 = (int *)type metadata accessor for SignInModel();
  uint64_t v177 = v176[5];
  uint64_t v178 = (uint64_t)&v158[v177];
  v179 = &v159[v177];
  uint64_t v180 = *(void *)&v158[v177 + 8];
  uint64_t v181 = *(void *)&v159[v177 + 8];
  if (!v180)
  {
    if (v181)
    {
      *(void *)uint64_t v178 = *(void *)v179;
      *(void *)(v178 + 8) = *((void *)v179 + 1);
      *(void *)(v178 + 16) = *((void *)v179 + 2);
      *(void *)(v178 + 24) = *((void *)v179 + 3);
      *(void *)(v178 + 32) = *((void *)v179 + 4);
      *(void *)(v178 + 40) = *((void *)v179 + 5);
      *(void *)(v178 + 48) = *((void *)v179 + 6);
      *(void *)(v178 + 56) = *((void *)v179 + 7);
      *(void *)(v178 + 64) = *((void *)v179 + 8);
      *(void *)(v178 + 72) = *((void *)v179 + 9);
      v311 = (uint64_t *)(v179 + 80);
      unint64_t v186 = *((void *)v179 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v186 >> 60 == 15)
      {
        *(_OWORD *)(v178 + 80) = *(_OWORD *)v311;
      }
      else
      {
        uint64_t v219 = *v311;
        sub_247FB6C20(*v311, v186);
        *(void *)(v178 + 80) = v219;
        *(void *)(v178 + 88) = v186;
      }
    }
    else
    {
      long long v215 = *((_OWORD *)v179 + 1);
      *(_OWORD *)uint64_t v178 = *(_OWORD *)v179;
      *(_OWORD *)(v178 + 16) = v215;
      long long v216 = *((_OWORD *)v179 + 2);
      long long v217 = *((_OWORD *)v179 + 3);
      long long v218 = *((_OWORD *)v179 + 5);
      *(_OWORD *)(v178 + 64) = *((_OWORD *)v179 + 4);
      *(_OWORD *)(v178 + 80) = v218;
      *(_OWORD *)(v178 + 32) = v216;
      *(_OWORD *)(v178 + 48) = v217;
    }
    goto LABEL_57;
  }
  if (!v181)
  {
    sub_248007274(v178);
    long long v187 = *((_OWORD *)v179 + 1);
    *(_OWORD *)uint64_t v178 = *(_OWORD *)v179;
    *(_OWORD *)(v178 + 16) = v187;
    long long v188 = *((_OWORD *)v179 + 5);
    long long v190 = *((_OWORD *)v179 + 2);
    long long v189 = *((_OWORD *)v179 + 3);
    *(_OWORD *)(v178 + 64) = *((_OWORD *)v179 + 4);
    *(_OWORD *)(v178 + 80) = v188;
    *(_OWORD *)(v178 + 32) = v190;
    *(_OWORD *)(v178 + 48) = v189;
LABEL_57:
    uint64_t v184 = v286;
    goto LABEL_58;
  }
  *(void *)uint64_t v178 = *(void *)v179;
  *(void *)(v178 + 8) = *((void *)v179 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v178 + 16) = *((void *)v179 + 2);
  *(void *)(v178 + 24) = *((void *)v179 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v178 + 32) = *((void *)v179 + 4);
  *(void *)(v178 + 40) = *((void *)v179 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v178 + 48) = *((void *)v179 + 6);
  *(void *)(v178 + 56) = *((void *)v179 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v178 + 64) = *((void *)v179 + 8);
  *(void *)(v178 + 72) = *((void *)v179 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v182 = (uint64_t *)(v179 + 80);
  unint64_t v183 = *((void *)v179 + 11);
  if (*(void *)(v178 + 88) >> 60 == 15)
  {
    uint64_t v184 = v286;
    if (v183 >> 60 != 15)
    {
      uint64_t v185 = *v182;
      sub_247FB6C20(v185, v183);
      *(void *)(v178 + 80) = v185;
      *(void *)(v178 + 88) = v183;
      goto LABEL_58;
    }
    goto LABEL_53;
  }
  uint64_t v184 = v286;
  if (v183 >> 60 == 15)
  {
    sub_248007220(v178 + 80);
LABEL_53:
    *(_OWORD *)(v178 + 80) = *(_OWORD *)v182;
    goto LABEL_58;
  }
  uint64_t v280 = *v182;
  sub_247FB6C20(v280, v183);
  uint64_t v281 = *(void *)(v178 + 80);
  unint64_t v282 = *(void *)(v178 + 88);
  *(void *)(v178 + 80) = v280;
  *(void *)(v178 + 88) = v183;
  sub_247FB6CCC(v281, v282);
LABEL_58:
  *(void *)&v158[v176[6]] = *(void *)&v159[v176[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v158[v176[7]] = *(void *)&v159[v176[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v158[v176[8]] = v159[v176[8]];
  v158[v176[9]] = v159[v176[9]];
  uint64_t v220 = v176[10];
  v221 = &v158[v220];
  v222 = &v159[v220];
  uint64_t v223 = *(void *)&v158[v220 + 8];
  uint64_t v224 = *(void *)&v159[v220 + 8];
  if (v223)
  {
    if (v224)
    {
      *(void *)v221 = *(void *)v222;
      *((void *)v221 + 1) = *((void *)v222 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v221 + 2) = *((void *)v222 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v221 + 3) = *((void *)v222 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FFB0A0((uint64_t)v221);
      long long v225 = *((_OWORD *)v222 + 1);
      *(_OWORD *)v221 = *(_OWORD *)v222;
      *((_OWORD *)v221 + 1) = v225;
    }
  }
  else if (v224)
  {
    *(void *)v221 = *(void *)v222;
    *((void *)v221 + 1) = *((void *)v222 + 1);
    *((void *)v221 + 2) = *((void *)v222 + 2);
    *((void *)v221 + 3) = *((void *)v222 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v226 = *((_OWORD *)v222 + 1);
    *(_OWORD *)v221 = *(_OWORD *)v222;
    *((_OWORD *)v221 + 1) = v226;
  }
  uint64_t v227 = v176[11];
  v228 = &v158[v227];
  v229 = &v159[v227];
  *(void *)v228 = *(void *)v229;
  *((void *)v228 + 1) = *((void *)v229 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v230 = v176[12];
  v231 = *(void **)&v158[v230];
  v232 = *(void **)&v159[v230];
  *(void *)&v158[v230] = v232;
  id v233 = v232;

  uint64_t v234 = v176[13];
  v235 = &v158[v234];
  v236 = &v159[v234];
  uint64_t v237 = *(void *)v236;
  uint64_t v238 = *((void *)v236 + 1);
  char v239 = v236[16];
  sub_247FE42A8(*(void *)v236, v238, v239);
  uint64_t v240 = *(void *)v235;
  uint64_t v241 = *((void *)v235 + 1);
  *(void *)v235 = v237;
  *((void *)v235 + 1) = v238;
  char v242 = v235[16];
  v235[16] = v239;
  sub_247FE52C4(v240, v241, v242);
  uint64_t v243 = v176[14];
  v244 = &v158[v243];
  v245 = &v159[v243];
  *(void *)v244 = *(void *)v245;
  *((void *)v244 + 1) = *((void *)v245 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v158[v176[15]] = v159[v176[15]];
  uint64_t v246 = v176[16];
  uint64_t v247 = (uint64_t)&v158[v246];
  v248 = &v159[v246];
  unint64_t v249 = *(void *)&v158[v246 + 8];
  unint64_t v250 = *(void *)&v159[v246 + 8];
  if (v249 >= 3)
  {
    if (v250 >= 3)
    {
      *(void *)uint64_t v247 = *(void *)v248;
      *(void *)(v247 + 8) = *((void *)v248 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v247 + 16) = *((void *)v248 + 2);
      *(void *)(v247 + 24) = *((void *)v248 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v253 = v248[32];
    }
    else
    {
      sub_24811C114(v247);
      char v253 = v248[32];
      long long v254 = *((_OWORD *)v248 + 1);
      *(_OWORD *)uint64_t v247 = *(_OWORD *)v248;
      *(_OWORD *)(v247 + 16) = v254;
    }
    *(unsigned char *)(v247 + 32) = v253;
  }
  else if (v250 >= 3)
  {
    *(void *)uint64_t v247 = *(void *)v248;
    *(void *)(v247 + 8) = *((void *)v248 + 1);
    *(void *)(v247 + 16) = *((void *)v248 + 2);
    *(void *)(v247 + 24) = *((void *)v248 + 3);
    *(unsigned char *)(v247 + 32) = v248[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v251 = *(_OWORD *)v248;
    long long v252 = *((_OWORD *)v248 + 1);
    *(unsigned char *)(v247 + 32) = v248[32];
    *(_OWORD *)uint64_t v247 = v251;
    *(_OWORD *)(v247 + 16) = v252;
  }
  uint64_t v255 = *(int *)(v284 + 24);
  uint64_t v256 = (uint64_t)v184 + v255;
  v257 = (char *)v285 + v255;
  unsigned int v258 = *((unsigned __int8 *)v285 + v255 + 40);
  if (*((unsigned __int8 *)v184 + v255 + 40) <= 0xFAu)
  {
    if (v258 <= 0xFA)
    {
      uint64_t v268 = *(void *)v257;
      uint64_t v269 = *((void *)v257 + 1);
      uint64_t v270 = *((void *)v257 + 2);
      uint64_t v271 = *((void *)v257 + 3);
      uint64_t v272 = *((void *)v257 + 4);
      sub_247FE42BC(v268, v269, v270, v271, v272, v258);
      uint64_t v273 = *(void *)v256;
      uint64_t v274 = *(void *)(v256 + 8);
      uint64_t v275 = *(void *)(v256 + 16);
      uint64_t v276 = *(void *)(v256 + 24);
      uint64_t v277 = *(void *)(v256 + 32);
      *(void *)uint64_t v256 = v268;
      *(void *)(v256 + 8) = v269;
      *(void *)(v256 + 16) = v270;
      *(void *)(v256 + 24) = v271;
      *(void *)(v256 + 32) = v272;
      char v278 = *(unsigned char *)(v256 + 40);
      *(unsigned char *)(v256 + 40) = v258;
      sub_247FE0600(v273, v274, v275, v276, v277, v278);
    }
    else
    {
      sub_2480072C8(v256);
      long long v261 = *(_OWORD *)(v257 + 25);
      long long v262 = *((_OWORD *)v257 + 1);
      *(_OWORD *)uint64_t v256 = *(_OWORD *)v257;
      *(_OWORD *)(v256 + 16) = v262;
      *(_OWORD *)(v256 + 25) = v261;
    }
  }
  else if (v258 <= 0xFA)
  {
    uint64_t v263 = *(void *)v257;
    uint64_t v264 = *((void *)v257 + 1);
    uint64_t v265 = *((void *)v257 + 2);
    uint64_t v266 = *((void *)v257 + 3);
    uint64_t v267 = *((void *)v257 + 4);
    sub_247FE42BC(v263, v264, v265, v266, v267, v258);
    *(void *)uint64_t v256 = v263;
    *(void *)(v256 + 8) = v264;
    *(void *)(v256 + 16) = v265;
    *(void *)(v256 + 24) = v266;
    *(void *)(v256 + 32) = v267;
    *(unsigned char *)(v256 + 40) = v258;
  }
  else
  {
    long long v259 = *(_OWORD *)v257;
    long long v260 = *((_OWORD *)v257 + 1);
    *(_OWORD *)(v256 + 25) = *(_OWORD *)(v257 + 25);
    *(_OWORD *)uint64_t v256 = v259;
    *(_OWORD *)(v256 + 16) = v260;
  }
  return v184;
}

uint64_t sub_24811C0B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24811C114(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7018);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for RepairModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *uint64_t v9 = *((unsigned char *)a2 + v8);
  *(_OWORD *)(v9 + 22) = *(_OWORD *)((char *)a2 + v8 + 22);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
  long long v11 = *(_OWORD *)((char *)a2 + v8 + 40);
  long long v12 = *(_OWORD *)((char *)a2 + v8 + 56);
  long long v13 = *(_OWORD *)((char *)a2 + v8 + 72);
  v9[88] = *((unsigned char *)a2 + v8 + 88);
  *(_OWORD *)(v9 + 72) = v13;
  *(_OWORD *)(v9 + 56) = v12;
  *(_OWORD *)(v9 + 40) = v11;
  long long v14 = *(_OWORD *)((char *)a2 + v8 + 96);
  long long v15 = *(_OWORD *)((char *)a2 + v8 + 112);
  long long v16 = *(_OWORD *)((char *)a2 + v8 + 144);
  *((_OWORD *)v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 128);
  *((_OWORD *)v9 + 9) = v16;
  *((_OWORD *)v9 + 6) = v14;
  *((_OWORD *)v9 + 7) = v15;
  long long v17 = *(_OWORD *)((char *)a2 + v8 + 160);
  long long v18 = *(_OWORD *)((char *)a2 + v8 + 176);
  long long v19 = *(_OWORD *)((char *)a2 + v8 + 208);
  *((_OWORD *)v9 + 12) = *(_OWORD *)((char *)a2 + v8 + 192);
  *((_OWORD *)v9 + 13) = v19;
  *((_OWORD *)v9 + 10) = v17;
  *((_OWORD *)v9 + 11) = v18;
  long long v20 = *(_OWORD *)((char *)a2 + v8 + 224);
  long long v21 = *(_OWORD *)((char *)a2 + v8 + 240);
  long long v22 = *(_OWORD *)((char *)a2 + v8 + 272);
  *((_OWORD *)v9 + 16) = *(_OWORD *)((char *)a2 + v8 + 256);
  *((_OWORD *)v9 + 17) = v22;
  *((_OWORD *)v9 + 14) = v20;
  *((_OWORD *)v9 + 15) = v21;
  uint64_t v23 = type metadata accessor for SetupModel();
  uint64_t v24 = *(int *)(v23 + 32);
  long long v25 = &v9[v24];
  long long v26 = &v10[v24];
  long long v27 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v102 = *((void *)v27 - 1);
  uint64_t v103 = *(unsigned int (**)(char *, uint64_t, int *))(v102 + 48);
  if (v103(v26, 1, v27))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    long long v29 = *((_OWORD *)v26 + 3);
    *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
    *((_OWORD *)v25 + 3) = v29;
    *((_OWORD *)v25 + 4) = *((_OWORD *)v26 + 4);
    long long v30 = *((_OWORD *)v26 + 1);
    *(_OWORD *)long long v25 = *(_OWORD *)v26;
    *((_OWORD *)v25 + 1) = v30;
    uint64_t v31 = v27[5];
    uint64_t v100 = v23;
    uint64_t v101 = v3;
    uint64_t v32 = &v25[v31];
    uint64_t v33 = v4;
    uint64_t v34 = &v26[v31];
    uint64_t v35 = sub_248174700();
    uint64_t v36 = v32;
    uint64_t v37 = v34;
    uint64_t v4 = v33;
    uint64_t v23 = v100;
    uint64_t v3 = v101;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v36, v37, v35);
    uint64_t v38 = v27[6];
    uint64_t v39 = &v25[v38];
    uint64_t v40 = &v26[v38];
    long long v41 = *((_OWORD *)v40 + 3);
    *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
    *((_OWORD *)v39 + 3) = v41;
    *(_OWORD *)(v39 + 57) = *(_OWORD *)(v40 + 57);
    long long v42 = *((_OWORD *)v40 + 1);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v42;
    *(void *)&v25[v27[7]] = *(void *)&v26[v27[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v102 + 56))(v25, 0, 1, v27);
  }
  uint64_t v43 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v44 = v43[5];
  uint64_t v45 = &v25[v44];
  char v46 = &v26[v44];
  long long v47 = *((_OWORD *)v46 + 3);
  *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  *((_OWORD *)v45 + 3) = v47;
  *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
  long long v48 = *((_OWORD *)v46 + 1);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v48;
  v25[v43[6]] = v26[v43[6]];
  *(_OWORD *)&v25[v43[7]] = *(_OWORD *)&v26[v43[7]];
  *(void *)&v25[v43[8]] = *(void *)&v26[v43[8]];
  v25[v43[9]] = v26[v43[9]];
  uint64_t v49 = v43[10];
  uint64_t v50 = &v25[v49];
  uint64_t v51 = &v26[v49];
  long long v52 = *((_OWORD *)v51 + 1);
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v52;
  v50[80] = v51[80];
  long long v53 = *((_OWORD *)v51 + 4);
  long long v54 = *((_OWORD *)v51 + 2);
  *((_OWORD *)v50 + 3) = *((_OWORD *)v51 + 3);
  *((_OWORD *)v50 + 4) = v53;
  *((_OWORD *)v50 + 2) = v54;
  uint64_t v55 = v43[11];
  uint64_t v56 = &v25[v55];
  uint64_t v57 = &v26[v55];
  uint64_t v58 = *(void *)v57;
  if (*(void *)v57)
  {
    uint64_t v59 = *((void *)v57 + 1);
    *(void *)uint64_t v56 = v58;
    *((void *)v56 + 1) = v59;
  }
  else
  {
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
  }
  uint64_t v60 = *(int *)(v23 + 36);
  unsigned int v61 = &v9[v60];
  uint64_t v62 = &v10[v60];
  if (v103(&v10[v60], 1, v27))
  {
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    long long v64 = *((_OWORD *)v62 + 3);
    *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
    *((_OWORD *)v61 + 3) = v64;
    *((_OWORD *)v61 + 4) = *((_OWORD *)v62 + 4);
    long long v65 = *((_OWORD *)v62 + 1);
    *(_OWORD *)unsigned int v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v65;
    uint64_t v66 = v27[5];
    uint64_t v67 = &v61[v66];
    uint64_t v68 = v3;
    uint64_t v69 = &v62[v66];
    uint64_t v70 = sub_248174700();
    long long v71 = v69;
    uint64_t v3 = v68;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v67, v71, v70);
    uint64_t v72 = v27[6];
    int v73 = &v61[v72];
    uint64_t v74 = &v62[v72];
    long long v75 = *((_OWORD *)v74 + 3);
    *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
    *((_OWORD *)v73 + 3) = v75;
    *(_OWORD *)(v73 + 57) = *(_OWORD *)(v74 + 57);
    long long v76 = *((_OWORD *)v74 + 1);
    *(_OWORD *)int v73 = *(_OWORD *)v74;
    *((_OWORD *)v73 + 1) = v76;
    *(void *)&v61[v27[7]] = *(void *)&v62[v27[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v102 + 56))(v61, 0, 1, v27);
  }
  uint64_t v77 = (int *)type metadata accessor for SignInModel();
  uint64_t v78 = v77[5];
  uint64_t v79 = &v61[v78];
  uint64_t v80 = &v62[v78];
  long long v81 = *((_OWORD *)v80 + 3);
  *((_OWORD *)v79 + 2) = *((_OWORD *)v80 + 2);
  *((_OWORD *)v79 + 3) = v81;
  long long v82 = *((_OWORD *)v80 + 5);
  *((_OWORD *)v79 + 4) = *((_OWORD *)v80 + 4);
  *((_OWORD *)v79 + 5) = v82;
  long long v83 = *((_OWORD *)v80 + 1);
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
  *((_OWORD *)v79 + 1) = v83;
  *(void *)&v61[v77[6]] = *(void *)&v62[v77[6]];
  *(void *)&v61[v77[7]] = *(void *)&v62[v77[7]];
  v61[v77[8]] = v62[v77[8]];
  v61[v77[9]] = v62[v77[9]];
  uint64_t v84 = v77[10];
  uint64_t v85 = &v61[v84];
  uint64_t v86 = &v62[v84];
  long long v87 = *((_OWORD *)v86 + 1);
  *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
  *((_OWORD *)v85 + 1) = v87;
  *(_OWORD *)&v61[v77[11]] = *(_OWORD *)&v62[v77[11]];
  *(void *)&v61[v77[12]] = *(void *)&v62[v77[12]];
  uint64_t v88 = v77[13];
  uint64_t v89 = &v61[v88];
  uint64_t v90 = &v62[v88];
  v89[16] = v90[16];
  *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
  *(_OWORD *)&v61[v77[14]] = *(_OWORD *)&v62[v77[14]];
  v61[v77[15]] = v62[v77[15]];
  uint64_t v91 = v77[16];
  uint64_t v92 = &v61[v91];
  uint64_t v93 = &v62[v91];
  long long v94 = *((_OWORD *)v93 + 1);
  *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
  *((_OWORD *)v92 + 1) = v94;
  v92[32] = v93[32];
  uint64_t v95 = *(int *)(v3 + 24);
  long long v96 = (_OWORD *)((char *)a1 + v95);
  long long v97 = (_OWORD *)((char *)v4 + v95);
  *(_OWORD *)((char *)v96 + 25) = *(_OWORD *)((char *)v97 + 25);
  long long v98 = v97[1];
  *long long v96 = *v97;
  v96[1] = v98;
  return a1;
}

void *assignWithTake for RepairModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v234 = a3;
  v235 = a2;
  uint64_t v11 = *(int *)(a3 + 20);
  long long v12 = (char *)a1 + v11;
  long long v13 = (char *)a2 + v11;
  *long long v12 = *((unsigned char *)a2 + v11);
  uint64_t v14 = *(void *)((char *)a2 + v11 + 24);
  __int16 v15 = *((_WORD *)v13 + 18);
  int v16 = *((_DWORD *)v13 + 8);
  long long v17 = (void *)*((void *)v12 + 1);
  long long v18 = (void *)*((void *)v12 + 2);
  uint64_t v19 = *((void *)v12 + 3);
  unint64_t v20 = *((unsigned int *)v12 + 8) | ((unint64_t)*((unsigned __int16 *)v12 + 18) << 32);
  *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
  *((void *)v12 + 3) = v14;
  *((_DWORD *)v12 + 8) = v16;
  *((_WORD *)v12 + 18) = v15;
  sub_247FE51A0(v17, v18, v19, v20);
  unsigned int v21 = v12[88];
  if (v21 > 0xF9) {
    goto LABEL_4;
  }
  unsigned int v22 = v13[88];
  if (v22 > 0xF9)
  {
    sub_247FAEE24((uint64_t)(v12 + 40));
LABEL_4:
    long long v23 = *(_OWORD *)(v13 + 56);
    *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
    *(_OWORD *)(v12 + 56) = v23;
    *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
    v12[88] = v13[88];
    goto LABEL_6;
  }
  uint64_t v24 = *((void *)v12 + 5);
  uint64_t v25 = *((void *)v12 + 6);
  uint64_t v26 = *((void *)v12 + 7);
  uint64_t v27 = *((void *)v12 + 8);
  uint64_t v28 = *((void *)v12 + 9);
  uint64_t v29 = *((void *)v12 + 10);
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
  *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
  *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
  v12[88] = v22;
  sub_247FA98EC(v24, v25, v26, v27, v28, v29, v21);
LABEL_6:
  v12[96] = v13[96];
  v12[97] = v13[97];
  uint64_t v30 = *((void *)v13 + 14);
  *((void *)v12 + 13) = *((void *)v13 + 13);
  *((void *)v12 + 14) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *((void *)v13 + 16);
  *((void *)v12 + 15) = *((void *)v13 + 15);
  *((void *)v12 + 16) = v31;
  swift_bridgeObjectRelease();
  *((void *)v12 + 17) = *((void *)v13 + 17);
  v12[144] = v13[144];
  v12[145] = v13[145];
  uint64_t v32 = *((void *)v13 + 20);
  *((void *)v12 + 19) = *((void *)v13 + 19);
  *((void *)v12 + 20) = v32;
  swift_bridgeObjectRelease();
  char v33 = v13[216];
  uint64_t v34 = *((void *)v12 + 21);
  uint64_t v35 = *((void *)v12 + 22);
  uint64_t v36 = *((void *)v12 + 23);
  uint64_t v37 = *((void *)v12 + 24);
  uint64_t v38 = *((void *)v12 + 25);
  uint64_t v39 = *((void *)v12 + 26);
  *(_OWORD *)(v12 + 168) = *(_OWORD *)(v13 + 168);
  *(_OWORD *)(v12 + 184) = *(_OWORD *)(v13 + 184);
  *(_OWORD *)(v12 + 200) = *(_OWORD *)(v13 + 200);
  unsigned int v40 = v12[216];
  v12[216] = v33;
  sub_247FE51C8(v34, v35, v36, v37, v38, v39, v40);
  if (*((void *)v12 + 29))
  {
    uint64_t v41 = *((void *)v13 + 29);
    if (v41)
    {
      *((void *)v12 + 28) = *((void *)v13 + 28);
      *((void *)v12 + 29) = v41;
      swift_bridgeObjectRelease();
      *((void *)v12 + 30) = *((void *)v13 + 30);
      swift_release();
      *((void *)v12 + 31) = *((void *)v13 + 31);
      swift_release();
      goto LABEL_11;
    }
    sub_24800716C((uint64_t)(v12 + 224));
  }
  long long v42 = *((_OWORD *)v13 + 15);
  *((_OWORD *)v12 + 14) = *((_OWORD *)v13 + 14);
  *((_OWORD *)v12 + 15) = v42;
LABEL_11:
  uint64_t v43 = *((void *)v13 + 33);
  *((void *)v12 + 32) = *((void *)v13 + 32);
  *((void *)v12 + 33) = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = *((void *)v13 + 35);
  *((void *)v12 + 34) = *((void *)v13 + 34);
  *((void *)v12 + 35) = v44;
  swift_bridgeObjectRelease();
  uint64_t v237 = type metadata accessor for SetupModel();
  uint64_t v45 = *(int *)(v237 + 32);
  char v46 = &v12[v45];
  long long v47 = &v13[v45];
  long long v48 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v49 = *((void *)v48 - 1);
  uint64_t v50 = *(uint64_t (**)(char *, uint64_t, int *))(v49 + 48);
  int v51 = v50(v46, 1, v48);
  v236 = v50;
  int v52 = v50(v47, 1, v48);
  uint64_t v233 = v49;
  if (v51)
  {
    if (!v52)
    {
      long long v53 = *((_OWORD *)v47 + 3);
      *((_OWORD *)v46 + 2) = *((_OWORD *)v47 + 2);
      *((_OWORD *)v46 + 3) = v53;
      *((_OWORD *)v46 + 4) = *((_OWORD *)v47 + 4);
      long long v54 = *((_OWORD *)v47 + 1);
      *(_OWORD *)char v46 = *(_OWORD *)v47;
      *((_OWORD *)v46 + 1) = v54;
      uint64_t v55 = v48[5];
      uint64_t v56 = &v46[v55];
      uint64_t v57 = &v47[v55];
      uint64_t v58 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
      uint64_t v59 = v48[6];
      uint64_t v60 = &v46[v59];
      unsigned int v61 = &v47[v59];
      long long v62 = *((_OWORD *)v61 + 3);
      *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
      *((_OWORD *)v60 + 3) = v62;
      *(_OWORD *)(v60 + 57) = *(_OWORD *)(v61 + 57);
      long long v63 = *((_OWORD *)v61 + 1);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *((_OWORD *)v60 + 1) = v63;
      *(void *)&v46[v48[7]] = *(void *)&v47[v48[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v49 + 56))(v46, 0, 1, v48);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v52)
  {
    sub_24811C0B4((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_16:
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v46, v47, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v180 = *((void *)v47 + 1);
  *(void *)char v46 = *(void *)v47;
  *((void *)v46 + 1) = v180;
  swift_bridgeObjectRelease();
  uint64_t v181 = *((void *)v47 + 3);
  *((void *)v46 + 2) = *((void *)v47 + 2);
  *((void *)v46 + 3) = v181;
  swift_bridgeObjectRelease();
  uint64_t v182 = *((void *)v47 + 5);
  *((void *)v46 + 4) = *((void *)v47 + 4);
  *((void *)v46 + 5) = v182;
  swift_bridgeObjectRelease();
  uint64_t v183 = *((void *)v47 + 7);
  *((void *)v46 + 6) = *((void *)v47 + 6);
  *((void *)v46 + 7) = v183;
  swift_bridgeObjectRelease();
  uint64_t v184 = *((void *)v47 + 9);
  *((void *)v46 + 8) = *((void *)v47 + 8);
  *((void *)v46 + 9) = v184;
  swift_bridgeObjectRelease();
  uint64_t v185 = v48[5];
  unint64_t v186 = &v46[v185];
  long long v187 = &v47[v185];
  uint64_t v188 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 40))(v186, v187, v188);
  uint64_t v189 = v48[6];
  long long v190 = &v46[v189];
  uint64_t v191 = &v47[v189];
  uint64_t v192 = *((void *)v191 + 8);
  char v193 = v191[72];
  uint64_t v194 = *(void *)v190;
  uint64_t v195 = *((void *)v190 + 1);
  uint64_t v196 = *((void *)v190 + 2);
  uint64_t v197 = *((void *)v190 + 3);
  uint64_t v198 = *((void *)v190 + 4);
  uint64_t v199 = *((void *)v190 + 5);
  uint64_t v200 = *((void *)v190 + 6);
  uint64_t v201 = *((void *)v190 + 7);
  uint64_t v202 = *((void *)v190 + 8);
  char v203 = v190[72];
  long long v204 = *((_OWORD *)v191 + 1);
  *(_OWORD *)long long v190 = *(_OWORD *)v191;
  *((_OWORD *)v190 + 1) = v204;
  long long v205 = *((_OWORD *)v191 + 3);
  *((_OWORD *)v190 + 2) = *((_OWORD *)v191 + 2);
  *((_OWORD *)v190 + 3) = v205;
  *((void *)v190 + 8) = v192;
  v190[72] = v193;
  sub_247FAC1EC(v194, v195, v196, v197, v198, v199, v200, v201, v202, v203);
  *(void *)&v46[v48[7]] = *(void *)&v47[v48[7]];
  swift_bridgeObjectRelease();
LABEL_17:
  long long v65 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v66 = v65[5];
  uint64_t v67 = &v46[v66];
  uint64_t v68 = &v47[v66];
  if (*(void *)&v46[v66 + 8])
  {
    uint64_t v69 = *((void *)v68 + 1);
    if (v69)
    {
      *(void *)uint64_t v67 = *(void *)v68;
      *((void *)v67 + 1) = v69;
      swift_bridgeObjectRelease();
      uint64_t v70 = *((void *)v68 + 3);
      *((void *)v67 + 2) = *((void *)v68 + 2);
      *((void *)v67 + 3) = v70;
      swift_bridgeObjectRelease();
      uint64_t v71 = *((void *)v68 + 5);
      *((void *)v67 + 4) = *((void *)v68 + 4);
      *((void *)v67 + 5) = v71;
      swift_bridgeObjectRelease();
      uint64_t v72 = *((void *)v68 + 7);
      *((void *)v67 + 6) = *((void *)v68 + 6);
      *((void *)v67 + 7) = v72;
      swift_bridgeObjectRelease();
      uint64_t v73 = *((void *)v68 + 9);
      *((void *)v67 + 8) = *((void *)v68 + 8);
      *((void *)v67 + 9) = v73;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_247FACD88((uint64_t)v67);
  }
  long long v74 = *((_OWORD *)v68 + 3);
  *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
  *((_OWORD *)v67 + 3) = v74;
  *((_OWORD *)v67 + 4) = *((_OWORD *)v68 + 4);
  long long v75 = *((_OWORD *)v68 + 1);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v75;
LABEL_22:
  v46[v65[6]] = v47[v65[6]];
  uint64_t v76 = v65[7];
  uint64_t v77 = &v46[v76];
  uint64_t v78 = &v47[v76];
  uint64_t v80 = *(void *)v78;
  uint64_t v79 = *((void *)v78 + 1);
  *(void *)uint64_t v77 = v80;
  *((void *)v77 + 1) = v79;
  swift_bridgeObjectRelease();
  *(void *)&v46[v65[8]] = *(void *)&v47[v65[8]];
  swift_bridgeObjectRelease();
  v46[v65[9]] = v47[v65[9]];
  uint64_t v81 = v65[10];
  long long v82 = &v46[v81];
  long long v83 = &v47[v81];
  char v84 = v83[80];
  uint64_t v85 = *(void **)v82;
  uint64_t v86 = (void *)*((void *)v82 + 1);
  long long v87 = (void *)*((void *)v82 + 2);
  uint64_t v88 = (void *)*((void *)v82 + 3);
  uint64_t v89 = *((void *)v82 + 4);
  uint64_t v90 = (void *)*((void *)v82 + 5);
  uint64_t v91 = *((void *)v82 + 6);
  uint64_t v92 = *((void *)v82 + 7);
  uint64_t v93 = (void *)*((void *)v82 + 8);
  long long v94 = (void *)*((void *)v82 + 9);
  char v95 = v82[80];
  long long v96 = *((_OWORD *)v83 + 1);
  *(_OWORD *)long long v82 = *(_OWORD *)v83;
  *((_OWORD *)v82 + 1) = v96;
  long long v97 = *((_OWORD *)v83 + 3);
  *((_OWORD *)v82 + 2) = *((_OWORD *)v83 + 2);
  *((_OWORD *)v82 + 3) = v97;
  *((_OWORD *)v82 + 4) = *((_OWORD *)v83 + 4);
  v82[80] = v84;
  sub_247F98958(v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95);
  uint64_t v98 = v65[11];
  uint64_t v99 = &v46[v98];
  uint64_t v100 = &v47[v98];
  uint64_t v101 = *(void *)&v47[v98];
  if (*(void *)v99)
  {
    if (v101)
    {
      uint64_t v102 = *((void *)v100 + 1);
      *(void *)uint64_t v99 = v101;
      *((void *)v99 + 1) = v102;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v101)
  {
    uint64_t v103 = *((void *)v100 + 1);
    *(void *)uint64_t v99 = v101;
    *((void *)v99 + 1) = v103;
    goto LABEL_29;
  }
  *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
LABEL_29:
  uint64_t v104 = *(int *)(v237 + 36);
  uint64_t v105 = &v12[v104];
  uint64_t v106 = &v13[v104];
  int v107 = v236(&v12[v104], 1, v48);
  int v108 = v236(v106, 1, v48);
  if (v107)
  {
    if (!v108)
    {
      long long v109 = *((_OWORD *)v106 + 3);
      *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
      *((_OWORD *)v105 + 3) = v109;
      *((_OWORD *)v105 + 4) = *((_OWORD *)v106 + 4);
      long long v110 = *((_OWORD *)v106 + 1);
      *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
      *((_OWORD *)v105 + 1) = v110;
      uint64_t v111 = v48[5];
      char v112 = &v105[v111];
      uint64_t v113 = &v106[v111];
      uint64_t v114 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
      uint64_t v115 = v48[6];
      uint64_t v116 = &v105[v115];
      uint64_t v117 = &v106[v115];
      long long v118 = *((_OWORD *)v117 + 3);
      *((_OWORD *)v116 + 2) = *((_OWORD *)v117 + 2);
      *((_OWORD *)v116 + 3) = v118;
      *(_OWORD *)(v116 + 57) = *(_OWORD *)(v117 + 57);
      long long v119 = *((_OWORD *)v117 + 1);
      *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
      *((_OWORD *)v116 + 1) = v119;
      *(void *)&v105[v48[7]] = *(void *)&v106[v48[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v233 + 56))(v105, 0, 1, v48);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v108)
  {
    sub_24811C0B4((uint64_t)v105, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_34:
    uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v105, v106, *(void *)(*(void *)(v120 - 8) + 64));
    goto LABEL_35;
  }
  uint64_t v206 = *((void *)v106 + 1);
  *(void *)uint64_t v105 = *(void *)v106;
  *((void *)v105 + 1) = v206;
  swift_bridgeObjectRelease();
  uint64_t v207 = *((void *)v106 + 3);
  *((void *)v105 + 2) = *((void *)v106 + 2);
  *((void *)v105 + 3) = v207;
  swift_bridgeObjectRelease();
  uint64_t v208 = *((void *)v106 + 5);
  *((void *)v105 + 4) = *((void *)v106 + 4);
  *((void *)v105 + 5) = v208;
  swift_bridgeObjectRelease();
  uint64_t v209 = *((void *)v106 + 7);
  *((void *)v105 + 6) = *((void *)v106 + 6);
  *((void *)v105 + 7) = v209;
  swift_bridgeObjectRelease();
  uint64_t v210 = *((void *)v106 + 9);
  *((void *)v105 + 8) = *((void *)v106 + 8);
  *((void *)v105 + 9) = v210;
  swift_bridgeObjectRelease();
  uint64_t v211 = v48[5];
  uint64_t v212 = &v105[v211];
  uint64_t v213 = &v106[v211];
  uint64_t v214 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 40))(v212, v213, v214);
  uint64_t v215 = v48[6];
  long long v216 = &v105[v215];
  long long v217 = &v106[v215];
  uint64_t v218 = *((void *)v217 + 8);
  char v219 = v217[72];
  uint64_t v220 = *(void *)v216;
  uint64_t v221 = *((void *)v216 + 1);
  uint64_t v222 = *((void *)v216 + 2);
  uint64_t v223 = *((void *)v216 + 3);
  uint64_t v224 = *((void *)v216 + 4);
  uint64_t v225 = *((void *)v216 + 5);
  uint64_t v226 = *((void *)v216 + 6);
  uint64_t v227 = *((void *)v216 + 7);
  uint64_t v228 = *((void *)v216 + 8);
  char v229 = v216[72];
  long long v230 = *((_OWORD *)v217 + 1);
  *(_OWORD *)long long v216 = *(_OWORD *)v217;
  *((_OWORD *)v216 + 1) = v230;
  long long v231 = *((_OWORD *)v217 + 3);
  *((_OWORD *)v216 + 2) = *((_OWORD *)v217 + 2);
  *((_OWORD *)v216 + 3) = v231;
  *((void *)v216 + 8) = v218;
  v216[72] = v219;
  sub_247FAC1EC(v220, v221, v222, v223, v224, v225, v226, v227, v228, v229);
  *(void *)&v105[v48[7]] = *(void *)&v106[v48[7]];
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v121 = (int *)type metadata accessor for SignInModel();
  uint64_t v122 = v121[5];
  uint64_t v123 = (uint64_t)&v105[v122];
  long long v124 = &v106[v122];
  if (!*(void *)&v105[v122 + 8])
  {
LABEL_42:
    long long v133 = *((_OWORD *)v124 + 3);
    *(_OWORD *)(v123 + 32) = *((_OWORD *)v124 + 2);
    *(_OWORD *)(v123 + 48) = v133;
    long long v134 = *((_OWORD *)v124 + 5);
    *(_OWORD *)(v123 + 64) = *((_OWORD *)v124 + 4);
    *(_OWORD *)(v123 + 80) = v134;
    long long v135 = *((_OWORD *)v124 + 1);
    *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
    *(_OWORD *)(v123 + 16) = v135;
    goto LABEL_43;
  }
  uint64_t v125 = *((void *)v124 + 1);
  if (!v125)
  {
    sub_248007274(v123);
    goto LABEL_42;
  }
  *(void *)uint64_t v123 = *(void *)v124;
  *(void *)(v123 + 8) = v125;
  swift_bridgeObjectRelease();
  uint64_t v126 = *((void *)v124 + 3);
  *(void *)(v123 + 16) = *((void *)v124 + 2);
  *(void *)(v123 + 24) = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = *((void *)v124 + 5);
  *(void *)(v123 + 32) = *((void *)v124 + 4);
  *(void *)(v123 + 40) = v127;
  swift_bridgeObjectRelease();
  uint64_t v128 = *((void *)v124 + 7);
  *(void *)(v123 + 48) = *((void *)v124 + 6);
  *(void *)(v123 + 56) = v128;
  swift_bridgeObjectRelease();
  uint64_t v129 = *((void *)v124 + 9);
  *(void *)(v123 + 64) = *((void *)v124 + 8);
  *(void *)(v123 + 72) = v129;
  swift_bridgeObjectRelease();
  uint64_t v130 = v124 + 80;
  unint64_t v131 = *(void *)(v123 + 88);
  if (v131 >> 60 == 15)
  {
LABEL_40:
    *(_OWORD *)(v123 + 80) = *v130;
    goto LABEL_43;
  }
  unint64_t v132 = *((void *)v124 + 11);
  if (v132 >> 60 == 15)
  {
    sub_248007220(v123 + 80);
    goto LABEL_40;
  }
  uint64_t v232 = *(void *)(v123 + 80);
  *(void *)(v123 + 80) = *(void *)v130;
  *(void *)(v123 + 88) = v132;
  sub_247FB6CCC(v232, v131);
LABEL_43:
  *(void *)&v105[v121[6]] = *(void *)&v106[v121[6]];
  swift_bridgeObjectRelease();
  *(void *)&v105[v121[7]] = *(void *)&v106[v121[7]];
  swift_bridgeObjectRelease();
  v105[v121[8]] = v106[v121[8]];
  v105[v121[9]] = v106[v121[9]];
  uint64_t v136 = v121[10];
  uint64_t v137 = &v105[v136];
  uint64_t v138 = &v106[v136];
  if (*(void *)&v105[v136 + 8])
  {
    uint64_t v139 = *((void *)v138 + 1);
    if (v139)
    {
      *(void *)uint64_t v137 = *(void *)v138;
      *((void *)v137 + 1) = v139;
      swift_bridgeObjectRelease();
      *((void *)v137 + 2) = *((void *)v138 + 2);
      swift_bridgeObjectRelease();
      *((void *)v137 + 3) = *((void *)v138 + 3);
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    sub_247FFB0A0((uint64_t)v137);
  }
  long long v140 = *((_OWORD *)v138 + 1);
  *(_OWORD *)uint64_t v137 = *(_OWORD *)v138;
  *((_OWORD *)v137 + 1) = v140;
LABEL_48:
  uint64_t v141 = v121[11];
  uint64_t v142 = &v105[v141];
  uint64_t v143 = &v106[v141];
  uint64_t v145 = *(void *)v143;
  uint64_t v144 = *((void *)v143 + 1);
  *(void *)uint64_t v142 = v145;
  *((void *)v142 + 1) = v144;
  swift_bridgeObjectRelease();
  uint64_t v146 = v121[12];
  uint64_t v147 = *(void **)&v105[v146];
  *(void *)&v105[v146] = *(void *)&v106[v146];

  uint64_t v148 = v121[13];
  char v149 = &v105[v148];
  char v150 = &v106[v148];
  char v151 = v150[16];
  uint64_t v152 = *(void *)v149;
  uint64_t v153 = *((void *)v149 + 1);
  *(_OWORD *)char v149 = *(_OWORD *)v150;
  char v154 = v149[16];
  v149[16] = v151;
  sub_247FE52C4(v152, v153, v154);
  uint64_t v155 = v121[14];
  uint64_t v156 = &v105[v155];
  uint64_t v157 = &v106[v155];
  uint64_t v159 = *(void *)v157;
  uint64_t v158 = *((void *)v157 + 1);
  *(void *)uint64_t v156 = v159;
  *((void *)v156 + 1) = v158;
  swift_bridgeObjectRelease();
  v105[v121[15]] = v106[v121[15]];
  uint64_t v160 = v121[16];
  uint64_t v161 = (uint64_t)&v105[v160];
  uint64_t v162 = &v106[v160];
  if (*(void *)&v105[v160 + 8] < 3uLL)
  {
LABEL_51:
    long long v164 = *((_OWORD *)v162 + 1);
    *(_OWORD *)uint64_t v161 = *(_OWORD *)v162;
    *(_OWORD *)(v161 + 16) = v164;
    goto LABEL_53;
  }
  unint64_t v163 = *((void *)v162 + 1);
  if (v163 < 3)
  {
    sub_24811C114(v161);
    goto LABEL_51;
  }
  *(void *)uint64_t v161 = *(void *)v162;
  *(void *)(v161 + 8) = v163;
  swift_bridgeObjectRelease();
  uint64_t v165 = *((void *)v162 + 3);
  *(void *)(v161 + 16) = *((void *)v162 + 2);
  *(void *)(v161 + 24) = v165;
  swift_bridgeObjectRelease();
LABEL_53:
  *(unsigned char *)(v161 + 32) = v162[32];
  uint64_t v166 = *(int *)(v234 + 24);
  uint64_t v167 = (uint64_t)a1 + v166;
  uint64_t v168 = (char *)v235 + v166;
  unsigned int v169 = *((unsigned __int8 *)a1 + v166 + 40);
  if (v169 <= 0xFA)
  {
    unsigned int v170 = v168[40];
    if (v170 <= 0xFA)
    {
      uint64_t v172 = *((void *)v168 + 4);
      uint64_t v173 = *(void *)v167;
      uint64_t v174 = *(void *)(v167 + 8);
      uint64_t v175 = *(void *)(v167 + 16);
      uint64_t v176 = *(void *)(v167 + 24);
      uint64_t v177 = *(void *)(v167 + 32);
      long long v178 = *((_OWORD *)v168 + 1);
      *(_OWORD *)uint64_t v167 = *(_OWORD *)v168;
      *(_OWORD *)(v167 + 16) = v178;
      *(void *)(v167 + 32) = v172;
      *(unsigned char *)(v167 + 40) = v170;
      sub_247FE0600(v173, v174, v175, v176, v177, v169);
      return a1;
    }
    sub_2480072C8(v167);
  }
  long long v171 = *((_OWORD *)v168 + 1);
  *(_OWORD *)uint64_t v167 = *(_OWORD *)v168;
  *(_OWORD *)(v167 + 16) = v171;
  *(_OWORD *)(v167 + 25) = *(_OWORD *)(v168 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24811D230);
}

uint64_t sub_24811D230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SetupModel();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RepairModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24811D2F4);
}

uint64_t sub_24811D2F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SetupModel();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24811D39C()
{
  uint64_t result = type metadata accessor for SetupModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for RepairModel.State(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 40);
  if (v1 <= 4) {
    return sub_247FE0600(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), *(void *)(result + 24), *(void *)(result + 32), v1);
  }
  return result;
}

uint64_t initializeWithCopy for RepairModel.State(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 40);
  if (v3 > 4)
  {
    long long v9 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    uint64_t v6 = a2[2];
    uint64_t v7 = a2[3];
    uint64_t v8 = a2[4];
    sub_247FE42BC(*a2, v5, v6, v7, v8, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for RepairModel.State(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
  unsigned int v5 = *((unsigned __int8 *)a2 + 40);
  if (v4 > 4)
  {
    if (v5 <= 4)
    {
      uint64_t v17 = *(void *)a2;
      uint64_t v18 = *((void *)a2 + 1);
      uint64_t v19 = *((void *)a2 + 2);
      uint64_t v20 = *((void *)a2 + 3);
      uint64_t v21 = *((void *)a2 + 4);
      sub_247FE42BC(*(void *)a2, v18, v19, v20, v21, v5);
      *(void *)a1 = v17;
      *(void *)(a1 + 8) = v18;
      *(void *)(a1 + 16) = v19;
      *(void *)(a1 + 24) = v20;
      *(void *)(a1 + 32) = v21;
      *(unsigned char *)(a1 + 40) = v5;
      return a1;
    }
LABEL_7:
    long long v22 = *a2;
    long long v23 = a2[1];
    *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
    *(_OWORD *)a1 = v22;
    *(_OWORD *)(a1 + 16) = v23;
    return a1;
  }
  if (v5 > 4)
  {
    sub_247FE0600(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v4);
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v8 = *((void *)a2 + 2);
  uint64_t v9 = *((void *)a2 + 3);
  uint64_t v10 = *((void *)a2 + 4);
  sub_247FE42BC(*(void *)a2, v7, v8, v9, v10, v5);
  uint64_t v11 = *(void *)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  char v16 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v5;
  sub_247FE0600(v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for RepairModel.State(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
  if (v4 > 4) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
  if (v5 > 4)
  {
    sub_247FE0600(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), v4);
LABEL_5:
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    return a1;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = v5;
  sub_247FE0600(v7, v8, v9, v10, v11, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairModel.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF7 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 247);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 > 4) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 6) {
    return v4 - 5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RepairModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF6)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 247;
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF7) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -5 - a2;
    }
  }
  return result;
}

uint64_t sub_24811D720(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 > 4) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_24811D734(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFB)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 40) = 0;
    *(void *)a1 = a2 - 252;
  }
  else if (a2)
  {
    *(unsigned char *)(a1 + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairModel.State()
{
  return &type metadata for RepairModel.State;
}

unsigned char *storeEnumTagSinglePayload for RepairModel.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *double result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24811D844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairModel.State.CodingKeys()
{
  return &type metadata for RepairModel.State.CodingKeys;
}

ValueMetadata *type metadata accessor for RepairModel.State.InitialCodingKeys()
{
  return &type metadata for RepairModel.State.InitialCodingKeys;
}

ValueMetadata *type metadata accessor for RepairModel.State.SetupCodingKeys()
{
  return &type metadata for RepairModel.State.SetupCodingKeys;
}

ValueMetadata *type metadata accessor for RepairModel.State.RepairingCodingKeys()
{
  return &type metadata for RepairModel.State.RepairingCodingKeys;
}

ValueMetadata *type metadata accessor for RepairModel.State.FinishedCodingKeys()
{
  return &type metadata for RepairModel.State.FinishedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RepairModel.State.FailedCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24811D958);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairModel.State.FailedCodingKeys()
{
  return &type metadata for RepairModel.State.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for RepairModel.State.DismissCodingKeys()
{
  return &type metadata for RepairModel.State.DismissCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RepairModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24811DA6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairModel.CodingKeys()
{
  return &type metadata for RepairModel.CodingKeys;
}

unint64_t sub_24811DAA8()
{
  unint64_t result = qword_2692DB6F0;
  if (!qword_2692DB6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB6F0);
  }
  return result;
}

unint64_t sub_24811DB00()
{
  unint64_t result = qword_2692DB6F8;
  if (!qword_2692DB6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB6F8);
  }
  return result;
}

unint64_t sub_24811DB58()
{
  unint64_t result = qword_2692DB700;
  if (!qword_2692DB700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB700);
  }
  return result;
}

unint64_t sub_24811DBB0()
{
  unint64_t result = qword_2692DB708;
  if (!qword_2692DB708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB708);
  }
  return result;
}

unint64_t sub_24811DC08()
{
  unint64_t result = qword_2692DB710;
  if (!qword_2692DB710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB710);
  }
  return result;
}

unint64_t sub_24811DC60()
{
  unint64_t result = qword_2692DB718;
  if (!qword_2692DB718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB718);
  }
  return result;
}

unint64_t sub_24811DCB8()
{
  unint64_t result = qword_2692DB720;
  if (!qword_2692DB720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB720);
  }
  return result;
}

unint64_t sub_24811DD10()
{
  unint64_t result = qword_2692DB728;
  if (!qword_2692DB728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB728);
  }
  return result;
}

unint64_t sub_24811DD68()
{
  unint64_t result = qword_2692DB730;
  if (!qword_2692DB730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB730);
  }
  return result;
}

unint64_t sub_24811DDC0()
{
  unint64_t result = qword_2692DB738;
  if (!qword_2692DB738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB738);
  }
  return result;
}

unint64_t sub_24811DE18()
{
  unint64_t result = qword_2692DB740;
  if (!qword_2692DB740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB740);
  }
  return result;
}

unint64_t sub_24811DE70()
{
  unint64_t result = qword_2692DB748;
  if (!qword_2692DB748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB748);
  }
  return result;
}

unint64_t sub_24811DEC8()
{
  unint64_t result = qword_2692DB750;
  if (!qword_2692DB750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB750);
  }
  return result;
}

unint64_t sub_24811DF20()
{
  unint64_t result = qword_2692DB758;
  if (!qword_2692DB758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB758);
  }
  return result;
}

unint64_t sub_24811DF78()
{
  unint64_t result = qword_2692DB760;
  if (!qword_2692DB760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB760);
  }
  return result;
}

unint64_t sub_24811DFD0()
{
  unint64_t result = qword_2692DB768;
  if (!qword_2692DB768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB768);
  }
  return result;
}

unint64_t sub_24811E028()
{
  unint64_t result = qword_2692DB770;
  if (!qword_2692DB770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB770);
  }
  return result;
}

unint64_t sub_24811E080()
{
  unint64_t result = qword_2692DB778;
  if (!qword_2692DB778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB778);
  }
  return result;
}

unint64_t sub_24811E0D8()
{
  unint64_t result = qword_2692DB780;
  if (!qword_2692DB780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB780);
  }
  return result;
}

uint64_t sub_24811E12C()
{
  unint64_t v0 = sub_248175A30();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_24811E178(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7075746573 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E69726961706572 && a2 == 0xE900000000000067 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7373696D736964 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t SignOutType.init(rawValue:)()
{
  return 0;
}

void *sub_24811E40C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 0;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

uint64_t static SignOutContext.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t SignOutContext.accountAltDSIDsByService.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SignOutContext.shouldRemoveDeviceUser.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser);
}

uint64_t sub_24811E55C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AISSignOutContext_accountAltDSIDsByService);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  id v2 = (id)*MEMORY[0x263F26D28];
  unint64_t v3 = sub_247FB63CC((uint64_t)v2);
  if (v4)
  {
    uint64_t v5 = *(void *)(*(void *)(v1 + 56) + 16 * v3);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

uint64_t SignOutContext.machineIdToSignOut.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AISSignOutContext_machineIdToSignOut);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SignOutContext.type.getter()
{
  return *(void *)(v0 + OBJC_IVAR___AISSignOutContext_type);
}

void sub_24811E6B4(void *a1)
{
  type metadata accessor for AIDAServiceType(0);
  sub_248053B4C();
  unint64_t v3 = (void *)sub_248174FF0();
  char v4 = (void *)sub_248175130();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  if (*(void *)(v1 + OBJC_IVAR___AISSignOutContext_machineIdToSignOut + 8)) {
    uint64_t v5 = sub_248175130();
  }
  else {
    uint64_t v5 = 0;
  }
  char v6 = (void *)sub_248175130();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);
  swift_unknownObjectRelease();

  uint64_t v7 = *(void *)(v1 + OBJC_IVAR___AISSignOutContext_type);
  uint64_t v8 = (void *)sub_248175130();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v7, v8);

  uint64_t v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser);
  id v10 = (id)sub_248175130();
  objc_msgSend(a1, sel_encodeBool_forKey_, v9, v10);
}

id SignOutContext.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_24811F8D8(a1);

  return v4;
}

id SignOutContext.init(coder:)(void *a1)
{
  id v2 = sub_24811F8D8(a1);

  return v2;
}

uint64_t sub_24811E938(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB7E0);
    uint64_t v1 = sub_248175A00();
  }
  else
  {
    uint64_t v1 = MEMORY[0x263F8EE80];
  }
  uint64_t v29 = a1 + 64;
  uint64_t v2 = -1 << *(unsigned char *)(a1 + 32);
  if (-v2 < 64) {
    uint64_t v3 = ~(-1 << -(char)v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(63 - v2) >> 6;
  uint64_t v5 = v1 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      uint64_t v10 = (v4 - 1) & v4;
      unint64_t v11 = __clz(__rbit64(v4)) | (v7 << 6);
      int64_t v12 = v7;
      goto LABEL_28;
    }
    int64_t v13 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v28) {
      goto LABEL_42;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v13);
    int64_t v12 = v7 + 1;
    if (!v14)
    {
      int64_t v12 = v7 + 2;
      if (v7 + 2 >= v28) {
        goto LABEL_42;
      }
      unint64_t v14 = *(void *)(v29 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = v7 + 3;
        if (v7 + 3 >= v28) {
          goto LABEL_42;
        }
        unint64_t v14 = *(void *)(v29 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v7 + 4;
          if (v7 + 4 >= v28) {
            goto LABEL_42;
          }
          unint64_t v14 = *(void *)(v29 + 8 * v12);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_28:
    sub_247FBB220(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v37);
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v38 + 8);
    v35[0] = v38[0];
    v35[1] = v38[1];
    uint64_t v36 = v39;
    v34[0] = v37[0];
    v34[1] = v37[1];
    sub_247FBB220((uint64_t)v34, (uint64_t)v31);
    type metadata accessor for AIDAServiceType(0);
    if (!swift_dynamicCast())
    {
      uint64_t v32 = 0;
      sub_24811FC80((uint64_t)v34);
      uint64_t v27 = v32;
      swift_release();

      goto LABEL_41;
    }
    char v16 = v32;
    sub_247FB8B14((uint64_t)v35 + 8, (uint64_t)v31);
    sub_24811FC80((uint64_t)v34);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v32 = 0;
      uint64_t v33 = 0;

      swift_release();
      swift_bridgeObjectRelease();
LABEL_41:
      sub_247FBB1C4();
      swift_release();
      return 0;
    }
    uint64_t v18 = v32;
    uint64_t v17 = v33;
    sub_248175160();
    sub_248175E50();
    sub_2481751A0();
    uint64_t v19 = sub_248175EC0();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v5 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v21) & ~*(void *)(v5 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v5 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v8 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v5 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(void *)(*(void *)(v1 + 48) + 8 * v8) = v16;
    uint64_t v9 = (void *)(*(void *)(v1 + 56) + 16 * v8);
    *uint64_t v9 = v18;
    v9[1] = v17;
    ++*(void *)(v1 + 16);
    int64_t v7 = v12;
    unint64_t v4 = v10;
  }
  int64_t v15 = v7 + 5;
  if (v7 + 5 >= v28)
  {
LABEL_42:
    swift_release();
    sub_247FBB1C4();
    return v1;
  }
  unint64_t v14 = *(void *)(v29 + 8 * v15);
  if (v14)
  {
    int64_t v12 = v7 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v28) {
      goto LABEL_42;
    }
    unint64_t v14 = *(void *)(v29 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

id SignOutContext.__allocating_init(accountAltDSIDsByService:)(uint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  unint64_t v4 = (objc_class *)type metadata accessor for SignOutContext();
  uint64_t v5 = objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR___AISSignOutContext_accountAltDSIDsByService] = a1;
  char v6 = &v5[OBJC_IVAR___AISSignOutContext_machineIdToSignOut];
  *char v6 = 0;
  v6[1] = 0;
  *(void *)&v5[OBJC_IVAR___AISSignOutContext_type] = 0;
  v5[OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser] = 0;
  v9.receiver = v5;
  v9.super_class = v4;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v7;
}

id SignOutContext.init(accountAltDSIDsByService:)(uint64_t a1)
{
  uint64_t v2 = (objc_class *)type metadata accessor for SignOutContext();
  id v3 = objc_allocWithZone(v2);
  *(void *)&v3[OBJC_IVAR___AISSignOutContext_accountAltDSIDsByService] = a1;
  unint64_t v4 = &v3[OBJC_IVAR___AISSignOutContext_machineIdToSignOut];
  *unint64_t v4 = 0;
  v4[1] = 0;
  *(void *)&v3[OBJC_IVAR___AISSignOutContext_type] = 0;
  v3[OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser] = 0;
  v7.receiver = v3;
  v7.super_class = v2;
  id v5 = objc_msgSendSuper2(&v7, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v5;
}

id SignOutContext.__allocating_init(accountAltDSIDsByService:machineIdToSignOut:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_super v9 = objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR___AISSignOutContext_accountAltDSIDsByService] = a1;
  uint64_t v10 = &v9[OBJC_IVAR___AISSignOutContext_machineIdToSignOut];
  *uint64_t v10 = a2;
  v10[1] = a3;
  *(void *)&v9[OBJC_IVAR___AISSignOutContext_type] = a4;
  v9[OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser] = 0;
  v12.receiver = v9;
  v12.super_class = v4;
  return objc_msgSendSuper2(&v12, sel_init);
}

id SignOutContext.init(accountAltDSIDsByService:machineIdToSignOut:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&v4[OBJC_IVAR___AISSignOutContext_accountAltDSIDsByService] = a1;
  id v5 = &v4[OBJC_IVAR___AISSignOutContext_machineIdToSignOut];
  void *v5 = a2;
  v5[1] = a3;
  *(void *)&v4[OBJC_IVAR___AISSignOutContext_type] = a4;
  v4[OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser] = 0;
  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for SignOutContext();
  return objc_msgSendSuper2(&v7, sel_init);
}

id SignOutContext.__allocating_init(deviceUserCloudAltDSID:machineIdToSignOut:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return SignOutContext.init(deviceUserCloudAltDSID:machineIdToSignOut:)(a1, a2, a3, a4);
}

id SignOutContext.init(deviceUserCloudAltDSID:machineIdToSignOut:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB7B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24817B010;
  uint64_t v10 = (void *)*MEMORY[0x263F26D28];
  *(void *)(inited + 32) = *MEMORY[0x263F26D28];
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 48) = a2;
  unint64_t v11 = v4;
  id v12 = v10;
  *(void *)&v11[OBJC_IVAR___AISSignOutContext_accountAltDSIDsByService] = sub_247FB4AF4(inited);
  int64_t v13 = &v11[OBJC_IVAR___AISSignOutContext_machineIdToSignOut];
  *int64_t v13 = a3;
  v13[1] = a4;
  *(void *)&v11[OBJC_IVAR___AISSignOutContext_type] = 0;
  v11[OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser] = 1;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for SignOutContext();
  return objc_msgSendSuper2(&v15, sel_init);
}

id sub_24811F23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB7B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24817B010;
  unint64_t v11 = (void *)*MEMORY[0x263F26D28];
  *(void *)(inited + 32) = *MEMORY[0x263F26D28];
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 48) = a2;
  id v12 = v11;
  unint64_t v13 = sub_247FB4AF4(inited);
  unint64_t v14 = (objc_class *)type metadata accessor for SignOutContext();
  objc_super v15 = objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR___AISSignOutContext_accountAltDSIDsByService] = v13;
  char v16 = &v15[OBJC_IVAR___AISSignOutContext_machineIdToSignOut];
  *char v16 = a3;
  v16[1] = a4;
  *(void *)&v15[OBJC_IVAR___AISSignOutContext_type] = a5;
  v15[OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser] = 0;
  v19.receiver = v15;
  v19.super_class = v14;
  id v17 = objc_msgSendSuper2(&v19, sel_init);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v17;
}

id _s12AppleIDSetup14SignOutContextC7altDSID4typeACSS_AA0cD4TypeOtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = objc_allocWithZone(v3);
  char v6 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithAltDSID_machineIdToSignOut_type_, v6, 0, a3);

  return v7;
}

id _s12AppleIDSetup14SignOutContextC7altDSID4typeACSS_AA0cD4TypeOtcfc_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithAltDSID_machineIdToSignOut_type_, v5, 0, a3);

  return v6;
}

id SignOutContext.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SignOutContext.init()()
{
}

id SignOutContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SignOutContext();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SignOutContext.description.getter()
{
  return 0;
}

id sub_24811F8D8(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2692DB7D0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_24817B010;
  unint64_t v4 = sub_24811FC40();
  *(void *)(v3 + 32) = v4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24817B010;
  *(void *)(v5 + 32) = v4;
  id v6 = v1;
  uint64_t v7 = sub_248175690();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v7 || (unint64_t v8 = sub_24811E938(v7), swift_bridgeObjectRelease(), !v8))
  {
    unint64_t v8 = sub_247FB4AF4(MEMORY[0x263F8EE78]);
    swift_bridgeObjectRelease();
  }
  *(void *)&v6[OBJC_IVAR___AISSignOutContext_accountAltDSIDsByService] = v8;
  uint64_t v9 = sub_248175680();
  if (v9)
  {
    uint64_t v10 = (void *)v9;
    uint64_t v11 = sub_248175160();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = 0;
  }
  unint64_t v14 = (uint64_t *)&v6[OBJC_IVAR___AISSignOutContext_machineIdToSignOut];
  *unint64_t v14 = v11;
  v14[1] = v13;
  objc_super v15 = (void *)sub_248175130();
  id v16 = objc_msgSend(a1, sel_decodeIntegerForKey_, v15);

  *(void *)&v6[OBJC_IVAR___AISSignOutContext_type] = v16;
  id v17 = (void *)sub_248175130();
  LOBYTE(v16) = objc_msgSend(a1, sel_decodeBoolForKey_, v17);

  v6[OBJC_IVAR___AISSignOutContext_shouldRemoveDeviceUser] = (_BYTE)v16;
  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for SignOutContext();
  return objc_msgSendSuper2(&v19, sel_init);
}

uint64_t type metadata accessor for SignOutContext()
{
  return self;
}

unint64_t sub_24811FB20()
{
  unint64_t result = qword_2692DB7C0;
  if (!qword_2692DB7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB7C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SignOutType()
{
  return &type metadata for SignOutType;
}

uint64_t method lookup function for SignOutContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SignOutContext);
}

uint64_t dispatch thunk of SignOutContext.altDSID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of SignOutContext.encode(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of SignOutContext.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of SignOutContext.__allocating_init(accountAltDSIDsByService:machineIdToSignOut:type:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of SignOutContext.__allocating_init(deviceUserCloudAltDSID:machineIdToSignOut:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

unint64_t sub_24811FC40()
{
  unint64_t result = qword_2692D9EA8;
  if (!qword_2692D9EA8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2692D9EA8);
  }
  return result;
}

uint64_t sub_24811FC80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2692DB7E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24811FCE0@<X0>(uint64_t a1@<X8>)
{
  return sub_24811FD60(a1);
}

uint64_t sub_24811FD04()
{
  return sub_24812059C();
}

uint64_t sub_24811FD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 80) - 8) + 32))(a3, a1);
}

uint64_t sub_24811FD60@<X0>(uint64_t a1@<X8>)
{
  return sub_247FBB7A8(a1);
}

uint64_t sub_24811FDE4@<X0>(uint64_t a1@<X8>)
{
  return sub_24811FD60(a1);
}

uint64_t sub_24811FE08()
{
  return sub_24812059C();
}

uint64_t sub_24811FE2C()
{
  return 16;
}

__n128 sub_24811FE38(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24811FE44(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_24812059C();
  unint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);
  return v4(a1);
}

uint64_t sub_24811FEC0(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)v5 - v1);
  return sub_247FBB84C((uint64_t)v2);
}

void (*sub_24811FF8C(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  sub_2481202DC();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  type metadata accessor for ObservableBox();
  swift_getWitnessTable();
  sub_248174940();
  swift_release();
  v3[5] = sub_247FBB8F8();
  return sub_2481200D8;
}

void sub_2481200D8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_24812012C();
  free(v1);
}

uint64_t sub_24812012C()
{
  return swift_release();
}

uint64_t ObservableBox.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ObservableBox.init(_:)(a1);
  return v2;
}

uint64_t ObservableBox.init(_:)(uint64_t a1)
{
  sub_248174950();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 32))(v1 + *(void *)(*(void *)v1 + 96), a1);
  return v1;
}

uint64_t sub_2481202DC()
{
  return sub_248174920();
}

uint64_t sub_248120390()
{
  return sub_248174910();
}

uint64_t ObservableBox.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_248174960();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ObservableBox.__deallocating_deinit()
{
  ObservableBox.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_24812059C()
{
  return swift_release();
}

uint64_t type metadata accessor for ObservableBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24812065C()
{
  return 16;
}

__n128 sub_248120668(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_248120674()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_248174960();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for ObservableBox(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObservableBox);
}

uint64_t dispatch thunk of ObservableBox.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of ObservableBox.wrappedValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of ObservableBox.wrappedValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of ObservableBox.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_2481207DC()
{
  return sub_24811FEC0(*(void *)(v0 + 16));
}

uint64_t sub_2481207F8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000014;
  }
  else {
    unint64_t v3 = 0x4F64696C61766E69;
  }
  if (v2) {
    unint64_t v4 = 0xEE00736E6F697470;
  }
  else {
    unint64_t v4 = 0x8000000248190270;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000014;
  }
  else {
    unint64_t v5 = 0x4F64696C61766E69;
  }
  if (a2) {
    unint64_t v6 = 0x8000000248190270;
  }
  else {
    unint64_t v6 = 0xEE00736E6F697470;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_248175CE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2481208B0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB000000006E4967;
  uint64_t v3 = 0x6F4C746E65726170;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6F4C746E65726170;
  unint64_t v6 = 0xEB000000006E4967;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6950796C696D6166;
      unint64_t v6 = 0xEC00000072656B63;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x65646F6373736170;
      break;
    case 3:
      unint64_t v5 = 0x676F4C646C696863;
      unint64_t v6 = 0xEA00000000006E49;
      break;
    case 4:
      unint64_t v5 = 0x657243646C696863;
      unint64_t v6 = 0xED00006E6F697461;
      break;
    case 5:
      unint64_t v6 = 0x80000002481902C0;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 6:
      unint64_t v5 = 0x6E6F697461636F6CLL;
      unint64_t v6 = 0xED00007075746553;
      break;
    case 7:
      unint64_t v5 = 0x706552646C696863;
      unint64_t v6 = 0xEB00000000726961;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000072656B63;
      if (v5 == 0x6950796C696D6166) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x65646F6373736170) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v2 = 0xEA00000000006E49;
      if (v5 != 0x676F4C646C696863) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v2 = 0xED00006E6F697461;
      if (v5 != 0x657243646C696863) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v2 = 0x80000002481902C0;
      if (v5 != 0xD000000000000013) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v3 = 0x6E6F697461636F6CLL;
      unint64_t v2 = 0xED00007075746553;
      goto LABEL_21;
    case 7:
      unint64_t v2 = 0xEB00000000726961;
      if (v5 != 0x706552646C696863) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v3) {
        goto LABEL_25;
      }
LABEL_22:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_248175CE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_248120BAC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000044;
  uint64_t v3 = 0x49746E756F636361;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x646F4D7075746573;
    }
    else {
      uint64_t v5 = 0x6574617473;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEA00000000006C65;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x49746E756F636361;
  unint64_t v6 = 0xE900000000000044;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x646F4D7075746573;
    }
    else {
      uint64_t v3 = 0x6574617473;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEA00000000006C65;
    }
    else {
      unint64_t v2 = 0xE500000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_248175CE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_248120CC8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  unint64_t v3 = 0x6C6F526C61636F6CLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C6F526C61636F6CLL;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6F5265746F6D6572;
      unint64_t v6 = 0xEA0000000000656CLL;
      break;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x6574617473;
      break;
    case 3:
      unint64_t v5 = 0x7265766F63736964;
      unint64_t v6 = 0xEE006C65646F4D79;
      break;
    case 4:
      unint64_t v6 = 0x8000000248190330;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 5:
      unint64_t v5 = 0x6F4D6E496E676973;
      unint64_t v6 = 0xEB000000006C6564;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000656CLL;
      if (v5 == 0x6F5265746F6D6572) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x6574617473) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xEE006C65646F4D79;
      if (v5 != 0x7265766F63736964) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v2 = 0x8000000248190330;
      unint64_t v3 = 0xD000000000000013;
      goto LABEL_15;
    case 5:
      unint64_t v2 = 0xEB000000006C6564;
      if (v5 != 0x6F4D6E496E676973) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v3) {
        goto LABEL_19;
      }
LABEL_16:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_248175CE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_248120F0C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x746E756F636361;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x746E756F636361;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x65746E4972657375;
      unint64_t v3 = 0xEF6E6F6974636172;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      unint64_t v5 = 0x6574617473;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x61746144736D6469;
      break;
    case 4:
      unint64_t v3 = 0x80000002481901F0;
      unint64_t v5 = 0xD000000000000015;
      break;
    case 5:
      unint64_t v5 = 0x53746E6572727563;
      unint64_t v3 = 0xEF73656369767265;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEF6E6F6974636172;
      if (v5 == 0x65746E4972657375) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6574617473) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x61746144736D6469) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0x80000002481901F0;
      unint64_t v2 = 0xD000000000000015;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEF73656369767265;
      if (v5 != 0x53746E6572727563) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_248175CE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_248121148()
{
  return sub_248175EC0();
}

uint64_t sub_248121274()
{
  return sub_248175EC0();
}

uint64_t sub_2481213A4()
{
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2481214BC()
{
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24812162C()
{
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248121748()
{
  return sub_248175EC0();
}

uint64_t sub_248121874()
{
  return sub_248175EC0();
}

uint64_t sub_2481219F4()
{
  return sub_248175EC0();
}

BOOL static SetupModel.LocalRole.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t SetupModel.init(localRole:remoteRole:state:discoveryModel:authenticationModel:signInModel:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10 = *(void *)(a2 + 16);
  int v11 = *(_DWORD *)(a2 + 24);
  __int16 v12 = *(_WORD *)(a2 + 28);
  char v13 = *(unsigned char *)(a3 + 48);
  *(unsigned char *)a7 = *a1;
  *(_OWORD *)(a7 + 8) = *(_OWORD *)a2;
  *(void *)(a7 + 24) = v10;
  *(_WORD *)(a7 + 36) = v12;
  *(_DWORD *)(a7 + 32) = v11;
  long long v14 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a7 + 40) = *(_OWORD *)a3;
  *(_OWORD *)(a7 + 56) = v14;
  *(_OWORD *)(a7 + 72) = *(_OWORD *)(a3 + 32);
  *(unsigned char *)(a7 + 88) = v13;
  long long v15 = *a4;
  long long v16 = a4[1];
  long long v17 = a4[3];
  *(_OWORD *)(a7 + 128) = a4[2];
  *(_OWORD *)(a7 + 144) = v17;
  *(_OWORD *)(a7 + 96) = v15;
  *(_OWORD *)(a7 + 112) = v16;
  long long v18 = a4[4];
  long long v19 = a4[5];
  long long v20 = a4[7];
  *(_OWORD *)(a7 + 192) = a4[6];
  *(_OWORD *)(a7 + 208) = v20;
  *(_OWORD *)(a7 + 160) = v18;
  *(_OWORD *)(a7 + 176) = v19;
  long long v21 = a4[8];
  long long v22 = a4[9];
  long long v23 = a4[11];
  *(_OWORD *)(a7 + 256) = a4[10];
  *(_OWORD *)(a7 + 272) = v23;
  *(_OWORD *)(a7 + 224) = v21;
  *(_OWORD *)(a7 + 240) = v22;
  uint64_t v24 = type metadata accessor for SetupModel();
  sub_248121C78(a5, a7 + *(int *)(v24 + 32), (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  return sub_248121C78(a6, a7 + *(int *)(v24 + 36), (uint64_t (*)(void))type metadata accessor for SignInModel);
}

uint64_t type metadata accessor for SetupModel()
{
  uint64_t result = qword_2692DBAA8;
  if (!qword_2692DBAA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_248121C78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double static SetupModel._defaultModel.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AuthenticationModel();
  unint64_t v3 = (int *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IdMSAccount();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v5, 1, 1, v9);
  int v11 = &v5[v3[7]];
  *((_OWORD *)v11 + 3) = 0u;
  *((_OWORD *)v11 + 4) = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *(_OWORD *)int v11 = 0u;
  __int16 v12 = &v5[v3[9]];
  *(void *)__int16 v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = v3[10];
  *(void *)&v5[v13] = MEMORY[0x263F8EE78];
  uint64_t v14 = v3[11];
  v5[v14] = 0;
  long long v15 = &v5[v3[13]];
  *(void *)long long v15 = 0;
  *((void *)v15 + 1) = 0;
  sub_247F9805C((uint64_t)v8, (uint64_t)v5);
  v5[v3[8]] = 1;
  long long v16 = &v5[v3[12]];
  *((_OWORD *)v16 + 3) = 0u;
  *((_OWORD *)v16 + 4) = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((_OWORD *)v16 + 2) = 0u;
  *(_OWORD *)long long v16 = 0u;
  v16[80] = 12;
  swift_bridgeObjectRelease();
  *(void *)__int16 v12 = 0;
  *((void *)v12 + 1) = 0;
  v5[v14] = 0;
  swift_bridgeObjectRelease();
  *(void *)&v5[v13] = MEMORY[0x263F8EE78];
  uint64_t v17 = type metadata accessor for SetupModel();
  sub_248121C78((uint64_t)v5, a1 + *(int *)(v17 + 32), (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  v10(v8, 1, 1, v9);
  memset(v25, 0, 96);
  v23[0] = 0;
  v23[1] = 0;
  char v24 = 3;
  char v22 = 0;
  memset(v21, 0, sizeof(v21));
  uint64_t v18 = a1 + *(int *)(v17 + 36);
  memset(v20, 0, sizeof(v20));
  SignInModel.init(account:srpResults:requiredServices:desiredServices:shouldBackgroundDesiredServices:suppressCloudDataProtectionSetup:deviceUserKind:state:peerDeviceLocaleInfo:serverDeviceModel:)((uint64_t)v8, v25, MEMORY[0x263F8EE88], MEMORY[0x263F8EE88], 0, 0, v23, v21, v18, v20, 0, 0);
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 36) = 192;
  *(_DWORD *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(unsigned char *)(a1 + 88) = -1;
  *(_WORD *)(a1 + 96) = 256;
  *(_DWORD *)(a1 + 98) = v21[0];
  *(_WORD *)(a1 + 102) = WORD2(v21[0]);
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 136) = 0;
  *(_WORD *)(a1 + 144) = 2;
  *(_DWORD *)(a1 + 146) = v20[0];
  *(_WORD *)(a1 + 150) = WORD2(v20[0]);
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 512;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)&double result = 128;
  *(_OWORD *)(a1 + 200) = xmmword_24817D830;
  *(unsigned char *)(a1 + 216) = 0;
  *(_DWORD *)(a1 + 217) = v25[0];
  *(_DWORD *)(a1 + 220) = *(_DWORD *)((char *)v25 + 3);
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  return result;
}

uint64_t sub_248122034(unsigned __int8 *a1, char *a2)
{
  return sub_248120CC8(*a1, *a2);
}

uint64_t sub_248122040()
{
  return sub_248121274();
}

uint64_t sub_248122048()
{
  return sub_24812162C();
}

uint64_t sub_248122050()
{
  return sub_248121748();
}

uint64_t sub_248122058@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24812E9B0();
  *a1 = result;
  return result;
}

void sub_248122088(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x6C6F526C61636F6CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000656CLL;
      uint64_t v3 = 0x6F5265746F6D6572;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6574617473;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 3:
      strcpy((char *)a1, "discoveryModel");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 4:
      *(void *)a1 = 0xD000000000000013;
      *(void *)(a1 + 8) = 0x8000000248190330;
      break;
    case 5:
      *(void *)a1 = 0x6F4D6E496E676973;
      *(void *)(a1 + 8) = 0xEB000000006C6564;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_248122180()
{
  unint64_t result = 0x6C6F526C61636F6CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F5265746F6D6572;
      break;
    case 2:
      unint64_t result = 0x6574617473;
      break;
    case 3:
      unint64_t result = 0x7265766F63736964;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x6F4D6E496E676973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248122264@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24812E9B0();
  *a1 = result;
  return result;
}

uint64_t sub_24812228C(uint64_t a1)
{
  unint64_t v2 = sub_248128354();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2481222C8(uint64_t a1)
{
  unint64_t v2 = sub_248128354();
  return MEMORY[0x270FA00B8](a1, v2);
}

void SetupModel.localRole.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *SetupModel.localRole.setter(unsigned char *result)
{
  *unint64_t v1 = *result;
  return result;
}

uint64_t (*SetupModel.localRole.modify())()
{
  return nullsub_1;
}

id SetupModel.remoteRole.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void **)(v1 + 8);
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(unsigned __int16 *)(v1 + 36);
  uint64_t v6 = *(unsigned int *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(_WORD *)(a1 + 28) = v5;
  *(_DWORD *)(a1 + 24) = v6;
  return sub_247FE4184(v2, v3, v4, v6 | (v5 << 32));
}

__n128 SetupModel.remoteRole.setter(__n128 *a1)
{
  __n128 v8 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int32 v3 = a1[1].n128_u32[2];
  unsigned int v5 = *(_DWORD *)(v1 + 32);
  uint64_t v4 = v1 + 32;
  unsigned __int16 v6 = a1[1].n128_u16[6];
  sub_247FE51A0(*(void **)(v4 - 24), *(id *)(v4 - 16), *(void *)(v4 - 8), v5 | ((unint64_t)*(unsigned __int16 *)(v4 + 4) << 32));
  __n128 result = v8;
  *(__n128 *)(v4 - 24) = v8;
  *(void *)(v4 - 8) = v2;
  *(_WORD *)(v4 + 4) = v6;
  *(_DWORD *)uint64_t v4 = v3;
  return result;
}

uint64_t (*SetupModel.remoteRole.modify())()
{
  return nullsub_1;
}

uint64_t SetupModel.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v8 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 48) = v8;
  return sub_2481282C4(v2, v3, v4, v5, v6, v7, v8);
}

__n128 SetupModel.state.setter(long long *a1)
{
  __n128 v6 = (__n128)a1[1];
  long long v7 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  sub_2481282D8(*(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88));
  *(_OWORD *)(v1 + 40) = v7;
  __n128 result = v6;
  *(__n128 *)(v1 + 56) = v6;
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v3;
  *(unsigned char *)(v1 + 88) = v4;
  return result;
}

uint64_t (*SetupModel.state.modify())()
{
  return nullsub_1;
}

uint64_t SetupModel.discoveryModel.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[15];
  long long v3 = v1[13];
  long long v27 = v1[14];
  long long v28 = v2;
  long long v4 = v1[15];
  long long v5 = v1[17];
  long long v29 = v1[16];
  long long v6 = v29;
  long long v30 = v5;
  long long v7 = v1[11];
  long long v9 = v1[9];
  long long v23 = v1[10];
  long long v8 = v23;
  long long v24 = v7;
  long long v10 = v1[11];
  long long v11 = v1[13];
  long long v25 = v1[12];
  long long v12 = v25;
  long long v26 = v11;
  long long v13 = v1[7];
  v20[0] = v1[6];
  v20[1] = v13;
  long long v14 = v1[9];
  long long v16 = v1[6];
  long long v15 = v1[7];
  long long v21 = v1[8];
  long long v17 = v21;
  long long v22 = v14;
  a1[8] = v27;
  a1[9] = v4;
  long long v18 = v1[17];
  a1[10] = v6;
  a1[11] = v18;
  a1[4] = v8;
  a1[5] = v10;
  a1[6] = v12;
  a1[7] = v3;
  *a1 = v16;
  a1[1] = v15;
  a1[2] = v17;
  a1[3] = v9;
  return sub_24807DCB4((uint64_t)v20);
}

__n128 SetupModel.discoveryModel.setter(uint64_t a1)
{
  long long v3 = v1[15];
  v16[8] = v1[14];
  v16[9] = v3;
  long long v4 = v1[17];
  v16[10] = v1[16];
  v16[11] = v4;
  long long v5 = v1[11];
  v16[4] = v1[10];
  v16[5] = v5;
  long long v6 = v1[13];
  v16[6] = v1[12];
  v16[7] = v6;
  long long v7 = v1[7];
  v16[0] = v1[6];
  v16[1] = v7;
  long long v8 = v1[9];
  v16[2] = v1[8];
  v16[3] = v8;
  sub_24807DD90((uint64_t)v16);
  long long v9 = *(_OWORD *)(a1 + 144);
  v1[14] = *(_OWORD *)(a1 + 128);
  v1[15] = v9;
  long long v10 = *(_OWORD *)(a1 + 176);
  v1[16] = *(_OWORD *)(a1 + 160);
  v1[17] = v10;
  long long v11 = *(_OWORD *)(a1 + 80);
  v1[10] = *(_OWORD *)(a1 + 64);
  v1[11] = v11;
  long long v12 = *(_OWORD *)(a1 + 112);
  v1[12] = *(_OWORD *)(a1 + 96);
  v1[13] = v12;
  long long v13 = *(_OWORD *)(a1 + 16);
  v1[6] = *(_OWORD *)a1;
  v1[7] = v13;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v15 = *(_OWORD *)(a1 + 48);
  v1[8] = result;
  v1[9] = v15;
  return result;
}

uint64_t (*SetupModel.discoveryModel.modify())()
{
  return nullsub_1;
}

uint64_t SetupModel.authenticationModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SetupModel();
  return sub_2481285A0(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
}

uint64_t SetupModel.authenticationModel.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SetupModel();
  return sub_2481282EC(a1, v1 + *(int *)(v3 + 32), (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
}

uint64_t (*SetupModel.authenticationModel.modify())(void)
{
  return nullsub_1;
}

uint64_t SetupModel.signInModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SetupModel();
  return sub_2481285A0(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))type metadata accessor for SignInModel);
}

uint64_t SetupModel.signInModel.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SetupModel();
  return sub_2481282EC(a1, v1 + *(int *)(v3 + 36), (uint64_t (*)(void))type metadata accessor for SignInModel);
}

uint64_t (*SetupModel.signInModel.modify())(void)
{
  return nullsub_1;
}

uint64_t SetupModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB870);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248128354();
  sub_248175F60();
  LOBYTE(v22) = *(unsigned char *)v3;
  LOBYTE(v35) = 0;
  sub_2481283A8();
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v9 = *(void *)(v3 + 24);
    int v10 = *(_DWORD *)(v3 + 32);
    __int16 v11 = *(_WORD *)(v3 + 36);
    long long v22 = *(_OWORD *)(v3 + 8);
    *(void *)&long long v23 = v9;
    WORD6(v23) = v11;
    DWORD2(v23) = v10;
    LOBYTE(v35) = 1;
    sub_2481283FC();
    sub_248175BE0();
    char v12 = *(unsigned char *)(v3 + 88);
    long long v13 = *(_OWORD *)(v3 + 56);
    long long v35 = *(_OWORD *)(v3 + 40);
    long long v36 = v13;
    long long v37 = *(_OWORD *)(v3 + 72);
    char v38 = v12;
    char v34 = 2;
    sub_248128450();
    sub_248175BE0();
    long long v14 = *(_OWORD *)(v3 + 240);
    long long v30 = *(_OWORD *)(v3 + 224);
    long long v31 = v14;
    long long v15 = *(_OWORD *)(v3 + 272);
    long long v32 = *(_OWORD *)(v3 + 256);
    long long v33 = v15;
    long long v16 = *(_OWORD *)(v3 + 176);
    long long v26 = *(_OWORD *)(v3 + 160);
    long long v27 = v16;
    long long v17 = *(_OWORD *)(v3 + 208);
    long long v28 = *(_OWORD *)(v3 + 192);
    long long v29 = v17;
    long long v18 = *(_OWORD *)(v3 + 112);
    long long v22 = *(_OWORD *)(v3 + 96);
    long long v23 = v18;
    long long v19 = *(_OWORD *)(v3 + 144);
    long long v24 = *(_OWORD *)(v3 + 128);
    long long v25 = v19;
    v21[15] = 3;
    sub_24807EB0C();
    sub_248175BE0();
    type metadata accessor for SetupModel();
    LOBYTE(v22) = 4;
    type metadata accessor for AuthenticationModel();
    sub_248128CE4(&qword_2692D5520, (void (*)(uint64_t))type metadata accessor for AuthenticationModel);
    sub_248175BE0();
    LOBYTE(v22) = 5;
    type metadata accessor for SignInModel();
    sub_248128CE4(&qword_2692DAE98, (void (*)(uint64_t))type metadata accessor for SignInModel);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

void SetupModel.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = type metadata accessor for SignInModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AuthenticationModel();
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB898);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  int v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for SetupModel();
  MEMORY[0x270FA5388](v36);
  char v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_248128354();
  long long v35 = v10;
  uint64_t v14 = v52;
  sub_248175F20();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  }
  else
  {
    uint64_t v52 = v6;
    uint64_t v15 = (uint64_t)v8;
    uint64_t v16 = (uint64_t)v5;
    uint64_t v17 = v32;
    uint64_t v18 = v33;
    char v39 = 0;
    sub_2481284A4();
    uint64_t v19 = v34;
    sub_248175AF0();
    *char v12 = v40;
    char v39 = 1;
    sub_2481284F8();
    sub_248175AF0();
    uint64_t v20 = v41;
    int v21 = DWORD2(v41);
    __int16 v22 = WORD6(v41);
    *(_OWORD *)(v12 + 8) = v40;
    *((void *)v12 + 3) = v20;
    *((_WORD *)v12 + 18) = v22;
    *((_DWORD *)v12 + 8) = v21;
    char v39 = 2;
    sub_24812854C();
    sub_248175AF0();
    char v23 = v43;
    long long v24 = v41;
    *(_OWORD *)(v12 + 40) = v40;
    *(_OWORD *)(v12 + 56) = v24;
    *(_OWORD *)(v12 + 72) = v42;
    v12[88] = v23;
    char v39 = 3;
    sub_24807EAB8();
    sub_248175AF0();
    long long v25 = v49;
    *((_OWORD *)v12 + 14) = v48;
    *((_OWORD *)v12 + 15) = v25;
    long long v26 = v51;
    *((_OWORD *)v12 + 16) = v50;
    *((_OWORD *)v12 + 17) = v26;
    long long v27 = v45;
    *((_OWORD *)v12 + 10) = v44;
    *((_OWORD *)v12 + 11) = v27;
    long long v28 = v47;
    *((_OWORD *)v12 + 12) = v46;
    *((_OWORD *)v12 + 13) = v28;
    long long v29 = v41;
    *((_OWORD *)v12 + 6) = v40;
    *((_OWORD *)v12 + 7) = v29;
    long long v30 = v43;
    *((_OWORD *)v12 + 8) = v42;
    *((_OWORD *)v12 + 9) = v30;
    char v38 = 4;
    sub_248128CE4(&qword_2692D5518, (void (*)(uint64_t))type metadata accessor for AuthenticationModel);
    sub_248175AF0();
    sub_248121C78(v15, (uint64_t)&v12[*(int *)(v36 + 32)], (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    char v38 = 5;
    sub_248128CE4(&qword_2692DAE90, (void (*)(uint64_t))type metadata accessor for SignInModel);
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v35, v19);
    sub_248121C78(v16, (uint64_t)&v12[*(int *)(v36 + 36)], (uint64_t (*)(void))type metadata accessor for SignInModel);
    sub_2481285A0((uint64_t)v12, v18, (uint64_t (*)(void))type metadata accessor for SetupModel);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    sub_24812BB64((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SetupModel);
  }
}

uint64_t SetupModel.update(with:)(uint64_t a1)
{
  sub_24812BB64(v1, (uint64_t (*)(void))type metadata accessor for SetupModel);
  return sub_2481285A0(a1, v1, (uint64_t (*)(void))type metadata accessor for SetupModel);
}

uint64_t SetupModel.hash(into:)(long long *a1)
{
  sub_248175E70();
  SetupModel.RemoteRole.hash(into:)();
  switch(*(unsigned char *)(v1 + 88))
  {
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)a1);
      break;
  }
  DiscoveryModel.hash(into:)(a1);
  type metadata accessor for SetupModel();
  AuthenticationModel.hash(into:)((uint64_t)a1);
  return SignInModel.hash(into:)((uint64_t)a1);
}

uint64_t SetupModel.hashValue.getter()
{
  sub_248175E50();
  sub_248175E70();
  SetupModel.RemoteRole.hash(into:)();
  switch(*(unsigned char *)(v0 + 88))
  {
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)v2);
      break;
  }
  DiscoveryModel.hash(into:)(v2);
  type metadata accessor for SetupModel();
  AuthenticationModel.hash(into:)((uint64_t)v2);
  SignInModel.hash(into:)((uint64_t)v2);
  return sub_248175EC0();
}

void sub_2481235BC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_2481235D4(void *a1)
{
  return SetupModel.encode(to:)(a1);
}

uint64_t sub_2481235F8()
{
  sub_248175E50();
  sub_248175E70();
  SetupModel.RemoteRole.hash(into:)();
  switch(*(unsigned char *)(v0 + 88))
  {
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)v2);
      break;
  }
  DiscoveryModel.hash(into:)(v2);
  AuthenticationModel.hash(into:)((uint64_t)v2);
  SignInModel.hash(into:)((uint64_t)v2);
  return sub_248175EC0();
}

uint64_t SetupModel.description.getter()
{
  return 0;
}

uint64_t SetupModel.State.hash(into:)(uint64_t a1)
{
  switch(*(unsigned char *)(v1 + 48))
  {
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      uint64_t result = SetupError.hash(into:)(a1);
      break;
  }
  return result;
}

uint64_t sub_248123B2C(uint64_t a1)
{
  unint64_t v2 = sub_2481287AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248123B68(uint64_t a1)
{
  unint64_t v2 = sub_2481287AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248123BA4()
{
  uint64_t result = 0x6C616974696E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265766F63736964;
      break;
    case 2:
      uint64_t result = 0x69746E6568747561;
      break;
    case 3:
      uint64_t result = 0x6E496E676973;
      break;
    case 4:
      uint64_t result = 0x64656873696E6966;
      break;
    case 5:
      uint64_t result = 0x64656C696166;
      break;
    case 6:
      uint64_t result = 0x7373696D736964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248123C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24812E9FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248123CAC(uint64_t a1)
{
  unint64_t v2 = sub_248128608();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248123CE8(uint64_t a1)
{
  unint64_t v2 = sub_248128608();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248123D24(uint64_t a1)
{
  unint64_t v2 = sub_248128800();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248123D60(uint64_t a1)
{
  unint64_t v2 = sub_248128800();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248123D9C(uint64_t a1)
{
  unint64_t v2 = sub_24812865C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248123DD8(uint64_t a1)
{
  unint64_t v2 = sub_24812865C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248123E14(uint64_t a1)
{
  unint64_t v2 = sub_2481286B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248123E50(uint64_t a1)
{
  unint64_t v2 = sub_2481286B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248123E8C(uint64_t a1)
{
  unint64_t v2 = sub_248128704();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248123EC8(uint64_t a1)
{
  unint64_t v2 = sub_248128704();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248123F04(uint64_t a1)
{
  unint64_t v2 = sub_248128854();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248123F40(uint64_t a1)
{
  unint64_t v2 = sub_248128854();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248123F7C(uint64_t a1)
{
  unint64_t v2 = sub_248128758();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248123FB8(uint64_t a1)
{
  unint64_t v2 = sub_248128758();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetupModel.State.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB8B8);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v55 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB8C0);
  uint64_t v59 = *(void *)(v5 - 8);
  uint64_t v60 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB8C8);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB8D0);
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  long long v49 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB8D8);
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  long long v46 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB8E0);
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  long long v43 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB8E8);
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB8F0);
  uint64_t v64 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)v1;
  uint64_t v17 = *(void *)(v1 + 8);
  uint64_t v18 = *(void *)(v1 + 16);
  uint64_t v62 = *(void *)(v1 + 24);
  uint64_t v63 = v18;
  uint64_t v61 = *(void *)(v1 + 32);
  uint64_t v42 = *(void *)(v1 + 40);
  int v19 = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248128608();
  uint64_t v20 = v15;
  sub_248175F60();
  switch(v19)
  {
    case 250:
      LOBYTE(v65) = 6;
      sub_24812865C();
      int v21 = v55;
      uint64_t v22 = v72;
      sub_248175B50();
      uint64_t v24 = v57;
      uint64_t v23 = v58;
      goto LABEL_5;
    case 251:
      LOBYTE(v65) = 4;
      sub_248128704();
      int v21 = v52;
      uint64_t v22 = v72;
      sub_248175B50();
      uint64_t v24 = v53;
      uint64_t v23 = v54;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v15, v22);
    case 252:
      LOBYTE(v65) = 3;
      sub_248128758();
      uint64_t v34 = v49;
      uint64_t v22 = v72;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v51);
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v15, v22);
    case 253:
      LOBYTE(v65) = 2;
      sub_2481287AC();
      long long v35 = v46;
      uint64_t v22 = v72;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v15, v22);
    case 254:
      LOBYTE(v65) = 1;
      sub_248128800();
      uint64_t v36 = v43;
      uint64_t v37 = v72;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v36, v45);
      goto LABEL_12;
    case 255:
      LOBYTE(v65) = 0;
      sub_248128854();
      uint64_t v37 = v72;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
LABEL_12:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v15, v37);
      break;
    default:
      LOBYTE(v65) = 5;
      uint64_t v39 = v16;
      uint64_t v38 = v17;
      uint64_t v25 = v17;
      uint64_t v26 = v62;
      uint64_t v27 = v63;
      uint64_t v28 = v42;
      sub_247FA9804(v16, v25, v63, v62, v61, v42, v19);
      sub_2481286B0();
      long long v29 = v56;
      sub_248175B50();
      uint64_t v65 = v16;
      uint64_t v30 = v38;
      uint64_t v66 = v38;
      uint64_t v67 = v27;
      uint64_t v68 = v26;
      uint64_t v31 = v61;
      uint64_t v69 = v61;
      uint64_t v70 = v28;
      char v71 = v19;
      sub_247FAAAEC();
      uint64_t v32 = v60;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v29, v32);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v20, v72);
      uint64_t result = sub_2481282D8(v39, v30, v63, v62, v31, v28, v19);
      break;
  }
  return result;
}

uint64_t SetupModel.State.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  sub_248175E50();
  switch(v1)
  {
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)v3);
      break;
  }
  return sub_248175EC0();
}

uint64_t SetupModel.State.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB938);
  uint64_t v58 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v62 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB940);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v60 = v5;
  uint64_t v61 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v67 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB948);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  uint64_t v57 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v66 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB950);
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v65 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB958);
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v64 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB960);
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB968);
  uint64_t v49 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB970);
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  int v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_248128608();
  uint64_t v23 = v73;
  sub_248175F20();
  if (v23) {
    goto LABEL_12;
  }
  uint64_t v47 = v17;
  uint64_t v46 = v15;
  uint64_t v48 = v14;
  uint64_t v25 = v64;
  uint64_t v24 = v65;
  uint64_t v26 = v66;
  uint64_t v27 = v67;
  uint64_t v73 = v19;
  uint64_t v28 = sub_248175B30();
  if (*(void *)(v28 + 16) != 1)
  {
    uint64_t v32 = sub_2481758A0();
    swift_allocError();
    uint64_t v33 = v18;
    long long v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *long long v35 = &type metadata for SetupModel.State;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v35, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v33);
LABEL_12:
    uint64_t v40 = (uint64_t)v68;
    return __swift_destroy_boxed_opaque_existential_1(v40);
  }
  switch(*(unsigned char *)(v28 + 32))
  {
    case 1:
      LOBYTE(v69) = 1;
      sub_248128800();
      uint64_t v36 = v48;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v18);
      long long v30 = 0uLL;
      char v31 = -2;
      goto LABEL_14;
    case 2:
      LOBYTE(v69) = 2;
      sub_2481287AC();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v18);
      long long v30 = 0uLL;
      char v31 = -3;
      goto LABEL_14;
    case 3:
      LOBYTE(v69) = 3;
      sub_248128758();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v18);
      long long v30 = 0uLL;
      char v31 = -4;
      goto LABEL_14;
    case 4:
      LOBYTE(v69) = 4;
      sub_248128704();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v18);
      long long v30 = 0uLL;
      char v31 = -5;
      goto LABEL_14;
    case 5:
      LOBYTE(v69) = 5;
      sub_2481286B0();
      sub_248175A50();
      sub_247FAAB40();
      uint64_t v37 = v60;
      sub_248175AF0();
      uint64_t v38 = v73;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v27, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v18);
      long long v30 = v69;
      long long v43 = v70;
      long long v44 = v71;
      char v31 = v72;
      goto LABEL_15;
    case 6:
      LOBYTE(v69) = 6;
      sub_24812865C();
      uint64_t v39 = v62;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v18);
      long long v30 = 0uLL;
      char v31 = -6;
      goto LABEL_14;
    default:
      LOBYTE(v69) = 0;
      sub_248128854();
      long long v29 = v47;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v21, v18);
      long long v30 = 0uLL;
      char v31 = -1;
LABEL_14:
      long long v43 = 0uLL;
      long long v44 = 0uLL;
LABEL_15:
      uint64_t v40 = (uint64_t)v68;
      uint64_t v42 = v63;
      *uint64_t v63 = v30;
      v42[1] = v43;
      v42[2] = v44;
      *((unsigned char *)v42 + 48) = v31;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v40);
}

uint64_t sub_2481253D8@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return SetupModel.State.init(from:)(a1, a2);
}

uint64_t sub_2481253F0(void *a1)
{
  return SetupModel.State.encode(to:)(a1);
}

uint64_t sub_248125414()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  sub_248175E50();
  switch(v1)
  {
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 255:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)v3);
      break;
  }
  return sub_248175EC0();
}

uint64_t SetupModel.LocalRole.hash(into:)()
{
  return sub_248175E70();
}

uint64_t sub_248125554()
{
  if (*v0) {
    return 0x7463697274736572;
  }
  else {
    return 0x6C61756E616DLL;
  }
}

uint64_t sub_248125590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24812ECEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2481255B8(uint64_t a1)
{
  unint64_t v2 = sub_2481288A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2481255F4(uint64_t a1)
{
  unint64_t v2 = sub_2481288A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248125630(uint64_t a1)
{
  unint64_t v2 = sub_248128950();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24812566C(uint64_t a1)
{
  unint64_t v2 = sub_248128950();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2481256A8(uint64_t a1)
{
  unint64_t v2 = sub_2481288FC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2481256E4(uint64_t a1)
{
  unint64_t v2 = sub_2481288FC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SetupModel.LocalRole.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB978);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB980);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB988);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2481288A8();
  sub_248175F60();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_2481288FC();
    uint64_t v14 = v18;
    sub_248175B50();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_248128950();
    sub_248175B50();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t SetupModel.LocalRole.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t SetupModel.LocalRole.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9A8);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9B0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9B8);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2481288A8();
  uint64_t v11 = v32;
  sub_248175F20();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_248175B30();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_2481758A0();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *char v22 = &type metadata for SetupModel.LocalRole;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_2481288FC();
    uint64_t v18 = v14;
    sub_248175A50();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_248128950();
    sub_248175A50();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t sub_248125E64@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SetupModel.LocalRole.init(from:)(a1, a2);
}

uint64_t sub_248125E7C(void *a1)
{
  return SetupModel.LocalRole.encode(to:)(a1);
}

void SetupModel.RemoteRole.hash(into:)()
{
  unint64_t v2 = *(void **)v0;
  int v1 = *(void **)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(unsigned __int16 *)(v0 + 28);
  unint64_t v5 = *(unsigned int *)(v0 + 24) | (unint64_t)(v4 << 32);
  switch(v4 >> 6)
  {
    case 1:
      sub_248175E70();
      if (v2) {
        goto LABEL_5;
      }
      goto LABEL_7;
    case 2:
      sub_248175E70();
      if (v2)
      {
LABEL_5:
        sub_248175E80();
        id v6 = v2;
        sub_2481756D0();
        uint64_t v7 = v2;
      }
      else
      {
LABEL_7:
        sub_248175E80();
        sub_247FE51A0(0, v1, v3, v5);
        uint64_t v7 = 0;
      }
      sub_247FE51A0(v7, v1, v3, v5);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      sub_248175E80();
      if (v1)
      {
        swift_bridgeObjectRetain();
        sub_2481751A0();
        sub_247FE51A0(v2, v1, v3, v5);
      }
      sub_248175E90();
      sub_248175E80();
      sub_248175EA0();
      sub_248175E70();
      sub_248175E80();
      break;
  }
}

unint64_t sub_248126078(char a1)
{
  unint64_t result = 0x7463697274736572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E65696C43656C62;
      break;
    case 2:
      unint64_t result = 0x6576726553656C62;
      break;
    case 3:
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_248126154(uint64_t a1)
{
  unint64_t v2 = sub_248128B48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248126190(uint64_t a1)
{
  unint64_t v2 = sub_248128B48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2481261CC(uint64_t a1)
{
  unint64_t v2 = sub_2481289F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248126208(uint64_t a1)
{
  unint64_t v2 = sub_2481289F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248126244(uint64_t a1)
{
  unint64_t v2 = sub_248128AF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248126280(uint64_t a1)
{
  unint64_t v2 = sub_248128AF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_2481262BC()
{
  return sub_248126078(*v0);
}

uint64_t sub_2481262C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24812EDE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2481262EC(uint64_t a1)
{
  unint64_t v2 = sub_2481289A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248126328(uint64_t a1)
{
  unint64_t v2 = sub_2481289A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248126364(uint64_t a1)
{
  unint64_t v2 = sub_248128AA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2481263A0(uint64_t a1)
{
  unint64_t v2 = sub_248128AA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2481263DC(uint64_t a1)
{
  unint64_t v2 = sub_248128A4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248126418(uint64_t a1)
{
  unint64_t v2 = sub_248128A4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_248126454(uint64_t a1)
{
  unint64_t v2 = sub_248128B9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248126490(uint64_t a1)
{
  unint64_t v2 = sub_248128B9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

void SetupModel.RemoteRole.encode(to:)(void *a1)
{
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9C0);
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v52 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9C8);
  uint64_t v63 = *(void *)(v4 - 8);
  unint64_t v64 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v62 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9D0);
  uint64_t v60 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v59 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9D8);
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v49 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9E0);
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9E8);
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB9F0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v68 = v15;
  uint64_t v69 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = *(void *)v1;
  uint64_t v20 = *(void *)(v1 + 16);
  *(void *)&long long v65 = *(void *)(v1 + 8);
  *((void *)&v65 + 1) = v20;
  uint64_t v21 = *(unsigned __int16 *)(v1 + 28);
  unint64_t v66 = *(unsigned int *)(v1 + 24) | (unint64_t)(v21 << 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2481289A4();
  uint64_t v67 = v18;
  sub_248175F60();
  switch(v21 >> 6)
  {
    case 1:
      LOBYTE(v70) = 3;
      sub_248128AA0();
      uint64_t v29 = (void *)v19;
      id v30 = (id)v19;
      char v31 = v59;
      char v33 = v67;
      uint64_t v32 = v68;
      sub_248175B50();
      unint64_t v70 = (unint64_t)v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD48);
      sub_2480FE498(&qword_2692DAD50);
      uint64_t v34 = v61;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v31, v34);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v33, v32);
      long long v35 = v29;
      goto LABEL_5;
    case 2:
      LOBYTE(v70) = 4;
      sub_248128A4C();
      uint64_t v36 = (void *)v19;
      id v37 = (id)v19;
      uint64_t v38 = v62;
      uint64_t v40 = v67;
      uint64_t v39 = v68;
      sub_248175B50();
      unint64_t v70 = (unint64_t)v36;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD48);
      sub_2480FE498(&qword_2692DAD50);
      unint64_t v41 = v64;
      sub_248175BE0();
      (*(void (**)(char *, unint64_t))(v63 + 8))(v38, v41);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v39);
      long long v35 = v36;
LABEL_5:
      sub_247FE51A0(v35, (id)v65, *((uint64_t *)&v65 + 1), v66);
      break;
    case 3:
      if (*((void *)&v65 + 1) | (unint64_t)v65 | v19 || v66 != 0xC000000000)
      {
        if (v66 == 0xC000000000 && v19 == 1 && v65 == 0)
        {
          LOBYTE(v70) = 2;
          sub_248128AF4();
          long long v44 = v49;
          uint64_t v45 = v67;
          uint64_t v46 = v68;
          sub_248175B50();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v44, v51);
        }
        else
        {
          LOBYTE(v70) = 5;
          sub_2481289F8();
          uint64_t v47 = v52;
          uint64_t v45 = v67;
          uint64_t v46 = v68;
          sub_248175B50();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v47, v54);
        }
        (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v46);
      }
      else
      {
        LOBYTE(v70) = 0;
        sub_248128B9C();
        long long v43 = v67;
        uint64_t v42 = v68;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v56);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v42);
      }
      break;
    default:
      __int16 v22 = WORD4(v65);
      int v23 = v66;
      uint64_t v24 = HIDWORD(*((void *)&v65 + 1));
      unint64_t v25 = HIDWORD(v66);
      unint64_t v64 = v66 >> 40;
      LOBYTE(v70) = 1;
      sub_248128B48();
      uint64_t v27 = v67;
      uint64_t v26 = v68;
      sub_248175B50();
      unint64_t v70 = v19;
      uint64_t v71 = v65;
      __int16 v72 = v22;
      char v73 = v24;
      int v74 = v23;
      char v75 = v25;
      char v76 = v64;
      sub_2480BF688();
      uint64_t v28 = v58;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v11, v28);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v27, v26);
      break;
  }
}

uint64_t SetupModel.RemoteRole.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t SetupModel.RemoteRole.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBA30);
  uint64_t v45 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v56 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBA38);
  uint64_t v54 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v60 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBA40);
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v59 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBA48);
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v55 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBA50);
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBA58);
  uint64_t v58 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBA60);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_2481289A4();
  uint64_t v18 = v68;
  sub_248175F20();
  if (v18) {
    goto LABEL_11;
  }
  uint64_t v19 = v58;
  uint64_t v43 = v10;
  long long v44 = v9;
  uint64_t v20 = v59;
  uint64_t v21 = v60;
  uint64_t v68 = v14;
  uint64_t v22 = sub_248175B30();
  int v23 = (char *)v22;
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v26 = sub_2481758A0();
    swift_allocError();
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v28 = &type metadata for SetupModel.RemoteRole;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v16, v13);
LABEL_11:
    uint64_t v39 = (uint64_t)v61;
    return __swift_destroy_boxed_opaque_existential_1(v39);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      LOBYTE(v62) = 1;
      sub_248128B48();
      uint64_t v29 = v44;
      sub_248175A50();
      sub_2480BF634();
      uint64_t v30 = v48;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v16, v13);
      long long v25 = v62;
      unint64_t v24 = v63 | ((unint64_t)v64 << 32);
      unint64_t v31 = v65 | ((unint64_t)v66 << 32) | ((unint64_t)v67 << 40);
      goto LABEL_14;
    case 2:
      LOBYTE(v62) = 2;
      sub_248128AF4();
      uint64_t v32 = v55;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v16, v13);
      unint64_t v24 = 0;
      long long v25 = xmmword_248177B60;
      goto LABEL_13;
    case 3:
      LOBYTE(v62) = 3;
      sub_248128AA0();
      sub_248175A50();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD48);
      sub_2480FE498(&qword_2692DAD70);
      uint64_t v33 = v52;
      sub_248175AF0();
      uint64_t v34 = v68;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v13);
      unint64_t v24 = 0;
      *(void *)&long long v25 = v62;
      unint64_t v31 = 0x4000000000;
      goto LABEL_16;
    case 4:
      LOBYTE(v62) = 4;
      sub_248128A4C();
      long long v35 = v21;
      sub_248175A50();
      uint64_t v59 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692DAD48);
      sub_2480FE498(&qword_2692DAD70);
      uint64_t v36 = v50;
      sub_248175AF0();
      uint64_t v37 = v68;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v13);
      unint64_t v24 = 0;
      *(void *)&long long v25 = v62;
      unint64_t v31 = 0x8000000000;
LABEL_16:
      uint64_t v39 = (uint64_t)v61;
      uint64_t v41 = v57;
      goto LABEL_15;
    case 5:
      LOBYTE(v62) = 5;
      sub_2481289F8();
      uint64_t v38 = v56;
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v16, v13);
      unint64_t v24 = 0;
      long long v25 = xmmword_24818CD50;
      goto LABEL_13;
    default:
      LOBYTE(v62) = 0;
      sub_248128B9C();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v16, v13);
      unint64_t v24 = 0;
      long long v25 = 0uLL;
LABEL_13:
      unint64_t v31 = 0xC000000000;
LABEL_14:
      uint64_t v39 = (uint64_t)v61;
      uint64_t v41 = v57;
LABEL_15:
      *(_OWORD *)uint64_t v41 = v25;
      *(void *)(v41 + 16) = v24;
      *(_DWORD *)(v41 + 24) = v31;
      *(_WORD *)(v41 + 28) = WORD2(v31);
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1(v39);
}

uint64_t sub_2481277F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SetupModel.RemoteRole.init(from:)(a1, a2);
}

void sub_248127810(void *a1)
{
}

uint64_t sub_24812782C()
{
  return sub_248175EC0();
}

uint64_t sub_248127894()
{
  return sub_248175EC0();
}

BOOL _s12AppleIDSetup10SetupModelV10RemoteRoleO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(unsigned __int16 *)(a1 + 28);
  unint64_t v6 = *(unsigned int *)(a1 + 24) | (unint64_t)(v5 << 32);
  unint64_t v8 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  unint64_t v10 = *(unsigned int *)(a2 + 24) | ((unint64_t)*(unsigned __int16 *)(a2 + 28) << 32);
  switch(v5 >> 6)
  {
    case 1:
      if ((v10 & 0xC000000000) != 0x4000000000) {
        goto LABEL_60;
      }
      if (!v3) {
        goto LABEL_46;
      }
      if (!v8) {
        goto LABEL_60;
      }
      goto LABEL_11;
    case 2:
      if ((v10 & 0xC000000000) != 0x8000000000) {
        goto LABEL_60;
      }
      if (!v3)
      {
LABEL_46:
        if (v8) {
          goto LABEL_60;
        }
        sub_247FE51A0(0, (id)v2, v4, v6);
        uint64_t v19 = 0;
        uint64_t v22 = (void *)v7;
        uint64_t v23 = v9;
        unint64_t v24 = v10;
        goto LABEL_48;
      }
      if (!v8) {
        goto LABEL_60;
      }
LABEL_11:
      sub_248102C44();
      sub_247FE4184((id)v8, (id)v7, v9, v10);
      sub_247FE4184((id)v3, (id)v2, v4, v6);
      sub_247FE4184((id)v8, (id)v7, v9, v10);
      sub_247FE4184((id)v3, (id)v2, v4, v6);
      char v12 = sub_2481756C0();
      sub_247FE51A0((void *)v3, (id)v2, v4, v6);
      sub_247FE51A0((void *)v8, (id)v7, v9, v10);
      sub_247FE51A0((void *)v8, (id)v7, v9, v10);
      sub_247FE51A0((void *)v3, (id)v2, v4, v6);
      return (v12 & 1) != 0;
    case 3:
      if (v4 | v2 | v3) {
        BOOL v13 = 0;
      }
      else {
        BOOL v13 = v6 == 0xC000000000;
      }
      if (v13)
      {
        if ((~v10 & 0xC000000000) != 0 || (v9 | v7 | v8) != 0 || (v10 & 0xFFFFFFFFFFFFLL) != 0xC000000000) {
          goto LABEL_60;
        }
        sub_247FE51A0(0, 0, 0, 0xC000000000uLL);
        uint64_t v19 = 0;
      }
      else
      {
        if (v6 == 0xC000000000 && v3 == 1 && (v4 | v2) == 0)
        {
          if ((~v10 & 0xC000000000) == 0 && (v10 & 0xFFFFFFFFFFFFLL) == 0xC000000000 && v8 == 1 && (v9 | v7) == 0)
          {
            BOOL v11 = 1;
            sub_247FE51A0((void *)1, 0, 0, 0xC000000000uLL);
            sub_247FE51A0((void *)1, 0, 0, 0xC000000000uLL);
            return v11;
          }
          goto LABEL_60;
        }
        if ((~v10 & 0xC000000000) != 0 || (v10 & 0xFFFFFFFFFFFFLL) != 0xC000000000 || v8 != 2 || (v9 | v7) != 0)
        {
LABEL_60:
          sub_247FE4184(*(id *)a2, *(id *)(a2 + 8), v9, v10);
          sub_247FE4184((id)v3, (id)v2, v4, v6);
          sub_247FE51A0((void *)v3, (id)v2, v4, v6);
          sub_247FE51A0((void *)v8, (id)v7, v9, v10);
          return 0;
        }
        sub_247FE51A0((void *)2, 0, 0, 0xC000000000uLL);
        uint64_t v19 = 2;
      }
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      unint64_t v24 = 0xC000000000;
LABEL_48:
      sub_247FE51A0((void *)v19, v22, v23, v24);
      return 1;
    default:
      if ((v10 & 0xC000000000) != 0) {
        goto LABEL_60;
      }
      v35[0] = *(void *)a1;
      v35[1] = v2;
      __int16 v36 = v4;
      char v37 = BYTE4(v4);
      int v38 = v6;
      char v39 = BYTE4(v6);
      char v40 = BYTE5(v6);
      v29[0] = v8;
      v29[1] = v7;
      __int16 v30 = v9;
      char v31 = BYTE4(v9);
      int v32 = v10;
      char v33 = BYTE4(v10);
      char v34 = BYTE5(v10);
      BOOL v11 = _s12AppleIDSetup9BLEDeviceV2eeoiySbAC_ACtFZ_0((uint64_t)v35, (uint64_t)v29);
      sub_247FE4184((id)v8, (id)v7, v9, v10);
      sub_247FE4184((id)v3, (id)v2, v4, v6);
      sub_247FE51A0((void *)v3, (id)v2, v4, v6);
      sub_247FE51A0((void *)v8, (id)v7, v9, v10);
      return v11;
  }
}

uint64_t _s12AppleIDSetup10SetupModelV5StateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  uint64_t v10 = *(void *)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v37 = *(void *)(a2 + 40);
  unsigned int v14 = *(unsigned __int8 *)(a2 + 48);
  switch(v8)
  {
    case -6:
      if (v14 != 250) {
        goto LABEL_15;
      }
      sub_2481282D8(v2, v3, v5, v4, v6, v7, 250);
      uint64_t v15 = v10;
      uint64_t v16 = v9;
      uint64_t v17 = v12;
      uint64_t v18 = v11;
      uint64_t v19 = v13;
      uint64_t v20 = v37;
      char v21 = -6;
      goto LABEL_17;
    case -5:
      if (v14 != 251) {
        goto LABEL_15;
      }
      sub_2481282D8(v2, v3, v5, v4, v6, v7, 251);
      uint64_t v15 = v10;
      uint64_t v16 = v9;
      uint64_t v17 = v12;
      uint64_t v18 = v11;
      uint64_t v19 = v13;
      uint64_t v20 = v37;
      char v21 = -5;
      goto LABEL_17;
    case -4:
      if (v14 != 252) {
        goto LABEL_15;
      }
      sub_2481282D8(v2, v3, v5, v4, v6, v7, 252);
      uint64_t v15 = v10;
      uint64_t v16 = v9;
      uint64_t v17 = v12;
      uint64_t v18 = v11;
      uint64_t v19 = v13;
      uint64_t v20 = v37;
      char v21 = -4;
      goto LABEL_17;
    case -3:
      if (v14 != 253) {
        goto LABEL_15;
      }
      sub_2481282D8(v2, v3, v5, v4, v6, v7, 253);
      uint64_t v15 = v10;
      uint64_t v16 = v9;
      uint64_t v17 = v12;
      uint64_t v18 = v11;
      uint64_t v19 = v13;
      uint64_t v20 = v37;
      char v21 = -3;
      goto LABEL_17;
    case -2:
      if (v14 != 254) {
        goto LABEL_15;
      }
      sub_2481282D8(v2, v3, v5, v4, v6, v7, 254);
      uint64_t v15 = v10;
      uint64_t v16 = v9;
      uint64_t v17 = v12;
      uint64_t v18 = v11;
      uint64_t v19 = v13;
      uint64_t v20 = v37;
      char v21 = -2;
      goto LABEL_17;
    case -1:
      if (v14 != 255) {
        goto LABEL_15;
      }
      sub_2481282D8(v2, v3, v5, v4, v6, v7, 255);
      uint64_t v15 = v10;
      uint64_t v16 = v9;
      uint64_t v17 = v12;
      uint64_t v18 = v11;
      uint64_t v19 = v13;
      uint64_t v20 = v37;
      char v21 = -1;
LABEL_17:
      sub_2481282D8(v15, v16, v17, v18, v19, v20, v21);
      char v25 = 1;
      break;
    default:
      if (v14 > 0xF9)
      {
LABEL_15:
        uint64_t v36 = *(void *)(a2 + 16);
        uint64_t v34 = *(void *)a2;
        uint64_t v35 = *(void *)(a2 + 8);
        char v26 = *(unsigned char *)(a1 + 48);
        char v27 = *(unsigned char *)(a2 + 48);
        uint64_t v28 = *(void *)a1;
        sub_2481282C4(*(void *)a2, v35, v36, v11, v13, v37, v14);
        sub_2481282C4(v28, v3, v5, v4, v6, v7, v26);
        sub_2481282D8(v28, v3, v5, v4, v6, v7, v26);
        sub_2481282D8(v34, v35, v36, v11, v13, v37, v27);
        char v25 = 0;
      }
      else
      {
        v40[0] = *(void *)a1;
        v40[1] = v3;
        v40[2] = v5;
        v40[3] = v4;
        v40[4] = v6;
        v40[5] = v7;
        char v41 = v8;
        v38[0] = v10;
        v38[1] = v9;
        _OWORD v38[2] = v12;
        v38[3] = v11;
        v38[4] = v13;
        v38[5] = v37;
        char v39 = v14;
        uint64_t v31 = v6;
        uint64_t v32 = v13;
        uint64_t v22 = v13;
        char v23 = v8;
        char v30 = v14;
        uint64_t v24 = v2;
        uint64_t v33 = v2;
        sub_2481282C4(v10, v9, v12, v11, v22, v37, v14);
        sub_2481282C4(v24, v3, v5, v4, v31, v7, v23);
        sub_2481282C4(v10, v9, v12, v11, v32, v37, v30);
        sub_2481282C4(v33, v3, v5, v4, v31, v7, v23);
        char v25 = static SetupError.== infix(_:_:)((uint64_t)v40, (uint64_t)v38);
        sub_2481282D8(v33, v3, v5, v4, v31, v7, v23);
        sub_2481282D8(v10, v9, v12, v11, v32, v37, v30);
        sub_2481282D8(v10, v9, v12, v11, v32, v37, v30);
        sub_2481282D8(v33, v3, v5, v4, v31, v7, v23);
      }
      break;
  }
  return v25 & 1;
}

uint64_t _s12AppleIDSetup10SetupModelV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = *((void *)a1 + 3);
  int v5 = *((_DWORD *)a1 + 8);
  __int16 v6 = *((_WORD *)a1 + 18);
  long long v41 = *(_OWORD *)(a1 + 8);
  *(void *)&long long v42 = v4;
  WORD6(v42) = v6;
  DWORD2(v42) = v5;
  uint64_t v7 = *((void *)a2 + 3);
  int v8 = *((_DWORD *)a2 + 8);
  __int16 v9 = *((_WORD *)a2 + 18);
  long long v29 = *(_OWORD *)(a2 + 8);
  *(void *)&long long v30 = v7;
  WORD6(v30) = v9;
  DWORD2(v30) = v8;
  if (!_s12AppleIDSetup10SetupModelV10RemoteRoleO2eeoiySbAE_AEtFZ_0((uint64_t)&v41, (uint64_t)&v29)) {
    return 0;
  }
  unsigned __int8 v10 = a1[88];
  long long v11 = *(_OWORD *)(a1 + 56);
  long long v41 = *(_OWORD *)(a1 + 40);
  long long v42 = v11;
  long long v43 = *(_OWORD *)(a1 + 72);
  LOBYTE(v44) = v10;
  unsigned __int8 v12 = a2[88];
  long long v13 = *(_OWORD *)(a2 + 56);
  long long v29 = *(_OWORD *)(a2 + 40);
  long long v30 = v13;
  long long v31 = *(_OWORD *)(a2 + 72);
  LOBYTE(v32) = v12;
  if ((_s12AppleIDSetup10SetupModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)&v41, (uint64_t)&v29) & 1) == 0) {
    return 0;
  }
  long long v14 = *((_OWORD *)a1 + 15);
  long long v49 = *((_OWORD *)a1 + 14);
  long long v50 = v14;
  long long v15 = *((_OWORD *)a1 + 17);
  long long v51 = *((_OWORD *)a1 + 16);
  long long v52 = v15;
  long long v16 = *((_OWORD *)a1 + 11);
  long long v45 = *((_OWORD *)a1 + 10);
  long long v46 = v16;
  long long v17 = *((_OWORD *)a1 + 13);
  long long v47 = *((_OWORD *)a1 + 12);
  long long v48 = v17;
  long long v18 = *((_OWORD *)a1 + 7);
  long long v41 = *((_OWORD *)a1 + 6);
  long long v42 = v18;
  long long v19 = *((_OWORD *)a1 + 9);
  long long v43 = *((_OWORD *)a1 + 8);
  long long v44 = v19;
  long long v20 = *((_OWORD *)a2 + 15);
  long long v37 = *((_OWORD *)a2 + 14);
  long long v38 = v20;
  long long v21 = *((_OWORD *)a2 + 17);
  long long v39 = *((_OWORD *)a2 + 16);
  long long v40 = v21;
  long long v22 = *((_OWORD *)a2 + 11);
  long long v33 = *((_OWORD *)a2 + 10);
  long long v34 = v22;
  long long v23 = *((_OWORD *)a2 + 13);
  long long v35 = *((_OWORD *)a2 + 12);
  long long v36 = v23;
  long long v24 = *((_OWORD *)a2 + 7);
  long long v29 = *((_OWORD *)a2 + 6);
  long long v30 = v24;
  long long v25 = *((_OWORD *)a2 + 9);
  long long v31 = *((_OWORD *)a2 + 8);
  long long v32 = v25;
  if (!_s12AppleIDSetup14DiscoveryModelV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v41, (unsigned __int8 *)&v29)) {
    return 0;
  }
  uint64_t v26 = type metadata accessor for SetupModel();
  if (!_s12AppleIDSetup19AuthenticationModelV2eeoiySbAC_ACtFZ_0((uint64_t)&a1[*(int *)(v26 + 32)], (uint64_t)&a2[*(int *)(v26 + 32)]))return 0; {
  uint64_t v27 = *(int *)(v26 + 36);
  }
  return _s12AppleIDSetup11SignInModelV2eeoiySbAC_ACtFZ_0((uint64_t)&a1[v27], (uint64_t)&a2[v27]);
}

uint64_t sub_2481282C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 <= 0xF9u) {
    return sub_247FA9804(a1, a2, a3, a4, a5, a6, a7);
  }
  return a1;
}

uint64_t sub_2481282D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 <= 0xF9u) {
    return sub_247FA98EC(a1, a2, a3, a4, a5, a6, a7);
  }
  return a1;
}

uint64_t sub_2481282EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_248128354()
{
  unint64_t result = qword_2692DB878;
  if (!qword_2692DB878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB878);
  }
  return result;
}

unint64_t sub_2481283A8()
{
  unint64_t result = qword_2692DB880;
  if (!qword_2692DB880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB880);
  }
  return result;
}

unint64_t sub_2481283FC()
{
  unint64_t result = qword_2692DB888;
  if (!qword_2692DB888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB888);
  }
  return result;
}

unint64_t sub_248128450()
{
  unint64_t result = qword_2692DB890;
  if (!qword_2692DB890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB890);
  }
  return result;
}

unint64_t sub_2481284A4()
{
  unint64_t result = qword_2692DB8A0;
  if (!qword_2692DB8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB8A0);
  }
  return result;
}

unint64_t sub_2481284F8()
{
  unint64_t result = qword_2692DB8A8;
  if (!qword_2692DB8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB8A8);
  }
  return result;
}

unint64_t sub_24812854C()
{
  unint64_t result = qword_2692DB8B0;
  if (!qword_2692DB8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB8B0);
  }
  return result;
}

uint64_t sub_2481285A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_248128608()
{
  unint64_t result = qword_2692DB8F8;
  if (!qword_2692DB8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB8F8);
  }
  return result;
}

unint64_t sub_24812865C()
{
  unint64_t result = qword_2692DB900;
  if (!qword_2692DB900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB900);
  }
  return result;
}

unint64_t sub_2481286B0()
{
  unint64_t result = qword_2692DB908;
  if (!qword_2692DB908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB908);
  }
  return result;
}

unint64_t sub_248128704()
{
  unint64_t result = qword_2692DB910;
  if (!qword_2692DB910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB910);
  }
  return result;
}

unint64_t sub_248128758()
{
  unint64_t result = qword_2692DB918;
  if (!qword_2692DB918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB918);
  }
  return result;
}

unint64_t sub_2481287AC()
{
  unint64_t result = qword_2692DB920;
  if (!qword_2692DB920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB920);
  }
  return result;
}

unint64_t sub_248128800()
{
  unint64_t result = qword_2692DB928;
  if (!qword_2692DB928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB928);
  }
  return result;
}

unint64_t sub_248128854()
{
  unint64_t result = qword_2692DB930;
  if (!qword_2692DB930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB930);
  }
  return result;
}

unint64_t sub_2481288A8()
{
  unint64_t result = qword_2692DB990;
  if (!qword_2692DB990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB990);
  }
  return result;
}

unint64_t sub_2481288FC()
{
  unint64_t result = qword_2692DB998;
  if (!qword_2692DB998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB998);
  }
  return result;
}

unint64_t sub_248128950()
{
  unint64_t result = qword_2692DB9A0;
  if (!qword_2692DB9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB9A0);
  }
  return result;
}

unint64_t sub_2481289A4()
{
  unint64_t result = qword_2692DB9F8;
  if (!qword_2692DB9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DB9F8);
  }
  return result;
}

unint64_t sub_2481289F8()
{
  unint64_t result = qword_2692DBA00;
  if (!qword_2692DBA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA00);
  }
  return result;
}

unint64_t sub_248128A4C()
{
  unint64_t result = qword_2692DBA08;
  if (!qword_2692DBA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA08);
  }
  return result;
}

unint64_t sub_248128AA0()
{
  unint64_t result = qword_2692DBA10;
  if (!qword_2692DBA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA10);
  }
  return result;
}

unint64_t sub_248128AF4()
{
  unint64_t result = qword_2692DBA18;
  if (!qword_2692DBA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA18);
  }
  return result;
}

unint64_t sub_248128B48()
{
  unint64_t result = qword_2692DBA20;
  if (!qword_2692DBA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA20);
  }
  return result;
}

unint64_t sub_248128B9C()
{
  unint64_t result = qword_2692DBA28;
  if (!qword_2692DBA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA28);
  }
  return result;
}

uint64_t sub_248128BF0(void *a1)
{
  a1[1] = sub_248128CE4(&qword_2692DB608, (void (*)(uint64_t))type metadata accessor for SetupModel);
  a1[2] = sub_248128CE4(&qword_2692DB5F0, (void (*)(uint64_t))type metadata accessor for SetupModel);
  uint64_t result = sub_248128CE4(&qword_2692DBA68, (void (*)(uint64_t))type metadata accessor for SetupModel);
  a1[3] = result;
  return result;
}

uint64_t sub_248128C9C()
{
  return sub_248128CE4(&qword_2692DBA70, (void (*)(uint64_t))type metadata accessor for SetupModel);
}

uint64_t sub_248128CE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_248128D2C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248128D6C(a1, a2, a3, (uint64_t (*)(void))sub_24812854C, (uint64_t (*)(void))sub_248128450, (uint64_t (*)(void))sub_248128DC0);
}

uint64_t sub_248128D6C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_248128DC0()
{
  unint64_t result = qword_2692DBA78;
  if (!qword_2692DBA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA78);
  }
  return result;
}

unint64_t sub_248128E18()
{
  unint64_t result = qword_2692DBA80;
  if (!qword_2692DBA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA80);
  }
  return result;
}

unint64_t sub_248128E70()
{
  unint64_t result = qword_2692DBA88;
  if (!qword_2692DBA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA88);
  }
  return result;
}

uint64_t sub_248128EC4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248128D6C(a1, a2, a3, (uint64_t (*)(void))sub_2481284A4, (uint64_t (*)(void))sub_2481283A8, (uint64_t (*)(void))sub_248128F04);
}

unint64_t sub_248128F04()
{
  unint64_t result = qword_2692DBA90;
  if (!qword_2692DBA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA90);
  }
  return result;
}

uint64_t sub_248128F58(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248128D6C(a1, a2, a3, (uint64_t (*)(void))sub_2481284F8, (uint64_t (*)(void))sub_2481283FC, (uint64_t (*)(void))sub_248128F98);
}

unint64_t sub_248128F98()
{
  unint64_t result = qword_2692DBA98;
  if (!qword_2692DBA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBA98);
  }
  return result;
}

unint64_t sub_248128FF0()
{
  unint64_t result = qword_2692DBAA0;
  if (!qword_2692DBAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAA0);
  }
  return result;
}

unsigned char *initializeBufferWithCopyOfBuffer for SetupModel(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v14 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    __int16 v6 = (void *)a2[1];
    uint64_t v7 = (void *)a2[2];
    uint64_t v8 = a2[3];
    uint64_t v9 = *((unsigned __int16 *)a2 + 18);
    uint64_t v10 = *((unsigned int *)a2 + 8);
    sub_247FE4184(v6, v7, v8, v10 | (v9 << 32));
    *((void *)v4 + 1) = v6;
    *((void *)v4 + 2) = v7;
    *((void *)v4 + 3) = v8;
    *((_WORD *)v4 + 18) = v9;
    *((_DWORD *)v4 + 8) = v10;
    unsigned int v11 = *((unsigned __int8 *)a2 + 88);
    uint64_t v180 = v4;
    if (v11 <= 0xF9)
    {
      uint64_t v15 = a2[5];
      uint64_t v16 = a2[6];
      uint64_t v17 = a2[7];
      uint64_t v18 = a2[8];
      uint64_t v19 = a2[9];
      uint64_t v20 = a2[10];
      sub_247FA9804(v15, v16, v17, v18, v19, v20, v11);
      *((void *)v180 + 5) = v15;
      *((void *)v180 + 6) = v16;
      *((void *)v180 + 7) = v17;
      uint64_t v4 = v180;
      *((void *)v180 + 8) = v18;
      *((void *)v180 + 9) = v19;
      *((void *)v180 + 10) = v20;
      v180[88] = v11;
    }
    else
    {
      long long v12 = *(_OWORD *)(a2 + 7);
      *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(v4 + 56) = v12;
      *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 9);
      v4[88] = *((unsigned char *)a2 + 88);
    }
    v4[96] = *((unsigned char *)a2 + 96);
    v4[97] = *((unsigned char *)a2 + 97);
    uint64_t v21 = a2[14];
    *((void *)v4 + 13) = a2[13];
    *((void *)v4 + 14) = v21;
    uint64_t v22 = a2[16];
    *((void *)v4 + 15) = a2[15];
    *((void *)v4 + 16) = v22;
    *((void *)v4 + 17) = a2[17];
    *((_WORD *)v4 + 72) = *((_WORD *)a2 + 72);
    uint64_t v23 = a2[20];
    *((void *)v4 + 19) = a2[19];
    *((void *)v4 + 20) = v23;
    uint64_t v24 = a2[21];
    uint64_t v25 = a2[22];
    uint64_t v26 = a2[23];
    uint64_t v27 = a2[24];
    uint64_t v29 = a2[25];
    uint64_t v28 = a2[26];
    unsigned int v30 = *((unsigned __int8 *)a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FE41AC(v24, v25, v26, v27, v29, v28, v30);
    *((void *)v180 + 21) = v24;
    *((void *)v180 + 22) = v25;
    *((void *)v180 + 23) = v26;
    *((void *)v180 + 24) = v27;
    *((void *)v180 + 25) = v29;
    *((void *)v180 + 26) = v28;
    v180[216] = v30;
    uint64_t v31 = a2[29];
    if (v31)
    {
      *((void *)v180 + 28) = a2[28];
      *((void *)v180 + 29) = v31;
      uint64_t v32 = a2[31];
      *((void *)v180 + 30) = a2[30];
      *((void *)v180 + 31) = v32;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v33 = *((_OWORD *)a2 + 15);
      *((_OWORD *)v180 + 14) = *((_OWORD *)a2 + 14);
      *((_OWORD *)v180 + 15) = v33;
    }
    uint64_t v34 = a2[33];
    *((void *)v180 + 32) = a2[32];
    *((void *)v180 + 33) = v34;
    uint64_t v35 = a2[35];
    *((void *)v180 + 34) = a2[34];
    *((void *)v180 + 35) = v35;
    uint64_t v36 = *(int *)(a3 + 32);
    long long v37 = &v180[v36];
    long long v38 = (uint64_t *)((char *)a2 + v36);
    uint64_t v39 = type metadata accessor for IdMSAccount();
    uint64_t v40 = *(void *)(v39 - 8);
    long long v41 = *(unsigned int (**)(void *, uint64_t, int *))(v40 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v177 = (int *)v39;
    uint64_t v160 = v40;
    uint64_t v161 = v41;
    long long v178 = v37;
    if (v41(v38, 1, (int *)v39))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = v38[1];
      *long long v37 = *v38;
      v37[1] = v43;
      uint64_t v44 = v38[3];
      _OWORD v37[2] = v38[2];
      v37[3] = v44;
      uint64_t v45 = v38[5];
      v37[4] = v38[4];
      v37[5] = v45;
      uint64_t v46 = v38[7];
      v37[6] = v38[6];
      v37[7] = v46;
      uint64_t v47 = v38[9];
      v178[8] = v38[8];
      v178[9] = v47;
      uint64_t v48 = *(int *)(v39 + 20);
      uint64_t v173 = (char *)v178 + v48;
      uint64_t v166 = (char *)v38 + v48;
      uint64_t v49 = sub_248174700();
      long long v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v173, v166, v49);
      uint64_t v51 = v177[6];
      long long v52 = (char *)v178 + v51;
      uint64_t v53 = (char *)v38 + v51;
      uint64_t v54 = *(void *)v53;
      uint64_t v55 = *((void *)v53 + 1);
      uint64_t v57 = *((void *)v53 + 2);
      uint64_t v56 = *((void *)v53 + 3);
      uint64_t v58 = *((void *)v53 + 4);
      uint64_t v59 = *((void *)v53 + 5);
      uint64_t v60 = *((void *)v53 + 6);
      uint64_t v164 = *((void *)v53 + 7);
      uint64_t v167 = *((void *)v53 + 8);
      LOBYTE(v173) = v53[72];
      sub_247FABF8C(*(void *)v53, v55, v57, v56, v58, v59, v60, v164, v167, (char)v173);
      *(void *)long long v52 = v54;
      *((void *)v52 + 1) = v55;
      *((void *)v52 + 2) = v57;
      *((void *)v52 + 3) = v56;
      *((void *)v52 + 4) = v58;
      *((void *)v52 + 5) = v59;
      long long v37 = v178;
      *((void *)v52 + 6) = v60;
      *((void *)v52 + 7) = v164;
      *((void *)v52 + 8) = v167;
      v52[72] = (char)v173;
      *(void *)((char *)v178 + v177[7]) = *(void *)((char *)v38 + v177[7]);
      uint64_t v61 = *(void (**)(void *, void, uint64_t, int *))(v160 + 56);
      swift_bridgeObjectRetain();
      v61(v178, 0, 1, v177);
    }
    long long v62 = (int *)type metadata accessor for AuthenticationModel();
    uint64_t v63 = v62[5];
    unsigned __int8 v64 = (void *)((char *)v37 + v63);
    unsigned int v65 = (void *)((char *)v38 + v63);
    uint64_t v66 = v65[1];
    if (v66)
    {
      *unsigned __int8 v64 = *v65;
      v64[1] = v66;
      uint64_t v67 = v65[3];
      v64[2] = v65[2];
      v64[3] = v67;
      uint64_t v68 = v65[5];
      v64[4] = v65[4];
      v64[5] = v68;
      uint64_t v69 = v65[7];
      v64[6] = v65[6];
      v64[7] = v69;
      unint64_t v70 = v38;
      uint64_t v71 = v65[9];
      void v64[8] = v65[8];
      v64[9] = v71;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v38 = v70;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v72 = *((_OWORD *)v65 + 3);
      *((_OWORD *)v64 + 2) = *((_OWORD *)v65 + 2);
      *((_OWORD *)v64 + 3) = v72;
      *((_OWORD *)v64 + 4) = *((_OWORD *)v65 + 4);
      long long v73 = *((_OWORD *)v65 + 1);
      *(_OWORD *)unsigned __int8 v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v73;
    }
    unsigned int v169 = v38;
    *((unsigned char *)v37 + v62[6]) = *((unsigned char *)v38 + v62[6]);
    uint64_t v74 = v62[7];
    char v75 = (void *)((char *)v37 + v74);
    char v76 = (void *)((char *)v38 + v74);
    uint64_t v77 = v76[1];
    *char v75 = *v76;
    v75[1] = v77;
    *(void *)((char *)v37 + v62[8]) = *(void *)((char *)v38 + v62[8]);
    *((unsigned char *)v37 + v62[9]) = *((unsigned char *)v38 + v62[9]);
    uint64_t v78 = v62[10];
    uint64_t v79 = (char *)v37 + v78;
    uint64_t v80 = (char *)v38 + v78;
    unint64_t v163 = (void *)*((void *)v80 + 1);
    uint64_t v165 = *(void **)v80;
    uint64_t v81 = (void *)*((void *)v80 + 3);
    uint64_t v162 = (void *)*((void *)v80 + 2);
    uint64_t v168 = v62;
    long long v83 = (void *)*((void *)v80 + 4);
    long long v82 = (void *)*((void *)v80 + 5);
    uint64_t v84 = *((void *)v80 + 6);
    uint64_t v174 = (void *)*((void *)v80 + 7);
    uint64_t v86 = (void *)*((void *)v80 + 8);
    uint64_t v85 = (void *)*((void *)v80 + 9);
    char v87 = v80[80];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247F986A0(v165, v163, v162, v81, v83, v82, v84, v174, v86, v85, v87);
    *(void *)uint64_t v79 = v165;
    *((void *)v79 + 1) = v163;
    *((void *)v79 + 2) = v162;
    *((void *)v79 + 3) = v81;
    *((void *)v79 + 4) = v83;
    *((void *)v79 + 5) = v82;
    *((void *)v79 + 6) = v84;
    *((void *)v79 + 7) = v174;
    *((void *)v79 + 8) = v86;
    *((void *)v79 + 9) = v85;
    v79[80] = v87;
    uint64_t v88 = v168[11];
    uint64_t v89 = (void *)((char *)v178 + v88);
    uint64_t v90 = (void *)((char *)v169 + v88);
    if (*v90)
    {
      uint64_t v91 = v90[1];
      *uint64_t v89 = *v90;
      v89[1] = v91;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v89 = *(_OWORD *)v90;
    }
    uint64_t v92 = *(int *)(a3 + 36);
    uint64_t v93 = &v180[v92];
    long long v94 = (uint64_t *)((char *)a2 + v92);
    if (v161(v94, 1, v177))
    {
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
    }
    else
    {
      uint64_t v96 = v94[1];
      *uint64_t v93 = *v94;
      v93[1] = v96;
      uint64_t v97 = v94[3];
      v93[2] = v94[2];
      v93[3] = v97;
      uint64_t v98 = v94[5];
      v93[4] = v94[4];
      v93[5] = v98;
      uint64_t v99 = v94[7];
      v93[6] = v94[6];
      v93[7] = v99;
      uint64_t v100 = v94[9];
      v93[8] = v94[8];
      v93[9] = v100;
      uint64_t v101 = v177[5];
      v179 = (char *)v93 + v101;
      uint64_t v175 = (char *)v94 + v101;
      uint64_t v102 = sub_248174700();
      long long v171 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v171(v179, v175, v102);
      uint64_t v103 = v177[6];
      uint64_t v104 = (char *)v93 + v103;
      uint64_t v105 = (char *)v94 + v103;
      uint64_t v106 = *((void *)v105 + 1);
      uint64_t v107 = *((void *)v105 + 2);
      uint64_t v108 = *((void *)v105 + 3);
      uint64_t v109 = *((void *)v105 + 4);
      uint64_t v110 = *((void *)v105 + 5);
      uint64_t v111 = *((void *)v105 + 6);
      uint64_t v112 = *((void *)v105 + 7);
      uint64_t v172 = *(void *)v105;
      uint64_t v176 = *((void *)v105 + 8);
      LOBYTE(v179) = v105[72];
      sub_247FABF8C(*(void *)v105, v106, v107, v108, v109, v110, v111, v112, v176, (char)v179);
      *(void *)uint64_t v104 = v172;
      *((void *)v104 + 1) = v106;
      *((void *)v104 + 2) = v107;
      *((void *)v104 + 3) = v108;
      *((void *)v104 + 4) = v109;
      *((void *)v104 + 5) = v110;
      *((void *)v104 + 6) = v111;
      *((void *)v104 + 7) = v112;
      *((void *)v104 + 8) = v176;
      v104[72] = (char)v179;
      *(void *)((char *)v93 + v177[7]) = *(void *)((char *)v94 + v177[7]);
      uint64_t v113 = *(void (**)(void *, void, uint64_t, int *))(v160 + 56);
      swift_bridgeObjectRetain();
      v113(v93, 0, 1, v177);
    }
    uint64_t v114 = (int *)type metadata accessor for SignInModel();
    uint64_t v115 = v114[5];
    uint64_t v116 = (char *)v93 + v115;
    uint64_t v117 = (void *)((char *)v94 + v115);
    uint64_t v118 = v117[1];
    if (v118)
    {
      *(void *)uint64_t v116 = *v117;
      *((void *)v116 + 1) = v118;
      uint64_t v119 = v117[3];
      *((void *)v116 + 2) = v117[2];
      *((void *)v116 + 3) = v119;
      uint64_t v120 = v117[5];
      *((void *)v116 + 4) = v117[4];
      *((void *)v116 + 5) = v120;
      uint64_t v121 = v117[7];
      *((void *)v116 + 6) = v117[6];
      *((void *)v116 + 7) = v121;
      uint64_t v122 = v117[9];
      *((void *)v116 + 8) = v117[8];
      *((void *)v116 + 9) = v122;
      uint64_t v123 = v117 + 10;
      unint64_t v124 = v117[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v124 >> 60 == 15)
      {
        *((_OWORD *)v116 + 5) = *(_OWORD *)v123;
      }
      else
      {
        uint64_t v128 = *v123;
        sub_247FB6C20(*v123, v124);
        *((void *)v116 + 10) = v128;
        *((void *)v116 + 11) = v124;
      }
    }
    else
    {
      long long v125 = *((_OWORD *)v117 + 3);
      *((_OWORD *)v116 + 2) = *((_OWORD *)v117 + 2);
      *((_OWORD *)v116 + 3) = v125;
      long long v126 = *((_OWORD *)v117 + 5);
      *((_OWORD *)v116 + 4) = *((_OWORD *)v117 + 4);
      *((_OWORD *)v116 + 5) = v126;
      long long v127 = *((_OWORD *)v117 + 1);
      *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
      *((_OWORD *)v116 + 1) = v127;
    }
    *(void *)((char *)v93 + v114[6]) = *(void *)((char *)v94 + v114[6]);
    *(void *)((char *)v93 + v114[7]) = *(void *)((char *)v94 + v114[7]);
    *((unsigned char *)v93 + v114[8]) = *((unsigned char *)v94 + v114[8]);
    *((unsigned char *)v93 + v114[9]) = *((unsigned char *)v94 + v114[9]);
    uint64_t v129 = v114[10];
    uint64_t v130 = (void *)((char *)v93 + v129);
    unint64_t v131 = (void *)((char *)v94 + v129);
    uint64_t v132 = *(void *)((char *)v94 + v129 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v132)
    {
      *uint64_t v130 = *v131;
      v130[1] = v132;
      uint64_t v133 = v131[2];
      uint64_t v134 = v131[3];
      v130[2] = v133;
      v130[3] = v134;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v135 = *((_OWORD *)v131 + 1);
      *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
      *((_OWORD *)v130 + 1) = v135;
    }
    uint64_t v136 = v114[11];
    uint64_t v137 = (void *)((char *)v93 + v136);
    uint64_t v138 = (void *)((char *)v94 + v136);
    uint64_t v139 = v138[1];
    *uint64_t v137 = *v138;
    v137[1] = v139;
    uint64_t v140 = v114[12];
    uint64_t v141 = *(void **)((char *)v94 + v140);
    *(void *)((char *)v93 + v140) = v141;
    uint64_t v142 = v114[13];
    uint64_t v143 = (char *)v93 + v142;
    uint64_t v144 = (char *)v94 + v142;
    uint64_t v145 = *(void *)v144;
    uint64_t v146 = *((void *)v144 + 1);
    char v147 = v144[16];
    swift_bridgeObjectRetain();
    id v148 = v141;
    sub_247FE42A8(v145, v146, v147);
    *(void *)uint64_t v143 = v145;
    *((void *)v143 + 1) = v146;
    v143[16] = v147;
    uint64_t v149 = v114[14];
    char v150 = (void *)((char *)v93 + v149);
    char v151 = (void *)((char *)v94 + v149);
    uint64_t v152 = v151[1];
    *char v150 = *v151;
    v150[1] = v152;
    *((unsigned char *)v93 + v114[15]) = *((unsigned char *)v94 + v114[15]);
    uint64_t v153 = v114[16];
    char v154 = (char *)v93 + v153;
    uint64_t v155 = (char *)v94 + v153;
    unint64_t v156 = *(void *)((char *)v94 + v153 + 8);
    swift_bridgeObjectRetain();
    if (v156 >= 3)
    {
      *(void *)char v154 = *(void *)v155;
      *((void *)v154 + 1) = v156;
      uint64_t v158 = *((void *)v155 + 3);
      *((void *)v154 + 2) = *((void *)v155 + 2);
      *((void *)v154 + 3) = v158;
      v154[32] = v155[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v157 = *((_OWORD *)v155 + 1);
      *(_OWORD *)char v154 = *(_OWORD *)v155;
      *((_OWORD *)v154 + 1) = v157;
      v154[32] = v155[32];
    }
    return v180;
  }
  return (unsigned char *)v14;
}

unint64_t destroy for SetupModel(uint64_t a1, uint64_t a2)
{
  sub_247FE51A0(*(void **)(a1 + 8), *(id *)(a1 + 16), *(void *)(a1 + 24), *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int16 *)(a1 + 36) << 32));
  unsigned int v4 = *(unsigned __int8 *)(a1 + 88);
  if (v4 <= 0xF9) {
    sub_247FA98EC(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(a1 + 168), *(void *)(a1 + 176), *(void *)(a1 + 184), *(void *)(a1 + 192), *(void *)(a1 + 200), *(void *)(a1 + 208), *(unsigned __int8 *)(a1 + 216));
  if (*(void *)(a1 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = type metadata accessor for IdMSAccount();
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);
  if (!v7(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + *(int *)(v6 + 20);
    uint64_t v9 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = v5 + *(int *)(v6 + 24);
    sub_247FAC1EC(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(void *)(v10 + 48), *(void *)(v10 + 56), *(void *)(v10 + 64), *(unsigned char *)(v10 + 72));
    swift_bridgeObjectRelease();
  }
  unsigned int v11 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v5 + v11[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v5 + v11[10];
  sub_247F98958(*(void **)v12, *(void **)(v12 + 8), *(void **)(v12 + 16), *(void **)(v12 + 24), *(void *)(v12 + 32), *(void **)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void **)(v12 + 64), *(void **)(v12 + 72), *(unsigned char *)(v12 + 80));
  if (*(void *)(v5 + v11[11])) {
    swift_release();
  }
  uint64_t v13 = a1 + *(int *)(a2 + 36);
  if (!v7(v13, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v13 + *(int *)(v6 + 20);
    uint64_t v15 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    uint64_t v16 = v13 + *(int *)(v6 + 24);
    sub_247FAC1EC(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(void *)(v16 + 24), *(void *)(v16 + 32), *(void *)(v16 + 40), *(void *)(v16 + 48), *(void *)(v16 + 56), *(void *)(v16 + 64), *(unsigned char *)(v16 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = (int *)type metadata accessor for SignInModel();
  uint64_t v18 = (void *)(v13 + v17[5]);
  if (v18[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v19 = v18[11];
    if (v19 >> 60 != 15) {
      sub_247FB6CCC(v18[10], v19);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + v17[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v13 + v17[13]), *(void *)(v13 + v17[13] + 8), *(unsigned char *)(v13 + v17[13] + 16));
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(v13 + v17[16] + 8);
  if (result >= 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *initializeWithCopy for SetupModel(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = a1;
  *a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 36);
  uint64_t v9 = *(unsigned int *)(a2 + 32);
  sub_247FE4184(v5, v6, v7, v9 | (v8 << 32));
  *((void *)v4 + 1) = v5;
  *((void *)v4 + 2) = v6;
  *((void *)v4 + 3) = v7;
  *((_WORD *)v4 + 18) = v8;
  *((_DWORD *)v4 + 8) = v9;
  unsigned int v10 = *(unsigned __int8 *)(a2 + 88);
  uint64_t v175 = v4;
  if (v10 <= 0xF9)
  {
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    uint64_t v14 = *(void *)(a2 + 56);
    uint64_t v15 = *(void *)(a2 + 64);
    uint64_t v16 = *(void *)(a2 + 72);
    uint64_t v17 = *(void *)(a2 + 80);
    sub_247FA9804(v12, v13, v14, v15, v16, v17, v10);
    *((void *)v175 + 5) = v12;
    *((void *)v175 + 6) = v13;
    *((void *)v175 + 7) = v14;
    unsigned int v4 = v175;
    *((void *)v175 + 8) = v15;
    *((void *)v175 + 9) = v16;
    *((void *)v175 + 10) = v17;
    v175[88] = v10;
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(v4 + 56) = v11;
    *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 72);
    v4[88] = *(unsigned char *)(a2 + 88);
  }
  v4[96] = *(unsigned char *)(a2 + 96);
  v4[97] = *(unsigned char *)(a2 + 97);
  uint64_t v18 = *(void *)(a2 + 112);
  *((void *)v4 + 13) = *(void *)(a2 + 104);
  *((void *)v4 + 14) = v18;
  uint64_t v19 = *(void *)(a2 + 128);
  *((void *)v4 + 15) = *(void *)(a2 + 120);
  *((void *)v4 + 16) = v19;
  *((void *)v4 + 17) = *(void *)(a2 + 136);
  *((_WORD *)v4 + 72) = *(_WORD *)(a2 + 144);
  uint64_t v20 = *(void *)(a2 + 160);
  *((void *)v4 + 19) = *(void *)(a2 + 152);
  *((void *)v4 + 20) = v20;
  uint64_t v21 = *(void *)(a2 + 168);
  uint64_t v22 = *(void *)(a2 + 176);
  uint64_t v23 = *(void *)(a2 + 184);
  uint64_t v24 = *(void *)(a2 + 192);
  uint64_t v26 = *(void *)(a2 + 200);
  uint64_t v25 = *(void *)(a2 + 208);
  unsigned int v27 = *(unsigned __int8 *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE41AC(v21, v22, v23, v24, v26, v25, v27);
  *((void *)v175 + 21) = v21;
  *((void *)v175 + 22) = v22;
  *((void *)v175 + 23) = v23;
  *((void *)v175 + 24) = v24;
  *((void *)v175 + 25) = v26;
  *((void *)v175 + 26) = v25;
  v175[216] = v27;
  uint64_t v28 = *(void *)(a2 + 232);
  if (v28)
  {
    *((void *)v175 + 28) = *(void *)(a2 + 224);
    *((void *)v175 + 29) = v28;
    uint64_t v29 = *(void *)(a2 + 248);
    *((void *)v175 + 30) = *(void *)(a2 + 240);
    *((void *)v175 + 31) = v29;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v30 = *(_OWORD *)(a2 + 240);
    *((_OWORD *)v175 + 14) = *(_OWORD *)(a2 + 224);
    *((_OWORD *)v175 + 15) = v30;
  }
  uint64_t v31 = *(void *)(a2 + 264);
  *((void *)v175 + 32) = *(void *)(a2 + 256);
  *((void *)v175 + 33) = v31;
  uint64_t v32 = *(void *)(a2 + 280);
  *((void *)v175 + 34) = *(void *)(a2 + 272);
  *((void *)v175 + 35) = v32;
  uint64_t v33 = *(int *)(a3 + 32);
  uint64_t v34 = &v175[v33];
  uint64_t v35 = (void *)(a2 + v33);
  uint64_t v36 = type metadata accessor for IdMSAccount();
  uint64_t v157 = *(void *)(v36 - 8);
  long long v37 = *(unsigned int (**)(void *, uint64_t, int *))(v157 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v165 = v37;
  uint64_t v172 = (int *)v36;
  uint64_t v173 = v34;
  uint64_t v166 = v35;
  if (v37(v35, 1, (int *)v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v39;
    uint64_t v40 = v35[3];
    _OWORD v34[2] = v35[2];
    void v34[3] = v40;
    uint64_t v41 = v35[5];
    v34[4] = v35[4];
    v34[5] = v41;
    uint64_t v42 = v35[7];
    v34[6] = v35[6];
    v34[7] = v42;
    uint64_t v43 = v35[9];
    v173[8] = v35[8];
    v173[9] = v43;
    uint64_t v44 = *(int *)(v36 + 20);
    uint64_t v45 = (char *)v173 + v44;
    unint64_t v163 = (char *)v35 + v44;
    uint64_t v46 = sub_248174700();
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(v45, v163, v46);
    uint64_t v48 = v172[6];
    uint64_t v49 = (char *)v173 + v48;
    long long v50 = (char *)v166 + v48;
    uint64_t v51 = *(void *)v50;
    uint64_t v52 = *((void *)v50 + 1);
    uint64_t v53 = *((void *)v50 + 2);
    uint64_t v54 = *((void *)v50 + 3);
    uint64_t v55 = *((void *)v50 + 4);
    uint64_t v56 = *((void *)v50 + 5);
    uint64_t v57 = *((void *)v50 + 6);
    uint64_t v161 = *((void *)v50 + 7);
    uint64_t v58 = *((void *)v50 + 8);
    LOBYTE(v163) = v50[72];
    sub_247FABF8C(*(void *)v50, v52, v53, v54, v55, v56, v57, v161, v58, (char)v163);
    *(void *)uint64_t v49 = v51;
    *((void *)v49 + 1) = v52;
    *((void *)v49 + 2) = v53;
    *((void *)v49 + 3) = v54;
    *((void *)v49 + 4) = v55;
    *((void *)v49 + 5) = v56;
    uint64_t v34 = v173;
    uint64_t v35 = v166;
    *((void *)v49 + 6) = v57;
    *((void *)v49 + 7) = v161;
    *((void *)v49 + 8) = v58;
    v49[72] = (char)v163;
    *(void *)((char *)v173 + v172[7]) = *(void *)((char *)v166 + v172[7]);
    uint64_t v59 = *(void (**)(void *, void, uint64_t, int *))(v157 + 56);
    swift_bridgeObjectRetain();
    v59(v173, 0, 1, v172);
  }
  uint64_t v60 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v61 = v60[5];
  long long v62 = (void *)((char *)v34 + v61);
  uint64_t v63 = (void *)((char *)v35 + v61);
  uint64_t v64 = v63[1];
  if (v64)
  {
    *long long v62 = *v63;
    v62[1] = v64;
    uint64_t v65 = v63[3];
    v62[2] = v63[2];
    v62[3] = v65;
    uint64_t v66 = v63[5];
    v62[4] = v63[4];
    v62[5] = v66;
    uint64_t v67 = v63[7];
    v62[6] = v63[6];
    v62[7] = v67;
    uint64_t v68 = v63[9];
    v62[8] = v63[8];
    v62[9] = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v69 = *((_OWORD *)v63 + 3);
    *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
    *((_OWORD *)v62 + 3) = v69;
    *((_OWORD *)v62 + 4) = *((_OWORD *)v63 + 4);
    long long v70 = *((_OWORD *)v63 + 1);
    *(_OWORD *)long long v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v70;
  }
  *((unsigned char *)v34 + v60[6]) = *((unsigned char *)v35 + v60[6]);
  uint64_t v71 = v60[7];
  long long v72 = (void *)((char *)v34 + v71);
  long long v73 = (void *)((char *)v35 + v71);
  uint64_t v74 = v73[1];
  *long long v72 = *v73;
  v72[1] = v74;
  *(void *)((char *)v34 + v60[8]) = *(void *)((char *)v35 + v60[8]);
  *((unsigned char *)v34 + v60[9]) = *((unsigned char *)v35 + v60[9]);
  uint64_t v75 = v60[10];
  char v76 = (char *)v34 + v75;
  uint64_t v77 = (char *)v35 + v75;
  uint64_t v164 = v60;
  uint64_t v78 = (void *)*((void *)v77 + 1);
  uint64_t v159 = (void *)*((void *)v77 + 2);
  uint64_t v160 = *(void **)v77;
  uint64_t v79 = (void *)*((void *)v77 + 4);
  uint64_t v158 = (void *)*((void *)v77 + 3);
  uint64_t v80 = (void *)*((void *)v77 + 5);
  uint64_t v162 = *((void *)v77 + 6);
  uint64_t v81 = (void *)*((void *)v77 + 7);
  long long v82 = (void *)*((void *)v77 + 8);
  long long v83 = (void *)*((void *)v77 + 9);
  char v84 = v77[80];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247F986A0(v160, v78, v159, v158, v79, v80, v162, v81, v82, v83, v84);
  *(void *)char v76 = v160;
  *((void *)v76 + 1) = v78;
  *((void *)v76 + 2) = v159;
  *((void *)v76 + 3) = v158;
  *((void *)v76 + 4) = v79;
  *((void *)v76 + 5) = v80;
  *((void *)v76 + 6) = v162;
  *((void *)v76 + 7) = v81;
  *((void *)v76 + 8) = v82;
  *((void *)v76 + 9) = v83;
  v76[80] = v84;
  uint64_t v85 = v164[11];
  uint64_t v86 = (void *)((char *)v173 + v85);
  char v87 = (void *)((char *)v166 + v85);
  if (*v87)
  {
    uint64_t v88 = v87[1];
    *uint64_t v86 = *v87;
    v86[1] = v88;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
  }
  uint64_t v89 = *(int *)(a3 + 36);
  uint64_t v90 = &v175[v89];
  uint64_t v91 = (void *)(a2 + v89);
  if (v165(v91, 1, v172))
  {
    uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
  }
  else
  {
    uint64_t v93 = v91[1];
    *uint64_t v90 = *v91;
    v90[1] = v93;
    uint64_t v94 = v91[3];
    v90[2] = v91[2];
    v90[3] = v94;
    uint64_t v95 = v91[5];
    v90[4] = v91[4];
    v90[5] = v95;
    uint64_t v96 = v91[7];
    v90[6] = v91[6];
    v90[7] = v96;
    uint64_t v97 = v91[9];
    v90[8] = v91[8];
    v90[9] = v97;
    uint64_t v98 = v172[5];
    uint64_t v174 = (char *)v90 + v98;
    unsigned int v170 = (char *)v91 + v98;
    uint64_t v99 = sub_248174700();
    uint64_t v167 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v167(v174, v170, v99);
    uint64_t v100 = v172[6];
    uint64_t v101 = (char *)v90 + v100;
    uint64_t v102 = (char *)v91 + v100;
    uint64_t v103 = *((void *)v102 + 1);
    uint64_t v104 = *((void *)v102 + 2);
    uint64_t v105 = *((void *)v102 + 3);
    uint64_t v106 = *((void *)v102 + 4);
    uint64_t v107 = *((void *)v102 + 5);
    uint64_t v108 = *((void *)v102 + 6);
    uint64_t v109 = *((void *)v102 + 7);
    uint64_t v168 = *(void *)v102;
    uint64_t v171 = *((void *)v102 + 8);
    LOBYTE(v174) = v102[72];
    sub_247FABF8C(*(void *)v102, v103, v104, v105, v106, v107, v108, v109, v171, (char)v174);
    *(void *)uint64_t v101 = v168;
    *((void *)v101 + 1) = v103;
    *((void *)v101 + 2) = v104;
    *((void *)v101 + 3) = v105;
    *((void *)v101 + 4) = v106;
    *((void *)v101 + 5) = v107;
    *((void *)v101 + 6) = v108;
    *((void *)v101 + 7) = v109;
    *((void *)v101 + 8) = v171;
    v101[72] = (char)v174;
    *(void *)((char *)v90 + v172[7]) = *(void *)((char *)v91 + v172[7]);
    uint64_t v110 = *(void (**)(void *, void, uint64_t, int *))(v157 + 56);
    swift_bridgeObjectRetain();
    v110(v90, 0, 1, v172);
  }
  uint64_t v111 = (int *)type metadata accessor for SignInModel();
  uint64_t v112 = v111[5];
  uint64_t v113 = (char *)v90 + v112;
  uint64_t v114 = (void *)((char *)v91 + v112);
  uint64_t v115 = v114[1];
  if (v115)
  {
    *(void *)uint64_t v113 = *v114;
    *((void *)v113 + 1) = v115;
    uint64_t v116 = v114[3];
    *((void *)v113 + 2) = v114[2];
    *((void *)v113 + 3) = v116;
    uint64_t v117 = v114[5];
    *((void *)v113 + 4) = v114[4];
    *((void *)v113 + 5) = v117;
    uint64_t v118 = v114[7];
    *((void *)v113 + 6) = v114[6];
    *((void *)v113 + 7) = v118;
    uint64_t v119 = v114[9];
    *((void *)v113 + 8) = v114[8];
    *((void *)v113 + 9) = v119;
    uint64_t v120 = v114 + 10;
    unint64_t v121 = v114[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v121 >> 60 == 15)
    {
      *((_OWORD *)v113 + 5) = *(_OWORD *)v120;
    }
    else
    {
      uint64_t v125 = *v120;
      sub_247FB6C20(*v120, v121);
      *((void *)v113 + 10) = v125;
      *((void *)v113 + 11) = v121;
    }
  }
  else
  {
    long long v122 = *((_OWORD *)v114 + 3);
    *((_OWORD *)v113 + 2) = *((_OWORD *)v114 + 2);
    *((_OWORD *)v113 + 3) = v122;
    long long v123 = *((_OWORD *)v114 + 5);
    *((_OWORD *)v113 + 4) = *((_OWORD *)v114 + 4);
    *((_OWORD *)v113 + 5) = v123;
    long long v124 = *((_OWORD *)v114 + 1);
    *(_OWORD *)uint64_t v113 = *(_OWORD *)v114;
    *((_OWORD *)v113 + 1) = v124;
  }
  *(void *)((char *)v90 + v111[6]) = *(void *)((char *)v91 + v111[6]);
  *(void *)((char *)v90 + v111[7]) = *(void *)((char *)v91 + v111[7]);
  *((unsigned char *)v90 + v111[8]) = *((unsigned char *)v91 + v111[8]);
  *((unsigned char *)v90 + v111[9]) = *((unsigned char *)v91 + v111[9]);
  uint64_t v126 = v111[10];
  long long v127 = (void *)((char *)v90 + v126);
  uint64_t v128 = (void *)((char *)v91 + v126);
  uint64_t v129 = *(void *)((char *)v91 + v126 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v129)
  {
    *long long v127 = *v128;
    v127[1] = v129;
    uint64_t v130 = v128[2];
    uint64_t v131 = v128[3];
    v127[2] = v130;
    v127[3] = v131;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v132 = *((_OWORD *)v128 + 1);
    *(_OWORD *)long long v127 = *(_OWORD *)v128;
    *((_OWORD *)v127 + 1) = v132;
  }
  uint64_t v133 = v111[11];
  uint64_t v134 = (void *)((char *)v90 + v133);
  long long v135 = (void *)((char *)v91 + v133);
  uint64_t v136 = v135[1];
  *uint64_t v134 = *v135;
  v134[1] = v136;
  uint64_t v137 = v111[12];
  uint64_t v138 = *(void **)((char *)v91 + v137);
  *(void *)((char *)v90 + v137) = v138;
  uint64_t v139 = v111[13];
  uint64_t v140 = (char *)v90 + v139;
  uint64_t v141 = (char *)v91 + v139;
  uint64_t v142 = *(void *)v141;
  uint64_t v143 = *((void *)v141 + 1);
  char v144 = v141[16];
  swift_bridgeObjectRetain();
  id v145 = v138;
  sub_247FE42A8(v142, v143, v144);
  *(void *)uint64_t v140 = v142;
  *((void *)v140 + 1) = v143;
  v140[16] = v144;
  uint64_t v146 = v111[14];
  char v147 = (void *)((char *)v90 + v146);
  id v148 = (void *)((char *)v91 + v146);
  uint64_t v149 = v148[1];
  void *v147 = *v148;
  v147[1] = v149;
  *((unsigned char *)v90 + v111[15]) = *((unsigned char *)v91 + v111[15]);
  uint64_t v150 = v111[16];
  char v151 = (char *)v90 + v150;
  uint64_t v152 = (char *)v91 + v150;
  unint64_t v153 = *(void *)((char *)v91 + v150 + 8);
  swift_bridgeObjectRetain();
  if (v153 >= 3)
  {
    *(void *)char v151 = *(void *)v152;
    *((void *)v151 + 1) = v153;
    uint64_t v155 = *((void *)v152 + 3);
    *((void *)v151 + 2) = *((void *)v152 + 2);
    *((void *)v151 + 3) = v155;
    v151[32] = v152[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v154 = *((_OWORD *)v152 + 1);
    *(_OWORD *)char v151 = *(_OWORD *)v152;
    *((_OWORD *)v151 + 1) = v154;
    v151[32] = v152[32];
  }
  return v175;
}

uint64_t assignWithCopy for SetupModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(unsigned __int16 *)(a2 + 36);
  uint64_t v9 = *(unsigned int *)(a2 + 32);
  sub_247FE4184(v5, v6, v7, v9 | (v8 << 32));
  unsigned int v10 = *(void **)(a1 + 8);
  long long v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  unint64_t v13 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int16 *)(a1 + 36) << 32);
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(_DWORD *)(a1 + 32) = v9;
  uint64_t v14 = a2;
  *(_WORD *)(a1 + 36) = v8;
  sub_247FE51A0(v10, v11, v12, v13);
  uint64_t v15 = (_OWORD *)(a1 + 40);
  uint64_t v16 = (long long *)(a2 + 40);
  unsigned int v17 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) <= 0xF9u)
  {
    if (v17 <= 0xF9)
    {
      uint64_t v30 = *(void *)(a2 + 40);
      uint64_t v31 = *(void *)(a2 + 48);
      uint64_t v32 = *(void *)(a2 + 56);
      uint64_t v33 = *(void *)(a2 + 64);
      uint64_t v34 = *(void *)(v14 + 72);
      uint64_t v35 = *(void *)(v14 + 80);
      sub_247FA9804(*(void *)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void *)(v14 + 64), v34, v35, v17);
      uint64_t v36 = *(void *)(a1 + 40);
      uint64_t v37 = *(void *)(a1 + 48);
      uint64_t v38 = *(void *)(a1 + 56);
      uint64_t v39 = *(void *)(a1 + 64);
      uint64_t v40 = *(void *)(a1 + 72);
      uint64_t v41 = *(void *)(a1 + 80);
      *(void *)(a1 + 40) = v30;
      *(void *)(a1 + 48) = v31;
      *(void *)(a1 + 56) = v32;
      *(void *)(a1 + 64) = v33;
      *(void *)(a1 + 72) = v34;
      *(void *)(a1 + 80) = v35;
      char v42 = *(unsigned char *)(a1 + 88);
      *(unsigned char *)(a1 + 88) = v17;
      sub_247FA98EC(v36, v37, v38, v39, v40, v41, v42);
    }
    else
    {
      sub_247FAEE24(a1 + 40);
      long long v22 = *(_OWORD *)(a2 + 56);
      long long v21 = *(_OWORD *)(a2 + 72);
      long long v23 = *v16;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(_OWORD *)(a1 + 56) = v22;
      *(_OWORD *)(a1 + 72) = v21;
      _OWORD *v15 = v23;
    }
  }
  else if (v17 <= 0xF9)
  {
    uint64_t v24 = *(void *)(a2 + 40);
    uint64_t v25 = *(void *)(a2 + 48);
    uint64_t v26 = *(void *)(a2 + 56);
    uint64_t v27 = *(void *)(a2 + 64);
    uint64_t v28 = *(void *)(v14 + 72);
    uint64_t v29 = *(void *)(v14 + 80);
    sub_247FA9804(*(void *)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void *)(v14 + 64), v28, v29, v17);
    *(void *)(a1 + 40) = v24;
    *(void *)(a1 + 48) = v25;
    *(void *)(a1 + 56) = v26;
    *(void *)(a1 + 64) = v27;
    *(void *)(a1 + 72) = v28;
    *(void *)(a1 + 80) = v29;
    *(unsigned char *)(a1 + 88) = v17;
  }
  else
  {
    long long v18 = *v16;
    long long v19 = *(_OWORD *)(a2 + 56);
    long long v20 = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(_OWORD *)(a1 + 56) = v19;
    *(_OWORD *)(a1 + 72) = v20;
    _OWORD *v15 = v18;
  }
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(v14 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(v14 + 97);
  *(void *)(a1 + 104) = *(void *)(v14 + 104);
  *(void *)(a1 + 112) = *(void *)(v14 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(v14 + 120);
  *(void *)(a1 + 128) = *(void *)(v14 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v14 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(v14 + 144);
  *(void *)(a1 + 136) = v43;
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(v14 + 145);
  *(void *)(a1 + 152) = *(void *)(v14 + 152);
  *(void *)(a1 + 160) = *(void *)(v14 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = *(void *)(v14 + 168);
  uint64_t v45 = *(void *)(v14 + 176);
  uint64_t v46 = *(void *)(v14 + 184);
  uint64_t v47 = *(void *)(v14 + 192);
  uint64_t v48 = *(void *)(v14 + 200);
  uint64_t v49 = *(void *)(v14 + 208);
  unsigned __int8 v50 = *(unsigned char *)(v14 + 216);
  sub_247FE41AC(v44, v45, v46, v47, v48, v49, v50);
  uint64_t v51 = *(void *)(a1 + 168);
  uint64_t v52 = *(void *)(a1 + 176);
  uint64_t v53 = *(void *)(a1 + 184);
  uint64_t v54 = *(void *)(a1 + 192);
  uint64_t v55 = *(void *)(a1 + 200);
  uint64_t v56 = *(void *)(a1 + 208);
  *(void *)(a1 + 168) = v44;
  *(void *)(a1 + 176) = v45;
  *(void *)(a1 + 184) = v46;
  *(void *)(a1 + 192) = v47;
  *(void *)(a1 + 200) = v48;
  *(void *)(a1 + 208) = v49;
  unsigned int v57 = *(unsigned __int8 *)(a1 + 216);
  *(unsigned char *)(a1 + 216) = v50;
  sub_247FE51C8(v51, v52, v53, v54, v55, v56, v57);
  uint64_t v58 = (_OWORD *)(a1 + 224);
  uint64_t v59 = (_OWORD *)(v14 + 224);
  uint64_t v60 = *(void *)(v14 + 232);
  if (*(void *)(a1 + 232))
  {
    if (v60)
    {
      *(void *)(a1 + 224) = *(void *)(v14 + 224);
      *(void *)(a1 + 232) = *(void *)(v14 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(v14 + 240);
      swift_retain();
      swift_release();
      *(void *)(a1 + 248) = *(void *)(v14 + 248);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_24800716C(a1 + 224);
      long long v61 = *(_OWORD *)(v14 + 240);
      *uint64_t v58 = *v59;
      *(_OWORD *)(a1 + 240) = v61;
    }
  }
  else if (v60)
  {
    *(void *)(a1 + 224) = *(void *)(v14 + 224);
    *(void *)(a1 + 232) = *(void *)(v14 + 232);
    *(void *)(a1 + 240) = *(void *)(v14 + 240);
    *(void *)(a1 + 248) = *(void *)(v14 + 248);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v62 = *(_OWORD *)(v14 + 240);
    *uint64_t v58 = *v59;
    *(_OWORD *)(a1 + 240) = v62;
  }
  *(void *)(a1 + 256) = *(void *)(v14 + 256);
  *(void *)(a1 + 264) = *(void *)(v14 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 272) = *(void *)(v14 + 272);
  *(void *)(a1 + 280) = *(void *)(v14 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v63 = *(int *)(a3 + 32);
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(v14 + v63);
  uint64_t v66 = type metadata accessor for IdMSAccount();
  uint64_t v254 = *(void *)(v66 - 8);
  uint64_t v67 = *(uint64_t (**)(void *, uint64_t, int *))(v254 + 48);
  int v68 = v67(v64, 1, (int *)v66);
  v279 = (int *)v66;
  long long v262 = v67;
  int v69 = v67(v65, 1, (int *)v66);
  uint64_t v263 = v14;
  uint64_t v264 = v64;
  uint64_t v276 = v65;
  if (v68)
  {
    if (!v69)
    {
      *uint64_t v64 = *v65;
      v64[1] = v65[1];
      v64[2] = v65[2];
      v64[3] = v65[3];
      v64[4] = v65[4];
      v64[5] = v65[5];
      v64[6] = v65[6];
      v64[7] = v65[7];
      void v64[8] = v65[8];
      v64[9] = v65[9];
      uint64_t v70 = *(int *)(v66 + 20);
      uint64_t v268 = (char *)v64 + v70;
      unsigned int v258 = (char *)v65 + v70;
      uint64_t v71 = sub_248174700();
      uint64_t v256 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v256(v268, v258, v71);
      uint64_t v72 = *(int *)(v66 + 24);
      long long v73 = (char *)v64 + v72;
      uint64_t v74 = (char *)v65 + v72;
      uint64_t v75 = *(void *)v74;
      uint64_t v76 = *((void *)v74 + 1);
      uint64_t v77 = *((void *)v74 + 2);
      uint64_t v78 = *((void *)v74 + 3);
      uint64_t v79 = *((void *)v74 + 4);
      uint64_t v80 = *((void *)v74 + 5);
      uint64_t v269 = *((void *)v74 + 6);
      uint64_t v259 = *((void *)v74 + 7);
      uint64_t v81 = *((void *)v74 + 8);
      char v82 = v74[72];
      sub_247FABF8C(*(void *)v74, v76, v77, v78, v79, v80, v269, v259, v81, v82);
      *(void *)long long v73 = v75;
      *((void *)v73 + 1) = v76;
      *((void *)v73 + 2) = v77;
      *((void *)v73 + 3) = v78;
      *((void *)v73 + 4) = v79;
      *((void *)v73 + 5) = v80;
      uint64_t v65 = v276;
      *((void *)v73 + 6) = v269;
      *((void *)v73 + 7) = v259;
      *((void *)v73 + 8) = v81;
      v73[72] = v82;
      uint64_t v64 = v264;
      *(void *)((char *)v264 + v279[7]) = *(void *)((char *)v276 + v279[7]);
      long long v83 = *(void (**)(void *, void, uint64_t, int *))(v254 + 56);
      swift_bridgeObjectRetain();
      v83(v264, 0, 1, v279);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v69)
  {
    sub_24812BB64((uint64_t)v64, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_20:
    uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v64, v65, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_21;
  }
  *uint64_t v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[2] = v65[2];
  v64[3] = v65[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[4] = v65[4];
  v64[5] = v65[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[6] = v65[6];
  v64[7] = v65[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v64[8] = v65[8];
  v64[9] = v65[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = *(int *)(v66 + 20);
  uint64_t v95 = (char *)v64 + v94;
  uint64_t v96 = (char *)v65 + v94;
  uint64_t v97 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 24))(v95, v96, v97);
  uint64_t v98 = *(int *)(v66 + 24);
  uint64_t v99 = (char *)v64 + v98;
  uint64_t v100 = (char *)v65 + v98;
  uint64_t v101 = *(void *)v100;
  uint64_t v102 = *((void *)v100 + 1);
  uint64_t v103 = *((void *)v100 + 2);
  uint64_t v104 = *((void *)v100 + 3);
  uint64_t v105 = *((void *)v100 + 4);
  uint64_t v106 = *((void *)v100 + 5);
  uint64_t v271 = *((void *)v100 + 6);
  uint64_t v260 = *((void *)v100 + 7);
  uint64_t v107 = *((void *)v100 + 8);
  char v108 = v100[72];
  sub_247FABF8C(*(void *)v100, v102, v103, v104, v105, v106, v271, v260, v107, v108);
  uint64_t v109 = *(void *)v99;
  uint64_t v110 = *((void *)v99 + 1);
  uint64_t v111 = *((void *)v99 + 2);
  uint64_t v112 = *((void *)v99 + 3);
  uint64_t v113 = *((void *)v99 + 4);
  uint64_t v114 = *((void *)v99 + 5);
  uint64_t v115 = *((void *)v99 + 6);
  uint64_t v116 = *((void *)v99 + 7);
  uint64_t v117 = *((void *)v99 + 8);
  char v118 = v99[72];
  *(void *)uint64_t v99 = v101;
  *((void *)v99 + 1) = v102;
  *((void *)v99 + 2) = v103;
  *((void *)v99 + 3) = v104;
  uint64_t v65 = v276;
  *((void *)v99 + 4) = v105;
  *((void *)v99 + 5) = v106;
  *((void *)v99 + 6) = v271;
  *((void *)v99 + 7) = v260;
  *((void *)v99 + 8) = v107;
  v99[72] = v108;
  sub_247FAC1EC(v109, v110, v111, v112, v113, v114, v115, v116, v117, v118);
  uint64_t v64 = v264;
  *(void *)((char *)v264 + v279[7]) = *(void *)((char *)v276 + v279[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v85 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v86 = v85[5];
  char v87 = (void *)((char *)v64 + v86);
  uint64_t v88 = (void *)((char *)v65 + v86);
  uint64_t v89 = *(void *)((char *)v64 + v86 + 8);
  uint64_t v90 = *(void *)((char *)v65 + v86 + 8);
  uint64_t v270 = a1;
  if (v89)
  {
    if (v90)
    {
      *char v87 = *v88;
      v87[1] = v88[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v87[2] = v88[2];
      v87[3] = v88[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v87[4] = v88[4];
      v87[5] = v88[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v87[6] = v88[6];
      v87[7] = v88[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v87[8] = v88[8];
      v87[9] = v88[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FACD88((uint64_t)v87);
      *(_OWORD *)char v87 = *(_OWORD *)v88;
      long long v91 = *((_OWORD *)v88 + 4);
      long long v93 = *((_OWORD *)v88 + 1);
      long long v92 = *((_OWORD *)v88 + 2);
      *((_OWORD *)v87 + 3) = *((_OWORD *)v88 + 3);
      *((_OWORD *)v87 + 4) = v91;
      *((_OWORD *)v87 + 1) = v93;
      *((_OWORD *)v87 + 2) = v92;
    }
  }
  else if (v90)
  {
    *char v87 = *v88;
    v87[1] = v88[1];
    v87[2] = v88[2];
    v87[3] = v88[3];
    v87[4] = v88[4];
    v87[5] = v88[5];
    v87[6] = v88[6];
    v87[7] = v88[7];
    v87[8] = v88[8];
    v87[9] = v88[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)char v87 = *(_OWORD *)v88;
    long long v119 = *((_OWORD *)v88 + 1);
    long long v120 = *((_OWORD *)v88 + 2);
    long long v121 = *((_OWORD *)v88 + 4);
    *((_OWORD *)v87 + 3) = *((_OWORD *)v88 + 3);
    *((_OWORD *)v87 + 4) = v121;
    *((_OWORD *)v87 + 1) = v119;
    *((_OWORD *)v87 + 2) = v120;
  }
  *((unsigned char *)v64 + v85[6]) = *((unsigned char *)v65 + v85[6]);
  uint64_t v122 = v85[7];
  long long v123 = (void *)((char *)v64 + v122);
  long long v124 = (void *)((char *)v65 + v122);
  *long long v123 = *v124;
  v123[1] = v124[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v64 + v85[8]) = *(void *)((char *)v65 + v85[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v64 + v85[9]) = *((unsigned char *)v65 + v85[9]);
  uint64_t v125 = v85[10];
  uint64_t v126 = (char *)v64 + v125;
  long long v127 = (char *)v65 + v125;
  uint64_t v128 = *(void **)v127;
  uint64_t v129 = (void *)*((void *)v127 + 1);
  uint64_t v130 = (void *)*((void *)v127 + 2);
  uint64_t v131 = (void *)*((void *)v127 + 3);
  uint64_t v133 = (void *)*((void *)v127 + 4);
  long long v132 = (void *)*((void *)v127 + 5);
  long long v261 = v85;
  uint64_t v135 = *((void *)v127 + 6);
  uint64_t v134 = (void *)*((void *)v127 + 7);
  uint64_t v136 = (void *)*((void *)v127 + 8);
  uint64_t v255 = (void *)*((void *)v127 + 9);
  char v257 = v127[80];
  sub_247F986A0(*(void **)v127, v129, v130, v131, v133, v132, v135, v134, v136, v255, v257);
  uint64_t v137 = *(void **)v126;
  uint64_t v138 = (void *)*((void *)v126 + 1);
  uint64_t v139 = (void *)*((void *)v126 + 2);
  uint64_t v140 = (void *)*((void *)v126 + 3);
  uint64_t v141 = *((void *)v126 + 4);
  uint64_t v142 = (void *)*((void *)v126 + 5);
  uint64_t v143 = *((void *)v126 + 6);
  uint64_t v144 = *((void *)v126 + 7);
  id v145 = (void *)*((void *)v126 + 8);
  uint64_t v146 = (void *)*((void *)v126 + 9);
  char v147 = v126[80];
  *(void *)uint64_t v126 = v128;
  *((void *)v126 + 1) = v129;
  *((void *)v126 + 2) = v130;
  *((void *)v126 + 3) = v131;
  *((void *)v126 + 4) = v133;
  *((void *)v126 + 5) = v132;
  *((void *)v126 + 6) = v135;
  *((void *)v126 + 7) = v134;
  *((void *)v126 + 8) = v136;
  *((void *)v126 + 9) = v255;
  v126[80] = v257;
  sub_247F98958(v137, v138, v139, v140, v141, v142, v143, v144, v145, v146, v147);
  uint64_t v148 = v261[11];
  uint64_t v149 = (void *)((char *)v264 + v148);
  uint64_t v150 = (char *)v276 + v148;
  uint64_t v151 = *(void *)((char *)v264 + v148);
  uint64_t v152 = *(void *)((char *)v276 + v148);
  if (v151)
  {
    uint64_t v153 = v270;
    if (v152)
    {
      uint64_t v154 = *((void *)v150 + 1);
      *uint64_t v149 = v152;
      v149[1] = v154;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else
  {
    uint64_t v153 = v270;
    if (v152)
    {
      uint64_t v155 = *((void *)v150 + 1);
      *uint64_t v149 = v152;
      v149[1] = v155;
      swift_retain();
      goto LABEL_36;
    }
  }
  *(_OWORD *)uint64_t v149 = *(_OWORD *)v150;
LABEL_36:
  uint64_t v156 = *(int *)(a3 + 36);
  uint64_t v157 = (void *)(v153 + v156);
  uint64_t v158 = (void *)(v263 + v156);
  int v159 = v262(v157, 1, v279);
  int v160 = v262(v158, 1, v279);
  if (v159)
  {
    if (!v160)
    {
      void *v157 = *v158;
      v157[1] = v158[1];
      v157[2] = v158[2];
      v157[3] = v158[3];
      v157[4] = v158[4];
      v157[5] = v158[5];
      v157[6] = v158[6];
      v157[7] = v158[7];
      v157[8] = v158[8];
      v157[9] = v158[9];
      uint64_t v161 = v279[5];
      uint64_t v277 = (char *)v157 + v161;
      uint64_t v273 = (char *)v158 + v161;
      uint64_t v162 = sub_248174700();
      uint64_t v265 = *(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v265(v277, v273, v162);
      uint64_t v163 = v279[6];
      uint64_t v164 = (char *)v157 + v163;
      uint64_t v165 = (char *)v158 + v163;
      uint64_t v166 = *((void *)v165 + 1);
      uint64_t v266 = *(void *)v165;
      uint64_t v167 = *((void *)v165 + 2);
      uint64_t v168 = *((void *)v165 + 3);
      uint64_t v169 = *((void *)v165 + 4);
      uint64_t v170 = *((void *)v165 + 5);
      uint64_t v171 = *((void *)v165 + 6);
      uint64_t v172 = *((void *)v165 + 7);
      uint64_t v274 = *((void *)v165 + 8);
      LOBYTE(v277) = v165[72];
      sub_247FABF8C(*(void *)v165, v166, v167, v168, v169, v170, v171, v172, v274, (char)v277);
      *(void *)uint64_t v164 = v266;
      *((void *)v164 + 1) = v166;
      *((void *)v164 + 2) = v167;
      *((void *)v164 + 3) = v168;
      *((void *)v164 + 4) = v169;
      *((void *)v164 + 5) = v170;
      *((void *)v164 + 6) = v171;
      *((void *)v164 + 7) = v172;
      *((void *)v164 + 8) = v274;
      v164[72] = (char)v277;
      *(void *)((char *)v157 + v279[7]) = *(void *)((char *)v158 + v279[7]);
      uint64_t v173 = *(void (**)(void *, void, uint64_t, int *))(v254 + 56);
      swift_bridgeObjectRetain();
      v173(v157, 0, 1, v279);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v160)
  {
    sub_24812BB64((uint64_t)v157, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_41:
    uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v157, v158, *(void *)(*(void *)(v174 - 8) + 64));
    goto LABEL_42;
  }
  void *v157 = *v158;
  v157[1] = v158[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v157[2] = v158[2];
  v157[3] = v158[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v157[4] = v158[4];
  v157[5] = v158[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v157[6] = v158[6];
  v157[7] = v158[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v157[8] = v158[8];
  v157[9] = v158[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v188 = v279[5];
  uint64_t v189 = (char *)v157 + v188;
  long long v190 = (char *)v158 + v188;
  uint64_t v191 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 24))(v189, v190, v191);
  uint64_t v192 = v279[6];
  char v193 = (char *)v157 + v192;
  uint64_t v194 = (char *)v158 + v192;
  uint64_t v195 = *((void *)v194 + 1);
  uint64_t v267 = *(void *)v194;
  uint64_t v196 = *((void *)v194 + 2);
  uint64_t v197 = *((void *)v194 + 3);
  uint64_t v198 = *((void *)v194 + 4);
  uint64_t v199 = *((void *)v194 + 5);
  uint64_t v200 = *((void *)v194 + 6);
  uint64_t v201 = *((void *)v194 + 7);
  uint64_t v275 = *((void *)v194 + 8);
  char v278 = v194[72];
  sub_247FABF8C(*(void *)v194, v195, v196, v197, v198, v199, v200, v201, v275, v278);
  uint64_t v202 = *(void *)v193;
  uint64_t v203 = *((void *)v193 + 1);
  uint64_t v204 = *((void *)v193 + 2);
  uint64_t v205 = *((void *)v193 + 3);
  uint64_t v206 = *((void *)v193 + 4);
  uint64_t v207 = *((void *)v193 + 5);
  uint64_t v208 = *((void *)v193 + 6);
  uint64_t v209 = *((void *)v193 + 7);
  uint64_t v210 = *((void *)v193 + 8);
  char v211 = v193[72];
  *(void *)char v193 = v267;
  *((void *)v193 + 1) = v195;
  *((void *)v193 + 2) = v196;
  *((void *)v193 + 3) = v197;
  *((void *)v193 + 4) = v198;
  *((void *)v193 + 5) = v199;
  *((void *)v193 + 6) = v200;
  *((void *)v193 + 7) = v201;
  *((void *)v193 + 8) = v275;
  v193[72] = v278;
  sub_247FAC1EC(v202, v203, v204, v205, v206, v207, v208, v209, v210, v211);
  *(void *)((char *)v157 + v279[7]) = *(void *)((char *)v158 + v279[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_42:
  uint64_t v175 = (int *)type metadata accessor for SignInModel();
  uint64_t v176 = v175[5];
  uint64_t v177 = (uint64_t)v157 + v176;
  long long v178 = (char *)v158 + v176;
  uint64_t v179 = *(void *)((char *)v157 + v176 + 8);
  uint64_t v180 = *(void *)((char *)v158 + v176 + 8);
  if (!v179)
  {
    if (!v180)
    {
      long long v212 = *((_OWORD *)v178 + 1);
      *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
      *(_OWORD *)(v177 + 16) = v212;
      long long v213 = *((_OWORD *)v178 + 2);
      long long v214 = *((_OWORD *)v178 + 3);
      long long v215 = *((_OWORD *)v178 + 5);
      *(_OWORD *)(v177 + 64) = *((_OWORD *)v178 + 4);
      *(_OWORD *)(v177 + 80) = v215;
      *(_OWORD *)(v177 + 32) = v213;
      *(_OWORD *)(v177 + 48) = v214;
      goto LABEL_59;
    }
    *(void *)uint64_t v177 = *(void *)v178;
    *(void *)(v177 + 8) = *((void *)v178 + 1);
    *(void *)(v177 + 16) = *((void *)v178 + 2);
    *(void *)(v177 + 24) = *((void *)v178 + 3);
    *(void *)(v177 + 32) = *((void *)v178 + 4);
    *(void *)(v177 + 40) = *((void *)v178 + 5);
    *(void *)(v177 + 48) = *((void *)v178 + 6);
    *(void *)(v177 + 56) = *((void *)v178 + 7);
    *(void *)(v177 + 64) = *((void *)v178 + 8);
    *(void *)(v177 + 72) = *((void *)v178 + 9);
    uint64_t v280 = v178 + 80;
    unint64_t v182 = *((void *)v178 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v182 >> 60 == 15)
    {
      *(_OWORD *)(v177 + 80) = *v280;
      goto LABEL_59;
    }
    uint64_t v183 = *(void *)v280;
    goto LABEL_57;
  }
  if (!v180)
  {
    sub_248007274(v177);
    long long v184 = *((_OWORD *)v178 + 1);
    *(_OWORD *)uint64_t v177 = *(_OWORD *)v178;
    *(_OWORD *)(v177 + 16) = v184;
    long long v185 = *((_OWORD *)v178 + 5);
    long long v187 = *((_OWORD *)v178 + 2);
    long long v186 = *((_OWORD *)v178 + 3);
    *(_OWORD *)(v177 + 64) = *((_OWORD *)v178 + 4);
    *(_OWORD *)(v177 + 80) = v185;
    *(_OWORD *)(v177 + 32) = v187;
    *(_OWORD *)(v177 + 48) = v186;
    goto LABEL_59;
  }
  *(void *)uint64_t v177 = *(void *)v178;
  *(void *)(v177 + 8) = *((void *)v178 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v177 + 16) = *((void *)v178 + 2);
  *(void *)(v177 + 24) = *((void *)v178 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v177 + 32) = *((void *)v178 + 4);
  *(void *)(v177 + 40) = *((void *)v178 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v177 + 48) = *((void *)v178 + 6);
  *(void *)(v177 + 56) = *((void *)v178 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v177 + 64) = *((void *)v178 + 8);
  *(void *)(v177 + 72) = *((void *)v178 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v181 = (uint64_t *)(v178 + 80);
  unint64_t v182 = *((void *)v178 + 11);
  if (*(void *)(v177 + 88) >> 60 == 15)
  {
    if (v182 >> 60 != 15)
    {
      uint64_t v183 = *v181;
LABEL_57:
      sub_247FB6C20(v183, v182);
      *(void *)(v177 + 80) = v183;
      *(void *)(v177 + 88) = v182;
      goto LABEL_59;
    }
LABEL_53:
    *(_OWORD *)(v177 + 80) = *(_OWORD *)v181;
    goto LABEL_59;
  }
  if (v182 >> 60 == 15)
  {
    sub_248007220(v177 + 80);
    goto LABEL_53;
  }
  uint64_t v216 = *v181;
  sub_247FB6C20(v216, *((void *)v178 + 11));
  uint64_t v217 = *(void *)(v177 + 80);
  unint64_t v218 = *(void *)(v177 + 88);
  *(void *)(v177 + 80) = v216;
  *(void *)(v177 + 88) = v182;
  sub_247FB6CCC(v217, v218);
LABEL_59:
  *(void *)((char *)v157 + v175[6]) = *(void *)((char *)v158 + v175[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v157 + v175[7]) = *(void *)((char *)v158 + v175[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v157 + v175[8]) = *((unsigned char *)v158 + v175[8]);
  *((unsigned char *)v157 + v175[9]) = *((unsigned char *)v158 + v175[9]);
  uint64_t v219 = v175[10];
  uint64_t v220 = (void *)((char *)v157 + v219);
  uint64_t v221 = (void *)((char *)v158 + v219);
  uint64_t v222 = *(void *)((char *)v157 + v219 + 8);
  uint64_t v223 = *(void *)((char *)v158 + v219 + 8);
  if (v222)
  {
    if (v223)
    {
      *uint64_t v220 = *v221;
      v220[1] = v221[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v220[2] = v221[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v220[3] = v221[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FFB0A0((uint64_t)v220);
      long long v224 = *((_OWORD *)v221 + 1);
      *(_OWORD *)uint64_t v220 = *(_OWORD *)v221;
      *((_OWORD *)v220 + 1) = v224;
    }
  }
  else if (v223)
  {
    *uint64_t v220 = *v221;
    v220[1] = v221[1];
    v220[2] = v221[2];
    v220[3] = v221[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v225 = *((_OWORD *)v221 + 1);
    *(_OWORD *)uint64_t v220 = *(_OWORD *)v221;
    *((_OWORD *)v220 + 1) = v225;
  }
  uint64_t v226 = v175[11];
  uint64_t v227 = (void *)((char *)v157 + v226);
  uint64_t v228 = (void *)((char *)v158 + v226);
  *uint64_t v227 = *v228;
  v227[1] = v228[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v229 = v175[12];
  long long v230 = *(void **)((char *)v157 + v229);
  long long v231 = *(void **)((char *)v158 + v229);
  *(void *)((char *)v157 + v229) = v231;
  id v232 = v231;

  uint64_t v233 = v175[13];
  uint64_t v234 = (char *)v157 + v233;
  v235 = (char *)v158 + v233;
  uint64_t v236 = *(void *)v235;
  uint64_t v237 = *((void *)v235 + 1);
  char v238 = v235[16];
  sub_247FE42A8(*(void *)v235, v237, v238);
  uint64_t v239 = *(void *)v234;
  uint64_t v240 = *((void *)v234 + 1);
  *(void *)uint64_t v234 = v236;
  *((void *)v234 + 1) = v237;
  char v241 = v234[16];
  v234[16] = v238;
  sub_247FE52C4(v239, v240, v241);
  uint64_t v242 = v175[14];
  uint64_t v243 = (void *)((char *)v157 + v242);
  v244 = (void *)((char *)v158 + v242);
  *uint64_t v243 = *v244;
  v243[1] = v244[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v157 + v175[15]) = *((unsigned char *)v158 + v175[15]);
  uint64_t v245 = v175[16];
  uint64_t v246 = (uint64_t)v157 + v245;
  uint64_t v247 = (char *)v158 + v245;
  unint64_t v248 = *(void *)((char *)v158 + v245 + 8);
  if (*(void *)(v246 + 8) >= 3uLL)
  {
    if (v248 >= 3)
    {
      *(void *)uint64_t v246 = *(void *)v247;
      *(void *)(v246 + 8) = *((void *)v247 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v246 + 16) = *((void *)v247 + 2);
      *(void *)(v246 + 24) = *((void *)v247 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v251 = v247[32];
    }
    else
    {
      sub_24811C114(v246);
      char v251 = v247[32];
      long long v252 = *((_OWORD *)v247 + 1);
      *(_OWORD *)uint64_t v246 = *(_OWORD *)v247;
      *(_OWORD *)(v246 + 16) = v252;
    }
    *(unsigned char *)(v246 + 32) = v251;
  }
  else if (v248 >= 3)
  {
    *(void *)uint64_t v246 = *(void *)v247;
    *(void *)(v246 + 8) = *((void *)v247 + 1);
    *(void *)(v246 + 16) = *((void *)v247 + 2);
    *(void *)(v246 + 24) = *((void *)v247 + 3);
    *(unsigned char *)(v246 + 32) = v247[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v249 = *(_OWORD *)v247;
    long long v250 = *((_OWORD *)v247 + 1);
    *(unsigned char *)(v246 + 32) = v247[32];
    *(_OWORD *)uint64_t v246 = v249;
    *(_OWORD *)(v246 + 16) = v250;
  }
  return v270;
}

uint64_t sub_24812BB64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for SetupModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 22) = *(_OWORD *)(a2 + 22);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  long long v12 = *(_OWORD *)(a2 + 224);
  long long v13 = *(_OWORD *)(a2 + 240);
  long long v14 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v14;
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = (_OWORD *)(a1 + v15);
  unsigned int v17 = (_OWORD *)(a2 + v15);
  *(_OWORD *)(a1 + 224) = v12;
  *(_OWORD *)(a1 + 240) = v13;
  long long v18 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v19 = *((void *)v18 - 1);
  long long v20 = *(unsigned int (**)(_OWORD *, uint64_t, int *))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    long long v22 = v17[3];
    v16[2] = v17[2];
    v16[3] = v22;
    v16[4] = v17[4];
    long long v23 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v23;
    uint64_t v24 = v18[5];
    uint64_t v86 = v3;
    uint64_t v25 = v19;
    uint64_t v26 = (char *)v16 + v24;
    uint64_t v27 = (char *)v17 + v24;
    uint64_t v28 = sub_248174700();
    uint64_t v29 = v26;
    uint64_t v19 = v25;
    uint64_t v3 = v86;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v29, v27, v28);
    uint64_t v30 = v18[6];
    uint64_t v31 = (_OWORD *)((char *)v16 + v30);
    uint64_t v32 = (_OWORD *)((char *)v17 + v30);
    long long v33 = v32[3];
    v31[2] = v32[2];
    v31[3] = v33;
    *(_OWORD *)((char *)v31 + 57) = *(_OWORD *)((char *)v32 + 57);
    long long v34 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v34;
    *(void *)((char *)v16 + v18[7]) = *(void *)((char *)v17 + v18[7]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v35 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v36 = v35[5];
  uint64_t v37 = (_OWORD *)((char *)v16 + v36);
  uint64_t v38 = (_OWORD *)((char *)v17 + v36);
  long long v39 = v38[3];
  _OWORD v37[2] = v38[2];
  v37[3] = v39;
  v37[4] = v38[4];
  long long v40 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v40;
  *((unsigned char *)v16 + v35[6]) = *((unsigned char *)v17 + v35[6]);
  *(_OWORD *)((char *)v16 + v35[7]) = *(_OWORD *)((char *)v17 + v35[7]);
  *(void *)((char *)v16 + v35[8]) = *(void *)((char *)v17 + v35[8]);
  *((unsigned char *)v16 + v35[9]) = *((unsigned char *)v17 + v35[9]);
  uint64_t v41 = v35[10];
  char v42 = (char *)v16 + v41;
  uint64_t v43 = (char *)v17 + v41;
  long long v44 = *((_OWORD *)v43 + 1);
  *(_OWORD *)char v42 = *(_OWORD *)v43;
  *((_OWORD *)v42 + 1) = v44;
  v42[80] = v43[80];
  long long v45 = *((_OWORD *)v43 + 4);
  long long v46 = *((_OWORD *)v43 + 2);
  *((_OWORD *)v42 + 3) = *((_OWORD *)v43 + 3);
  *((_OWORD *)v42 + 4) = v45;
  *((_OWORD *)v42 + 2) = v46;
  uint64_t v47 = v35[11];
  uint64_t v48 = (void *)((char *)v16 + v47);
  uint64_t v49 = (uint64_t *)((char *)v17 + v47);
  uint64_t v50 = *v49;
  if (*v49)
  {
    uint64_t v51 = v49[1];
    *uint64_t v48 = v50;
    v48[1] = v51;
  }
  else
  {
    *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  }
  uint64_t v52 = *(int *)(v3 + 36);
  uint64_t v53 = (_OWORD *)(a1 + v52);
  uint64_t v54 = (_OWORD *)(a2 + v52);
  if (v20(v54, 1, v18))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    long long v56 = v54[3];
    v53[2] = v54[2];
    v53[3] = v56;
    v53[4] = v54[4];
    long long v57 = v54[1];
    *uint64_t v53 = *v54;
    v53[1] = v57;
    uint64_t v58 = v18[5];
    uint64_t v59 = (char *)v53 + v58;
    uint64_t v60 = (char *)v54 + v58;
    uint64_t v61 = sub_248174700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
    uint64_t v62 = v18[6];
    uint64_t v63 = (_OWORD *)((char *)v53 + v62);
    uint64_t v64 = (_OWORD *)((char *)v54 + v62);
    long long v65 = v64[3];
    v63[2] = v64[2];
    v63[3] = v65;
    *(_OWORD *)((char *)v63 + 57) = *(_OWORD *)((char *)v64 + 57);
    long long v66 = v64[1];
    *uint64_t v63 = *v64;
    v63[1] = v66;
    *(void *)((char *)v53 + v18[7]) = *(void *)((char *)v54 + v18[7]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v19 + 56))(v53, 0, 1, v18);
  }
  uint64_t v67 = (int *)type metadata accessor for SignInModel();
  uint64_t v68 = v67[5];
  int v69 = (_OWORD *)((char *)v53 + v68);
  uint64_t v70 = (_OWORD *)((char *)v54 + v68);
  long long v71 = v70[3];
  v69[2] = v70[2];
  v69[3] = v71;
  long long v72 = v70[5];
  v69[4] = v70[4];
  v69[5] = v72;
  long long v73 = v70[1];
  *int v69 = *v70;
  v69[1] = v73;
  *(void *)((char *)v53 + v67[6]) = *(void *)((char *)v54 + v67[6]);
  *(void *)((char *)v53 + v67[7]) = *(void *)((char *)v54 + v67[7]);
  *((unsigned char *)v53 + v67[8]) = *((unsigned char *)v54 + v67[8]);
  *((unsigned char *)v53 + v67[9]) = *((unsigned char *)v54 + v67[9]);
  uint64_t v74 = v67[10];
  uint64_t v75 = (_OWORD *)((char *)v53 + v74);
  uint64_t v76 = (_OWORD *)((char *)v54 + v74);
  long long v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  *(_OWORD *)((char *)v53 + v67[11]) = *(_OWORD *)((char *)v54 + v67[11]);
  *(void *)((char *)v53 + v67[12]) = *(void *)((char *)v54 + v67[12]);
  uint64_t v78 = v67[13];
  uint64_t v79 = (char *)v53 + v78;
  uint64_t v80 = (char *)v54 + v78;
  v79[16] = v80[16];
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
  *(_OWORD *)((char *)v53 + v67[14]) = *(_OWORD *)((char *)v54 + v67[14]);
  *((unsigned char *)v53 + v67[15]) = *((unsigned char *)v54 + v67[15]);
  uint64_t v81 = v67[16];
  char v82 = (char *)v53 + v81;
  long long v83 = (char *)v54 + v81;
  long long v84 = *((_OWORD *)v83 + 1);
  *(_OWORD *)char v82 = *(_OWORD *)v83;
  *((_OWORD *)v82 + 1) = v84;
  v82[32] = v83[32];
  return a1;
}

uint64_t assignWithTake for SetupModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  __int16 v7 = *(_WORD *)(a2 + 36);
  int v8 = *(_DWORD *)(a2 + 32);
  long long v9 = *(void **)(a1 + 8);
  long long v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  unint64_t v12 = *(unsigned int *)(a1 + 32) | ((unint64_t)*(unsigned __int16 *)(a1 + 36) << 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v6;
  *(_DWORD *)(a1 + 32) = v8;
  *(_WORD *)(a1 + 36) = v7;
  sub_247FE51A0(v9, v10, v11, v12);
  unsigned int v13 = *(unsigned __int8 *)(a1 + 88);
  if (v13 > 0xF9) {
    goto LABEL_4;
  }
  unsigned int v14 = *(unsigned __int8 *)(a2 + 88);
  if (v14 > 0xF9)
  {
    sub_247FAEE24(a1 + 40);
LABEL_4:
    long long v15 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v15;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v14;
  sub_247FA98EC(v16, v17, v18, v19, v20, v21, v13);
LABEL_6:
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  uint64_t v22 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v23;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  uint64_t v24 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v24;
  swift_bridgeObjectRelease();
  char v25 = *(unsigned char *)(a2 + 216);
  uint64_t v26 = *(void *)(a1 + 168);
  uint64_t v27 = *(void *)(a1 + 176);
  uint64_t v28 = *(void *)(a1 + 184);
  uint64_t v29 = *(void *)(a1 + 192);
  uint64_t v30 = *(void *)(a1 + 200);
  uint64_t v31 = *(void *)(a1 + 208);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  unsigned int v32 = *(unsigned __int8 *)(a1 + 216);
  *(unsigned char *)(a1 + 216) = v25;
  sub_247FE51C8(v26, v27, v28, v29, v30, v31, v32);
  if (*(void *)(a1 + 232))
  {
    uint64_t v33 = *(void *)(a2 + 232);
    if (v33)
    {
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = v33;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      swift_release();
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_release();
      goto LABEL_11;
    }
    sub_24800716C(a1 + 224);
  }
  long long v34 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v34;
LABEL_11:
  uint64_t v35 = *(void *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v36;
  swift_bridgeObjectRelease();
  uint64_t v213 = a3;
  uint64_t v37 = *(int *)(a3 + 32);
  uint64_t v38 = (void *)(a1 + v37);
  long long v39 = (void *)(a2 + v37);
  long long v40 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v41 = *((void *)v40 - 1);
  char v42 = *(uint64_t (**)(void *, uint64_t, int *))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  uint64_t v212 = v41;
  if (v43)
  {
    if (!v44)
    {
      long long v45 = *((_OWORD *)v39 + 3);
      *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
      *((_OWORD *)v38 + 3) = v45;
      *((_OWORD *)v38 + 4) = *((_OWORD *)v39 + 4);
      long long v46 = *((_OWORD *)v39 + 1);
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v46;
      uint64_t v47 = v40[5];
      uint64_t v48 = (char *)v38 + v47;
      uint64_t v49 = (char *)v39 + v47;
      uint64_t v50 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      uint64_t v51 = v40[6];
      uint64_t v52 = (_OWORD *)((char *)v38 + v51);
      uint64_t v53 = (_OWORD *)((char *)v39 + v51);
      long long v54 = v53[3];
      void v52[2] = v53[2];
      v52[3] = v54;
      *(_OWORD *)((char *)v52 + 57) = *(_OWORD *)((char *)v53 + 57);
      long long v55 = v53[1];
      *uint64_t v52 = *v53;
      v52[1] = v55;
      *(void *)((char *)v38 + v40[7]) = *(void *)((char *)v39 + v40[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v44)
  {
    sub_24812BB64((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_16:
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v38, v39, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v159 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v159;
  swift_bridgeObjectRelease();
  uint64_t v160 = v39[3];
  _OWORD v38[2] = v39[2];
  v38[3] = v160;
  swift_bridgeObjectRelease();
  uint64_t v161 = v39[5];
  v38[4] = v39[4];
  v38[5] = v161;
  swift_bridgeObjectRelease();
  uint64_t v162 = v39[7];
  void v38[6] = v39[6];
  v38[7] = v162;
  swift_bridgeObjectRelease();
  uint64_t v163 = v39[9];
  v38[8] = v39[8];
  v38[9] = v163;
  swift_bridgeObjectRelease();
  uint64_t v164 = v40[5];
  uint64_t v165 = (char *)v38 + v164;
  uint64_t v166 = (char *)v39 + v164;
  uint64_t v167 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 40))(v165, v166, v167);
  uint64_t v168 = v40[6];
  uint64_t v169 = (char *)v38 + v168;
  uint64_t v170 = (char *)v39 + v168;
  uint64_t v171 = *((void *)v170 + 8);
  char v172 = v170[72];
  uint64_t v173 = *(void *)v169;
  uint64_t v174 = *((void *)v169 + 1);
  uint64_t v175 = *((void *)v169 + 2);
  uint64_t v176 = *((void *)v169 + 3);
  uint64_t v177 = *((void *)v169 + 4);
  uint64_t v178 = *((void *)v169 + 5);
  uint64_t v179 = *((void *)v169 + 6);
  uint64_t v180 = *((void *)v169 + 7);
  uint64_t v181 = *((void *)v169 + 8);
  char v182 = v169[72];
  long long v183 = *((_OWORD *)v170 + 1);
  *(_OWORD *)uint64_t v169 = *(_OWORD *)v170;
  *((_OWORD *)v169 + 1) = v183;
  long long v184 = *((_OWORD *)v170 + 3);
  *((_OWORD *)v169 + 2) = *((_OWORD *)v170 + 2);
  *((_OWORD *)v169 + 3) = v184;
  *((void *)v169 + 8) = v171;
  v169[72] = v172;
  sub_247FAC1EC(v173, v174, v175, v176, v177, v178, v179, v180, v181, v182);
  *(void *)((char *)v38 + v40[7]) = *(void *)((char *)v39 + v40[7]);
  swift_bridgeObjectRelease();
LABEL_17:
  long long v57 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v58 = v57[5];
  uint64_t v59 = (void *)((char *)v38 + v58);
  uint64_t v60 = (void *)((char *)v39 + v58);
  if (*(void *)((char *)v38 + v58 + 8))
  {
    uint64_t v61 = v60[1];
    if (v61)
    {
      *uint64_t v59 = *v60;
      v59[1] = v61;
      swift_bridgeObjectRelease();
      uint64_t v62 = v60[3];
      v59[2] = v60[2];
      v59[3] = v62;
      swift_bridgeObjectRelease();
      uint64_t v63 = v60[5];
      v59[4] = v60[4];
      v59[5] = v63;
      swift_bridgeObjectRelease();
      uint64_t v64 = v60[7];
      v59[6] = v60[6];
      v59[7] = v64;
      swift_bridgeObjectRelease();
      uint64_t v65 = v60[9];
      v59[8] = v60[8];
      v59[9] = v65;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_247FACD88((uint64_t)v59);
  }
  long long v66 = *((_OWORD *)v60 + 3);
  *((_OWORD *)v59 + 2) = *((_OWORD *)v60 + 2);
  *((_OWORD *)v59 + 3) = v66;
  *((_OWORD *)v59 + 4) = *((_OWORD *)v60 + 4);
  long long v67 = *((_OWORD *)v60 + 1);
  *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
  *((_OWORD *)v59 + 1) = v67;
LABEL_22:
  *((unsigned char *)v38 + v57[6]) = *((unsigned char *)v39 + v57[6]);
  uint64_t v68 = v57[7];
  int v69 = (void *)((char *)v38 + v68);
  uint64_t v70 = (void *)((char *)v39 + v68);
  uint64_t v72 = *v70;
  uint64_t v71 = v70[1];
  *int v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease();
  *(void *)((char *)v38 + v57[8]) = *(void *)((char *)v39 + v57[8]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v38 + v57[9]) = *((unsigned char *)v39 + v57[9]);
  uint64_t v73 = v57[10];
  uint64_t v74 = (char *)v38 + v73;
  uint64_t v75 = (char *)v39 + v73;
  char v76 = v75[80];
  long long v77 = *(void **)v74;
  uint64_t v78 = (void *)*((void *)v74 + 1);
  uint64_t v79 = (void *)*((void *)v74 + 2);
  uint64_t v80 = (void *)*((void *)v74 + 3);
  uint64_t v81 = *((void *)v74 + 4);
  char v82 = (void *)*((void *)v74 + 5);
  uint64_t v83 = *((void *)v74 + 6);
  uint64_t v84 = *((void *)v74 + 7);
  uint64_t v85 = (void *)*((void *)v74 + 8);
  uint64_t v86 = (void *)*((void *)v74 + 9);
  char v87 = v74[80];
  long long v88 = *((_OWORD *)v75 + 1);
  *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
  *((_OWORD *)v74 + 1) = v88;
  long long v89 = *((_OWORD *)v75 + 3);
  *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
  *((_OWORD *)v74 + 3) = v89;
  *((_OWORD *)v74 + 4) = *((_OWORD *)v75 + 4);
  v74[80] = v76;
  sub_247F98958(v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87);
  uint64_t v90 = v57[11];
  long long v91 = (void *)((char *)v38 + v90);
  long long v92 = (char *)v39 + v90;
  uint64_t v93 = *(void *)((char *)v39 + v90);
  if (*v91)
  {
    if (v93)
    {
      uint64_t v94 = *((void *)v92 + 1);
      *long long v91 = v93;
      v91[1] = v94;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v93)
  {
    uint64_t v95 = *((void *)v92 + 1);
    *long long v91 = v93;
    v91[1] = v95;
    goto LABEL_29;
  }
  *(_OWORD *)long long v91 = *(_OWORD *)v92;
LABEL_29:
  uint64_t v96 = *(int *)(v213 + 36);
  uint64_t v97 = (void *)(a1 + v96);
  uint64_t v98 = (void *)(a2 + v96);
  int v99 = v42((void *)(a1 + v96), 1, v40);
  int v100 = v42(v98, 1, v40);
  if (v99)
  {
    if (!v100)
    {
      long long v101 = *((_OWORD *)v98 + 3);
      *((_OWORD *)v97 + 2) = *((_OWORD *)v98 + 2);
      *((_OWORD *)v97 + 3) = v101;
      *((_OWORD *)v97 + 4) = *((_OWORD *)v98 + 4);
      long long v102 = *((_OWORD *)v98 + 1);
      *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
      *((_OWORD *)v97 + 1) = v102;
      uint64_t v103 = v40[5];
      uint64_t v104 = (char *)v97 + v103;
      uint64_t v105 = (char *)v98 + v103;
      uint64_t v106 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
      uint64_t v107 = v40[6];
      char v108 = (_OWORD *)((char *)v97 + v107);
      uint64_t v109 = (_OWORD *)((char *)v98 + v107);
      long long v110 = v109[3];
      v108[2] = v109[2];
      v108[3] = v110;
      *(_OWORD *)((char *)v108 + 57) = *(_OWORD *)((char *)v109 + 57);
      long long v111 = v109[1];
      *char v108 = *v109;
      v108[1] = v111;
      *(void *)((char *)v97 + v40[7]) = *(void *)((char *)v98 + v40[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v212 + 56))(v97, 0, 1, v40);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v100)
  {
    sub_24812BB64((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_34:
    uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v97, v98, *(void *)(*(void *)(v112 - 8) + 64));
    goto LABEL_35;
  }
  uint64_t v185 = v98[1];
  *uint64_t v97 = *v98;
  v97[1] = v185;
  swift_bridgeObjectRelease();
  uint64_t v186 = v98[3];
  v97[2] = v98[2];
  v97[3] = v186;
  swift_bridgeObjectRelease();
  uint64_t v187 = v98[5];
  v97[4] = v98[4];
  v97[5] = v187;
  swift_bridgeObjectRelease();
  uint64_t v188 = v98[7];
  v97[6] = v98[6];
  v97[7] = v188;
  swift_bridgeObjectRelease();
  uint64_t v189 = v98[9];
  v97[8] = v98[8];
  v97[9] = v189;
  swift_bridgeObjectRelease();
  uint64_t v190 = v40[5];
  uint64_t v191 = (char *)v97 + v190;
  uint64_t v192 = (char *)v98 + v190;
  uint64_t v193 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 40))(v191, v192, v193);
  uint64_t v194 = v40[6];
  uint64_t v195 = (char *)v97 + v194;
  uint64_t v196 = (char *)v98 + v194;
  uint64_t v197 = *((void *)v196 + 8);
  char v198 = v196[72];
  uint64_t v199 = *(void *)v195;
  uint64_t v200 = *((void *)v195 + 1);
  uint64_t v201 = *((void *)v195 + 2);
  uint64_t v202 = *((void *)v195 + 3);
  uint64_t v203 = *((void *)v195 + 4);
  uint64_t v204 = *((void *)v195 + 5);
  uint64_t v205 = *((void *)v195 + 6);
  uint64_t v206 = *((void *)v195 + 7);
  uint64_t v207 = *((void *)v195 + 8);
  char v208 = v195[72];
  long long v209 = *((_OWORD *)v196 + 1);
  *(_OWORD *)uint64_t v195 = *(_OWORD *)v196;
  *((_OWORD *)v195 + 1) = v209;
  long long v210 = *((_OWORD *)v196 + 3);
  *((_OWORD *)v195 + 2) = *((_OWORD *)v196 + 2);
  *((_OWORD *)v195 + 3) = v210;
  *((void *)v195 + 8) = v197;
  v195[72] = v198;
  sub_247FAC1EC(v199, v200, v201, v202, v203, v204, v205, v206, v207, v208);
  *(void *)((char *)v97 + v40[7]) = *(void *)((char *)v98 + v40[7]);
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v113 = (int *)type metadata accessor for SignInModel();
  uint64_t v114 = v113[5];
  uint64_t v115 = (uint64_t)v97 + v114;
  uint64_t v116 = (char *)v98 + v114;
  if (!*(void *)((char *)v97 + v114 + 8))
  {
LABEL_42:
    long long v125 = *((_OWORD *)v116 + 3);
    *(_OWORD *)(v115 + 32) = *((_OWORD *)v116 + 2);
    *(_OWORD *)(v115 + 48) = v125;
    long long v126 = *((_OWORD *)v116 + 5);
    *(_OWORD *)(v115 + 64) = *((_OWORD *)v116 + 4);
    *(_OWORD *)(v115 + 80) = v126;
    long long v127 = *((_OWORD *)v116 + 1);
    *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
    *(_OWORD *)(v115 + 16) = v127;
    goto LABEL_43;
  }
  uint64_t v117 = *((void *)v116 + 1);
  if (!v117)
  {
    sub_248007274(v115);
    goto LABEL_42;
  }
  *(void *)uint64_t v115 = *(void *)v116;
  *(void *)(v115 + 8) = v117;
  swift_bridgeObjectRelease();
  uint64_t v118 = *((void *)v116 + 3);
  *(void *)(v115 + 16) = *((void *)v116 + 2);
  *(void *)(v115 + 24) = v118;
  swift_bridgeObjectRelease();
  uint64_t v119 = *((void *)v116 + 5);
  *(void *)(v115 + 32) = *((void *)v116 + 4);
  *(void *)(v115 + 40) = v119;
  swift_bridgeObjectRelease();
  uint64_t v120 = *((void *)v116 + 7);
  *(void *)(v115 + 48) = *((void *)v116 + 6);
  *(void *)(v115 + 56) = v120;
  swift_bridgeObjectRelease();
  uint64_t v121 = *((void *)v116 + 9);
  *(void *)(v115 + 64) = *((void *)v116 + 8);
  *(void *)(v115 + 72) = v121;
  swift_bridgeObjectRelease();
  uint64_t v122 = v116 + 80;
  unint64_t v123 = *(void *)(v115 + 88);
  if (v123 >> 60 == 15)
  {
LABEL_40:
    *(_OWORD *)(v115 + 80) = *v122;
    goto LABEL_43;
  }
  unint64_t v124 = *((void *)v116 + 11);
  if (v124 >> 60 == 15)
  {
    sub_248007220(v115 + 80);
    goto LABEL_40;
  }
  uint64_t v211 = *(void *)(v115 + 80);
  *(void *)(v115 + 80) = *(void *)v122;
  *(void *)(v115 + 88) = v124;
  sub_247FB6CCC(v211, v123);
LABEL_43:
  *(void *)((char *)v97 + v113[6]) = *(void *)((char *)v98 + v113[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v97 + v113[7]) = *(void *)((char *)v98 + v113[7]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v97 + v113[8]) = *((unsigned char *)v98 + v113[8]);
  *((unsigned char *)v97 + v113[9]) = *((unsigned char *)v98 + v113[9]);
  uint64_t v128 = v113[10];
  uint64_t v129 = (void *)((char *)v97 + v128);
  uint64_t v130 = (void *)((char *)v98 + v128);
  if (*(void *)((char *)v97 + v128 + 8))
  {
    uint64_t v131 = v130[1];
    if (v131)
    {
      *uint64_t v129 = *v130;
      v129[1] = v131;
      swift_bridgeObjectRelease();
      v129[2] = v130[2];
      swift_bridgeObjectRelease();
      v129[3] = v130[3];
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    sub_247FFB0A0((uint64_t)v129);
  }
  long long v132 = *((_OWORD *)v130 + 1);
  *(_OWORD *)uint64_t v129 = *(_OWORD *)v130;
  *((_OWORD *)v129 + 1) = v132;
LABEL_48:
  uint64_t v133 = v113[11];
  uint64_t v134 = (void *)((char *)v97 + v133);
  uint64_t v135 = (void *)((char *)v98 + v133);
  uint64_t v137 = *v135;
  uint64_t v136 = v135[1];
  *uint64_t v134 = v137;
  v134[1] = v136;
  swift_bridgeObjectRelease();
  uint64_t v138 = v113[12];
  uint64_t v139 = *(void **)((char *)v97 + v138);
  *(void *)((char *)v97 + v138) = *(void *)((char *)v98 + v138);

  uint64_t v140 = v113[13];
  uint64_t v141 = (char *)v97 + v140;
  uint64_t v142 = (char *)v98 + v140;
  char v143 = v142[16];
  uint64_t v144 = *(void *)v141;
  uint64_t v145 = *((void *)v141 + 1);
  *(_OWORD *)uint64_t v141 = *(_OWORD *)v142;
  char v146 = v141[16];
  v141[16] = v143;
  sub_247FE52C4(v144, v145, v146);
  uint64_t v147 = v113[14];
  uint64_t v148 = (void *)((char *)v97 + v147);
  uint64_t v149 = (void *)((char *)v98 + v147);
  uint64_t v151 = *v149;
  uint64_t v150 = v149[1];
  *uint64_t v148 = v151;
  v148[1] = v150;
  swift_bridgeObjectRelease();
  *((unsigned char *)v97 + v113[15]) = *((unsigned char *)v98 + v113[15]);
  uint64_t v152 = v113[16];
  uint64_t v153 = (uint64_t)v97 + v152;
  uint64_t v154 = (char *)v98 + v152;
  if (*(void *)(v153 + 8) >= 3uLL)
  {
    unint64_t v155 = *((void *)v154 + 1);
    if (v155 >= 3)
    {
      *(void *)uint64_t v153 = *(void *)v154;
      *(void *)(v153 + 8) = v155;
      swift_bridgeObjectRelease();
      uint64_t v157 = *((void *)v154 + 3);
      *(void *)(v153 + 16) = *((void *)v154 + 2);
      *(void *)(v153 + 24) = v157;
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
    sub_24811C114(v153);
  }
  long long v156 = *((_OWORD *)v154 + 1);
  *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
  *(_OWORD *)(v153 + 16) = v156;
LABEL_53:
  *(unsigned char *)(v153 + 32) = v154[32];
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24812CB4C);
}

uint64_t sub_24812CB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unsigned int v4 = (*(void *)(a1 + 24) >> 24) & 0xFFFF0000 | WORD1(*(void *)(a1 + 24));
    if (v4 > 0x80000000) {
      return -v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for AuthenticationModel();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 32);
      unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SignInModel();
      unsigned int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for SetupModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24812CC94);
}

uint64_t sub_24812CC94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = (-65536 * a2) | ((unint64_t)(-(int)a2 >> 16) << 40);
    *(_WORD *)(result + 36) = 0;
    *(_DWORD *)(result + 32) = 0;
  }
  else
  {
    uint64_t v8 = type metadata accessor for AuthenticationModel();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 32);
      unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for SignInModel();
      unsigned int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_24812CDD8()
{
  uint64_t result = type metadata accessor for AuthenticationModel();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SignInModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for SetupModel.State(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 48);
  if (v1 <= 4) {
    return sub_247FA98EC(*(void *)result, *(void *)(result + 8), *(void *)(result + 16), *(void *)(result + 24), *(void *)(result + 32), *(void *)(result + 40), v1);
  }
  return result;
}

uint64_t initializeWithCopy for SetupModel.State(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 48);
  if (v3 > 4)
  {
    long long v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    uint64_t v6 = a2[2];
    uint64_t v7 = a2[3];
    uint64_t v8 = a2[4];
    uint64_t v9 = a2[5];
    sub_247FA9804(*a2, v5, v6, v7, v8, v9, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(unsigned char *)(a1 + 48) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for SetupModel.State(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
  unsigned int v5 = *((unsigned __int8 *)a2 + 48);
  if (v4 > 4)
  {
    if (v5 <= 4)
    {
      uint64_t v19 = *(void *)a2;
      uint64_t v20 = *((void *)a2 + 1);
      uint64_t v21 = *((void *)a2 + 2);
      uint64_t v22 = *((void *)a2 + 3);
      uint64_t v24 = *((void *)a2 + 4);
      uint64_t v23 = *((void *)a2 + 5);
      sub_247FA9804(*(void *)a2, v20, v21, v22, v24, v23, v5);
      *(void *)a1 = v19;
      *(void *)(a1 + 8) = v20;
      *(void *)(a1 + 16) = v21;
      *(void *)(a1 + 24) = v22;
      *(void *)(a1 + 32) = v24;
      *(void *)(a1 + 40) = v23;
      *(unsigned char *)(a1 + 48) = v5;
      return a1;
    }
LABEL_7:
    long long v25 = *a2;
    long long v26 = a2[1];
    long long v27 = a2[2];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(_OWORD *)(a1 + 16) = v26;
    *(_OWORD *)(a1 + 32) = v27;
    *(_OWORD *)a1 = v25;
    return a1;
  }
  if (v5 > 4)
  {
    sub_247FA98EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), v4);
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *((void *)a2 + 1);
  uint64_t v8 = *((void *)a2 + 2);
  uint64_t v9 = *((void *)a2 + 3);
  uint64_t v11 = *((void *)a2 + 4);
  uint64_t v10 = *((void *)a2 + 5);
  sub_247FA9804(*(void *)a2, v7, v8, v9, v11, v10, v5);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v10;
  char v18 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v5;
  sub_247FA98EC(v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for SetupModel.State(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 48);
  if (v4 > 4) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 48);
  if (v5 > 4)
  {
    sub_247FA98EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), v4);
LABEL_5:
    long long v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    return a1;
  }
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v5;
  sub_247FA98EC(v6, v7, v8, v9, v10, v11, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupModel.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6 && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 246);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 > 4) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 7) {
    return v4 - 6;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SetupModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF5)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 246;
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -6 - a2;
    }
  }
  return result;
}

uint64_t sub_24812D1D4(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 48);
  if (v1 > 4) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_24812D1E8(uint64_t a1, unsigned int a2)
{
  if (a2 > 0xFB)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 48) = 0;
    *(void *)a1 = a2 - 252;
  }
  else if (a2)
  {
    *(unsigned char *)(a1 + 48) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupModel.State()
{
  return &type metadata for SetupModel.State;
}

ValueMetadata *type metadata accessor for SetupModel.LocalRole()
{
  return &type metadata for SetupModel.LocalRole;
}

void destroy for SetupModel.RemoteRole(uint64_t a1)
{
}

uint64_t initializeWithCopy for SetupModel.RemoteRole(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(unsigned __int16 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  sub_247FE4184(*(id *)a2, v4, v5, v7 | (v6 << 32));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 28) = v6;
  *(_DWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithCopy for SetupModel.RemoteRole(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(unsigned __int16 *)(a2 + 28);
  uint64_t v7 = *(unsigned int *)(a2 + 24);
  sub_247FE4184(*(id *)a2, v4, v5, v7 | (v6 << 32));
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void **)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 24) = v7;
  *(_WORD *)(a1 + 28) = v6;
  sub_247FE51A0(v8, v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for SetupModel.RemoteRole(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __int16 v4 = *(_WORD *)(a2 + 28);
  int v5 = *(_DWORD *)(a2 + 24);
  uint64_t v6 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v9 = *(unsigned int *)(a1 + 24) | ((unint64_t)*(unsigned __int16 *)(a1 + 28) << 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 28) = v4;
  sub_247FE51A0(v6, v8, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SetupModel.RemoteRole(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 30)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 16) >> 24) & 0xFFFF0000 | WORD1(*(void *)(a1 + 16));
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for SetupModel.RemoteRole(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 28) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 30) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)double result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = (-65536 * a2) | ((unint64_t)(-a2 >> 16) << 40);
      *(_WORD *)(result + 28) = 0;
      *(_DWORD *)(result + 24) = 0;
      return result;
    }
    *(unsigned char *)(result + 30) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24812D468(uint64_t a1)
{
  if (*(_WORD *)(a1 + 28) >> 6 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return *(_WORD *)(a1 + 28) >> 6;
  }
}

uint64_t sub_24812D484(uint64_t a1)
{
  unsigned int v2 = *(_DWORD *)(a1 + 24);
  uint64_t result = a1 + 24;
  uint64_t v3 = *(unsigned __int16 *)(result + 4);
  *(_DWORD *)uint64_t result = v2;
  *(_WORD *)(result + 4) = ((v2 | (unint64_t)(v3 << 32)) & 0xFFFFFF3FFFFFFFFFLL) >> 32;
  return result;
}

uint64_t sub_24812D4A4(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    unsigned int v2 = *(_DWORD *)(result + 24);
    result += 24;
    unint64_t v3 = (v2 | ((unint64_t)*(unsigned __int16 *)(result + 4) << 32)) & 0xFFFFFF07FFFFFFFFLL;
    *(void *)(result - 8) &= 0xFF0000FFFFuLL;
    *(_DWORD *)uint64_t result = v3;
    *(_WORD *)(result + 4) = (v3 | (a2 << 38)) >> 32;
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 3);
    *(_DWORD *)(result + 24) = 0;
    *(_WORD *)(result + 28) = 192;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupModel.RemoteRole()
{
  return &type metadata for SetupModel.RemoteRole;
}

ValueMetadata *type metadata accessor for SetupModel.RemoteRole.CodingKeys()
{
  return &type metadata for SetupModel.RemoteRole.CodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.RemoteRole.RestrictedCodingKeys()
{
  return &type metadata for SetupModel.RemoteRole.RestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.RemoteRole.BleClientCodingKeys()
{
  return &type metadata for SetupModel.RemoteRole.BleClientCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.RemoteRole.BleServerCodingKeys()
{
  return &type metadata for SetupModel.RemoteRole.BleServerCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.RemoteRole.PreEstablishedClientCodingKeys()
{
  return &type metadata for SetupModel.RemoteRole.PreEstablishedClientCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.RemoteRole.PreEstablishedServerCodingKeys()
{
  return &type metadata for SetupModel.RemoteRole.PreEstablishedServerCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.RemoteRole.BleClientInterceptCodingKeys()
{
  return &type metadata for SetupModel.RemoteRole.BleClientInterceptCodingKeys;
}

unsigned char *_s12AppleIDSetup10SetupModelV9LocalRoleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24812D64CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupModel.LocalRole.CodingKeys()
{
  return &type metadata for SetupModel.LocalRole.CodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.LocalRole.ManualCodingKeys()
{
  return &type metadata for SetupModel.LocalRole.ManualCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.LocalRole.RestrictedCodingKeys()
{
  return &type metadata for SetupModel.LocalRole.RestrictedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SetupModel.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24812D770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupModel.State.CodingKeys()
{
  return &type metadata for SetupModel.State.CodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.State.InitialCodingKeys()
{
  return &type metadata for SetupModel.State.InitialCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.State.DiscoverCodingKeys()
{
  return &type metadata for SetupModel.State.DiscoverCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.State.AuthenticateCodingKeys()
{
  return &type metadata for SetupModel.State.AuthenticateCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.State.SignInCodingKeys()
{
  return &type metadata for SetupModel.State.SignInCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.State.FinishedCodingKeys()
{
  return &type metadata for SetupModel.State.FinishedCodingKeys;
}

unsigned char *_s12AppleIDSetup10SetupModelV10RemoteRoleO19BleClientCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24812D894);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupModel.State.FailedCodingKeys()
{
  return &type metadata for SetupModel.State.FailedCodingKeys;
}

ValueMetadata *type metadata accessor for SetupModel.State.DismissCodingKeys()
{
  return &type metadata for SetupModel.State.DismissCodingKeys;
}

unsigned char *_s12AppleIDSetup10SetupModelV10RemoteRoleO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24812D9A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SetupModel.CodingKeys()
{
  return &type metadata for SetupModel.CodingKeys;
}

unint64_t sub_24812D9E4()
{
  unint64_t result = qword_2692DBAB8;
  if (!qword_2692DBAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAB8);
  }
  return result;
}

unint64_t sub_24812DA3C()
{
  unint64_t result = qword_2692DBAC0;
  if (!qword_2692DBAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAC0);
  }
  return result;
}

unint64_t sub_24812DA94()
{
  unint64_t result = qword_2692DBAC8;
  if (!qword_2692DBAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAC8);
  }
  return result;
}

unint64_t sub_24812DAEC()
{
  unint64_t result = qword_2692DBAD0;
  if (!qword_2692DBAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAD0);
  }
  return result;
}

unint64_t sub_24812DB44()
{
  unint64_t result = qword_2692DBAD8;
  if (!qword_2692DBAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAD8);
  }
  return result;
}

unint64_t sub_24812DB9C()
{
  unint64_t result = qword_2692DBAE0;
  if (!qword_2692DBAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAE0);
  }
  return result;
}

unint64_t sub_24812DBF4()
{
  unint64_t result = qword_2692DBAE8;
  if (!qword_2692DBAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAE8);
  }
  return result;
}

unint64_t sub_24812DC4C()
{
  unint64_t result = qword_2692DBAF0;
  if (!qword_2692DBAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAF0);
  }
  return result;
}

unint64_t sub_24812DCA4()
{
  unint64_t result = qword_2692DBAF8;
  if (!qword_2692DBAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBAF8);
  }
  return result;
}

unint64_t sub_24812DCFC()
{
  unint64_t result = qword_2692DBB00;
  if (!qword_2692DBB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB00);
  }
  return result;
}

unint64_t sub_24812DD54()
{
  unint64_t result = qword_2692DBB08;
  if (!qword_2692DBB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB08);
  }
  return result;
}

unint64_t sub_24812DDAC()
{
  unint64_t result = qword_2692DBB10;
  if (!qword_2692DBB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB10);
  }
  return result;
}

unint64_t sub_24812DE04()
{
  unint64_t result = qword_2692DBB18;
  if (!qword_2692DBB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB18);
  }
  return result;
}

unint64_t sub_24812DE5C()
{
  unint64_t result = qword_2692DBB20;
  if (!qword_2692DBB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB20);
  }
  return result;
}

unint64_t sub_24812DEB4()
{
  unint64_t result = qword_2692DBB28;
  if (!qword_2692DBB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB28);
  }
  return result;
}

unint64_t sub_24812DF0C()
{
  unint64_t result = qword_2692DBB30;
  if (!qword_2692DBB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB30);
  }
  return result;
}

unint64_t sub_24812DF64()
{
  unint64_t result = qword_2692DBB38;
  if (!qword_2692DBB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB38);
  }
  return result;
}

unint64_t sub_24812DFBC()
{
  unint64_t result = qword_2692DBB40;
  if (!qword_2692DBB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB40);
  }
  return result;
}

unint64_t sub_24812E014()
{
  unint64_t result = qword_2692DBB48;
  if (!qword_2692DBB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB48);
  }
  return result;
}

unint64_t sub_24812E06C()
{
  unint64_t result = qword_2692DBB50;
  if (!qword_2692DBB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB50);
  }
  return result;
}

unint64_t sub_24812E0C4()
{
  unint64_t result = qword_2692DBB58;
  if (!qword_2692DBB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB58);
  }
  return result;
}

unint64_t sub_24812E11C()
{
  unint64_t result = qword_2692DBB60;
  if (!qword_2692DBB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB60);
  }
  return result;
}

unint64_t sub_24812E174()
{
  unint64_t result = qword_2692DBB68;
  if (!qword_2692DBB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB68);
  }
  return result;
}

unint64_t sub_24812E1CC()
{
  unint64_t result = qword_2692DBB70;
  if (!qword_2692DBB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB70);
  }
  return result;
}

unint64_t sub_24812E224()
{
  unint64_t result = qword_2692DBB78;
  if (!qword_2692DBB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB78);
  }
  return result;
}

unint64_t sub_24812E27C()
{
  unint64_t result = qword_2692DBB80;
  if (!qword_2692DBB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB80);
  }
  return result;
}

unint64_t sub_24812E2D4()
{
  unint64_t result = qword_2692DBB88;
  if (!qword_2692DBB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB88);
  }
  return result;
}

unint64_t sub_24812E32C()
{
  unint64_t result = qword_2692DBB90;
  if (!qword_2692DBB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB90);
  }
  return result;
}

unint64_t sub_24812E384()
{
  unint64_t result = qword_2692DBB98;
  if (!qword_2692DBB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBB98);
  }
  return result;
}

unint64_t sub_24812E3DC()
{
  unint64_t result = qword_2692DBBA0;
  if (!qword_2692DBBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBA0);
  }
  return result;
}

unint64_t sub_24812E434()
{
  unint64_t result = qword_2692DBBA8;
  if (!qword_2692DBBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBA8);
  }
  return result;
}

unint64_t sub_24812E48C()
{
  unint64_t result = qword_2692DBBB0;
  if (!qword_2692DBBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBB0);
  }
  return result;
}

unint64_t sub_24812E4E4()
{
  unint64_t result = qword_2692DBBB8;
  if (!qword_2692DBBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBB8);
  }
  return result;
}

unint64_t sub_24812E53C()
{
  unint64_t result = qword_2692DBBC0;
  if (!qword_2692DBBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBC0);
  }
  return result;
}

unint64_t sub_24812E594()
{
  unint64_t result = qword_2692DBBC8;
  if (!qword_2692DBBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBC8);
  }
  return result;
}

unint64_t sub_24812E5EC()
{
  unint64_t result = qword_2692DBBD0;
  if (!qword_2692DBBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBD0);
  }
  return result;
}

unint64_t sub_24812E644()
{
  unint64_t result = qword_2692DBBD8;
  if (!qword_2692DBBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBD8);
  }
  return result;
}

unint64_t sub_24812E69C()
{
  unint64_t result = qword_2692DBBE0;
  if (!qword_2692DBBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBE0);
  }
  return result;
}

unint64_t sub_24812E6F4()
{
  unint64_t result = qword_2692DBBE8;
  if (!qword_2692DBBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBE8);
  }
  return result;
}

unint64_t sub_24812E74C()
{
  unint64_t result = qword_2692DBBF0;
  if (!qword_2692DBBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBF0);
  }
  return result;
}

unint64_t sub_24812E7A4()
{
  unint64_t result = qword_2692DBBF8;
  if (!qword_2692DBBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBBF8);
  }
  return result;
}

unint64_t sub_24812E7FC()
{
  unint64_t result = qword_2692DBC00;
  if (!qword_2692DBC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBC00);
  }
  return result;
}

unint64_t sub_24812E854()
{
  unint64_t result = qword_2692DBC08;
  if (!qword_2692DBC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBC08);
  }
  return result;
}

unint64_t sub_24812E8AC()
{
  unint64_t result = qword_2692DBC10;
  if (!qword_2692DBC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBC10);
  }
  return result;
}

unint64_t sub_24812E904()
{
  unint64_t result = qword_2692DBC18;
  if (!qword_2692DBC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBC18);
  }
  return result;
}

unint64_t sub_24812E95C()
{
  unint64_t result = qword_2692DBC20;
  if (!qword_2692DBC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBC20);
  }
  return result;
}

uint64_t sub_24812E9B0()
{
  unint64_t v0 = sub_248175A30();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_24812E9FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265766F63736964 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6568747561 && a2 == 0xEC00000065746163 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E496E676973 && a2 == 0xE600000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7373696D736964 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_24812ECEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7463697274736572 && a2 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24812EDE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7463697274736572 && a2 == 0xEA00000000006465;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65696C43656C62 && a2 == 0xE900000000000074 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6576726553656C62 && a2 == 0xE900000000000072 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000248193050 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000248193070 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000248193090)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24812F060@<X0>(void (*a1)(unsigned char *)@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_248175ED0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v7 + 32))(a2, v9, v6);
}

AppleIDSetup::SKEventType_optional __swiftcall SKEventType.init(rawValue:)(Swift::Int32 rawValue)
{
  if (rawValue >= 0xC) {
    char v2 = 12;
  }
  else {
    char v2 = rawValue;
  }
  *unsigned int v1 = v2;
  return (AppleIDSetup::SKEventType_optional)rawValue;
}

uint64_t SKEventType.rawValue.getter()
{
  return *v0;
}

uint64_t sub_24812F230()
{
  return sub_248175EC0();
}

uint64_t sub_24812F278()
{
  return sub_248175EA0();
}

uint64_t sub_24812F2A4()
{
  return sub_248175EC0();
}

AppleIDSetup::SKEventType_optional sub_24812F2E8(Swift::Int32 *a1)
{
  return SKEventType.init(rawValue:)(*a1);
}

void sub_24812F2F0(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

id SKEvent.init()()
{
  v0[OBJC_IVAR____TtC12AppleIDSetup7SKEvent_eventType] = 0;
  *(void *)&v0[OBJC_IVAR____TtC12AppleIDSetup7SKEvent_error] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SKEvent();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SKEvent()
{
  return self;
}

id SKEvent.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKEvent);
}

id SKAuthenticationPresentEvent.init()()
{
  *(_DWORD *)&v0[OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationPresentEvent_passwordType] = 0;
  unsigned int v1 = &v0[OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationPresentEvent_password];
  objc_super v2 = (objc_class *)type metadata accessor for SKAuthenticationPresentEvent();
  *(void *)unsigned int v1 = 0;
  *((void *)v1 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for SKAuthenticationPresentEvent()
{
  return self;
}

uint64_t sub_24812F4C4()
{
  return swift_bridgeObjectRelease();
}

id SKAuthenticationPresentEvent.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKAuthenticationPresentEvent);
}

id SKAuthenticationRequestEvent.init()()
{
  *(_DWORD *)&v0[OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationRequestEvent_passwordType] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationRequestEvent_pairingFlags] = 0;
  *(_DWORD *)&v0[OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationRequestEvent_throttleSeconds] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SKAuthenticationRequestEvent();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SKAuthenticationRequestEvent()
{
  return self;
}

id SKAuthenticationRequestEvent.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKAuthenticationRequestEvent);
}

void SKAuthenticationResponseEvent.init()()
{
}

uint64_t sub_24812F65C()
{
  return swift_bridgeObjectRelease();
}

id SKAuthenticationResponseEvent.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKAuthenticationResponseEvent);
}

uint64_t type metadata accessor for SKAuthenticationResponseEvent()
{
  return self;
}

id SKEventBasicConfigUpdated.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC12AppleIDSetup25SKEventBasicConfigUpdated_basicConfig] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SKEventBasicConfigUpdated();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SKEventBasicConfigUpdated()
{
  return self;
}

uint64_t sub_24812F770()
{
  return swift_bridgeObjectRelease();
}

id SKEventBasicConfigUpdated.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKEventBasicConfigUpdated);
}

id SKSetupBase.init()()
{
  *(_OWORD *)&v0[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_authTagOverride] = xmmword_24818E360;
  *(_DWORD *)&v0[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_bluetoothUseCase] = 0;
  v0[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_controlFlags] = 0;
  uint64_t v1 = OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_dispatchQueue;
  sub_248003BB0();
  objc_super v2 = v0;
  *(void *)&v0[v1] = sub_248175630();
  int v3 = &v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_eventHandler];
  *int v3 = 0;
  v3[1] = 0;
  *(void *)&v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_messageSessionTemplate] = 0;
  objc_super v4 = &v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_password];
  *objc_super v4 = 0;
  v4[1] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_passwordType] = 0;
  uint64_t v5 = &v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_passwordTypeChangedHandler];
  void *v5 = 0;
  v5[1] = 0;
  *(void *)&v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_peerDevice] = 0;
  v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_persistentPairing] = 0;
  *(_OWORD *)&v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_pskData] = xmmword_24818E360;
  v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_reversePairing] = 0;
  uint64_t v6 = &v2[OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_label];
  *uint64_t v6 = 0;
  v6[1] = 0;

  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for SKSetupBase();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for SKSetupBase()
{
  return self;
}

uint64_t sub_24812F91C(uint64_t a1, uint64_t a2)
{
  return sub_24812F9EC(a1, a2, &OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_authTagOverride, (uint64_t (*)(uint64_t, uint64_t))sub_247FB846C);
}

uint64_t sub_24812F93C(uint64_t result)
{
  *(_DWORD *)(v1 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_bluetoothUseCase) = result;
  return result;
}

void sub_24812F94C(uint64_t a1)
{
  objc_super v2 = *(void **)(v1 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_dispatchQueue);
  *(void *)(v1 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_dispatchQueue) = a1;
}

uint64_t sub_24812F960(uint64_t a1, uint64_t a2)
{
  return sub_24812F9EC(a1, a2, &OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_eventHandler, (uint64_t (*)(uint64_t, uint64_t))sub_247F98D68);
}

void *sub_24812F980()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_messageSessionTemplate);
  id v2 = v1;
  return v1;
}

uint64_t sub_24812F9B0(uint64_t a1, uint64_t a2)
{
  return sub_24812FA4C(a1, a2, &OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_password);
}

uint64_t sub_24812F9BC(uint64_t result)
{
  *(_DWORD *)(v1 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_passwordType) = result;
  return result;
}

uint64_t sub_24812F9CC(uint64_t a1, uint64_t a2)
{
  return sub_24812F9EC(a1, a2, &OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_passwordTypeChangedHandler, (uint64_t (*)(uint64_t, uint64_t))sub_248132540);
}

uint64_t sub_24812F9EC(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = (uint64_t *)(v4 + *a3);
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t *v5 = a1;
  v5[1] = a2;
  return a4(v6, v7);
}

void sub_24812FA0C(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_peerDevice);
  *(void *)(v1 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_peerDevice) = a1;
}

uint64_t sub_24812FA20(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_persistentPairing) = result;
  return result;
}

uint64_t sub_24812FA30(uint64_t result)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_reversePairing) = result;
  return result;
}

uint64_t sub_24812FA40(uint64_t a1, uint64_t a2)
{
  return sub_24812FA4C(a1, a2, &OBJC_IVAR____TtC12AppleIDSetup11SKSetupBase_label);
}

uint64_t sub_24812FA4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)(v3 + *a3);
  *uint64_t v4 = a1;
  v4[1] = a2;
  return swift_bridgeObjectRelease();
}

id SKSetupBase.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKSetupBase);
}

id SKSetupAppleIDSignInServer.init()()
{
  return sub_24812FC08(type metadata accessor for SKSetupAppleIDSignInServer);
}

uint64_t type metadata accessor for SKSetupAppleIDSignInServer()
{
  return self;
}

id SKSetupAppleIDSignInServer.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKSetupAppleIDSignInServer);
}

id SKSetupAppleIDSignInClient.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id SKSetupAppleIDSignInClient.init()()
{
  return sub_24812FC08(type metadata accessor for SKSetupAppleIDSignInClient);
}

id sub_24812FC08(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t type metadata accessor for SKSetupAppleIDSignInClient()
{
  return self;
}

id sub_24812FC7C(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  v4.receiver = a1;
  v4.super_class = (Class)a3();
  return objc_msgSendSuper2(&v4, sel_init);
}

id SKSetupAppleIDSignInClient.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKSetupAppleIDSignInClient);
}

id SKDevice.init()()
{
  *(_WORD *)&v0[OBJC_IVAR____TtC12AppleIDSetup8SKDevice_blePSM] = 0;
  id v1 = &v0[OBJC_IVAR____TtC12AppleIDSetup8SKDevice_identifier];
  id v2 = (objc_class *)type metadata accessor for SKDevice();
  *(void *)id v1 = 0;
  *((void *)v1 + 1) = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for SKDevice()
{
  return self;
}

id SKDevice.__deallocating_deinit()
{
  return sub_24812FDC8(type metadata accessor for SKDevice);
}

id sub_24812FDC8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

unint64_t ProximityAppleIDSetupBaseIdentifier.getter()
{
  return 0xD000000000000040;
}

id SetupBase.base.getter()
{
  return *(id *)(v0 + 112);
}

id SetupBase.queue.getter()
{
  return *(id *)(v0 + 120);
}

void *SetupBase.peerDevice.getter()
{
  id v1 = *(void **)(v0 + 128);
  id v2 = v1;
  return v1;
}

uint64_t SetupBase.persistentPairing.getter()
{
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t SetupBase.reversePairing.getter()
{
  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t SetupBase.fixedPin.getter()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetupBase.targetAuthTag.getter()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SetupBase.pinType.getter()
{
  return *(unsigned int *)(v0 + 176);
}

uint64_t SetupBase.stateHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 184);
  swift_retain();
  return v1;
}

uint64_t sub_24812FF10(uint64_t a1)
{
  uint64_t v3 = *v1;
  type metadata accessor for MessageSessionTransport();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - v6;
  objc_super v8 = (void (*)(uint64_t *, uint64_t, char *))v1[23];
  unint64_t v9 = (char *)v1 + *(void *)(v3 + 184);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v9, v4);
  v8(v1, a1, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24813007C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 184);
  swift_beginAccess();
  type metadata accessor for MessageSessionTransport();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SetupBase.__allocating_init(base:queue:peerDevice:persistentPairing:reversePairing:fixedPin:targetAuthTag:pinType:stateHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17 = swift_allocObject();
  SetupBase.init(base:queue:peerDevice:persistentPairing:reversePairing:fixedPin:targetAuthTag:pinType:stateHandler:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
  return v17;
}

uint64_t SetupBase.init(base:queue:peerDevice:persistentPairing:reversePairing:fixedPin:targetAuthTag:pinType:stateHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12)
{
  swift_defaultActor_initialize();
  type metadata accessor for MessageSessionTransport();
  type metadata accessor for BluetoothBaseState();
  swift_storeEnumTagMultiPayload();
  *(void *)(v12 + 112) = a1;
  *(void *)(v12 + 120) = a2;
  *(void *)(v12 + 128) = a3;
  *(unsigned char *)(v12 + 136) = a4;
  *(unsigned char *)(v12 + 137) = a5;
  *(void *)(v12 + 144) = a6;
  *(void *)(v12 + 152) = a7;
  *(void *)(v12 + 160) = a8;
  *(void *)(v12 + 168) = a9;
  *(_DWORD *)(v12 + 176) = a10;
  *(void *)(v12 + 184) = a11;
  *(void *)(v12 + 192) = a12;
  return v12;
}

id *SetupBase.deinit()
{
  uint64_t v1 = v0;
  (*(void (**)(void))((*MEMORY[0x263F8EED0] & *(void *)v0[14]) + 0x238))();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  id v2 = (char *)v1 + *((void *)*v1 + 23);
  type metadata accessor for MessageSessionTransport();
  uint64_t v3 = type metadata accessor for BluetoothBaseState();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_defaultActor_destroy();
  return v1;
}

uint64_t SetupBase.__deallocating_deinit()
{
  SetupBase.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_248130474()
{
  uint64_t v1 = v0;
  v28[1] = *v0;
  type metadata accessor for MessageSessionTransport();
  uint64_t v2 = type metadata accessor for BluetoothBaseState();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  objc_super v8 = (char *)v28 - v7;
  sub_24813007C((uint64_t)v28 - v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v8, v2);
  if (EnumCaseMultiPayload == 4)
  {
    swift_storeEnumTagMultiPayload();
    sub_248131718((uint64_t)v6);
    v10(v6, v2);
    uint64_t v11 = (void *)v1[14];
    uint64_t v12 = v1[18];
    uint64_t v13 = v1[19];
    uint64_t v14 = (void *)MEMORY[0x263F8EED0];
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))((*MEMORY[0x263F8EED0] & *v11) + 0x160);
    swift_bridgeObjectRetain();
    v15(v12, v13);
    unint64_t v16 = v1[21];
    if (v16)
    {
      unint64_t v17 = v1[20];
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_24802775C(v17, v16);
    }
    else
    {
      uint64_t v18 = 0;
      unint64_t v19 = 0xF000000000000000;
    }
    (*(void (**)(uint64_t, unint64_t))((*v14 & *v11) + 0xD0))(v18, v19);
    (*(void (**)(void))((*v14 & *v11) + 0x178))(*((unsigned int *)v1 + 44));
    uint64_t v22 = *(void (**)(void (*)(char *), void *))((*v14 & *v11) + 0x130);
    swift_retain();
    v22(sub_2481318A4, v1);
    uint64_t v23 = *(void (**)(void (*)(), void *))((*v14 & *v11) + 0x190);
    swift_retain();
    v23(sub_2481318A8, v1);
    (*(void (**)(uint64_t))((*v14 & *v11) + 0xE8))(393219);
    (*(void (**)(id))((*v14 & *v11) + 0x118))((id)v1[15]);
    uint64_t v24 = (void *)v1[16];
    long long v25 = *(void (**)(void *))((*v14 & *v11) + 0x1A8);
    id v26 = v24;
    v25(v24);
    (*(void (**)(void))((*v14 & *v11) + 0x1C0))(*((unsigned __int8 *)v1 + 136));
    (*(void (**)(void))((*v14 & *v11) + 0x1F0))(*((unsigned __int8 *)v1 + 137));
    uint64_t v27 = (*(uint64_t (**)(uint64_t, unint64_t))((*v14 & *v11) + 0x220))(0x7574655320534150, 0xED00006573614270);
    return (*(uint64_t (**)(uint64_t))((*v14 & *v11) + 0x230))(v27);
  }
  else
  {
    type metadata accessor for SetupBase.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v20 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_248130A40()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 112)) + 0x238))();
}

uint64_t type metadata accessor for SetupBase.Failure()
{
  return __swift_instantiateGenericMetadata();
}

void sub_248130AB4(char *a1)
{
  type metadata accessor for MessageSessionTransport();
  uint64_t v3 = type metadata accessor for BluetoothBaseState();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v20 - v9;
  switch(a1[OBJC_IVAR____TtC12AppleIDSetup7SKEvent_eventType])
  {
    case 1:
    case 3:
    case 4:
    case 5:
      goto LABEL_10;
    case 2:
      uint64_t v11 = *(void **)&a1[OBJC_IVAR____TtC12AppleIDSetup7SKEvent_error];
      if (v11)
      {
        id v12 = v11;
        swift_willThrow();
      }
      *(void *)uint64_t v7 = v11;
      v7[8] = v11 != 0;
      swift_storeEnumTagMultiPayload();
      sub_248131718((uint64_t)v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      return;
    case 7:
      type metadata accessor for SKAuthenticationRequestEvent();
      uint64_t v13 = swift_dynamicCastClass();
      if (!v13) {
        return;
      }
      uint64_t v14 = v13;
      v20[0] = a1;
      sub_248131270(v14);
      break;
    case 8:
      type metadata accessor for SKAuthenticationPresentEvent();
      uint64_t v15 = swift_dynamicCastClass();
      if (!v15) {
        return;
      }
      uint64_t v16 = v15;
      v20[0] = a1;
      sub_248131118(v16);
      break;
    case 10:
      MEMORY[0x270FA5388](v8);
      v20[-2] = v1;
      v20[-1] = a1;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
      sub_24812F060((void (*)(unsigned char *))sub_248132360, (uint64_t)v10);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      sub_248131718((uint64_t)v10);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
      return;
    case 11:
      type metadata accessor for SKEventBasicConfigUpdated();
      uint64_t v17 = swift_dynamicCastClass();
      if (!v17) {
        return;
      }
      uint64_t v18 = v17;
      v20[0] = a1;
      sub_248131F5C(v18);
      break;
    default:
      return;
  }
  unint64_t v19 = (void *)v20[0];
}

uint64_t sub_248130E54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v20 = a4;
  uint64_t v19 = *a1;
  uint64_t v6 = type metadata accessor for MessageSessionTransport();
  uint64_t v7 = sub_248175700();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - v10;
  id v12 = (void *)(*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *(void *)a1[14]) + 0x140))(v9);
  if (v12)
  {
    MessageSessionTransport.init(templateSession:identifier:)(v12, 0xD000000000000040, 0x8000000248191420, (uint64_t)v11);
    uint64_t v13 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v6) != 1) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v20, v11, v6);
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  uint64_t v14 = *(void **)(a2 + OBJC_IVAR____TtC12AppleIDSetup7SKEvent_error);
  if (v14)
  {
    uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC12AppleIDSetup7SKEvent_error);
  }
  else
  {
    type metadata accessor for SetupBase.Failure();
    swift_getWitnessTable();
    uint64_t v15 = swift_allocError();
    uint64_t v14 = 0;
    unsigned char *v17 = 0;
  }
  id v18 = v14;
  uint64_t result = swift_willThrow();
  uint64_t *v21 = v15;
  return result;
}

uint64_t sub_248131118(uint64_t a1)
{
  type metadata accessor for MessageSessionTransport();
  uint64_t v3 = type metadata accessor for BluetoothBaseState();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = *(void *)(a1 + OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationPresentEvent_password + 8);
  if (v8)
  {
    LODWORD(v9) = *(_DWORD *)(a1 + OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationPresentEvent_passwordType);
    if (v9) {
      uint64_t v9 = v9;
    }
    else {
      uint64_t v9 = *(unsigned int *)(v1 + 176);
    }
    *(void *)uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationPresentEvent_password);
    *((void *)v7 + 1) = v8;
    *((void *)v7 + 3) = 0;
    *((void *)v7 + 4) = 0;
    *((void *)v7 + 2) = v9;
    v7[40] = 0;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_248131718((uint64_t)v7);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return result;
}

uint64_t sub_248131270(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v19 = *(void *)(*(void *)v1 + 88);
  uint64_t v18 = *(void *)(v3 + 96);
  type metadata accessor for MessageSessionTransport();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - v6;
  unsigned int v8 = *(_DWORD *)(a1 + OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationRequestEvent_passwordType);
  unint64_t v9 = *(int *)(a1 + OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationRequestEvent_throttleSeconds);
  uint64_t v10 = 1000000000000000000 * v9;
  uint64_t v11 = (__PAIR128__((uint64_t)(int)v9 >> 31, v9) * 0xDE0B6B3A7640000) >> 64;
  if (v8) {
    uint64_t v12 = v8;
  }
  else {
    uint64_t v12 = v1[44];
  }
  uint64_t v13 = *(unsigned int *)(a1 + OBJC_IVAR____TtC12AppleIDSetup28SKAuthenticationRequestEvent_pairingFlags);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = *(void *)(v3 + 80);
  uint64_t v16 = v18;
  v15[3] = v19;
  void v15[4] = v16;
  v15[5] = v14;
  *(void *)uint64_t v7 = v12 | (v13 << 32);
  *((void *)v7 + 1) = v10;
  *((void *)v7 + 2) = v11;
  *((void *)v7 + 3) = sub_248131F50;
  *((void *)v7 + 4) = v15;
  v7[40] = 1;
  swift_storeEnumTagMultiPayload();
  sub_248131718((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_248131470(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    uint64_t v6 = (objc_class *)type metadata accessor for SKAuthenticationResponseEvent();
    uint64_t v7 = (char *)objc_allocWithZone(v6);
    unsigned int v8 = &v7[OBJC_IVAR____TtC12AppleIDSetup29SKAuthenticationResponseEvent_password];
    *(void *)unsigned int v8 = a1;
    *((void *)v8 + 1) = a2;
    v10.receiver = v7;
    v10.super_class = v6;
    swift_bridgeObjectRetain();
    id v9 = objc_msgSendSuper2(&v10, sel_init);
    (*(void (**)(void))((*MEMORY[0x263F8EED0] & **(void **)(v5 + 112)) + 0x240))();
    swift_release();
  }
}

uint64_t sub_248131564()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & **(void **)(v0 + 112)) + 0x240))();
}

uint64_t SetupBase.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_2481315CC()
{
  return SetupBase.unownedExecutor.getter();
}

uint64_t sub_2481315E8()
{
  uint64_t v2 = *v0;
  *(void *)(v1 + 16) = *v0;
  return MEMORY[0x270FA2498](sub_248131608, v2, 0);
}

uint64_t sub_248131608()
{
  sub_248130474();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248131684()
{
  return sub_248130A40();
}

char *SKDevice.__allocating_init(blePsm:identifier:)(__int16 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_msgSend(objc_allocWithZone(v3), sel_init);
  *(_WORD *)&v7[OBJC_IVAR____TtC12AppleIDSetup8SKDevice_blePSM] = a1;
  unsigned int v8 = &v7[OBJC_IVAR____TtC12AppleIDSetup8SKDevice_identifier];
  *(void *)unsigned int v8 = a2;
  *((void *)v8 + 1) = a3;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_248131718(uint64_t a1)
{
  uint64_t v3 = *v1;
  type metadata accessor for MessageSessionTransport();
  uint64_t v4 = type metadata accessor for BluetoothBaseState();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-v6];
  unsigned int v8 = (char *)v1 + *(void *)(v3 + 184);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v5 + 16))(v7, v8, v4);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 24))(v8, a1, v4);
  swift_endAccess();
  sub_24812FF10((uint64_t)v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_2481318A8()
{
}

unint64_t sub_2481318F0()
{
  unint64_t result = qword_2692DBCE8;
  if (!qword_2692DBCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBCE8);
  }
  return result;
}

uint64_t sub_248131944@<X0>(uint64_t a1@<X8>)
{
  return sub_24813007C(a1);
}

uint64_t sub_248131968(uint64_t a1)
{
  return sub_248131718(a1);
}

uint64_t sub_24813198C()
{
  return 24;
}

__n128 sub_248131998(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for SKSetupType()
{
  return &type metadata for SKSetupType;
}

uint64_t getEnumTagSinglePayload for SKEventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SKEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248131B18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SKEventType()
{
  return &type metadata for SKEventType;
}

uint64_t method lookup function for SKEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SKEvent);
}

uint64_t method lookup function for SKAuthenticationPresentEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SKAuthenticationPresentEvent);
}

uint64_t method lookup function for SKAuthenticationRequestEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SKAuthenticationRequestEvent);
}

uint64_t method lookup function for SKAuthenticationResponseEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SKAuthenticationResponseEvent);
}

uint64_t method lookup function for SKEventBasicConfigUpdated(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SKEventBasicConfigUpdated);
}

uint64_t method lookup function for SKSetupBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SKSetupBase);
}

uint64_t method lookup function for SKDevice(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SKDevice);
}

uint64_t sub_248131BF8()
{
  type metadata accessor for MessageSessionTransport();
  uint64_t result = type metadata accessor for BluetoothBaseState();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t type metadata accessor for SetupBase()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for SetupBase(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SetupBase);
}

uint64_t dispatch thunk of SetupBase.state.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of SetupBase.__allocating_init(base:queue:peerDevice:persistentPairing:reversePairing:fixedPin:targetAuthTag:pinType:stateHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of SetupBase.activate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of SetupBase.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

unsigned char *sub_248131DD0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x248131E9CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_248131EC4()
{
  return swift_getWitnessTable();
}

uint64_t sub_248131EE0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_248131F18()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_248131F50(uint64_t a1, uint64_t a2)
{
}

void sub_248131F5C(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC12AppleIDSetup25SKEventBasicConfigUpdated_basicConfig;
  uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC12AppleIDSetup25SKEventBasicConfigUpdated_basicConfig);
  if (v3)
  {
    *(void *)&long long v27 = 0x676E616C5FLL;
    *((void *)&v27 + 1) = 0xE500000000000000;
    swift_bridgeObjectRetain();
    sub_248175810();
    if (*(void *)(v3 + 16) && (unint64_t v4 = sub_247FB6460((uint64_t)&v25), (v5 & 1) != 0))
    {
      sub_247FB8B14(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v27);
    }
    else
    {
      long long v27 = 0u;
      long long v28 = 0u;
    }
    sub_247FB84B0((uint64_t)&v25);
    swift_bridgeObjectRelease();
    if (*((void *)&v28 + 1))
    {
      int v6 = swift_dynamicCast();
      if (v6) {
        uint64_t v7 = v25;
      }
      else {
        uint64_t v7 = 0;
      }
      if (v6) {
        uint64_t v8 = v26;
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v9 = *(void *)(a1 + v2);
      if (!v9) {
        goto LABEL_14;
      }
      goto LABEL_17;
    }
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  sub_24804FEB8((uint64_t)&v27);
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = *(void *)(a1 + v2);
  if (!v9)
  {
LABEL_14:
    long long v27 = 0u;
    long long v28 = 0u;
LABEL_28:
    sub_24804FEB8((uint64_t)&v27);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    goto LABEL_29;
  }
LABEL_17:
  *(void *)&long long v27 = 0x656C61636F6C5FLL;
  *((void *)&v27 + 1) = 0xE700000000000000;
  swift_bridgeObjectRetain();
  sub_248175810();
  if (*(void *)(v9 + 16) && (unint64_t v10 = sub_247FB6460((uint64_t)&v25), (v11 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(v9 + 56) + 32 * v10, (uint64_t)&v27);
  }
  else
  {
    long long v27 = 0u;
    long long v28 = 0u;
  }
  sub_247FB84B0((uint64_t)&v25);
  swift_bridgeObjectRelease();
  if (!*((void *)&v28 + 1)) {
    goto LABEL_28;
  }
  int v12 = swift_dynamicCast();
  if (v12) {
    uint64_t v13 = v25;
  }
  else {
    uint64_t v13 = 0;
  }
  if (v12) {
    uint64_t v14 = v26;
  }
  else {
    uint64_t v14 = 0;
  }
LABEL_29:
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_248174B90();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B13B730);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_248174B70();
  os_log_type_t v17 = sub_2481755B0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v24 = v13;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(void *)&long long v27 = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v25 = v7;
    uint64_t v26 = v8;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D50B0);
    uint64_t v20 = sub_248175190();
    uint64_t v25 = sub_247FB6D24(v20, v21, (uint64_t *)&v27);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v25 = v24;
    uint64_t v26 = v14;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_248175190();
    uint64_t v25 = sub_247FB6D24(v22, v23, (uint64_t *)&v27);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v16, v17, "Received basic config language code (%s) and locale (%s)", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v19, -1, -1);
    MEMORY[0x24C574E00](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_248132360@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_248130E54(*(uint64_t **)(v2 + 16), *(void *)(v2 + 24), a1, a2);
}

void sub_248132380()
{
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_248174B90();
  __swift_project_value_buffer(v0, (uint64_t)qword_2692D6A78);
  oslog = sub_248174B70();
  os_log_type_t v1 = sub_2481755B0();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v3 = swift_slowAlloc();
    uint64_t v7 = v3;
    *(_DWORD *)uint64_t v2 = 136315138;
    type metadata accessor for CUPasswordType(0);
    uint64_t v4 = sub_248175190();
    sub_247FB6D24(v4, v5, &v7);
    sub_248175730();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, oslog, v1, "Password type changed to %s", v2, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v3, -1, -1);
    MEMORY[0x24C574E00](v2, -1, -1);
  }
  else
  {
  }
}

uint64_t sub_248132564()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_2692DBE00);
  __swift_project_value_buffer(v0, (uint64_t)qword_2692DBE00);
  return sub_248174B80();
}

uint64_t static AISLogger.routing.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2692D4DE8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2692DBE00);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_248132684()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_2692DBE18);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2692DBE18);
  if (qword_2692D4DE8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2692DBE00);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

BOOL static CommandRouter.Role.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CommandRouter.Role.hash(into:)()
{
  return sub_248175E70();
}

uint64_t CommandRouter.Role.hashValue.getter()
{
  return sub_248175EC0();
}

void CommandRouter.role.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 112);
}

uint64_t CommandRouter.selfAccountId.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[15];
  uint64_t v3 = v1[16];
  uint64_t v4 = v1[17];
  uint64_t v5 = v1[18];
  uint64_t v6 = v1[19];
  uint64_t v7 = v1[20];
  uint64_t v8 = v1[21];
  uint64_t v9 = v1[22];
  uint64_t v10 = v1[23];
  uint64_t v11 = v1[24];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_247F9819C(v2, v3);
}

uint64_t CommandRouter.accountIDsByService.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CommandRouter.v1CommandHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 208);
  swift_retain();
  return v1;
}

uint64_t sub_248132864@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 224);
  uint64_t v5 = *(void *)(v3 + 232);
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_2480D2D18;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_247F98D10(v4);
}

uint64_t sub_2481328F8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_24814A9DC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v7 + 224);
  *(void *)(v7 + 224) = v6;
  *(void *)(v7 + 232) = v5;
  sub_247F98D10(v3);
  return sub_247F98D68(v8);
}

uint64_t sub_2481329B4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 224);
  sub_247F98D10(v1);
  return v1;
}

uint64_t sub_248132A04(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 224);
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = a2;
  return sub_247F98D68(v5);
}

uint64_t (*sub_248132A58())()
{
  return j_j__swift_endAccess;
}

uint64_t (*sub_248132AAC())()
{
  return j__swift_endAccess;
}

uint64_t sub_248132B08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter__activeTransport;
  swift_beginAccess();
  uint64_t result = sub_247FBB338(v3, (uint64_t)&v13, &qword_2692DBE38);
  if (*((void *)&v14 + 1))
  {
    long long v5 = v14;
    *(_OWORD *)a1 = v13;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = v15;
  }
  else
  {
    sub_247FB33D4((uint64_t)&v13, &qword_2692DBE38);
    if (qword_2692D4DF0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_248174B90();
    __swift_project_value_buffer(v6, (uint64_t)qword_2692DBE18);
    uint64_t v7 = sub_248174B70();
    os_log_type_t v8 = sub_2481755C0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_247F93000, v7, v8, "Throwing error due to missing active transport", v9, 2u);
      MEMORY[0x24C574E00](v9, -1, -1);
    }

    type metadata accessor for CommandRouter.Failure(0);
    sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
    swift_allocError();
    uint64_t v11 = v10;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 4, v12);
    return swift_willThrow();
  }
  return result;
}

uint64_t type metadata accessor for CommandRouter.Failure(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_2692DBF78);
}

uint64_t CommandRouter.__allocating_init(for:selfAccountId:accountIDsByService:signInPreflightHelper:v1CommandHandler:handshakeHandler:)(char *a1, long long *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = swift_allocObject();
  CommandRouter.init(for:selfAccountId:accountIDsByService:signInPreflightHelper:v1CommandHandler:handshakeHandler:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t CommandRouter.init(for:selfAccountId:accountIDsByService:signInPreflightHelper:v1CommandHandler:handshakeHandler:)(char *a1, long long *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v13 = *a1;
  long long v29 = a2[1];
  long long v30 = *a2;
  long long v27 = a2[3];
  long long v28 = a2[2];
  uint64_t v15 = *((void *)a2 + 8);
  uint64_t v14 = *((void *)a2 + 9);
  uint64_t v31 = *a4;
  swift_defaultActor_initialize();
  *(unsigned char *)(v8 + 304) = 0;
  *(_OWORD *)(v8 + 272) = 0u;
  *(_OWORD *)(v8 + 288) = 0u;
  *(_OWORD *)(v8 + 240) = 0u;
  *(_OWORD *)(v8 + 256) = 0u;
  *(_OWORD *)(v8 + 224) = 0u;
  uint64_t v16 = v8 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_handshakeContinuation;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBE50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(void *)(v8 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveTask) = 0;
  uint64_t v18 = v8 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveInterval;
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 1;
  uint64_t v19 = v8 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_enforceKeepAlive;
  *(void *)uint64_t v19 = 0;
  *(void *)(v19 + 8) = 0;
  *(unsigned char *)(v19 + 16) = 1;
  uint64_t v20 = v8 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter__activeTransport;
  *(_OWORD *)uint64_t v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(void *)(v20 + 32) = 0;
  *(void *)(v8 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_signInPreflightHelper) = 0;
  *(unsigned char *)(v8 + 112) = v13;
  *(_OWORD *)(v8 + 120) = v30;
  *(_OWORD *)(v8 + 136) = v29;
  *(_OWORD *)(v8 + 152) = v28;
  *(_OWORD *)(v8 + 168) = v27;
  *(void *)(v8 + 184) = v15;
  *(void *)(v8 + 192) = v14;
  *(void *)(v8 + 200) = a3;
  *(void *)(v8 + 208) = a5;
  *(void *)(v8 + 216) = a6;
  if (a7)
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a7;
    *(void *)(v21 + 24) = a8;
    uint64_t v22 = &unk_2692DBEA0;
  }
  else
  {
    uint64_t v22 = &unk_2692DBE78;
    uint64_t v21 = 0;
  }
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = v21;
  uint64_t v24 = (void *)(v8 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_handshakeHandler);
  void *v24 = &unk_2692DBE88;
  v24[1] = v23;
  *(void *)(v8 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_signInPreflightHelper) = v31;
  swift_release();
  return v8;
}

uint64_t sub_248132FD4(uint64_t a1, uint64_t *a2, uint64_t a3, int *a4)
{
  uint64_t v7 = *a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, v7, a3);
}

uint64_t sub_2481330C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  long long v6 = *(_OWORD *)(a3 + 144);
  *(_OWORD *)(v3 + 144) = *(_OWORD *)(a3 + 128);
  *(_OWORD *)(v3 + 160) = v6;
  *(void *)(v3 + 176) = *(void *)(a3 + 160);
  long long v7 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v3 + 96) = v7;
  long long v8 = *(_OWORD *)(a3 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(a3 + 96);
  *(_OWORD *)(v3 + 128) = v8;
  long long v9 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v3 + 32) = v9;
  long long v10 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v3 + 64) = v10;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v3 + 184) = v11;
  *(void *)uint64_t v11 = v3;
  *(void *)(v11 + 8) = sub_2481331E4;
  *(void *)(v11 + 840) = v5;
  *(void *)(v11 + 832) = a1;
  long long v12 = *(_OWORD *)(v3 + 128);
  long long v13 = *(_OWORD *)(v3 + 144);
  long long v14 = *(_OWORD *)(v3 + 160);
  *(void *)(v11 + 176) = *(void *)(v3 + 176);
  *(_OWORD *)(v11 + 144) = v13;
  *(_OWORD *)(v11 + 160) = v14;
  *(_OWORD *)(v11 + 128) = v12;
  long long v15 = *(_OWORD *)(v3 + 64);
  long long v16 = *(_OWORD *)(v3 + 80);
  long long v17 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(v11 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(v11 + 112) = v17;
  *(_OWORD *)(v11 + 64) = v15;
  *(_OWORD *)(v11 + 80) = v16;
  long long v18 = *(_OWORD *)(v3 + 16);
  long long v19 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(v11 + 48) = v19;
  *(_OWORD *)(v11 + 16) = v18;
  return MEMORY[0x270FA2498](sub_24813F3A4, v5, 0);
}

uint64_t sub_2481331E4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_248133318, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_248133318()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248133330(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 16) = a2;
  long long v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *long long v7 = v4;
  v7[1] = sub_247FC8B14;
  return v9(a1, v4 + 16, a3);
}

uint64_t sub_248133428(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 224);
  *(void *)(v2 + 224) = a1;
  *(void *)(v2 + 232) = a2;
  sub_247F98D10(a1);
  return sub_247F98D68(v5);
}

uint64_t sub_248133498(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveInterval;
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  *(unsigned char *)(v5 + 16) = 0;
  char v6 = a4 & 1;
  if (a4) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = a3;
  }
  uint64_t v8 = v4 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_enforceKeepAlive;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v8 = 0;
  *(void *)(v8 + 8) = v7;
  *(unsigned char *)(v8 + 16) = v6;
  return result;
}

uint64_t sub_248133508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 248);
  if (v2)
  {
    uint64_t v4 = *(void *)(v1 + 288);
    uint64_t v3 = *(void *)(v1 + 296);
    uint64_t v6 = *(void *)(v1 + 272);
    uint64_t v5 = *(void *)(v1 + 280);
    uint64_t v7 = *(void *)(v1 + 256);
    uint64_t v8 = *(void *)(v1 + 264);
    char v9 = *(unsigned char *)(v1 + 304) & 1;
    *(void *)a1 = *(void *)(v1 + 240);
    *(void *)(a1 + 8) = v2;
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v5;
    *(void *)(a1 + 48) = v4;
    *(void *)(a1 + 56) = v3;
    *(unsigned char *)(a1 + 64) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_247FF6AA4(v6, v5);
  }
  else
  {
    if (qword_2692D4DF0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_248174B90();
    __swift_project_value_buffer(v11, (uint64_t)qword_2692DBE18);
    long long v12 = sub_248174B70();
    os_log_type_t v13 = sub_2481755D0();
    if (os_log_type_enabled(v12, v13))
    {
      long long v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v14 = 0;
      _os_log_impl(&dword_247F93000, v12, v13, "Failed to unwrap handshake device info", v14, 2u);
      MEMORY[0x24C574E00](v14, -1, -1);
    }

    type metadata accessor for CommandRouter.Failure(0);
    sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
    swift_allocError();
    uint64_t v16 = v15;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 3, 4, v17);
    return swift_willThrow();
  }
}

uint64_t sub_2481336F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a1;
  v5[11] = a3;
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24813378C, v4, 0);
}

uint64_t sub_24813378C()
{
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  long long v29 = v0 + 2;
  uint64_t v1 = sub_248174B90();
  __swift_project_value_buffer(v1, (uint64_t)qword_2692DBE18);
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_247F93000, v2, v3, "Registering new transport", v4, 2u);
    MEMORY[0x24C574E00](v4, -1, -1);
  }
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[11];

  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &unk_2692DBEB8;
  *(void *)(v8 + 24) = v7;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v5 + 24))(&unk_2692DBEC8, v8, v6, v5);
  swift_release();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v5 + 32);
  swift_retain();
  v10(sub_248140A90, v9, v6, v5);
  swift_release_n();
  TransportBuilding.buildAny()(v6, v5, v29);
  uint64_t v12 = v0[13];
  uint64_t v13 = v12 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter__activeTransport;
  swift_beginAccess();
  sub_24814A8A8((uint64_t)v29, v13, &qword_2692DBE38);
  swift_endAccess();
  if (*(unsigned char *)(v12 + 112))
  {
    if (*(unsigned char *)(v12 + 112) == 1)
    {
      long long v14 = sub_248174B70();
      os_log_type_t v15 = sub_2481755C0();
      if (os_log_type_enabled(v14, v15))
      {
        uint64_t v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v16 = 0;
        _os_log_impl(&dword_247F93000, v14, v15, "Registered server transport, will now wait for handshake from client", v16, 2u);
        MEMORY[0x24C574E00](v16, -1, -1);
      }

      swift_retain();
      uint64_t v17 = (void *)swift_task_alloc();
      v0[17] = v17;
      void *v17 = v0;
      v17[1] = sub_248133E50;
      uint64_t v18 = v0[13];
      uint64_t v19 = MEMORY[0x263F8EE60] + 8;
      return MEMORY[0x270F08368](v17, 0xA055690D9DB80000, 1, &unk_2692DBED8, v18, v19);
    }
    else
    {
      uint64_t v25 = sub_248174B70();
      os_log_type_t v26 = sub_2481755C0();
      if (os_log_type_enabled(v25, v26))
      {
        long long v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v27 = 0;
        _os_log_impl(&dword_247F93000, v25, v26, "Registered transport for ids channel", v27, 2u);
        MEMORY[0x24C574E00](v27, -1, -1);
      }

      swift_task_dealloc();
      swift_task_dealloc();
      long long v28 = (uint64_t (*)(void))v0[1];
      return v28();
    }
  }
  else
  {
    uint64_t v20 = sub_248174B70();
    os_log_type_t v21 = sub_2481755C0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl(&dword_247F93000, v20, v21, "Register client transport, will now perform handshake with server", v22, 2u);
      MEMORY[0x24C574E00](v22, -1, -1);
    }

    uint64_t v23 = swift_task_alloc();
    v0[16] = v23;
    *(void *)uint64_t v23 = v0;
    *(void *)(v23 + 8) = sub_248133D1C;
    uint64_t v24 = v0[13];
    *(void *)(v23 + 752) = v24;
    *(unsigned char *)(v23 + 617) = 0;
    return MEMORY[0x270FA2498](sub_248134A88, v24, 0);
  }
}

uint64_t sub_248133D1C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_248133E50()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  if (v0)
  {
    uint64_t v4 = sub_248133FF4;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_248133F88;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248133F88()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248133FF4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248134068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_248134140, 0, 0);
}

uint64_t sub_248134140()
{
  uint64_t v23 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[13] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[14] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_2481344A8;
    uint64_t v3 = v0[6];
    uint64_t v4 = v0[7];
    return sub_24813CE5C(v3, v4);
  }
  else
  {
    if (qword_2692D4DF0 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[12];
    uint64_t v7 = v0[7];
    uint64_t v8 = sub_248174B90();
    __swift_project_value_buffer(v8, (uint64_t)qword_2692DBE18);
    sub_247FBB338(v7, v6, &qword_2692D85C0);
    uint64_t v9 = sub_248174B70();
    os_log_type_t v10 = sub_2481755D0();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = v0[12];
    if (v11)
    {
      uint64_t v13 = v0[11];
      long long v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v22 = v15;
      *(_DWORD *)long long v14 = 136315138;
      sub_247FBB338(v12, v13, &qword_2692D85C0);
      uint64_t v16 = sub_248175190();
      v0[5] = sub_247FB6D24(v16, v17, &v22);
      sub_248175730();
      swift_bridgeObjectRelease();
      sub_247FB33D4(v12, &qword_2692D85C0);
      _os_log_impl(&dword_247F93000, v9, v10, "Unable to receive message because router is deallocated: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v15, -1, -1);
      MEMORY[0x24C574E00](v14, -1, -1);
    }
    else
    {
      sub_247FB33D4(v0[12], &qword_2692D85C0);
    }

    uint64_t v18 = v0[9];
    uint64_t v19 = v0[10];
    type metadata accessor for CommandRouter.Failure(0);
    sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v20, 2, 4, v18);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_2481344A8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_2481345A4, 0, 0);
}

uint64_t sub_2481345A4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24813461C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_248134708;
  return v8(a1, a2);
}

uint64_t sub_248134708()
{
  uint64_t v1 = *(void *)(*v0 + 16);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_247FB33D4(v1, &qword_2692D85C0);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_248134820()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_2481753D0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    long long v6[4] = v4;
    sub_247FFC0C4((uint64_t)v2, (uint64_t)&unk_2692DC030, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_248134938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_248134958, a4, 0);
}

uint64_t sub_248134958()
{
  sub_248139F84();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2481349B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79D0;
  v4[11] = a2;
  return MEMORY[0x270FA2498](sub_248138F28, a2, 0);
}

uint64_t sub_248134A64(char a1)
{
  *(void *)(v2 + 752) = v1;
  *(unsigned char *)(v2 + 617) = a1;
  return MEMORY[0x270FA2498](sub_248134A88, v1, 0);
}

uint64_t sub_248134A88()
{
  uint64_t v44 = v0;
  uint64_t v1 = (char *)(v0 + 617);
  if (*(unsigned char *)(v0 + 617))
  {
    char v2 = 0;
    long long v3 = 0uLL;
    char v4 = 1;
    long long v5 = 0uLL;
    long long v6 = 0uLL;
    long long v7 = 0uLL;
  }
  else
  {
    static IdMSAccount.DeviceInfo.current.getter((uint64_t)v42);
    long long v3 = v42[0];
    long long v5 = v42[1];
    long long v6 = v42[2];
    long long v7 = v42[3];
    char v2 = v43;
    char v4 = *v1;
  }
  uint64_t v8 = (_OWORD *)(v0 + 16);
  uint64_t v9 = *(void **)(v0 + 752);
  uint64_t v10 = v9[15];
  uint64_t v11 = v9[16];
  uint64_t v12 = v9[17];
  uint64_t v13 = v9[18];
  uint64_t v14 = v9[19];
  uint64_t v15 = v9[20];
  uint64_t v16 = v9[21];
  uint64_t v17 = v9[22];
  uint64_t v18 = v9[23];
  uint64_t v19 = v9[24];
  uint64_t v20 = v9[25];
  *(unsigned char *)(v0 + 16) = v4;
  *(_WORD *)(v0 + 17) = 257;
  *(_OWORD *)(v0 + 24) = v3;
  *(_OWORD *)(v0 + 40) = v5;
  *(_OWORD *)(v0 + 56) = v6;
  *(_OWORD *)(v0 + 72) = v7;
  *(unsigned char *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = v10;
  *(void *)(v0 + 104) = v11;
  *(void *)(v0 + 112) = v12;
  *(void *)(v0 + 120) = v13;
  *(void *)(v0 + 128) = v14;
  *(void *)(v0 + 136) = v15;
  *(void *)(v0 + 144) = v16;
  *(void *)(v0 + 152) = v17;
  *(void *)(v0 + 160) = v18;
  *(void *)(v0 + 168) = v19;
  *(void *)(v0 + 176) = v20;
  sub_247F9819C(v10, v11);
  uint64_t v21 = qword_2692D4DF0;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_248174B90();
  *(void *)(v0 + 760) = __swift_project_value_buffer(v22, (uint64_t)qword_2692DBE18);
  sub_2480C3C20((uint64_t *)(v0 + 16));
  sub_2480C3C20((uint64_t *)(v0 + 16));
  uint64_t v23 = sub_248174B70();
  os_log_type_t v24 = sub_2481755B0();
  if (os_log_type_enabled(v23, v24))
  {
    int v25 = *v1;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(void *)&v42[0] = v27;
    *(_DWORD *)uint64_t v26 = 67109378;
    *(_DWORD *)(v0 + 620) = v25;
    sub_248175730();
    *(_WORD *)(v26 + 8) = 2080;
    long long v28 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 312) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 328) = v28;
    *(void *)(v0 + 344) = *(void *)(v0 + 176);
    long long v29 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 264) = v29;
    long long v30 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 296) = v30;
    long long v31 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 184) = *v8;
    *(_OWORD *)(v0 + 200) = v31;
    long long v32 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 232) = v32;
    sub_2480C3C20((uint64_t *)(v0 + 16));
    uint64_t v33 = sub_248175190();
    *(void *)(v0 + 744) = sub_247FB6D24(v33, v34, (uint64_t *)v42);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    _os_log_impl(&dword_247F93000, v23, v24, "Performing handshake (isKeepAlive: %{BOOL}d) with request command: %s", (uint8_t *)v26, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v27, -1, -1);
    MEMORY[0x24C574E00](v26, -1, -1);
  }
  else
  {
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    sub_2480C3CD8((uint64_t *)(v0 + 16));
  }

  long long v35 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 496) = v35;
  *(void *)(v0 + 512) = *(void *)(v0 + 176);
  long long v36 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 432) = v36;
  long long v37 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 464) = v37;
  long long v38 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 352) = *v8;
  *(_OWORD *)(v0 + 368) = v38;
  long long v39 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 400) = v39;
  long long v40 = (void *)swift_task_alloc();
  *(void *)(v0 + 768) = v40;
  *long long v40 = v0;
  v40[1] = sub_248134E0C;
  return sub_248135A90(v0 + 624, v0 + 352, 0, 3);
}

uint64_t sub_248134E0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 776) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 752);
    char v4 = sub_248135A2C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 752);
    sub_2480C3CD8((uint64_t *)(v2 + 16));
    char v4 = sub_248134F34;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248134F34()
{
  uint64_t v75 = v0;
  char v1 = *(unsigned char *)(v0 + 624);
  uint64_t v2 = *(void *)(v0 + 632);
  uint64_t v3 = *(void *)(v0 + 640);
  uint64_t v4 = *(void *)(v0 + 656);
  uint64_t v5 = *(void *)(v0 + 672);
  uint64_t v6 = *(void *)(v0 + 680);
  uint64_t v64 = *(void *)(v0 + 696);
  uint64_t v61 = *(void *)(v0 + 664);
  uint64_t v63 = *(void *)(v0 + 704);
  uint64_t v7 = *(void *)(v0 + 712);
  if (*(unsigned char *)(v0 + 625) != 1)
  {
    char v48 = *(unsigned char *)(v0 + 648);
    char v53 = *(unsigned char *)(v0 + 649);
    char v59 = *(unsigned char *)(v0 + 720);
    uint64_t v56 = *(void *)(v0 + 688);
    os_log_t loga = *(os_log_t *)(v0 + 712);
    uint64_t v14 = sub_248174B70();
    os_log_type_t v15 = sub_2481755D0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl(&dword_247F93000, v14, v15, "Handshake request was not accepted, device wants to be left alone", v16, 2u);
      MEMORY[0x24C574E00](v16, -1, -1);
    }

    type metadata accessor for CommandRouter.HandshakeFailure(0);
    sub_248141020(&qword_2692DBEF0, (void (*)(uint64_t))type metadata accessor for CommandRouter.HandshakeFailure);
    swift_allocError();
    *(unsigned char *)uint64_t v17 = v1;
    *(unsigned char *)(v17 + 1) = 0;
    *(void *)(v17 + 8) = v2;
    *(void *)(v17 + 16) = v3;
    *(unsigned char *)(v17 + 24) = v48;
    *(unsigned char *)(v17 + 25) = v53;
    *(void *)(v17 + 32) = v4;
    *(void *)(v17 + 40) = v61;
    *(void *)(v17 + 48) = v5;
    *(void *)(v17 + 56) = v6;
    *(void *)(v17 + 64) = v56;
    *(void *)(v17 + 72) = v64;
    *(void *)(v17 + 80) = v63;
    *(void *)(v17 + 88) = loga;
    *(unsigned char *)(v17 + 96) = v59;
    goto LABEL_9;
  }
  if (*(unsigned char *)(v0 + 617) != 1 || !*(unsigned char *)(v0 + 624))
  {
    if (*(unsigned char *)(v0 + 648) == 1) {
      char v19 = *(unsigned char *)(v0 + 649);
    }
    else {
      char v19 = 1;
    }
    if (v19)
    {
      char v49 = *(unsigned char *)(v0 + 648);
      char v54 = *(unsigned char *)(v0 + 649);
      uint64_t v57 = *(void *)(v0 + 688);
      char v60 = *(unsigned char *)(v0 + 720);
      os_log_t logb = *(os_log_t *)(v0 + 712);
      uint64_t v20 = sub_248174B70();
      os_log_type_t v21 = sub_2481755D0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl(&dword_247F93000, v20, v21, "Incompatible selected version returned", v22, 2u);
        MEMORY[0x24C574E00](v22, -1, -1);
      }

      type metadata accessor for CommandRouter.HandshakeFailure(0);
      sub_248141020(&qword_2692DBEF0, (void (*)(uint64_t))type metadata accessor for CommandRouter.HandshakeFailure);
      swift_allocError();
      *(unsigned char *)uint64_t v23 = v1;
      *(unsigned char *)(v23 + 1) = 1;
      *(void *)(v23 + 8) = v2;
      *(void *)(v23 + 16) = v3;
      *(unsigned char *)(v23 + 24) = v49;
      *(unsigned char *)(v23 + 25) = v54;
      *(void *)(v23 + 32) = v4;
      *(void *)(v23 + 40) = v61;
      *(void *)(v23 + 48) = v5;
      *(void *)(v23 + 56) = v6;
      *(void *)(v23 + 64) = v57;
      *(void *)(v23 + 72) = v64;
      *(void *)(v23 + 80) = v63;
      *(void *)(v23 + 88) = logb;
      *(unsigned char *)(v23 + 96) = v60;
    }
    else
    {
      uint64_t v55 = *(void *)(v0 + 672);
      if (v61)
      {
        char v50 = *(unsigned char *)(v0 + 720) & 1;
        uint64_t v38 = *(void *)(v0 + 656);
        uint64_t v24 = *(void *)(v0 + 688);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FF6AA4(v24, v64);
        swift_bridgeObjectRelease();
        sub_247FF6B84(v4, v61, v55, v6, v24, v64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FF6AA4(v24, v64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FF6AA4(v24, v64);
        int v25 = sub_248174B70();
        uint64_t v26 = v24;
        os_log_type_t v27 = sub_2481755B0();
        if (os_log_type_enabled(v25, v27))
        {
          long long v28 = (uint8_t *)swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          *(_DWORD *)long long v28 = 136315138;
          uint64_t v65 = v42;
          uint64_t v66 = v38;
          uint64_t v67 = v61;
          uint64_t v68 = v55;
          uint64_t v69 = v6;
          uint64_t v70 = v24;
          uint64_t v71 = v64;
          uint64_t v72 = v63;
          uint64_t v73 = v7;
          char v74 = v50;
          uint64_t v29 = IdMSAccount.DeviceInfo.description.getter();
          *(void *)(v0 + 728) = sub_247FB6D24(v29, v30, &v65);
          sub_248175730();
          swift_bridgeObjectRelease();
          sub_247FF6B84(v38, v61, v55, v6, v24, v64);
          sub_247FF6B84(v38, v61, v55, v6, v24, v64);
          _os_log_impl(&dword_247F93000, v25, v27, "Successfully completed handshake! Received device info: %s", v28, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C574E00](v42, -1, -1);
          MEMORY[0x24C574E00](v28, -1, -1);

          uint64_t v26 = v24;
        }
        else
        {
          sub_247FF6B84(v4, v61, v55, v6, v24, v64);
          sub_247FF6B84(v4, v61, v55, v6, v24, v64);
        }
        uint64_t v66 = v38;
        uint64_t v67 = v61;
        uint64_t v68 = v55;
        uint64_t v69 = v6;
        uint64_t v70 = v26;
        uint64_t v71 = v64;
        uint64_t v72 = v63;
        uint64_t v73 = v7;
        char v74 = v50;
        sub_248139C38(&v66);
        sub_247FF6B84(v38, v61, v55, v6, v26, v64);
        goto LABEL_26;
      }
      char v51 = *(unsigned char *)(v0 + 624);
      uint64_t v58 = *(void *)(v0 + 688);
      uint64_t v62 = *(void *)(v0 + 680);
      os_log_t logc = *(os_log_t *)(v0 + 712);
      char v31 = *(unsigned char *)(v0 + 720);
      long long v32 = sub_248174B70();
      os_log_type_t v33 = sub_2481755D0();
      if (os_log_type_enabled(v32, v33))
      {
        unint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v34 = 0;
        _os_log_impl(&dword_247F93000, v32, v33, "Did not receive expected device info in handshake response", v34, 2u);
        MEMORY[0x24C574E00](v34, -1, -1);
      }

      type metadata accessor for CommandRouter.HandshakeFailure(0);
      sub_248141020(&qword_2692DBEF0, (void (*)(uint64_t))type metadata accessor for CommandRouter.HandshakeFailure);
      swift_allocError();
      *(unsigned char *)uint64_t v35 = v51;
      *(unsigned char *)(v35 + 1) = 1;
      *(void *)(v35 + 8) = v2;
      *(void *)(v35 + 16) = v3;
      *(_WORD *)(v35 + 24) = 1;
      *(void *)(v35 + 32) = v4;
      *(void *)(v35 + 40) = 0;
      *(void *)(v35 + 48) = v5;
      *(void *)(v35 + 56) = v62;
      *(void *)(v35 + 64) = v58;
      *(void *)(v35 + 72) = v64;
      *(void *)(v35 + 80) = v63;
      *(void *)(v35 + 88) = logc;
      *(unsigned char *)(v35 + 96) = v31;
    }
LABEL_9:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_27;
  }
  *(void *)long long v40 = *(void *)(v0 + 632);
  char v47 = *(unsigned char *)(v0 + 648);
  char v52 = *(unsigned char *)(v0 + 649);
  uint64_t v41 = *(void *)(v0 + 640);
  char v8 = *(unsigned char *)(v0 + 720);
  uint64_t v9 = *(void *)(v0 + 688);
  swift_bridgeObjectRetain();
  sub_247FF6A2C(v4, v61, v5, v6, v9, v64);
  uint64_t v10 = sub_248174B70();
  os_log_type_t type = sub_2481755C0();
  log = v10;
  if (os_log_type_enabled(v10, type))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v66 = v37;
    *(_WORD *)(v0 + 520) = 257;
    *(void *)(v0 + 528) = *(void *)v40;
    *(void *)(v0 + 536) = v41;
    *(unsigned char *)(v0 + 544) = v47;
    *(unsigned char *)(v0 + 545) = v52;
    *(void *)(v0 + 552) = v4;
    *(void *)(v0 + 560) = v61;
    *(void *)(v0 + 568) = v5;
    *(void *)(v0 + 576) = v6;
    *(void *)(v0 + 584) = v9;
    *(void *)(v0 + 592) = v64;
    *(void *)(v0 + 600) = v63;
    *(void *)(v0 + 608) = v7;
    *(unsigned char *)(v0 + 616) = v8;
    swift_bridgeObjectRetain();
    sub_247FF6A2C(v4, v61, v5, v6, v9, v64);
    uint64_t v12 = sub_248175190();
    *(void *)(v0 + 736) = sub_247FB6D24(v12, v13, &v66);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6B84(v4, v61, v5, v6, v9, v64);
    swift_bridgeObjectRelease();
    sub_247FF6B84(v4, v61, v5, v6, v9, v64);
    _os_log_impl(&dword_247F93000, log, type, "Keep alive response received: %s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v37, -1, -1);
    MEMORY[0x24C574E00](v11, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_247FF6B84(v4, v61, v5, v6, v9, v64);
    swift_bridgeObjectRelease();
    sub_247FF6B84(v4, v61, v5, v6, v9, v64);
  }
LABEL_26:
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
LABEL_27:
  return v18();
}

uint64_t sub_248135A2C()
{
  sub_2480C3CD8((uint64_t *)(v0 + 16));
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248135A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 440) = a4;
  *(void *)(v5 + 448) = v4;
  *(void *)(v5 + 424) = a1;
  *(void *)(v5 + 432) = a3;
  uint64_t v7 = sub_248174A30();
  *(void *)(v5 + 456) = v7;
  *(void *)(v5 + 464) = *(void *)(v7 - 8);
  *(void *)(v5 + 472) = swift_task_alloc();
  *(void *)(v5 + 480) = swift_task_alloc();
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v5 + 144) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v5 + 160) = v8;
  *(void *)(v5 + 176) = *(void *)(a2 + 160);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v5 + 96) = v9;
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v5 + 128) = v10;
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 32) = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 64) = v12;
  return MEMORY[0x270FA2498](sub_248135BA0, v4, 0);
}

uint64_t sub_248135BA0()
{
  uint64_t v25 = v0;
  char v1 = (_OWORD *)(v0 + 16);
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  *(void *)(v0 + 488) = __swift_project_value_buffer(v2, (uint64_t)qword_2692DBE18);
  sub_2480C3C20((uint64_t *)(v0 + 16));
  sub_2480C3C20((uint64_t *)(v0 + 16));
  uint64_t v3 = sub_248174B70();
  os_log_type_t v4 = sub_2481755B0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v24 = v6;
    long long v7 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 312) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 328) = v7;
    *(void *)(v0 + 344) = *(void *)(v0 + 176);
    long long v8 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 264) = v8;
    long long v9 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 296) = v9;
    long long v10 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 184) = *v1;
    *(_OWORD *)(v0 + 200) = v10;
    long long v11 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 232) = v11;
    sub_2480C3C20((uint64_t *)(v0 + 16));
    uint64_t v12 = sub_248175190();
    *(void *)(v0 + 416) = sub_247FB6D24(v12, v13, &v24);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    _os_log_impl(&dword_247F93000, v3, v4, "Sending handshake request command: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v6, -1, -1);
    MEMORY[0x24C574E00](v5, -1, -1);
  }
  else
  {
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    sub_2480C3CD8((uint64_t *)(v0 + 16));
  }

  uint64_t v14 = *(void *)(v0 + 448);
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v15 + 136) = *(_OWORD *)(v0 + 128);
  long long v17 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v15 + 152) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v15 + 168) = v17;
  long long v18 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v15 + 72) = *(_OWORD *)(v0 + 64);
  long long v19 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v15 + 88) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v15 + 104) = v19;
  *(_OWORD *)(v15 + 120) = v16;
  long long v20 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v15 + 24) = *v1;
  *(_OWORD *)(v15 + 40) = v20;
  *(void *)(v0 + 496) = v15;
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 184) = *(void *)(v0 + 176);
  *(_OWORD *)(v15 + 56) = v18;
  sub_2480C3C20((uint64_t *)(v0 + 16));
  swift_retain();
  os_log_type_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v21;
  void *v21 = v0;
  v21[1] = sub_248135EC0;
  uint64_t v22 = *(void *)(v0 + 424);
  return MEMORY[0x270F08368](v22, 0x8AC7230489E80000, 0, &unk_2692DBFF8, v15, &type metadata for HandshakeCommand.Response);
}

uint64_t sub_248135EC0()
{
  uint64_t v2 = (void *)*v1;
  v2[64] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[56];
    return MEMORY[0x270FA2498](sub_248136010, v3, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_248136010()
{
  char v1 = *(void **)(v0 + 512);
  swift_release();
  *(void *)(v0 + 408) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  int v3 = swift_dynamicCast();
  os_log_type_t v4 = *(void **)(v0 + 512);
  if (v3)
  {
    uint64_t v6 = *(void *)(v0 + 472);
    uint64_t v5 = *(void *)(v0 + 480);
    uint64_t v7 = *(void *)(v0 + 456);
    uint64_t v8 = *(void *)(v0 + 464);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v6, v5, v7);
    sub_248141020(&qword_2692DC018, MEMORY[0x263F20398]);
    uint64_t v9 = swift_allocError();
    *(void *)(v0 + 520) = v9;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v6, v7);
    long long v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v11;
    void *v11 = v0;
    uint64_t v12 = sub_248136774;
LABEL_3:
    v11[1] = v12;
    uint64_t v13 = *(void *)(v0 + 440);
    uint64_t v14 = *(void *)(v0 + 448);
    uint64_t v15 = *(void *)(v0 + 424);
    uint64_t v16 = *(void *)(v0 + 432);
    uint64_t v17 = v9;
LABEL_4:
    return sub_248136DFC(v15, v17, v16, v13, v14, v0 + 16);
  }

  *(void *)(v0 + 384) = v4;
  id v19 = v4;
  sub_24814AC88();
  if (swift_dynamicCast())
  {
    long long v20 = *(void **)(v0 + 368);
    *(void *)(v0 + 544) = v20;
    id v21 = objc_msgSend(v20, sel_domain);
    uint64_t v22 = sub_248175160();
    uint64_t v24 = v23;

    if (v22 == sub_248175160() && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v26 = sub_248175CE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
LABEL_16:

        goto LABEL_17;
      }
    }
    if (objc_msgSend(v20, sel_code) == (id)-6714)
    {

      os_log_type_t v27 = sub_248174B70();
      os_log_type_t v28 = sub_2481755D0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_247F93000, v27, v28, "Retrying another handshake, we failed to send request, handler not set up yet", v29, 2u);
        MEMORY[0x24C574E00](v29, -1, -1);
      }

      id v30 = v20;
      char v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 552) = v31;
      *char v31 = v0;
      v31[1] = sub_248136928;
      uint64_t v13 = *(void *)(v0 + 440);
      uint64_t v14 = *(void *)(v0 + 448);
      uint64_t v15 = *(void *)(v0 + 424);
      uint64_t v16 = *(void *)(v0 + 432);
      uint64_t v17 = (uint64_t)v30;
      goto LABEL_4;
    }
    goto LABEL_16;
  }
LABEL_17:
  long long v32 = *(void **)(v0 + 512);

  *(void *)(v0 + 376) = v32;
  id v33 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DC000);
  if (swift_dynamicCast())
  {
    unint64_t v34 = *(void *)(v0 + 360);
    if (v34 == 1)
    {

      uint64_t v35 = sub_248174B70();
      os_log_type_t v36 = sub_2481755D0();
      uint64_t v37 = (_OWORD *)&unk_24817A000;
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        char v53 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 138412290;
        sub_247FAAA00(&qword_2692DC008, &qword_2692DC000);
        swift_allocError();
        *long long v39 = xmmword_24817A5F0;
        uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v0 + 400) = v40;
        uint64_t v37 = &unk_24817A000;
        sub_248175730();
        *char v53 = v40;
        _os_log_impl(&dword_247F93000, v35, v36, "Retrying another handshake, we failed to receive a response: %@", v38, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v53, -1, -1);
        MEMORY[0x24C574E00](v38, -1, -1);
      }

      sub_247FAAA00(&qword_2692DC008, &qword_2692DC000);
      uint64_t v9 = swift_allocError();
      *(void *)(v0 + 568) = v9;
      *uint64_t v41 = v37[95];
      long long v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 576) = v11;
      void *v11 = v0;
      uint64_t v12 = sub_248136ACC;
      goto LABEL_3;
    }
    sub_24814ACC8(*(void *)(v0 + 352), v34);
  }
  uint64_t v42 = *(void **)(v0 + 512);

  id v43 = v42;
  id v44 = v42;
  uint64_t v45 = sub_248174B70();
  os_log_type_t v46 = sub_2481755D0();
  BOOL v47 = os_log_type_enabled(v45, v46);
  char v48 = *(void **)(v0 + 512);
  if (v47)
  {
    char v49 = (uint8_t *)swift_slowAlloc();
    char v54 = (void *)swift_slowAlloc();
    *(_DWORD *)char v49 = 138412290;
    id v50 = v48;
    uint64_t v51 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 392) = v51;
    sub_248175730();
    *char v54 = v51;

    _os_log_impl(&dword_247F93000, v45, v46, "Failed to perform handshake: %@", v49, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v54, -1, -1);
    MEMORY[0x24C574E00](v49, -1, -1);
  }
  else
  {
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  char v52 = *(uint64_t (**)(void))(v0 + 8);
  return v52();
}

uint64_t sub_248136774()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 536) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 448);
    os_log_type_t v4 = sub_248136C68;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 448);

    os_log_type_t v4 = sub_24813689C;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24813689C()
{
  (*(void (**)(void, void))(*(void *)(v0 + 464) + 8))(*(void *)(v0 + 472), *(void *)(v0 + 456));

  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248136928()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 560) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 448);
    os_log_type_t v4 = sub_248136D00;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 448);

    os_log_type_t v4 = sub_248136A50;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248136A50()
{
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248136ACC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 584) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 448);
    os_log_type_t v4 = sub_248136D80;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 448);

    os_log_type_t v4 = sub_248136BF4;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248136BF4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248136C68()
{
  char v1 = *(void **)(v0 + 520);
  (*(void (**)(void, void))(*(void *)(v0 + 464) + 8))(*(void *)(v0 + 472), *(void *)(v0 + 456));

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_248136D00()
{
  char v1 = *(void **)(v0 + 544);

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_248136D80()
{
  swift_task_dealloc();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248136DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[30] = a5;
  v6[31] = a6;
  v6[28] = a3;
  v6[29] = a4;
  v6[26] = a1;
  v6[27] = a2;
  uint64_t v8 = sub_248175960();
  v6[32] = v8;
  v6[33] = *(void *)(v8 - 8);
  v6[34] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_248136EC8, a5, 0);
}

uint64_t sub_248136EC8()
{
  char v26 = v1;
  uint64_t v2 = v1[28];
  BOOL v3 = __CFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  v1[35] = v4;
  if (v3)
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v0 = 2000000000000000000 * v4;
    uint64_t v24 = ((unint64_t)(2 * v4) * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64;
    if (qword_2692D4DF0 == -1) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  __break(1u);
LABEL_18:
  swift_once();
LABEL_4:
  uint64_t v5 = sub_248174B90();
  v1[36] = __swift_project_value_buffer(v5, (uint64_t)qword_2692DBE18);
  uint64_t v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755B0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v25 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = v0;
    uint64_t v11 = sub_248175F70();
    v1[25] = sub_247FB6D24(v11, v12, &v25);
    sub_248175730();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v6, v7, "Timed out attempting to send handshake, will retry in %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v9, -1, -1);
    MEMORY[0x24C574E00](v8, -1, -1);
  }
  else
  {
    uint64_t v10 = v0;
  }

  if (v1[28] >= v1[29])
  {
    uint64_t v15 = sub_248174B70();
    os_log_type_t v16 = sub_2481755D0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v18 = v1[28];
      uint64_t v17 = v1[29];
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134218240;
      v1[23] = v18;
      sub_248175730();
      *(_WORD *)(v19 + 12) = 2048;
      v1[24] = v17;
      sub_248175730();
      _os_log_impl(&dword_247F93000, v15, v16, "Timed out for the %lu/%lu and final time", (uint8_t *)v19, 0x16u);
      MEMORY[0x24C574E00](v19, -1, -1);
    }
    long long v20 = (void *)v1[27];

    swift_willThrow();
    id v21 = v20;
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v1[1];
    return v22();
  }
  else
  {
    sub_248175950();
    uint64_t v23 = (char *)&dword_2692DBFE0 + dword_2692DBFE0;
    uint64_t v13 = (void *)swift_task_alloc();
    v1[37] = v13;
    *uint64_t v13 = v1;
    v13[1] = sub_24813725C;
    return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v23)(v10, v24, 0, 0, 1);
  }
}

uint64_t sub_24813725C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[34];
  uint64_t v4 = v2[33];
  uint64_t v5 = v2[32];
  uint64_t v6 = v2[30];
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0) {
    os_log_type_t v7 = sub_248137534;
  }
  else {
    os_log_type_t v7 = sub_2481373D8;
  }
  return MEMORY[0x270FA2498](v7, v6, 0);
}

uint64_t sub_2481373D8()
{
  uint64_t v1 = sub_248174B70();
  os_log_type_t v2 = sub_2481755C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_247F93000, v1, v2, "Finished sleeping before next handshake attempt", v3, 2u);
    MEMORY[0x24C574E00](v3, -1, -1);
  }
  uint64_t v4 = *(long long **)(v0 + 248);

  long long v5 = *v4;
  long long v6 = v4[2];
  *(_OWORD *)(v0 + 32) = v4[1];
  *(_OWORD *)(v0 + 48) = v6;
  *(_OWORD *)(v0 + 16) = v5;
  long long v7 = v4[3];
  long long v8 = v4[4];
  long long v9 = v4[6];
  *(_OWORD *)(v0 + 96) = v4[5];
  *(_OWORD *)(v0 + 112) = v9;
  *(_OWORD *)(v0 + 64) = v7;
  *(_OWORD *)(v0 + 80) = v8;
  long long v10 = v4[7];
  long long v11 = v4[8];
  long long v12 = v4[9];
  *(void *)(v0 + 176) = *((void *)v4 + 20);
  *(_OWORD *)(v0 + 144) = v11;
  *(_OWORD *)(v0 + 160) = v12;
  *(_OWORD *)(v0 + 128) = v10;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_248137598;
  uint64_t v14 = *(void *)(v0 + 280);
  uint64_t v15 = *(void *)(v0 + 208);
  return sub_248135A90(v15, v0 + 16, v14, 3);
}

uint64_t sub_248137534()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248137598()
{
  os_log_type_t v2 = (void *)*v1;
  v2[40] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[30];
    return MEMORY[0x270FA2498](sub_2481376D4, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_2481376D4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248137738(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_2480C3C20(a3);
  long long v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2692DC020 + dword_2692DC020);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FCB950;
  return v8(a1, (uint64_t)a3);
}

uint64_t sub_248137804()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  uint64_t result = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveInterval);
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveInterval + 16) & 1) == 0)
  {
    uint64_t v6 = *v5;
    uint64_t v7 = v5[1];
    uint64_t v8 = OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveTask;
    if (*(void *)(v0 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveTask))
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
      sub_2481754A0();
      swift_release();
    }
    sub_2481753B0();
    uint64_t v9 = sub_2481753D0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    long long v11 = (void *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v10;
    v11[5] = v6;
    void v11[6] = v7;
    uint64_t v12 = sub_248138D38((uint64_t)v4, (uint64_t)&unk_2692DBFC8, (uint64_t)v11);
    sub_247FB33D4((uint64_t)v4, &qword_2692D9520);
    *(void *)(v0 + v8) = v12;
    return swift_release();
  }
  return result;
}

uint64_t sub_2481379AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[21] = a5;
  v6[22] = a6;
  v6[20] = a4;
  uint64_t v7 = sub_248175940();
  v6[23] = v7;
  v6[24] = *(void *)(v7 - 8);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  uint64_t v8 = sub_248175960();
  v6[27] = v8;
  v6[28] = *(void *)(v8 - 8);
  v6[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_248137ADC, 0, 0);
}

uint64_t sub_248137ADC()
{
  if ((sub_2481754C0() & 1) != 0
    || (swift_beginAccess(), uint64_t Strong = swift_weakLoadStrong(), (*(void *)(v0 + 240) = Strong) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 192);
    uint64_t v2 = *(void *)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 168);
    sub_248175950();
    *(void *)(v0 + 120) = v6;
    *(void *)(v0 + 128) = v4;
    *(void *)(v0 + 104) = 0;
    *(void *)(v0 + 96) = 0;
    *(unsigned char *)(v0 + 112) = 1;
    uint64_t v7 = sub_248141020(&qword_2692DBFD0, MEMORY[0x263F8F710]);
    sub_248175D90();
    sub_248141020(&qword_2692DBFD8, MEMORY[0x263F8F6D8]);
    sub_248175970();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    *(void *)(v0 + 248) = v8;
    *(void *)(v0 + 256) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v8(v2, v5);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_248137D28;
    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    return MEMORY[0x270FA2380](v11, v0 + 96, v10, v7);
  }
}

uint64_t sub_248137D28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 248))(*(void *)(v2 + 208), *(void *)(v2 + 184));
    uint64_t v3 = sub_248137FA4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v6 = *(void *)(v2 + 216);
    (*(void (**)(void, void))(v2 + 248))(*(void *)(v2 + 208), *(void *)(v2 + 184));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_248137E80;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_248137E80()
{
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_248174B90();
  *(void *)(v0 + 280) = __swift_project_value_buffer(v1, (uint64_t)qword_2692DBE18);
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_247F93000, v2, v3, "Running keep alive task", v4, 2u);
    MEMORY[0x24C574E00](v4, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 240);

  return MEMORY[0x270FA2498](sub_248138044, v5, 0);
}

uint64_t sub_248137FA4()
{
  (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_248138044()
{
  uint64_t v1 = sub_248174B70();
  os_log_type_t v2 = sub_2481755C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_247F93000, v1, v2, "Performing keep alive handshake", v3, 2u);
    MEMORY[0x24C574E00](v3, -1, -1);
  }

  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 288) = v4;
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = sub_24813816C;
  uint64_t v5 = *(void *)(v0 + 240);
  *(void *)(v4 + 752) = v5;
  *(unsigned char *)(v4 + 617) = 1;
  return MEMORY[0x270FA2498](sub_248134A88, v5, 0);
}

uint64_t sub_24813816C()
{
  *(void *)(*(void *)v1 + 296) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_2481384BC;
  }
  else {
    os_log_type_t v2 = sub_248138280;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_248138280()
{
  swift_release();
  if ((sub_2481754C0() & 1) != 0 || (uint64_t Strong = swift_weakLoadStrong(), (*(void *)(v0 + 240) = Strong) == 0))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 192);
    uint64_t v2 = *(void *)(v0 + 200);
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 168);
    sub_248175950();
    *(void *)(v0 + 120) = v6;
    *(void *)(v0 + 128) = v4;
    *(void *)(v0 + 104) = 0;
    *(void *)(v0 + 96) = 0;
    *(unsigned char *)(v0 + 112) = 1;
    uint64_t v7 = sub_248141020(&qword_2692DBFD0, MEMORY[0x263F8F710]);
    sub_248175D90();
    sub_248141020(&qword_2692DBFD8, MEMORY[0x263F8F6D8]);
    sub_248175970();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    *(void *)(v0 + 248) = v8;
    *(void *)(v0 + 256) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v8(v2, v5);
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_248137D28;
    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    return MEMORY[0x270FA2380](v11, v0 + 96, v10, v7);
  }
}

uint64_t sub_2481384BC()
{
  uint64_t v1 = (void *)v0[37];
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755D0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[37];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v10;
    sub_248175730();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_247F93000, v4, v5, "Failed to perform keep alive: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v8, -1, -1);
    MEMORY[0x24C574E00](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[37];
  }
  uint64_t v12 = sub_248174B70();
  os_log_type_t v13 = sub_2481755C0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_247F93000, v12, v13, "Incrementing keep alive failure count", v14, 2u);
    MEMORY[0x24C574E00](v14, -1, -1);
  }

  uint64_t v15 = sub_248132AAC();
  if ((*(unsigned char *)(v16 + 16) & 1) == 0)
  {
    if (__OFADD__(*(void *)v16, 1))
    {
      __break(1u);
      return MEMORY[0x270FA2498](v15, v16, v17);
    }
    ++*(void *)v16;
  }
  ((void (*)(void *, void))v15)(v0 + 2, 0);
  uint64_t v16 = v0[30];
  uint64_t v15 = sub_24813871C;
  uint64_t v17 = 0;
  return MEMORY[0x270FA2498](v15, v16, v17);
}

uint64_t sub_24813871C()
{
  uint64_t v1 = *(void *)(v0 + 240) + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_enforceKeepAlive;
  swift_beginAccess();
  *(void *)(v0 + 304) = *(void *)v1;
  *(void *)(v0 + 312) = *(void *)(v1 + 8);
  *(unsigned char *)(v0 + 113) = *(unsigned char *)(v1 + 16);
  return MEMORY[0x270FA2498](sub_2481387B8, 0, 0);
}

uint64_t sub_2481387B8()
{
  char v1 = *(unsigned char *)(v0 + 113);
  id v2 = sub_248174B70();
  if (v1)
  {
    os_log_type_t v3 = sub_2481755C0();
    BOOL v4 = os_log_type_enabled(v2, v3);
    os_log_type_t v5 = *(void **)(v0 + 296);
    if (v4)
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_247F93000, v2, v3, "Either not enforcing or have not hit count", v6, 2u);
      MEMORY[0x24C574E00](v6, -1, -1);

      swift_release();
      if (sub_2481754C0()) {
        goto LABEL_15;
      }
    }
    else
    {
      swift_release();

      if (sub_2481754C0()) {
        goto LABEL_15;
      }
    }
LABEL_11:
    uint64_t Strong = swift_weakLoadStrong();
    *(void *)(v0 + 240) = Strong;
    if (Strong)
    {
      uint64_t v15 = *(void *)(v0 + 192);
      uint64_t v14 = *(void *)(v0 + 200);
      uint64_t v16 = *(void *)(v0 + 176);
      uint64_t v17 = *(void *)(v0 + 184);
      uint64_t v18 = *(void *)(v0 + 168);
      sub_248175950();
      *(void *)(v0 + 120) = v18;
      *(void *)(v0 + 128) = v16;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 96) = 0;
      *(unsigned char *)(v0 + 112) = 1;
      uint64_t v19 = sub_248141020(&qword_2692DBFD0, MEMORY[0x263F8F710]);
      sub_248175D90();
      sub_248141020(&qword_2692DBFD8, MEMORY[0x263F8F6D8]);
      sub_248175970();
      long long v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      *(void *)(v0 + 248) = v20;
      *(void *)(v0 + 256) = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v20(v14, v17);
      id v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v21;
      void *v21 = v0;
      v21[1] = sub_248137D28;
      uint64_t v23 = *(void *)(v0 + 208);
      uint64_t v22 = *(void *)(v0 + 216);
      return MEMORY[0x270FA2380](v23, v0 + 96, v22, v19);
    }
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  os_log_type_t v7 = sub_2481755D0();
  if (os_log_type_enabled(v2, v7))
  {
    uint64_t v9 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 312);
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218240;
    *(void *)(v0 + 136) = v9;
    sub_248175730();
    *(_WORD *)(v10 + 12) = 2048;
    *(void *)(v0 + 144) = v8;
    sub_248175730();
    _os_log_impl(&dword_247F93000, v2, v7, "Failed to perform keep alive (for the %ld/%ld time)", (uint8_t *)v10, 0x16u);
    MEMORY[0x24C574E00](v10, -1, -1);
  }
  uint64_t v12 = *(void *)(v0 + 304);
  uint64_t v11 = *(void *)(v0 + 312);

  if (v12 < v11)
  {

    swift_release();
    if (sub_2481754C0()) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  uint64_t v25 = sub_248174B70();
  os_log_type_t v26 = sub_2481755C0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v27 = 0;
    _os_log_impl(&dword_247F93000, v25, v26, "Invalidating command router to break it all down", v27, 2u);
    MEMORY[0x24C574E00](v27, -1, -1);
  }
  uint64_t v28 = *(void *)(v0 + 240);

  return MEMORY[0x270FA2498](sub_248138C38, v28, 0);
}

uint64_t sub_248138C38()
{
  sub_248139F84();
  return MEMORY[0x270FA2498](sub_248138CA0, 0, 0);
}

uint64_t sub_248138CA0()
{
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_248138D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v5 - 8);
  os_log_type_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_247FBB338(a1, (uint64_t)v7, &qword_2692D9520);
  uint64_t v8 = sub_2481753D0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_247FB33D4((uint64_t)v7, &qword_2692D9520);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  else
  {
    sub_2481753C0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  uint64_t v10 = sub_248175340();
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_248138F08()
{
  *(void *)(v1 + 88) = v0;
  return MEMORY[0x270FA2498](sub_248138F28, v0, 0);
}

uint64_t sub_248138F28()
{
  uint64_t v16 = v0;
  sub_247FE1388();
  uint64_t v1 = (void *)swift_allocError();
  *(void *)uint64_t v2 = 1;
  *(_OWORD *)(v2 + 8) = 0u;
  *(_OWORD *)(v2 + 24) = 0u;
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = 4;
  uint64_t v12 = v1;
  long long v13 = 0u;
  long long v14 = 0u;
  memset(v15, 0, 25);
  v15[25] = 1;
  sub_2481394B4((uint64_t)&v12);

  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_248174B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_2692DBE18);
  BOOL v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755C0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_247F93000, v4, v5, "Starting to wait for handshake", v6, 2u);
    MEMORY[0x24C574E00](v6, -1, -1);
  }
  uint64_t v7 = *(void *)(v0 + 88);

  uint64_t v8 = sub_248141020(&qword_2692DBFB8, (void (*)(uint64_t))type metadata accessor for CommandRouter);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_248139168;
  uint64_t v10 = *(void *)(v0 + 88);
  return MEMORY[0x270FA2360](v0 + 16, v7, v8, 0xD000000000000012, 0x8000000248193550, sub_24814A8A0, v10, &type metadata for IdMSAccount.DeviceInfo);
}

uint64_t sub_248139168()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0) {
    BOOL v4 = sub_248139360;
  }
  else {
    BOOL v4 = sub_248139294;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_248139294()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  char v8 = *(unsigned char *)(v0 + 80);
  v11[0] = *(void *)(v0 + 16);
  v11[1] = v1;
  v11[2] = v2;
  v11[3] = v3;
  v11[4] = v4;
  v11[5] = v5;
  void v11[6] = v6;
  v11[7] = v7;
  char v12 = v8;
  sub_248139C38(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FF6BFC(v4, v5);
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_248139360()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_248139378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBF10);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBE50);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a2 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_handshakeContinuation;
  swift_beginAccess();
  sub_24814A8A8((uint64_t)v6, v9, &qword_2692DBF10);
  return swift_endAccess();
}

uint64_t sub_2481394B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBF10);
  uint64_t v4 = MEMORY[0x270FA5388](v77);
  uint64_t v80 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v70 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBE50);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = *(void **)a1;
  uint64_t v12 = *(void *)(a1 + 8);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v88 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v86 = v12;
  uint64_t v87 = v14;
  uint64_t v81 = *(void *)(a1 + 40);
  uint64_t v82 = v13;
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v84 = *(void *)(a1 + 56);
  uint64_t v85 = v15;
  int v16 = *(unsigned __int8 *)(a1 + 64);
  int v17 = *(unsigned __int8 *)(a1 + 65);
  uint64_t v18 = v2 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_handshakeContinuation;
  swift_beginAccess();
  uint64_t v78 = v18;
  sub_247FBB338(v18, (uint64_t)v7, &qword_2692DBF10);
  uint64_t v83 = v9;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_247FB33D4((uint64_t)v7, &qword_2692DBF10);
  }
  long long v20 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
  uint64_t v75 = v8;
  v20(v11, v7, v8);
  uint64_t v76 = v11;
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_248174B90();
  uint64_t v71 = __swift_project_value_buffer(v21, (uint64_t)qword_2692DBE18);
  uint64_t v22 = v2;
  swift_retain();
  uint64_t v23 = v79;
  uint64_t v25 = v86;
  uint64_t v24 = v87;
  uint64_t v26 = v81;
  uint64_t v27 = v82;
  uint64_t v28 = v84;
  uint64_t v29 = v85;
  sub_24814AA04(v79, v86, v82, v88, v87, v81, v85, v84, v16, v17);
  uint64_t v72 = v22;
  swift_retain();
  int v74 = v17;
  char v69 = v17;
  uint64_t v30 = v88;
  uint64_t v31 = v28;
  int v73 = v16;
  uint64_t v32 = v25;
  uint64_t v33 = v25;
  uint64_t v34 = v24;
  sub_24814AA04(v23, v33, v27, v88, v24, v26, v29, v31, v16, v69);
  uint64_t v35 = sub_248174B70();
  os_log_type_t v36 = sub_2481755C0();
  int v37 = v36;
  uint64_t v71 = v35;
  if (!os_log_type_enabled(v35, v36))
  {
    swift_release_n();
    char v59 = v74;
    char v60 = v73;
    uint64_t v50 = v32;
    uint64_t v61 = v32;
    uint64_t v43 = v81;
    uint64_t v55 = v82;
    uint64_t v62 = v24;
    uint64_t v64 = v84;
    uint64_t v63 = v85;
    sub_24814AAA0(v23, v61, v82, v30, v62, v81, v85, v84, v73, v74);
    sub_24814AAA0(v23, v50, v55, v30, v34, v43, v63, v64, v60, v59);

    char v54 = v23;
    char v46 = v60;
    if ((v59 & 1) == 0) {
      goto LABEL_7;
    }
LABEL_9:
    uint64_t v89 = (uint64_t)v54;
    id v65 = v54;
    uint64_t v57 = v75;
    uint64_t v58 = v76;
    sub_248175350();
    goto LABEL_10;
  }
  uint64_t v38 = swift_slowAlloc();
  uint64_t v70 = swift_slowAlloc();
  uint64_t v99 = v70;
  *(_DWORD *)uint64_t v38 = 136315394;
  sub_247FBB338(v78, v80, &qword_2692DBF10);
  uint64_t v39 = sub_248175190();
  uint64_t v89 = sub_247FB6D24(v39, v40, &v99);
  sub_248175730();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v38 + 12) = 2080;
  uint64_t v41 = v23;
  uint64_t v89 = (uint64_t)v23;
  uint64_t v90 = v86;
  uint64_t v43 = v81;
  uint64_t v42 = v82;
  uint64_t v91 = v82;
  uint64_t v92 = v30;
  uint64_t v93 = v87;
  uint64_t v94 = v81;
  LODWORD(v77) = v37;
  uint64_t v45 = v84;
  uint64_t v44 = v85;
  uint64_t v95 = v85;
  uint64_t v96 = v84;
  char v46 = v73;
  char v97 = v73;
  char v47 = v74;
  char v98 = v74;
  sub_24814AA04(v41, v86, v82, v88, v87, v81, v85, v84, v73, v74);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBFE8);
  uint64_t v48 = sub_248175190();
  uint64_t v89 = sub_247FB6D24(v48, v49, &v99);
  uint64_t v50 = v86;
  uint64_t v34 = v87;
  sub_248175730();
  swift_bridgeObjectRelease();
  uint64_t v51 = v79;
  sub_24814AAA0(v79, v50, v42, v88, v34, v43, v44, v45, v46, v47);
  sub_24814AAA0(v51, v50, v42, v88, v34, v43, v44, v45, v46, v47);
  char v52 = v71;
  _os_log_impl(&dword_247F93000, v71, (os_log_type_t)v77, "Resuming handshake continuation: %s with result: %s", (uint8_t *)v38, 0x16u);
  uint64_t v53 = v70;
  swift_arrayDestroy();
  MEMORY[0x24C574E00](v53, -1, -1);
  MEMORY[0x24C574E00](v38, -1, -1);

  char v54 = v51;
  uint64_t v55 = v42;
  char v56 = v47;
  uint64_t v30 = v88;
  if (v56) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v89 = (uint64_t)v54;
  uint64_t v90 = v50;
  uint64_t v91 = v55;
  uint64_t v92 = v30;
  uint64_t v93 = v34;
  uint64_t v94 = v43;
  uint64_t v95 = v85;
  uint64_t v96 = v84;
  char v97 = v46 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FF6AA4(v34, v43);
  uint64_t v57 = v75;
  uint64_t v58 = v76;
  sub_248175360();
LABEL_10:
  uint64_t v66 = v83;
  uint64_t v67 = v80;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56))(v80, 1, 1, v57);
  uint64_t v68 = v78;
  swift_beginAccess();
  sub_24814A8A8(v67, v68, &qword_2692DBF10);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v58, v57);
}

void sub_248139C38(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  char v11 = *((unsigned char *)a1 + 64);
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  char v26 = v11;
  uint64_t v28 = v6;
  uint64_t v30 = v4;
  uint64_t v12 = sub_248174B90();
  __swift_project_value_buffer(v12, (uint64_t)qword_2692DBE18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FF6AA4(v7, v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FF6AA4(v7, v8);
  uint64_t v13 = sub_248174B70();
  os_log_type_t v14 = sub_2481755C0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315138;
    uint64_t v32 = v25;
    uint64_t v16 = IdMSAccount.DeviceInfo.description.getter();
    sub_247FB6D24(v16, v17, &v32);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6BFC(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6BFC(v7, v8);
    _os_log_impl(&dword_247F93000, v13, v14, "Storing received handshake device info: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v25, -1, -1);
    MEMORY[0x24C574E00](v15, -1, -1);

    char v18 = v26;
    uint64_t v20 = v28;
    uint64_t v19 = v30;
    uint64_t v21 = v3;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6BFC(v7, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6BFC(v7, v8);

    uint64_t v21 = v3;
    uint64_t v20 = v28;
    uint64_t v19 = v30;
    char v18 = v11;
  }
  uint64_t v22 = *(void *)(v2 + 240);
  uint64_t v23 = *(void *)(v2 + 248);
  uint64_t v24 = *(void *)(v2 + 256);
  uint64_t v31 = *(void *)(v2 + 264);
  uint64_t v29 = *(void *)(v2 + 272);
  uint64_t v27 = *(void *)(v2 + 280);
  *(void *)(v2 + 240) = v19;
  *(void *)(v2 + 248) = v21;
  *(void *)(v2 + 256) = v20;
  *(void *)(v2 + 264) = v5;
  *(void *)(v2 + 272) = v7;
  *(void *)(v2 + 280) = v8;
  *(void *)(v2 + 288) = v9;
  *(void *)(v2 + 296) = v10;
  *(unsigned char *)(v2 + 304) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FF6AA4(v7, v8);
  sub_247FF6B84(v22, v23, v24, v31, v29, v27);
}

uint64_t sub_248139F84()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter__activeTransport;
  swift_beginAccess();
  sub_247FBB338(v1, (uint64_t)v22, &qword_2692DBE38);
  if (*(void *)&v22[24])
  {
    sub_247FBB338((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_2692DBEF8);
    sub_247FB33D4((uint64_t)v22, &qword_2692DBE38);
    uint64_t v2 = v20;
    uint64_t v3 = v21;
    __swift_project_boxed_opaque_existential_1(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v3 + 40))(v2, v3);
    uint64_t v4 = v19;
    uint64_t v5 = (uint64_t *)&unk_2692DBEF8;
  }
  else
  {
    uint64_t v5 = &qword_2692DBE38;
    uint64_t v4 = v22;
  }
  sub_247FB33D4((uint64_t)v4, v5);
  memset(v22, 0, 40);
  swift_beginAccess();
  sub_24814A8A8((uint64_t)v22, v1, &qword_2692DBE38);
  swift_endAccess();
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 248);
  uint64_t v8 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v0 + 264);
  uint64_t v10 = *(void *)(v0 + 272);
  uint64_t v11 = *(void *)(v0 + 280);
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 288) = 0u;
  *(unsigned char *)(v0 + 304) = 0;
  sub_247FF6B84(v6, v7, v8, v9, v10, v11);
  sub_247FE1388();
  uint64_t v12 = (void *)swift_allocError();
  *(void *)uint64_t v13 = 1;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  *(void *)(v13 + 40) = 0;
  *(unsigned char *)(v13 + 48) = 4;
  *(void *)uint64_t v22 = v12;
  memset(&v22[8], 0, 57);
  char v23 = 1;
  sub_2481394B4((uint64_t)v22);

  uint64_t v14 = OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveTask;
  if (*(void *)(v0 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_keepAliveTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    sub_2481754A0();
    swift_release();
  }
  *(void *)(v0 + v14) = 0;
  swift_release();
  swift_beginAccess();
  uint64_t v15 = *(void (**)(uint64_t))(v0 + 224);
  if (v15)
  {
    uint64_t v16 = swift_retain();
    v15(v16);
    sub_247F98D68((uint64_t)v15);
    uint64_t v17 = *(void *)(v0 + 224);
  }
  else
  {
    uint64_t v17 = 0;
  }
  *(void *)(v0 + 224) = 0;
  *(void *)(v0 + 232) = 0;
  return sub_247F98D68(v17);
}

uint64_t sub_24813A1F8(uint64_t a1, uint64_t a2)
{
  v3[38] = a2;
  v3[39] = v2;
  v3[37] = a1;
  v3[40] = type metadata accessor for V1Command(0);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  uint64_t v4 = sub_248174850();
  v3[43] = v4;
  v3[44] = *(void *)(v4 - 8);
  v3[45] = swift_task_alloc();
  uint64_t v5 = sub_2481748C0();
  v3[46] = v5;
  v3[47] = *(void *)(v5 - 8);
  v3[48] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  v3[49] = v6;
  v3[50] = *(void *)(v6 - 8);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24813A3E0, v2, 0);
}

uint64_t sub_24813A3E0()
{
  uint64_t v62 = v0;
  uint64_t v1 = *(void *)(v0 + 312) + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter__activeTransport;
  swift_beginAccess();
  sub_247FBB338(v1, v0 + 120, &qword_2692DBE38);
  if (*(void *)(v0 + 144))
  {
    long long v2 = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 176) = v2;
    *(void *)(v0 + 192) = *(void *)(v0 + 152);
    sub_2481748B0();
    unint64_t v3 = sub_247FB851C(MEMORY[0x263F8EE78]);
    unint64_t v4 = sub_247FB651C(0);
    if (v5)
    {
      unint64_t v6 = v4;
      unint64_t v61 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24804E76C();
        unint64_t v3 = v61;
      }
      sub_24804E204(v6, v3);
      swift_bridgeObjectRelease();
    }
    unint64_t v7 = sub_247FB651C(1u);
    if (v8)
    {
      unint64_t v9 = v7;
      unint64_t v61 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24804E76C();
        unint64_t v3 = v61;
      }
      sub_24804E204(v9, v3);
      swift_bridgeObjectRelease();
    }
    unint64_t v10 = sub_247FB651C(2u);
    if (v11)
    {
      unint64_t v12 = v10;
      unint64_t v61 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24804E76C();
        unint64_t v3 = v61;
      }
      sub_24804E204(v12, v3);
      swift_bridgeObjectRelease();
    }
    unint64_t v13 = sub_247FB651C(3u);
    if (v14)
    {
      unint64_t v15 = v13;
      unint64_t v61 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24804E76C();
        unint64_t v3 = v61;
      }
      sub_24804E204(v15, v3);
      swift_bridgeObjectRelease();
    }
    sub_248174830();
    sub_248174820();
    double v17 = v16 * 1000.0;
    if ((~*(void *)&v17 & 0x7FF0000000000000) != 0)
    {
      if (v17 > -1.0)
      {
        if (v17 < 1.84467441e19)
        {
          uint64_t v18 = *(void *)(v0 + 432);
          uint64_t v19 = *(int **)(v0 + 392);
          uint64_t v60 = *(void *)(v0 + 384);
          uint64_t v20 = *(void *)(v0 + 368);
          uint64_t v21 = *(void *)(v0 + 376);
          uint64_t v23 = *(void *)(v0 + 352);
          uint64_t v22 = *(void *)(v0 + 360);
          uint64_t v24 = *(void *)(v0 + 344);
          uint64_t v25 = *(long long **)(v0 + 304);
          uint64_t v26 = (unint64_t)v17;
          uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
          *(void *)(v0 + 440) = v27;
          *(void *)(v0 + 448) = (v23 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v27(v22, v24);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v61 = v3;
          sub_247FB8004(v26, 0, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          uint64_t v29 = v18 + v19[11];
          long long v30 = *v25;
          long long v31 = v25[2];
          *(_OWORD *)(v29 + 16) = v25[1];
          *(_OWORD *)(v29 + 32) = v31;
          *(_OWORD *)uint64_t v29 = v30;
          long long v32 = v25[3];
          long long v33 = v25[4];
          long long v34 = v25[6];
          *(_OWORD *)(v29 + 80) = v25[5];
          *(_OWORD *)(v29 + 96) = v34;
          *(_OWORD *)(v29 + 48) = v32;
          *(_OWORD *)(v29 + 64) = v33;
          long long v35 = v25[7];
          long long v36 = v25[8];
          long long v37 = v25[9];
          *(void *)(v29 + 160) = *((void *)v25 + 20);
          *(_OWORD *)(v29 + 128) = v36;
          *(_OWORD *)(v29 + 144) = v37;
          *(_OWORD *)(v29 + 112) = v35;
          type metadata accessor for V1Command.Request(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v18, v60, v20);
          *(unsigned char *)(v18 + v19[9]) = 1;
          *(void *)(v18 + v19[10]) = v3;
          if (qword_2692D4DF0 == -1)
          {
LABEL_22:
            uint64_t v38 = *(void *)(v0 + 424);
            uint64_t v39 = *(void *)(v0 + 432);
            uint64_t v40 = sub_248174B90();
            *(void *)(v0 + 456) = __swift_project_value_buffer(v40, (uint64_t)qword_2692DBE18);
            sub_247FBB338(v39, v38, &qword_2692D85C0);
            uint64_t v41 = sub_248174B70();
            os_log_type_t v42 = sub_2481755C0();
            BOOL v43 = os_log_type_enabled(v41, v42);
            uint64_t v44 = *(void *)(v0 + 424);
            if (v43)
            {
              uint64_t v45 = *(void *)(v0 + 416);
              char v46 = (uint8_t *)swift_slowAlloc();
              uint64_t v47 = swift_slowAlloc();
              unint64_t v61 = v47;
              *(_DWORD *)char v46 = 136315138;
              sub_247FBB338(v44, v45, &qword_2692D85C0);
              uint64_t v48 = sub_248175190();
              *(void *)(v0 + 288) = sub_247FB6D24(v48, v49, (uint64_t *)&v61);
              sub_248175730();
              swift_bridgeObjectRelease();
              sub_247FB33D4(v44, &qword_2692D85C0);
              _os_log_impl(&dword_247F93000, v41, v42, "Sending outMessage: %s", v46, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24C574E00](v47, -1, -1);
              MEMORY[0x24C574E00](v46, -1, -1);
            }
            else
            {
              sub_247FB33D4(*(void *)(v0 + 424), &qword_2692D85C0);
            }

            return MEMORY[0x270FA2498](sub_24813AAD8, 0, 0);
          }
LABEL_38:
          swift_once();
          goto LABEL_22;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
  sub_247FB33D4(v0 + 120, &qword_2692DBE38);
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_248174B90();
  __swift_project_value_buffer(v50, (uint64_t)qword_2692DBE18);
  uint64_t v51 = sub_248174B70();
  os_log_type_t v52 = sub_2481755C0();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl(&dword_247F93000, v51, v52, "Throwing error due to missing active transport", v53, 2u);
    MEMORY[0x24C574E00](v53, -1, -1);
  }
  uint64_t v54 = *(void *)(v0 + 392);
  uint64_t v55 = *(void *)(v0 + 400);
  char v56 = *(uint64_t **)(v0 + 304);

  type metadata accessor for CommandRouter.Failure(0);
  sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56))(v57, 1, 4, v54);
  swift_willThrow();
  sub_2480C3CD8(v56);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v58 = *(uint64_t (**)(void))(v0 + 8);
  return v58();
}

uint64_t sub_24813AAD8()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  unint64_t v3 = __swift_project_boxed_opaque_existential_1(v0 + 20, v2);
  unint64_t v4 = (void *)swift_task_alloc();
  v0[58] = v4;
  uint64_t v5 = sub_247FAAA00(&qword_2692DBF08, &qword_2692D85C0);
  *unint64_t v4 = v0;
  v4[1] = sub_24813ABC8;
  uint64_t v6 = v0[54];
  uint64_t v7 = v0[51];
  uint64_t v8 = v0[49];
  return sub_2480494C0(v7, (uint64_t)v3, v6, v8, v2, v5, v1);
}

uint64_t sub_24813ABC8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 472) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  if (v0) {
    unint64_t v4 = sub_24813B6F4;
  }
  else {
    unint64_t v4 = sub_24813ACF4;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24813ACF4()
{
  uint64_t v77 = v0;
  sub_248174830();
  uint64_t result = sub_248174820();
  double v3 = v2 * 1000.0;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v3 <= -1.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v3 >= 1.84467441e19)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  uint64_t v72 = v0 + 160;
  uint64_t v4 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v6 = (unint64_t)v3;
  (*(void (**)(void, void))(v0 + 440))(*(void *)(v0 + 360), *(void *)(v0 + 344));
  uint64_t v7 = *(int *)(v5 + 40);
  uint64_t v8 = *(void *)(v4 + v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v75[0] = v8;
  sub_247FB8004(v6, 3u, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  *(void *)(v4 + v7) = v8;
  uint64_t v10 = sub_248174B70();
  os_log_type_t v11 = sub_2481755C0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = *(void *)(v0 + 408);
    uint64_t v12 = *(void *)(v0 + 416);
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v75[0] = v15;
    *(_DWORD *)char v14 = 136315138;
    swift_beginAccess();
    sub_247FBB338(v13, v12, &qword_2692D85C0);
    uint64_t v16 = sub_248175190();
    *(void *)(v0 + 280) = sub_247FB6D24(v16, v17, v75);
    sub_248175730();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v10, v11, "Received response inMessage: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v15, -1, -1);
    MEMORY[0x24C574E00](v14, -1, -1);
  }

  uint64_t v18 = *(void *)(v0 + 408);
  uint64_t v19 = *(void *)(v0 + 392);
  uint64_t v20 = *(void *)(v0 + 336);
  swift_beginAccess();
  sub_24814A7D0(v18 + *(int *)(v19 + 44), v20, type metadata accessor for V1Command);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v22 = *(void *)(v0 + 336);
  uint64_t v23 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for V1Command.Response(0);
    int v24 = swift_getEnumCaseMultiPayload();
    uint64_t v23 = type metadata accessor for V1Command.Response;
    if (!v24)
    {
      uint64_t v44 = *(void *)(v22 + 16);
      uint64_t v67 = *(void *)(v22 + 8);
      char v65 = *(unsigned char *)(v22 + 24);
      char v66 = *(unsigned char *)(v22 + 1);
      char v63 = *(unsigned char *)v22;
      char v64 = *(unsigned char *)(v22 + 25);
      uint64_t v46 = *(void *)(v22 + 32);
      uint64_t v45 = *(void *)(v22 + 40);
      uint64_t v47 = *(void *)(v22 + 48);
      uint64_t v48 = *(void *)(v22 + 56);
      uint64_t v49 = *(void *)(v22 + 72);
      uint64_t v71 = *(void *)(v22 + 64);
      uint64_t v50 = *(void *)(v22 + 80);
      uint64_t v51 = *(void *)(v22 + 88);
      char v52 = *(unsigned char *)(v22 + 96);
      swift_bridgeObjectRetain();
      sub_247FF6A2C(v46, v45, v47, v48, v71, v49);
      uint64_t v69 = v44;
      swift_bridgeObjectRetain();
      uint64_t v68 = v46;
      uint64_t v70 = v45;
      sub_247FF6A2C(v46, v45, v47, v48, v71, v49);
      uint64_t v53 = sub_248174B70();
      os_log_type_t v54 = sub_2481755C0();
      BOOL v55 = os_log_type_enabled(v53, v54);
      uint64_t v61 = *(void *)(v0 + 432);
      uint64_t v62 = *(void *)(v0 + 408);
      if (v55)
      {
        char v56 = (uint8_t *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        *(_DWORD *)char v56 = 136315138;
        v75[0] = v60;
        *(unsigned char *)(v0 + 16) = v63;
        *(unsigned char *)(v0 + 17) = v66;
        *(void *)(v0 + 24) = v67;
        *(void *)(v0 + 32) = v69;
        *(unsigned char *)(v0 + 40) = v65;
        *(unsigned char *)(v0 + 41) = v64;
        *(void *)(v0 + 48) = v68;
        *(void *)(v0 + 56) = v70;
        *(void *)(v0 + 64) = v47;
        *(void *)(v0 + 72) = v48;
        *(void *)(v0 + 80) = v71;
        *(void *)(v0 + 88) = v49;
        *(void *)(v0 + 96) = v50;
        *(void *)(v0 + 104) = v51;
        *(unsigned char *)(v0 + 112) = v52;
        swift_bridgeObjectRetain();
        sub_247FF6A2C(v68, v70, v47, v48, v71, v49);
        uint64_t v57 = sub_248175190();
        *(void *)(v0 + 272) = sub_247FB6D24(v57, v58, v75);
        sub_248175730();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FF6B84(v68, v70, v47, v48, v71, v49);
        swift_bridgeObjectRelease();
        sub_247FF6B84(v68, v70, v47, v48, v71, v49);
        _os_log_impl(&dword_247F93000, v53, v54, "Received command response: %s", v56, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v60, -1, -1);
        MEMORY[0x24C574E00](v56, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease();

        sub_247FF6B84(v46, v70, v47, v48, v71, v49);
        swift_bridgeObjectRelease();
        sub_247FF6B84(v46, v70, v47, v48, v71, v49);
      }
      sub_247FB33D4(v61, &qword_2692D85C0);
      sub_247FB33D4(v72, (uint64_t *)&unk_2692DBEF8);
      sub_247FB33D4(v62, &qword_2692D85C0);
      uint64_t v59 = *(void *)(v0 + 296);
      *(unsigned char *)uint64_t v59 = v63;
      *(unsigned char *)(v59 + 1) = v66;
      *(void *)(v59 + 8) = v67;
      *(void *)(v59 + 16) = v69;
      *(unsigned char *)(v59 + 24) = v65;
      *(unsigned char *)(v59 + 25) = v64;
      *(void *)(v59 + 32) = v68;
      *(void *)(v59 + 40) = v70;
      *(void *)(v59 + 48) = v47;
      *(void *)(v59 + 56) = v48;
      *(void *)(v59 + 64) = v71;
      *(void *)(v59 + 72) = v49;
      *(void *)(v59 + 80) = v50;
      *(void *)(v59 + 88) = v51;
      *(unsigned char *)(v59 + 96) = v52;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      BOOL v43 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_15;
    }
  }
  sub_248149C68(v22, v23);
  uint64_t v25 = *(void *)(v0 + 408);
  uint64_t v26 = *(void *)(v0 + 392);
  uint64_t v27 = *(void *)(v0 + 328);
  swift_bridgeObjectRelease();
  sub_247FF6B84(0, 0, 0, 0, 0, 0);
  sub_24814A7D0(v25 + *(int *)(v26 + 44), v27, type metadata accessor for V1Command);
  int v28 = swift_getEnumCaseMultiPayload();
  uint64_t v29 = *(void *)(v0 + 328);
  if (v28 != 2)
  {
    sub_248149C68(v29, type metadata accessor for V1Command);
LABEL_13:
    uint64_t v34 = *(void *)(v0 + 432);
    uint64_t v39 = *(void *)(v0 + 400);
    uint64_t v35 = *(void *)(v0 + 408);
    uint64_t v40 = *(void *)(v0 + 392);
    type metadata accessor for CommandRouter.Failure(0);
    sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
    swift_allocError();
    uint64_t v42 = v41;
    sub_247FBB338(v35, v41, &qword_2692D85C0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v42, 0, 4, v40);
    swift_willThrow();
    goto LABEL_14;
  }
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  uint64_t v32 = *(void *)(v29 + 16);
  char v33 = *(unsigned char *)(v29 + 24);
  v73[0] = *(void *)v29;
  v73[1] = v31;
  v73[2] = v32;
  char v74 = v33;
  v75[1] = 0;
  v75[2] = 0;
  v75[0] = 4;
  char v76 = 2;
  if ((static V1CommandError.== infix(_:_:)((uint64_t)v73, (uint64_t)v75) & 1) == 0)
  {
    sub_2480E47A0(v30, v31, v32, v33);
    goto LABEL_13;
  }
  uint64_t v34 = *(void *)(v0 + 432);
  uint64_t v36 = *(void *)(v0 + 400);
  uint64_t v35 = *(void *)(v0 + 408);
  uint64_t v37 = *(void *)(v0 + 392);
  type metadata accessor for CommandRouter.Failure(0);
  sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v38, 4, 4, v37);
  swift_willThrow();
  sub_2480E47A0(v30, v31, v32, v33);
LABEL_14:
  sub_247FB33D4(v34, &qword_2692D85C0);
  sub_247FB33D4(v72, (uint64_t *)&unk_2692DBEF8);
  sub_247FB33D4(v35, &qword_2692D85C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v43 = *(uint64_t (**)(void))(v0 + 8);
LABEL_15:
  return v43();
}

uint64_t sub_24813B6F4()
{
  sub_247FB33D4(*(void *)(v0 + 432), &qword_2692D85C0);
  sub_247FB33D4(v0 + 160, (uint64_t *)&unk_2692DBEF8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24813B7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[27] = a4;
  v5[28] = v4;
  v5[25] = a2;
  v5[26] = a3;
  v5[24] = a1;
  v5[29] = type metadata accessor for V1Command(0);
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[33] = AssociatedTypeWitness;
  uint64_t v7 = sub_248175700();
  v5[34] = v7;
  v5[35] = *(void *)(v7 - 8);
  v5[36] = swift_task_alloc();
  v5[37] = *(void *)(AssociatedTypeWitness - 8);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  v5[40] = swift_task_alloc();
  uint64_t v8 = sub_248174850();
  v5[41] = v8;
  v5[42] = *(void *)(v8 - 8);
  v5[43] = swift_task_alloc();
  uint64_t v9 = sub_2481748C0();
  v5[44] = v9;
  v5[45] = *(void *)(v9 - 8);
  v5[46] = swift_task_alloc();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  v5[47] = v10;
  v5[48] = *(void *)(v10 - 8);
  v5[49] = swift_task_alloc();
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  v5[52] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24813BB20, v4, 0);
}

uint64_t sub_24813BB20()
{
  uint64_t v55 = v0;
  uint64_t v1 = *(void *)(v0 + 224) + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter__activeTransport;
  swift_beginAccess();
  sub_247FBB338(v1, v0 + 56, &qword_2692DBE38);
  if (*(void *)(v0 + 80))
  {
    long long v2 = *(_OWORD *)(v0 + 72);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 56);
    *(_OWORD *)(v0 + 32) = v2;
    *(void *)(v0 + 48) = *(void *)(v0 + 88);
    sub_2481748B0();
    unint64_t v3 = sub_247FB851C(MEMORY[0x263F8EE78]);
    unint64_t v4 = sub_247FB651C(0);
    if (v5)
    {
      unint64_t v6 = v4;
      unint64_t v54 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24804E76C();
        unint64_t v3 = v54;
      }
      sub_24804E204(v6, v3);
      swift_bridgeObjectRelease();
    }
    unint64_t v7 = sub_247FB651C(1u);
    if (v8)
    {
      unint64_t v9 = v7;
      unint64_t v54 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24804E76C();
        unint64_t v3 = v54;
      }
      sub_24804E204(v9, v3);
      swift_bridgeObjectRelease();
    }
    unint64_t v10 = sub_247FB651C(2u);
    if (v11)
    {
      unint64_t v12 = v10;
      unint64_t v54 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24804E76C();
        unint64_t v3 = v54;
      }
      sub_24804E204(v12, v3);
      swift_bridgeObjectRelease();
    }
    unint64_t v13 = sub_247FB651C(3u);
    if (v14)
    {
      unint64_t v15 = v13;
      unint64_t v54 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24804E76C();
        unint64_t v3 = v54;
      }
      sub_24804E204(v15, v3);
      swift_bridgeObjectRelease();
    }
    sub_248174830();
    sub_248174820();
    double v17 = v16 * 1000.0;
    if ((~*(void *)&v17 & 0x7FF0000000000000) != 0)
    {
      if (v17 > -1.0)
      {
        if (v17 < 1.84467441e19)
        {
          uint64_t v18 = *(void *)(v0 + 416);
          uint64_t v19 = *(void *)(v0 + 376);
          uint64_t v20 = *(void *)(v0 + 360);
          uint64_t v52 = *(void *)(v0 + 352);
          uint64_t v53 = *(void *)(v0 + 368);
          uint64_t v22 = *(void *)(v0 + 336);
          uint64_t v21 = *(void *)(v0 + 344);
          uint64_t v23 = *(void *)(v0 + 328);
          uint64_t v25 = *(void *)(v0 + 208);
          uint64_t v24 = *(void *)(v0 + 216);
          uint64_t v26 = (unint64_t)v17;
          uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
          *(void *)(v0 + 424) = v27;
          *(void *)(v0 + 432) = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v27(v21, v23);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v54 = v3;
          sub_247FB8004(v26, 0, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v24 + 24))(v25, v24);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v18, v53, v52);
          *(unsigned char *)(v18 + *(int *)(v19 + 36)) = 1;
          *(void *)(v18 + *(int *)(v19 + 40)) = v3;
          if (qword_2692D4DF0 == -1)
          {
LABEL_22:
            uint64_t v29 = *(void *)(v0 + 408);
            uint64_t v30 = *(void *)(v0 + 416);
            uint64_t v31 = sub_248174B90();
            *(void *)(v0 + 440) = __swift_project_value_buffer(v31, (uint64_t)qword_2692DBE18);
            sub_247FBB338(v30, v29, &qword_2692D85C0);
            uint64_t v32 = sub_248174B70();
            os_log_type_t v33 = sub_2481755C0();
            BOOL v34 = os_log_type_enabled(v32, v33);
            uint64_t v35 = *(void *)(v0 + 408);
            if (v34)
            {
              uint64_t v36 = *(void *)(v0 + 400);
              uint64_t v37 = (uint8_t *)swift_slowAlloc();
              uint64_t v38 = swift_slowAlloc();
              unint64_t v54 = v38;
              *(_DWORD *)uint64_t v37 = 136315138;
              sub_247FBB338(v35, v36, &qword_2692D85C0);
              uint64_t v39 = sub_248175190();
              *(void *)(v0 + 184) = sub_247FB6D24(v39, v40, (uint64_t *)&v54);
              sub_248175730();
              swift_bridgeObjectRelease();
              sub_247FB33D4(v35, &qword_2692D85C0);
              _os_log_impl(&dword_247F93000, v32, v33, "Sending outMessage: %s", v37, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x24C574E00](v38, -1, -1);
              MEMORY[0x24C574E00](v37, -1, -1);
            }
            else
            {
              sub_247FB33D4(*(void *)(v0 + 408), &qword_2692D85C0);
            }

            return MEMORY[0x270FA2498](sub_24813C238, 0, 0);
          }
LABEL_38:
          swift_once();
          goto LABEL_22;
        }
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_37;
  }
  sub_247FB33D4(v0 + 56, &qword_2692DBE38);
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v41 = sub_248174B90();
  __swift_project_value_buffer(v41, (uint64_t)qword_2692DBE18);
  uint64_t v42 = sub_248174B70();
  os_log_type_t v43 = sub_2481755C0();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v44 = 0;
    _os_log_impl(&dword_247F93000, v42, v43, "Throwing error due to missing active transport", v44, 2u);
    MEMORY[0x24C574E00](v44, -1, -1);
  }
  uint64_t v45 = *(void *)(v0 + 376);
  uint64_t v46 = *(void *)(v0 + 384);
  uint64_t v48 = *(void *)(v0 + 200);
  uint64_t v47 = *(void *)(v0 + 208);

  type metadata accessor for CommandRouter.Failure(0);
  sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v49, 1, 4, v45);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v48, v47);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v50 = *(uint64_t (**)(void))(v0 + 8);
  return v50();
}

uint64_t sub_24813C238()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  unint64_t v3 = __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  unint64_t v4 = (void *)swift_task_alloc();
  v0[56] = v4;
  uint64_t v5 = sub_247FAAA00(&qword_2692DBF08, &qword_2692D85C0);
  *unint64_t v4 = v0;
  v4[1] = sub_24813C328;
  uint64_t v6 = v0[52];
  uint64_t v7 = v0[49];
  uint64_t v8 = v0[47];
  return sub_2480494C0(v7, (uint64_t)v3, v6, v8, v2, v5, v1);
}

uint64_t sub_24813C328()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 224);
  if (v0) {
    unint64_t v4 = sub_24813C454;
  }
  else {
    unint64_t v4 = sub_24813C580;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24813C454()
{
  sub_247FB33D4(*(void *)(v0 + 416), &qword_2692D85C0);
  sub_247FB33D4(v0 + 16, (uint64_t *)&unk_2692DBEF8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24813C580()
{
  uint64_t v73 = v0;
  sub_248174830();
  uint64_t result = sub_248174820();
  double v3 = v2 * 1000.0;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v3 <= -1.0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v3 >= 1.84467441e19)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  uint64_t v68 = v0 + 16;
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 376);
  uint64_t v6 = (unint64_t)v3;
  (*(void (**)(void, void))(v0 + 424))(*(void *)(v0 + 344), *(void *)(v0 + 328));
  uint64_t v7 = *(int *)(v5 + 40);
  uint64_t v8 = *(void *)(v4 + v7);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v71[0] = v8;
  sub_247FB8004(v6, 3u, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  *(void *)(v4 + v7) = v8;
  uint64_t v10 = sub_248174B70();
  os_log_type_t v11 = sub_2481755C0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = *(void *)(v0 + 392);
    uint64_t v13 = *(void *)(v0 + 400);
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v71[0] = v15;
    *(_DWORD *)char v14 = 136315138;
    swift_beginAccess();
    sub_247FBB338(v12, v13, &qword_2692D85C0);
    uint64_t v16 = sub_248175190();
    *(void *)(v0 + 176) = sub_247FB6D24(v16, v17, v71);
    sub_248175730();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v10, v11, "Received response inMessage: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v15, -1, -1);
    MEMORY[0x24C574E00](v14, -1, -1);
  }

  uint64_t v18 = *(void *)(v0 + 392);
  uint64_t v19 = *(void *)(v0 + 376);
  uint64_t v20 = *(void *)(v0 + 288);
  uint64_t v21 = *(void *)(v0 + 296);
  uint64_t v22 = *(void *)(v0 + 264);
  uint64_t v23 = *(void *)(v0 + 248);
  swift_beginAccess();
  sub_24814A7D0(v18 + *(int *)(v19 + 44), v23, type metadata accessor for V1Command);
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v23, v22, AssociatedConformanceWitness);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v20, 1, v22) != 1)
  {
    uint64_t v40 = *(void *)(v0 + 312);
    uint64_t v39 = *(void *)(v0 + 320);
    uint64_t v41 = *(void *)(v0 + 296);
    uint64_t v42 = *(void *)(v0 + 264);
    uint64_t v67 = *(void (**)(uint64_t, void, uint64_t))(v41 + 32);
    v67(v39, *(void *)(v0 + 288), v42);
    os_log_type_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
    v43(v40, v39, v42);
    uint64_t v44 = sub_248174B70();
    os_log_type_t v45 = sub_2481755C0();
    BOOL v46 = os_log_type_enabled(v44, v45);
    uint64_t v47 = *(void *)(v0 + 416);
    uint64_t v48 = *(void *)(v0 + 312);
    if (v46)
    {
      uint64_t v66 = *(void *)(v0 + 416);
      uint64_t v49 = *(void *)(v0 + 296);
      uint64_t v50 = *(void *)(v0 + 304);
      uint64_t v51 = *(void *)(v0 + 264);
      os_log_type_t type = v45;
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      v71[0] = v65;
      *(_DWORD *)uint64_t v52 = 136315138;
      v43(v50, v48, v51);
      uint64_t v53 = sub_248175190();
      *(void *)(v0 + 168) = sub_247FB6D24(v53, v54, v71);
      sub_248175730();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v51);
      _os_log_impl(&dword_247F93000, v44, type, "Received command response: %s", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v65, -1, -1);
      MEMORY[0x24C574E00](v52, -1, -1);

      uint64_t v55 = v66;
    }
    else
    {
      uint64_t v56 = *(void *)(v0 + 296);
      uint64_t v57 = *(void *)(v0 + 264);

      (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v48, v57);
      uint64_t v55 = v47;
    }
    sub_247FB33D4(v55, &qword_2692D85C0);
    sub_247FB33D4(v68, (uint64_t *)&unk_2692DBEF8);
    uint64_t v58 = *(void *)(v0 + 392);
    v67(*(void *)(v0 + 192), *(void *)(v0 + 320), *(void *)(v0 + 264));
    sub_247FB33D4(v58, &qword_2692D85C0);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v59 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_18;
  }
  uint64_t v25 = *(void *)(v0 + 392);
  uint64_t v26 = *(void *)(v0 + 376);
  uint64_t v27 = *(void *)(v0 + 240);
  (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 288), *(void *)(v0 + 272));
  sub_24814A7D0(v25 + *(int *)(v26 + 44), v27, type metadata accessor for V1Command);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v29 = *(void *)(v0 + 240);
  if (EnumCaseMultiPayload != 2)
  {
    sub_248149C68(v29, type metadata accessor for V1Command);
LABEL_16:
    uint64_t v34 = *(void *)(v0 + 416);
    uint64_t v60 = *(void *)(v0 + 384);
    uint64_t v36 = *(void *)(v0 + 392);
    uint64_t v61 = *(void *)(v0 + 376);
    type metadata accessor for CommandRouter.Failure(0);
    sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
    swift_allocError();
    uint64_t v63 = v62;
    sub_247FBB338(v36, v62, &qword_2692D85C0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v63, 0, 4, v61);
    swift_willThrow();
    goto LABEL_17;
  }
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = *(void *)(v29 + 8);
  uint64_t v32 = *(void *)(v29 + 16);
  char v33 = *(unsigned char *)(v29 + 24);
  v69[0] = *(void *)v29;
  v69[1] = v31;
  v69[2] = v32;
  char v70 = v33;
  v71[1] = 0;
  void v71[2] = 0;
  v71[0] = 4;
  char v72 = 2;
  if ((static V1CommandError.== infix(_:_:)((uint64_t)v69, (uint64_t)v71) & 1) == 0)
  {
    sub_2480E47A0(v30, v31, v32, v33);
    goto LABEL_16;
  }
  uint64_t v34 = *(void *)(v0 + 416);
  uint64_t v35 = *(void *)(v0 + 384);
  uint64_t v36 = *(void *)(v0 + 392);
  uint64_t v37 = *(void *)(v0 + 376);
  type metadata accessor for CommandRouter.Failure(0);
  sub_248141020(&qword_2692DBE40, (void (*)(uint64_t))type metadata accessor for CommandRouter.Failure);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v38, 4, 4, v37);
  swift_willThrow();
  sub_2480E47A0(v30, v31, v32, v33);
LABEL_17:
  sub_247FB33D4(v34, &qword_2692D85C0);
  sub_247FB33D4(v68, (uint64_t *)&unk_2692DBEF8);
  sub_247FB33D4(v36, &qword_2692D85C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v59 = *(uint64_t (**)(void))(v0 + 8);
LABEL_18:
  return v59();
}

uint64_t sub_24813CE5C(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = sub_2481748C0();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = type metadata accessor for V1Command(0);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_248174850();
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24813D024, v2, 0);
}

uint64_t sub_24813D024()
{
  uint64_t v31 = v0;
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = sub_248174B90();
  *(void *)(v0 + 184) = __swift_project_value_buffer(v3, (uint64_t)qword_2692DBE18);
  sub_247FBB338(v2, v1, &qword_2692D85C0);
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755C0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 176);
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 168);
    unint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v30 = v10;
    *(_DWORD *)unint64_t v9 = 136315138;
    sub_247FBB338(v7, v8, &qword_2692D85C0);
    uint64_t v11 = sub_248175190();
    *(void *)(v0 + 32) = sub_247FB6D24(v11, v12, &v30);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FB33D4(v7, &qword_2692D85C0);
    _os_log_impl(&dword_247F93000, v4, v5, "Received inMessage: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v10, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
    sub_247FB33D4(*(void *)(v0 + 176), &qword_2692D85C0);
  }

  sub_247FBB338(*(void *)(v0 + 48), *(void *)(v0 + 160), &qword_2692D85C0);
  sub_248174830();
  uint64_t result = sub_248174820();
  double v15 = v14 * 1000.0;
  if ((~*(void *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v15 <= -1.0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v15 >= 1.84467441e19)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v16 = *(void *)(v0 + 160);
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v18 = *(void *)(v0 + 144);
  uint64_t v19 = *(void *)(v0 + 120);
  uint64_t v20 = *(void *)(v0 + 128);
  uint64_t v21 = (unint64_t)v15;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  *(void *)(v0 + 192) = v22;
  *(void *)(v0 + 200) = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v22(v17, v19);
  uint64_t v23 = *(int *)(v18 + 40);
  *(_DWORD *)(v0 + 216) = v23;
  uint64_t v24 = *(void *)(v16 + v23);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v30 = v24;
  sub_247FB8004(v21, 1u, isUniquelyReferenced_nonNull_native);
  uint64_t v26 = v30;
  swift_bridgeObjectRelease();
  *(void *)(v16 + v23) = v26;
  uint64_t v27 = v16 + *(int *)(v18 + 44);
  int v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v28;
  *int v28 = v0;
  v28[1] = sub_24813D368;
  uint64_t v29 = *(void *)(v0 + 112);
  return sub_24813D9A4(v29, v27);
}

uint64_t sub_24813D368()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24813D478, v1, 0);
}

uint64_t sub_24813D478()
{
  uint64_t v41 = v0;
  sub_24814A7D0(*(void *)(v0 + 112), *(void *)(v0 + 104), type metadata accessor for V1Command);
  uint64_t v1 = sub_248174B70();
  os_log_type_t v2 = sub_2481755C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = *(void *)(v0 + 96);
    uint64_t v3 = *(void *)(v0 + 104);
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v40 = v6;
    *(_DWORD *)os_log_type_t v5 = 136315138;
    sub_24814A7D0(v3, v4, type metadata accessor for V1Command);
    uint64_t v7 = sub_248175190();
    *(void *)(v0 + 24) = sub_247FB6D24(v7, v8, &v40);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_248149C68(v3, type metadata accessor for V1Command);
    _os_log_impl(&dword_247F93000, v1, v2, "Processed request and preparing response: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v6, -1, -1);
    MEMORY[0x24C574E00](v5, -1, -1);
  }
  else
  {
    sub_248149C68(*(void *)(v0 + 104), type metadata accessor for V1Command);
  }

  uint64_t v9 = *(int *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 160);
  sub_2481748B0();
  uint64_t v11 = *(void *)(v10 + v9);
  swift_bridgeObjectRetain();
  sub_248174830();
  uint64_t result = sub_248174820();
  double v14 = v13 * 1000.0;
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v14 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v14 >= 1.84467441e19)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  double v15 = *(int **)(v0 + 144);
  uint64_t v37 = *(void *)(v0 + 152);
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v17 = *(void *)(v0 + 72);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v19 = *(void *)(v0 + 64);
  uint64_t v20 = *(void *)(v0 + 40);
  uint64_t v21 = (unint64_t)v14;
  (*(void (**)(void, void))(v0 + 192))(*(void *)(v0 + 136), *(void *)(v0 + 120));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v40 = v11;
  sub_247FB8004(v21, 2u, isUniquelyReferenced_nonNull_native);
  uint64_t v23 = v40;
  swift_bridgeObjectRelease();
  sub_24814A7D0(v16, v20 + v15[11], type metadata accessor for V1Command);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v20, v18, v19);
  *(unsigned char *)(v20 + v15[9]) = 1;
  *(void *)(v20 + v15[10]) = v23;
  sub_247FBB338(v20, v37, &qword_2692D85C0);
  uint64_t v24 = sub_248174B70();
  os_log_type_t v25 = sub_2481755C0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = *(void *)(v0 + 168);
    uint64_t v39 = *(void *)(v0 + 160);
    uint64_t v27 = *(void *)(v0 + 152);
    uint64_t v38 = *(void *)(v0 + 112);
    int v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v40 = v29;
    *(_DWORD *)int v28 = 136315138;
    sub_247FBB338(v27, v26, &qword_2692D85C0);
    uint64_t v30 = sub_248175190();
    *(void *)(v0 + 16) = sub_247FB6D24(v30, v31, &v40);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FB33D4(v27, &qword_2692D85C0);
    _os_log_impl(&dword_247F93000, v24, v25, "Returning outMessage as response: %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v29, -1, -1);
    MEMORY[0x24C574E00](v28, -1, -1);

    sub_248149C68(v38, type metadata accessor for V1Command);
    uint64_t v32 = v39;
  }
  else
  {
    uint64_t v34 = *(void *)(v0 + 152);
    uint64_t v33 = *(void *)(v0 + 160);
    uint64_t v35 = *(void *)(v0 + 112);

    sub_247FB33D4(v34, &qword_2692D85C0);
    sub_248149C68(v35, type metadata accessor for V1Command);
    uint64_t v32 = v33;
  }
  sub_247FB33D4(v32, &qword_2692D85C0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
  return v36();
}

uint64_t sub_24813D9A4(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  v3[19] = type metadata accessor for V1Command.Response(0);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  type metadata accessor for V1Command.Request(0);
  v3[23] = swift_task_alloc();
  v3[24] = type metadata accessor for V1Command(0);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24813DAD0, v2, 0);
}

uint64_t sub_24813DAD0()
{
  os_log_type_t v45 = v0;
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[17];
  uint64_t v3 = sub_248174B90();
  v0[28] = __swift_project_value_buffer(v3, (uint64_t)qword_2692DBE18);
  sub_24814A7D0(v2, v1, type metadata accessor for V1Command);
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755C0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[27];
  if (v6)
  {
    uint64_t v8 = v0[26];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v10 = v44;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_24814A7D0(v7, v8, type metadata accessor for V1Command);
    uint64_t v11 = sub_248175190();
    v0[15] = sub_247FB6D24(v11, v12, &v44);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_248149C68(v7, type metadata accessor for V1Command);
    _os_log_impl(&dword_247F93000, v4, v5, "Received incoming V1 command: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v10, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
    sub_248149C68(v0[27], type metadata accessor for V1Command);
  }

  sub_24814A7D0(v0[17], v0[25], type metadata accessor for V1Command);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = v0[21];
      uint64_t v15 = v0[22];
      sub_24814A838(v0[25], v15, type metadata accessor for V1Command.Response);
      sub_24814A7D0(v15, v14, type metadata accessor for V1Command.Response);
      uint64_t v16 = sub_248174B70();
      os_log_type_t v17 = sub_2481755D0();
      BOOL v18 = os_log_type_enabled(v16, v17);
      uint64_t v20 = v0[21];
      uint64_t v19 = v0[22];
      if (v18)
      {
        uint64_t v21 = v0[20];
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        uint64_t v44 = v23;
        *(_DWORD *)uint64_t v22 = 136315138;
        sub_24814A7D0(v20, v21, type metadata accessor for V1Command.Response);
        uint64_t v24 = sub_248175190();
        v0[10] = sub_247FB6D24(v24, v25, &v44);
        sub_248175730();
        swift_bridgeObjectRelease();
        sub_248149C68(v20, type metadata accessor for V1Command.Response);
        _os_log_impl(&dword_247F93000, v16, v17, "Received an unexpected response instead of request: %s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v23, -1, -1);
        MEMORY[0x24C574E00](v22, -1, -1);
      }
      else
      {

        sub_248149C68(v20, type metadata accessor for V1Command.Response);
      }
      sub_248149C68(v19, type metadata accessor for V1Command.Response);
      uint64_t v40 = v0[16];
      *(void *)(v40 + 8) = 0;
      *(void *)(v40 + 16) = 0;
      *(void *)uint64_t v40 = 2;
      *(unsigned char *)(v40 + 24) = 2;
    }
    else
    {
      uint64_t v30 = v0[25];
      uint64_t v31 = *(void *)v30;
      uint64_t v32 = *(void *)(v30 + 8);
      uint64_t v33 = *(void *)(v30 + 16);
      char v34 = *(unsigned char *)(v30 + 24);
      sub_2480E4780(*(void *)v30, v32, v33, v34);
      sub_2480E4780(v31, v32, v33, v34);
      uint64_t v35 = sub_248174B70();
      os_log_type_t v36 = sub_2481755D0();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        os_log_type_t v43 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 138412290;
        sub_24814A77C();
        swift_allocError();
        *(void *)uint64_t v38 = v31;
        *(void *)(v38 + 8) = v32;
        *(void *)(v38 + 16) = v33;
        *(unsigned char *)(v38 + 24) = v34;
        sub_2480E4780(v31, v32, v33, v34);
        uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
        v0[12] = v39;
        sub_248175730();
        *os_log_type_t v43 = v39;
        sub_2480E47A0(v31, v32, v33, v34);
        sub_2480E47A0(v31, v32, v33, v34);
        _os_log_impl(&dword_247F93000, v35, v36, "Received an unexpected failure as a request: %@", v37, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v43, -1, -1);
        MEMORY[0x24C574E00](v37, -1, -1);

        sub_2480E47A0(v31, v32, v33, v34);
      }
      else
      {
        sub_2480E47A0(v31, v32, v33, v34);
        sub_2480E47A0(v31, v32, v33, v34);
        sub_2480E47A0(v31, v32, v33, v34);
      }
      uint64_t v41 = v0[16];
      *(void *)(v41 + 8) = 0;
      *(void *)(v41 + 16) = 0;
      *(void *)uint64_t v41 = 3;
      *(unsigned char *)(v41 + 24) = 2;
    }
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = (uint64_t (*)(void))v0[1];
    return v42();
  }
  else
  {
    sub_24814A838(v0[25], v0[23], type metadata accessor for V1Command.Request);
    uint64_t v26 = (void *)swift_task_alloc();
    v0[29] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_24813E238;
    uint64_t v27 = v0[23];
    uint64_t v28 = v0[16];
    return sub_24813E998(v28, v27);
  }
}

uint64_t sub_24813E238()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v4 = sub_24813E440;
  }
  else {
    uint64_t v4 = sub_24813E364;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24813E364()
{
  sub_248149C68(*(void *)(v0 + 184), type metadata accessor for V1Command.Request);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24813E440()
{
  uint64_t v40 = v0;
  uint64_t v1 = *(void **)(v0 + 240);
  *(void *)(v0 + 72) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
  char v3 = swift_dynamicCast();
  uint64_t v4 = *(void **)(v0 + 240);
  if (v3)
  {

    uint64_t v5 = *(void *)(v0 + 16);
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v7 = *(void *)(v0 + 32);
    char v8 = *(unsigned char *)(v0 + 40);
    sub_2480E4780(v5, v6, v7, v8);
    sub_2480E4780(v5, v6, v7, v8);
    uint64_t v9 = sub_248174B70();
    os_log_type_t v10 = sub_2481755D0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v36 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 138412290;
      sub_24814A77C();
      swift_allocError();
      *(void *)uint64_t v12 = v5;
      *(void *)(v12 + 8) = v6;
      *(void *)(v12 + 16) = v7;
      *(unsigned char *)(v12 + 24) = v8;
      sub_2480E4780(v5, v6, v7, v8);
      uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 112) = v13;
      sub_248175730();
      *os_log_type_t v36 = v13;
      sub_2480E47A0(v5, v6, v7, v8);
      sub_2480E47A0(v5, v6, v7, v8);
      _os_log_impl(&dword_247F93000, v9, v10, "Failed to receive request with V1 command error: %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v36, -1, -1);
      MEMORY[0x24C574E00](v11, -1, -1);
    }
    else
    {

      sub_2480E47A0(v5, v6, v7, v8);
      sub_2480E47A0(v5, v6, v7, v8);
    }
    uint64_t v24 = *(void *)(v0 + 128);
    sub_248149C68(*(void *)(v0 + 184), type metadata accessor for V1Command.Request);
    *(void *)uint64_t v24 = v5;
    *(void *)(v24 + 8) = v6;
    *(void *)(v24 + 16) = v7;
    *(unsigned char *)(v24 + 24) = v8;
    swift_storeEnumTagMultiPayload();
  }
  else
  {

    id v14 = v4;
    id v15 = v4;
    uint64_t v16 = sub_248174B70();
    os_log_type_t v17 = sub_2481755D0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = *(void **)(v0 + 240);
    if (v18)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      id v22 = v19;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 104) = v23;
      sub_248175730();
      void *v21 = v23;

      _os_log_impl(&dword_247F93000, v16, v17, "Failed to receive request with error: %@", v20, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v21, -1, -1);
      MEMORY[0x24C574E00](v20, -1, -1);
    }
    else
    {
    }
    unint64_t v25 = *(void **)(v0 + 240);
    uint64_t v26 = *(void *)(v0 + 184);
    uint64_t v27 = *(void *)(v0 + 128);

    swift_getErrorValue();
    uint64_t v28 = *(void *)(v0 + 48);
    uint64_t v29 = *(void *)(v0 + 56);
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v31, v28, v29);
    Error.into()(v29, (uint64_t)&v37);

    sub_248149C68(v26, type metadata accessor for V1Command.Request);
    swift_task_dealloc();
    uint64_t v32 = v38;
    char v33 = v39;
    *(_OWORD *)uint64_t v27 = v37;
    *(void *)(v27 + 16) = v32;
    *(unsigned char *)(v27 + 24) = v33;
    swift_storeEnumTagMultiPayload();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v34 = *(uint64_t (**)(void))(v0 + 8);
  return v34();
}

uint64_t sub_24813E998(uint64_t a1, uint64_t a2)
{
  v3[59] = a2;
  v3[60] = v2;
  v3[58] = a1;
  v3[61] = type metadata accessor for V1Command.Request(0);
  v3[62] = swift_task_alloc();
  v3[63] = swift_task_alloc();
  v3[64] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24813EA4C, v2, 0);
}

uint64_t sub_24813EA4C()
{
  uint64_t v39 = v0;
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = *(void *)(v0 + 472);
  uint64_t v3 = sub_248174B90();
  __swift_project_value_buffer(v3, (uint64_t)qword_2692DBE18);
  sub_24814A7D0(v2, v1, type metadata accessor for V1Command.Request);
  uint64_t v4 = sub_248174B70();
  os_log_type_t v5 = sub_2481755C0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 512);
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 504);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v38 = v10;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_24814A7D0(v7, v8, type metadata accessor for V1Command.Request);
    uint64_t v11 = sub_248175190();
    *(void *)(v0 + 456) = sub_247FB6D24(v11, v12, &v38);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_248149C68(v7, type metadata accessor for V1Command.Request);
    _os_log_impl(&dword_247F93000, v4, v5, "Received incoming V1 request: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v10, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
    sub_248149C68(*(void *)(v0 + 512), type metadata accessor for V1Command.Request);
  }

  sub_24814A7D0(*(void *)(v0 + 472), *(void *)(v0 + 496), type metadata accessor for V1Command.Request);
  if (swift_getEnumCaseMultiPayload())
  {
    long long v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 480) + 208)
                                                            + **(int **)(*(void *)(v0 + 480) + 208));
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_24813F06C;
    uint64_t v15 = *(void *)(v0 + 472);
    uint64_t v14 = *(void *)(v0 + 480);
    uint64_t v16 = *(void *)(v0 + 464);
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 496);
    uint64_t v18 = *(void *)(v0 + 480);
    long long v20 = *(_OWORD *)(v17 + 16);
    long long v19 = *(_OWORD *)(v17 + 32);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v17;
    *(_OWORD *)(v0 + 32) = v20;
    *(_OWORD *)(v0 + 48) = v19;
    long long v21 = *(_OWORD *)(v17 + 96);
    long long v23 = *(_OWORD *)(v17 + 48);
    long long v22 = *(_OWORD *)(v17 + 64);
    *(_OWORD *)(v0 + 96) = *(_OWORD *)(v17 + 80);
    *(_OWORD *)(v0 + 112) = v21;
    *(_OWORD *)(v0 + 64) = v23;
    *(_OWORD *)(v0 + 80) = v22;
    long long v25 = *(_OWORD *)(v17 + 128);
    long long v24 = *(_OWORD *)(v17 + 144);
    uint64_t v26 = *(void *)(v17 + 160);
    long long v27 = *(_OWORD *)(v17 + 112);
    *(void *)(v0 + 176) = v26;
    *(_OWORD *)(v0 + 144) = v25;
    *(_OWORD *)(v0 + 160) = v24;
    *(_OWORD *)(v0 + 128) = v27;
    uint64_t v28 = *(int **)(v18 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_handshakeHandler);
    long long v29 = *(_OWORD *)(v0 + 144);
    long long v30 = *(_OWORD *)(v0 + 160);
    long long v31 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 296) = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 312) = v29;
    *(_OWORD *)(v0 + 328) = v30;
    *(void *)(v0 + 344) = v26;
    long long v32 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 232) = *(_OWORD *)(v0 + 64);
    long long v33 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 264) = v33;
    *(_OWORD *)(v0 + 280) = v31;
    long long v34 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 200) = v34;
    *(_OWORD *)(v0 + 216) = v32;
    long long v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v28 + *v28);
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 520) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_24813EE6C;
    uint64_t v14 = *(void *)(v0 + 480);
    uint64_t v16 = v0 + 352;
    uint64_t v15 = v0 + 184;
  }
  return v37(v16, v14, v15);
}

uint64_t sub_24813EE6C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 528) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 480);
    uint64_t v4 = sub_24813F22C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 480);
    sub_2480C3CD8((uint64_t *)(v2 + 16));
    uint64_t v4 = sub_24813EF94;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24813EF94()
{
  uint64_t v1 = *(void *)(v0 + 464);
  char v2 = *(unsigned char *)(v0 + 353);
  char v3 = *(unsigned char *)(v0 + 376);
  char v4 = *(unsigned char *)(v0 + 377);
  char v5 = *(unsigned char *)(v0 + 448);
  long long v6 = *(_OWORD *)(v0 + 360);
  long long v7 = *(_OWORD *)(v0 + 384);
  long long v8 = *(_OWORD *)(v0 + 400);
  long long v9 = *(_OWORD *)(v0 + 416);
  long long v10 = *(_OWORD *)(v0 + 432);
  *(unsigned char *)uint64_t v1 = *(unsigned char *)(v0 + 352);
  *(unsigned char *)(v1 + 1) = v2;
  *(_OWORD *)(v1 + 8) = v6;
  *(unsigned char *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 25) = v4;
  *(_OWORD *)(v1 + 32) = v7;
  *(_OWORD *)(v1 + 48) = v8;
  *(_OWORD *)(v1 + 64) = v9;
  *(_OWORD *)(v1 + 80) = v10;
  *(unsigned char *)(v1 + 96) = v5;
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24813F06C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 544) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 480);
  if (v0) {
    char v4 = sub_24813F2B4;
  }
  else {
    char v4 = sub_24813F198;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24813F198()
{
  sub_248149C68(*(void *)(v0 + 496), type metadata accessor for V1Command.Request);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24813F22C()
{
  sub_2480C3CD8((uint64_t *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24813F2B4()
{
  sub_248149C68(*(void *)(v0 + 496), type metadata accessor for V1Command.Request);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24813F350(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 840) = v2;
  *(void *)(v3 + 832) = a1;
  long long v4 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v3 + 144) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v3 + 160) = v4;
  *(void *)(v3 + 176) = *(void *)(a2 + 160);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v3 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v3 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v3 + 128) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 32) = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 64) = v8;
  return MEMORY[0x270FA2498](sub_24813F3A4, v2, 0);
}

uint64_t sub_24813F3A4()
{
  uint64_t v98 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 16);
  if (qword_2692D4DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_248174B90();
  *(void *)(v0 + 848) = __swift_project_value_buffer(v2, (uint64_t)qword_2692DBE18);
  sub_2480C3C20((uint64_t *)(v0 + 16));
  sub_2480C3C20((uint64_t *)(v0 + 16));
  uint64_t v3 = sub_248174B70();
  os_log_type_t v4 = sub_2481755C0();
  if (os_log_type_enabled(v3, v4))
  {
    long long v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)long long v5 = 136315138;
    *(void *)&long long v91 = v6;
    long long v7 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 496) = v7;
    *(void *)(v0 + 512) = *(void *)(v0 + 176);
    long long v8 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 432) = v8;
    long long v9 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 464) = v9;
    long long v10 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 352) = *v1;
    *(_OWORD *)(v0 + 368) = v10;
    long long v11 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 400) = v11;
    sub_2480C3C20((uint64_t *)(v0 + 16));
    uint64_t v12 = sub_248175190();
    *(void *)(v0 + 800) = sub_247FB6D24(v12, v13, (uint64_t *)&v91);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    _os_log_impl(&dword_247F93000, v3, v4, "Received handshake request: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v6, -1, -1);
    MEMORY[0x24C574E00](v5, -1, -1);
  }
  else
  {
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    sub_2480C3CD8((uint64_t *)(v0 + 16));
  }

  int v14 = *(unsigned __int8 *)(v0 + 16);
  *(unsigned char *)(v0 + 953) = v14;
  if (v14 == 1 && *(void *)(*(void *)(v0 + 840) + 248))
  {
    uint64_t v15 = sub_248174B70();
    os_log_type_t v16 = sub_2481755C0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl(&dword_247F93000, v15, v16, "Request is a keep alive and handshake has been received before, keeping alive", v17, 2u);
      MEMORY[0x24C574E00](v17, -1, -1);
    }
    uint64_t v18 = *(void *)(v0 + 832);

    *(_WORD *)uint64_t v18 = 257;
    *(void *)(v18 + 8) = 0;
    *(void *)(v18 + 16) = 0;
    *(_WORD *)(v18 + 24) = 256;
    *(_OWORD *)(v18 + 32) = 0u;
    *(_OWORD *)(v18 + 48) = 0u;
    *(_OWORD *)(v18 + 64) = 0u;
    *(_OWORD *)(v18 + 80) = 0u;
    *(unsigned char *)(v18 + 96) = 0;
    goto LABEL_39;
  }
  uint64_t v19 = *(void *)(v0 + 24);
  uint64_t v20 = *(void *)(v0 + 32);
  *(void *)(v0 + 856) = v19;
  *(void *)(v0 + 864) = v20;
  uint64_t v21 = *(void *)(v0 + 40);
  uint64_t v22 = *(void *)(v0 + 48);
  *(void *)(v0 + 872) = v21;
  *(void *)(v0 + 880) = v22;
  uint64_t v23 = *(void *)(v0 + 56);
  uint64_t v24 = *(void *)(v0 + 64);
  *(void *)(v0 + 888) = v23;
  *(void *)(v0 + 896) = v24;
  uint64_t v25 = *(void *)(v0 + 72);
  uint64_t v26 = *(void *)(v0 + 80);
  *(void *)(v0 + 904) = v25;
  *(void *)(v0 + 912) = v26;
  char v27 = *(unsigned char *)(v0 + 88);
  *(unsigned char *)(v0 + 954) = v27;
  if (!v20)
  {
    sub_2480C3C20((uint64_t *)(v0 + 16));
    sub_2480C3C20((uint64_t *)(v0 + 16));
    long long v32 = sub_248174B70();
    os_log_type_t v33 = sub_2481755D0();
    if (os_log_type_enabled(v32, v33))
    {
      long long v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)long long v34 = 136315138;
      *(void *)&long long v91 = v35;
      long long v36 = *(_OWORD *)(v0 + 160);
      *(_OWORD *)(v0 + 312) = *(_OWORD *)(v0 + 144);
      *(_OWORD *)(v0 + 328) = v36;
      *(void *)(v0 + 344) = *(void *)(v0 + 176);
      long long v37 = *(_OWORD *)(v0 + 96);
      *(_OWORD *)(v0 + 248) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v0 + 264) = v37;
      long long v38 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 112);
      *(_OWORD *)(v0 + 296) = v38;
      long long v39 = *(_OWORD *)(v0 + 32);
      *(_OWORD *)(v0 + 184) = *v1;
      *(_OWORD *)(v0 + 200) = v39;
      long long v40 = *(_OWORD *)(v0 + 64);
      *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 48);
      *(_OWORD *)(v0 + 232) = v40;
      sub_2480C3C20((uint64_t *)(v0 + 16));
      uint64_t v41 = sub_248175190();
      *(void *)(v0 + 824) = sub_247FB6D24(v41, v42, (uint64_t *)&v91);
      sub_248175730();
      swift_bridgeObjectRelease();
      sub_2480C3CD8((uint64_t *)(v0 + 16));
      sub_2480C3CD8((uint64_t *)(v0 + 16));
      _os_log_impl(&dword_247F93000, v32, v33, "REJECTION: Incoming handshake request did not contain expected device info: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v35, -1, -1);
      MEMORY[0x24C574E00](v34, -1, -1);
    }
    else
    {
      sub_2480C3CD8((uint64_t *)(v0 + 16));
      sub_2480C3CD8((uint64_t *)(v0 + 16));
    }

    uint64_t v50 = *(void *)(v0 + 832);
    *(_WORD *)uint64_t v50 = 0;
    *(void *)(v50 + 8) = 0xD000000000000015;
    *(void *)(v50 + 16) = 0x8000000248193530;
    *(_WORD *)(v50 + 24) = 256;
    *(_OWORD *)(v50 + 32) = 0u;
    *(_OWORD *)(v50 + 48) = 0u;
    *(_OWORD *)(v50 + 64) = 0u;
    *(_OWORD *)(v50 + 80) = 0u;
    *(unsigned char *)(v50 + 96) = 0;
LABEL_39:
    uint64_t v80 = *(uint64_t (**)(void))(v0 + 8);
    return v80();
  }
  uint64_t v84 = v19;
  char v28 = v27;
  uint64_t v85 = v21;
  sub_247FF6A2C(v19, v20, v21, v22, v23, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FF6AA4(v23, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FF6AA4(v23, v24);
  log = sub_248174B70();
  os_log_type_t type = sub_2481755B0();
  if (os_log_type_enabled(log, type))
  {
    long long v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v81 = swift_slowAlloc();
    *(_DWORD *)long long v29 = 136315138;
    uint64_t v97 = v81;
    *(void *)&long long v91 = v84;
    *((void *)&v91 + 1) = v20;
    *(void *)&long long v92 = v85;
    *((void *)&v92 + 1) = v22;
    *(void *)&long long v93 = v23;
    *((void *)&v93 + 1) = v24;
    *(void *)&long long v94 = v25;
    *((void *)&v94 + 1) = v26;
    char v95 = v28 & 1;
    uint64_t v30 = IdMSAccount.DeviceInfo.description.getter();
    *(void *)(v0 + 816) = sub_247FB6D24(v30, v31, &v97);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_247FF6B84(v84, v20, v85, v22, v23, v24);
    sub_247FF6B84(v84, v20, v85, v22, v23, v24);
    _os_log_impl(&dword_247F93000, log, type, "Received new initial handshake request from device with info: %s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v81, -1, -1);
    MEMORY[0x24C574E00](v29, -1, -1);
  }
  else
  {
    sub_247FF6B84(v84, v20, v85, v22, v23, v24);
    sub_247FF6B84(v84, v20, v85, v22, v23, v24);
  }

  sub_2480C3C20((uint64_t *)(v0 + 16));
  swift_retain();
  sub_2480C3C20((uint64_t *)(v0 + 16));
  swift_retain();
  os_log_type_t v43 = sub_248174B70();
  os_log_type_t v44 = sub_2481755C0();
  BOOL v45 = os_log_type_enabled(v43, v44);
  uint64_t v46 = *(void *)(v0 + 840);
  if (v45)
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    *(void *)&long long v91 = v88;
    *(_DWORD *)uint64_t v47 = 136315394;
    if (*(void *)(v46 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_signInPreflightHelper))
    {
      swift_retain();
      sub_2481749F0();
      uint64_t v48 = *(void *)(v0 + 728);
      if (v48) {
        uint64_t v49 = *(void *)(v0 + 736);
      }
      else {
        uint64_t v49 = 0;
      }
      swift_release();
    }
    else
    {
      uint64_t v48 = 0;
      uint64_t v49 = 0;
    }
    *(void *)(v0 + 744) = v48;
    *(void *)(v0 + 752) = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692DBFA8);
    uint64_t v51 = sub_248175190();
    *(void *)(v0 + 792) = sub_247FB6D24(v51, v52, (uint64_t *)&v91);
    sub_248175730();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    long long v53 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 648) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 664) = v53;
    *(void *)(v0 + 680) = *(void *)(v0 + 176);
    long long v54 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v0 + 584) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v0 + 600) = v54;
    long long v55 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v0 + 616) = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v0 + 632) = v55;
    long long v56 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v0 + 520) = *v1;
    *(_OWORD *)(v0 + 536) = v56;
    long long v57 = *(_OWORD *)(v0 + 64);
    *(_OWORD *)(v0 + 552) = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v0 + 568) = v57;
    sub_2480C3C20((uint64_t *)(v0 + 16));
    uint64_t v58 = sub_248175190();
    *(void *)(v0 + 808) = sub_247FB6D24(v58, v59, (uint64_t *)&v91);
    sub_248175730();
    swift_bridgeObjectRelease();
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    _os_log_impl(&dword_247F93000, v43, v44, "Calling signInRequestHandler %s, with request: %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v88, -1, -1);
    MEMORY[0x24C574E00](v47, -1, -1);
  }
  else
  {
    swift_release_n();
    sub_2480C3CD8((uint64_t *)(v0 + 16));
    sub_2480C3CD8((uint64_t *)(v0 + 16));
  }
  if (!*(void *)(*(void *)(v0 + 840) + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_signInPreflightHelper))
  {
LABEL_34:
    unsigned int v63 = *(unsigned __int8 *)(v0 + 18);
    if (v63 <= 1) {
      LOBYTE(v63) = 1;
    }
    char v87 = v63;
    char v64 = sub_248174B70();
    os_log_type_t v65 = sub_2481755C0();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 16777472;
      *(unsigned char *)(v0 + 952) = v87;
      sub_248175730();
      _os_log_impl(&dword_247F93000, v64, v65, "Accepting handshake with compatible version: %hhu", v66, 5u);
      MEMORY[0x24C574E00](v66, -1, -1);
    }
    char v67 = *(unsigned char *)(v0 + 954);
    uint64_t v90 = *(void *)(v0 + 912);
    uint64_t v68 = *(void *)(v0 + 904);
    uint64_t v69 = *(void *)(v0 + 896);
    uint64_t v70 = *(void *)(v0 + 888);
    uint64_t v71 = v64;
    uint64_t v72 = *(void *)(v0 + 880);
    uint64_t v73 = *(void *)(v0 + 872);
    uint64_t v74 = *(void *)(v0 + 864);
    uint64_t v75 = *(void *)(v0 + 856);
    char v86 = *(unsigned char *)(v0 + 953);
    uint64_t v76 = *(void *)(v0 + 832);

    *(void *)&long long v91 = v75;
    *((void *)&v91 + 1) = v74;
    *(void *)&long long v92 = v73;
    *((void *)&v92 + 1) = v72;
    *(void *)&long long v93 = v70;
    *((void *)&v93 + 1) = v69;
    *(void *)&long long v94 = v68;
    *((void *)&v94 + 1) = v90;
    char v95 = v67 & 1;
    char v96 = 0;
    sub_2481394B4((uint64_t)&v91);
    sub_247FF6B84(v75, v74, v73, v72, v70, v69);
    sub_248137804();
    static IdMSAccount.DeviceInfo.current.getter((uint64_t)&v91);
    char v77 = v95;
    *(unsigned char *)uint64_t v76 = v86;
    *(unsigned char *)(v76 + 1) = 1;
    *(void *)(v76 + 8) = 0;
    *(void *)(v76 + 16) = 0;
    *(unsigned char *)(v76 + 24) = v87;
    *(unsigned char *)(v76 + 25) = 0;
    long long v78 = v92;
    *(_OWORD *)(v76 + 32) = v91;
    *(_OWORD *)(v76 + 48) = v78;
    long long v79 = v94;
    *(_OWORD *)(v76 + 64) = v93;
    *(_OWORD *)(v76 + 80) = v79;
    *(unsigned char *)(v76 + 96) = v77;
    goto LABEL_39;
  }
  swift_retain();
  sub_2481749F0();
  uint64_t v60 = *(int **)(v0 + 712);
  *(void *)(v0 + 920) = v60;
  if (!v60)
  {
    swift_release();
    goto LABEL_34;
  }
  *(void *)(v0 + 928) = *(void *)(v0 + 720);
  sub_247F98D10((uint64_t)v60);
  swift_release();
  *(void *)(v0 + 784) = *(void *)(v0 + 176);
  uint64_t v89 = (uint64_t (*)(void))((char *)v60 + *v60);
  uint64_t v61 = (void *)swift_task_alloc();
  *(void *)(v0 + 936) = v61;
  *uint64_t v61 = v0;
  v61[1] = sub_24813FFF8;
  return v89();
}

uint64_t sub_24813FFF8()
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 920);
  *(void *)(*(void *)v1 + 944) = v0;
  swift_task_dealloc();
  sub_247F98D68(v3);
  sub_247F98D68(v3);
  if (v0)
  {
    uint64_t v4 = v2[105];
    sub_247FF6B84(v2[107], v2[108], v2[109], v2[110], v2[111], v2[112]);
    long long v5 = sub_24814038C;
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v6 = v2[105];
    long long v5 = sub_248140194;
  }
  return MEMORY[0x270FA2498](v5, v6, 0);
}

uint64_t sub_248140194()
{
  uint64_t v29 = v0;
  if (*(unsigned __int8 *)(v0 + 18) <= 1u) {
    char v1 = 1;
  }
  else {
    char v1 = *(unsigned char *)(v0 + 18);
  }
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 16777472;
    *(unsigned char *)(v0 + 952) = v1;
    sub_248175730();
    _os_log_impl(&dword_247F93000, v2, v3, "Accepting handshake with compatible version: %hhu", v4, 5u);
    MEMORY[0x24C574E00](v4, -1, -1);
  }
  char v5 = *(unsigned char *)(v0 + 954);
  uint64_t v22 = *(void *)(v0 + 912);
  uint64_t v6 = *(void *)(v0 + 904);
  uint64_t v7 = *(void *)(v0 + 896);
  char v21 = v1;
  uint64_t v8 = *(void *)(v0 + 888);
  long long v9 = v2;
  uint64_t v10 = *(void *)(v0 + 880);
  uint64_t v11 = *(void *)(v0 + 872);
  uint64_t v12 = *(void *)(v0 + 864);
  uint64_t v13 = *(void *)(v0 + 856);
  char v20 = *(unsigned char *)(v0 + 953);
  uint64_t v14 = *(void *)(v0 + 832);

  *(void *)&long long v23 = v13;
  *((void *)&v23 + 1) = v12;
  *(void *)&long long v24 = v11;
  *((void *)&v24 + 1) = v10;
  *(void *)&long long v25 = v8;
  *((void *)&v25 + 1) = v7;
  *(void *)&long long v26 = v6;
  *((void *)&v26 + 1) = v22;
  char v27 = v5 & 1;
  char v28 = 0;
  sub_2481394B4((uint64_t)&v23);
  sub_247FF6B84(v13, v12, v11, v10, v8, v7);
  sub_248137804();
  static IdMSAccount.DeviceInfo.current.getter((uint64_t)&v23);
  char v15 = v27;
  *(unsigned char *)uint64_t v14 = v20;
  *(unsigned char *)(v14 + 1) = 1;
  *(void *)(v14 + 8) = 0;
  *(void *)(v14 + 16) = 0;
  *(unsigned char *)(v14 + 24) = v21;
  *(unsigned char *)(v14 + 25) = 0;
  long long v16 = v24;
  *(_OWORD *)(v14 + 32) = v23;
  *(_OWORD *)(v14 + 48) = v16;
  long long v17 = v26;
  *(_OWORD *)(v14 + 64) = v25;
  *(_OWORD *)(v14 + 80) = v17;
  *(unsigned char *)(v14 + 96) = v15;
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_24814038C()
{
  long long v25 = v0;
  char v1 = (void *)v0[118];
  uint64_t v21 = (uint64_t)v1;
  long long v22 = 0u;
  long long v23 = 0u;
  memset(v24, 0, 25);
  v24[25] = 1;
  id v2 = v1;
  sub_2481394B4((uint64_t)&v21);

  id v3 = v1;
  id v4 = v1;
  char v5 = sub_248174B70();
  os_log_type_t v6 = sub_2481755D0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[118];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v21 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    v0[95] = v7;
    id v10 = v7;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    uint64_t v11 = sub_248175190();
    v0[96] = sub_247FB6D24(v11, v12, &v21);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v5, v6, "REJECTION: Incoming handshake request failed due to error: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v9, -1, -1);
    MEMORY[0x24C574E00](v8, -1, -1);
  }
  else
  {
    uint64_t v13 = (void *)v0[118];
  }
  uint64_t v14 = (void *)v0[118];
  uint64_t v15 = v0[104];
  swift_getErrorValue();
  uint64_t v16 = sub_248175DE0();
  uint64_t v18 = v17;

  *(_WORD *)uint64_t v15 = 0;
  *(void *)(v15 + 8) = v16;
  *(void *)(v15 + 16) = v18;
  *(_WORD *)(v15 + 24) = 256;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_OWORD *)(v15 + 48) = 0u;
  *(_OWORD *)(v15 + 64) = 0u;
  *(_OWORD *)(v15 + 80) = 0u;
  *(unsigned char *)(v15 + 96) = 0;
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t *CommandRouter.deinit()
{
  sub_247F982A0(v0[15], v0[16]);
  swift_bridgeObjectRelease();
  swift_release();
  sub_247F98D68(v0[28]);
  sub_247FF6B84(v0[30], v0[31], v0[32], v0[33], v0[34], v0[35]);
  sub_247FB33D4((uint64_t)v0 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter_handshakeContinuation, &qword_2692DBF10);
  swift_release();
  swift_release();
  sub_247FB33D4((uint64_t)v0 + OBJC_IVAR____TtC12AppleIDSetup13CommandRouter__activeTransport, &qword_2692DBE38);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CommandRouter.__deallocating_deinit()
{
  CommandRouter.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t CommandRouter.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24814070C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248140744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247FD79D0;
  id v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2692DBE80 + dword_2692DBE80);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_248140814(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247FD79D0;
  id v10 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t, int *))((char *)&dword_2692DBE98 + dword_2692DBE98);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_2481408E4()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_24814091C(uint64_t a1, uint64_t a2)
{
  os_log_type_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *os_log_type_t v6 = v3;
  v6[1] = sub_247FD79D0;
  return sub_248134068(a1, a2, v2);
}

uint64_t sub_2481409C8(uint64_t a1, uint64_t a2)
{
  os_log_type_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692DBEC0 + dword_2692DBEC0);
  return v8(a1, a2, v6);
}

uint64_t sub_248140A90()
{
  return sub_248134820();
}

uint64_t sub_248140A98(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79D0;
  return sub_2481349B8(a1, v1);
}

uint64_t sub_248140B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_248175940();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_248140C38, 0, 0);
}

uint64_t sub_248140C38()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_248175960();
  uint64_t v5 = sub_248141020(&qword_2692DBFD0, MEMORY[0x263F8F710]);
  sub_248175D90();
  sub_248141020(&qword_2692DBFD8, MEMORY[0x263F8F6D8]);
  sub_248175970();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_248140DD8;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_248140DD8()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  uint64_t v3 = *(void *)(*v1 + 88);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 120) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_248140F94, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_248140F94()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for CommandRouter.HandshakeFailure(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_2692DBF98);
}

uint64_t sub_248141020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24814106C()
{
  unint64_t result = qword_2692DBF18;
  if (!qword_2692DBF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBF18);
  }
  return result;
}

uint64_t sub_2481410C8()
{
  return type metadata accessor for CommandRouter(0);
}

uint64_t type metadata accessor for CommandRouter(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_2692DBF20);
}

void sub_2481410F0()
{
  sub_2481416F4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for CommandRouter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CommandRouter);
}

uint64_t dispatch thunk of CommandRouter.invalidationHandler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of CommandRouter.invalidationHandler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CommandRouter.invalidationHandler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CommandRouter.activeTransport.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of CommandRouter.__allocating_init(for:selfAccountId:accountIDsByService:signInPreflightHelper:v1CommandHandler:handshakeHandler:)()
{
  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of CommandRouter.onInvalidation(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of CommandRouter.keepAliveInterval(_:enforceLimit:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(*(void *)v4 + 416))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of CommandRouter.connectedDeviceInfo()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of CommandRouter.register<A>(_:ownedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 432)
                                                                   + **(int **)(*(void *)v4 + 432));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_247FD79D0;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CommandRouter.performHandshake(forKeepingAlive:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 440) + **(int **)(*(void *)v1 + 440));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FCB950;
  return v6(a1);
}

uint64_t dispatch thunk of CommandRouter.invalidate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 504))();
}

uint64_t dispatch thunk of CommandRouter.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v4 + 512)
                                                                   + **(int **)(*(void *)v4 + 512));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_247FD79D0;
  return v12(a1, a2, a3, a4);
}

void sub_2481416F4()
{
  if (!qword_2692DBF70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692DBE50);
    unint64_t v0 = sub_248175700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2692DBF70);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CommandRouter.Role(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24814181CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandRouter.Role()
{
  return &type metadata for CommandRouter.Role;
}

uint64_t *initializeBufferWithCopyOfBuffer for CommandRouter.Failure(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_2481748C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      uint64_t v11 = v7[11];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      type metadata accessor for V1Command(0);
      swift_bridgeObjectRetain();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v20 = *(void *)v13;
        uint64_t v21 = *((void *)v13 + 1);
        uint64_t v22 = *((void *)v13 + 2);
        char v23 = v13[24];
        sub_2480E4780(v20, v21, v22, v23);
        *(void *)uint64_t v12 = v20;
        *((void *)v12 + 1) = v21;
        *((void *)v12 + 2) = v22;
        v12[24] = v23;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for V1Command.Response(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v28 = *((void *)v13 + 1);
              *(void *)uint64_t v12 = *(void *)v13;
              *((void *)v12 + 1) = v28;
              uint64_t v29 = *((void *)v13 + 3);
              *((void *)v12 + 2) = *((void *)v13 + 2);
              *((void *)v12 + 3) = v29;
              uint64_t v30 = *((void *)v13 + 5);
              *((void *)v12 + 4) = *((void *)v13 + 4);
              *((void *)v12 + 5) = v30;
              uint64_t v31 = *((void *)v13 + 7);
              *((void *)v12 + 6) = *((void *)v13 + 6);
              *((void *)v12 + 7) = v31;
              uint64_t v32 = *((void *)v13 + 9);
              *((void *)v12 + 8) = *((void *)v13 + 8);
              *((void *)v12 + 9) = v32;
              uint64_t v33 = type metadata accessor for IdMSAccount();
              uint64_t v34 = *(int *)(v33 + 20);
              uint64_t v153 = &v12[v34];
              uint64_t v158 = v33;
              char v146 = &v13[v34];
              uint64_t v163 = v8;
              uint64_t v35 = sub_248174700();
              uint64_t v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v138(v153, v146, v35);
              uint64_t v36 = *(int *)(v158 + 24);
              long long v37 = &v12[v36];
              long long v38 = &v13[v36];
              uint64_t v39 = *((void *)v38 + 1);
              uint64_t v40 = *((void *)v38 + 2);
              uint64_t v41 = *((void *)v38 + 3);
              uint64_t v42 = *((void *)v38 + 4);
              uint64_t v43 = *((void *)v38 + 5);
              uint64_t v133 = *((void *)v38 + 6);
              uint64_t v139 = *(void *)v38;
              uint64_t v129 = *((void *)v38 + 7);
              uint64_t v147 = *((void *)v38 + 8);
              LOBYTE(v153) = v38[72];
              sub_247FABF8C(*(void *)v38, v39, v40, v41, v42, v43, v133, v129, v147, (char)v153);
              *(void *)long long v37 = v139;
              *((void *)v37 + 1) = v39;
              *((void *)v37 + 2) = v40;
              *((void *)v37 + 3) = v41;
              *((void *)v37 + 4) = v42;
              *((void *)v37 + 5) = v43;
              uint64_t v8 = v163;
              *((void *)v37 + 6) = v133;
              *((void *)v37 + 7) = v129;
              *((void *)v37 + 8) = v147;
              v37[72] = (char)v153;
              *(void *)&v12[*(int *)(v158 + 28)] = *(void *)&v13[*(int *)(v158 + 28)];
              uint64_t v44 = type metadata accessor for SignInCommand.Response(0);
              *(void *)&v12[*(int *)(v44 + 20)] = *(void *)&v13[*(int *)(v44 + 20)];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              break;
            case 2u:
              type metadata accessor for AnisetteCommand.Response();
              int v45 = swift_getEnumCaseMultiPayload();
              uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v45]);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v12, v13, v46);
              swift_storeEnumTagMultiPayload();
              break;
            case 3u:
              uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v12, v13, v47);
              break;
            case 4u:
              uint64_t v48 = *(void *)v13;
              uint64_t v49 = *((void *)v13 + 1);
              uint64_t v51 = *((void *)v13 + 2);
              unint64_t v50 = *((void *)v13 + 3);
              sub_247FF4F40(v48, v49, v51, v50);
              *(void *)uint64_t v12 = v48;
              *((void *)v12 + 1) = v49;
              *((void *)v12 + 2) = v51;
              *((void *)v12 + 3) = v50;
              break;
            default:
              *(_WORD *)uint64_t v12 = *(_WORD *)v13;
              uint64_t v15 = *((void *)v13 + 2);
              *((void *)v12 + 1) = *((void *)v13 + 1);
              *((void *)v12 + 2) = v15;
              *((_WORD *)v12 + 12) = *((_WORD *)v13 + 12);
              uint64_t v16 = *((void *)v13 + 5);
              swift_bridgeObjectRetain();
              if (v16)
              {
                *((void *)v12 + 4) = *((void *)v13 + 4);
                *((void *)v12 + 5) = v16;
                uint64_t v17 = *((void *)v13 + 7);
                *((void *)v12 + 6) = *((void *)v13 + 6);
                *((void *)v12 + 7) = v17;
                uint64_t v18 = *((void *)v13 + 9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v18)
                {
                  *((void *)v12 + 8) = *((void *)v13 + 8);
                  *((void *)v12 + 9) = v18;
                  uint64_t v19 = *((void *)v13 + 11);
                  *((void *)v12 + 10) = *((void *)v13 + 10);
                  *((void *)v12 + 11) = v19;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v117 = *((_OWORD *)v13 + 5);
                  *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
                  *((_OWORD *)v12 + 5) = v117;
                }
                v12[96] = v13[96];
              }
              else
              {
                long long v111 = *((_OWORD *)v13 + 5);
                *((_OWORD *)v12 + 4) = *((_OWORD *)v13 + 4);
                *((_OWORD *)v12 + 5) = v111;
                v12[96] = v13[96];
                long long v112 = *((_OWORD *)v13 + 3);
                *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
                *((_OWORD *)v12 + 3) = v112;
              }
              break;
          }
        }
        else
        {
          type metadata accessor for V1Command.Request(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v164 = v8;
              uint64_t v52 = *((void *)v13 + 1);
              *(void *)uint64_t v12 = *(void *)v13;
              *((void *)v12 + 1) = v52;
              uint64_t v53 = *((void *)v13 + 3);
              *((void *)v12 + 2) = *((void *)v13 + 2);
              *((void *)v12 + 3) = v53;
              uint64_t v54 = *((void *)v13 + 5);
              *((void *)v12 + 4) = *((void *)v13 + 4);
              *((void *)v12 + 5) = v54;
              uint64_t v55 = *((void *)v13 + 7);
              *((void *)v12 + 6) = *((void *)v13 + 6);
              *((void *)v12 + 7) = v55;
              uint64_t v56 = *((void *)v13 + 9);
              *((void *)v12 + 8) = *((void *)v13 + 8);
              *((void *)v12 + 9) = v56;
              uint64_t v57 = type metadata accessor for IdMSAccount();
              uint64_t v58 = *(int *)(v57 + 20);
              uint64_t v159 = v57;
              uint64_t v140 = &v13[v58];
              uint64_t v148 = &v12[v58];
              uint64_t v59 = sub_248174700();
              uint64_t v134 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v134(v148, v140, v59);
              uint64_t v60 = *(int *)(v57 + 24);
              uint64_t v61 = &v12[v60];
              uint64_t v62 = &v13[v60];
              uint64_t v63 = *((void *)v62 + 1);
              uint64_t v64 = *((void *)v62 + 2);
              uint64_t v65 = *((void *)v62 + 3);
              uint64_t v67 = *((void *)v62 + 4);
              uint64_t v66 = *((void *)v62 + 5);
              uint64_t v135 = *((void *)v62 + 6);
              uint64_t v141 = *(void *)v62;
              uint64_t v130 = *((void *)v62 + 7);
              uint64_t v149 = *((void *)v62 + 8);
              char v154 = v62[72];
              sub_247FABF8C(*(void *)v62, v63, v64, v65, v67, v66, v135, v130, v149, v154);
              *(void *)uint64_t v61 = v141;
              *((void *)v61 + 1) = v63;
              *((void *)v61 + 2) = v64;
              *((void *)v61 + 3) = v65;
              *((void *)v61 + 4) = v67;
              *((void *)v61 + 5) = v66;
              *((void *)v61 + 6) = v135;
              *((void *)v61 + 7) = v130;
              *((void *)v61 + 8) = v149;
              v61[72] = v154;
              *(void *)&v12[*(int *)(v159 + 28)] = *(void *)&v13[*(int *)(v159 + 28)];
              uint64_t v160 = (int *)type metadata accessor for SignInCommand.Request(0);
              uint64_t v68 = v160[5];
              uint64_t v69 = &v12[v68];
              uint64_t v70 = &v13[v68];
              uint64_t v71 = *((void *)v70 + 1);
              *(void *)uint64_t v69 = *(void *)v70;
              *((void *)v69 + 1) = v71;
              uint64_t v72 = *((void *)v70 + 3);
              *((void *)v69 + 2) = *((void *)v70 + 2);
              *((void *)v69 + 3) = v72;
              uint64_t v73 = *((void *)v70 + 5);
              *((void *)v69 + 4) = *((void *)v70 + 4);
              *((void *)v69 + 5) = v73;
              uint64_t v74 = *((void *)v70 + 7);
              *((void *)v69 + 6) = *((void *)v70 + 6);
              *((void *)v69 + 7) = v74;
              uint64_t v75 = *((void *)v70 + 9);
              *((void *)v69 + 8) = *((void *)v70 + 8);
              *((void *)v69 + 9) = v75;
              unint64_t v155 = (uint64_t *)(v70 + 80);
              unint64_t v142 = *((void *)v70 + 11);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v142 >> 60 == 15)
              {
                *((_OWORD *)v69 + 5) = *(_OWORD *)v155;
              }
              else
              {
                uint64_t v110 = *v155;
                sub_247FB6C20(*v155, v142);
                *((void *)v69 + 10) = v110;
                *((void *)v69 + 11) = v142;
              }
              uint64_t v8 = v164;
              v12[v160[6]] = v13[v160[6]];
              v12[v160[7]] = v13[v160[7]];
              break;
            case 2u:
              uint64_t v76 = *(void *)v13;
              unint64_t v77 = *((void *)v13 + 1);
              uint64_t v165 = v8;
              uint64_t v78 = *((void *)v13 + 2);
              unint64_t v79 = *((void *)v13 + 3);
              char v80 = v13[32];
              sub_2480E684C(v76, v77, v78, v79, v80);
              *(void *)uint64_t v12 = v76;
              *((void *)v12 + 1) = v77;
              *((void *)v12 + 2) = v78;
              *((void *)v12 + 3) = v79;
              uint64_t v8 = v165;
              v12[32] = v80;
              break;
            case 3u:
              uint64_t v166 = v8;
              uint64_t v81 = *((void *)v13 + 1);
              *(void *)uint64_t v12 = *(void *)v13;
              *((void *)v12 + 1) = v81;
              uint64_t v82 = *((void *)v13 + 3);
              *((void *)v12 + 2) = *((void *)v13 + 2);
              *((void *)v12 + 3) = v82;
              uint64_t v83 = *((void *)v13 + 5);
              *((void *)v12 + 4) = *((void *)v13 + 4);
              *((void *)v12 + 5) = v83;
              uint64_t v84 = *((void *)v13 + 7);
              *((void *)v12 + 6) = *((void *)v13 + 6);
              *((void *)v12 + 7) = v84;
              uint64_t v85 = *((void *)v13 + 9);
              *((void *)v12 + 8) = *((void *)v13 + 8);
              *((void *)v12 + 9) = v85;
              uint64_t v86 = type metadata accessor for IdMSAccount();
              uint64_t v87 = *(int *)(v86 + 20);
              long long v156 = &v12[v87];
              uint64_t v161 = v86;
              uint64_t v150 = &v13[v87];
              uint64_t v88 = sub_248174700();
              char v143 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v143(v156, v150, v88);
              uint64_t v89 = *(int *)(v161 + 24);
              uint64_t v90 = &v12[v89];
              long long v91 = &v13[v89];
              uint64_t v92 = *((void *)v91 + 1);
              uint64_t v93 = *((void *)v91 + 2);
              uint64_t v94 = *((void *)v91 + 3);
              uint64_t v95 = *((void *)v91 + 4);
              uint64_t v96 = *((void *)v91 + 5);
              uint64_t v136 = *((void *)v91 + 6);
              uint64_t v144 = *(void *)v91;
              uint64_t v131 = *((void *)v91 + 7);
              uint64_t v151 = *((void *)v91 + 8);
              LOBYTE(v156) = v91[72];
              sub_247FABF8C(*(void *)v91, v92, v93, v94, v95, v96, v136, v131, v151, (char)v156);
              *(void *)uint64_t v90 = v144;
              *((void *)v90 + 1) = v92;
              *((void *)v90 + 2) = v93;
              *((void *)v90 + 3) = v94;
              *((void *)v90 + 4) = v95;
              *((void *)v90 + 5) = v96;
              *((void *)v90 + 6) = v136;
              *((void *)v90 + 7) = v131;
              *((void *)v90 + 8) = v151;
              v90[72] = (char)v156;
              *(void *)&v12[*(int *)(v161 + 28)] = *(void *)&v13[*(int *)(v161 + 28)];
              uint64_t v97 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
              uint64_t v98 = &v12[v97];
              uint64_t v99 = &v13[v97];
              uint64_t v100 = *(void *)&v13[v97 + 8];
              swift_bridgeObjectRetain();
              if (v100)
              {
                *(void *)uint64_t v98 = *(void *)v99;
                *((void *)v98 + 1) = v100;
                uint64_t v101 = *((void *)v99 + 3);
                *((void *)v98 + 2) = *((void *)v99 + 2);
                *((void *)v98 + 3) = v101;
                uint64_t v102 = *((void *)v99 + 5);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v102)
                {
                  *((void *)v98 + 4) = *((void *)v99 + 4);
                  *((void *)v98 + 5) = v102;
                  uint64_t v103 = *((void *)v99 + 7);
                  *((void *)v98 + 6) = *((void *)v99 + 6);
                  *((void *)v98 + 7) = v103;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v118 = *((_OWORD *)v99 + 3);
                  *((_OWORD *)v98 + 2) = *((_OWORD *)v99 + 2);
                  *((_OWORD *)v98 + 3) = v118;
                }
                v98[64] = v99[64];
                uint64_t v8 = v166;
              }
              else
              {
                long long v115 = *((_OWORD *)v99 + 3);
                *((_OWORD *)v98 + 2) = *((_OWORD *)v99 + 2);
                *((_OWORD *)v98 + 3) = v115;
                v98[64] = v99[64];
                long long v116 = *((_OWORD *)v99 + 1);
                *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
                *((_OWORD *)v98 + 1) = v116;
                uint64_t v8 = v166;
              }
              break;
            case 4u:
              uint64_t v132 = *((void *)v13 + 1);
              uint64_t v104 = *((void *)v13 + 3);
              uint64_t v167 = v8;
              uint64_t v105 = *((void *)v13 + 5);
              uint64_t v106 = *((void *)v13 + 6);
              uint64_t v137 = *((void *)v13 + 7);
              uint64_t v145 = *((void *)v13 + 8);
              uint64_t v152 = *((void *)v13 + 9);
              unint64_t v157 = *((void *)v13 + 10);
              unsigned __int8 v162 = v13[88];
              uint64_t v107 = *(void *)v13;
              uint64_t v108 = *((void *)v13 + 2);
              uint64_t v109 = *((void *)v13 + 4);
              sub_247FF49AC(*(void *)v13, v132, v108, v104, v109, v105, v106, v137, v145, v152, v157, v162);
              *(void *)uint64_t v12 = v107;
              *((void *)v12 + 1) = v132;
              *((void *)v12 + 2) = v108;
              *((void *)v12 + 3) = v104;
              uint64_t v8 = v167;
              *((void *)v12 + 4) = v109;
              *((void *)v12 + 5) = v105;
              *((void *)v12 + 6) = v106;
              *((void *)v12 + 7) = v137;
              *((void *)v12 + 8) = v145;
              *((void *)v12 + 9) = v152;
              *((void *)v12 + 10) = v157;
              v12[88] = v162;
              break;
            default:
              *uint64_t v12 = *v13;
              *(_WORD *)(v12 + 1) = *(_WORD *)(v13 + 1);
              uint64_t v24 = *((void *)v13 + 2);
              if (v24)
              {
                *((void *)v12 + 1) = *((void *)v13 + 1);
                *((void *)v12 + 2) = v24;
                uint64_t v25 = *((void *)v13 + 4);
                *((void *)v12 + 3) = *((void *)v13 + 3);
                *((void *)v12 + 4) = v25;
                uint64_t v26 = *((void *)v13 + 6);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v26)
                {
                  *((void *)v12 + 5) = *((void *)v13 + 5);
                  *((void *)v12 + 6) = v26;
                  uint64_t v27 = *((void *)v13 + 8);
                  *((void *)v12 + 7) = *((void *)v13 + 7);
                  *((void *)v12 + 8) = v27;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v119 = *(_OWORD *)(v13 + 56);
                  *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
                  *(_OWORD *)(v12 + 56) = v119;
                }
                v12[72] = v13[72];
              }
              else
              {
                long long v113 = *(_OWORD *)(v13 + 56);
                *(_OWORD *)(v12 + 40) = *(_OWORD *)(v13 + 40);
                *(_OWORD *)(v12 + 56) = v113;
                v12[72] = v13[72];
                long long v114 = *(_OWORD *)(v13 + 24);
                *(_OWORD *)(v12 + 8) = *(_OWORD *)(v13 + 8);
                *(_OWORD *)(v12 + 24) = v114;
              }
              uint64_t v120 = *((void *)v13 + 11);
              if (v120)
              {
                *((void *)v12 + 10) = *((void *)v13 + 10);
                *((void *)v12 + 11) = v120;
                uint64_t v121 = *((void *)v13 + 13);
                *((void *)v12 + 12) = *((void *)v13 + 12);
                *((void *)v12 + 13) = v121;
                uint64_t v122 = *((void *)v13 + 15);
                *((void *)v12 + 14) = *((void *)v13 + 14);
                *((void *)v12 + 15) = v122;
                uint64_t v123 = *((void *)v13 + 17);
                *((void *)v12 + 16) = *((void *)v13 + 16);
                *((void *)v12 + 17) = v123;
                uint64_t v124 = v8;
                uint64_t v125 = *((void *)v13 + 19);
                *((void *)v12 + 18) = *((void *)v13 + 18);
                *((void *)v12 + 19) = v125;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v8 = v124;
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v126 = *((_OWORD *)v13 + 8);
                *((_OWORD *)v12 + 7) = *((_OWORD *)v13 + 7);
                *((_OWORD *)v12 + 8) = v126;
                *((_OWORD *)v12 + 9) = *((_OWORD *)v13 + 9);
                long long v127 = *((_OWORD *)v13 + 6);
                *((_OWORD *)v12 + 5) = *((_OWORD *)v13 + 5);
                *((_OWORD *)v12 + 6) = v127;
              }
              *((void *)v12 + 20) = *((void *)v13 + 20);
              swift_bridgeObjectRetain();
              break;
          }
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

void destroy for CommandRouter.Failure(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 4, v2))
  {
    uint64_t v3 = sub_2481748C0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(v2 + 44);
    type metadata accessor for V1Command(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v6 = *(void *)v4;
        uint64_t v7 = *(void *)(v4 + 8);
        uint64_t v8 = *(void *)(v4 + 16);
        char v9 = *(unsigned char *)(v4 + 24);
        sub_2480E47A0(v6, v7, v8, v9);
        break;
      case 1:
        type metadata accessor for V1Command.Response(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            if (*(void *)(v4 + 40))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v4 + 72))
              {
LABEL_37:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
            }
            break;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v15 = type metadata accessor for IdMSAccount();
            uint64_t v16 = v4 + *(int *)(v15 + 20);
            uint64_t v17 = sub_248174700();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
            uint64_t v18 = v4 + *(int *)(v15 + 24);
            sub_247FAC1EC(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(void *)(v18 + 64), *(unsigned char *)(v18 + 72));
            swift_bridgeObjectRelease();
            type metadata accessor for SignInCommand.Response(0);
LABEL_38:
            swift_bridgeObjectRelease();
            break;
          case 2u:
            type metadata accessor for AnisetteCommand.Response();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
                uint64_t v19 = &qword_2692D7490;
                goto LABEL_43;
              case 3u:
              case 4u:
                uint64_t v19 = &qword_2692DA968;
                goto LABEL_43;
              case 5u:
                uint64_t v19 = &qword_2692DA970;
                goto LABEL_43;
              default:
                return;
            }
          case 3u:
            uint64_t v19 = &qword_2692D6DA8;
LABEL_43:
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(v19);
            long long v37 = *(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8);
            v37(v4, v36);
            break;
          case 4u:
            uint64_t v20 = *(void *)v4;
            uint64_t v21 = *(void *)(v4 + 8);
            uint64_t v22 = *(void *)(v4 + 16);
            unint64_t v23 = *(void *)(v4 + 24);
            sub_247FF40F8(v20, v21, v22, v23);
            break;
          default:
            return;
        }
        break;
      case 0:
        type metadata accessor for V1Command.Request(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            if (*(void *)(v4 + 16))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v4 + 48))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
            if (*(void *)(v4 + 88))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            goto LABEL_38;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v24 = type metadata accessor for IdMSAccount();
            uint64_t v25 = v4 + *(int *)(v24 + 20);
            uint64_t v26 = sub_248174700();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
            uint64_t v27 = v4 + *(int *)(v24 + 24);
            sub_247FAC1EC(*(void *)v27, *(void *)(v27 + 8), *(void *)(v27 + 16), *(void *)(v27 + 24), *(void *)(v27 + 32), *(void *)(v27 + 40), *(void *)(v27 + 48), *(void *)(v27 + 56), *(void *)(v27 + 64), *(unsigned char *)(v27 + 72));
            swift_bridgeObjectRelease();
            uint64_t v28 = v4 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v29 = *(void *)(v28 + 88);
            if (v29 >> 60 != 15)
            {
              uint64_t v30 = *(void *)(v28 + 80);
              sub_247FB6CCC(v30, v29);
            }
            break;
          case 2u:
            uint64_t v10 = *(void *)v4;
            unint64_t v11 = *(void *)(v4 + 8);
            uint64_t v12 = *(void *)(v4 + 16);
            unint64_t v13 = *(void *)(v4 + 24);
            char v14 = *(unsigned char *)(v4 + 32);
            sub_2480E32D8(v10, v11, v12, v13, v14);
            break;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v31 = type metadata accessor for IdMSAccount();
            uint64_t v32 = v4 + *(int *)(v31 + 20);
            uint64_t v33 = sub_248174700();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
            uint64_t v34 = v4 + *(int *)(v31 + 24);
            sub_247FAC1EC(*(void *)v34, *(void *)(v34 + 8), *(void *)(v34 + 16), *(void *)(v34 + 24), *(void *)(v34 + 32), *(void *)(v34 + 40), *(void *)(v34 + 48), *(void *)(v34 + 56), *(void *)(v34 + 64), *(unsigned char *)(v34 + 72));
            swift_bridgeObjectRelease();
            uint64_t v35 = v4 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
            if (*(void *)(v35 + 8))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v35 + 40)) {
                goto LABEL_37;
              }
            }
            break;
          case 4u:
            sub_247FF4AC0(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), *(unsigned char *)(v4 + 88));
            break;
          default:
            return;
        }
        break;
    }
  }
}

char *initializeWithCopy for CommandRouter.Failure(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_2481748C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    a1[v6[9]] = a2[v6[9]];
    *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
    uint64_t v9 = v6[11];
    uint64_t v10 = &a1[v9];
    unint64_t v11 = &a2[v9];
    type metadata accessor for V1Command(0);
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = *(void *)v11;
      uint64_t v19 = *((void *)v11 + 1);
      uint64_t v20 = *((void *)v11 + 2);
      char v21 = v11[24];
      sub_2480E4780(v18, v19, v20, v21);
      *(void *)uint64_t v10 = v18;
      *((void *)v10 + 1) = v19;
      *((void *)v10 + 2) = v20;
      unsigned char v10[24] = v21;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        type metadata accessor for V1Command.Response(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v26 = *((void *)v11 + 1);
            *(void *)uint64_t v10 = *(void *)v11;
            *((void *)v10 + 1) = v26;
            uint64_t v27 = *((void *)v11 + 3);
            *((void *)v10 + 2) = *((void *)v11 + 2);
            *((void *)v10 + 3) = v27;
            uint64_t v28 = *((void *)v11 + 5);
            *((void *)v10 + 4) = *((void *)v11 + 4);
            *((void *)v10 + 5) = v28;
            uint64_t v29 = *((void *)v11 + 7);
            *((void *)v10 + 6) = *((void *)v11 + 6);
            *((void *)v10 + 7) = v29;
            uint64_t v30 = *((void *)v11 + 9);
            *((void *)v10 + 8) = *((void *)v11 + 8);
            *((void *)v10 + 9) = v30;
            uint64_t v31 = type metadata accessor for IdMSAccount();
            uint64_t v32 = *(int *)(v31 + 20);
            uint64_t v151 = &v10[v32];
            uint64_t v156 = v31;
            uint64_t v144 = &v11[v32];
            uint64_t v161 = v7;
            uint64_t v33 = sub_248174700();
            uint64_t v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v136(v151, v144, v33);
            uint64_t v34 = *(int *)(v156 + 24);
            uint64_t v35 = &v10[v34];
            uint64_t v36 = &v11[v34];
            uint64_t v37 = *((void *)v36 + 1);
            uint64_t v38 = *((void *)v36 + 2);
            uint64_t v39 = *((void *)v36 + 3);
            uint64_t v40 = *((void *)v36 + 4);
            uint64_t v41 = *((void *)v36 + 5);
            uint64_t v131 = *((void *)v36 + 6);
            uint64_t v137 = *(void *)v36;
            uint64_t v127 = *((void *)v36 + 7);
            uint64_t v145 = *((void *)v36 + 8);
            LOBYTE(v151) = v36[72];
            sub_247FABF8C(*(void *)v36, v37, v38, v39, v40, v41, v131, v127, v145, (char)v151);
            *(void *)uint64_t v35 = v137;
            *((void *)v35 + 1) = v37;
            *((void *)v35 + 2) = v38;
            *((void *)v35 + 3) = v39;
            *((void *)v35 + 4) = v40;
            *((void *)v35 + 5) = v41;
            uint64_t v7 = v161;
            *((void *)v35 + 6) = v131;
            *((void *)v35 + 7) = v127;
            *((void *)v35 + 8) = v145;
            v35[72] = (char)v151;
            *(void *)&v10[*(int *)(v156 + 28)] = *(void *)&v11[*(int *)(v156 + 28)];
            uint64_t v42 = type metadata accessor for SignInCommand.Response(0);
            *(void *)&v10[*(int *)(v42 + 20)] = *(void *)&v11[*(int *)(v42 + 20)];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 2u:
            type metadata accessor for AnisetteCommand.Response();
            int v43 = swift_getEnumCaseMultiPayload();
            uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v43]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v10, v11, v44);
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v10, v11, v45);
            break;
          case 4u:
            uint64_t v46 = *(void *)v11;
            uint64_t v47 = *((void *)v11 + 1);
            uint64_t v49 = *((void *)v11 + 2);
            unint64_t v48 = *((void *)v11 + 3);
            sub_247FF4F40(v46, v47, v49, v48);
            *(void *)uint64_t v10 = v46;
            *((void *)v10 + 1) = v47;
            *((void *)v10 + 2) = v49;
            *((void *)v10 + 3) = v48;
            break;
          default:
            *(_WORD *)uint64_t v10 = *(_WORD *)v11;
            uint64_t v13 = *((void *)v11 + 2);
            *((void *)v10 + 1) = *((void *)v11 + 1);
            *((void *)v10 + 2) = v13;
            *((_WORD *)v10 + 12) = *((_WORD *)v11 + 12);
            uint64_t v14 = *((void *)v11 + 5);
            swift_bridgeObjectRetain();
            if (v14)
            {
              *((void *)v10 + 4) = *((void *)v11 + 4);
              *((void *)v10 + 5) = v14;
              uint64_t v15 = *((void *)v11 + 7);
              *((void *)v10 + 6) = *((void *)v11 + 6);
              *((void *)v10 + 7) = v15;
              uint64_t v16 = *((void *)v11 + 9);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v16)
              {
                *((void *)v10 + 8) = *((void *)v11 + 8);
                *((void *)v10 + 9) = v16;
                uint64_t v17 = *((void *)v11 + 11);
                *((void *)v10 + 10) = *((void *)v11 + 10);
                *((void *)v10 + 11) = v17;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v115 = *((_OWORD *)v11 + 5);
                *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
                *((_OWORD *)v10 + 5) = v115;
              }
              v10[96] = v11[96];
            }
            else
            {
              long long v109 = *((_OWORD *)v11 + 5);
              *((_OWORD *)v10 + 4) = *((_OWORD *)v11 + 4);
              *((_OWORD *)v10 + 5) = v109;
              v10[96] = v11[96];
              long long v110 = *((_OWORD *)v11 + 3);
              *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
              *((_OWORD *)v10 + 3) = v110;
            }
            break;
        }
      }
      else
      {
        type metadata accessor for V1Command.Request(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v162 = v7;
            uint64_t v50 = *((void *)v11 + 1);
            *(void *)uint64_t v10 = *(void *)v11;
            *((void *)v10 + 1) = v50;
            uint64_t v51 = *((void *)v11 + 3);
            *((void *)v10 + 2) = *((void *)v11 + 2);
            *((void *)v10 + 3) = v51;
            uint64_t v52 = *((void *)v11 + 5);
            *((void *)v10 + 4) = *((void *)v11 + 4);
            *((void *)v10 + 5) = v52;
            uint64_t v53 = *((void *)v11 + 7);
            *((void *)v10 + 6) = *((void *)v11 + 6);
            *((void *)v10 + 7) = v53;
            uint64_t v54 = *((void *)v11 + 9);
            *((void *)v10 + 8) = *((void *)v11 + 8);
            *((void *)v10 + 9) = v54;
            uint64_t v55 = type metadata accessor for IdMSAccount();
            uint64_t v56 = *(int *)(v55 + 20);
            uint64_t v157 = v55;
            uint64_t v138 = &v11[v56];
            char v146 = &v10[v56];
            uint64_t v57 = sub_248174700();
            uint64_t v132 = *(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v132(v146, v138, v57);
            uint64_t v58 = *(int *)(v55 + 24);
            uint64_t v59 = &v10[v58];
            uint64_t v60 = &v11[v58];
            uint64_t v61 = *((void *)v60 + 1);
            uint64_t v62 = *((void *)v60 + 2);
            uint64_t v63 = *((void *)v60 + 3);
            uint64_t v65 = *((void *)v60 + 4);
            uint64_t v64 = *((void *)v60 + 5);
            uint64_t v133 = *((void *)v60 + 6);
            uint64_t v139 = *(void *)v60;
            uint64_t v128 = *((void *)v60 + 7);
            uint64_t v147 = *((void *)v60 + 8);
            char v152 = v60[72];
            sub_247FABF8C(*(void *)v60, v61, v62, v63, v65, v64, v133, v128, v147, v152);
            *(void *)uint64_t v59 = v139;
            *((void *)v59 + 1) = v61;
            *((void *)v59 + 2) = v62;
            *((void *)v59 + 3) = v63;
            *((void *)v59 + 4) = v65;
            *((void *)v59 + 5) = v64;
            *((void *)v59 + 6) = v133;
            *((void *)v59 + 7) = v128;
            *((void *)v59 + 8) = v147;
            v59[72] = v152;
            *(void *)&v10[*(int *)(v157 + 28)] = *(void *)&v11[*(int *)(v157 + 28)];
            uint64_t v158 = (int *)type metadata accessor for SignInCommand.Request(0);
            uint64_t v66 = v158[5];
            uint64_t v67 = &v10[v66];
            uint64_t v68 = &v11[v66];
            uint64_t v69 = *((void *)v68 + 1);
            *(void *)uint64_t v67 = *(void *)v68;
            *((void *)v67 + 1) = v69;
            uint64_t v70 = *((void *)v68 + 3);
            *((void *)v67 + 2) = *((void *)v68 + 2);
            *((void *)v67 + 3) = v70;
            uint64_t v71 = *((void *)v68 + 5);
            *((void *)v67 + 4) = *((void *)v68 + 4);
            *((void *)v67 + 5) = v71;
            uint64_t v72 = *((void *)v68 + 7);
            *((void *)v67 + 6) = *((void *)v68 + 6);
            *((void *)v67 + 7) = v72;
            uint64_t v73 = *((void *)v68 + 9);
            *((void *)v67 + 8) = *((void *)v68 + 8);
            *((void *)v67 + 9) = v73;
            uint64_t v153 = (uint64_t *)(v68 + 80);
            unint64_t v140 = *((void *)v68 + 11);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v140 >> 60 == 15)
            {
              *((_OWORD *)v67 + 5) = *(_OWORD *)v153;
            }
            else
            {
              uint64_t v108 = *v153;
              sub_247FB6C20(*v153, v140);
              *((void *)v67 + 10) = v108;
              *((void *)v67 + 11) = v140;
            }
            uint64_t v7 = v162;
            v10[v158[6]] = v11[v158[6]];
            v10[v158[7]] = v11[v158[7]];
            break;
          case 2u:
            uint64_t v74 = *(void *)v11;
            unint64_t v75 = *((void *)v11 + 1);
            uint64_t v163 = v7;
            uint64_t v76 = *((void *)v11 + 2);
            unint64_t v77 = *((void *)v11 + 3);
            char v78 = v11[32];
            sub_2480E684C(v74, v75, v76, v77, v78);
            *(void *)uint64_t v10 = v74;
            *((void *)v10 + 1) = v75;
            *((void *)v10 + 2) = v76;
            *((void *)v10 + 3) = v77;
            uint64_t v7 = v163;
            v10[32] = v78;
            break;
          case 3u:
            uint64_t v164 = v7;
            uint64_t v79 = *((void *)v11 + 1);
            *(void *)uint64_t v10 = *(void *)v11;
            *((void *)v10 + 1) = v79;
            uint64_t v80 = *((void *)v11 + 3);
            *((void *)v10 + 2) = *((void *)v11 + 2);
            *((void *)v10 + 3) = v80;
            uint64_t v81 = *((void *)v11 + 5);
            *((void *)v10 + 4) = *((void *)v11 + 4);
            *((void *)v10 + 5) = v81;
            uint64_t v82 = *((void *)v11 + 7);
            *((void *)v10 + 6) = *((void *)v11 + 6);
            *((void *)v10 + 7) = v82;
            uint64_t v83 = *((void *)v11 + 9);
            *((void *)v10 + 8) = *((void *)v11 + 8);
            *((void *)v10 + 9) = v83;
            uint64_t v84 = type metadata accessor for IdMSAccount();
            uint64_t v85 = *(int *)(v84 + 20);
            char v154 = &v10[v85];
            uint64_t v159 = v84;
            uint64_t v148 = &v11[v85];
            uint64_t v86 = sub_248174700();
            uint64_t v141 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v141(v154, v148, v86);
            uint64_t v87 = *(int *)(v159 + 24);
            uint64_t v88 = &v10[v87];
            uint64_t v89 = &v11[v87];
            uint64_t v90 = *((void *)v89 + 1);
            uint64_t v91 = *((void *)v89 + 2);
            uint64_t v92 = *((void *)v89 + 3);
            uint64_t v93 = *((void *)v89 + 4);
            uint64_t v94 = *((void *)v89 + 5);
            uint64_t v134 = *((void *)v89 + 6);
            uint64_t v142 = *(void *)v89;
            uint64_t v129 = *((void *)v89 + 7);
            uint64_t v149 = *((void *)v89 + 8);
            LOBYTE(v154) = v89[72];
            sub_247FABF8C(*(void *)v89, v90, v91, v92, v93, v94, v134, v129, v149, (char)v154);
            *(void *)uint64_t v88 = v142;
            *((void *)v88 + 1) = v90;
            *((void *)v88 + 2) = v91;
            *((void *)v88 + 3) = v92;
            *((void *)v88 + 4) = v93;
            *((void *)v88 + 5) = v94;
            *((void *)v88 + 6) = v134;
            *((void *)v88 + 7) = v129;
            *((void *)v88 + 8) = v149;
            v88[72] = (char)v154;
            *(void *)&v10[*(int *)(v159 + 28)] = *(void *)&v11[*(int *)(v159 + 28)];
            uint64_t v95 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
            uint64_t v96 = &v10[v95];
            uint64_t v97 = &v11[v95];
            uint64_t v98 = *(void *)&v11[v95 + 8];
            swift_bridgeObjectRetain();
            if (v98)
            {
              *(void *)uint64_t v96 = *(void *)v97;
              *((void *)v96 + 1) = v98;
              uint64_t v99 = *((void *)v97 + 3);
              *((void *)v96 + 2) = *((void *)v97 + 2);
              *((void *)v96 + 3) = v99;
              uint64_t v100 = *((void *)v97 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v100)
              {
                *((void *)v96 + 4) = *((void *)v97 + 4);
                *((void *)v96 + 5) = v100;
                uint64_t v101 = *((void *)v97 + 7);
                *((void *)v96 + 6) = *((void *)v97 + 6);
                *((void *)v96 + 7) = v101;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v125 = *((_OWORD *)v97 + 3);
                *((_OWORD *)v96 + 2) = *((_OWORD *)v97 + 2);
                *((_OWORD *)v96 + 3) = v125;
              }
              v96[64] = v97[64];
              uint64_t v7 = v164;
            }
            else
            {
              long long v113 = *((_OWORD *)v97 + 3);
              *((_OWORD *)v96 + 2) = *((_OWORD *)v97 + 2);
              *((_OWORD *)v96 + 3) = v113;
              v96[64] = v97[64];
              long long v114 = *((_OWORD *)v97 + 1);
              *(_OWORD *)uint64_t v96 = *(_OWORD *)v97;
              *((_OWORD *)v96 + 1) = v114;
              uint64_t v7 = v164;
            }
            break;
          case 4u:
            uint64_t v130 = *((void *)v11 + 1);
            uint64_t v102 = *((void *)v11 + 3);
            uint64_t v165 = v7;
            uint64_t v103 = *((void *)v11 + 5);
            uint64_t v104 = *((void *)v11 + 6);
            uint64_t v135 = *((void *)v11 + 7);
            uint64_t v143 = *((void *)v11 + 8);
            uint64_t v150 = *((void *)v11 + 9);
            unint64_t v155 = *((void *)v11 + 10);
            unsigned __int8 v160 = v11[88];
            uint64_t v105 = *(void *)v11;
            uint64_t v106 = *((void *)v11 + 2);
            uint64_t v107 = *((void *)v11 + 4);
            sub_247FF49AC(*(void *)v11, v130, v106, v102, v107, v103, v104, v135, v143, v150, v155, v160);
            *(void *)uint64_t v10 = v105;
            *((void *)v10 + 1) = v130;
            *((void *)v10 + 2) = v106;
            *((void *)v10 + 3) = v102;
            uint64_t v7 = v165;
            *((void *)v10 + 4) = v107;
            *((void *)v10 + 5) = v103;
            *((void *)v10 + 6) = v104;
            *((void *)v10 + 7) = v135;
            *((void *)v10 + 8) = v143;
            *((void *)v10 + 9) = v150;
            *((void *)v10 + 10) = v155;
            v10[88] = v160;
            break;
          default:
            *uint64_t v10 = *v11;
            *(_WORD *)(v10 + 1) = *(_WORD *)(v11 + 1);
            uint64_t v22 = *((void *)v11 + 2);
            if (v22)
            {
              *((void *)v10 + 1) = *((void *)v11 + 1);
              *((void *)v10 + 2) = v22;
              uint64_t v23 = *((void *)v11 + 4);
              *((void *)v10 + 3) = *((void *)v11 + 3);
              *((void *)v10 + 4) = v23;
              uint64_t v24 = *((void *)v11 + 6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v24)
              {
                *((void *)v10 + 5) = *((void *)v11 + 5);
                *((void *)v10 + 6) = v24;
                uint64_t v25 = *((void *)v11 + 8);
                *((void *)v10 + 7) = *((void *)v11 + 7);
                *((void *)v10 + 8) = v25;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v116 = *(_OWORD *)(v11 + 56);
                *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
                *(_OWORD *)(v10 + 56) = v116;
              }
              v10[72] = v11[72];
            }
            else
            {
              long long v111 = *(_OWORD *)(v11 + 56);
              *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
              *(_OWORD *)(v10 + 56) = v111;
              v10[72] = v11[72];
              long long v112 = *(_OWORD *)(v11 + 24);
              *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
              *(_OWORD *)(v10 + 24) = v112;
            }
            uint64_t v117 = *((void *)v11 + 11);
            if (v117)
            {
              *((void *)v10 + 10) = *((void *)v11 + 10);
              *((void *)v10 + 11) = v117;
              uint64_t v118 = *((void *)v11 + 13);
              *((void *)v10 + 12) = *((void *)v11 + 12);
              *((void *)v10 + 13) = v118;
              uint64_t v119 = *((void *)v11 + 15);
              *((void *)v10 + 14) = *((void *)v11 + 14);
              *((void *)v10 + 15) = v119;
              uint64_t v120 = *((void *)v11 + 17);
              *((void *)v10 + 16) = *((void *)v11 + 16);
              *((void *)v10 + 17) = v120;
              uint64_t v121 = v7;
              uint64_t v122 = *((void *)v11 + 19);
              *((void *)v10 + 18) = *((void *)v11 + 18);
              *((void *)v10 + 19) = v122;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v7 = v121;
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v123 = *((_OWORD *)v11 + 8);
              *((_OWORD *)v10 + 7) = *((_OWORD *)v11 + 7);
              *((_OWORD *)v10 + 8) = v123;
              *((_OWORD *)v10 + 9) = *((_OWORD *)v11 + 9);
              long long v124 = *((_OWORD *)v11 + 6);
              *((_OWORD *)v10 + 5) = *((_OWORD *)v11 + 5);
              *((_OWORD *)v10 + 6) = v124;
            }
            *((void *)v10 + 20) = *((void *)v11 + 20);
            swift_bridgeObjectRetain();
            break;
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

unsigned char *assignWithCopy for CommandRouter.Failure(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_2481748C0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      a1[v6[9]] = a2[v6[9]];
      *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
      uint64_t v12 = v6[11];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      type metadata accessor for V1Command(0);
      swift_bridgeObjectRetain();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v25 = *(void *)v14;
        uint64_t v26 = *((void *)v14 + 1);
        uint64_t v27 = *((void *)v14 + 2);
        char v28 = v14[24];
        sub_2480E4780(v25, v26, v27, v28);
        *(void *)uint64_t v13 = v25;
        *((void *)v13 + 1) = v26;
        *((void *)v13 + 2) = v27;
        v13[24] = v28;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for V1Command.Response(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(void *)uint64_t v13 = *(void *)v14;
              *((void *)v13 + 1) = *((void *)v14 + 1);
              *((void *)v13 + 2) = *((void *)v14 + 2);
              *((void *)v13 + 3) = *((void *)v14 + 3);
              *((void *)v13 + 4) = *((void *)v14 + 4);
              uint64_t v251 = v7;
              *((void *)v13 + 5) = *((void *)v14 + 5);
              *((void *)v13 + 6) = *((void *)v14 + 6);
              *((void *)v13 + 7) = *((void *)v14 + 7);
              *((void *)v13 + 8) = *((void *)v14 + 8);
              *((void *)v13 + 9) = *((void *)v14 + 9);
              uint64_t v35 = type metadata accessor for IdMSAccount();
              uint64_t v36 = *(int *)(v35 + 20);
              uint64_t v223 = &v13[v36];
              uint64_t v235 = v35;
              uint64_t v212 = &v14[v36];
              uint64_t v37 = sub_248174700();
              uint64_t v204 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v204(v223, v212, v37);
              uint64_t v38 = *(int *)(v235 + 24);
              uint64_t v39 = &v13[v38];
              uint64_t v40 = &v14[v38];
              uint64_t v41 = *((void *)v40 + 1);
              uint64_t v42 = *((void *)v40 + 2);
              uint64_t v43 = *((void *)v40 + 3);
              uint64_t v44 = *((void *)v40 + 4);
              uint64_t v45 = *((void *)v40 + 5);
              uint64_t v199 = *((void *)v40 + 6);
              uint64_t v205 = *(void *)v40;
              uint64_t v195 = *((void *)v40 + 7);
              uint64_t v213 = *((void *)v40 + 8);
              LOBYTE(v223) = v40[72];
              sub_247FABF8C(*(void *)v40, v41, v42, v43, v44, v45, v199, v195, v213, (char)v223);
              *(void *)uint64_t v39 = v205;
              *((void *)v39 + 1) = v41;
              *((void *)v39 + 2) = v42;
              *((void *)v39 + 3) = v43;
              *((void *)v39 + 4) = v44;
              *((void *)v39 + 5) = v45;
              uint64_t v7 = v251;
              *((void *)v39 + 6) = v199;
              *((void *)v39 + 7) = v195;
              *((void *)v39 + 8) = v213;
              v39[72] = (char)v223;
              *(void *)&v13[*(int *)(v235 + 28)] = *(void *)&v14[*(int *)(v235 + 28)];
              uint64_t v46 = type metadata accessor for SignInCommand.Response(0);
              *(void *)&v13[*(int *)(v46 + 20)] = *(void *)&v14[*(int *)(v46 + 20)];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              break;
            case 2u:
              type metadata accessor for AnisetteCommand.Response();
              int v47 = swift_getEnumCaseMultiPayload();
              uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v47]);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v13, v14, v48);
              swift_storeEnumTagMultiPayload();
              break;
            case 3u:
              uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v13, v14, v49);
              break;
            case 4u:
              uint64_t v50 = *(void *)v14;
              uint64_t v51 = *((void *)v14 + 1);
              uint64_t v53 = *((void *)v14 + 2);
              unint64_t v52 = *((void *)v14 + 3);
              sub_247FF4F40(v50, v51, v53, v52);
              *(void *)uint64_t v13 = v50;
              *((void *)v13 + 1) = v51;
              *((void *)v13 + 2) = v53;
              *((void *)v13 + 3) = v52;
              break;
            default:
              *uint64_t v13 = *v14;
              v13[1] = v14[1];
              *((void *)v13 + 1) = *((void *)v14 + 1);
              *((void *)v13 + 2) = *((void *)v14 + 2);
              *((_WORD *)v13 + 12) = *((_WORD *)v14 + 12);
              uint64_t v16 = *((void *)v14 + 5);
              swift_bridgeObjectRetain();
              if (v16)
              {
                *((void *)v13 + 4) = *((void *)v14 + 4);
                *((void *)v13 + 5) = *((void *)v14 + 5);
                *((void *)v13 + 6) = *((void *)v14 + 6);
                *((void *)v13 + 7) = *((void *)v14 + 7);
                uint64_t v17 = *((void *)v14 + 9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v17)
                {
                  *((void *)v13 + 8) = *((void *)v14 + 8);
                  *((void *)v13 + 9) = *((void *)v14 + 9);
                  *((void *)v13 + 10) = *((void *)v14 + 10);
                  *((void *)v13 + 11) = *((void *)v14 + 11);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v172 = *((_OWORD *)v14 + 5);
                  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
                  *((_OWORD *)v13 + 5) = v172;
                }
                v13[96] = v14[96];
              }
              else
              {
                *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
                long long v96 = *((_OWORD *)v14 + 3);
                long long v97 = *((_OWORD *)v14 + 4);
                long long v98 = *((_OWORD *)v14 + 5);
                v13[96] = v14[96];
                *((_OWORD *)v13 + 4) = v97;
                *((_OWORD *)v13 + 5) = v98;
                *((_OWORD *)v13 + 3) = v96;
              }
              break;
          }
        }
        else
        {
          type metadata accessor for V1Command.Request(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v252 = v7;
              *(void *)uint64_t v13 = *(void *)v14;
              *((void *)v13 + 1) = *((void *)v14 + 1);
              *((void *)v13 + 2) = *((void *)v14 + 2);
              *((void *)v13 + 3) = *((void *)v14 + 3);
              *((void *)v13 + 4) = *((void *)v14 + 4);
              *((void *)v13 + 5) = *((void *)v14 + 5);
              *((void *)v13 + 6) = *((void *)v14 + 6);
              *((void *)v13 + 7) = *((void *)v14 + 7);
              *((void *)v13 + 8) = *((void *)v14 + 8);
              *((void *)v13 + 9) = *((void *)v14 + 9);
              uint64_t v54 = type metadata accessor for IdMSAccount();
              uint64_t v55 = *(int *)(v54 + 20);
              uint64_t v236 = v54;
              uint64_t v206 = &v14[v55];
              long long v214 = &v13[v55];
              uint64_t v56 = sub_248174700();
              uint64_t v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v200(v214, v206, v56);
              uint64_t v57 = *(int *)(v54 + 24);
              uint64_t v58 = &v13[v57];
              uint64_t v59 = &v14[v57];
              uint64_t v60 = *((void *)v59 + 1);
              uint64_t v61 = *((void *)v59 + 2);
              uint64_t v62 = *((void *)v59 + 3);
              uint64_t v64 = *((void *)v59 + 4);
              uint64_t v63 = *((void *)v59 + 5);
              uint64_t v201 = *((void *)v59 + 6);
              uint64_t v207 = *(void *)v59;
              uint64_t v196 = *((void *)v59 + 7);
              uint64_t v215 = *((void *)v59 + 8);
              char v224 = v59[72];
              sub_247FABF8C(*(void *)v59, v60, v61, v62, v64, v63, v201, v196, v215, v224);
              *(void *)uint64_t v58 = v207;
              *((void *)v58 + 1) = v60;
              *((void *)v58 + 2) = v61;
              *((void *)v58 + 3) = v62;
              *((void *)v58 + 4) = v64;
              *((void *)v58 + 5) = v63;
              *((void *)v58 + 6) = v201;
              *((void *)v58 + 7) = v196;
              *((void *)v58 + 8) = v215;
              v58[72] = v224;
              *(void *)&v13[*(int *)(v236 + 28)] = *(void *)&v14[*(int *)(v236 + 28)];
              uint64_t v216 = (int *)type metadata accessor for SignInCommand.Request(0);
              uint64_t v65 = v216[5];
              uint64_t v66 = &v13[v65];
              uint64_t v67 = &v14[v65];
              *(void *)uint64_t v66 = *(void *)v67;
              *((void *)v66 + 1) = *((void *)v67 + 1);
              *((void *)v66 + 2) = *((void *)v67 + 2);
              *((void *)v66 + 3) = *((void *)v67 + 3);
              *((void *)v66 + 4) = *((void *)v67 + 4);
              *((void *)v66 + 5) = *((void *)v67 + 5);
              *((void *)v66 + 6) = *((void *)v67 + 6);
              *((void *)v66 + 7) = *((void *)v67 + 7);
              *((void *)v66 + 8) = *((void *)v67 + 8);
              *((void *)v66 + 9) = *((void *)v67 + 9);
              char v208 = (uint64_t *)(v67 + 80);
              unint64_t v225 = *((void *)v67 + 11);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v225 >> 60 == 15)
              {
                *((_OWORD *)v66 + 5) = *(_OWORD *)v208;
              }
              else
              {
                uint64_t v95 = *v208;
                sub_247FB6C20(*v208, v225);
                *((void *)v66 + 10) = v95;
                *((void *)v66 + 11) = v225;
              }
              uint64_t v7 = v252;
              v13[v216[6]] = v14[v216[6]];
              v13[v216[7]] = v14[v216[7]];
              break;
            case 2u:
              uint64_t v68 = *(void *)v14;
              unint64_t v69 = *((void *)v14 + 1);
              uint64_t v70 = *((void *)v14 + 2);
              unint64_t v71 = *((void *)v14 + 3);
              char v72 = v14[32];
              sub_2480E684C(v68, v69, v70, v71, v72);
              *(void *)uint64_t v13 = v68;
              *((void *)v13 + 1) = v69;
              *((void *)v13 + 2) = v70;
              *((void *)v13 + 3) = v71;
              v13[32] = v72;
              break;
            case 3u:
              uint64_t v253 = v7;
              *(void *)uint64_t v13 = *(void *)v14;
              *((void *)v13 + 1) = *((void *)v14 + 1);
              *((void *)v13 + 2) = *((void *)v14 + 2);
              *((void *)v13 + 3) = *((void *)v14 + 3);
              *((void *)v13 + 4) = *((void *)v14 + 4);
              *((void *)v13 + 5) = *((void *)v14 + 5);
              *((void *)v13 + 6) = *((void *)v14 + 6);
              *((void *)v13 + 7) = *((void *)v14 + 7);
              *((void *)v13 + 8) = *((void *)v14 + 8);
              *((void *)v13 + 9) = *((void *)v14 + 9);
              uint64_t v73 = type metadata accessor for IdMSAccount();
              uint64_t v74 = *(int *)(v73 + 20);
              uint64_t v226 = &v13[v74];
              uint64_t v237 = v73;
              uint64_t v217 = &v14[v74];
              uint64_t v75 = sub_248174700();
              long long v209 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v209(v226, v217, v75);
              uint64_t v76 = *(int *)(v237 + 24);
              unint64_t v77 = &v13[v76];
              char v78 = &v14[v76];
              uint64_t v79 = *((void *)v78 + 1);
              uint64_t v80 = *((void *)v78 + 2);
              uint64_t v81 = *((void *)v78 + 3);
              uint64_t v82 = *((void *)v78 + 4);
              uint64_t v83 = *((void *)v78 + 5);
              uint64_t v202 = *((void *)v78 + 6);
              uint64_t v210 = *(void *)v78;
              uint64_t v197 = *((void *)v78 + 7);
              uint64_t v218 = *((void *)v78 + 8);
              LOBYTE(v226) = v78[72];
              sub_247FABF8C(*(void *)v78, v79, v80, v81, v82, v83, v202, v197, v218, (char)v226);
              *(void *)unint64_t v77 = v210;
              *((void *)v77 + 1) = v79;
              *((void *)v77 + 2) = v80;
              *((void *)v77 + 3) = v81;
              *((void *)v77 + 4) = v82;
              *((void *)v77 + 5) = v83;
              *((void *)v77 + 6) = v202;
              *((void *)v77 + 7) = v197;
              *((void *)v77 + 8) = v218;
              v77[72] = (char)v226;
              *(void *)&v13[*(int *)(v237 + 28)] = *(void *)&v14[*(int *)(v237 + 28)];
              uint64_t v84 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
              uint64_t v85 = &v13[v84];
              uint64_t v86 = &v14[v84];
              uint64_t v87 = *((void *)v86 + 1);
              swift_bridgeObjectRetain();
              if (v87)
              {
                *(void *)uint64_t v85 = *(void *)v86;
                *((void *)v85 + 1) = *((void *)v86 + 1);
                *((void *)v85 + 2) = *((void *)v86 + 2);
                *((void *)v85 + 3) = *((void *)v86 + 3);
                uint64_t v88 = *((void *)v86 + 5);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v88)
                {
                  *((void *)v85 + 4) = *((void *)v86 + 4);
                  *((void *)v85 + 5) = *((void *)v86 + 5);
                  *((void *)v85 + 6) = *((void *)v86 + 6);
                  *((void *)v85 + 7) = *((void *)v86 + 7);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v177 = *((_OWORD *)v86 + 3);
                  *((_OWORD *)v85 + 2) = *((_OWORD *)v86 + 2);
                  *((_OWORD *)v85 + 3) = v177;
                }
                uint64_t v7 = v253;
                v85[64] = v86[64];
              }
              else
              {
                *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
                long long v169 = *((_OWORD *)v86 + 1);
                long long v170 = *((_OWORD *)v86 + 2);
                long long v171 = *((_OWORD *)v86 + 3);
                v85[64] = v86[64];
                *((_OWORD *)v85 + 2) = v170;
                *((_OWORD *)v85 + 3) = v171;
                *((_OWORD *)v85 + 1) = v169;
                uint64_t v7 = v253;
              }
              break;
            case 4u:
              uint64_t v89 = *((void *)v14 + 2);
              uint64_t v90 = *((void *)v14 + 5);
              uint64_t v254 = v7;
              uint64_t v91 = *((void *)v14 + 6);
              uint64_t v198 = *(void *)v14;
              uint64_t v203 = *((void *)v14 + 7);
              uint64_t v211 = *((void *)v14 + 8);
              uint64_t v219 = *((void *)v14 + 9);
              unint64_t v227 = *((void *)v14 + 10);
              unsigned __int8 v238 = v14[88];
              uint64_t v92 = *((void *)v14 + 1);
              uint64_t v93 = *((void *)v14 + 3);
              uint64_t v94 = *((void *)v14 + 4);
              sub_247FF49AC(*(void *)v14, v92, v89, v93, v94, v90, v91, v203, v211, v219, v227, v238);
              *(void *)uint64_t v13 = v198;
              *((void *)v13 + 1) = v92;
              *((void *)v13 + 2) = v89;
              *((void *)v13 + 3) = v93;
              *((void *)v13 + 4) = v94;
              *((void *)v13 + 5) = v90;
              uint64_t v7 = v254;
              *((void *)v13 + 6) = v91;
              *((void *)v13 + 7) = v203;
              *((void *)v13 + 8) = v211;
              *((void *)v13 + 9) = v219;
              *((void *)v13 + 10) = v227;
              v13[88] = v238;
              break;
            default:
              *uint64_t v13 = *v14;
              v13[1] = v14[1];
              void v13[2] = v14[2];
              if (*((void *)v14 + 2))
              {
                *((void *)v13 + 1) = *((void *)v14 + 1);
                *((void *)v13 + 2) = *((void *)v14 + 2);
                *((void *)v13 + 3) = *((void *)v14 + 3);
                *((void *)v13 + 4) = *((void *)v14 + 4);
                uint64_t v29 = *((void *)v14 + 6);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v29)
                {
                  *((void *)v13 + 5) = *((void *)v14 + 5);
                  *((void *)v13 + 6) = *((void *)v14 + 6);
                  *((void *)v13 + 7) = *((void *)v14 + 7);
                  *((void *)v13 + 8) = *((void *)v14 + 8);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v173 = *(_OWORD *)(v14 + 56);
                  *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
                  *(_OWORD *)(v13 + 56) = v173;
                }
                v13[72] = v14[72];
              }
              else
              {
                *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
                long long v119 = *(_OWORD *)(v14 + 24);
                long long v120 = *(_OWORD *)(v14 + 40);
                long long v121 = *(_OWORD *)(v14 + 56);
                v13[72] = v14[72];
                *(_OWORD *)(v13 + 40) = v120;
                *(_OWORD *)(v13 + 56) = v121;
                *(_OWORD *)(v13 + 24) = v119;
              }
              if (*((void *)v14 + 11))
              {
                *((void *)v13 + 10) = *((void *)v14 + 10);
                *((void *)v13 + 11) = *((void *)v14 + 11);
                *((void *)v13 + 12) = *((void *)v14 + 12);
                *((void *)v13 + 13) = *((void *)v14 + 13);
                *((void *)v13 + 14) = *((void *)v14 + 14);
                *((void *)v13 + 15) = *((void *)v14 + 15);
                *((void *)v13 + 16) = *((void *)v14 + 16);
                *((void *)v13 + 17) = *((void *)v14 + 17);
                *((void *)v13 + 18) = *((void *)v14 + 18);
                *((void *)v13 + 19) = *((void *)v14 + 19);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *((_OWORD *)v13 + 5) = *((_OWORD *)v14 + 5);
                long long v174 = *((_OWORD *)v14 + 6);
                long long v175 = *((_OWORD *)v14 + 7);
                long long v176 = *((_OWORD *)v14 + 9);
                *((_OWORD *)v13 + 8) = *((_OWORD *)v14 + 8);
                *((_OWORD *)v13 + 9) = v176;
                *((_OWORD *)v13 + 6) = v174;
                *((_OWORD *)v13 + 7) = v175;
              }
              *((void *)v13 + 20) = *((void *)v14 + 20);
              swift_bridgeObjectRetain();
              break;
          }
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 4, v6);
      return a1;
    }
LABEL_11:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_247FB33D4((uint64_t)a1, &qword_2692D85C0);
    goto LABEL_11;
  }
  uint64_t v18 = sub_2481748C0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 24))(a1, a2, v18);
  a1[v6[9]] = a2[v6[9]];
  *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v19 = v6[11];
    uint64_t v20 = &a1[v19];
    char v21 = &a2[v19];
    sub_248149C68((uint64_t)&a1[v19], type metadata accessor for V1Command);
    type metadata accessor for V1Command(0);
    int v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 2)
    {
      uint64_t v30 = *(void *)v21;
      uint64_t v31 = *((void *)v21 + 1);
      uint64_t v32 = *((void *)v21 + 2);
      char v33 = v21[24];
      sub_2480E4780(v30, v31, v32, v33);
      *(void *)uint64_t v20 = v30;
      *((void *)v20 + 1) = v31;
      *((void *)v20 + 2) = v32;
      v20[24] = v33;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v22 == 1)
      {
        type metadata accessor for V1Command.Response(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)uint64_t v20 = *(void *)v21;
            *((void *)v20 + 1) = *((void *)v21 + 1);
            *((void *)v20 + 2) = *((void *)v21 + 2);
            *((void *)v20 + 3) = *((void *)v21 + 3);
            *((void *)v20 + 4) = *((void *)v21 + 4);
            *((void *)v20 + 5) = *((void *)v21 + 5);
            *((void *)v20 + 6) = *((void *)v21 + 6);
            *((void *)v20 + 7) = *((void *)v21 + 7);
            *((void *)v20 + 8) = *((void *)v21 + 8);
            *((void *)v20 + 9) = *((void *)v21 + 9);
            uint64_t v99 = type metadata accessor for IdMSAccount();
            uint64_t v100 = *(int *)(v99 + 20);
            uint64_t v246 = &v20[v100];
            uint64_t v255 = v99;
            uint64_t v239 = &v21[v100];
            uint64_t v101 = sub_248174700();
            uint64_t v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v228(v246, v239, v101);
            uint64_t v102 = *(int *)(v99 + 24);
            uint64_t v103 = &v20[v102];
            uint64_t v104 = &v21[v102];
            uint64_t v105 = *((void *)v104 + 1);
            uint64_t v106 = *((void *)v104 + 2);
            uint64_t v107 = *((void *)v104 + 3);
            uint64_t v108 = *((void *)v104 + 4);
            uint64_t v109 = *((void *)v104 + 5);
            uint64_t v110 = *((void *)v104 + 6);
            uint64_t v220 = *((void *)v104 + 7);
            uint64_t v229 = *(void *)v104;
            uint64_t v240 = *((void *)v104 + 8);
            LOBYTE(v246) = v104[72];
            sub_247FABF8C(*(void *)v104, v105, v106, v107, v108, v109, v110, v220, v240, (char)v246);
            *(void *)uint64_t v103 = v229;
            *((void *)v103 + 1) = v105;
            *((void *)v103 + 2) = v106;
            *((void *)v103 + 3) = v107;
            *((void *)v103 + 4) = v108;
            *((void *)v103 + 5) = v109;
            *((void *)v103 + 6) = v110;
            *((void *)v103 + 7) = v220;
            *((void *)v103 + 8) = v240;
            v103[72] = (char)v246;
            *(void *)&v20[*(int *)(v255 + 28)] = *(void *)&v21[*(int *)(v255 + 28)];
            uint64_t v111 = type metadata accessor for SignInCommand.Response(0);
            *(void *)&v20[*(int *)(v111 + 20)] = *(void *)&v21[*(int *)(v111 + 20)];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            break;
          case 2u:
            type metadata accessor for AnisetteCommand.Response();
            int v112 = swift_getEnumCaseMultiPayload();
            uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v112]);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v20, v21, v113);
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v20, v21, v114);
            break;
          case 4u:
            uint64_t v115 = *(void *)v21;
            uint64_t v116 = *((void *)v21 + 1);
            uint64_t v118 = *((void *)v21 + 2);
            unint64_t v117 = *((void *)v21 + 3);
            sub_247FF4F40(v115, v116, v118, v117);
            *(void *)uint64_t v20 = v115;
            *((void *)v20 + 1) = v116;
            *((void *)v20 + 2) = v118;
            *((void *)v20 + 3) = v117;
            break;
          default:
            *uint64_t v20 = *v21;
            v20[1] = v21[1];
            *((void *)v20 + 1) = *((void *)v21 + 1);
            *((void *)v20 + 2) = *((void *)v21 + 2);
            *((_WORD *)v20 + 12) = *((_WORD *)v21 + 12);
            uint64_t v23 = *((void *)v21 + 5);
            swift_bridgeObjectRetain();
            if (v23)
            {
              *((void *)v20 + 4) = *((void *)v21 + 4);
              *((void *)v20 + 5) = *((void *)v21 + 5);
              *((void *)v20 + 6) = *((void *)v21 + 6);
              *((void *)v20 + 7) = *((void *)v21 + 7);
              uint64_t v24 = *((void *)v21 + 9);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v24)
              {
                *((void *)v20 + 8) = *((void *)v21 + 8);
                *((void *)v20 + 9) = *((void *)v21 + 9);
                *((void *)v20 + 10) = *((void *)v21 + 10);
                *((void *)v20 + 11) = *((void *)v21 + 11);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v189 = *((_OWORD *)v21 + 5);
                *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
                *((_OWORD *)v20 + 5) = v189;
              }
              v20[96] = v21[96];
            }
            else
            {
              *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
              long long v180 = *((_OWORD *)v21 + 3);
              long long v181 = *((_OWORD *)v21 + 4);
              long long v182 = *((_OWORD *)v21 + 5);
              v20[96] = v21[96];
              *((_OWORD *)v20 + 4) = v181;
              *((_OWORD *)v20 + 5) = v182;
              *((_OWORD *)v20 + 3) = v180;
            }
            break;
        }
      }
      else
      {
        type metadata accessor for V1Command.Request(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)uint64_t v20 = *(void *)v21;
            *((void *)v20 + 1) = *((void *)v21 + 1);
            *((void *)v20 + 2) = *((void *)v21 + 2);
            *((void *)v20 + 3) = *((void *)v21 + 3);
            *((void *)v20 + 4) = *((void *)v21 + 4);
            *((void *)v20 + 5) = *((void *)v21 + 5);
            *((void *)v20 + 6) = *((void *)v21 + 6);
            *((void *)v20 + 7) = *((void *)v21 + 7);
            *((void *)v20 + 8) = *((void *)v21 + 8);
            *((void *)v20 + 9) = *((void *)v21 + 9);
            uint64_t v122 = type metadata accessor for IdMSAccount();
            uint64_t v123 = *(int *)(v122 + 20);
            uint64_t v247 = &v20[v123];
            uint64_t v256 = v122;
            char v241 = &v21[v123];
            uint64_t v124 = sub_248174700();
            long long v230 = *(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v230(v247, v241, v124);
            uint64_t v125 = *(int *)(v122 + 24);
            long long v126 = &v20[v125];
            uint64_t v127 = &v21[v125];
            uint64_t v128 = *(void *)v127;
            uint64_t v129 = *((void *)v127 + 1);
            uint64_t v130 = *((void *)v127 + 2);
            uint64_t v131 = *((void *)v127 + 3);
            uint64_t v132 = *((void *)v127 + 4);
            uint64_t v133 = *((void *)v127 + 5);
            uint64_t v221 = *((void *)v127 + 7);
            uint64_t v231 = *((void *)v127 + 6);
            uint64_t v242 = *((void *)v127 + 8);
            LOBYTE(v247) = v127[72];
            sub_247FABF8C(*(void *)v127, v129, v130, v131, v132, v133, v231, v221, v242, (char)v247);
            *(void *)long long v126 = v128;
            *((void *)v126 + 1) = v129;
            *((void *)v126 + 2) = v130;
            *((void *)v126 + 3) = v131;
            *((void *)v126 + 4) = v132;
            *((void *)v126 + 5) = v133;
            *((void *)v126 + 6) = v231;
            *((void *)v126 + 7) = v221;
            *((void *)v126 + 8) = v242;
            v126[72] = (char)v247;
            *(void *)&v20[*(int *)(v256 + 28)] = *(void *)&v21[*(int *)(v256 + 28)];
            char v257 = (int *)type metadata accessor for SignInCommand.Request(0);
            uint64_t v134 = v257[5];
            uint64_t v135 = &v20[v134];
            uint64_t v136 = &v21[v134];
            *(void *)uint64_t v135 = *(void *)v136;
            *((void *)v135 + 1) = *((void *)v136 + 1);
            *((void *)v135 + 2) = *((void *)v136 + 2);
            *((void *)v135 + 3) = *((void *)v136 + 3);
            *((void *)v135 + 4) = *((void *)v136 + 4);
            *((void *)v135 + 5) = *((void *)v136 + 5);
            *((void *)v135 + 6) = *((void *)v136 + 6);
            *((void *)v135 + 7) = *((void *)v136 + 7);
            *((void *)v135 + 8) = *((void *)v136 + 8);
            *((void *)v135 + 9) = *((void *)v136 + 9);
            unint64_t v248 = (uint64_t *)(v136 + 80);
            unint64_t v137 = *((void *)v136 + 11);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v137 >> 60 == 15)
            {
              *((_OWORD *)v135 + 5) = *(_OWORD *)v248;
            }
            else
            {
              uint64_t v179 = *v248;
              sub_247FB6C20(*v248, v137);
              *((void *)v135 + 10) = v179;
              *((void *)v135 + 11) = v137;
            }
            v20[v257[6]] = v21[v257[6]];
            v20[v257[7]] = v21[v257[7]];
            break;
          case 2u:
            uint64_t v138 = *(void *)v21;
            unint64_t v139 = *((void *)v21 + 1);
            uint64_t v140 = *((void *)v21 + 2);
            unint64_t v141 = *((void *)v21 + 3);
            char v142 = v21[32];
            sub_2480E684C(v138, v139, v140, v141, v142);
            *(void *)uint64_t v20 = v138;
            *((void *)v20 + 1) = v139;
            *((void *)v20 + 2) = v140;
            *((void *)v20 + 3) = v141;
            v20[32] = v142;
            break;
          case 3u:
            *(void *)uint64_t v20 = *(void *)v21;
            *((void *)v20 + 1) = *((void *)v21 + 1);
            *((void *)v20 + 2) = *((void *)v21 + 2);
            *((void *)v20 + 3) = *((void *)v21 + 3);
            *((void *)v20 + 4) = *((void *)v21 + 4);
            *((void *)v20 + 5) = *((void *)v21 + 5);
            *((void *)v20 + 6) = *((void *)v21 + 6);
            *((void *)v20 + 7) = *((void *)v21 + 7);
            *((void *)v20 + 8) = *((void *)v21 + 8);
            *((void *)v20 + 9) = *((void *)v21 + 9);
            uint64_t v143 = type metadata accessor for IdMSAccount();
            uint64_t v144 = *(int *)(v143 + 20);
            long long v249 = &v20[v144];
            uint64_t v258 = v143;
            uint64_t v243 = &v21[v144];
            uint64_t v145 = sub_248174700();
            id v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v232(v249, v243, v145);
            uint64_t v146 = *(int *)(v143 + 24);
            uint64_t v147 = &v20[v146];
            uint64_t v148 = &v21[v146];
            uint64_t v149 = *((void *)v148 + 1);
            uint64_t v150 = *((void *)v148 + 2);
            uint64_t v151 = *((void *)v148 + 3);
            uint64_t v152 = *((void *)v148 + 4);
            uint64_t v153 = *((void *)v148 + 5);
            uint64_t v154 = *((void *)v148 + 6);
            uint64_t v222 = *((void *)v148 + 7);
            uint64_t v233 = *(void *)v148;
            uint64_t v244 = *((void *)v148 + 8);
            LOBYTE(v249) = v148[72];
            sub_247FABF8C(*(void *)v148, v149, v150, v151, v152, v153, v154, v222, v244, (char)v249);
            *(void *)uint64_t v147 = v233;
            *((void *)v147 + 1) = v149;
            *((void *)v147 + 2) = v150;
            *((void *)v147 + 3) = v151;
            *((void *)v147 + 4) = v152;
            *((void *)v147 + 5) = v153;
            *((void *)v147 + 6) = v154;
            *((void *)v147 + 7) = v222;
            *((void *)v147 + 8) = v244;
            v147[72] = (char)v249;
            *(void *)&v20[*(int *)(v258 + 28)] = *(void *)&v21[*(int *)(v258 + 28)];
            uint64_t v155 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
            uint64_t v156 = &v20[v155];
            uint64_t v157 = &v21[v155];
            uint64_t v158 = *(void *)&v21[v155 + 8];
            swift_bridgeObjectRetain();
            if (v158)
            {
              *(void *)uint64_t v156 = *(void *)v157;
              *((void *)v156 + 1) = *((void *)v157 + 1);
              *((void *)v156 + 2) = *((void *)v157 + 2);
              *((void *)v156 + 3) = *((void *)v157 + 3);
              uint64_t v159 = *((void *)v157 + 5);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v159)
              {
                *((void *)v156 + 4) = *((void *)v157 + 4);
                *((void *)v156 + 5) = *((void *)v157 + 5);
                *((void *)v156 + 6) = *((void *)v157 + 6);
                *((void *)v156 + 7) = *((void *)v157 + 7);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v194 = *((_OWORD *)v157 + 3);
                *((_OWORD *)v156 + 2) = *((_OWORD *)v157 + 2);
                *((_OWORD *)v156 + 3) = v194;
              }
              v156[64] = v157[64];
            }
            else
            {
              *(_OWORD *)uint64_t v156 = *(_OWORD *)v157;
              long long v186 = *((_OWORD *)v157 + 1);
              long long v187 = *((_OWORD *)v157 + 2);
              long long v188 = *((_OWORD *)v157 + 3);
              v156[64] = v157[64];
              *((_OWORD *)v156 + 2) = v187;
              *((_OWORD *)v156 + 3) = v188;
              *((_OWORD *)v156 + 1) = v186;
            }
            break;
          case 4u:
            uint64_t v160 = *(void *)v21;
            uint64_t v161 = *((void *)v21 + 1);
            uint64_t v162 = *((void *)v21 + 2);
            uint64_t v163 = *((void *)v21 + 3);
            uint64_t v164 = *((void *)v21 + 4);
            uint64_t v165 = *((void *)v21 + 5);
            uint64_t v166 = *((void *)v21 + 6);
            uint64_t v234 = *((void *)v21 + 8);
            uint64_t v245 = *((void *)v21 + 9);
            unint64_t v250 = *((void *)v21 + 10);
            unsigned __int8 v259 = v21[88];
            uint64_t v167 = *(void *)v21;
            uint64_t v168 = *((void *)v21 + 7);
            sub_247FF49AC(v167, v161, v162, v163, v164, v165, v166, v168, v234, v245, v250, v259);
            *(void *)uint64_t v20 = v160;
            *((void *)v20 + 1) = v161;
            *((void *)v20 + 2) = v162;
            *((void *)v20 + 3) = v163;
            *((void *)v20 + 4) = v164;
            *((void *)v20 + 5) = v165;
            *((void *)v20 + 6) = v166;
            *((void *)v20 + 7) = v168;
            *((void *)v20 + 8) = v234;
            *((void *)v20 + 9) = v245;
            *((void *)v20 + 10) = v250;
            v20[88] = v259;
            break;
          default:
            *uint64_t v20 = *v21;
            v20[1] = v21[1];
            void v20[2] = v21[2];
            if (*((void *)v21 + 2))
            {
              *((void *)v20 + 1) = *((void *)v21 + 1);
              *((void *)v20 + 2) = *((void *)v21 + 2);
              *((void *)v20 + 3) = *((void *)v21 + 3);
              *((void *)v20 + 4) = *((void *)v21 + 4);
              uint64_t v34 = *((void *)v21 + 6);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v34)
              {
                *((void *)v20 + 5) = *((void *)v21 + 5);
                *((void *)v20 + 6) = *((void *)v21 + 6);
                *((void *)v20 + 7) = *((void *)v21 + 7);
                *((void *)v20 + 8) = *((void *)v21 + 8);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v190 = *(_OWORD *)(v21 + 56);
                *(_OWORD *)(v20 + 40) = *(_OWORD *)(v21 + 40);
                *(_OWORD *)(v20 + 56) = v190;
              }
              v20[72] = v21[72];
            }
            else
            {
              *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
              long long v183 = *(_OWORD *)(v21 + 24);
              long long v184 = *(_OWORD *)(v21 + 40);
              long long v185 = *(_OWORD *)(v21 + 56);
              v20[72] = v21[72];
              *(_OWORD *)(v20 + 40) = v184;
              *(_OWORD *)(v20 + 56) = v185;
              *(_OWORD *)(v20 + 24) = v183;
            }
            if (*((void *)v21 + 11))
            {
              *((void *)v20 + 10) = *((void *)v21 + 10);
              *((void *)v20 + 11) = *((void *)v21 + 11);
              *((void *)v20 + 12) = *((void *)v21 + 12);
              *((void *)v20 + 13) = *((void *)v21 + 13);
              *((void *)v20 + 14) = *((void *)v21 + 14);
              *((void *)v20 + 15) = *((void *)v21 + 15);
              *((void *)v20 + 16) = *((void *)v21 + 16);
              *((void *)v20 + 17) = *((void *)v21 + 17);
              *((void *)v20 + 18) = *((void *)v21 + 18);
              *((void *)v20 + 19) = *((void *)v21 + 19);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)v20 + 5) = *((_OWORD *)v21 + 5);
              long long v191 = *((_OWORD *)v21 + 6);
              long long v192 = *((_OWORD *)v21 + 7);
              long long v193 = *((_OWORD *)v21 + 9);
              *((_OWORD *)v20 + 8) = *((_OWORD *)v21 + 8);
              *((_OWORD *)v20 + 9) = v193;
              *((_OWORD *)v20 + 6) = v191;
              *((_OWORD *)v20 + 7) = v192;
            }
            *((void *)v20 + 20) = *((void *)v21 + 20);
            swift_bridgeObjectRetain();
            break;
        }
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

unsigned char *initializeWithTake for CommandRouter.Failure(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  uint64_t v7 = *((void *)v6 - 1);
  if (!(*(unsigned int (**)(unsigned char *, uint64_t, int *))(v7 + 48))(a2, 4, v6))
  {
    uint64_t v8 = sub_2481748C0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    a1[v6[9]] = a2[v6[9]];
    *(void *)&a1[v6[10]] = *(void *)&a2[v6[10]];
    uint64_t v9 = v6[11];
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for V1Command(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v35 = type metadata accessor for V1Command.Response(0);
      int v36 = swift_getEnumCaseMultiPayload();
      switch(v36)
      {
        case 3:
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v67 - 8) + 32))(v10, v11, v67);
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          type metadata accessor for AnisetteCommand.Response();
          int v68 = swift_getEnumCaseMultiPayload();
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v68]);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v69 - 8) + 32))(v10, v11, v69);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          long long v37 = v11[3];
          v10[2] = v11[2];
          v10[3] = v37;
          void v10[4] = v11[4];
          long long v38 = v11[1];
          *int v10 = *v11;
          v10[1] = v38;
          uint64_t v39 = (int *)type metadata accessor for IdMSAccount();
          uint64_t v40 = v39[5];
          uint64_t v41 = (char *)v10 + v40;
          uint64_t v42 = (char *)v11 + v40;
          uint64_t v43 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
          uint64_t v44 = v39[6];
          uint64_t v45 = (_OWORD *)((char *)v10 + v44);
          uint64_t v46 = (_OWORD *)((char *)v11 + v44);
          long long v47 = v46[3];
          v45[2] = v46[2];
          v45[3] = v47;
          *(_OWORD *)((char *)v45 + 57) = *(_OWORD *)((char *)v46 + 57);
          long long v48 = v46[1];
          *uint64_t v45 = *v46;
          v45[1] = v48;
          *(void *)((char *)v10 + v39[7]) = *(void *)((char *)v11 + v39[7]);
          uint64_t v49 = type metadata accessor for SignInCommand.Response(0);
          *(void *)((char *)v10 + *(int *)(v49 + 20)) = *(void *)((char *)v11 + *(int *)(v49 + 20));
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(*(void *)(v35 - 8) + 64));
          break;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_20:
        (*(void (**)(unsigned char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 4, v6);
        return a1;
      }
      uint64_t v14 = type metadata accessor for V1Command.Request(0);
      int v15 = swift_getEnumCaseMultiPayload();
      if (v15 == 3)
      {
        long long v50 = v11[3];
        v10[2] = v11[2];
        v10[3] = v50;
        void v10[4] = v11[4];
        long long v51 = v11[1];
        *int v10 = *v11;
        v10[1] = v51;
        unint64_t v52 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v53 = v52[5];
        uint64_t v54 = (char *)v10 + v53;
        uint64_t v55 = (char *)v11 + v53;
        uint64_t v56 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
        uint64_t v57 = v52[6];
        uint64_t v58 = (_OWORD *)((char *)v10 + v57);
        uint64_t v59 = (_OWORD *)((char *)v11 + v57);
        long long v60 = v59[3];
        uint64_t v58[2] = v59[2];
        v58[3] = v60;
        *(_OWORD *)((char *)v58 + 57) = *(_OWORD *)((char *)v59 + 57);
        long long v61 = v59[1];
        *uint64_t v58 = *v59;
        v58[1] = v61;
        *(void *)((char *)v10 + v52[7]) = *(void *)((char *)v11 + v52[7]);
        uint64_t v62 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
        uint64_t v63 = (char *)v10 + v62;
        uint64_t v64 = (char *)v11 + v62;
        long long v65 = *((_OWORD *)v64 + 3);
        *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
        *((_OWORD *)v63 + 3) = v65;
        v63[64] = v64[64];
        long long v66 = *((_OWORD *)v64 + 1);
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
        *((_OWORD *)v63 + 1) = v66;
        swift_storeEnumTagMultiPayload();
      }
      else if (v15 == 1)
      {
        long long v16 = v11[3];
        v10[2] = v11[2];
        v10[3] = v16;
        void v10[4] = v11[4];
        long long v17 = v11[1];
        *int v10 = *v11;
        v10[1] = v17;
        uint64_t v18 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v19 = v18[5];
        uint64_t v20 = (char *)v10 + v19;
        char v21 = (char *)v11 + v19;
        uint64_t v22 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        uint64_t v23 = v18[6];
        uint64_t v24 = (_OWORD *)((char *)v10 + v23);
        uint64_t v25 = (_OWORD *)((char *)v11 + v23);
        long long v26 = v25[3];
        _DWORD v24[2] = v25[2];
        v24[3] = v26;
        *(_OWORD *)((char *)v24 + 57) = *(_OWORD *)((char *)v25 + 57);
        long long v27 = v25[1];
        _OWORD *v24 = *v25;
        v24[1] = v27;
        *(void *)((char *)v10 + v18[7]) = *(void *)((char *)v11 + v18[7]);
        char v28 = (int *)type metadata accessor for SignInCommand.Request(0);
        uint64_t v29 = v28[5];
        uint64_t v30 = (_OWORD *)((char *)v10 + v29);
        uint64_t v31 = (_OWORD *)((char *)v11 + v29);
        long long v32 = v31[3];
        void v30[2] = v31[2];
        v30[3] = v32;
        long long v33 = v31[5];
        v30[4] = v31[4];
        v30[5] = v33;
        long long v34 = v31[1];
        *uint64_t v30 = *v31;
        v30[1] = v34;
        *((unsigned char *)v10 + v28[6]) = *((unsigned char *)v11 + v28[6]);
        *((unsigned char *)v10 + v28[7]) = *((unsigned char *)v11 + v28[7]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t assignWithTake for CommandRouter.Failure(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8((uint64_t)a2, 4, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_2481748C0();
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      *(unsigned char *)(a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
      *(void *)(a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
      uint64_t v12 = v6[11];
      uint64_t v13 = (_OWORD *)(a1 + v12);
      uint64_t v14 = (_OWORD *)((char *)a2 + v12);
      uint64_t v15 = type metadata accessor for V1Command(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v17 = type metadata accessor for V1Command.Response(0);
        int v66 = swift_getEnumCaseMultiPayload();
        switch(v66)
        {
          case 3:
            uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v111 - 8) + 32))(v13, v14, v111);
            swift_storeEnumTagMultiPayload();
            goto LABEL_33;
          case 2:
            type metadata accessor for AnisetteCommand.Response();
            int v112 = swift_getEnumCaseMultiPayload();
            uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v112]);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v113 - 8) + 32))(v13, v14, v113);
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            goto LABEL_33;
          case 1:
            long long v67 = v14[3];
            void v13[2] = v14[2];
            v13[3] = v67;
            v13[4] = v14[4];
            long long v68 = v14[1];
            *uint64_t v13 = *v14;
            v13[1] = v68;
            uint64_t v69 = (int *)type metadata accessor for IdMSAccount();
            uint64_t v70 = v69[5];
            unint64_t v71 = (char *)v13 + v70;
            char v72 = (char *)v14 + v70;
            uint64_t v73 = sub_248174700();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
            uint64_t v74 = v69[6];
            uint64_t v75 = (_OWORD *)((char *)v13 + v74);
            uint64_t v76 = (_OWORD *)((char *)v14 + v74);
            long long v77 = v76[3];
            v75[2] = v76[2];
            uint64_t v75[3] = v77;
            *(_OWORD *)((char *)v75 + 57) = *(_OWORD *)((char *)v76 + 57);
            long long v78 = v76[1];
            *uint64_t v75 = *v76;
            v75[1] = v78;
            *(void *)((char *)v13 + v69[7]) = *(void *)((char *)v14 + v69[7]);
            uint64_t v79 = type metadata accessor for SignInCommand.Response(0);
            *(void *)((char *)v13 + *(int *)(v79 + 20)) = *(void *)((char *)v14 + *(int *)(v79 + 20));
            swift_storeEnumTagMultiPayload();
            goto LABEL_33;
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_34:
          (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0, 4, v6);
          return a1;
        }
        uint64_t v17 = type metadata accessor for V1Command.Request(0);
        int v18 = swift_getEnumCaseMultiPayload();
        if (v18 == 3)
        {
          long long v94 = v14[3];
          void v13[2] = v14[2];
          v13[3] = v94;
          v13[4] = v14[4];
          long long v95 = v14[1];
          *uint64_t v13 = *v14;
          v13[1] = v95;
          long long v96 = (int *)type metadata accessor for IdMSAccount();
          uint64_t v97 = v96[5];
          long long v98 = (char *)v13 + v97;
          uint64_t v99 = (char *)v14 + v97;
          uint64_t v100 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
          uint64_t v101 = v96[6];
          uint64_t v102 = (_OWORD *)((char *)v13 + v101);
          uint64_t v103 = (_OWORD *)((char *)v14 + v101);
          long long v104 = v103[3];
          v102[2] = v103[2];
          v102[3] = v104;
          *(_OWORD *)((char *)v102 + 57) = *(_OWORD *)((char *)v103 + 57);
          long long v105 = v103[1];
          *uint64_t v102 = *v103;
          v102[1] = v105;
          *(void *)((char *)v13 + v96[7]) = *(void *)((char *)v14 + v96[7]);
          uint64_t v106 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
          uint64_t v107 = (char *)v13 + v106;
          uint64_t v108 = (char *)v14 + v106;
          long long v109 = *((_OWORD *)v108 + 3);
          *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
          *((_OWORD *)v107 + 3) = v109;
          v107[64] = v108[64];
          long long v110 = *((_OWORD *)v108 + 1);
          *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
          *((_OWORD *)v107 + 1) = v110;
          swift_storeEnumTagMultiPayload();
          goto LABEL_33;
        }
        if (v18 == 1)
        {
          long long v19 = v14[3];
          void v13[2] = v14[2];
          v13[3] = v19;
          v13[4] = v14[4];
          long long v20 = v14[1];
          *uint64_t v13 = *v14;
          v13[1] = v20;
          char v21 = (int *)type metadata accessor for IdMSAccount();
          uint64_t v22 = v21[5];
          uint64_t v23 = (char *)v13 + v22;
          uint64_t v24 = (char *)v14 + v22;
          uint64_t v25 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
          uint64_t v26 = v21[6];
          long long v27 = (_OWORD *)((char *)v13 + v26);
          char v28 = (_OWORD *)((char *)v14 + v26);
          long long v29 = v28[3];
          v27[2] = v28[2];
          v27[3] = v29;
          *(_OWORD *)((char *)v27 + 57) = *(_OWORD *)((char *)v28 + 57);
          long long v30 = v28[1];
          *long long v27 = *v28;
          v27[1] = v30;
          *(void *)((char *)v13 + v21[7]) = *(void *)((char *)v14 + v21[7]);
          uint64_t v31 = (int *)type metadata accessor for SignInCommand.Request(0);
          uint64_t v32 = v31[5];
          long long v33 = (_OWORD *)((char *)v13 + v32);
          long long v34 = (_OWORD *)((char *)v14 + v32);
          long long v35 = v34[3];
          void v33[2] = v34[2];
          v33[3] = v35;
          long long v36 = v34[5];
          v33[4] = v34[4];
          v33[5] = v36;
          long long v37 = v34[1];
          *long long v33 = *v34;
          v33[1] = v37;
          *((unsigned char *)v13 + v31[6]) = *((unsigned char *)v14 + v31[6]);
          *((unsigned char *)v13 + v31[7]) = *((unsigned char *)v14 + v31[7]);
          swift_storeEnumTagMultiPayload();
LABEL_33:
          swift_storeEnumTagMultiPayload();
          goto LABEL_34;
        }
      }
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      goto LABEL_33;
    }
    goto LABEL_10;
  }
  if (!v10)
  {
    uint64_t v40 = sub_2481748C0();
    (*(void (**)(uint64_t, _OWORD *, uint64_t))(*(void *)(v40 - 8) + 40))(a1, a2, v40);
    *(unsigned char *)(a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
    *(void *)(a1 + v6[10]) = *(void *)((char *)a2 + v6[10]);
    swift_bridgeObjectRelease();
    if ((_OWORD *)a1 == a2) {
      return a1;
    }
    uint64_t v41 = v6[11];
    uint64_t v42 = (_OWORD *)(a1 + v41);
    a2 = (_OWORD *)((char *)a2 + v41);
    sub_248149C68(a1 + v41, type metadata accessor for V1Command);
    uint64_t v43 = type metadata accessor for V1Command(0);
    int v44 = swift_getEnumCaseMultiPayload();
    if (v44 == 1)
    {
      uint64_t v45 = type metadata accessor for V1Command.Response(0);
      int v80 = swift_getEnumCaseMultiPayload();
      switch(v80)
      {
        case 3:
          uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v132 - 8) + 32))(v42, a2, v132);
          swift_storeEnumTagMultiPayload();
          goto LABEL_38;
        case 2:
          type metadata accessor for AnisetteCommand.Response();
          int v133 = swift_getEnumCaseMultiPayload();
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v133]);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v134 - 8) + 32))(v42, a2, v134);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          goto LABEL_38;
        case 1:
          long long v81 = a2[3];
          v42[2] = a2[2];
          v42[3] = v81;
          _OWORD v42[4] = a2[4];
          long long v82 = a2[1];
          *uint64_t v42 = *a2;
          v42[1] = v82;
          uint64_t v83 = (int *)type metadata accessor for IdMSAccount();
          uint64_t v84 = v83[5];
          uint64_t v85 = (char *)v42 + v84;
          uint64_t v86 = (char *)a2 + v84;
          uint64_t v87 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
          uint64_t v88 = v83[6];
          uint64_t v89 = (_OWORD *)((char *)v42 + v88);
          uint64_t v90 = (_OWORD *)((char *)a2 + v88);
          long long v91 = v90[3];
          v89[2] = v90[2];
          v89[3] = v91;
          *(_OWORD *)((char *)v89 + 57) = *(_OWORD *)((char *)v90 + 57);
          long long v92 = v90[1];
          *uint64_t v89 = *v90;
          v89[1] = v92;
          *(void *)((char *)v42 + v83[7]) = *(void *)((char *)a2 + v83[7]);
          uint64_t v93 = type metadata accessor for SignInCommand.Response(0);
          *(void *)((char *)v42 + *(int *)(v93 + 20)) = *(void *)((char *)a2 + *(int *)(v93 + 20));
          swift_storeEnumTagMultiPayload();
          goto LABEL_38;
      }
    }
    else
    {
      if (v44)
      {
        size_t v38 = *(void *)(*(void *)(v43 - 8) + 64);
        uint64_t v39 = v42;
        goto LABEL_11;
      }
      uint64_t v45 = type metadata accessor for V1Command.Request(0);
      int v46 = swift_getEnumCaseMultiPayload();
      if (v46 == 3)
      {
        long long v115 = a2[3];
        v42[2] = a2[2];
        v42[3] = v115;
        _OWORD v42[4] = a2[4];
        long long v116 = a2[1];
        *uint64_t v42 = *a2;
        v42[1] = v116;
        unint64_t v117 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v118 = v117[5];
        long long v119 = (char *)v42 + v118;
        long long v120 = (char *)a2 + v118;
        uint64_t v121 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v119, v120, v121);
        uint64_t v122 = v117[6];
        uint64_t v123 = (_OWORD *)((char *)v42 + v122);
        uint64_t v124 = (_OWORD *)((char *)a2 + v122);
        long long v125 = v124[3];
        v123[2] = v124[2];
        v123[3] = v125;
        *(_OWORD *)((char *)v123 + 57) = *(_OWORD *)((char *)v124 + 57);
        long long v126 = v124[1];
        *uint64_t v123 = *v124;
        v123[1] = v126;
        *(void *)((char *)v42 + v117[7]) = *(void *)((char *)a2 + v117[7]);
        uint64_t v127 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
        uint64_t v128 = (char *)v42 + v127;
        uint64_t v129 = (char *)a2 + v127;
        long long v130 = *((_OWORD *)v129 + 3);
        *((_OWORD *)v128 + 2) = *((_OWORD *)v129 + 2);
        *((_OWORD *)v128 + 3) = v130;
        v128[64] = v129[64];
        long long v131 = *((_OWORD *)v129 + 1);
        *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
        *((_OWORD *)v128 + 1) = v131;
        swift_storeEnumTagMultiPayload();
        goto LABEL_38;
      }
      if (v46 == 1)
      {
        long long v47 = a2[3];
        v42[2] = a2[2];
        v42[3] = v47;
        _OWORD v42[4] = a2[4];
        long long v48 = a2[1];
        *uint64_t v42 = *a2;
        v42[1] = v48;
        uint64_t v49 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v50 = v49[5];
        long long v51 = (char *)v42 + v50;
        unint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        uint64_t v54 = v49[6];
        uint64_t v55 = (_OWORD *)((char *)v42 + v54);
        uint64_t v56 = (_OWORD *)((char *)a2 + v54);
        long long v57 = v56[3];
        v55[2] = v56[2];
        v55[3] = v57;
        *(_OWORD *)((char *)v55 + 57) = *(_OWORD *)((char *)v56 + 57);
        long long v58 = v56[1];
        *uint64_t v55 = *v56;
        v55[1] = v58;
        *(void *)((char *)v42 + v49[7]) = *(void *)((char *)a2 + v49[7]);
        uint64_t v59 = (int *)type metadata accessor for SignInCommand.Request(0);
        uint64_t v60 = v59[5];
        long long v61 = (_OWORD *)((char *)v42 + v60);
        uint64_t v62 = (_OWORD *)((char *)a2 + v60);
        long long v63 = v62[3];
        v61[2] = v62[2];
        uint64_t v61[3] = v63;
        long long v64 = v62[5];
        v61[4] = v62[4];
        v61[5] = v64;
        long long v65 = v62[1];
        *long long v61 = *v62;
        v61[1] = v65;
        *((unsigned char *)v42 + v59[6]) = *((unsigned char *)a2 + v59[6]);
        *((unsigned char *)v42 + v59[7]) = *((unsigned char *)a2 + v59[7]);
        swift_storeEnumTagMultiPayload();
LABEL_38:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    memcpy(v42, a2, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_38;
  }
  sub_247FB33D4(a1, &qword_2692D85C0);
LABEL_10:
  size_t v38 = *(void *)(*(void *)(a3 - 8) + 64);
  uint64_t v39 = (void *)a1;
LABEL_11:
  memcpy(v39, a2, v38);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommandRouter.Failure(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2481463A0);
}

uint64_t sub_2481463A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5) {
    return v5 - 4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CommandRouter.Failure(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_248146424);
}

uint64_t sub_248146424(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 4);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_2481464AC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 4, v2);
}

uint64_t sub_248146518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D85C0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 4, v4);
}

void sub_24814658C()
{
  sub_248146604();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

void sub_248146604()
{
  if (!qword_2692DBF88)
  {
    type metadata accessor for V1Command(255);
    sub_248141020(&qword_2692DBF90, (void (*)(uint64_t))type metadata accessor for V1Command);
    unint64_t v0 = type metadata accessor for Message();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2692DBF88);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for CommandRouter.HandshakeFailure(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v7;
      uint64_t v8 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v8;
      uint64_t v9 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v9;
      uint64_t v10 = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v10)
      {
        long long v41 = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 4) = v41;
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        a1[96] = a2[96];
        uint64_t v13 = *((void *)a2 + 14);
        if (v13) {
          goto LABEL_5;
        }
LABEL_26:
        long long v42 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v42;
        uint64_t v15 = *((void *)a2 + 18);
        if (v15) {
          goto LABEL_6;
        }
        goto LABEL_27;
      }
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v10;
      uint64_t v11 = *((void *)a2 + 9);
      *((void *)a1 + 8) = *((void *)a2 + 8);
      *((void *)a1 + 9) = v11;
      uint64_t v12 = *((void *)a2 + 11);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      *((void *)a1 + 11) = v12;
      a1[96] = a2[96];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v13 = *((void *)a2 + 14);
      if (!v13) {
        goto LABEL_26;
      }
LABEL_5:
      *((void *)a1 + 13) = *((void *)a2 + 13);
      *((void *)a1 + 14) = v13;
      uint64_t v14 = *((void *)a2 + 16);
      *((void *)a1 + 15) = *((void *)a2 + 15);
      *((void *)a1 + 16) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = *((void *)a2 + 18);
      if (v15)
      {
LABEL_6:
        *((void *)a1 + 17) = *((void *)a2 + 17);
        *((void *)a1 + 18) = v15;
        uint64_t v16 = *((void *)a2 + 19);
        uint64_t v17 = *((void *)a2 + 20);
        *((void *)a1 + 19) = v16;
        *((void *)a1 + 20) = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_41;
      }
LABEL_27:
      long long v43 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v43;
LABEL_41:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1u:
      type metadata accessor for V1Command(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v46 = *(void *)a2;
        uint64_t v47 = *((void *)a2 + 1);
        uint64_t v48 = *((void *)a2 + 2);
        char v49 = a2[24];
        sub_2480E4780(v46, v47, v48, v49);
        *(void *)a1 = v46;
        *((void *)a1 + 1) = v47;
        *((void *)a1 + 2) = v48;
        a1[24] = v49;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for V1Command.Response(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v57 = *((void *)a2 + 1);
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = v57;
              uint64_t v58 = *((void *)a2 + 3);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = v58;
              uint64_t v59 = *((void *)a2 + 5);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = v59;
              uint64_t v60 = *((void *)a2 + 7);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = v60;
              uint64_t v61 = *((void *)a2 + 9);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = v61;
              uint64_t v62 = type metadata accessor for IdMSAccount();
              uint64_t v63 = *(int *)(v62 + 20);
              long long v180 = &a1[v63];
              uint64_t v185 = v62;
              long long v173 = &a2[v63];
              uint64_t v64 = sub_248174700();
              uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v166(v180, v173, v64);
              uint64_t v65 = *(int *)(v62 + 24);
              int v66 = &a1[v65];
              long long v67 = &a2[v65];
              uint64_t v68 = *((void *)v67 + 1);
              uint64_t v69 = *((void *)v67 + 2);
              uint64_t v70 = *((void *)v67 + 3);
              uint64_t v71 = *((void *)v67 + 4);
              uint64_t v72 = *((void *)v67 + 5);
              uint64_t v73 = *((void *)v67 + 6);
              uint64_t v163 = *((void *)v67 + 7);
              uint64_t v167 = *(void *)v67;
              uint64_t v174 = *((void *)v67 + 8);
              LOBYTE(v180) = v67[72];
              sub_247FABF8C(*(void *)v67, v68, v69, v70, v71, v72, v73, v163, v174, (char)v180);
              *(void *)int v66 = v167;
              *((void *)v66 + 1) = v68;
              *((void *)v66 + 2) = v69;
              *((void *)v66 + 3) = v70;
              *((void *)v66 + 4) = v71;
              *((void *)v66 + 5) = v72;
              *((void *)v66 + 6) = v73;
              *((void *)v66 + 7) = v163;
              *((void *)v66 + 8) = v174;
              v66[72] = (char)v180;
              *(void *)&a1[*(int *)(v185 + 28)] = *(void *)&a2[*(int *)(v185 + 28)];
              uint64_t v74 = type metadata accessor for SignInCommand.Response(0);
              *(void *)&a1[*(int *)(v74 + 20)] = *(void *)&a2[*(int *)(v74 + 20)];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              break;
            case 2u:
              type metadata accessor for AnisetteCommand.Response();
              int v75 = swift_getEnumCaseMultiPayload();
              uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v75]);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
              swift_storeEnumTagMultiPayload();
              break;
            case 3u:
              uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
              break;
            case 4u:
              uint64_t v78 = *(void *)a2;
              uint64_t v79 = *((void *)a2 + 1);
              uint64_t v81 = *((void *)a2 + 2);
              unint64_t v80 = *((void *)a2 + 3);
              sub_247FF4F40(v78, v79, v81, v80);
              *(void *)a1 = v78;
              *((void *)a1 + 1) = v79;
              *((void *)a1 + 2) = v81;
              *((void *)a1 + 3) = v80;
              break;
            default:
              *(_WORD *)a1 = *(_WORD *)a2;
              uint64_t v21 = *((void *)a2 + 2);
              *((void *)a1 + 1) = *((void *)a2 + 1);
              *((void *)a1 + 2) = v21;
              *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
              uint64_t v22 = *((void *)a2 + 5);
              swift_bridgeObjectRetain();
              if (v22)
              {
                *((void *)a1 + 4) = *((void *)a2 + 4);
                *((void *)a1 + 5) = v22;
                uint64_t v23 = *((void *)a2 + 7);
                *((void *)a1 + 6) = *((void *)a2 + 6);
                *((void *)a1 + 7) = v23;
                uint64_t v24 = *((void *)a2 + 9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v24)
                {
                  *((void *)a1 + 8) = *((void *)a2 + 8);
                  *((void *)a1 + 9) = v24;
                  uint64_t v25 = *((void *)a2 + 11);
                  *((void *)a1 + 10) = *((void *)a2 + 10);
                  *((void *)a1 + 11) = v25;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v153 = *((_OWORD *)a2 + 5);
                  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
                  *((_OWORD *)a1 + 5) = v153;
                }
                a1[96] = a2[96];
              }
              else
              {
                long long v147 = *((_OWORD *)a2 + 5);
                *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
                *((_OWORD *)a1 + 5) = v147;
                a1[96] = a2[96];
                long long v148 = *((_OWORD *)a2 + 3);
                *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
                *((_OWORD *)a1 + 3) = v148;
              }
              break;
          }
        }
        else
        {
          type metadata accessor for V1Command.Request(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v82 = *((void *)a2 + 1);
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = v82;
              uint64_t v83 = *((void *)a2 + 3);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = v83;
              uint64_t v84 = *((void *)a2 + 5);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = v84;
              uint64_t v85 = *((void *)a2 + 7);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = v85;
              uint64_t v86 = *((void *)a2 + 9);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = v86;
              uint64_t v87 = type metadata accessor for IdMSAccount();
              uint64_t v88 = *(int *)(v87 + 20);
              long long v181 = &a1[v88];
              uint64_t v186 = v87;
              long long v175 = &a2[v88];
              uint64_t v89 = sub_248174700();
              uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v168(v181, v175, v89);
              uint64_t v90 = *(int *)(v87 + 24);
              long long v91 = &a1[v90];
              long long v92 = &a2[v90];
              uint64_t v93 = *(void *)v92;
              uint64_t v94 = *((void *)v92 + 1);
              uint64_t v95 = *((void *)v92 + 2);
              uint64_t v96 = *((void *)v92 + 3);
              uint64_t v97 = *((void *)v92 + 4);
              uint64_t v98 = *((void *)v92 + 5);
              uint64_t v164 = *((void *)v92 + 7);
              uint64_t v169 = *((void *)v92 + 6);
              uint64_t v176 = *((void *)v92 + 8);
              LOBYTE(v181) = v92[72];
              sub_247FABF8C(*(void *)v92, v94, v95, v96, v97, v98, v169, v164, v176, (char)v181);
              *(void *)long long v91 = v93;
              *((void *)v91 + 1) = v94;
              *((void *)v91 + 2) = v95;
              *((void *)v91 + 3) = v96;
              *((void *)v91 + 4) = v97;
              *((void *)v91 + 5) = v98;
              *((void *)v91 + 6) = v169;
              *((void *)v91 + 7) = v164;
              *((void *)v91 + 8) = v176;
              v91[72] = (char)v181;
              *(void *)&a1[*(int *)(v186 + 28)] = *(void *)&a2[*(int *)(v186 + 28)];
              long long v187 = (int *)type metadata accessor for SignInCommand.Request(0);
              uint64_t v99 = v187[5];
              uint64_t v100 = &a1[v99];
              uint64_t v101 = &a2[v99];
              uint64_t v102 = *((void *)v101 + 1);
              *(void *)uint64_t v100 = *(void *)v101;
              *((void *)v100 + 1) = v102;
              uint64_t v103 = *((void *)v101 + 3);
              *((void *)v100 + 2) = *((void *)v101 + 2);
              *((void *)v100 + 3) = v103;
              uint64_t v104 = *((void *)v101 + 5);
              *((void *)v100 + 4) = *((void *)v101 + 4);
              *((void *)v100 + 5) = v104;
              uint64_t v105 = *((void *)v101 + 7);
              *((void *)v100 + 6) = *((void *)v101 + 6);
              *((void *)v100 + 7) = v105;
              uint64_t v106 = *((void *)v101 + 9);
              *((void *)v100 + 8) = *((void *)v101 + 8);
              *((void *)v100 + 9) = v106;
              long long v182 = (uint64_t *)(v101 + 80);
              unint64_t v107 = *((void *)v101 + 11);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v107 >> 60 == 15)
              {
                *((_OWORD *)v100 + 5) = *(_OWORD *)v182;
              }
              else
              {
                uint64_t v146 = *v182;
                sub_247FB6C20(*v182, v107);
                *((void *)v100 + 10) = v146;
                *((void *)v100 + 11) = v107;
              }
              a1[v187[6]] = a2[v187[6]];
              a1[v187[7]] = a2[v187[7]];
              break;
            case 2u:
              uint64_t v108 = *(void *)a2;
              unint64_t v109 = *((void *)a2 + 1);
              uint64_t v110 = *((void *)a2 + 2);
              unint64_t v111 = *((void *)a2 + 3);
              char v112 = a2[32];
              sub_2480E684C(v108, v109, v110, v111, v112);
              *(void *)a1 = v108;
              *((void *)a1 + 1) = v109;
              *((void *)a1 + 2) = v110;
              *((void *)a1 + 3) = v111;
              a1[32] = v112;
              break;
            case 3u:
              uint64_t v113 = *((void *)a2 + 1);
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = v113;
              uint64_t v114 = *((void *)a2 + 3);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = v114;
              uint64_t v115 = *((void *)a2 + 5);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = v115;
              uint64_t v116 = *((void *)a2 + 7);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = v116;
              uint64_t v117 = *((void *)a2 + 9);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = v117;
              uint64_t v118 = type metadata accessor for IdMSAccount();
              uint64_t v119 = *(int *)(v118 + 20);
              long long v183 = &a1[v119];
              uint64_t v188 = v118;
              long long v177 = &a2[v119];
              uint64_t v120 = sub_248174700();
              long long v170 = *(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v170(v183, v177, v120);
              uint64_t v121 = *(int *)(v118 + 24);
              uint64_t v122 = &a1[v121];
              uint64_t v123 = &a2[v121];
              uint64_t v124 = *((void *)v123 + 1);
              uint64_t v125 = *((void *)v123 + 2);
              uint64_t v126 = *((void *)v123 + 3);
              uint64_t v127 = *((void *)v123 + 4);
              uint64_t v128 = *((void *)v123 + 5);
              uint64_t v129 = *((void *)v123 + 6);
              uint64_t v165 = *((void *)v123 + 7);
              uint64_t v171 = *(void *)v123;
              uint64_t v178 = *((void *)v123 + 8);
              LOBYTE(v183) = v123[72];
              sub_247FABF8C(*(void *)v123, v124, v125, v126, v127, v128, v129, v165, v178, (char)v183);
              *(void *)uint64_t v122 = v171;
              *((void *)v122 + 1) = v124;
              *((void *)v122 + 2) = v125;
              *((void *)v122 + 3) = v126;
              *((void *)v122 + 4) = v127;
              *((void *)v122 + 5) = v128;
              *((void *)v122 + 6) = v129;
              *((void *)v122 + 7) = v165;
              *((void *)v122 + 8) = v178;
              v122[72] = (char)v183;
              *(void *)&a1[*(int *)(v188 + 28)] = *(void *)&a2[*(int *)(v188 + 28)];
              uint64_t v130 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
              long long v131 = &a1[v130];
              uint64_t v132 = &a2[v130];
              uint64_t v133 = *(void *)&a2[v130 + 8];
              swift_bridgeObjectRetain();
              if (v133)
              {
                *(void *)long long v131 = *(void *)v132;
                *((void *)v131 + 1) = v133;
                uint64_t v134 = *((void *)v132 + 3);
                *((void *)v131 + 2) = *((void *)v132 + 2);
                *((void *)v131 + 3) = v134;
                uint64_t v135 = *((void *)v132 + 5);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v135)
                {
                  *((void *)v131 + 4) = *((void *)v132 + 4);
                  *((void *)v131 + 5) = v135;
                  uint64_t v136 = *((void *)v132 + 7);
                  *((void *)v131 + 6) = *((void *)v132 + 6);
                  *((void *)v131 + 7) = v136;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v154 = *((_OWORD *)v132 + 3);
                  *((_OWORD *)v131 + 2) = *((_OWORD *)v132 + 2);
                  *((_OWORD *)v131 + 3) = v154;
                }
                v131[64] = v132[64];
              }
              else
              {
                long long v151 = *((_OWORD *)v132 + 3);
                *((_OWORD *)v131 + 2) = *((_OWORD *)v132 + 2);
                *((_OWORD *)v131 + 3) = v151;
                v131[64] = v132[64];
                long long v152 = *((_OWORD *)v132 + 1);
                *(_OWORD *)long long v131 = *(_OWORD *)v132;
                *((_OWORD *)v131 + 1) = v152;
              }
              break;
            case 4u:
              uint64_t v137 = *(void *)a2;
              uint64_t v138 = *((void *)a2 + 1);
              uint64_t v139 = *((void *)a2 + 2);
              uint64_t v140 = *((void *)a2 + 3);
              uint64_t v141 = *((void *)a2 + 4);
              uint64_t v142 = *((void *)a2 + 5);
              uint64_t v143 = *((void *)a2 + 6);
              uint64_t v172 = *((void *)a2 + 8);
              uint64_t v179 = *((void *)a2 + 9);
              unint64_t v184 = *((void *)a2 + 10);
              unsigned __int8 v189 = a2[88];
              uint64_t v144 = *(void *)a2;
              uint64_t v145 = *((void *)a2 + 7);
              sub_247FF49AC(v144, v138, v139, v140, v141, v142, v143, v145, v172, v179, v184, v189);
              *(void *)a1 = v137;
              *((void *)a1 + 1) = v138;
              *((void *)a1 + 2) = v139;
              *((void *)a1 + 3) = v140;
              *((void *)a1 + 4) = v141;
              *((void *)a1 + 5) = v142;
              *((void *)a1 + 6) = v143;
              *((void *)a1 + 7) = v145;
              *((void *)a1 + 8) = v172;
              *((void *)a1 + 9) = v179;
              *((void *)a1 + 10) = v184;
              a1[88] = v189;
              break;
            default:
              *a1 = *a2;
              *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
              uint64_t v50 = *((void *)a2 + 2);
              if (v50)
              {
                *((void *)a1 + 1) = *((void *)a2 + 1);
                *((void *)a1 + 2) = v50;
                uint64_t v51 = *((void *)a2 + 4);
                *((void *)a1 + 3) = *((void *)a2 + 3);
                *((void *)a1 + 4) = v51;
                uint64_t v52 = *((void *)a2 + 6);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v52)
                {
                  *((void *)a1 + 5) = *((void *)a2 + 5);
                  *((void *)a1 + 6) = v52;
                  uint64_t v53 = *((void *)a2 + 8);
                  *((void *)a1 + 7) = *((void *)a2 + 7);
                  *((void *)a1 + 8) = v53;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v155 = *(_OWORD *)(a2 + 56);
                  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
                  *(_OWORD *)(a1 + 56) = v155;
                }
                a1[72] = a2[72];
              }
              else
              {
                long long v149 = *(_OWORD *)(a2 + 56);
                *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
                *(_OWORD *)(a1 + 56) = v149;
                a1[72] = a2[72];
                long long v150 = *(_OWORD *)(a2 + 24);
                *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
                *(_OWORD *)(a1 + 24) = v150;
              }
              uint64_t v156 = *((void *)a2 + 11);
              if (v156)
              {
                *((void *)a1 + 10) = *((void *)a2 + 10);
                *((void *)a1 + 11) = v156;
                uint64_t v157 = *((void *)a2 + 13);
                *((void *)a1 + 12) = *((void *)a2 + 12);
                *((void *)a1 + 13) = v157;
                uint64_t v158 = *((void *)a2 + 15);
                *((void *)a1 + 14) = *((void *)a2 + 14);
                *((void *)a1 + 15) = v158;
                uint64_t v159 = *((void *)a2 + 17);
                *((void *)a1 + 16) = *((void *)a2 + 16);
                *((void *)a1 + 17) = v159;
                uint64_t v160 = *((void *)a2 + 19);
                *((void *)a1 + 18) = *((void *)a2 + 18);
                *((void *)a1 + 19) = v160;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v161 = *((_OWORD *)a2 + 8);
                *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
                *((_OWORD *)a1 + 8) = v161;
                *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
                long long v162 = *((_OWORD *)a2 + 6);
                *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
                *((_OWORD *)a1 + 6) = v162;
              }
              *((void *)a1 + 20) = *((void *)a2 + 20);
              swift_bridgeObjectRetain();
              break;
          }
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v26 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v26;
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v27 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (!v27) {
        goto LABEL_28;
      }
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v27;
      uint64_t v28 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v28;
      uint64_t v29 = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29)
      {
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = v29;
        uint64_t v30 = *((void *)a2 + 11);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v54 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v54;
      }
      a1[96] = a2[96];
      goto LABEL_41;
    case 3u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v31 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v31;
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v32 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (!v32) {
        goto LABEL_28;
      }
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v32;
      uint64_t v33 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v33;
      uint64_t v34 = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v34)
      {
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = v34;
        uint64_t v35 = *((void *)a2 + 11);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v55 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v55;
      }
      a1[96] = a2[96];
      goto LABEL_41;
    case 4u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v36 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v36;
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v37 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (v37)
      {
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v37;
        uint64_t v38 = *((void *)a2 + 7);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = v38;
        uint64_t v39 = *((void *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39)
        {
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *((void *)a1 + 9) = v39;
          uint64_t v40 = *((void *)a2 + 11);
          *((void *)a1 + 10) = *((void *)a2 + 10);
          *((void *)a1 + 11) = v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v56 = *((_OWORD *)a2 + 5);
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 5) = v56;
        }
        a1[96] = a2[96];
      }
      else
      {
LABEL_28:
        long long v44 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v44;
        a1[96] = a2[96];
        long long v45 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v45;
      }
      goto LABEL_41;
    default:
      memcpy(a1, a2, *(void *)(v6 + 64));
      return a1;
  }
}

void destroy for CommandRouter.HandshakeFailure(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 112))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 144))
      {
LABEL_10:
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      break;
    case 1u:
      type metadata accessor for V1Command(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          uint64_t v7 = *(void *)a1;
          uint64_t v8 = *(void *)(a1 + 8);
          uint64_t v9 = *(void *)(a1 + 16);
          char v10 = *(unsigned char *)(a1 + 24);
          sub_2480E47A0(v7, v8, v9, v10);
          break;
        case 1:
          type metadata accessor for V1Command.Response(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              goto LABEL_2;
            case 1u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v3 = type metadata accessor for IdMSAccount();
              uint64_t v4 = a1 + *(int *)(v3 + 20);
              uint64_t v5 = sub_248174700();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
              uint64_t v6 = a1 + *(int *)(v3 + 24);
              sub_247FAC1EC(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
              swift_bridgeObjectRelease();
              type metadata accessor for SignInCommand.Response(0);
              goto LABEL_11;
            case 2u:
              type metadata accessor for AnisetteCommand.Response();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                case 1u:
                case 2u:
                  uint64_t v16 = &qword_2692D7490;
                  goto LABEL_47;
                case 3u:
                case 4u:
                  uint64_t v16 = &qword_2692DA968;
                  goto LABEL_47;
                case 5u:
                  uint64_t v16 = &qword_2692DA970;
                  goto LABEL_47;
                default:
                  return;
              }
            case 3u:
              uint64_t v16 = &qword_2692D6DA8;
LABEL_47:
              uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(v16);
              uint64_t v34 = *(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8);
              v34(a1, v33);
              break;
            case 4u:
              uint64_t v17 = *(void *)a1;
              uint64_t v18 = *(void *)(a1 + 8);
              uint64_t v19 = *(void *)(a1 + 16);
              unint64_t v20 = *(void *)(a1 + 24);
              sub_247FF40F8(v17, v18, v19, v20);
              break;
            default:
              return;
          }
          break;
        case 0:
          type metadata accessor for V1Command.Request(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              if (*(void *)(a1 + 16))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(a1 + 48))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
              }
              if (!*(void *)(a1 + 88)) {
                goto LABEL_11;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_10;
            case 1u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v21 = type metadata accessor for IdMSAccount();
              uint64_t v22 = a1 + *(int *)(v21 + 20);
              uint64_t v23 = sub_248174700();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
              uint64_t v24 = a1 + *(int *)(v21 + 24);
              sub_247FAC1EC(*(void *)v24, *(void *)(v24 + 8), *(void *)(v24 + 16), *(void *)(v24 + 24), *(void *)(v24 + 32), *(void *)(v24 + 40), *(void *)(v24 + 48), *(void *)(v24 + 56), *(void *)(v24 + 64), *(unsigned char *)(v24 + 72));
              swift_bridgeObjectRelease();
              uint64_t v25 = a1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v26 = *(void *)(v25 + 88);
              if (v26 >> 60 != 15)
              {
                uint64_t v27 = *(void *)(v25 + 80);
                sub_247FB6CCC(v27, v26);
              }
              break;
            case 2u:
              uint64_t v11 = *(void *)a1;
              unint64_t v12 = *(void *)(a1 + 8);
              uint64_t v13 = *(void *)(a1 + 16);
              unint64_t v14 = *(void *)(a1 + 24);
              char v15 = *(unsigned char *)(a1 + 32);
              sub_2480E32D8(v11, v12, v13, v14, v15);
              break;
            case 3u:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v28 = type metadata accessor for IdMSAccount();
              uint64_t v29 = a1 + *(int *)(v28 + 20);
              uint64_t v30 = sub_248174700();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
              uint64_t v31 = a1 + *(int *)(v28 + 24);
              sub_247FAC1EC(*(void *)v31, *(void *)(v31 + 8), *(void *)(v31 + 16), *(void *)(v31 + 24), *(void *)(v31 + 32), *(void *)(v31 + 40), *(void *)(v31 + 48), *(void *)(v31 + 56), *(void *)(v31 + 64), *(unsigned char *)(v31 + 72));
              swift_bridgeObjectRelease();
              uint64_t v32 = a1 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
              if (*(void *)(v32 + 8))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v32 + 40)) {
                  goto LABEL_4;
                }
              }
              break;
            case 4u:
              sub_247FF4AC0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
              break;
            default:
              return;
          }
          break;
      }
      break;
    case 2u:
    case 3u:
    case 4u:
LABEL_2:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 72))
        {
LABEL_4:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_11:
          swift_bridgeObjectRelease();
        }
      }
      break;
    default:
      return;
  }
}

char *initializeWithCopy for CommandRouter.HandshakeFailure(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v6;
      uint64_t v7 = *((void *)a2 + 3);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = v7;
      uint64_t v8 = *((void *)a2 + 5);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v8;
      uint64_t v9 = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9)
      {
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = v9;
        uint64_t v10 = *((void *)a2 + 9);
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = v10;
        uint64_t v11 = *((void *)a2 + 11);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = v11;
        a1[96] = a2[96];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v12 = *((void *)a2 + 14);
        if (v12) {
          goto LABEL_4;
        }
LABEL_23:
        long long v39 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v39;
        uint64_t v14 = *((void *)a2 + 18);
        if (v14) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
      long long v38 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v38;
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      a1[96] = a2[96];
      uint64_t v12 = *((void *)a2 + 14);
      if (!v12) {
        goto LABEL_23;
      }
LABEL_4:
      *((void *)a1 + 13) = *((void *)a2 + 13);
      *((void *)a1 + 14) = v12;
      uint64_t v13 = *((void *)a2 + 16);
      *((void *)a1 + 15) = *((void *)a2 + 15);
      *((void *)a1 + 16) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = *((void *)a2 + 18);
      if (v14)
      {
LABEL_5:
        *((void *)a1 + 17) = *((void *)a2 + 17);
        *((void *)a1 + 18) = v14;
        uint64_t v15 = *((void *)a2 + 19);
        uint64_t v16 = *((void *)a2 + 20);
        *((void *)a1 + 19) = v15;
        *((void *)a1 + 20) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_66;
      }
LABEL_24:
      long long v40 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v40;
LABEL_66:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1u:
      type metadata accessor for V1Command(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v43 = *(void *)a2;
        uint64_t v44 = *((void *)a2 + 1);
        uint64_t v45 = *((void *)a2 + 2);
        char v46 = a2[24];
        sub_2480E4780(v43, v44, v45, v46);
        *(void *)a1 = v43;
        *((void *)a1 + 1) = v44;
        *((void *)a1 + 2) = v45;
        a1[24] = v46;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for V1Command.Response(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v54 = *((void *)a2 + 1);
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = v54;
              uint64_t v55 = *((void *)a2 + 3);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = v55;
              uint64_t v56 = *((void *)a2 + 5);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = v56;
              uint64_t v57 = *((void *)a2 + 7);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = v57;
              uint64_t v58 = *((void *)a2 + 9);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = v58;
              uint64_t v59 = type metadata accessor for IdMSAccount();
              uint64_t v60 = *(int *)(v59 + 20);
              uint64_t v178 = &a1[v60];
              uint64_t v183 = v59;
              uint64_t v171 = &a2[v60];
              uint64_t v61 = sub_248174700();
              uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v164(v178, v171, v61);
              uint64_t v62 = *(int *)(v59 + 24);
              uint64_t v63 = &a1[v62];
              uint64_t v64 = &a2[v62];
              uint64_t v65 = *((void *)v64 + 1);
              uint64_t v66 = *((void *)v64 + 2);
              uint64_t v67 = *((void *)v64 + 3);
              uint64_t v68 = *((void *)v64 + 4);
              uint64_t v69 = *((void *)v64 + 5);
              uint64_t v70 = *((void *)v64 + 6);
              uint64_t v161 = *((void *)v64 + 7);
              uint64_t v165 = *(void *)v64;
              uint64_t v172 = *((void *)v64 + 8);
              LOBYTE(v178) = v64[72];
              sub_247FABF8C(*(void *)v64, v65, v66, v67, v68, v69, v70, v161, v172, (char)v178);
              *(void *)uint64_t v63 = v165;
              *((void *)v63 + 1) = v65;
              *((void *)v63 + 2) = v66;
              *((void *)v63 + 3) = v67;
              *((void *)v63 + 4) = v68;
              *((void *)v63 + 5) = v69;
              *((void *)v63 + 6) = v70;
              *((void *)v63 + 7) = v161;
              *((void *)v63 + 8) = v172;
              v63[72] = (char)v178;
              *(void *)&a1[*(int *)(v183 + 28)] = *(void *)&a2[*(int *)(v183 + 28)];
              uint64_t v71 = type metadata accessor for SignInCommand.Response(0);
              *(void *)&a1[*(int *)(v71 + 20)] = *(void *)&a2[*(int *)(v71 + 20)];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              break;
            case 2u:
              type metadata accessor for AnisetteCommand.Response();
              int v72 = swift_getEnumCaseMultiPayload();
              uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v72]);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(a1, a2, v73);
              swift_storeEnumTagMultiPayload();
              break;
            case 3u:
              uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(a1, a2, v74);
              break;
            case 4u:
              uint64_t v75 = *(void *)a2;
              uint64_t v76 = *((void *)a2 + 1);
              uint64_t v78 = *((void *)a2 + 2);
              unint64_t v77 = *((void *)a2 + 3);
              sub_247FF4F40(v75, v76, v78, v77);
              *(void *)a1 = v75;
              *((void *)a1 + 1) = v76;
              *((void *)a1 + 2) = v78;
              *((void *)a1 + 3) = v77;
              break;
            default:
              *(_WORD *)a1 = *(_WORD *)a2;
              uint64_t v18 = *((void *)a2 + 2);
              *((void *)a1 + 1) = *((void *)a2 + 1);
              *((void *)a1 + 2) = v18;
              *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
              uint64_t v19 = *((void *)a2 + 5);
              swift_bridgeObjectRetain();
              if (v19)
              {
                *((void *)a1 + 4) = *((void *)a2 + 4);
                *((void *)a1 + 5) = v19;
                uint64_t v20 = *((void *)a2 + 7);
                *((void *)a1 + 6) = *((void *)a2 + 6);
                *((void *)a1 + 7) = v20;
                uint64_t v21 = *((void *)a2 + 9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v21)
                {
                  *((void *)a1 + 8) = *((void *)a2 + 8);
                  *((void *)a1 + 9) = v21;
                  uint64_t v22 = *((void *)a2 + 11);
                  *((void *)a1 + 10) = *((void *)a2 + 10);
                  *((void *)a1 + 11) = v22;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v150 = *((_OWORD *)a2 + 5);
                  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
                  *((_OWORD *)a1 + 5) = v150;
                }
                a1[96] = a2[96];
              }
              else
              {
                long long v144 = *((_OWORD *)a2 + 5);
                *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
                *((_OWORD *)a1 + 5) = v144;
                a1[96] = a2[96];
                long long v145 = *((_OWORD *)a2 + 3);
                *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
                *((_OWORD *)a1 + 3) = v145;
              }
              break;
          }
        }
        else
        {
          type metadata accessor for V1Command.Request(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v79 = *((void *)a2 + 1);
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = v79;
              uint64_t v80 = *((void *)a2 + 3);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = v80;
              uint64_t v81 = *((void *)a2 + 5);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = v81;
              uint64_t v82 = *((void *)a2 + 7);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = v82;
              uint64_t v83 = *((void *)a2 + 9);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = v83;
              uint64_t v84 = type metadata accessor for IdMSAccount();
              uint64_t v85 = *(int *)(v84 + 20);
              uint64_t v179 = &a1[v85];
              uint64_t v184 = v84;
              long long v173 = &a2[v85];
              uint64_t v86 = sub_248174700();
              uint64_t v166 = *(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v166(v179, v173, v86);
              uint64_t v87 = *(int *)(v84 + 24);
              uint64_t v88 = &a1[v87];
              uint64_t v89 = &a2[v87];
              uint64_t v90 = *(void *)v89;
              uint64_t v91 = *((void *)v89 + 1);
              uint64_t v92 = *((void *)v89 + 2);
              uint64_t v93 = *((void *)v89 + 3);
              uint64_t v94 = *((void *)v89 + 4);
              uint64_t v95 = *((void *)v89 + 5);
              uint64_t v162 = *((void *)v89 + 7);
              uint64_t v167 = *((void *)v89 + 6);
              uint64_t v174 = *((void *)v89 + 8);
              LOBYTE(v179) = v89[72];
              sub_247FABF8C(*(void *)v89, v91, v92, v93, v94, v95, v167, v162, v174, (char)v179);
              *(void *)uint64_t v88 = v90;
              *((void *)v88 + 1) = v91;
              *((void *)v88 + 2) = v92;
              *((void *)v88 + 3) = v93;
              *((void *)v88 + 4) = v94;
              *((void *)v88 + 5) = v95;
              *((void *)v88 + 6) = v167;
              *((void *)v88 + 7) = v162;
              *((void *)v88 + 8) = v174;
              v88[72] = (char)v179;
              *(void *)&a1[*(int *)(v184 + 28)] = *(void *)&a2[*(int *)(v184 + 28)];
              uint64_t v185 = (int *)type metadata accessor for SignInCommand.Request(0);
              uint64_t v96 = v185[5];
              uint64_t v97 = &a1[v96];
              uint64_t v98 = &a2[v96];
              uint64_t v99 = *((void *)v98 + 1);
              *(void *)uint64_t v97 = *(void *)v98;
              *((void *)v97 + 1) = v99;
              uint64_t v100 = *((void *)v98 + 3);
              *((void *)v97 + 2) = *((void *)v98 + 2);
              *((void *)v97 + 3) = v100;
              uint64_t v101 = *((void *)v98 + 5);
              *((void *)v97 + 4) = *((void *)v98 + 4);
              *((void *)v97 + 5) = v101;
              uint64_t v102 = *((void *)v98 + 7);
              *((void *)v97 + 6) = *((void *)v98 + 6);
              *((void *)v97 + 7) = v102;
              uint64_t v103 = *((void *)v98 + 9);
              *((void *)v97 + 8) = *((void *)v98 + 8);
              *((void *)v97 + 9) = v103;
              long long v180 = (uint64_t *)(v98 + 80);
              unint64_t v104 = *((void *)v98 + 11);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v104 >> 60 == 15)
              {
                *((_OWORD *)v97 + 5) = *(_OWORD *)v180;
              }
              else
              {
                uint64_t v143 = *v180;
                sub_247FB6C20(*v180, v104);
                *((void *)v97 + 10) = v143;
                *((void *)v97 + 11) = v104;
              }
              a1[v185[6]] = a2[v185[6]];
              a1[v185[7]] = a2[v185[7]];
              break;
            case 2u:
              uint64_t v105 = *(void *)a2;
              unint64_t v106 = *((void *)a2 + 1);
              uint64_t v107 = *((void *)a2 + 2);
              unint64_t v108 = *((void *)a2 + 3);
              char v109 = a2[32];
              sub_2480E684C(v105, v106, v107, v108, v109);
              *(void *)a1 = v105;
              *((void *)a1 + 1) = v106;
              *((void *)a1 + 2) = v107;
              *((void *)a1 + 3) = v108;
              a1[32] = v109;
              break;
            case 3u:
              uint64_t v110 = *((void *)a2 + 1);
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = v110;
              uint64_t v111 = *((void *)a2 + 3);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = v111;
              uint64_t v112 = *((void *)a2 + 5);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = v112;
              uint64_t v113 = *((void *)a2 + 7);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = v113;
              uint64_t v114 = *((void *)a2 + 9);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = v114;
              uint64_t v115 = type metadata accessor for IdMSAccount();
              uint64_t v116 = *(int *)(v115 + 20);
              long long v181 = &a1[v116];
              uint64_t v186 = v115;
              long long v175 = &a2[v116];
              uint64_t v117 = sub_248174700();
              uint64_t v168 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v168(v181, v175, v117);
              uint64_t v118 = *(int *)(v115 + 24);
              uint64_t v119 = &a1[v118];
              uint64_t v120 = &a2[v118];
              uint64_t v121 = *((void *)v120 + 1);
              uint64_t v122 = *((void *)v120 + 2);
              uint64_t v123 = *((void *)v120 + 3);
              uint64_t v124 = *((void *)v120 + 4);
              uint64_t v125 = *((void *)v120 + 5);
              uint64_t v126 = *((void *)v120 + 6);
              uint64_t v163 = *((void *)v120 + 7);
              uint64_t v169 = *(void *)v120;
              uint64_t v176 = *((void *)v120 + 8);
              LOBYTE(v181) = v120[72];
              sub_247FABF8C(*(void *)v120, v121, v122, v123, v124, v125, v126, v163, v176, (char)v181);
              *(void *)uint64_t v119 = v169;
              *((void *)v119 + 1) = v121;
              *((void *)v119 + 2) = v122;
              *((void *)v119 + 3) = v123;
              *((void *)v119 + 4) = v124;
              *((void *)v119 + 5) = v125;
              *((void *)v119 + 6) = v126;
              *((void *)v119 + 7) = v163;
              *((void *)v119 + 8) = v176;
              v119[72] = (char)v181;
              *(void *)&a1[*(int *)(v186 + 28)] = *(void *)&a2[*(int *)(v186 + 28)];
              uint64_t v127 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
              uint64_t v128 = &a1[v127];
              uint64_t v129 = &a2[v127];
              uint64_t v130 = *(void *)&a2[v127 + 8];
              swift_bridgeObjectRetain();
              if (v130)
              {
                *(void *)uint64_t v128 = *(void *)v129;
                *((void *)v128 + 1) = v130;
                uint64_t v131 = *((void *)v129 + 3);
                *((void *)v128 + 2) = *((void *)v129 + 2);
                *((void *)v128 + 3) = v131;
                uint64_t v132 = *((void *)v129 + 5);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v132)
                {
                  *((void *)v128 + 4) = *((void *)v129 + 4);
                  *((void *)v128 + 5) = v132;
                  uint64_t v133 = *((void *)v129 + 7);
                  *((void *)v128 + 6) = *((void *)v129 + 6);
                  *((void *)v128 + 7) = v133;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v151 = *((_OWORD *)v129 + 3);
                  *((_OWORD *)v128 + 2) = *((_OWORD *)v129 + 2);
                  *((_OWORD *)v128 + 3) = v151;
                }
                v128[64] = v129[64];
              }
              else
              {
                long long v148 = *((_OWORD *)v129 + 3);
                *((_OWORD *)v128 + 2) = *((_OWORD *)v129 + 2);
                *((_OWORD *)v128 + 3) = v148;
                v128[64] = v129[64];
                long long v149 = *((_OWORD *)v129 + 1);
                *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
                *((_OWORD *)v128 + 1) = v149;
              }
              break;
            case 4u:
              uint64_t v134 = *(void *)a2;
              uint64_t v135 = *((void *)a2 + 1);
              uint64_t v136 = *((void *)a2 + 2);
              uint64_t v137 = *((void *)a2 + 3);
              uint64_t v138 = *((void *)a2 + 4);
              uint64_t v139 = *((void *)a2 + 5);
              uint64_t v140 = *((void *)a2 + 6);
              uint64_t v170 = *((void *)a2 + 8);
              uint64_t v177 = *((void *)a2 + 9);
              unint64_t v182 = *((void *)a2 + 10);
              unsigned __int8 v187 = a2[88];
              uint64_t v141 = *(void *)a2;
              uint64_t v142 = *((void *)a2 + 7);
              sub_247FF49AC(v141, v135, v136, v137, v138, v139, v140, v142, v170, v177, v182, v187);
              *(void *)a1 = v134;
              *((void *)a1 + 1) = v135;
              *((void *)a1 + 2) = v136;
              *((void *)a1 + 3) = v137;
              *((void *)a1 + 4) = v138;
              *((void *)a1 + 5) = v139;
              *((void *)a1 + 6) = v140;
              *((void *)a1 + 7) = v142;
              *((void *)a1 + 8) = v170;
              *((void *)a1 + 9) = v177;
              *((void *)a1 + 10) = v182;
              a1[88] = v187;
              break;
            default:
              *a1 = *a2;
              *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
              uint64_t v47 = *((void *)a2 + 2);
              if (v47)
              {
                *((void *)a1 + 1) = *((void *)a2 + 1);
                *((void *)a1 + 2) = v47;
                uint64_t v48 = *((void *)a2 + 4);
                *((void *)a1 + 3) = *((void *)a2 + 3);
                *((void *)a1 + 4) = v48;
                uint64_t v49 = *((void *)a2 + 6);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v49)
                {
                  *((void *)a1 + 5) = *((void *)a2 + 5);
                  *((void *)a1 + 6) = v49;
                  uint64_t v50 = *((void *)a2 + 8);
                  *((void *)a1 + 7) = *((void *)a2 + 7);
                  *((void *)a1 + 8) = v50;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v152 = *(_OWORD *)(a2 + 56);
                  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
                  *(_OWORD *)(a1 + 56) = v152;
                }
                a1[72] = a2[72];
              }
              else
              {
                long long v146 = *(_OWORD *)(a2 + 56);
                *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
                *(_OWORD *)(a1 + 56) = v146;
                a1[72] = a2[72];
                long long v147 = *(_OWORD *)(a2 + 24);
                *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
                *(_OWORD *)(a1 + 24) = v147;
              }
              uint64_t v153 = *((void *)a2 + 11);
              if (v153)
              {
                *((void *)a1 + 10) = *((void *)a2 + 10);
                *((void *)a1 + 11) = v153;
                uint64_t v154 = *((void *)a2 + 13);
                *((void *)a1 + 12) = *((void *)a2 + 12);
                *((void *)a1 + 13) = v154;
                uint64_t v155 = *((void *)a2 + 15);
                *((void *)a1 + 14) = *((void *)a2 + 14);
                *((void *)a1 + 15) = v155;
                uint64_t v156 = *((void *)a2 + 17);
                *((void *)a1 + 16) = *((void *)a2 + 16);
                *((void *)a1 + 17) = v156;
                uint64_t v157 = *((void *)a2 + 19);
                *((void *)a1 + 18) = *((void *)a2 + 18);
                *((void *)a1 + 19) = v157;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v158 = *((_OWORD *)a2 + 8);
                *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
                *((_OWORD *)a1 + 8) = v158;
                *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
                long long v159 = *((_OWORD *)a2 + 6);
                *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
                *((_OWORD *)a1 + 6) = v159;
              }
              *((void *)a1 + 20) = *((void *)a2 + 20);
              swift_bridgeObjectRetain();
              break;
          }
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_66;
    case 2u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v23 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v23;
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v24 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (!v24) {
        goto LABEL_25;
      }
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v24;
      uint64_t v25 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v25;
      uint64_t v26 = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v26)
      {
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = v26;
        uint64_t v27 = *((void *)a2 + 11);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v51 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v51;
      }
      a1[96] = a2[96];
      goto LABEL_66;
    case 3u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v28 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v28;
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v29 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (!v29) {
        goto LABEL_25;
      }
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = v29;
      uint64_t v30 = *((void *)a2 + 7);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = v30;
      uint64_t v31 = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31)
      {
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = v31;
        uint64_t v32 = *((void *)a2 + 11);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v52 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v52;
      }
      a1[96] = a2[96];
      goto LABEL_66;
    case 4u:
      *(_WORD *)a1 = *(_WORD *)a2;
      uint64_t v33 = *((void *)a2 + 2);
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = v33;
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v34 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (v34)
      {
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = v34;
        uint64_t v35 = *((void *)a2 + 7);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = v35;
        uint64_t v36 = *((void *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v36)
        {
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *((void *)a1 + 9) = v36;
          uint64_t v37 = *((void *)a2 + 11);
          *((void *)a1 + 10) = *((void *)a2 + 10);
          *((void *)a1 + 11) = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v53 = *((_OWORD *)a2 + 5);
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 5) = v53;
        }
        a1[96] = a2[96];
      }
      else
      {
LABEL_25:
        long long v41 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v41;
        a1[96] = a2[96];
        long long v42 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v42;
      }
      goto LABEL_66;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

char *assignWithCopy for CommandRouter.HandshakeFailure(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_248149C68((uint64_t)a1, type metadata accessor for CommandRouter.HandshakeFailure);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      uint64_t v6 = *((void *)a2 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v6)
      {
        long long v16 = *((_OWORD *)a2 + 3);
        long long v17 = *((_OWORD *)a2 + 4);
        long long v18 = *((_OWORD *)a2 + 5);
        a1[96] = a2[96];
        *((_OWORD *)a1 + 4) = v17;
        *((_OWORD *)a1 + 5) = v18;
        *((_OWORD *)a1 + 3) = v16;
        if (*((void *)a2 + 14)) {
          goto LABEL_5;
        }
LABEL_24:
        long long v19 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v19;
        if (*((void *)a2 + 18)) {
          goto LABEL_6;
        }
        goto LABEL_25;
      }
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((void *)a1 + 8) = *((void *)a2 + 8);
      *((void *)a1 + 9) = *((void *)a2 + 9);
      *((void *)a1 + 10) = *((void *)a2 + 10);
      *((void *)a1 + 11) = *((void *)a2 + 11);
      a1[96] = a2[96];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!*((void *)a2 + 14)) {
        goto LABEL_24;
      }
LABEL_5:
      *((void *)a1 + 13) = *((void *)a2 + 13);
      *((void *)a1 + 14) = *((void *)a2 + 14);
      *((void *)a1 + 15) = *((void *)a2 + 15);
      *((void *)a1 + 16) = *((void *)a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (*((void *)a2 + 18))
      {
LABEL_6:
        *((void *)a1 + 17) = *((void *)a2 + 17);
        *((void *)a1 + 18) = *((void *)a2 + 18);
        *((void *)a1 + 19) = *((void *)a2 + 19);
        *((void *)a1 + 20) = *((void *)a2 + 20);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_67;
      }
LABEL_25:
      long long v20 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v20;
LABEL_67:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1u:
      type metadata accessor for V1Command(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v24 = *(void *)a2;
        uint64_t v25 = *((void *)a2 + 1);
        uint64_t v26 = *((void *)a2 + 2);
        char v27 = a2[24];
        sub_2480E4780(v24, v25, v26, v27);
        *(void *)a1 = v24;
        *((void *)a1 + 1) = v25;
        *((void *)a1 + 2) = v26;
        a1[24] = v27;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          type metadata accessor for V1Command.Response(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = *((void *)a2 + 1);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = *((void *)a2 + 3);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = *((void *)a2 + 5);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = *((void *)a2 + 7);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = *((void *)a2 + 9);
              uint64_t v32 = type metadata accessor for IdMSAccount();
              uint64_t v33 = *(int *)(v32 + 20);
              uint64_t v133 = &a1[v33];
              uint64_t v138 = v32;
              uint64_t v126 = &a2[v33];
              uint64_t v34 = sub_248174700();
              uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v119(v133, v126, v34);
              uint64_t v35 = *(int *)(v32 + 24);
              uint64_t v36 = &a1[v35];
              uint64_t v37 = &a2[v35];
              uint64_t v38 = *((void *)v37 + 1);
              uint64_t v39 = *((void *)v37 + 2);
              uint64_t v40 = *((void *)v37 + 3);
              uint64_t v41 = *((void *)v37 + 4);
              uint64_t v42 = *((void *)v37 + 5);
              uint64_t v43 = *((void *)v37 + 6);
              uint64_t v116 = *((void *)v37 + 7);
              uint64_t v120 = *(void *)v37;
              uint64_t v127 = *((void *)v37 + 8);
              LOBYTE(v133) = v37[72];
              sub_247FABF8C(*(void *)v37, v38, v39, v40, v41, v42, v43, v116, v127, (char)v133);
              *(void *)uint64_t v36 = v120;
              *((void *)v36 + 1) = v38;
              *((void *)v36 + 2) = v39;
              *((void *)v36 + 3) = v40;
              *((void *)v36 + 4) = v41;
              *((void *)v36 + 5) = v42;
              *((void *)v36 + 6) = v43;
              *((void *)v36 + 7) = v116;
              *((void *)v36 + 8) = v127;
              v36[72] = (char)v133;
              *(void *)&a1[*(int *)(v138 + 28)] = *(void *)&a2[*(int *)(v138 + 28)];
              uint64_t v44 = type metadata accessor for SignInCommand.Response(0);
              *(void *)&a1[*(int *)(v44 + 20)] = *(void *)&a2[*(int *)(v44 + 20)];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              break;
            case 2u:
              type metadata accessor for AnisetteCommand.Response();
              int v45 = swift_getEnumCaseMultiPayload();
              uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v45]);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(a1, a2, v46);
              swift_storeEnumTagMultiPayload();
              break;
            case 3u:
              uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
              break;
            case 4u:
              uint64_t v48 = *(void *)a2;
              uint64_t v49 = *((void *)a2 + 1);
              uint64_t v51 = *((void *)a2 + 2);
              unint64_t v50 = *((void *)a2 + 3);
              sub_247FF4F40(v48, v49, v51, v50);
              *(void *)a1 = v48;
              *((void *)a1 + 1) = v49;
              *((void *)a1 + 2) = v51;
              *((void *)a1 + 3) = v50;
              break;
            default:
              *a1 = *a2;
              a1[1] = a2[1];
              *((void *)a1 + 1) = *((void *)a2 + 1);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
              uint64_t v8 = *((void *)a2 + 5);
              swift_bridgeObjectRetain();
              if (v8)
              {
                *((void *)a1 + 4) = *((void *)a2 + 4);
                *((void *)a1 + 5) = *((void *)a2 + 5);
                *((void *)a1 + 6) = *((void *)a2 + 6);
                *((void *)a1 + 7) = *((void *)a2 + 7);
                uint64_t v9 = *((void *)a2 + 9);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v9)
                {
                  *((void *)a1 + 8) = *((void *)a2 + 8);
                  *((void *)a1 + 9) = *((void *)a2 + 9);
                  *((void *)a1 + 10) = *((void *)a2 + 10);
                  *((void *)a1 + 11) = *((void *)a2 + 11);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v109 = *((_OWORD *)a2 + 5);
                  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
                  *((_OWORD *)a1 + 5) = v109;
                }
                a1[96] = a2[96];
              }
              else
              {
                *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
                long long v100 = *((_OWORD *)a2 + 3);
                long long v101 = *((_OWORD *)a2 + 4);
                long long v102 = *((_OWORD *)a2 + 5);
                a1[96] = a2[96];
                *((_OWORD *)a1 + 4) = v101;
                *((_OWORD *)a1 + 5) = v102;
                *((_OWORD *)a1 + 3) = v100;
              }
              break;
          }
        }
        else
        {
          type metadata accessor for V1Command.Request(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = *((void *)a2 + 1);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = *((void *)a2 + 3);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = *((void *)a2 + 5);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = *((void *)a2 + 7);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = *((void *)a2 + 9);
              uint64_t v52 = type metadata accessor for IdMSAccount();
              uint64_t v53 = *(int *)(v52 + 20);
              uint64_t v134 = &a1[v53];
              uint64_t v139 = v52;
              uint64_t v128 = &a2[v53];
              uint64_t v54 = sub_248174700();
              uint64_t v121 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v121(v134, v128, v54);
              uint64_t v55 = *(int *)(v52 + 24);
              uint64_t v56 = &a1[v55];
              uint64_t v57 = &a2[v55];
              uint64_t v58 = *(void *)v57;
              uint64_t v59 = *((void *)v57 + 1);
              uint64_t v60 = *((void *)v57 + 2);
              uint64_t v61 = *((void *)v57 + 3);
              uint64_t v62 = *((void *)v57 + 4);
              uint64_t v63 = *((void *)v57 + 5);
              uint64_t v117 = *((void *)v57 + 7);
              uint64_t v122 = *((void *)v57 + 6);
              uint64_t v129 = *((void *)v57 + 8);
              LOBYTE(v134) = v57[72];
              sub_247FABF8C(*(void *)v57, v59, v60, v61, v62, v63, v122, v117, v129, (char)v134);
              *(void *)uint64_t v56 = v58;
              *((void *)v56 + 1) = v59;
              *((void *)v56 + 2) = v60;
              *((void *)v56 + 3) = v61;
              *((void *)v56 + 4) = v62;
              *((void *)v56 + 5) = v63;
              *((void *)v56 + 6) = v122;
              *((void *)v56 + 7) = v117;
              *((void *)v56 + 8) = v129;
              v56[72] = (char)v134;
              *(void *)&a1[*(int *)(v139 + 28)] = *(void *)&a2[*(int *)(v139 + 28)];
              uint64_t v140 = (int *)type metadata accessor for SignInCommand.Request(0);
              uint64_t v64 = v140[5];
              uint64_t v65 = &a1[v64];
              uint64_t v66 = &a2[v64];
              *(void *)uint64_t v65 = *(void *)v66;
              *((void *)v65 + 1) = *((void *)v66 + 1);
              *((void *)v65 + 2) = *((void *)v66 + 2);
              *((void *)v65 + 3) = *((void *)v66 + 3);
              *((void *)v65 + 4) = *((void *)v66 + 4);
              *((void *)v65 + 5) = *((void *)v66 + 5);
              *((void *)v65 + 6) = *((void *)v66 + 6);
              *((void *)v65 + 7) = *((void *)v66 + 7);
              *((void *)v65 + 8) = *((void *)v66 + 8);
              *((void *)v65 + 9) = *((void *)v66 + 9);
              uint64_t v135 = (uint64_t *)(v66 + 80);
              unint64_t v67 = *((void *)v66 + 11);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v67 >> 60 == 15)
              {
                *((_OWORD *)v65 + 5) = *(_OWORD *)v135;
              }
              else
              {
                uint64_t v99 = *v135;
                sub_247FB6C20(*v135, v67);
                *((void *)v65 + 10) = v99;
                *((void *)v65 + 11) = v67;
              }
              a1[v140[6]] = a2[v140[6]];
              a1[v140[7]] = a2[v140[7]];
              break;
            case 2u:
              uint64_t v68 = *(void *)a2;
              unint64_t v69 = *((void *)a2 + 1);
              uint64_t v70 = *((void *)a2 + 2);
              unint64_t v71 = *((void *)a2 + 3);
              char v72 = a2[32];
              sub_2480E684C(v68, v69, v70, v71, v72);
              *(void *)a1 = v68;
              *((void *)a1 + 1) = v69;
              *((void *)a1 + 2) = v70;
              *((void *)a1 + 3) = v71;
              a1[32] = v72;
              break;
            case 3u:
              *(void *)a1 = *(void *)a2;
              *((void *)a1 + 1) = *((void *)a2 + 1);
              *((void *)a1 + 2) = *((void *)a2 + 2);
              *((void *)a1 + 3) = *((void *)a2 + 3);
              *((void *)a1 + 4) = *((void *)a2 + 4);
              *((void *)a1 + 5) = *((void *)a2 + 5);
              *((void *)a1 + 6) = *((void *)a2 + 6);
              *((void *)a1 + 7) = *((void *)a2 + 7);
              *((void *)a1 + 8) = *((void *)a2 + 8);
              *((void *)a1 + 9) = *((void *)a2 + 9);
              uint64_t v73 = type metadata accessor for IdMSAccount();
              uint64_t v74 = *(int *)(v73 + 20);
              uint64_t v136 = &a1[v74];
              uint64_t v141 = v73;
              uint64_t v130 = &a2[v74];
              uint64_t v75 = sub_248174700();
              uint64_t v123 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v123(v136, v130, v75);
              uint64_t v76 = *(int *)(v73 + 24);
              unint64_t v77 = &a1[v76];
              uint64_t v78 = &a2[v76];
              uint64_t v79 = *((void *)v78 + 1);
              uint64_t v80 = *((void *)v78 + 2);
              uint64_t v81 = *((void *)v78 + 3);
              uint64_t v82 = *((void *)v78 + 4);
              uint64_t v83 = *((void *)v78 + 5);
              uint64_t v84 = *((void *)v78 + 6);
              uint64_t v118 = *((void *)v78 + 7);
              uint64_t v124 = *(void *)v78;
              uint64_t v131 = *((void *)v78 + 8);
              LOBYTE(v136) = v78[72];
              sub_247FABF8C(*(void *)v78, v79, v80, v81, v82, v83, v84, v118, v131, (char)v136);
              *(void *)unint64_t v77 = v124;
              *((void *)v77 + 1) = v79;
              *((void *)v77 + 2) = v80;
              *((void *)v77 + 3) = v81;
              *((void *)v77 + 4) = v82;
              *((void *)v77 + 5) = v83;
              *((void *)v77 + 6) = v84;
              *((void *)v77 + 7) = v118;
              *((void *)v77 + 8) = v131;
              v77[72] = (char)v136;
              *(void *)&a1[*(int *)(v141 + 28)] = *(void *)&a2[*(int *)(v141 + 28)];
              uint64_t v85 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
              uint64_t v86 = &a1[v85];
              uint64_t v87 = &a2[v85];
              uint64_t v88 = *(void *)&a2[v85 + 8];
              swift_bridgeObjectRetain();
              if (v88)
              {
                *(void *)uint64_t v86 = *(void *)v87;
                *((void *)v86 + 1) = *((void *)v87 + 1);
                *((void *)v86 + 2) = *((void *)v87 + 2);
                *((void *)v86 + 3) = *((void *)v87 + 3);
                uint64_t v89 = *((void *)v87 + 5);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v89)
                {
                  *((void *)v86 + 4) = *((void *)v87 + 4);
                  *((void *)v86 + 5) = *((void *)v87 + 5);
                  *((void *)v86 + 6) = *((void *)v87 + 6);
                  *((void *)v86 + 7) = *((void *)v87 + 7);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v114 = *((_OWORD *)v87 + 3);
                  *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
                  *((_OWORD *)v86 + 3) = v114;
                }
                v86[64] = v87[64];
              }
              else
              {
                *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
                long long v106 = *((_OWORD *)v87 + 1);
                long long v107 = *((_OWORD *)v87 + 2);
                long long v108 = *((_OWORD *)v87 + 3);
                v86[64] = v87[64];
                *((_OWORD *)v86 + 2) = v107;
                *((_OWORD *)v86 + 3) = v108;
                *((_OWORD *)v86 + 1) = v106;
              }
              break;
            case 4u:
              uint64_t v90 = *(void *)a2;
              uint64_t v91 = *((void *)a2 + 1);
              uint64_t v92 = *((void *)a2 + 2);
              uint64_t v93 = *((void *)a2 + 3);
              uint64_t v94 = *((void *)a2 + 4);
              uint64_t v95 = *((void *)a2 + 5);
              uint64_t v96 = *((void *)a2 + 6);
              uint64_t v125 = *((void *)a2 + 8);
              uint64_t v132 = *((void *)a2 + 9);
              unint64_t v137 = *((void *)a2 + 10);
              unsigned __int8 v142 = a2[88];
              uint64_t v97 = *(void *)a2;
              uint64_t v98 = *((void *)a2 + 7);
              sub_247FF49AC(v97, v91, v92, v93, v94, v95, v96, v98, v125, v132, v137, v142);
              *(void *)a1 = v90;
              *((void *)a1 + 1) = v91;
              *((void *)a1 + 2) = v92;
              *((void *)a1 + 3) = v93;
              *((void *)a1 + 4) = v94;
              *((void *)a1 + 5) = v95;
              *((void *)a1 + 6) = v96;
              *((void *)a1 + 7) = v98;
              *((void *)a1 + 8) = v125;
              *((void *)a1 + 9) = v132;
              *((void *)a1 + 10) = v137;
              a1[88] = v142;
              break;
            default:
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              if (*((void *)a2 + 2))
              {
                *((void *)a1 + 1) = *((void *)a2 + 1);
                *((void *)a1 + 2) = *((void *)a2 + 2);
                *((void *)a1 + 3) = *((void *)a2 + 3);
                *((void *)a1 + 4) = *((void *)a2 + 4);
                uint64_t v28 = *((void *)a2 + 6);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v28)
                {
                  *((void *)a1 + 5) = *((void *)a2 + 5);
                  *((void *)a1 + 6) = *((void *)a2 + 6);
                  *((void *)a1 + 7) = *((void *)a2 + 7);
                  *((void *)a1 + 8) = *((void *)a2 + 8);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v110 = *(_OWORD *)(a2 + 56);
                  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
                  *(_OWORD *)(a1 + 56) = v110;
                }
                a1[72] = a2[72];
              }
              else
              {
                *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
                long long v103 = *(_OWORD *)(a2 + 24);
                long long v104 = *(_OWORD *)(a2 + 40);
                long long v105 = *(_OWORD *)(a2 + 56);
                a1[72] = a2[72];
                *(_OWORD *)(a1 + 40) = v104;
                *(_OWORD *)(a1 + 56) = v105;
                *(_OWORD *)(a1 + 24) = v103;
              }
              if (*((void *)a2 + 11))
              {
                *((void *)a1 + 10) = *((void *)a2 + 10);
                *((void *)a1 + 11) = *((void *)a2 + 11);
                *((void *)a1 + 12) = *((void *)a2 + 12);
                *((void *)a1 + 13) = *((void *)a2 + 13);
                *((void *)a1 + 14) = *((void *)a2 + 14);
                *((void *)a1 + 15) = *((void *)a2 + 15);
                *((void *)a1 + 16) = *((void *)a2 + 16);
                *((void *)a1 + 17) = *((void *)a2 + 17);
                *((void *)a1 + 18) = *((void *)a2 + 18);
                *((void *)a1 + 19) = *((void *)a2 + 19);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
                long long v111 = *((_OWORD *)a2 + 6);
                long long v112 = *((_OWORD *)a2 + 7);
                long long v113 = *((_OWORD *)a2 + 9);
                *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
                *((_OWORD *)a1 + 9) = v113;
                *((_OWORD *)a1 + 6) = v111;
                *((_OWORD *)a1 + 7) = v112;
              }
              *((void *)a1 + 20) = *((void *)a2 + 20);
              swift_bridgeObjectRetain();
              break;
          }
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_67;
    case 2u:
      *a1 = *a2;
      a1[1] = a2[1];
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v10 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_26;
      }
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      uint64_t v11 = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11)
      {
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v29 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v29;
      }
      a1[96] = a2[96];
      goto LABEL_67;
    case 3u:
      *a1 = *a2;
      a1[1] = a2[1];
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v12 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (!v12) {
        goto LABEL_26;
      }
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      *((void *)a1 + 6) = *((void *)a2 + 6);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      uint64_t v13 = *((void *)a2 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13)
      {
        *((void *)a1 + 8) = *((void *)a2 + 8);
        *((void *)a1 + 9) = *((void *)a2 + 9);
        *((void *)a1 + 10) = *((void *)a2 + 10);
        *((void *)a1 + 11) = *((void *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v30 = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_OWORD *)a1 + 5) = v30;
      }
      a1[96] = a2[96];
      goto LABEL_67;
    case 4u:
      *a1 = *a2;
      a1[1] = a2[1];
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      uint64_t v14 = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      if (v14)
      {
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *((void *)a1 + 5) = *((void *)a2 + 5);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        uint64_t v15 = *((void *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15)
        {
          *((void *)a1 + 8) = *((void *)a2 + 8);
          *((void *)a1 + 9) = *((void *)a2 + 9);
          *((void *)a1 + 10) = *((void *)a2 + 10);
          *((void *)a1 + 11) = *((void *)a2 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v31 = *((_OWORD *)a2 + 5);
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          *((_OWORD *)a1 + 5) = v31;
        }
        a1[96] = a2[96];
      }
      else
      {
LABEL_26:
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        long long v21 = *((_OWORD *)a2 + 3);
        long long v22 = *((_OWORD *)a2 + 4);
        long long v23 = *((_OWORD *)a2 + 5);
        a1[96] = a2[96];
        *((_OWORD *)a1 + 4) = v22;
        *((_OWORD *)a1 + 5) = v23;
        *((_OWORD *)a1 + 3) = v21;
      }
      goto LABEL_67;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t sub_248149C68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for CommandRouter.HandshakeFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for V1Command(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = type metadata accessor for V1Command.Response(0);
      int v30 = swift_getEnumCaseMultiPayload();
      switch(v30)
      {
        case 3:
          uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
          swift_storeEnumTagMultiPayload();
          break;
        case 2:
          type metadata accessor for AnisetteCommand.Response();
          int v62 = swift_getEnumCaseMultiPayload();
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v62]);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v63 - 8) + 32))(a1, a2, v63);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          long long v31 = a2[3];
          a1[2] = a2[2];
          a1[3] = v31;
          a1[4] = a2[4];
          long long v32 = a2[1];
          *a1 = *a2;
          a1[1] = v32;
          uint64_t v33 = (int *)type metadata accessor for IdMSAccount();
          uint64_t v34 = v33[5];
          uint64_t v35 = (char *)a1 + v34;
          uint64_t v36 = (char *)a2 + v34;
          uint64_t v37 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
          uint64_t v38 = v33[6];
          uint64_t v39 = (_OWORD *)((char *)a1 + v38);
          uint64_t v40 = (_OWORD *)((char *)a2 + v38);
          long long v41 = v40[3];
          v39[2] = v40[2];
          void v39[3] = v41;
          *(_OWORD *)((char *)v39 + 57) = *(_OWORD *)((char *)v40 + 57);
          long long v42 = v40[1];
          *uint64_t v39 = *v40;
          v39[1] = v42;
          *(void *)((char *)a1 + v33[7]) = *(void *)((char *)a2 + v33[7]);
          uint64_t v43 = type metadata accessor for SignInCommand.Response(0);
          *(void *)((char *)a1 + *(int *)(v43 + 20)) = *(void *)((char *)a2 + *(int *)(v43 + 20));
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
          break;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v8 = type metadata accessor for V1Command.Request(0);
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 3)
      {
        long long v44 = a2[3];
        a1[2] = a2[2];
        a1[3] = v44;
        a1[4] = a2[4];
        long long v45 = a2[1];
        *a1 = *a2;
        a1[1] = v45;
        uint64_t v46 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v47 = v46[5];
        uint64_t v48 = (char *)a1 + v47;
        uint64_t v49 = (char *)a2 + v47;
        uint64_t v50 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
        uint64_t v51 = v46[6];
        uint64_t v52 = (_OWORD *)((char *)a1 + v51);
        uint64_t v53 = (_OWORD *)((char *)a2 + v51);
        long long v54 = v53[3];
        void v52[2] = v53[2];
        v52[3] = v54;
        *(_OWORD *)((char *)v52 + 57) = *(_OWORD *)((char *)v53 + 57);
        long long v55 = v53[1];
        *uint64_t v52 = *v53;
        v52[1] = v55;
        *(void *)((char *)a1 + v46[7]) = *(void *)((char *)a2 + v46[7]);
        uint64_t v56 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        long long v59 = *((_OWORD *)v58 + 3);
        *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
        *((_OWORD *)v57 + 3) = v59;
        v57[64] = v58[64];
        long long v60 = *((_OWORD *)v58 + 1);
        *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
        *((_OWORD *)v57 + 1) = v60;
        swift_storeEnumTagMultiPayload();
      }
      else if (v9 == 1)
      {
        long long v10 = a2[3];
        a1[2] = a2[2];
        a1[3] = v10;
        a1[4] = a2[4];
        long long v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v13 = v12[5];
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
        uint64_t v17 = v12[6];
        long long v18 = (_OWORD *)((char *)a1 + v17);
        long long v19 = (_OWORD *)((char *)a2 + v17);
        long long v20 = v19[3];
        v18[2] = v19[2];
        void v18[3] = v20;
        *(_OWORD *)((char *)v18 + 57) = *(_OWORD *)((char *)v19 + 57);
        long long v21 = v19[1];
        _OWORD *v18 = *v19;
        v18[1] = v21;
        *(void *)((char *)a1 + v12[7]) = *(void *)((char *)a2 + v12[7]);
        long long v22 = (int *)type metadata accessor for SignInCommand.Request(0);
        uint64_t v23 = v22[5];
        uint64_t v24 = (_OWORD *)((char *)a1 + v23);
        uint64_t v25 = (_OWORD *)((char *)a2 + v23);
        long long v26 = v25[3];
        _DWORD v24[2] = v25[2];
        v24[3] = v26;
        long long v27 = v25[5];
        v24[4] = v25[4];
        v24[5] = v27;
        long long v28 = v25[1];
        _OWORD *v24 = *v25;
        v24[1] = v28;
        *((unsigned char *)a1 + v22[6]) = *((unsigned char *)a2 + v22[6]);
        *((unsigned char *)a1 + v22[7]) = *((unsigned char *)a2 + v22[7]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for CommandRouter.HandshakeFailure(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_248149C68((uint64_t)a1, type metadata accessor for CommandRouter.HandshakeFailure);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for V1Command(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v29 = type metadata accessor for V1Command.Response(0);
        int v30 = swift_getEnumCaseMultiPayload();
        switch(v30)
        {
          case 3:
            uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
            swift_storeEnumTagMultiPayload();
            break;
          case 2:
            type metadata accessor for AnisetteCommand.Response();
            int v62 = swift_getEnumCaseMultiPayload();
            uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(off_265237738[v62]);
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v63 - 8) + 32))(a1, a2, v63);
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            break;
          case 1:
            long long v31 = a2[3];
            a1[2] = a2[2];
            a1[3] = v31;
            a1[4] = a2[4];
            long long v32 = a2[1];
            *a1 = *a2;
            a1[1] = v32;
            uint64_t v33 = (int *)type metadata accessor for IdMSAccount();
            uint64_t v34 = v33[5];
            uint64_t v35 = (char *)a1 + v34;
            uint64_t v36 = (char *)a2 + v34;
            uint64_t v37 = sub_248174700();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
            uint64_t v38 = v33[6];
            uint64_t v39 = (_OWORD *)((char *)a1 + v38);
            uint64_t v40 = (_OWORD *)((char *)a2 + v38);
            long long v41 = v40[3];
            v39[2] = v40[2];
            void v39[3] = v41;
            *(_OWORD *)((char *)v39 + 57) = *(_OWORD *)((char *)v40 + 57);
            long long v42 = v40[1];
            *uint64_t v39 = *v40;
            v39[1] = v42;
            *(void *)((char *)a1 + v33[7]) = *(void *)((char *)a2 + v33[7]);
            uint64_t v43 = type metadata accessor for SignInCommand.Response(0);
            *(void *)((char *)a1 + *(int *)(v43 + 20)) = *(void *)((char *)a2 + *(int *)(v43 + 20));
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
            break;
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_21:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v8 = type metadata accessor for V1Command.Request(0);
        int v9 = swift_getEnumCaseMultiPayload();
        if (v9 == 3)
        {
          long long v44 = a2[3];
          a1[2] = a2[2];
          a1[3] = v44;
          a1[4] = a2[4];
          long long v45 = a2[1];
          *a1 = *a2;
          a1[1] = v45;
          uint64_t v46 = (int *)type metadata accessor for IdMSAccount();
          uint64_t v47 = v46[5];
          uint64_t v48 = (char *)a1 + v47;
          uint64_t v49 = (char *)a2 + v47;
          uint64_t v50 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
          uint64_t v51 = v46[6];
          uint64_t v52 = (_OWORD *)((char *)a1 + v51);
          uint64_t v53 = (_OWORD *)((char *)a2 + v51);
          long long v54 = v53[3];
          void v52[2] = v53[2];
          v52[3] = v54;
          *(_OWORD *)((char *)v52 + 57) = *(_OWORD *)((char *)v53 + 57);
          long long v55 = v53[1];
          *uint64_t v52 = *v53;
          v52[1] = v55;
          *(void *)((char *)a1 + v46[7]) = *(void *)((char *)a2 + v46[7]);
          uint64_t v56 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
          uint64_t v57 = (char *)a1 + v56;
          uint64_t v58 = (char *)a2 + v56;
          long long v59 = *((_OWORD *)v58 + 3);
          *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
          *((_OWORD *)v57 + 3) = v59;
          v57[64] = v58[64];
          long long v60 = *((_OWORD *)v58 + 1);
          *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
          *((_OWORD *)v57 + 1) = v60;
          swift_storeEnumTagMultiPayload();
        }
        else if (v9 == 1)
        {
          long long v10 = a2[3];
          a1[2] = a2[2];
          a1[3] = v10;
          a1[4] = a2[4];
          long long v11 = a2[1];
          *a1 = *a2;
          a1[1] = v11;
          uint64_t v12 = (int *)type metadata accessor for IdMSAccount();
          uint64_t v13 = v12[5];
          uint64_t v14 = (char *)a1 + v13;
          uint64_t v15 = (char *)a2 + v13;
          uint64_t v16 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
          uint64_t v17 = v12[6];
          long long v18 = (_OWORD *)((char *)a1 + v17);
          long long v19 = (_OWORD *)((char *)a2 + v17);
          long long v20 = v19[3];
          v18[2] = v19[2];
          void v18[3] = v20;
          *(_OWORD *)((char *)v18 + 57) = *(_OWORD *)((char *)v19 + 57);
          long long v21 = v19[1];
          _OWORD *v18 = *v19;
          v18[1] = v21;
          *(void *)((char *)a1 + v12[7]) = *(void *)((char *)a2 + v12[7]);
          long long v22 = (int *)type metadata accessor for SignInCommand.Request(0);
          uint64_t v23 = v22[5];
          uint64_t v24 = (_OWORD *)((char *)a1 + v23);
          uint64_t v25 = (_OWORD *)((char *)a2 + v23);
          long long v26 = v25[3];
          _DWORD v24[2] = v25[2];
          v24[3] = v26;
          long long v27 = v25[5];
          v24[4] = v25[4];
          v24[5] = v27;
          long long v28 = v25[1];
          _OWORD *v24 = *v25;
          v24[1] = v28;
          *((unsigned char *)a1 + v22[6]) = *((unsigned char *)a2 + v22[6]);
          *((unsigned char *)a1 + v22[7]) = *((unsigned char *)a2 + v22[7]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_21;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_24814A6DC()
{
  uint64_t result = type metadata accessor for V1Command(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_24814A77C()
{
  unint64_t result = qword_2692DBFB0;
  if (!qword_2692DBFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692DBFB0);
  }
  return result;
}

uint64_t sub_24814A7D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24814A838(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24814A8A0(uint64_t a1)
{
  return sub_248139378(a1, v1);
}

uint64_t sub_24814A8A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24814A90C()
{
  return objectdestroy_196Tm(56);
}

uint64_t sub_24814A914(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  int v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *int v9 = v2;
  v9[1] = sub_247FD79D0;
  return sub_2481379AC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24814A9DC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_24814AA04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if (a10)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)sub_247FF6AA4(a5, a6);
  }
}

void sub_24814AAA0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if (a10)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6BFC(a5, a6);
  }
}

uint64_t sub_24814AB3C()
{
  swift_release();
  if (v0[5])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[9])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (v0[14])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 192, 7);
}

uint64_t sub_24814ABD8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_247FD79D0;
  return sub_248137738(a1, v4, (uint64_t *)(v1 + 24));
}

unint64_t sub_24814AC88()
{
  unint64_t result = qword_2692D5890;
  if (!qword_2692D5890)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2692D5890);
  }
  return result;
}

uint64_t sub_24814ACC8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24814ACDC()
{
  return objectdestroy_196Tm(40);
}

uint64_t sub_24814ACE4()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FCB950;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_248134958, v2, 0);
}

id sub_24814AD9C()
{
  return objc_msgSend(*v0, sel_isNetworkReachable);
}

uint64_t dispatch thunk of AISInternetReachabilityProvider.isNetworkReachable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *SignInPreflightHelper.signInRequestHandler.getter()
{
  sub_2481749F0();
  if (!v2) {
    return 0;
  }
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  return &unk_2692DC040;
}

uint64_t sub_24814AE4C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = *a2;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  void *v5 = v3;
  v5[1] = sub_247FCB950;
  return v7(v4);
}

uint64_t sub_24814AF24@<X0>(void *a1@<X8>)
{
  swift_retain();
  sub_2481749F0();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_24814AF78(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = &unk_2692DC088;
    *(void *)(v4 + 16) = &unk_2692DC088;
    *(void *)(v4 + 24) = v3;
  }
  else
  {
    uint64_t v5 = 0;
  }
  sub_247F98D10(v1);
  swift_retain();
  sub_247F98D10((uint64_t)v5);
  sub_248174A00();
  sub_247F98D68((uint64_t)v5);
  return swift_release();
}

uint64_t sub_24814B06C(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_247FC8B14;
  return v5();
}

uint64_t sub_24814B148()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24814B180(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692DC038 + dword_2692DC038);
  return v6(a1, v4);
}

uint64_t SignInPreflightHelper.signInRequestHandler.setter(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
  }
  sub_247F98D10(a1);
  sub_248174A00();
  return sub_247F98D68(a1);
}

uint64_t sub_24814B2C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2692DC048 + dword_2692DC048);
  return v8(a1, a2, v6);
}

void (*SignInPreflightHelper.signInRequestHandler.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  v2[6] = sub_2481749E0();
  v2[7] = v3;
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = &unk_2692DC068;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  long long v2[4] = v7;
  v2[5] = v6;
  sub_247F98D10(v4);
  return sub_24814B444;
}

void sub_24814B444(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[4];
  if (a2)
  {
    uint64_t v4 = v2[5];
    if (v3)
    {
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      uint64_t v6 = &unk_2692DC058;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v5 = 0;
    }
    uint64_t v11 = (void (*)(uint64_t *, void))v2[6];
    uint64_t v10 = (uint64_t *)v2[7];
    uint64_t v12 = *v10;
    *uint64_t v10 = (uint64_t)v6;
    v10[1] = v5;
    sub_247F98D10(v3);
    sub_247F98D68(v12);
    sub_247F98D68(v2[4]);
    v11(v2, 0);
  }
  else
  {
    if (v3)
    {
      uint64_t v7 = v2[5];
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v3;
      *(void *)(v8 + 24) = v7;
      int v9 = &unk_2692DC060;
    }
    else
    {
      int v9 = 0;
      uint64_t v8 = 0;
    }
    uint64_t v14 = (void (*)(uint64_t *, void))v2[6];
    uint64_t v13 = (uint64_t *)v2[7];
    uint64_t v15 = *v13;
    *uint64_t v13 = (uint64_t)v9;
    v13[1] = v8;
    sub_247F98D68(v15);
    v14(v2, 0);
  }
  free(v2);
}

uint64_t sub_24814B578(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2692DC048 + dword_2692DC048);
  return v8(a1, a2, v6);
}

uint64_t sub_24814B640(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FCB950;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2692DC048 + dword_2692DC048);
  return v8(a1, a2, v6);
}

uint64_t SignInPreflightHelper.$signInRequestHandler.getter()
{
  return sub_248174A10();
}

uint64_t SignInPreflightHelper.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DC070);
  swift_allocObject();
  uint64_t result = sub_2481749D0();
  *a1 = result;
  return result;
}

uint64_t SignInPreflightHelper.onSignInRequest(doExtra:)(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
  }
  swift_retain();
  sub_247F98D10(a1);
  sub_248174A00();
  return swift_release();
}

uint64_t sub_24814B814(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2692DC048 + dword_2692DC048);
  return v8(a1, a2, v6);
}

ValueMetadata *type metadata accessor for SignInPreflightHelper()
{
  return &type metadata for SignInPreflightHelper;
}

uint64_t sub_24814B8F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_2692DC048 + dword_2692DC048);
  return v8(a1, a2, v6);
}

void (*sub_24814B9D8())(void *, void)
{
  return sub_24814B9E4(&qword_2692D6630);
}

void (*sub_24814B9E4(uint64_t *a1))(void *, void)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_2481749F0();
  if (v3[0] == -1)
  {
    v3[0] = 0;
    sub_248174A00();
  }
  uint64_t result = (void (*)(void *, void))sub_2481749E0();
  if (*v2 == -1)
  {
    __break(1u);
  }
  else
  {
    ++*v2;
    result(v3, 0);
    sub_2481749F0();
    return (void (*)(void *, void))v3[0];
  }
  return result;
}

uint64_t AutomaticSetupModelExchange.init(queue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = &unk_2692DC090;
  a2[1] = 0;
  a2[2] = &unk_2692DC098;
  a2[3] = 0;
  a2[4] = &unk_2692DC0A0;
  a2[5] = 0;
  a2[6] = &unk_2692DC0A8;
  a2[7] = 0;
  a2[8] = &unk_2692DC0B0;
  a2[9] = 0;
  a2[10] = &unk_2692DC0B8;
  a2[11] = 0;
  a2[12] = &unk_2692DC0C0;
  a2[13] = 0;
  a2[14] = &unk_2692DC0C8;
  a2[15] = 0;
  a2[16] = &unk_2692DC0D0;
  a2[17] = 0;
  a2[18] = &unk_2692DC0D8;
  a2[19] = 0;
  a2[20] = result;
  a2[21] = &unk_2692DC0E0;
  a2[22] = 0;
  a2[23] = &unk_2692DC0E8;
  a2[24] = 0;
  a2[25] = &unk_2692DC0F0;
  a2[26] = 0;
  a2[27] = &unk_2692DC0F8;
  a2[28] = 0;
  a2[29] = &unk_2692DC100;
  a2[30] = 0;
  a2[31] = &unk_2692DC108;
  a2[32] = 0;
  a2[33] = &unk_2692DC110;
  a2[34] = 0;
  a2[35] = &unk_2692DC118;
  a2[36] = 0;
  a2[37] = &unk_2692DC120;
  a2[38] = 0;
  a2[39] = &unk_2692DC128;
  a2[40] = 0;
  a2[41] = &unk_2692DC130;
  a2[42] = 0;
  a2[43] = &unk_2692DC138;
  a2[44] = 0;
  a2[45] = &unk_2692DC140;
  a2[46] = 0;
  a2[47] = &unk_2692DC148;
  a2[48] = 0;
  a2[49] = &unk_2692DC150;
  a2[50] = 0;
  a2[51] = &unk_2692DC158;
  a2[52] = 0;
  a2[53] = &unk_2692DC160;
  a2[54] = 0;
  a2[55] = &unk_2692DC168;
  a2[56] = 0;
  a2[57] = &unk_2692DC170;
  a2[58] = 0;
  a2[59] = &unk_2692DC178;
  a2[60] = 0;
  a2[61] = &unk_2692DC180;
  a2[62] = 0;
  a2[63] = &unk_2692DC188;
  a2[64] = 0;
  a2[65] = &unk_2692DC190;
  a2[66] = 0;
  a2[67] = &unk_2692DC198;
  a2[68] = 0;
  a2[69] = &unk_2692DC1A0;
  a2[70] = 0;
  a2[71] = &unk_2692DC1A8;
  a2[72] = 0;
  a2[73] = &unk_2692DC1B0;
  a2[74] = 0;
  a2[75] = &unk_2692DC1B8;
  a2[76] = 0;
  a2[77] = &unk_2692DC1C0;
  a2[78] = 0;
  a2[79] = &unk_2692DC1C8;
  a2[80] = 0;
  a2[81] = &unk_2692DC1D0;
  a2[82] = 0;
  a2[83] = &unk_2692DC1D8;
  a2[84] = 0;
  a2[85] = &unk_2692DC1E0;
  a2[86] = 0;
  return result;
}

uint64_t sub_24814BE08(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 8392) = v2;
  *(void *)(v3 + 8384) = a2;
  *(void *)(v3 + 8376) = a1;
  type metadata accessor for SignInModel();
  *(void *)(v3 + 8400) = swift_task_alloc();
  type metadata accessor for AuthenticationModel();
  uint64_t v4 = swift_task_alloc();
  long long v5 = v2[1];
  *(_OWORD *)(v3 + 8416) = *v2;
  *(_OWORD *)(v3 + 8432) = v5;
  long long v6 = v2[3];
  *(_OWORD *)(v3 + 8448) = v2[2];
  *(_OWORD *)(v3 + 8464) = v6;
  long long v7 = v2[5];
  *(_OWORD *)(v3 + 8480) = v2[4];
  *(_OWORD *)(v3 + 8496) = v7;
  long long v8 = v2[7];
  *(_OWORD *)(v3 + 8512) = v2[6];
  *(_OWORD *)(v3 + 8528) = v8;
  long long v9 = v2[9];
  *(_OWORD *)(v3 + 8544) = v2[8];
  *(void *)(v3 + 8408) = v4;
  *(_OWORD *)(v3 + 8560) = v9;
  return MEMORY[0x270FA2498](sub_24814BF08, 0, 0);
}

uint64_t sub_24814BF08()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 8384);
  uint64_t v2 = *(void *)(v0 + 8376);
  int v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6FD0);
  sub_2481285A0((uint64_t)&v1[*(int *)(v4 + 28)], v2, (uint64_t (*)(void))type metadata accessor for SetupModel);
  uint64_t v5 = *(void *)(v2 + 40);
  *(void *)(v0 + 8576) = v5;
  uint64_t v6 = *(void *)(v2 + 48);
  *(void *)(v0 + 8584) = v6;
  uint64_t v7 = *(void *)(v2 + 56);
  *(void *)(v0 + 8592) = v7;
  uint64_t v8 = *(void *)(v2 + 64);
  *(void *)(v0 + 8600) = v8;
  uint64_t v9 = *(void *)(v2 + 72);
  *(void *)(v0 + 8608) = v9;
  uint64_t v10 = *(void *)(v2 + 80);
  *(void *)(v0 + 8616) = v10;
  int v11 = *(unsigned __int8 *)(v2 + 88);
  *(unsigned char *)(v0 + 8369) = v11;
  switch(v11)
  {
    case 250:
      if (v3) {
        goto LABEL_21;
      }
      uint64_t v12 = (const void *)(*(void *)(v0 + 8392) + 160);
      *(_OWORD *)(v0 + 16) = *(_OWORD *)(v0 + 8416);
      uint64_t v13 = v0 + 16;
      long long v14 = *(_OWORD *)(v0 + 8448);
      *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 8432);
      *(_OWORD *)(v0 + 48) = v14;
      long long v15 = *(_OWORD *)(v0 + 8480);
      *(_OWORD *)(v0 + 64) = *(_OWORD *)(v0 + 8464);
      *(_OWORD *)(v0 + 80) = v15;
      long long v16 = *(_OWORD *)(v0 + 8512);
      *(_OWORD *)(v0 + 96) = *(_OWORD *)(v0 + 8496);
      *(_OWORD *)(v0 + 112) = v16;
      long long v17 = *(_OWORD *)(v0 + 8544);
      *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 8528);
      *(_OWORD *)(v0 + 144) = v17;
      long long v147 = *(_OWORD *)(v0 + 8560);
      *(_OWORD *)(v0 + 160) = v147;
      memcpy((void *)(v0 + 176), v12, 0x218uLL);
      long long v148 = (uint64_t (*)(uint64_t))(v147 + *(int *)v147);
      long long v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 8696) = v18;
      void *v18 = v0;
      v18[1] = sub_24814DB08;
      goto LABEL_18;
    case 251:
      if (v3)
      {
        LOBYTE(v11) = -5;
LABEL_20:
        uint64_t v101 = *(void *)(v0 + 8376);
        sub_2481282D8(v5, v6, v7, v8, v9, v10, v11);
        *(_OWORD *)(v101 + 72) = 0u;
        *(_OWORD *)(v101 + 56) = 0u;
        *(_OWORD *)(v101 + 40) = 0u;
        *(unsigned char *)(v101 + 88) = -6;
LABEL_21:
        swift_task_dealloc();
        swift_task_dealloc();
        long long v102 = *(uint64_t (**)(void))(v0 + 8);
        return v102();
      }
      else
      {
        long long v103 = (const void *)(*(void *)(v0 + 8392) + 160);
        *(_OWORD *)(v0 + 2104) = *(_OWORD *)(v0 + 8416);
        *(_OWORD *)(v0 + 2120) = *(_OWORD *)(v0 + 8432);
        *(_OWORD *)(v0 + 2136) = *(_OWORD *)(v0 + 8448);
        *(_OWORD *)(v0 + 2152) = *(_OWORD *)(v0 + 8464);
        *(_OWORD *)(v0 + 2168) = *(_OWORD *)(v0 + 8480);
        *(_OWORD *)(v0 + 2184) = *(_OWORD *)(v0 + 8496);
        *(_OWORD *)(v0 + 2200) = *(_OWORD *)(v0 + 8512);
        long long v152 = *(_OWORD *)(v0 + 8528);
        *(_OWORD *)(v0 + 2216) = v152;
        *(_OWORD *)(v0 + 2232) = *(_OWORD *)(v0 + 8544);
        *(_OWORD *)(v0 + 2248) = *(_OWORD *)(v0 + 8560);
        memcpy((void *)(v0 + 2264), v103, 0x218uLL);
        long long v148 = (uint64_t (*)(uint64_t))(v152 + *(int *)v152);
        long long v104 = (void *)swift_task_alloc();
        *(void *)(v0 + 8680) = v104;
        *long long v104 = v0;
        v104[1] = sub_24814D7B0;
        uint64_t v100 = v0 + 2104;
LABEL_25:
        return v148(v100);
      }
    case 252:
      uint64_t v19 = *(void *)(v0 + 8568);
      uint64_t v20 = *(void *)(v0 + 8560);
      uint64_t v21 = *(void *)(v0 + 8552);
      uint64_t v22 = *(void *)(v0 + 8544);
      uint64_t v23 = *(void *)(v0 + 8536);
      uint64_t v24 = *(void *)(v0 + 8528);
      uint64_t v25 = *(void *)(v0 + 8520);
      uint64_t v26 = *(void *)(v0 + 8512);
      uint64_t v27 = *(void *)(v0 + 8504);
      long long v28 = *(int **)(v0 + 8496);
      uint64_t v29 = *(void *)(v0 + 8488);
      int v30 = *(int **)(v0 + 8480);
      uint64_t v31 = *(void *)(v0 + 8472);
      uint64_t v32 = *(void *)(v0 + 8464);
      uint64_t v33 = *(void *)(v0 + 8456);
      uint64_t v34 = *(void *)(v0 + 8448);
      uint64_t v35 = *(void *)(v0 + 8440);
      uint64_t v36 = *(void *)(v0 + 8432);
      uint64_t v37 = *(void *)(v0 + 8424);
      uint64_t v38 = *(void *)(v0 + 8416);
      uint64_t v39 = (const void *)(*(void *)(v0 + 8392) + 160);
      uint64_t v40 = *(void *)(v0 + 8376);
      if (v3)
      {
        uint64_t v41 = v0 + 3496;
        *(void *)(v0 + 3496) = v38;
        *(void *)(v0 + 3504) = v37;
        *(void *)(v0 + 3512) = v36;
        *(void *)(v0 + 3520) = v35;
        *(void *)(v0 + 3528) = v34;
        *(void *)(v0 + 3536) = v33;
        *(void *)(v0 + 3544) = v32;
        *(void *)(v0 + 3552) = v31;
        *(void *)(v0 + 3560) = v30;
        *(void *)(v0 + 3568) = v29;
        *(void *)(v0 + 3576) = v28;
        *(void *)(v0 + 3584) = v27;
        *(void *)(v0 + 3592) = v26;
        *(void *)(v0 + 3600) = v25;
        *(void *)(v0 + 3608) = v24;
        *(void *)(v0 + 3616) = v23;
        *(void *)(v0 + 3624) = v22;
        *(void *)(v0 + 3632) = v21;
        *(void *)(v0 + 3640) = v20;
        *(void *)(v0 + 3648) = v19;
        memcpy((void *)(v0 + 3656), v39, 0x218uLL);
        uint64_t v42 = type metadata accessor for SetupModel();
        uint64_t v43 = v28;
        uint64_t v44 = *(int *)(v42 + 36);
        *(_DWORD *)(v0 + 8704) = v44;
        uint64_t v45 = v40 + v44;
        long long v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v43 + *v43);
        uint64_t v46 = (void *)swift_task_alloc();
        *(void *)(v0 + 8664) = v46;
        *uint64_t v46 = v0;
        v46[1] = sub_24814D4F4;
        uint64_t v47 = *(void *)(v0 + 8400);
        goto LABEL_10;
      }
      uint64_t v105 = v0 + 2800;
      *(void *)(v0 + 2800) = v38;
      *(void *)(v0 + 2808) = v37;
      *(void *)(v0 + 2816) = v36;
      *(void *)(v0 + 2824) = v35;
      *(void *)(v0 + 2832) = v34;
      *(void *)(v0 + 2840) = v33;
      *(void *)(v0 + 2848) = v32;
      *(void *)(v0 + 2856) = v31;
      *(void *)(v0 + 2864) = v30;
      *(void *)(v0 + 2872) = v29;
      *(void *)(v0 + 2880) = v28;
      *(void *)(v0 + 2888) = v27;
      *(void *)(v0 + 2896) = v26;
      *(void *)(v0 + 2904) = v25;
      *(void *)(v0 + 2912) = v24;
      *(void *)(v0 + 2920) = v23;
      *(void *)(v0 + 2928) = v22;
      *(void *)(v0 + 2936) = v21;
      *(void *)(v0 + 2944) = v20;
      *(void *)(v0 + 2952) = v19;
      memcpy((void *)(v0 + 2960), v39, 0x218uLL);
      uint64_t v106 = v40 + *(int *)(type metadata accessor for SetupModel() + 36);
      uint64_t v153 = (uint64_t (*)(uint64_t, uint64_t))((char *)v30 + *v30);
      long long v107 = (void *)swift_task_alloc();
      *(void *)(v0 + 8672) = v107;
      *long long v107 = v0;
      v107[1] = sub_24814D684;
      goto LABEL_30;
    case 253:
      uint64_t v48 = *(void *)(v0 + 8568);
      uint64_t v49 = *(void *)(v0 + 8560);
      uint64_t v50 = *(void *)(v0 + 8552);
      uint64_t v51 = *(void *)(v0 + 8544);
      uint64_t v52 = *(void *)(v0 + 8536);
      uint64_t v53 = *(void *)(v0 + 8528);
      uint64_t v54 = *(void *)(v0 + 8520);
      uint64_t v55 = *(void *)(v0 + 8512);
      uint64_t v56 = *(void *)(v0 + 8504);
      uint64_t v57 = *(void *)(v0 + 8496);
      uint64_t v58 = *(void *)(v0 + 8488);
      uint64_t v59 = *(void *)(v0 + 8480);
      uint64_t v60 = *(void *)(v0 + 8472);
      uint64_t v61 = *(int **)(v0 + 8464);
      uint64_t v62 = *(void *)(v0 + 8456);
      uint64_t v63 = *(int **)(v0 + 8448);
      uint64_t v64 = *(void *)(v0 + 8440);
      uint64_t v65 = *(void *)(v0 + 8432);
      uint64_t v66 = *(void *)(v0 + 8424);
      uint64_t v67 = *(void *)(v0 + 8416);
      uint64_t v68 = (const void *)(*(void *)(v0 + 8392) + 160);
      uint64_t v69 = *(void *)(v0 + 8376);
      if (v3)
      {
        *(void *)(v0 + 4888) = v67;
        uint64_t v41 = v0 + 4888;
        *(void *)(v0 + 4896) = v66;
        *(void *)(v0 + 4904) = v65;
        *(void *)(v0 + 4912) = v64;
        *(void *)(v0 + 4920) = v63;
        *(void *)(v0 + 4928) = v62;
        *(void *)(v0 + 4936) = v61;
        *(void *)(v0 + 4944) = v60;
        *(void *)(v0 + 4952) = v59;
        *(void *)(v0 + 4960) = v58;
        *(void *)(v0 + 4968) = v57;
        *(void *)(v0 + 4976) = v56;
        *(void *)(v0 + 4984) = v55;
        *(void *)(v0 + 4992) = v54;
        *(void *)(v0 + 5000) = v53;
        *(void *)(v0 + 5008) = v52;
        *(void *)(v0 + 5016) = v51;
        *(void *)(v0 + 5024) = v50;
        *(void *)(v0 + 5032) = v49;
        *(void *)(v0 + 5040) = v48;
        memcpy((void *)(v0 + 5048), v68, 0x218uLL);
        uint64_t v70 = type metadata accessor for SetupModel();
        unint64_t v71 = v61;
        uint64_t v72 = *(int *)(v70 + 32);
        *(_DWORD *)(v0 + 8372) = v72;
        uint64_t v45 = v69 + v72;
        long long v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v71 + *v71);
        uint64_t v73 = (void *)swift_task_alloc();
        *(void *)(v0 + 8648) = v73;
        *uint64_t v73 = v0;
        v73[1] = sub_24814D238;
        uint64_t v47 = *(void *)(v0 + 8408);
LABEL_10:
        uint64_t v74 = v41;
        uint64_t v75 = v45;
        goto LABEL_13;
      }
      *(void *)(v0 + 4192) = v67;
      uint64_t v105 = v0 + 4192;
      *(void *)(v0 + 4200) = v66;
      *(void *)(v0 + 4208) = v65;
      *(void *)(v0 + 4216) = v64;
      *(void *)(v0 + 4224) = v63;
      *(void *)(v0 + 4232) = v62;
      *(void *)(v0 + 4240) = v61;
      *(void *)(v0 + 4248) = v60;
      *(void *)(v0 + 4256) = v59;
      *(void *)(v0 + 4264) = v58;
      *(void *)(v0 + 4272) = v57;
      *(void *)(v0 + 4280) = v56;
      *(void *)(v0 + 4288) = v55;
      *(void *)(v0 + 4296) = v54;
      *(void *)(v0 + 4304) = v53;
      *(void *)(v0 + 4312) = v52;
      *(void *)(v0 + 4320) = v51;
      *(void *)(v0 + 4328) = v50;
      *(void *)(v0 + 4336) = v49;
      *(void *)(v0 + 4344) = v48;
      memcpy((void *)(v0 + 4352), v68, 0x218uLL);
      uint64_t v106 = v69 + *(int *)(type metadata accessor for SetupModel() + 32);
      uint64_t v153 = (uint64_t (*)(uint64_t, uint64_t))((char *)v63 + *v63);
      long long v108 = (void *)swift_task_alloc();
      *(void *)(v0 + 8656) = v108;
      *long long v108 = v0;
      v108[1] = sub_24814D3C8;
LABEL_30:
      uint64_t v109 = v105;
      uint64_t v110 = v106;
LABEL_33:
      unint64_t v137 = v153;
      goto LABEL_34;
    case 254:
      if (v3)
      {
        uint64_t v76 = *(void *)(v0 + 8392);
        unint64_t v77 = *(_OWORD **)(v0 + 8376);
        *(_OWORD *)(v0 + 5584) = *(_OWORD *)(v0 + 8416);
        long long v150 = *(_OWORD *)(v0 + 8432);
        *(_OWORD *)(v0 + 5600) = v150;
        *(_OWORD *)(v0 + 5616) = *(_OWORD *)(v0 + 8448);
        *(_OWORD *)(v0 + 5632) = *(_OWORD *)(v0 + 8464);
        *(_OWORD *)(v0 + 5648) = *(_OWORD *)(v0 + 8480);
        *(_OWORD *)(v0 + 5664) = *(_OWORD *)(v0 + 8496);
        *(_OWORD *)(v0 + 5680) = *(_OWORD *)(v0 + 8512);
        *(_OWORD *)(v0 + 5696) = *(_OWORD *)(v0 + 8528);
        *(_OWORD *)(v0 + 5712) = *(_OWORD *)(v0 + 8544);
        *(_OWORD *)(v0 + 5728) = *(_OWORD *)(v0 + 8560);
        memcpy((void *)(v0 + 5744), (const void *)(v76 + 160), 0x218uLL);
        long long v78 = v77[8];
        long long v79 = v77[9];
        long long v80 = v77[7];
        *(_OWORD *)(v0 + 7552) = v77[6];
        *(_OWORD *)(v0 + 7600) = v79;
        *(_OWORD *)(v0 + 7584) = v78;
        *(_OWORD *)(v0 + 7568) = v80;
        long long v81 = v77[12];
        long long v82 = v77[13];
        long long v83 = v77[11];
        *(_OWORD *)(v0 + 7616) = v77[10];
        *(_OWORD *)(v0 + 7664) = v82;
        *(_OWORD *)(v0 + 7648) = v81;
        *(_OWORD *)(v0 + 7632) = v83;
        long long v84 = v77[16];
        long long v85 = v77[17];
        long long v86 = v77[15];
        *(_OWORD *)(v0 + 7680) = v77[14];
        *(_OWORD *)(v0 + 7728) = v85;
        *(_OWORD *)(v0 + 7712) = v84;
        *(_OWORD *)(v0 + 7696) = v86;
        long long v87 = v77[6];
        long long v88 = v77[7];
        long long v89 = v77[8];
        *(_OWORD *)(v0 + 8176) = v77[9];
        *(_OWORD *)(v0 + 8160) = v89;
        *(_OWORD *)(v0 + 8144) = v88;
        *(_OWORD *)(v0 + 8128) = v87;
        long long v90 = v77[10];
        long long v91 = v77[11];
        long long v92 = v77[12];
        *(_OWORD *)(v0 + 8240) = v77[13];
        *(_OWORD *)(v0 + 8224) = v92;
        *(_OWORD *)(v0 + 8208) = v91;
        *(_OWORD *)(v0 + 0x2000) = v90;
        long long v93 = v77[14];
        long long v94 = v77[15];
        long long v95 = v77[16];
        *(_OWORD *)(v0 + 8304) = v77[17];
        *(_OWORD *)(v0 + 8288) = v95;
        *(_OWORD *)(v0 + 8272) = v94;
        *(_OWORD *)(v0 + 8256) = v93;
        sub_24807DCB4(v0 + 7552);
        long long v149 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v150 + *(int *)v150);
        uint64_t v96 = (void *)swift_task_alloc();
        *(void *)(v0 + 8632) = v96;
        *uint64_t v96 = v0;
        v96[1] = sub_24814CE7C;
        uint64_t v47 = v0 + 7744;
        uint64_t v74 = v0 + 5584;
        uint64_t v75 = v0 + 8128;
LABEL_13:
        return v149(v47, v74, v75);
      }
      else
      {
        long long v111 = *(_OWORD **)(v0 + 8376);
        long long v112 = (const void *)(*(void *)(v0 + 8392) + 160);
        long long v146 = *(_OWORD *)(v0 + 8416);
        long long v113 = *(_OWORD *)(v0 + 8432);
        *(_OWORD *)(v0 + 6280) = v146;
        *(_OWORD *)(v0 + 6296) = v113;
        long long v114 = *(_OWORD *)(v0 + 8464);
        *(_OWORD *)(v0 + 6312) = *(_OWORD *)(v0 + 8448);
        *(_OWORD *)(v0 + 6328) = v114;
        long long v115 = *(_OWORD *)(v0 + 8496);
        *(_OWORD *)(v0 + 6344) = *(_OWORD *)(v0 + 8480);
        *(_OWORD *)(v0 + 6360) = v115;
        long long v116 = *(_OWORD *)(v0 + 8528);
        *(_OWORD *)(v0 + 6376) = *(_OWORD *)(v0 + 8512);
        *(_OWORD *)(v0 + 6392) = v116;
        long long v117 = *(_OWORD *)(v0 + 8560);
        *(_OWORD *)(v0 + 6408) = *(_OWORD *)(v0 + 8544);
        *(_OWORD *)(v0 + 6424) = v117;
        memcpy((void *)(v0 + 6440), v112, 0x218uLL);
        long long v118 = v111[8];
        long long v119 = v111[9];
        long long v120 = v111[7];
        *(_OWORD *)(v0 + 7936) = v111[6];
        *(_OWORD *)(v0 + 7984) = v119;
        *(_OWORD *)(v0 + 7968) = v118;
        *(_OWORD *)(v0 + 7952) = v120;
        long long v121 = v111[12];
        long long v122 = v111[13];
        long long v123 = v111[11];
        *(_OWORD *)(v0 + 8000) = v111[10];
        *(_OWORD *)(v0 + 8048) = v122;
        *(_OWORD *)(v0 + 8032) = v121;
        *(_OWORD *)(v0 + 8016) = v123;
        long long v124 = v111[16];
        long long v125 = v111[17];
        long long v126 = v111[15];
        *(_OWORD *)(v0 + 8064) = v111[14];
        *(_OWORD *)(v0 + 8112) = v125;
        *(_OWORD *)(v0 + 8096) = v124;
        *(_OWORD *)(v0 + 8080) = v126;
        long long v127 = v111[6];
        long long v128 = v111[7];
        long long v129 = v111[8];
        *(_OWORD *)(v0 + 7024) = v111[9];
        *(_OWORD *)(v0 + 7008) = v129;
        *(_OWORD *)(v0 + 6992) = v128;
        *(_OWORD *)(v0 + 6976) = v127;
        long long v130 = v111[10];
        long long v131 = v111[11];
        long long v132 = v111[12];
        *(_OWORD *)(v0 + 7088) = v111[13];
        *(_OWORD *)(v0 + 7072) = v132;
        *(_OWORD *)(v0 + 7056) = v131;
        *(_OWORD *)(v0 + 7040) = v130;
        long long v133 = v111[14];
        long long v134 = v111[15];
        long long v135 = v111[16];
        *(_OWORD *)(v0 + 7152) = v111[17];
        *(_OWORD *)(v0 + 7136) = v135;
        *(_OWORD *)(v0 + 7120) = v134;
        *(_OWORD *)(v0 + 7104) = v133;
        sub_24807DCB4(v0 + 7936);
        *(void *)&long long v146 = v146 + *(int *)v146;
        uint64_t v136 = (void *)swift_task_alloc();
        *(void *)(v0 + 8640) = v136;
        *uint64_t v136 = v0;
        v136[1] = sub_24814D0F4;
        uint64_t v109 = v0 + 6280;
        uint64_t v110 = v0 + 6976;
        unint64_t v137 = (uint64_t (*)(uint64_t, uint64_t))v146;
LABEL_34:
        return v137(v109, v110);
      }
    case 255:
      if (v3) {
        goto LABEL_21;
      }
      uint64_t v13 = v0 + 1408;
      uint64_t v98 = (const void *)(*(void *)(v0 + 8392) + 160);
      *(_OWORD *)(v0 + 1408) = *(_OWORD *)(v0 + 8416);
      *(_OWORD *)(v0 + 1424) = *(_OWORD *)(v0 + 8432);
      *(_OWORD *)(v0 + 1440) = *(_OWORD *)(v0 + 8448);
      *(_OWORD *)(v0 + 1456) = *(_OWORD *)(v0 + 8464);
      *(_OWORD *)(v0 + 1472) = *(_OWORD *)(v0 + 8480);
      *(_OWORD *)(v0 + 1488) = *(_OWORD *)(v0 + 8496);
      long long v151 = *(_OWORD *)(v0 + 8512);
      *(_OWORD *)(v0 + 1504) = v151;
      *(_OWORD *)(v0 + 1520) = *(_OWORD *)(v0 + 8528);
      *(_OWORD *)(v0 + 1536) = *(_OWORD *)(v0 + 8544);
      *(_OWORD *)(v0 + 1552) = *(_OWORD *)(v0 + 8560);
      memcpy((void *)(v0 + 1568), v98, 0x218uLL);
      long long v148 = (uint64_t (*)(uint64_t))(v151 + *(int *)v151);
      uint64_t v99 = (void *)swift_task_alloc();
      *(void *)(v0 + 8624) = v99;
      *uint64_t v99 = v0;
      v99[1] = sub_24814CD50;
LABEL_18:
      uint64_t v100 = v13;
      goto LABEL_25;
    default:
      if (v3) {
        goto LABEL_20;
      }
      uint64_t v138 = (const void *)(*(void *)(v0 + 8392) + 160);
      long long v139 = *(_OWORD *)(v0 + 8432);
      *(_OWORD *)(v0 + 712) = *(_OWORD *)(v0 + 8416);
      *(_OWORD *)(v0 + 728) = v139;
      long long v140 = *(_OWORD *)(v0 + 8464);
      *(_OWORD *)(v0 + 744) = *(_OWORD *)(v0 + 8448);
      *(_OWORD *)(v0 + 760) = v140;
      long long v141 = *(_OWORD *)(v0 + 8496);
      *(_OWORD *)(v0 + 776) = *(_OWORD *)(v0 + 8480);
      *(_OWORD *)(v0 + 792) = v141;
      long long v142 = *(_OWORD *)(v0 + 8528);
      *(_OWORD *)(v0 + 808) = *(_OWORD *)(v0 + 8512);
      *(_OWORD *)(v0 + 824) = v142;
      long long v145 = *(_OWORD *)(v0 + 8544);
      long long v143 = *(_OWORD *)(v0 + 8560);
      *(_OWORD *)(v0 + 840) = v145;
      *(_OWORD *)(v0 + 856) = v143;
      memcpy((void *)(v0 + 872), v138, 0x218uLL);
      *(void *)(v0 + 8320) = v5;
      *(void *)(v0 + 8328) = v6;
      *(void *)(v0 + 8336) = v7;
      *(void *)(v0 + 8344) = v8;
      *(void *)(v0 + 8352) = v9;
      *(void *)(v0 + 8360) = v10;
      *(unsigned char *)(v0 + 8368) = v11;
      sub_247FA9804(v5, v6, v7, v8, v9, v10, v11);
      uint64_t v153 = (uint64_t (*)(uint64_t, uint64_t))(v145 + *(int *)v145);
      long long v144 = (void *)swift_task_alloc();
      *(void *)(v0 + 8688) = v144;
      *long long v144 = v0;
      v144[1] = sub_24814D948;
      uint64_t v109 = v0 + 712;
      uint64_t v110 = v0 + 8320;
      goto LABEL_33;
  }
}

uint64_t sub_24814CD50()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24814CE7C()
{
  uint64_t v1 = *v0 + 7552;
  swift_task_dealloc();
  sub_24807DD90(v1);
  return MEMORY[0x270FA2498](sub_24814CF88, 0, 0);
}

uint64_t sub_24814CF88()
{
  uint64_t v1 = *(_OWORD **)(v0 + 8376);
  *(_OWORD *)(v0 + 7472) = *(_OWORD *)(v0 + 7856);
  *(_OWORD *)(v0 + 7456) = *(_OWORD *)(v0 + 7840);
  *(_OWORD *)(v0 + 7440) = *(_OWORD *)(v0 + 7824);
  *(_OWORD *)(v0 + 7424) = *(_OWORD *)(v0 + 7808);
  *(_OWORD *)(v0 + 7536) = *(_OWORD *)(v0 + 7920);
  *(_OWORD *)(v0 + 7520) = *(_OWORD *)(v0 + 7904);
  *(_OWORD *)(v0 + 7504) = *(_OWORD *)(v0 + 7888);
  *(_OWORD *)(v0 + 7488) = *(_OWORD *)(v0 + 7872);
  *(_OWORD *)(v0 + 7360) = *(_OWORD *)(v0 + 7744);
  *(_OWORD *)(v0 + 7376) = *(_OWORD *)(v0 + 7760);
  *(_OWORD *)(v0 + 7392) = *(_OWORD *)(v0 + 7776);
  *(_OWORD *)(v0 + 7408) = *(_OWORD *)(v0 + 7792);
  long long v2 = v1[6];
  long long v3 = v1[7];
  long long v4 = v1[8];
  *(_OWORD *)(v0 + 7216) = v1[9];
  *(_OWORD *)(v0 + 7200) = v4;
  *(_OWORD *)(v0 + 7184) = v3;
  *(_OWORD *)(v0 + 7168) = v2;
  long long v5 = v1[10];
  long long v6 = v1[11];
  long long v7 = v1[12];
  *(_OWORD *)(v0 + 7280) = v1[13];
  *(_OWORD *)(v0 + 7264) = v7;
  *(_OWORD *)(v0 + 7248) = v6;
  *(_OWORD *)(v0 + 7232) = v5;
  long long v8 = v1[14];
  long long v9 = v1[15];
  long long v10 = v1[16];
  *(_OWORD *)(v0 + 7344) = v1[17];
  *(_OWORD *)(v0 + 7328) = v10;
  *(_OWORD *)(v0 + 7312) = v9;
  *(_OWORD *)(v0 + 7296) = v8;
  sub_24807DD90(v0 + 7168);
  long long v11 = *(_OWORD *)(v0 + 7376);
  long long v12 = *(_OWORD *)(v0 + 7408);
  long long v13 = *(_OWORD *)(v0 + 7360);
  v1[8] = *(_OWORD *)(v0 + 7392);
  v1[9] = v12;
  v1[6] = v13;
  v1[7] = v11;
  long long v14 = *(_OWORD *)(v0 + 7440);
  long long v15 = *(_OWORD *)(v0 + 7472);
  long long v16 = *(_OWORD *)(v0 + 7424);
  v1[12] = *(_OWORD *)(v0 + 7456);
  v1[13] = v15;
  v1[10] = v16;
  v1[11] = v14;
  long long v17 = *(_OWORD *)(v0 + 7504);
  long long v18 = *(_OWORD *)(v0 + 7536);
  long long v19 = *(_OWORD *)(v0 + 7488);
  v1[16] = *(_OWORD *)(v0 + 7520);
  v1[17] = v18;
  v1[14] = v19;
  v1[15] = v17;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_24814D0F4()
{
  uint64_t v1 = *v0 + 7936;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_24807DD90(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_24814D238()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814D334, 0, 0);
}

uint64_t sub_24814D334()
{
  sub_24815D368(*(void *)(v0 + 8408), *(void *)(v0 + 8376) + *(int *)(v0 + 8372), (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24814D3C8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24814D4F4()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814D5F0, 0, 0);
}

uint64_t sub_24814D5F0()
{
  sub_24815D368(*(void *)(v0 + 8400), *(void *)(v0 + 8376) + *(int *)(v0 + 8704), (uint64_t (*)(void))type metadata accessor for SignInModel);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24814D684()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_24814D7B0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814D8AC, 0, 0);
}

uint64_t sub_24814D8AC()
{
  uint64_t v1 = *(void *)(v0 + 8376);
  sub_2481282D8(*(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88));
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(unsigned char *)(v1 + 88) = -6;
  swift_task_dealloc();
  swift_task_dealloc();
  long long v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24814D948()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814DA44, 0, 0);
}

uint64_t sub_24814DA44()
{
  uint64_t v1 = *(void *)(v0 + 8376);
  sub_2481282D8(*(void *)(v0 + 8576), *(void *)(v0 + 8584), *(void *)(v0 + 8592), *(void *)(v0 + 8600), *(void *)(v0 + 8608), *(void *)(v0 + 8616), *(unsigned char *)(v0 + 8369));
  uint64_t v2 = *(void *)(v0 + 8376);
  sub_2481282D8(*(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88));
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(unsigned char *)(v2 + 88) = -6;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24814DB08()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t AutomaticSetupModelExchange.InternalUpdate.expectsResponse.getter()
{
  return *v0;
}

uint64_t AutomaticSetupModelExchange.InternalUpdate.updatedModel.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

uint64_t sub_24814DC74(void *__src, _OWORD *a2)
{
  memcpy((void *)(v2 + 16), __src, 0x2B8uLL);
  long long v4 = a2[9];
  *(_OWORD *)(v2 + 1047) = a2[8];
  *(_OWORD *)(v2 + 1063) = v4;
  long long v5 = a2[11];
  *(_OWORD *)(v2 + 1079) = a2[10];
  *(_OWORD *)(v2 + 1095) = v5;
  long long v6 = a2[5];
  *(_OWORD *)(v2 + 983) = a2[4];
  *(_OWORD *)(v2 + 999) = v6;
  long long v7 = a2[7];
  *(_OWORD *)(v2 + 1015) = a2[6];
  *(_OWORD *)(v2 + 1031) = v7;
  long long v8 = a2[1];
  *(_OWORD *)(v2 + 919) = *a2;
  *(_OWORD *)(v2 + 935) = v8;
  long long v9 = a2[3];
  *(_OWORD *)(v2 + 951) = a2[2];
  *(_OWORD *)(v2 + 967) = v9;
  *(unsigned char *)(v2 + 712) = 0;
  long long v10 = *(_OWORD *)(v2 + 1056);
  long long v11 = *(_OWORD *)(v2 + 1088);
  *(_OWORD *)(v2 + 873) = *(_OWORD *)(v2 + 1072);
  *(_OWORD *)(v2 + 889) = v11;
  *(void *)(v2 + 904) = *(void *)(v2 + 1103);
  long long v12 = *(_OWORD *)(v2 + 1024);
  *(_OWORD *)(v2 + 809) = *(_OWORD *)(v2 + 1008);
  *(_OWORD *)(v2 + 825) = v12;
  *(_OWORD *)(v2 + 841) = *(_OWORD *)(v2 + 1040);
  *(_OWORD *)(v2 + 857) = v10;
  long long v13 = *(_OWORD *)(v2 + 960);
  *(_OWORD *)(v2 + 745) = *(_OWORD *)(v2 + 944);
  *(_OWORD *)(v2 + 761) = v13;
  long long v14 = *(_OWORD *)(v2 + 992);
  *(_OWORD *)(v2 + 777) = *(_OWORD *)(v2 + 976);
  *(_OWORD *)(v2 + 793) = v14;
  long long v15 = *(_OWORD *)(v2 + 928);
  *(_OWORD *)(v2 + 713) = *(_OWORD *)(v2 + 912);
  *(_OWORD *)(v2 + 729) = v15;
  long long v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 1496) = v16;
  *long long v16 = v2;
  v16[1] = sub_24814DDC4;
  return static AutomaticSetupModelExchange._receiveModelUpdate(_:_:)(v2 + 1304, v2 + 16, v2 + 712);
}

uint64_t sub_24814DDC4()
{
  uint64_t v1 = (_OWORD *)(*v0 + 1112);
  uint64_t v2 = (_OWORD *)(*v0 + 1304);
  swift_task_dealloc();
  long long v3 = v2[9];
  v1[8] = v2[8];
  v1[9] = v3;
  long long v4 = v2[11];
  v1[10] = v2[10];
  v1[11] = v4;
  long long v5 = v2[5];
  v1[4] = v2[4];
  v1[5] = v5;
  long long v6 = v2[7];
  v1[6] = v2[6];
  v1[7] = v6;
  long long v7 = v2[1];
  *uint64_t v1 = *v2;
  v1[1] = v7;
  long long v8 = v2[3];
  v1[2] = v2[2];
  v1[3] = v8;
  sub_24807DD90((uint64_t)v1);
  return MEMORY[0x270FA2498](sub_24805CAE4, 0, 0);
}

uint64_t static AutomaticSetupModelExchange._receiveModelUpdate(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 648) = a3;
  *(void *)(v3 + 640) = a1;
  long long v4 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(v3 + 656) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(v3 + 672) = v4;
  long long v5 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(v3 + 688) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(v3 + 704) = v5;
  *(_OWORD *)(v3 + 720) = *(_OWORD *)(a2 + 232);
  *(unsigned char *)(v3 + 351) = *(unsigned char *)a3;
  long long v6 = *(_OWORD *)(a3 + 8);
  long long v7 = *(_OWORD *)(a3 + 24);
  long long v8 = *(_OWORD *)(a3 + 56);
  *(_OWORD *)(v3 + 48) = *(_OWORD *)(a3 + 40);
  *(_OWORD *)(v3 + 64) = v8;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v7;
  long long v9 = *(_OWORD *)(a3 + 72);
  long long v10 = *(_OWORD *)(a3 + 88);
  long long v11 = *(_OWORD *)(a3 + 120);
  *(_OWORD *)(v3 + 112) = *(_OWORD *)(a3 + 104);
  *(_OWORD *)(v3 + 128) = v11;
  *(_OWORD *)(v3 + 80) = v9;
  *(_OWORD *)(v3 + 96) = v10;
  long long v12 = *(_OWORD *)(a3 + 136);
  long long v13 = *(_OWORD *)(a3 + 152);
  long long v14 = *(_OWORD *)(a3 + 184);
  *(_OWORD *)(v3 + 176) = *(_OWORD *)(a3 + 168);
  *(_OWORD *)(v3 + 192) = v14;
  *(_OWORD *)(v3 + 144) = v12;
  *(_OWORD *)(v3 + 160) = v13;
  return MEMORY[0x270FA2498](sub_24814DF94, 0, 0);
}

{
  uint64_t v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  long long v8;
  long long v9;
  long long v10;
  long long v11;
  long long v12;
  long long v13;

  *(_OWORD *)(v3 + 1816) = *(_OWORD *)(a2 + 248);
  long long v4 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(v3 + 1840) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(v3 + 1856) = v4;
  long long v5 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(v3 + 1872) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(v3 + 1888) = v5;
  long long v6 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(v3 + 1904) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(v3 + 1920) = v6;
  long long v7 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(v3 + 1936) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(v3 + 1952) = v7;
  long long v8 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(v3 + 1968) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(v3 + 1984) = v8;
  long long v9 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(v3 + 2000) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(v3 + 2016) = v9;
  long long v10 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(v3 + 2032) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(v3 + 2048) = v10;
  long long v11 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(v3 + 2064) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(v3 + 2080) = v11;
  long long v12 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(v3 + 2096) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(v3 + 2112) = v12;
  long long v13 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(v3 + 2128) = *(_OWORD *)(a2 + 560);
  *(void *)(v3 + 1808) = a3;
  *(void *)(v3 + 1800) = a1;
  *(void *)(v3 + 1832) = *(void *)(a2 + 264);
  *(_OWORD *)(v3 + 2144) = v13;
  *(_OWORD *)(v3 + 2160) = *(_OWORD *)(a2 + 592);
  *(void *)(v3 + 2176) = *(void *)(a2 + 608);
  return MEMORY[0x270FA2498](sub_24814F650, 0, 0);
}

{
  uint64_t v3;
  long long v4;
  long long v5;

  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  long long v4 = *(_OWORD *)(a2 + 632);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(a2 + 616);
  *(_OWORD *)(v3 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 664);
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(a2 + 648);
  *(_OWORD *)(v3 + 80) = v5;
  *(_OWORD *)(v3 + 96) = *(_OWORD *)(a2 + 680);
  return MEMORY[0x270FA2498](sub_248153D2C, 0, 0);
}

uint64_t sub_24814DF94()
{
  uint64_t v1 = *(void *)(v0 + 648);
  uint64_t v2 = v0 + 16;
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  *(void *)(v0 + 736) = v4;
  *(void *)(v0 + 744) = v3;
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  *(void *)(v0 + 752) = v5;
  *(void *)(v0 + 760) = v6;
  uint64_t v7 = *(void *)(v0 + 120);
  uint64_t v8 = *(void *)(v0 + 128);
  *(void *)(v0 + 768) = v7;
  *(void *)(v0 + 776) = v8;
  unsigned int v9 = *(unsigned __int8 *)(v0 + 136);
  *(unsigned char *)(v0 + 401) = v9;
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v1 + 8);
  long long v10 = *(_OWORD *)(v1 + 24);
  long long v11 = *(_OWORD *)(v1 + 40);
  long long v12 = *(_OWORD *)(v1 + 56);
  *(void *)(v0 + 272) = *(void *)(v1 + 72);
  *(_OWORD *)(v0 + 240) = v11;
  *(_OWORD *)(v0 + 256) = v12;
  *(_OWORD *)(v0 + 224) = v10;
  long long v13 = *(_OWORD *)(v0 + 153);
  long long v14 = *(_OWORD *)(v0 + 185);
  *(_OWORD *)(v0 + 312) = *(_OWORD *)(v0 + 169);
  *(_OWORD *)(v0 + 328) = v14;
  *(void *)(v0 + 343) = *(void *)(v0 + 200);
  int v15 = (v9 >> 3) & 3;
  *(_OWORD *)(v0 + 280) = *(_OWORD *)(v0 + 137);
  *(_OWORD *)(v0 + 296) = v13;
  if (!v15)
  {
    uint64_t v16 = v0 + 520;
    long long v19 = *(int **)(v0 + 688);
    *(unsigned char *)(v0 + 520) = v4 & 1;
    *(unsigned char *)(v0 + 521) = BYTE1(v4);
    *(void *)(v0 + 528) = v3;
    *(void *)(v0 + 536) = v5;
    *(void *)(v0 + 544) = v6;
    *(unsigned char *)(v0 + 552) = v7;
    sub_24807DCB4(v2);
    sub_247FE41AC(v4, v3, v5, v6, v7, v8, v9);
    uint64_t v24 = (uint64_t (*)(uint64_t))((char *)v19 + *v19);
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 792) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_24814E5B0;
    goto LABEL_5;
  }
  if (v15 == 1)
  {
    uint64_t v16 = v0 + 408;
    long long v17 = *(int **)(v0 + 656);
    *(void *)(v0 + 408) = v4;
    *(void *)(v0 + 416) = v3;
    *(unsigned char *)(v0 + 424) = v5;
    *(void *)(v0 + 432) = v6;
    *(void *)(v0 + 440) = v7;
    *(void *)(v0 + 448) = v8;
    *(unsigned char *)(v0 + 456) = v9 & 0xE7;
    sub_24807DCB4(v2);
    sub_247FE41AC(v4, v3, v5, v6, v7, v8, v9);
    uint64_t v24 = (uint64_t (*)(uint64_t))((char *)v17 + *v17);
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 784) = v18;
    void *v18 = v0;
    v18[1] = sub_24814E2D8;
LABEL_5:
    return v24(v16);
  }
  uint64_t v22 = *(int **)(v0 + 720);
  sub_24807DCB4(v2);
  uint64_t v25 = (uint64_t (*)(void))((char *)v22 + *v22);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 816) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_24814ED58;
  return v25();
}

uint64_t sub_24814E2D8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814E3D4, 0, 0);
}

uint64_t sub_24814E3D4()
{
  if (*(unsigned char *)(v0 + 351) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 760);
    uint64_t v2 = *(void *)(v0 + 752);
    uint64_t v3 = *(int **)(v0 + 672);
    char v4 = *(unsigned char *)(v0 + 401) & 0xE7;
    *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 736);
    *(unsigned char *)(v0 + 368) = v2;
    *(void *)(v0 + 376) = v1;
    *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 768);
    *(unsigned char *)(v0 + 400) = v4;
    long long v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 800) = v5;
    void *v5 = v0;
    v5[1] = sub_24814E888;
    return v19(v0 + 464, v0 + 352);
  }
  else
  {
    sub_247FE51C8(*(void *)(v0 + 736), *(void *)(v0 + 744), *(void *)(v0 + 752), *(void *)(v0 + 760), *(void *)(v0 + 768), *(void *)(v0 + 776), *(unsigned __int8 *)(v0 + 401));
    char v7 = *(unsigned char *)(v0 + 401);
    uint64_t v8 = *(void *)(v0 + 640);
    long long v9 = *(_OWORD *)(v0 + 736);
    long long v10 = *(_OWORD *)(v0 + 752);
    long long v11 = *(_OWORD *)(v0 + 768);
    long long v12 = *(_OWORD *)(v0 + 224);
    long long v13 = *(_OWORD *)(v0 + 240);
    long long v14 = *(_OWORD *)(v0 + 256);
    *(void *)(v8 + 64) = *(void *)(v0 + 272);
    *(_OWORD *)(v8 + 32) = v13;
    *(_OWORD *)(v8 + 48) = v14;
    *(_OWORD *)(v8 + 16) = v12;
    *(_OWORD *)uint64_t v8 = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v8 + 72) = v9;
    *(_OWORD *)(v8 + 88) = v10;
    *(_OWORD *)(v8 + 104) = v11;
    *(unsigned char *)(v8 + 120) = v7;
    *(_OWORD *)(v8 + 121) = *(_OWORD *)(v0 + 280);
    long long v15 = *(_OWORD *)(v0 + 296);
    long long v16 = *(_OWORD *)(v0 + 312);
    long long v17 = *(_OWORD *)(v0 + 328);
    *(void *)(v8 + 184) = *(void *)(v0 + 343);
    *(_OWORD *)(v8 + 169) = v17;
    *(_OWORD *)(v8 + 153) = v16;
    *(_OWORD *)(v8 + 137) = v15;
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_24814E5B0()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814E6AC, 0, 0);
}

uint64_t sub_24814E6AC()
{
  if (*(unsigned char *)(v0 + 351) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 768);
    uint64_t v2 = *(void *)(v0 + 744);
    uint64_t v3 = *(int **)(v0 + 704);
    uint64_t v4 = *(void *)(v0 + 736) >> 8;
    *(unsigned char *)(v0 + 560) = *(unsigned char *)(v0 + 736) & 1;
    *(unsigned char *)(v0 + 561) = v4;
    *(void *)(v0 + 568) = v2;
    *(_OWORD *)(v0 + 576) = *(_OWORD *)(v0 + 752);
    *(unsigned char *)(v0 + 592) = v1;
    long long v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 808) = v5;
    void *v5 = v0;
    v5[1] = sub_24814EAFC;
    return v19(v0 + 600, v0 + 560);
  }
  else
  {
    sub_247FE51C8(*(void *)(v0 + 736), *(void *)(v0 + 744), *(void *)(v0 + 752), *(void *)(v0 + 760), *(void *)(v0 + 768), *(void *)(v0 + 776), *(unsigned __int8 *)(v0 + 401));
    char v7 = *(unsigned char *)(v0 + 401);
    uint64_t v8 = *(void *)(v0 + 640);
    long long v9 = *(_OWORD *)(v0 + 736);
    long long v10 = *(_OWORD *)(v0 + 752);
    long long v11 = *(_OWORD *)(v0 + 768);
    long long v12 = *(_OWORD *)(v0 + 224);
    long long v13 = *(_OWORD *)(v0 + 240);
    long long v14 = *(_OWORD *)(v0 + 256);
    *(void *)(v8 + 64) = *(void *)(v0 + 272);
    *(_OWORD *)(v8 + 32) = v13;
    *(_OWORD *)(v8 + 48) = v14;
    *(_OWORD *)(v8 + 16) = v12;
    *(_OWORD *)uint64_t v8 = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v8 + 72) = v9;
    *(_OWORD *)(v8 + 88) = v10;
    *(_OWORD *)(v8 + 104) = v11;
    *(unsigned char *)(v8 + 120) = v7;
    *(_OWORD *)(v8 + 121) = *(_OWORD *)(v0 + 280);
    long long v15 = *(_OWORD *)(v0 + 296);
    long long v16 = *(_OWORD *)(v0 + 312);
    long long v17 = *(_OWORD *)(v0 + 328);
    *(void *)(v8 + 184) = *(void *)(v0 + 343);
    *(_OWORD *)(v8 + 169) = v17;
    *(_OWORD *)(v8 + 153) = v16;
    *(_OWORD *)(v8 + 137) = v15;
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_24814E888()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814E984, 0, 0);
}

uint64_t sub_24814E984()
{
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v2 = *(void *)(v0 + 768);
  uint64_t v3 = *(void *)(v0 + 760);
  uint64_t v4 = *(void *)(v0 + 752);
  uint64_t v5 = *(void *)(v0 + 744);
  uint64_t v6 = *(void *)(v0 + 736);
  unsigned int v7 = *(unsigned __int8 *)(v0 + 401);
  sub_247FE51C8(v6, v5, v4, v3, v2, v1, v7);
  uint64_t v21 = *(void *)(v0 + 472);
  uint64_t v22 = *(void *)(v0 + 464);
  uint64_t v20 = *(unsigned __int8 *)(v0 + 480);
  long long v19 = *(_OWORD *)(v0 + 488);
  uint64_t v18 = *(void *)(v0 + 504);
  char v8 = *(unsigned char *)(v0 + 512) | 8;
  sub_247FE51C8(v6, v5, v4, v3, v2, v1, v7);
  uint64_t v9 = *(void *)(v0 + 640);
  long long v10 = *(_OWORD *)(v0 + 224);
  long long v11 = *(_OWORD *)(v0 + 240);
  long long v12 = *(_OWORD *)(v0 + 256);
  *(void *)(v9 + 64) = *(void *)(v0 + 272);
  *(_OWORD *)(v9 + 32) = v11;
  *(_OWORD *)(v9 + 48) = v12;
  *(_OWORD *)(v9 + 16) = v10;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(v0 + 208);
  *(void *)(v9 + 72) = v22;
  *(void *)(v9 + 80) = v21;
  *(void *)(v9 + 88) = v20;
  *(_OWORD *)(v9 + 96) = v19;
  *(void *)(v9 + 112) = v18;
  *(unsigned char *)(v9 + 120) = v8;
  *(_OWORD *)(v9 + 121) = *(_OWORD *)(v0 + 280);
  long long v13 = *(_OWORD *)(v0 + 296);
  long long v14 = *(_OWORD *)(v0 + 312);
  long long v15 = *(_OWORD *)(v0 + 328);
  *(void *)(v9 + 184) = *(void *)(v0 + 343);
  *(_OWORD *)(v9 + 169) = v15;
  *(_OWORD *)(v9 + 153) = v14;
  *(_OWORD *)(v9 + 137) = v13;
  long long v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_24814EAFC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814EBF8, 0, 0);
}

uint64_t sub_24814EBF8()
{
  uint64_t v1 = *(void *)(v0 + 776);
  uint64_t v2 = *(void *)(v0 + 768);
  uint64_t v3 = *(void *)(v0 + 760);
  uint64_t v4 = *(void *)(v0 + 752);
  uint64_t v5 = *(void *)(v0 + 744);
  uint64_t v6 = *(void *)(v0 + 736);
  unsigned int v7 = *(unsigned __int8 *)(v0 + 401);
  sub_247FE51C8(v6, v5, v4, v3, v2, v1, v7);
  long long v20 = *(_OWORD *)(v0 + 608);
  uint64_t v18 = *(unsigned __int8 *)(v0 + 632);
  uint64_t v19 = *(void *)(v0 + 624);
  unint64_t v8 = *(unsigned __int8 *)(v0 + 600) | ((unint64_t)*(unsigned __int8 *)(v0 + 601) << 8);
  sub_247FE51C8(v6, v5, v4, v3, v2, v1, v7);
  uint64_t v9 = *(void *)(v0 + 640);
  long long v10 = *(_OWORD *)(v0 + 224);
  long long v11 = *(_OWORD *)(v0 + 240);
  long long v12 = *(_OWORD *)(v0 + 256);
  *(void *)(v9 + 64) = *(void *)(v0 + 272);
  *(_OWORD *)(v9 + 32) = v11;
  *(_OWORD *)(v9 + 48) = v12;
  *(_OWORD *)(v9 + 16) = v10;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)(v0 + 208);
  *(void *)(v9 + 72) = v8;
  *(_OWORD *)(v9 + 80) = v20;
  *(void *)(v9 + 96) = v19;
  *(void *)(v9 + 104) = v18;
  *(void *)(v9 + 112) = 0;
  *(unsigned char *)(v9 + 120) = 0;
  *(_OWORD *)(v9 + 121) = *(_OWORD *)(v0 + 280);
  long long v13 = *(_OWORD *)(v0 + 296);
  long long v14 = *(_OWORD *)(v0 + 312);
  long long v15 = *(_OWORD *)(v0 + 328);
  *(void *)(v9 + 184) = *(void *)(v0 + 343);
  *(_OWORD *)(v9 + 169) = v15;
  *(_OWORD *)(v9 + 153) = v14;
  *(_OWORD *)(v9 + 137) = v13;
  long long v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_24814ED58()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24814EE54, 0, 0);
}

uint64_t sub_24814EE54()
{
  char v1 = *(unsigned char *)(v0 + 401);
  uint64_t v2 = *(void *)(v0 + 640);
  long long v3 = *(_OWORD *)(v0 + 736);
  long long v4 = *(_OWORD *)(v0 + 752);
  long long v5 = *(_OWORD *)(v0 + 768);
  long long v6 = *(_OWORD *)(v0 + 224);
  long long v7 = *(_OWORD *)(v0 + 240);
  long long v8 = *(_OWORD *)(v0 + 256);
  *(void *)(v2 + 64) = *(void *)(v0 + 272);
  *(_OWORD *)(v2 + 32) = v7;
  *(_OWORD *)(v2 + 48) = v8;
  *(_OWORD *)(v2 + 16) = v6;
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v2 + 72) = v3;
  *(_OWORD *)(v2 + 88) = v4;
  *(_OWORD *)(v2 + 104) = v5;
  *(unsigned char *)(v2 + 120) = v1;
  *(_OWORD *)(v2 + 121) = *(_OWORD *)(v0 + 280);
  long long v9 = *(_OWORD *)(v0 + 296);
  long long v10 = *(_OWORD *)(v0 + 312);
  long long v11 = *(_OWORD *)(v0 + 328);
  *(void *)(v2 + 184) = *(void *)(v0 + 343);
  *(_OWORD *)(v2 + 169) = v11;
  *(_OWORD *)(v2 + 153) = v10;
  *(_OWORD *)(v2 + 137) = v9;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24814EED0(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *a2 = &unk_2692DC588;
  a2[1] = v5;
  return result;
}

uint64_t AutomaticSetupModelExchange.receiveDiscoveryModel.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t AutomaticSetupModelExchange.receiveDiscoveryModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AutomaticSetupModelExchange.receiveDiscoveryModel.modify())()
{
  return nullsub_1;
}

uint64_t sub_24814EFC8(uint64_t a1, const void *a2, _OWORD *a3)
{
  uint64_t v5 = v3;
  memcpy((void *)(v5 + 16), a2, 0x2B8uLL);
  long long v7 = a3[9];
  *(_OWORD *)(v5 + 1047) = a3[8];
  *(_OWORD *)(v5 + 1063) = v7;
  long long v8 = a3[11];
  *(_OWORD *)(v5 + 1079) = a3[10];
  *(_OWORD *)(v5 + 1095) = v8;
  long long v9 = a3[5];
  *(_OWORD *)(v5 + 983) = a3[4];
  *(_OWORD *)(v5 + 999) = v9;
  long long v10 = a3[7];
  *(_OWORD *)(v5 + 1015) = a3[6];
  *(_OWORD *)(v5 + 1031) = v10;
  long long v11 = a3[1];
  *(_OWORD *)(v5 + 919) = *a3;
  *(_OWORD *)(v5 + 935) = v11;
  long long v12 = a3[3];
  *(_OWORD *)(v5 + 951) = a3[2];
  *(_OWORD *)(v5 + 967) = v12;
  *(unsigned char *)(v5 + 712) = 1;
  long long v13 = *(_OWORD *)(v5 + 1056);
  long long v14 = *(_OWORD *)(v5 + 1088);
  *(_OWORD *)(v5 + 873) = *(_OWORD *)(v5 + 1072);
  *(_OWORD *)(v5 + 889) = v14;
  *(void *)(v5 + 904) = *(void *)(v5 + 1103);
  long long v15 = *(_OWORD *)(v5 + 1024);
  *(_OWORD *)(v5 + 809) = *(_OWORD *)(v5 + 1008);
  *(_OWORD *)(v5 + 825) = v15;
  *(_OWORD *)(v5 + 841) = *(_OWORD *)(v5 + 1040);
  *(_OWORD *)(v5 + 857) = v13;
  long long v16 = *(_OWORD *)(v5 + 960);
  *(_OWORD *)(v5 + 745) = *(_OWORD *)(v5 + 944);
  *(_OWORD *)(v5 + 761) = v16;
  long long v17 = *(_OWORD *)(v5 + 992);
  *(_OWORD *)(v5 + 777) = *(_OWORD *)(v5 + 976);
  *(_OWORD *)(v5 + 793) = v17;
  long long v18 = *(_OWORD *)(v5 + 928);
  *(_OWORD *)(v5 + 713) = *(_OWORD *)(v5 + 912);
  *(_OWORD *)(v5 + 729) = v18;
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v5 + 1112) = v19;
  *uint64_t v19 = v5;
  v19[1] = sub_24814F118;
  return static AutomaticSetupModelExchange._receiveModelUpdate(_:_:)(a1, v5 + 16, v5 + 712);
}

uint64_t sub_24814F118()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t AutomaticSetupModelExchange.processDiscoveryModel.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t AutomaticSetupModelExchange.processDiscoveryModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AutomaticSetupModelExchange.processDiscoveryModel.modify())()
{
  return nullsub_1;
}

uint64_t sub_24814F294(const void *a1, uint64_t a2)
{
  v2[89] = a2;
  v2[90] = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DC1F8);
  v2[91] = swift_task_alloc();
  type metadata accessor for AuthenticationModel();
  v2[92] = swift_task_alloc();
  memcpy(v2 + 2, a1, 0x2B8uLL);
  return MEMORY[0x270FA2498](sub_24814F370, 0, 0);
}

uint64_t sub_24814F370()
{
  uint64_t v1 = (unsigned char *)v0[91];
  sub_2481285A0(v0[89], (uint64_t)&v1[*(int *)(v0[90] + 28)], (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  *uint64_t v1 = 0;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[93] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24814F440;
  uint64_t v3 = v0[92];
  uint64_t v4 = v0[91];
  return static AutomaticSetupModelExchange._receiveModelUpdate(_:_:)(v3, (uint64_t)(v0 + 2), v4);
}

uint64_t sub_24814F440()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 736);
  uint64_t v2 = *(void *)(*(void *)v0 + 728);
  swift_task_dealloc();
  sub_247FB33D4(v2, &qword_2692DC1F8);
  sub_24815D444(v1, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  return MEMORY[0x270FA2498](sub_24815D4A8, 0, 0);
}

uint64_t sub_24814F650()
{
  uint64_t v1 = *(unsigned __int8 **)(v0 + 1808);
  uint64_t v2 = *(void *)(v0 + 1800);
  int v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692DC1F8);
  sub_2481285A0((uint64_t)&v1[*(int *)(v4 + 28)], v2, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  uint64_t v5 = *(int *)(type metadata accessor for AuthenticationModel() + 40);
  *(_DWORD *)(v0 + 100) = v5;
  uint64_t v6 = (uint64_t *)(v2 + v5);
  uint64_t v7 = *v6;
  *(void *)(v0 + 2184) = *v6;
  unint64_t v8 = v6[1];
  *(void *)(v0 + 2192) = v8;
  unint64_t v9 = v6[2];
  *(void *)(v0 + 2200) = v9;
  unint64_t v10 = v6[3];
  *(void *)(v0 + 2208) = v10;
  uint64_t v11 = v6[4];
  *(void *)(v0 + 2216) = v11;
  uint64_t v12 = v6[5];
  *(void *)(v0 + 2224) = v12;
  uint64_t v13 = v6[6];
  *(void *)(v0 + 2232) = v13;
  uint64_t v14 = v6[7];
  *(void *)(v0 + 2240) = v14;
  unint64_t v15 = v6[8];
  *(void *)(v0 + 2248) = v15;
  unint64_t v16 = v6[9];
  *(void *)(v0 + 2256) = v16;
  switch(*((unsigned char *)v6 + 80))
  {
    case 1:
      if (v3) {
        goto LABEL_53;
      }
      uint64_t v219 = (uint64_t (*)(void))(*(void *)(v0 + 1864) + **(int **)(v0 + 1864));
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 2520) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_2481512F0;
      goto LABEL_57;
    case 2:
      if (v3)
      {
        uint64_t v27 = v0 + 800;
        uint64_t v213 = *(int **)(v0 + 1944);
        uint64_t v220 = v0 + 720;
        *(void *)(v0 + 720) = v7;
        *(void *)(v0 + 728) = v8;
        *(void *)(v0 + 736) = v9;
        *(unsigned char *)(v0 + 744) = v10 & 1;
        *(void *)(v0 + 752) = v11;
        *(void *)(v0 + 760) = v12;
        *(void *)(v0 + 768) = v13;
        *(void *)(v0 + 776) = v14;
        *(void *)(v0 + 784) = v15;
        *(void *)(v0 + 792) = v16;
        uint64_t v28 = v14;
        id v29 = (id)v7;
        sub_247F98864(v11, v12, v13, v28, (void *)v15);
        long long v214 = (uint64_t (*)(uint64_t, uint64_t))((char *)v213 + *v213);
        id v30 = (id)v16;
        uint64_t v31 = (void *)swift_task_alloc();
        *(void *)(v0 + 2528) = v31;
        *uint64_t v31 = v0;
        v31[1] = sub_2481513E4;
        goto LABEL_10;
      }
      uint64_t v126 = v0 + 880;
      unint64_t v225 = *(int **)(v0 + 1928);
      *(void *)(v0 + 880) = v7;
      *(void *)(v0 + 888) = v8;
      *(void *)(v0 + 896) = v9;
      *(unsigned char *)(v0 + 904) = v10 & 1;
      *(void *)(v0 + 912) = v11;
      *(void *)(v0 + 920) = v12;
      *(void *)(v0 + 928) = v13;
      *(void *)(v0 + 936) = v14;
      *(void *)(v0 + 944) = v15;
      *(void *)(v0 + 952) = v16;
      uint64_t v127 = v14;
      id v128 = (id)v7;
      sub_247F98864(v11, v12, v13, v127, (void *)v15);
      char v224 = (uint64_t (*)(uint64_t))((char *)v225 + *v225);
      id v129 = (id)v16;
      long long v130 = (void *)swift_task_alloc();
      *(void *)(v0 + 2536) = v130;
      *long long v130 = v0;
      v130[1] = sub_2481515FC;
      goto LABEL_44;
    case 3:
      if ((v3 & 1) == 0)
      {
        uint64_t v126 = v0 + 1120;
        uint64_t v226 = *(int **)(v0 + 1960);
        *(void *)(v0 + 1120) = v7;
        *(void *)(v0 + 1128) = v8;
        *(void *)(v0 + 1136) = v9;
        *(unsigned char *)(v0 + 1144) = v10 & 1;
        *(void *)(v0 + 1152) = v11;
        *(void *)(v0 + 1160) = v12;
        *(void *)(v0 + 1168) = v13;
        *(void *)(v0 + 1176) = v14;
        *(void *)(v0 + 1184) = v15;
        *(void *)(v0 + 1192) = v16;
        uint64_t v131 = v14;
        id v132 = (id)v7;
        sub_247F98864(v11, v12, v13, v131, (void *)v15);
        char v224 = (uint64_t (*)(uint64_t))((char *)v226 + *v226);
        id v133 = (id)v16;
        long long v134 = (void *)swift_task_alloc();
        *(void *)(v0 + 2552) = v134;
        *long long v134 = v0;
        v134[1] = sub_2481519A0;
        goto LABEL_44;
      }
      uint64_t v27 = v0 + 1040;
      uint64_t v215 = *(int **)(v0 + 1976);
      uint64_t v220 = v0 + 960;
      *(void *)(v0 + 960) = v7;
      *(void *)(v0 + 968) = v8;
      *(void *)(v0 + 976) = v9;
      *(unsigned char *)(v0 + 984) = v10 & 1;
      *(void *)(v0 + 992) = v11;
      *(void *)(v0 + 1000) = v12;
      *(void *)(v0 + 1008) = v13;
      *(void *)(v0 + 1016) = v14;
      *(void *)(v0 + 1024) = v15;
      *(void *)(v0 + 1032) = v16;
      uint64_t v32 = v14;
      id v33 = (id)v7;
      sub_247F98864(v11, v12, v13, v32, (void *)v15);
      long long v214 = (uint64_t (*)(uint64_t, uint64_t))((char *)v215 + *v215);
      id v34 = (id)v16;
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 2544) = v35;
      *uint64_t v35 = v0;
      v35[1] = sub_248151788;
LABEL_10:
      uint64_t v24 = v27;
      uint64_t v36 = v214;
      uint64_t v25 = v220;
      goto LABEL_31;
    case 4:
      if (v3) {
        goto LABEL_53;
      }
      uint64_t v219 = (uint64_t (*)(void))(*(void *)(v0 + 1848) + **(int **)(v0 + 1848));
      uint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 2560) = v37;
      *uint64_t v37 = v0;
      v37[1] = sub_248151B2C;
      goto LABEL_57;
    case 5:
      if (v3)
      {
        uint64_t v38 = v0 + 1472;
        uint64_t v39 = v0 + 1432;
        uint64_t v40 = *(int **)(v0 + 2008);
        *(void *)(v0 + 1472) = v7;
        *(void *)(v0 + 1480) = v8;
        *(void *)(v0 + 1488) = v9;
        *(void *)(v0 + 1496) = v10;
        *(void *)(v0 + 1504) = v11;
        uint64_t v218 = (uint64_t (*)(uint64_t, uint64_t))((char *)v40 + *v40);
        uint64_t v41 = (void *)v10;
        id v42 = (id)v7;
        id v43 = (id)v8;
        id v44 = (id)v9;
        id v45 = v41;
        id v46 = (id)v11;
        uint64_t v47 = (void *)swift_task_alloc();
        *(void *)(v0 + 2568) = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_248151C20;
        goto LABEL_23;
      }
      uint64_t v126 = v0 + 1392;
      long long v135 = *(int **)(v0 + 1992);
      *(void *)(v0 + 1392) = v7;
      *(void *)(v0 + 1400) = v8;
      *(void *)(v0 + 1408) = v9;
      *(void *)(v0 + 1416) = v10;
      *(void *)(v0 + 1424) = v11;
      char v224 = (uint64_t (*)(uint64_t))((char *)v135 + *v135);
      uint64_t v136 = (void *)v10;
      id v137 = (id)v7;
      id v138 = (id)v8;
      id v139 = (id)v9;
      id v140 = v136;
      id v141 = (id)v11;
      long long v142 = (void *)swift_task_alloc();
      *(void *)(v0 + 2576) = v142;
      *long long v142 = v0;
      v142[1] = sub_248151E20;
      goto LABEL_44;
    case 6:
      if (v3) {
        goto LABEL_53;
      }
      uint64_t v219 = (uint64_t (*)(void))(*(void *)(v0 + 1880) + **(int **)(v0 + 1880));
      uint64_t v48 = (void *)swift_task_alloc();
      *(void *)(v0 + 2584) = v48;
      *uint64_t v48 = v0;
      v48[1] = sub_248151FAC;
      goto LABEL_57;
    case 7:
      if (v3)
      {
        uint64_t v38 = v0 + 1640;
        uint64_t v39 = v0 + 1608;
        uint64_t v49 = *(int **)(v0 + 2040);
        *(void *)(v0 + 1640) = v7;
        *(void *)(v0 + 1648) = v8;
        *(void *)(v0 + 1656) = v9;
        *(void *)(v0 + 1664) = v10;
        uint64_t v218 = (uint64_t (*)(uint64_t, uint64_t))((char *)v49 + *v49);
        uint64_t v50 = (void *)v10;
        id v51 = (id)v7;
        id v52 = (id)v8;
        id v53 = (id)v9;
        id v54 = v50;
        uint64_t v55 = (void *)swift_task_alloc();
        *(void *)(v0 + 2592) = v55;
        *uint64_t v55 = v0;
        v55[1] = sub_2481520A0;
        goto LABEL_23;
      }
      uint64_t v126 = v0 + 1672;
      long long v143 = *(int **)(v0 + 2024);
      *(void *)(v0 + 1672) = v7;
      *(void *)(v0 + 1680) = v8;
      *(void *)(v0 + 1688) = v9;
      *(void *)(v0 + 1696) = v10;
      char v224 = (uint64_t (*)(uint64_t))((char *)v143 + *v143);
      long long v144 = (void *)v10;
      id v145 = (id)v7;
      id v146 = (id)v8;
      id v147 = (id)v9;
      id v148 = v144;
      long long v149 = (void *)swift_task_alloc();
      *(void *)(v0 + 2600) = v149;
      *long long v149 = v0;
      v149[1] = sub_24815229C;
      goto LABEL_44;
    case 8:
      if (v3)
      {
        uint64_t v56 = *(int **)(v0 + 2072);
        *(void *)(v0 + 1512) = v7;
        *(void *)(v0 + 1520) = v8;
        *(void *)(v0 + 1528) = v9;
        *(void *)(v0 + 1536) = v10;
        uint64_t v218 = (uint64_t (*)(uint64_t, uint64_t))((char *)v56 + *v56);
        uint64_t v57 = (void *)v10;
        id v58 = (id)v7;
        id v59 = (id)v8;
        id v60 = (id)v9;
        id v61 = v57;
        uint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 2608) = v62;
        *uint64_t v62 = v0;
        v62[1] = sub_248152428;
        uint64_t v24 = v0 + 1544;
        uint64_t v25 = v0 + 1512;
        goto LABEL_30;
      }
      uint64_t v126 = v0 + 1576;
      long long v150 = *(int **)(v0 + 2056);
      *(void *)(v0 + 1576) = v7;
      *(void *)(v0 + 1584) = v8;
      *(void *)(v0 + 1592) = v9;
      *(void *)(v0 + 1600) = v10;
      char v224 = (uint64_t (*)(uint64_t))((char *)v150 + *v150);
      long long v151 = (void *)v10;
      id v152 = (id)v7;
      id v153 = (id)v8;
      id v154 = (id)v9;
      id v155 = v151;
      uint64_t v156 = (void *)swift_task_alloc();
      *(void *)(v0 + 2616) = v156;
      void *v156 = v0;
      v156[1] = sub_248152624;
      goto LABEL_44;
    case 9:
      if (v3)
      {
        uint64_t v38 = v0 + 1736;
        uint64_t v39 = v0 + 1704;
        uint64_t v63 = *(int **)(v0 + 2104);
        *(void *)(v0 + 1736) = v7;
        *(void *)(v0 + 1744) = v8;
        *(void *)(v0 + 1752) = v9;
        *(unsigned char *)(v0 + 1760) = v10;
        uint64_t v218 = (uint64_t (*)(uint64_t, uint64_t))((char *)v63 + *v63);
        id v64 = (id)v7;
        swift_bridgeObjectRetain();
        uint64_t v65 = (void *)swift_task_alloc();
        *(void *)(v0 + 2624) = v65;
        *uint64_t v65 = v0;
        v65[1] = sub_2481527B0;
LABEL_23:
        uint64_t v24 = v39;
        uint64_t v25 = v38;
        goto LABEL_30;
      }
      uint64_t v126 = v0 + 1768;
      uint64_t v157 = *(int **)(v0 + 2088);
      *(void *)(v0 + 1768) = v7;
      *(void *)(v0 + 1776) = v8;
      *(void *)(v0 + 1784) = v9;
      *(unsigned char *)(v0 + 1792) = v10;
      char v224 = (uint64_t (*)(uint64_t))((char *)v157 + *v157);
      id v158 = (id)v7;
      swift_bridgeObjectRetain();
      long long v159 = (void *)swift_task_alloc();
      *(void *)(v0 + 2632) = v159;
      *long long v159 = v0;
      v159[1] = sub_2481529AC;
LABEL_44:
      uint64_t v125 = v126;
      goto LABEL_45;
    case 0xA:
      uint64_t v206 = *(void *)(v7 + 16);
      uint64_t v210 = *(void *)(v7 + 24);
      *(void *)(v0 + 2264) = v210;
      uint64_t v66 = *(void *)(v7 + 40);
      uint64_t v207 = *(void *)(v7 + 32);
      *(void *)(v0 + 2272) = v66;
      uint64_t v67 = *(void *)(v7 + 48);
      *(void *)(v0 + 2280) = v67;
      uint64_t v68 = *(void *)(v7 + 56);
      *(void *)(v0 + 2288) = v68;
      uint64_t v69 = *(void *)(v7 + 64);
      *(void *)(v0 + 2296) = v69;
      uint64_t v70 = *(void *)(v7 + 72);
      *(void *)(v0 + 2304) = v70;
      uint64_t v71 = *(void *)(v7 + 80);
      *(void *)(v0 + 2312) = v71;
      uint64_t v221 = *(void *)(v7 + 88);
      *(void *)(v0 + 2320) = v221;
      char v212 = *(unsigned char *)(v7 + 96);
      *(unsigned char *)(v0 + 98) = v212;
      char v205 = *(unsigned char *)(v7 + 97);
      uint64_t v216 = *(void **)(v7 + 104);
      *(void *)(v0 + 2328) = v216;
      uint64_t v72 = *(void **)(v7 + 112);
      *(void *)(v0 + 2336) = v72;
      uint64_t v73 = *(void **)(v7 + 120);
      *(void *)(v0 + 2344) = v73;
      uint64_t v74 = *(void **)(v7 + 128);
      *(void *)(v0 + 2352) = v74;
      uint64_t v75 = *(void **)(v7 + 136);
      *(void *)(v0 + 2360) = v75;
      uint64_t v76 = *(void **)(v7 + 144);
      *(void *)(v0 + 2368) = v76;
      uint64_t v77 = *(void *)(v7 + 152);
      *(void *)(v0 + 2376) = v77;
      long long v78 = *(void **)(v7 + 160);
      *(void *)(v0 + 2384) = v78;
      long long v79 = *(void **)(v7 + 168);
      *(void *)(v0 + 2392) = v79;
      long long v80 = *(void **)(v7 + 176);
      *(void *)(v0 + 2400) = v80;
      char v81 = *(unsigned char *)(v7 + 184);
      *(unsigned char *)(v0 + 99) = v81;
      uint64_t v203 = v78;
      uint64_t v204 = v79;
      uint64_t v201 = v73;
      uint64_t v202 = v72;
      uint64_t v199 = v76;
      uint64_t v200 = v75;
      uint64_t v198 = v77;
      if (v3)
      {
        *(void *)(v0 + 16) = v206;
        uint64_t v196 = *(int **)(v0 + 2136);
        *(void *)(v0 + 24) = v210;
        *(void *)(v0 + 32) = v207;
        *(void *)(v0 + 40) = v66;
        *(void *)(v0 + 48) = v67;
        *(void *)(v0 + 56) = v68;
        *(void *)(v0 + 64) = v69;
        *(void *)(v0 + 72) = v70;
        *(void *)(v0 + 80) = v71;
        *(void *)(v0 + 88) = v221;
        *(unsigned char *)(v0 + 96) = v212;
        *(unsigned char *)(v0 + 97) = v205;
        *(void *)(v0 + 632) = v216;
        *(void *)(v0 + 640) = v72;
        *(void *)(v0 + 648) = v73;
        *(void *)(v0 + 656) = v74;
        *(void *)(v0 + 664) = v75;
        *(void *)(v0 + 672) = v76;
        *(void *)(v0 + 680) = v77;
        *(void *)(v0 + 688) = v78;
        *(void *)(v0 + 696) = v79;
        *(void *)(v0 + 704) = v80;
        *(unsigned char *)(v0 + 712) = v81;
        uint64_t v188 = (void *)v15;
        long long v192 = (void *)v16;
        uint64_t v82 = v68;
        long long v83 = (void *)v8;
        long long v84 = (void *)v9;
        uint64_t v85 = v69;
        long long v86 = (void *)v11;
        uint64_t v87 = v70;
        uint64_t v88 = v71;
        uint64_t v89 = v13;
        char v208 = v74;
        uint64_t v90 = v67;
        long long v91 = v80;
        sub_247F986A0((void *)v7, v83, v84, (void *)v10, v86, (void *)v12, v89, (void *)v14, v188, v192, 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FA97F0(v90, v82, v85, v87, v88, v221, v212);
        sub_247F986A0(v216, v202, v201, v208, v200, v199, v198, v203, v204, v91, v81);
        uint64_t v222 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v196 + *v196);
        long long v92 = (void *)swift_task_alloc();
        *(void *)(v0 + 2640) = v92;
        *long long v92 = v0;
        v92[1] = sub_248152B38;
        return v222(v0 + 456, v0 + 16, v0 + 632);
      }
      uint64_t v197 = *(int **)(v0 + 2120);
      *(void *)(v0 + 104) = v206;
      *(void *)(v0 + 112) = v210;
      *(void *)(v0 + 120) = v207;
      *(void *)(v0 + 128) = v66;
      *(void *)(v0 + 136) = v67;
      *(void *)(v0 + 144) = v68;
      *(void *)(v0 + 152) = v69;
      *(void *)(v0 + 160) = v70;
      *(void *)(v0 + 168) = v71;
      *(void *)(v0 + 176) = v221;
      *(unsigned char *)(v0 + 184) = v212;
      *(unsigned char *)(v0 + 185) = v205;
      *(void *)(v0 + 368) = v216;
      *(void *)(v0 + 376) = v72;
      *(void *)(v0 + 384) = v73;
      *(void *)(v0 + 392) = v74;
      *(void *)(v0 + 400) = v75;
      *(void *)(v0 + 408) = v76;
      *(void *)(v0 + 416) = v77;
      *(void *)(v0 + 424) = v78;
      *(void *)(v0 + 432) = v79;
      *(void *)(v0 + 440) = v80;
      *(unsigned char *)(v0 + 448) = v81;
      long long v190 = (void *)v15;
      long long v194 = (void *)v16;
      uint64_t v160 = v68;
      uint64_t v161 = (void *)v8;
      uint64_t v162 = (void *)v9;
      uint64_t v163 = v69;
      uint64_t v164 = (void *)v11;
      uint64_t v165 = v70;
      uint64_t v166 = v71;
      uint64_t v167 = v13;
      uint64_t v168 = v74;
      uint64_t v169 = v67;
      uint64_t v170 = v80;
      sub_247F986A0((void *)v7, v161, v162, (void *)v10, v164, (void *)v12, v167, (void *)v14, v190, v194, 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FA97F0(v169, v160, v163, v165, v166, v221, v212);
      sub_247F986A0(v216, v202, v201, v168, v200, v199, v198, v203, v204, v170, v81);
      unint64_t v227 = (uint64_t (*)(uint64_t, uint64_t))((char *)v197 + *v197);
      uint64_t v171 = (void *)swift_task_alloc();
      *(void *)(v0 + 2648) = v171;
      void *v171 = v0;
      v171[1] = sub_248152E44;
      uint64_t v24 = v0 + 104;
      uint64_t v25 = v0 + 368;
      uint64_t v36 = v227;
      return v36(v24, v25);
    case 0xB:
      long long v94 = *(void **)(v7 + 16);
      *(void *)(v0 + 2408) = v94;
      long long v95 = *(void **)(v7 + 24);
      *(void *)(v0 + 2416) = v95;
      uint64_t v96 = *(void **)(v7 + 32);
      *(void *)(v0 + 2424) = v96;
      uint64_t v97 = *(void **)(v7 + 40);
      *(void *)(v0 + 2432) = v97;
      uint64_t v98 = *(void **)(v7 + 48);
      *(void *)(v0 + 2440) = v98;
      uint64_t v99 = *(void **)(v7 + 56);
      *(void *)(v0 + 2448) = v99;
      uint64_t v100 = *(void *)(v7 + 64);
      *(void *)(v0 + 2456) = v100;
      uint64_t v101 = *(void **)(v7 + 72);
      *(void *)(v0 + 2464) = v101;
      long long v102 = *(void **)(v7 + 80);
      *(void *)(v0 + 2472) = v102;
      long long v103 = *(void **)(v7 + 88);
      *(void *)(v0 + 2480) = v103;
      char v104 = *(unsigned char *)(v7 + 96);
      *(unsigned char *)(v0 + 186) = v104;
      uint64_t v217 = v95;
      uint64_t v223 = v94;
      if (v3)
      {
        long long v209 = *(int **)(v0 + 2168);
        *(void *)(v0 + 192) = v94;
        *(void *)(v0 + 200) = v95;
        *(void *)(v0 + 208) = v96;
        *(void *)(v0 + 216) = v97;
        *(void *)(v0 + 224) = v98;
        *(void *)(v0 + 232) = v99;
        *(void *)(v0 + 240) = v100;
        *(void *)(v0 + 248) = v101;
        *(void *)(v0 + 256) = v102;
        *(void *)(v0 + 264) = v103;
        *(unsigned char *)(v0 + 272) = v104;
        unsigned __int8 v189 = (void *)v15;
        long long v193 = (void *)v16;
        uint64_t v105 = v103;
        uint64_t v106 = (void *)v8;
        long long v107 = v96;
        long long v108 = (void *)v9;
        uint64_t v109 = v98;
        uint64_t v110 = (void *)v11;
        long long v111 = v99;
        long long v112 = (void *)v12;
        uint64_t v113 = v100;
        uint64_t v114 = v13;
        long long v115 = v97;
        long long v116 = v101;
        long long v117 = v102;
        sub_247F986A0((void *)v7, v106, v108, (void *)v10, v110, v112, v114, (void *)v14, v189, v193, 11);
        sub_247F986A0(v223, v217, v107, v115, v109, v111, v113, v116, v117, v105, v104);
        uint64_t v218 = (uint64_t (*)(uint64_t, uint64_t))((char *)v209 + *v209);
        long long v118 = (void *)swift_task_alloc();
        *(void *)(v0 + 2656) = v118;
        *long long v118 = v0;
        v118[1] = sub_2481530C4;
        uint64_t v25 = v0 + 192;
        uint64_t v24 = v0 + 280;
        goto LABEL_30;
      }
      uint64_t v211 = *(int **)(v0 + 2152);
      *(void *)(v0 + 544) = v94;
      *(void *)(v0 + 552) = v95;
      *(void *)(v0 + 560) = v96;
      *(void *)(v0 + 568) = v97;
      *(void *)(v0 + 576) = v98;
      *(void *)(v0 + 584) = v99;
      *(void *)(v0 + 592) = v100;
      *(void *)(v0 + 600) = v101;
      *(void *)(v0 + 608) = v102;
      *(void *)(v0 + 616) = v103;
      *(unsigned char *)(v0 + 624) = v104;
      long long v191 = (void *)v15;
      uint64_t v195 = (void *)v16;
      uint64_t v172 = v103;
      long long v173 = (void *)v8;
      uint64_t v174 = v96;
      long long v175 = (void *)v9;
      uint64_t v176 = v98;
      uint64_t v177 = (void *)v11;
      uint64_t v178 = v99;
      uint64_t v179 = (void *)v12;
      uint64_t v180 = v100;
      uint64_t v181 = v13;
      unint64_t v182 = v97;
      uint64_t v183 = v101;
      uint64_t v184 = v102;
      sub_247F986A0((void *)v7, v173, v175, (void *)v10, v177, v179, v181, (void *)v14, v191, v195, 11);
      sub_247F986A0(v223, v217, v174, v182, v176, v178, v180, v183, v184, v172, v104);
      char v224 = (uint64_t (*)(uint64_t))((char *)v211 + *v211);
      uint64_t v185 = (void *)swift_task_alloc();
      *(void *)(v0 + 2664) = v185;
      *uint64_t v185 = v0;
      v185[1] = sub_248153358;
      uint64_t v125 = v0 + 544;
      goto LABEL_45;
    case 0xC:
      if (v9 | v8 | v7 | v10 | v11 | v12 | v13 | v14 | v15 | v16)
      {
        if ((v3 & 1) == 0)
        {
          uint64_t v219 = (uint64_t (*)(void))(*(void *)(v0 + 1832) + **(int **)(v0 + 1832));
          long long v119 = (void *)swift_task_alloc();
          *(void *)(v0 + 2496) = v119;
          *long long v119 = v0;
          v119[1] = sub_248150E3C;
LABEL_57:
          return v219();
        }
      }
      else if ((v3 & 1) == 0)
      {
        uint64_t v219 = (uint64_t (*)(void))(*(void *)(v0 + 1816) + **(int **)(v0 + 1816));
        unsigned __int8 v187 = (void *)swift_task_alloc();
        *(void *)(v0 + 2488) = v187;
        void *v187 = v0;
        v187[1] = sub_248150D48;
        goto LABEL_57;
      }
LABEL_53:
      uint64_t v186 = *(uint64_t (**)(void))(v0 + 8);
      return v186();
    default:
      char v17 = BYTE2(v11) & 1;
      char v18 = BYTE3(v11) & 1;
      if (v3)
      {
        uint64_t v19 = *(int **)(v0 + 1912);
        *(void *)(v0 + 1200) = v7;
        *(void *)(v0 + 1208) = v8;
        *(void *)(v0 + 1216) = v9;
        *(void *)(v0 + 1224) = v10;
        *(_WORD *)(v0 + 1232) = v11;
        *(unsigned char *)(v0 + 1234) = v17;
        *(unsigned char *)(v0 + 1235) = v18;
        *(void *)(v0 + 1240) = v12;
        *(void *)(v0 + 1248) = v13;
        *(void *)(v0 + 1256) = v14;
        uint64_t v218 = (uint64_t (*)(uint64_t, uint64_t))((char *)v19 + *v19);
        long long v20 = (void *)v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v21 = (id)v12;
        swift_bridgeObjectRetain();
        id v22 = v20;
        uint64_t v23 = (void *)swift_task_alloc();
        *(void *)(v0 + 2504) = v23;
        *uint64_t v23 = v0;
        v23[1] = sub_248150F30;
        uint64_t v24 = v0 + 1264;
        uint64_t v25 = v0 + 1200;
LABEL_30:
        uint64_t v36 = v218;
LABEL_31:
        return v36(v24, v25);
      }
      else
      {
        long long v120 = *(int **)(v0 + 1896);
        *(void *)(v0 + 1328) = v7;
        *(void *)(v0 + 1336) = v8;
        *(void *)(v0 + 1344) = v9;
        *(void *)(v0 + 1352) = v10;
        *(_WORD *)(v0 + 1360) = v11;
        *(unsigned char *)(v0 + 1362) = v17;
        *(unsigned char *)(v0 + 1363) = v18;
        *(void *)(v0 + 1368) = v12;
        *(void *)(v0 + 1376) = v13;
        *(void *)(v0 + 1384) = v14;
        char v224 = (uint64_t (*)(uint64_t))((char *)v120 + *v120);
        long long v121 = (void *)v14;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v122 = (id)v12;
        swift_bridgeObjectRetain();
        id v123 = v121;
        long long v124 = (void *)swift_task_alloc();
        *(void *)(v0 + 2512) = v124;
        *long long v124 = v0;
        v124[1] = sub_248151168;
        uint64_t v125 = v0 + 1328;
LABEL_45:
        return v224(v125);
      }
  }
}