uint64_t static Result<>.catching<A>(_:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v6;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;

  v4[2] = a1;
  v4[3] = a4;
  v8 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v6 = (void *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_247F97180;
  return v8(a1);
}

uint64_t sub_247F97180()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    v2 = sub_247F97324;
  }
  else {
    v2 = sub_247F97294;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247F97294()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175ED0();
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247F97324()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  sub_248175ED0();
  swift_storeEnumTagMultiPayload();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void type metadata accessor for CBUseCase(uint64_t a1)
{
}

void type metadata accessor for CBNearbyActionProblemFlags(uint64_t a1)
{
}

void type metadata accessor for CBNearbyActionFlags(uint64_t a1)
{
}

void type metadata accessor for CBNearbyActionType(uint64_t a1)
{
}

void type metadata accessor for RPStatusFlags(uint64_t a1)
{
}

void type metadata accessor for RPDataLinkType(uint64_t a1)
{
}

void type metadata accessor for SFDeviceActionType(uint64_t a1)
{
}

void type metadata accessor for SFAdvertiseRate(uint64_t a1)
{
}

void type metadata accessor for CUPasswordType(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_247F974C8(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_247F974E8(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
}

void type metadata accessor for AIDAServiceType(uint64_t a1)
{
}

uint64_t sub_247F97538(uint64_t a1, uint64_t a2)
{
  return sub_247F97730(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_247F97550(uint64_t a1, id *a2)
{
  uint64_t result = sub_248175140();
  *a2 = 0;
  return result;
}

uint64_t sub_247F975C8(uint64_t a1, id *a2)
{
  char v3 = sub_248175150();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_247F97648@<X0>(uint64_t *a1@<X8>)
{
  sub_248175160();
  uint64_t v2 = sub_248175130();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_247F9768C()
{
  uint64_t v0 = sub_248175160();
  uint64_t v2 = v1;
  if (v0 == sub_248175160() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_248175CE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_247F97718(uint64_t a1, uint64_t a2)
{
  return sub_247F97730(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_247F97730(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_248175160();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_247F97774()
{
  sub_248175160();
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247F977C8()
{
  sub_248175160();
  sub_248175E50();
  sub_2481751A0();
  uint64_t v0 = sub_248175EC0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_247F9783C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_248175130();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_247F97884@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_248175160();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_247F978B0(void *a1@<X8>)
{
  *a1 = *v1;
}

void sub_247F978BC(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unsigned char *sub_247F978C4@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

unsigned char *sub_247F978D8@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

unsigned char *sub_247F978EC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_247F97900(unsigned char *a1, unsigned __int8 *a2)
{
  int v3 = *a2;
  int v4 = *v2;
  if ((v4 & v3) != v3) {
    *uint64_t v2 = v4 | v3;
  }
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_247F97930@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  int v5 = v4 & v3;
  if ((v4 & v3) != 0) {
    *uint64_t v2 = v4 & ~(_BYTE)v3;
  }
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_247F9795C@<X0>(unsigned __int8 *result@<X0>, unsigned char *a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *uint64_t v2 = v4 | v3;
  int v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned char *sub_247F97980(unsigned char *result)
{
  *v1 |= *result;
  return result;
}

unsigned char *sub_247F97994(unsigned char *result)
{
  *v1 &= *result;
  return result;
}

unsigned char *sub_247F979A8(unsigned char *result)
{
  *v1 ^= *result;
  return result;
}

unsigned char *sub_247F979BC@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_247F979D0(unsigned __int8 *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_247F979E4(unsigned char *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_247F979F8(unsigned __int8 *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_247F97A0C()
{
  return *v0 == 0;
}

uint64_t sub_247F97A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

unsigned char *sub_247F97A34(unsigned char *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_247F97A48()
{
  return sub_248175EC0();
}

uint64_t sub_247F97A90()
{
  return sub_248175E80();
}

uint64_t sub_247F97ABC()
{
  return sub_248175EC0();
}

unsigned __int8 *sub_247F97B00@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_247F97B10(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

_DWORD *sub_247F97B1C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_247F97B2C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_247F97B38@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  char v3 = sub_247F97EDC(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unsigned char *sub_247F97B78@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_247F97B84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_247F97B98(uint64_t a1)
{
  uint64_t v2 = sub_247F97CE4((unint64_t *)&qword_26B13BE70, type metadata accessor for AIDAServiceType);
  uint64_t v3 = sub_247F97CE4(&qword_2692D5000, type metadata accessor for AIDAServiceType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_247F97C54()
{
  return sub_247F97CE4(&qword_2692D4FC8, type metadata accessor for AIDAServiceType);
}

uint64_t sub_247F97C9C()
{
  return sub_247F97CE4(&qword_2692D4FD0, type metadata accessor for AIDAServiceType);
}

uint64_t sub_247F97CE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247F97D2C()
{
  return sub_247F97CE4(&qword_2692D4FD8, type metadata accessor for CBNearbyActionType);
}

uint64_t sub_247F97D74()
{
  return sub_247F97CE4(&qword_2692D4FE0, type metadata accessor for CBNearbyActionProblemFlags);
}

uint64_t sub_247F97DBC()
{
  return sub_247F97CE4(&qword_2692D4FE8, type metadata accessor for CBNearbyActionProblemFlags);
}

uint64_t sub_247F97E04()
{
  return sub_247F97CE4(&qword_2692D4FF0, type metadata accessor for CBNearbyActionProblemFlags);
}

uint64_t sub_247F97E4C()
{
  return sub_247F97CE4(&qword_2692D4FF8, type metadata accessor for CBNearbyActionProblemFlags);
}

uint64_t sub_247F97E94()
{
  return sub_247F97CE4((unint64_t *)&unk_26B13BE80, type metadata accessor for AIDAServiceType);
}

uint64_t sub_247F97EDC(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  uint64_t v3 = (unsigned __int8 *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    uint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for AKAppleIDInterativeAuthDevicePromptType(uint64_t a1)
{
}

void sub_247F97F3C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t AuthenticationModel.account.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247F97FA8(v1, a1);
}

uint64_t sub_247F97FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t AuthenticationModel.account.setter(uint64_t a1)
{
  return sub_247F9805C(a1, v1);
}

uint64_t sub_247F9805C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AuthenticationModel.account.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.candidateAccountID.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  uint64_t v13 = v3[8];
  uint64_t v12 = v3[9];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v13;
  a1[9] = v12;
  return sub_247F9819C(v4, v5);
}

uint64_t type metadata accessor for AuthenticationModel()
{
  uint64_t result = qword_2692D55E8;
  if (!qword_2692D55E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_247F9819C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 AuthenticationModel.candidateAccountID.setter(long long *a1)
{
  long long v9 = *a1;
  long long v7 = a1[2];
  long long v8 = a1[1];
  __n128 v6 = (__n128)a1[3];
  uint64_t v2 = *((void *)a1 + 8);
  uint64_t v3 = *((void *)a1 + 9);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 20);
  sub_247F982A0(*(void *)v4, *(void *)(v4 + 8));
  *(_OWORD *)uint64_t v4 = v9;
  *(_OWORD *)(v4 + 16) = v8;
  __n128 result = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(__n128 *)(v4 + 48) = v6;
  *(void *)(v4 + 64) = v2;
  *(void *)(v4 + 72) = v3;
  return result;
}

uint64_t sub_247F982A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*AuthenticationModel.candidateAccountID.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.userInteraction.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for AuthenticationModel();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t AuthenticationModel.userInteraction.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for AuthenticationModel();
  *(unsigned char *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*AuthenticationModel.userInteraction.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.idmsData.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuthenticationModel.idmsData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for AuthenticationModel() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*AuthenticationModel.idmsData.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.currentServices.getter()
{
  type metadata accessor for AuthenticationModel();
  return swift_bridgeObjectRetain();
}

uint64_t AuthenticationModel.currentServices.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for AuthenticationModel() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*AuthenticationModel.currentServices.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.supportsSplitAccounts.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for AuthenticationModel() + 36));
}

uint64_t AuthenticationModel.supportsSplitAccounts.setter(char a1)
{
  uint64_t result = type metadata accessor for AuthenticationModel();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*AuthenticationModel.supportsSplitAccounts.modify())()
{
  return nullsub_1;
}

id AuthenticationModel.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  __n128 v6 = *(void **)(v3 + 16);
  long long v7 = *(void **)(v3 + 24);
  long long v8 = *(void **)(v3 + 32);
  long long v9 = *(void **)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void **)(v3 + 56);
  uint64_t v12 = *(void **)(v3 + 64);
  uint64_t v13 = *(void **)(v3 + 72);
  LOBYTE(v3) = *(unsigned char *)(v3 + 80);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = v3;
  return sub_247F986A0(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v3);
}

id sub_247F986A0(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, void *a8, void *a9, void *a10, char a11)
{
  id result = a10;
  switch(a11)
  {
    case 0:
    case 1:
      id v19 = a8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v20 = a6;
      goto LABEL_14;
    case 2:
    case 3:
    case 4:
      id v31 = a10;
      id v18 = a1;
      sub_247F98864((uint64_t)a5, (uint64_t)a6, a7, (uint64_t)a8, a9);
      goto LABEL_6;
    case 5:
    case 6:
      id v21 = a5;
      id v22 = a1;
      id v23 = a2;
      id v24 = a3;
      v25 = a4;
      goto LABEL_7;
    case 7:
    case 8:
      id v31 = a3;
      id v26 = a4;
      id v27 = a1;
      id v28 = a2;
LABEL_6:
      v25 = v31;
LABEL_7:
      id result = v25;
      break;
    case 9:
      id v29 = a1;
LABEL_14:
      id result = (id)swift_bridgeObjectRetain();
      break;
    case 10:
    case 11:
      id result = (id)swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247F98864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    id v6 = a5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 AuthenticationModel.state.setter(long long *a1)
{
  long long v10 = *a1;
  long long v8 = a1[2];
  long long v9 = a1[1];
  __n128 v7 = (__n128)a1[3];
  uint64_t v2 = *((void *)a1 + 8);
  uint64_t v3 = *((void *)a1 + 9);
  char v4 = *((unsigned char *)a1 + 80);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  sub_247F98958(*(void **)v5, *(void **)(v5 + 8), *(void **)(v5 + 16), *(void **)(v5 + 24), *(void *)(v5 + 32), *(void **)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void **)(v5 + 64), *(void **)(v5 + 72), *(unsigned char *)(v5 + 80));
  *(_OWORD *)uint64_t v5 = v10;
  *(_OWORD *)(v5 + 16) = v9;
  __n128 result = v7;
  *(_OWORD *)(v5 + 32) = v8;
  *(__n128 *)(v5 + 48) = v7;
  *(void *)(v5 + 64) = v2;
  *(void *)(v5 + 72) = v3;
  *(unsigned char *)(v5 + 80) = v4;
  return result;
}

void sub_247F98958(void *a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, char a11)
{
  switch(a11)
  {
    case 0:
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v15 = (void *)a8;
      goto LABEL_11;
    case 2:
    case 3:
    case 4:

      sub_247F98AE8(a5, (uint64_t)a6, a7, a8, a9);
      goto LABEL_10;
    case 5:
    case 6:

      v15 = (void *)a5;
      goto LABEL_11;
    case 7:
    case 8:
      a10 = a4;

      goto LABEL_10;
    case 9:
      a10 = a1;
      swift_bridgeObjectRelease();
LABEL_10:
      v15 = a10;
LABEL_11:

      break;
    case 10:
    case 11:
      swift_release();
      break;
    default:
      return;
  }
}

void sub_247F98AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t (*AuthenticationModel.state.modify())()
{
  return nullsub_1;
}

uint64_t sub_247F98B8C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AuthenticationModel() + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (*v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    __n128 v7 = sub_247FB32BC;
  }
  else
  {
    __n128 v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = v6;
  return sub_247F98D10(v4);
}

uint64_t sub_247F98C20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_247FB3284;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  __n128 v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AuthenticationModel() + 44));
  uint64_t v8 = *v7;
  sub_247F98D10(v3);
  uint64_t result = sub_247F98D68(v8);
  *__n128 v7 = (uint64_t)v6;
  v7[1] = v5;
  return result;
}

uint64_t AuthenticationModel.contextModifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AuthenticationModel() + 44));
  sub_247F98D10(v1);
  return v1;
}

uint64_t sub_247F98D10(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t AuthenticationModel.contextModifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(int *)(type metadata accessor for AuthenticationModel() + 44));
  uint64_t result = sub_247F98D68(*v5);
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t sub_247F98D68(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t (*AuthenticationModel.contextModifier.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.init(account:userInteraction:state:idmsData:supportsSplitAccounts:currentServices:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v10 = *a2;
  long long v25 = a3[1];
  long long v26 = *a3;
  long long v23 = a3[3];
  long long v24 = a3[2];
  uint64_t v11 = *((void *)a3 + 8);
  uint64_t v12 = *((void *)a3 + 9);
  char v13 = *((unsigned char *)a3 + 80);
  uint64_t v14 = type metadata accessor for IdMSAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a8, 1, 1, v14);
  v15 = (int *)type metadata accessor for AuthenticationModel();
  v16 = (_OWORD *)(a8 + v15[5]);
  v16[3] = 0u;
  v16[4] = 0u;
  v16[1] = 0u;
  v16[2] = 0u;
  _OWORD *v16 = 0u;
  v17 = (void *)(a8 + v15[7]);
  void *v17 = 0;
  v17[1] = 0;
  uint64_t v18 = v15[8];
  *(void *)(a8 + v18) = MEMORY[0x263F8EE78];
  uint64_t v19 = v15[9];
  *(unsigned char *)(a8 + v19) = 0;
  id v20 = (void *)(a8 + v15[11]);
  *id v20 = 0;
  v20[1] = 0;
  sub_247F9805C(a1, a8);
  *(unsigned char *)(a8 + v15[6]) = v10;
  uint64_t v21 = a8 + v15[10];
  *(_OWORD *)uint64_t v21 = v26;
  *(_OWORD *)(v21 + 16) = v25;
  *(_OWORD *)(v21 + 32) = v24;
  *(_OWORD *)(v21 + 48) = v23;
  *(void *)(v21 + 64) = v11;
  *(void *)(v21 + 72) = v12;
  *(unsigned char *)(v21 + 80) = v13;
  swift_bridgeObjectRelease();
  void *v17 = a4;
  v17[1] = a5;
  *(unsigned char *)(a8 + v19) = a6;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a8 + v18) = a7;
  return result;
}

uint64_t sub_247F98F38(unsigned __int8 *a1, char *a2)
{
  return sub_248120F0C(*a1, *a2);
}

uint64_t sub_247F98F44()
{
  return sub_248121148();
}

uint64_t sub_247F98F4C()
{
  return sub_2481213A4();
}

uint64_t sub_247F98F54()
{
  return sub_2481219F4();
}

uint64_t sub_247F98F5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_247FA7B30();
  *a1 = result;
  return result;
}

void sub_247F98F8C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x746E756F636361;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEF6E6F6974636172;
      uint64_t v3 = 0x65746E4972657375;
      goto LABEL_3;
    case 2:
      *a1 = 0x6574617473;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x61746144736D6469;
      a1[1] = 0xE800000000000000;
      break;
    case 4:
      *a1 = 0xD000000000000015;
      a1[1] = 0x80000002481901F0;
      break;
    case 5:
      *a1 = 0x53746E6572727563;
      a1[1] = 0xEF73656369767265;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_247F99080()
{
  unint64_t result = 0x746E756F636361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65746E4972657375;
      break;
    case 2:
      unint64_t result = 0x6574617473;
      break;
    case 3:
      unint64_t result = 0x61746144736D6469;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x53746E6572727563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247F99160@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_247FA7B30();
  *a1 = result;
  return result;
}

uint64_t sub_247F99188()
{
  return 0;
}

void sub_247F99194(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_247F991A0(uint64_t a1)
{
  unint64_t v2 = sub_247F99590();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F991DC(uint64_t a1)
{
  unint64_t v2 = sub_247F99590();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5088);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247F99590();
  sub_248175F60();
  LOBYTE(v15[0]) = 0;
  type metadata accessor for IdMSAccount();
  sub_247FB3350(&qword_2692D5098, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  sub_248175B90();
  if (!v2)
  {
    long long v9 = (int *)type metadata accessor for AuthenticationModel();
    LOBYTE(v15[0]) = *(unsigned char *)(v3 + v9[6]);
    char v17 = 1;
    sub_247F995E4();
    sub_248175BE0();
    uint64_t v10 = v3 + v9[10];
    char v11 = *(unsigned char *)(v10 + 80);
    long long v12 = *(_OWORD *)(v10 + 16);
    v15[0] = *(_OWORD *)v10;
    v15[1] = v12;
    long long v13 = *(_OWORD *)(v10 + 48);
    v15[2] = *(_OWORD *)(v10 + 32);
    v15[3] = v13;
    v15[4] = *(_OWORD *)(v10 + 64);
    char v16 = v11;
    char v17 = 2;
    sub_247F99638();
    sub_248175BE0();
    v15[0] = *(_OWORD *)(v3 + v9[7]);
    char v17 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D50B0);
    sub_247F9968C();
    sub_248175BE0();
    LOBYTE(v15[0]) = 4;
    sub_248175BC0();
    *(void *)&v15[0] = *(void *)(v3 + v9[8]);
    char v17 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D50C0);
    sub_247F99E54(&qword_2692D50C8, &qword_2692D50D0);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_247F99590()
{
  unint64_t result = qword_2692D5090;
  if (!qword_2692D5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5090);
  }
  return result;
}

unint64_t sub_247F995E4()
{
  unint64_t result = qword_2692D50A0;
  if (!qword_2692D50A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D50A0);
  }
  return result;
}

unint64_t sub_247F99638()
{
  unint64_t result = qword_2692D50A8;
  if (!qword_2692D50A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D50A8);
  }
  return result;
}

unint64_t sub_247F9968C()
{
  unint64_t result = qword_2692D50B8;
  if (!qword_2692D50B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D50B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D50B8);
  }
  return result;
}

uint64_t AuthenticationModel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D50D8);
  uint64_t v9 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  char v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_247F99590();
  long long v13 = v56;
  sub_248175F20();
  if (!v13)
  {
    v56 = (int *)v3;
    uint64_t v14 = v5;
    uint64_t v15 = v9;
    uint64_t v16 = type metadata accessor for IdMSAccount();
    LOBYTE(v58) = 0;
    sub_247FB3350(&qword_2692D50E0, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
    uint64_t v17 = v54;
    sub_248175AA0();
    LOBYTE(v58) = 1;
    sub_247F99DAC();
    sub_248175AF0();
    int v18 = v71;
    LOBYTE(v57) = 2;
    sub_247F99E00();
    sub_248175AF0();
    int v69 = v18;
    uint64_t v45 = v58;
    uint64_t v46 = v59;
    uint64_t v47 = v60;
    uint64_t v50 = v63;
    uint64_t v51 = v64;
    uint64_t v52 = v62;
    uint64_t v48 = v61;
    uint64_t v49 = v65;
    uint64_t v19 = v67;
    uint64_t v44 = v66;
    int v20 = v68;
    LOBYTE(v57) = 3;
    uint64_t v40 = sub_248175A70();
    uint64_t v41 = v21;
    int v42 = v20;
    uint64_t v43 = v19;
    LOBYTE(v57) = 4;
    int v39 = sub_248175AD0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D50C0);
    char v70 = 5;
    sub_247F99E54(&qword_2692D50F8, &qword_2692D5100);
    sub_248175AF0();
    uint64_t v38 = v57;
    uint64_t v23 = (uint64_t)v14;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
    long long v24 = v56;
    long long v25 = (_OWORD *)(v23 + v56[5]);
    v25[3] = 0u;
    v25[4] = 0u;
    v25[1] = 0u;
    v25[2] = 0u;
    _OWORD *v25 = 0u;
    long long v26 = (uint64_t *)(v23 + v24[7]);
    *long long v26 = 0;
    v26[1] = 0;
    uint64_t v27 = v24[8];
    *(void *)(v23 + v27) = MEMORY[0x263F8EE78];
    uint64_t v37 = v24[9];
    *(unsigned char *)(v23 + v37) = 0;
    id v28 = (void *)(v23 + v24[11]);
    *id v28 = 0;
    v28[1] = 0;
    sub_247F9805C((uint64_t)v8, v23);
    *(unsigned char *)(v23 + v24[6]) = v69;
    uint64_t v29 = v23 + v24[10];
    uint64_t v30 = v46;
    *(void *)uint64_t v29 = v45;
    *(void *)(v29 + 8) = v30;
    uint64_t v31 = v48;
    *(void *)(v29 + 16) = v47;
    *(void *)(v29 + 24) = v31;
    uint64_t v32 = v50;
    *(void *)(v29 + 32) = v52;
    *(void *)(v29 + 40) = v32;
    uint64_t v33 = v49;
    *(void *)(v29 + 48) = v51;
    *(void *)(v29 + 56) = v33;
    uint64_t v34 = v43;
    *(void *)(v29 + 64) = v44;
    *(void *)(v29 + 72) = v34;
    *(unsigned char *)(v29 + 80) = v42;
    swift_bridgeObjectRelease();
    uint64_t v35 = v41;
    *long long v26 = v40;
    v26[1] = v35;
    *(unsigned char *)(v23 + v37) = v39 & 1;
    swift_bridgeObjectRelease();
    *(void *)(v23 + v27) = v38;
    sub_247FB32E8(v23, v53, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

unint64_t sub_247F99DAC()
{
  unint64_t result = qword_2692D50E8;
  if (!qword_2692D50E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D50E8);
  }
  return result;
}

unint64_t sub_247F99E00()
{
  unint64_t result = qword_2692D50F0;
  if (!qword_2692D50F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D50F0);
  }
  return result;
}

uint64_t sub_247F99E54(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D50C0);
    sub_247FB3350(a2, type metadata accessor for AIDAServiceType);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL static AuthenticationModel.UserInteraction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t static AuthenticationModel.State.== infix(_:_:)(int8x16_t *a1, uint64_t *a2)
{
  uint64_t v4 = a1->i64[0];
  unint64_t v3 = a1->u64[1];
  unint64_t v6 = a1[1].u64[0];
  unint64_t v5 = a1[1].u64[1];
  int8x16_t v8 = a1[2];
  int8x16_t v7 = a1[3];
  int8x16_t v9 = a1[4];
  uint64_t v10 = a1[5].u8[0];
  uint64_t v11 = *a2;
  unint64_t v12 = a2[1];
  unint64_t v13 = a2[2];
  unint64_t v14 = a2[3];
  unint64_t v15 = a2[4];
  unint64_t v16 = a2[5];
  uint64_t v17 = a2[6];
  unint64_t v18 = a2[7];
  unint64_t v19 = a2[8];
  unint64_t v20 = a2[9];
  int v21 = *((unsigned __int8 *)a2 + 80);
  v101[0] = v4;
  v101[1] = v3;
  v101[2] = v6;
  v101[3] = v5;
  int8x16_t v102 = v8;
  int8x16_t v103 = v7;
  int8x16_t v104 = v9;
  char v105 = v10;
  uint64_t v106 = v11;
  unint64_t v107 = v12;
  unint64_t v108 = v13;
  unint64_t v109 = v14;
  unint64_t v110 = v15;
  unint64_t v111 = v16;
  uint64_t v112 = v17;
  unint64_t v113 = v18;
  unint64_t v114 = v19;
  unint64_t v115 = v20;
  char v116 = v21;
  int8x16_t v86 = v7;
  int8x16_t v87 = v9;
  int8x16_t v85 = v8;
  switch(v10)
  {
    case 1:
      if (v21 != 1) {
        goto LABEL_40;
      }
      uint64_t v26 = v7.i64[0];
      uint64_t v27 = (void *)v8.i64[0];
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      *((void *)&v96 + 1) = v5;
      *(_DWORD *)v97 = v8.i32[0] & 0x101FFFF;
      id v28 = (void *)v8.i64[1];
      *(int8x16_t *)&v97[8] = vextq_s8(v8, v7, 8uLL);
      uint64_t v29 = (void *)v7.i64[1];
      *(void *)&v97[24] = v7.i64[1];
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      *((void *)&v89 + 1) = v14;
      LOWORD(v90) = v15;
      BYTE2(v90) = BYTE2(v15) & 1;
      BYTE3(v90) = BYTE3(v15) & 1;
      *((void *)&v90 + 1) = v16;
      *(void *)&long long v91 = v17;
      *((void *)&v91 + 1) = v18;
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, 1);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, v27, v28, v26, v29, (void *)v87.i64[0], (void *)v87.i64[1], 1);
      goto LABEL_6;
    case 2:
      if (v21 != 2) {
        goto LABEL_40;
      }
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      BYTE8(v96) = v5 & 1;
      *(int8x16_t *)v97 = v8;
      *(int8x16_t *)&v97[16] = v7;
      int8x16_t v98 = v9;
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      BYTE8(v89) = v14 & 1;
      *(void *)&long long v90 = v15;
      *((void *)&v90 + 1) = v16;
      *(void *)&long long v91 = v17;
      *((void *)&v91 + 1) = v18;
      *(void *)&long long v92 = v19;
      *((void *)&v92 + 1) = v20;
      char v31 = 2;
      goto LABEL_13;
    case 3:
      if (v21 != 3) {
        goto LABEL_40;
      }
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      BYTE8(v96) = v5 & 1;
      *(int8x16_t *)v97 = v8;
      *(int8x16_t *)&v97[16] = v7;
      int8x16_t v98 = v9;
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      BYTE8(v89) = v14 & 1;
      *(void *)&long long v90 = v15;
      *((void *)&v90 + 1) = v16;
      *(void *)&long long v91 = v17;
      *((void *)&v91 + 1) = v18;
      *(void *)&long long v92 = v19;
      *((void *)&v92 + 1) = v20;
      char v31 = 3;
      goto LABEL_13;
    case 4:
      if (v21 != 4) {
        goto LABEL_40;
      }
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      BYTE8(v96) = v5 & 1;
      *(int8x16_t *)v97 = v8;
      *(int8x16_t *)&v97[16] = v7;
      int8x16_t v98 = v9;
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      BYTE8(v89) = v14 & 1;
      *(void *)&long long v90 = v15;
      *((void *)&v90 + 1) = v16;
      *(void *)&long long v91 = v17;
      *((void *)&v91 + 1) = v18;
      *(void *)&long long v92 = v19;
      *((void *)&v92 + 1) = v20;
      char v31 = 4;
LABEL_13:
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, v31);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, (void *)v85.i64[0], (void *)v85.i64[1], v86.i64[0], (void *)v86.i64[1], (void *)v87.i64[0], (void *)v87.i64[1], v31);
      char v30 = sub_247FA7FA8((uint64_t)&v95, (uint64_t)&v88);
      goto LABEL_30;
    case 5:
      if (v21 != 5) {
        goto LABEL_40;
      }
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      *((void *)&v96 + 1) = v5;
      uint64_t v32 = (void *)v8.i64[0];
      *(void *)v97 = v8.i64[0];
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      *((void *)&v89 + 1) = v14;
      *(void *)&long long v90 = v15;
      char v33 = 5;
      goto LABEL_18;
    case 6:
      if (v21 != 6) {
        goto LABEL_40;
      }
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      *((void *)&v96 + 1) = v5;
      uint64_t v32 = (void *)v8.i64[0];
      *(void *)v97 = v8.i64[0];
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      *((void *)&v89 + 1) = v14;
      *(void *)&long long v90 = v15;
      char v33 = 6;
LABEL_18:
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, v33);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, v32, (void *)v85.i64[1], v86.i64[0], (void *)v86.i64[1], (void *)v87.i64[0], (void *)v87.i64[1], v33);
      char v30 = _s12AppleIDSetup19AuthenticationModelV14ServerRedirectV2eeoiySbAE_AEtFZ_0((uint64_t)&v95, (uint64_t)&v88);
      goto LABEL_30;
    case 7:
      if (v21 != 7) {
        goto LABEL_40;
      }
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      *((void *)&v96 + 1) = v5;
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      *((void *)&v89 + 1) = v14;
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, 7);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, (void *)v85.i64[0], (void *)v85.i64[1], v86.i64[0], (void *)v86.i64[1], (void *)v87.i64[0], (void *)v87.i64[1], 7);
      char v30 = _s12AppleIDSetup19AuthenticationModelV14NativeRecoveryV2eeoiySbAE_AEtFZ_0((uint64_t)&v95, (uint64_t)&v88);
      goto LABEL_30;
    case 8:
      if (v21 != 8) {
        goto LABEL_40;
      }
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      *((void *)&v96 + 1) = v5;
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      *((void *)&v89 + 1) = v14;
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, 8);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, (void *)v85.i64[0], (void *)v85.i64[1], v86.i64[0], (void *)v86.i64[1], (void *)v87.i64[0], (void *)v87.i64[1], 8);
      char v30 = _s12AppleIDSetup19AuthenticationModelV13FidoChallengeV2eeoiySbAE_AEtFZ_0((uint64_t)&v95, (uint64_t)&v88);
      goto LABEL_30;
    case 9:
      if (v21 != 9) {
        goto LABEL_40;
      }
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      BYTE8(v96) = v5;
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      BYTE8(v89) = v14;
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, 9);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, (void *)v85.i64[0], (void *)v85.i64[1], v86.i64[0], (void *)v86.i64[1], (void *)v87.i64[0], (void *)v87.i64[1], 9);
      char v30 = _s12AppleIDSetup19AuthenticationModelV9KeepUsingV2eeoiySbAE_AEtFZ_0((uint64_t)&v95, (uint64_t)&v88);
      goto LABEL_30;
    case 10:
      if (v21 != 10) {
        goto LABEL_40;
      }
      uint64_t v70 = *(void *)(v4 + 48);
      uint64_t v72 = *(void *)(v4 + 56);
      long long v73 = *(_OWORD *)(v4 + 64);
      long long v74 = *(_OWORD *)(v4 + 80);
      char v75 = *(unsigned char *)(v4 + 96);
      uint64_t v58 = *(void **)(v4 + 104);
      long long v79 = *(_OWORD *)(v4 + 120);
      v80 = *(void **)(v4 + 136);
      uint64_t v61 = *(void **)(v4 + 144);
      uint64_t v76 = *(void *)(v4 + 152);
      v77 = *(void **)(v4 + 112);
      v78 = *(void **)(v4 + 160);
      v81 = *(void **)(v4 + 168);
      v83 = *(void **)(v4 + 176);
      char v82 = *(unsigned char *)(v4 + 184);
      char v34 = *(unsigned char *)(v4 + 97);
      uint64_t v35 = *(void *)(v4 + 32);
      uint64_t v71 = *(void *)(v4 + 24);
      uint64_t v36 = *(void *)(v11 + 16);
      uint64_t v84 = *(void *)(v11 + 24);
      uint64_t v37 = *(void *)(v11 + 32);
      uint64_t v68 = *(void *)(v11 + 48);
      uint64_t v69 = *(void *)(v4 + 40);
      uint64_t v66 = *(void *)(v11 + 64);
      uint64_t v67 = *(void *)(v11 + 56);
      uint64_t v64 = *(void *)(v11 + 40);
      uint64_t v65 = *(void *)(v11 + 72);
      *(void *)&long long v95 = *(void *)(v4 + 16);
      *((void *)&v95 + 1) = v71;
      *(void *)&long long v96 = v35;
      long long v63 = *(_OWORD *)(v11 + 80);
      char v100 = v34;
      char v62 = *(unsigned char *)(v11 + 96);
      *(void *)&long long v88 = v36;
      char v38 = *(unsigned char *)(v11 + 97);
      *(void *)&long long v89 = v37;
      char v94 = v38;
      uint64_t v54 = *(void **)(v11 + 104);
      uint64_t v57 = *(void **)(v11 + 112);
      *((void *)&v96 + 1) = v69;
      *(void *)v97 = v70;
      *(void *)&v97[8] = v72;
      *(_OWORD *)&v97[16] = v73;
      int8x16_t v98 = (int8x16_t)v74;
      char v99 = v75;
      *((void *)&v88 + 1) = v84;
      *((void *)&v89 + 1) = v64;
      *(void *)&long long v90 = v68;
      *((void *)&v90 + 1) = v67;
      *(void *)&long long v91 = v66;
      *((void *)&v91 + 1) = v65;
      long long v92 = v63;
      char v93 = v62;
      uint64_t v51 = *(void **)(v11 + 128);
      long long v52 = *(_OWORD *)(v11 + 136);
      uint64_t v53 = *(void *)(v11 + 152);
      v55 = *(void **)(v11 + 120);
      v56 = *(void **)(v11 + 160);
      uint64_t v50 = *(void **)(v11 + 168);
      uint64_t v60 = *(void **)(v11 + 176);
      char v59 = *(unsigned char *)(v11 + 184);
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, 10);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, (void *)v85.i64[0], (void *)v85.i64[1], v86.i64[0], (void *)v86.i64[1], (void *)v87.i64[0], (void *)v87.i64[1], 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FA97F0(v70, v72, v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FA97F0(v68, v67, v66, v65, v63, *((uint64_t *)&v63 + 1), v62);
      sub_247F986A0(v58, v77, (void *)v79, *((void **)&v79 + 1), v80, v61, v76, v78, v81, v83, v82);
      sub_247F986A0(v54, v57, v55, v51, (void *)v52, *((void **)&v52 + 1), v53, v56, v50, v60, v59);
      if ((_s12AppleIDSetup19AuthenticationModelV5AlertV2eeoiySbAE_AEtFZ_0((uint64_t)&v95, (uint64_t)&v88) & 1) == 0)
      {
        sub_247F98958(v54, v57, v55, v51, v52, *((void **)&v52 + 1), v53, (uint64_t)v56, v50, v60, v59);
        sub_247F98958(v58, v77, (void *)v79, *((void **)&v79 + 1), (uint64_t)v80, v61, v76, (uint64_t)v78, v81, v83, v82);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FA98D8(v68, v67, v66, v65, v63, *((uint64_t *)&v63 + 1), v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FA98D8(v70, v72, v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75);
        goto LABEL_41;
      }
      *(void *)&long long v95 = v58;
      *((void *)&v95 + 1) = v77;
      long long v96 = v79;
      *(void *)v97 = v80;
      *(void *)&v97[8] = v61;
      *(void *)&v97[16] = v76;
      *(void *)&v97[24] = v78;
      v98.i64[0] = (uint64_t)v81;
      v98.i64[1] = (uint64_t)v83;
      char v99 = v82;
      *(void *)&long long v88 = v54;
      *((void *)&v88 + 1) = v57;
      *(void *)&long long v89 = v55;
      *((void *)&v89 + 1) = v51;
      long long v90 = v52;
      *(void *)&long long v91 = v53;
      *((void *)&v91 + 1) = v56;
      *(void *)&long long v92 = v50;
      *((void *)&v92 + 1) = v60;
      char v93 = v59;
      char v39 = static AuthenticationModel.State.== infix(_:_:)(&v95, &v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FA98D8(v68, v67, v66, v65, v63, *((uint64_t *)&v63 + 1), v62);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FA98D8(v70, v72, v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75);
      sub_247F98958(v54, v57, v55, v51, v52, *((void **)&v52 + 1), v53, (uint64_t)v56, v50, v60, v59);
      sub_247F98958(v58, v77, (void *)v79, *((void **)&v79 + 1), (uint64_t)v80, v61, v76, (uint64_t)v78, v81, v83, v82);
LABEL_31:
      sub_247FA9730((uint64_t)v101);
      return v39 & 1;
    case 11:
      if (v21 != 11) {
        goto LABEL_40;
      }
      char v40 = *(unsigned char *)(v4 + 96);
      char v41 = *(unsigned char *)(v11 + 96);
      long long v42 = *(_OWORD *)(v4 + 32);
      long long v95 = *(_OWORD *)(v4 + 16);
      long long v96 = v42;
      long long v43 = *(_OWORD *)(v4 + 64);
      *(_OWORD *)v97 = *(_OWORD *)(v4 + 48);
      *(_OWORD *)&v97[16] = v43;
      int8x16_t v98 = *(int8x16_t *)(v4 + 80);
      char v99 = v40;
      long long v44 = *(_OWORD *)(v11 + 32);
      long long v88 = *(_OWORD *)(v11 + 16);
      long long v89 = v44;
      long long v45 = *(_OWORD *)(v11 + 64);
      long long v90 = *(_OWORD *)(v11 + 48);
      long long v91 = v45;
      long long v92 = *(_OWORD *)(v11 + 80);
      char v93 = v41;
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, 11);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, (void *)v85.i64[0], (void *)v85.i64[1], v86.i64[0], (void *)v86.i64[1], (void *)v87.i64[0], (void *)v87.i64[1], 11);
      char v30 = static AuthenticationModel.State.== infix(_:_:)(&v95, &v88);
      goto LABEL_30;
    case 12:
      int8x16_t v46 = vorrq_s8(v9, v7);
      if (v4 | *(void *)&vorr_s8(*(int8x8_t *)v46.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v46, v46, 8uLL)) | v5 | v6 | v3 | v8.i64[1] | v8.i64[0])
      {
        if (v21 != 12 || v11 != 1) {
          goto LABEL_40;
        }
        unint64_t v47 = v13 | v12 | v14 | v15 | v16 | v17 | v18;
        unint64_t v48 = v19 | v20;
      }
      else
      {
        if (v21 != 12) {
          goto LABEL_40;
        }
        unint64_t v47 = v13 | v12 | v11 | v14 | v15 | v16 | v17;
        unint64_t v48 = v18 | v19 | v20;
      }
      if (!(v47 | v48))
      {
        sub_247FA9730((uint64_t)v101);
        char v39 = 1;
        return v39 & 1;
      }
LABEL_40:
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, v21);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, (void *)v85.i64[0], (void *)v85.i64[1], v86.i64[0], (void *)v86.i64[1], (void *)v87.i64[0], (void *)v87.i64[1], v10);
LABEL_41:
      sub_247FA9730((uint64_t)v101);
      char v39 = 0;
      return v39 & 1;
    default:
      if (v21) {
        goto LABEL_40;
      }
      uint64_t v22 = v7.i64[0];
      uint64_t v23 = (void *)v8.i64[0];
      *(void *)&long long v95 = v4;
      *((void *)&v95 + 1) = v3;
      *(void *)&long long v96 = v6;
      *((void *)&v96 + 1) = v5;
      *(_DWORD *)v97 = v8.i32[0] & 0x101FFFF;
      long long v24 = (void *)v8.i64[1];
      *(int8x16_t *)&v97[8] = vextq_s8(v8, v7, 8uLL);
      long long v25 = (void *)v7.i64[1];
      *(void *)&v97[24] = v7.i64[1];
      *(void *)&long long v88 = v11;
      *((void *)&v88 + 1) = v12;
      *(void *)&long long v89 = v13;
      *((void *)&v89 + 1) = v14;
      LOWORD(v90) = v15;
      BYTE2(v90) = BYTE2(v15) & 1;
      BYTE3(v90) = BYTE3(v15) & 1;
      *((void *)&v90 + 1) = v16;
      *(void *)&long long v91 = v17;
      *((void *)&v91 + 1) = v18;
      sub_247F986A0((void *)v11, (void *)v12, (void *)v13, (void *)v14, (void *)v15, (void *)v16, v17, (void *)v18, (void *)v19, (void *)v20, 0);
      sub_247F986A0((void *)v4, (void *)v3, (void *)v6, (void *)v5, v23, v24, v22, v25, (void *)v87.i64[0], (void *)v87.i64[1], 0);
LABEL_6:
      char v30 = _s12AppleIDSetup19AuthenticationModelV10BasicLoginV2eeoiySbAE_AEtFZ_0((uint64_t)&v95, (uint64_t)&v88);
LABEL_30:
      char v39 = v30;
      goto LABEL_31;
  }
}

uint64_t AuthenticationModel.hash(into:)(uint64_t a1)
{
  sub_247FA7688(a1);
  uint64_t v3 = type metadata accessor for AuthenticationModel();
  sub_248175E70();
  AuthenticationModel.State.hash(into:)(a1);
  if (*(void *)(v1 + *(int *)(v3 + 28) + 8))
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_248175E80();
  }
  sub_248175E80();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 32));
  uint64_t result = sub_248175E70();
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    do
    {
      int8x16_t v8 = *(void **)(v4 + 8 * v7++ + 32);
      sub_248175160();
      id v9 = v8;
      sub_2481751A0();

      swift_bridgeObjectRelease();
    }
    while (v6 != v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AuthenticationModel.hashValue.getter()
{
  sub_248175E50();
  AuthenticationModel.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t sub_247F9ACA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AuthenticationModel.init(from:)(a1, a2);
}

uint64_t sub_247F9ACC0(void *a1)
{
  return AuthenticationModel.encode(to:)(a1);
}

uint64_t sub_247F9ACDC()
{
  sub_248175E50();
  AuthenticationModel.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

uint64_t sub_247F9AD20()
{
  sub_248175E50();
  AuthenticationModel.hash(into:)((uint64_t)v1);
  return sub_248175EC0();
}

BOOL static AuthenticationModel.SecondFactor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_247FA7FA8(a1, a2);
}

BOOL static AuthenticationModel.SecondFactorAlert.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_247FA7FA8(a1, a2);
}

void AuthenticationModel.State.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch(*((unsigned char *)v1 + 80))
  {
    case 2:
    case 3:
    case 4:
      sub_248175E70();
      AuthenticationModel.SecondFactor.hash(into:)(a1);
      break;
    case 5:
    case 6:
      sub_248175E70();
      AuthenticationModel.ServerRedirect.hash(into:)();
      break;
    case 7:
      sub_248175E70();
      AuthenticationModel.NativeRecovery.hash(into:)();
      break;
    case 8:
      sub_248175E70();
      AuthenticationModel.FidoChallenge.hash(into:)();
      break;
    case 9:
      sub_248175E70();
      AuthenticationModel.KeepUsing.hash(into:)();
      break;
    case 0xA:
      uint64_t v3 = *(void *)(v2 + 48);
      uint64_t v4 = *(void *)(v2 + 56);
      uint64_t v5 = *(void *)(v2 + 80);
      uint64_t v16 = *(void *)(v2 + 72);
      uint64_t v17 = *(void *)(v2 + 64);
      int v12 = *(unsigned __int8 *)(v2 + 96);
      uint64_t v6 = *(void **)(v2 + 112);
      unint64_t v14 = *(void **)(v2 + 120);
      unint64_t v15 = *(void **)(v2 + 104);
      unint64_t v13 = *(void **)(v2 + 128);
      int v21 = *(void **)(v2 + 136);
      unint64_t v20 = *(void **)(v2 + 144);
      uint64_t v18 = *(void *)(v2 + 88);
      uint64_t v19 = *(void *)(v2 + 152);
      uint64_t v7 = *(void **)(v2 + 168);
      uint64_t v11 = *(void **)(v2 + 160);
      int8x16_t v8 = *(void **)(v2 + 176);
      char v9 = *(unsigned char *)(v2 + 184);
      sub_248175E70();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_247FA97F0(v3, v4, v17, v16, v5, v18, v12);
      sub_247F986A0(v15, v6, v14, v13, v21, v20, v19, v11, v7, v8, v9);
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175E80();
      if (v12 != 255) {
        SetupError.hash(into:)(a1);
      }
      sub_248175E80();
      AuthenticationModel.State.hash(into:)(a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FA98D8(v3, v4, v17, v16, v5, v18, v12);
      sub_247F98958(v15, v6, v14, v13, (uint64_t)v21, v20, v19, (uint64_t)v11, v7, v8, v9);
      break;
    case 0xB:
      sub_248175E70();
      AuthenticationModel.State.hash(into:)(a1);
      break;
    case 0xC:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      AuthenticationModel.BasicLogin.hash(into:)();
      break;
  }
}

unint64_t sub_247F9B298(char a1)
{
  unint64_t result = 0x6C616974696E69;
  switch(a1)
  {
    case 1:
      unint64_t result = 7369331;
      break;
    case 2:
      unint64_t result = 0x676F4C6369736162;
      break;
    case 3:
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6146646E6F636573;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6552726576726573;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0x655265766974616ELL;
      break;
    case 10:
      unint64_t result = 0x6C6168436F646966;
      break;
    case 11:
      unint64_t result = 0x6E6973557065656BLL;
      break;
    case 12:
      unint64_t result = 0x7472656C61;
      break;
    case 13:
      unint64_t result = 0x676E6964616F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_247F9B468(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s12AppleIDSetup14ValueInterceptC12DropBehaviorO04hashC0Sivg_0()
{
  return sub_248175EC0();
}

uint64_t sub_247F9B4C8()
{
  return sub_248175E70();
}

uint64_t sub_247F9B4F4()
{
  return sub_248175EC0();
}

uint64_t sub_247F9B538()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_247F9B554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB19FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_247F9B57C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_247F9B588(uint64_t a1)
{
  unint64_t v2 = sub_247FA9A68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9B5C4(uint64_t a1)
{
  unint64_t v2 = sub_247FA9A68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9B600()
{
  return 1;
}

uint64_t sub_247F9B610()
{
  return 12383;
}

void sub_247F9B620(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_247F9B62C(uint64_t a1)
{
  unint64_t v2 = sub_247FAA050();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9B668(uint64_t a1)
{
  unint64_t v2 = sub_247FAA050();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_247F9B6AC()
{
  return sub_247F9B298(*v0);
}

uint64_t sub_247F9B6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB1AC0(a1, a2);
  *a3 = result;
  return result;
}

void sub_247F9B6DC(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_247F9B6E8(uint64_t a1)
{
  unint64_t v2 = sub_247FA99C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9B724(uint64_t a1)
{
  unint64_t v2 = sub_247FA99C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9B760(uint64_t a1)
{
  unint64_t v2 = sub_247FA9FA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9B79C(uint64_t a1)
{
  unint64_t v2 = sub_247FA9FA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9B7D8(uint64_t a1)
{
  unint64_t v2 = sub_247FA9E04();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9B814(uint64_t a1)
{
  unint64_t v2 = sub_247FA9E04();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9B850(uint64_t a1)
{
  unint64_t v2 = sub_247FA9D08();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9B88C(uint64_t a1)
{
  unint64_t v2 = sub_247FA9D08();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9B8C8(uint64_t a1)
{
  unint64_t v2 = sub_247FA9BB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9B904(uint64_t a1)
{
  unint64_t v2 = sub_247FA9BB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9B940()
{
  return 0;
}

uint64_t sub_247F9B94C(uint64_t a1)
{
  unint64_t v2 = sub_247FAA0F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9B988(uint64_t a1)
{
  unint64_t v2 = sub_247FAA0F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9B9C4(uint64_t a1)
{
  unint64_t v2 = sub_247FA9B10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9BA00(uint64_t a1)
{
  unint64_t v2 = sub_247FA9B10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9BA3C()
{
  return sub_248175E70();
}

uint64_t sub_247F9BA64(uint64_t a1)
{
  unint64_t v2 = sub_247FA9A14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9BAA0(uint64_t a1)
{
  unint64_t v2 = sub_247FA9A14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9BADC(uint64_t a1)
{
  unint64_t v2 = sub_247FA9C60();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9BB18(uint64_t a1)
{
  unint64_t v2 = sub_247FA9C60();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9BB54(uint64_t a1)
{
  unint64_t v2 = sub_247FA9EAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9BB90(uint64_t a1)
{
  unint64_t v2 = sub_247FA9EAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9BBCC(uint64_t a1)
{
  unint64_t v2 = sub_247FA9F54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9BC08(uint64_t a1)
{
  unint64_t v2 = sub_247FA9F54();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9BC44()
{
  return sub_248175EC0();
}

uint64_t sub_247F9BC88()
{
  return sub_248175EC0();
}

uint64_t sub_247F9BCC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_248175CE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_247F9BD48(uint64_t a1)
{
  unint64_t v2 = sub_247FA9DB0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9BD84(uint64_t a1)
{
  unint64_t v2 = sub_247FA9DB0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9BDC0(uint64_t a1)
{
  unint64_t v2 = sub_247FAA0A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9BDFC(uint64_t a1)
{
  unint64_t v2 = sub_247FAA0A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void AuthenticationModel.State.encode(to:)(void *a1)
{
  uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5108);
  v212 = *(void **)(v213 - 8);
  MEMORY[0x270FA5388](v213);
  v211 = (char *)&v179 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5110);
  uint64_t v215 = *(void *)(v216 - 8);
  MEMORY[0x270FA5388](v216);
  v214 = (char *)&v179 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5118);
  uint64_t v209 = *(v210 - 1);
  MEMORY[0x270FA5388](v210);
  v208 = (char *)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5120);
  v206 = *(void (***)(void, void))(v207 - 8);
  MEMORY[0x270FA5388](v207);
  v205 = (char *)&v179 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5128);
  v203 = *(void (***)(void, void))(v204 - 8);
  MEMORY[0x270FA5388](v204);
  v202 = (char *)&v179 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5130);
  uint64_t v200 = *(void *)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  v199 = (char *)&v179 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5138);
  uint64_t v197 = *(void *)(v198 - 8);
  MEMORY[0x270FA5388](v198);
  v196 = (char *)&v179 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5140);
  uint64_t v194 = *(void *)(v195 - 8);
  MEMORY[0x270FA5388](v195);
  v193 = (char *)&v179 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5148);
  uint64_t v191 = *(void *)(v192 - 8);
  MEMORY[0x270FA5388](v192);
  v190 = (char *)&v179 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5150);
  uint64_t v188 = *(void *)(v189 - 8);
  MEMORY[0x270FA5388](v189);
  v187 = (char *)&v179 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5158);
  uint64_t v185 = *(void *)(v186 - 8);
  MEMORY[0x270FA5388](v186);
  v184 = (char *)&v179 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5160);
  uint64_t v182 = *(void *)(v183 - 8);
  MEMORY[0x270FA5388](v183);
  v181 = (char *)&v179 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5168);
  uint64_t v180 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v179 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5170);
  uint64_t v179 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v179 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5178);
  uint64_t v219 = *(void *)(v228 - 8);
  MEMORY[0x270FA5388](v228);
  uint64_t v22 = (char *)&v179 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = *(void *)v1;
  uint64_t v229 = *(void *)(v1 + 8);
  unint64_t v230 = v23;
  uint64_t v24 = *(void *)(v1 + 16);
  uint64_t v25 = *(void *)(v1 + 24);
  uint64_t v222 = *(void *)(v1 + 32);
  uint64_t v223 = v25;
  uint64_t v224 = *(void *)(v1 + 40);
  uint64_t v225 = *(void *)(v1 + 48);
  uint64_t v226 = v24;
  uint64_t v221 = *(void *)(v1 + 56);
  uint64_t v218 = *(void *)(v1 + 64);
  uint64_t v217 = *(void *)(v1 + 72);
  uint64_t v26 = *(unsigned __int8 *)(v1 + 80);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FA99C0();
  v227 = v22;
  sub_248175F60();
  switch(v26)
  {
    case 1:
      uint64_t v39 = v222;
      unint64_t v216 = (unint64_t)v222 >> 8;
      LOBYTE(v231) = 3;
      sub_247FA9FA8();
      uint64_t v40 = v229;
      swift_bridgeObjectRetain();
      uint64_t v41 = v223;
      swift_bridgeObjectRetain();
      uint64_t v42 = v224;
      id v43 = (id)v224;
      swift_bridgeObjectRetain();
      uint64_t v44 = v221;
      id v45 = (id)v221;
      int8x16_t v46 = v184;
      uint64_t v47 = v228;
      unint64_t v48 = v227;
      sub_248175B50();
      unint64_t v231 = v230;
      uint64_t v232 = v40;
      uint64_t v233 = v226;
      unint64_t v234 = v41;
      LOBYTE(v235) = v39;
      BYTE1(v235) = v216;
      BYTE2(v235) = BYTE2(v39) & 1;
      BYTE3(v235) = BYTE3(v39) & 1;
      v236 = (void (**)(void, void))v42;
      uint64_t v49 = v225;
      uint64_t v237 = v225;
      uint64_t v238 = v44;
      sub_247FA9FFC();
      uint64_t v50 = v186;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v185 + 8))(v46, v50);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v48, v47);
      sub_247F98958((void *)v230, (void *)v229, (void *)v226, (void *)v223, v39, (void *)v224, v49, v44, (void *)v218, (void *)v217, 1);
      return;
    case 2:
      LOBYTE(v231) = 4;
      unint64_t v51 = v230;
      id v52 = (id)v230;
      uint64_t v54 = v221;
      uint64_t v53 = v222;
      uint64_t v55 = v224;
      uint64_t v56 = v225;
      uint64_t v57 = (char *)v218;
      sub_247F98864(v222, v224, v225, v221, (void *)v218);
      sub_247FA9F54();
      uint64_t v58 = (void *)v217;
      id v59 = (id)v217;
      uint64_t v60 = v187;
      sub_248175B50();
      unint64_t v231 = v51;
      uint64_t v232 = v229;
      uint64_t v233 = v226;
      uint64_t v61 = (void *)v223;
      LOBYTE(v234) = v223 & 1;
      uint64_t v235 = v53;
      v236 = (void (**)(void, void))v55;
      uint64_t v237 = v56;
      uint64_t v238 = v54;
      v239 = v57;
      v240 = v58;
      sub_247FA9E58();
      uint64_t v62 = v189;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v188 + 8))(v60, v62);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v227, v228);
      char v63 = 2;
      goto LABEL_7;
    case 3:
      LOBYTE(v231) = 5;
      unint64_t v64 = v230;
      id v65 = (id)v230;
      uint64_t v67 = v221;
      uint64_t v66 = v222;
      uint64_t v68 = v224;
      uint64_t v69 = v225;
      uint64_t v57 = (char *)v218;
      sub_247F98864(v222, v224, v225, v221, (void *)v218);
      sub_247FA9EAC();
      uint64_t v58 = (void *)v217;
      id v70 = (id)v217;
      uint64_t v71 = v190;
      sub_248175B50();
      unint64_t v231 = v64;
      uint64_t v232 = v229;
      uint64_t v233 = v226;
      uint64_t v61 = (void *)v223;
      LOBYTE(v234) = v223 & 1;
      uint64_t v235 = v66;
      v236 = (void (**)(void, void))v68;
      uint64_t v237 = v69;
      uint64_t v238 = v67;
      v239 = v57;
      v240 = v58;
      sub_247FA9F00();
      uint64_t v72 = v192;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v71, v72);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v227, v228);
      char v63 = 3;
      goto LABEL_7;
    case 4:
      LOBYTE(v231) = 6;
      unint64_t v73 = v230;
      id v74 = (id)v230;
      uint64_t v76 = v221;
      uint64_t v75 = v222;
      uint64_t v77 = v224;
      uint64_t v78 = v225;
      uint64_t v57 = (char *)v218;
      sub_247F98864(v222, v224, v225, v221, (void *)v218);
      sub_247FA9E04();
      uint64_t v58 = (void *)v217;
      id v79 = (id)v217;
      v80 = v193;
      sub_248175B50();
      unint64_t v231 = v73;
      uint64_t v232 = v229;
      uint64_t v233 = v226;
      uint64_t v61 = (void *)v223;
      LOBYTE(v234) = v223 & 1;
      uint64_t v235 = v75;
      v236 = (void (**)(void, void))v77;
      uint64_t v237 = v78;
      uint64_t v238 = v76;
      v239 = v57;
      v240 = v58;
      sub_247FA9E58();
      uint64_t v81 = v195;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v194 + 8))(v80, v81);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v227, v228);
      char v63 = 4;
LABEL_7:
      sub_247F98958((void *)v230, (void *)v229, (void *)v226, v61, v222, (void *)v224, v225, v221, v57, v58, v63);
      return;
    case 5:
      LOBYTE(v231) = 7;
      sub_247FA9DB0();
      unint64_t v82 = v230;
      id v83 = (id)v230;
      uint64_t v84 = v229;
      id v85 = (id)v229;
      int8x16_t v86 = (void *)v226;
      id v87 = (id)v226;
      long long v88 = (void *)v223;
      id v89 = (id)v223;
      uint64_t v90 = v222;
      id v91 = (id)v222;
      long long v92 = v196;
      uint64_t v93 = v228;
      char v94 = v227;
      sub_248175B50();
      unint64_t v231 = v82;
      uint64_t v232 = v84;
      uint64_t v233 = (uint64_t)v86;
      unint64_t v234 = (unint64_t)v88;
      uint64_t v235 = v90;
      sub_247FA9D5C();
      uint64_t v95 = v198;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v197 + 8))(v92, v95);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v94, v93);
      char v96 = 5;
      goto LABEL_10;
    case 6:
      LOBYTE(v231) = 8;
      sub_247FA9D08();
      unint64_t v97 = v230;
      id v98 = (id)v230;
      uint64_t v99 = v229;
      id v100 = (id)v229;
      int8x16_t v86 = (void *)v226;
      id v101 = (id)v226;
      long long v88 = (void *)v223;
      id v102 = (id)v223;
      uint64_t v90 = v222;
      id v103 = (id)v222;
      int8x16_t v104 = v199;
      uint64_t v105 = v228;
      uint64_t v106 = v227;
      sub_248175B50();
      unint64_t v231 = v97;
      uint64_t v232 = v99;
      uint64_t v233 = (uint64_t)v86;
      unint64_t v234 = (unint64_t)v88;
      uint64_t v235 = v90;
      sub_247FA9D5C();
      uint64_t v107 = v201;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v200 + 8))(v104, v107);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v106, v105);
      char v96 = 6;
LABEL_10:
      sub_247F98958((void *)v230, (void *)v229, v86, v88, v90, (void *)v224, v225, v221, (void *)v218, (void *)v217, v96);
      return;
    case 7:
      LOBYTE(v231) = 9;
      sub_247FA9C60();
      unint64_t v108 = v230;
      id v109 = (id)v230;
      unint64_t v110 = (void *)v229;
      id v111 = (id)v229;
      uint64_t v112 = (void *)v226;
      id v113 = (id)v226;
      unint64_t v114 = (void *)v223;
      id v115 = (id)v223;
      char v116 = v202;
      uint64_t v117 = v228;
      v118 = v227;
      sub_248175B50();
      unint64_t v231 = v108;
      uint64_t v232 = (uint64_t)v110;
      uint64_t v233 = (uint64_t)v112;
      unint64_t v234 = (unint64_t)v114;
      sub_247FA9CB4();
      uint64_t v119 = v204;
      sub_248175BE0();
      ((void (**)(char *, uint64_t))v203)[1](v116, v119);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v118, v117);
      char v120 = 7;
      goto LABEL_13;
    case 8:
      LOBYTE(v231) = 10;
      sub_247FA9BB8();
      unint64_t v121 = v230;
      id v122 = (id)v230;
      unint64_t v110 = (void *)v229;
      id v123 = (id)v229;
      uint64_t v112 = (void *)v226;
      id v124 = (id)v226;
      unint64_t v114 = (void *)v223;
      id v125 = (id)v223;
      uint64_t v126 = (uint64_t)v205;
      uint64_t v127 = v228;
      v128 = v227;
      sub_248175B50();
      unint64_t v231 = v121;
      uint64_t v232 = (uint64_t)v110;
      uint64_t v233 = (uint64_t)v112;
      unint64_t v234 = (unint64_t)v114;
      sub_247FA9C0C();
      uint64_t v129 = v207;
      sub_248175BE0();
      v206[1](v126, v129);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v128, v127);
      char v120 = 8;
LABEL_13:
      sub_247F98958((void *)v230, v110, v112, v114, v222, (void *)v224, v225, v221, (void *)v218, (void *)v217, v120);
      break;
    case 9:
      LOBYTE(v231) = 11;
      sub_247FA9B10();
      v130 = (void *)v230;
      id v131 = (id)v230;
      v132 = (void *)v226;
      swift_bridgeObjectRetain();
      uint64_t v133 = (uint64_t)v208;
      uint64_t v134 = v228;
      v135 = v227;
      sub_248175B50();
      v136 = (void *)v229;
      unint64_t v231 = (unint64_t)v130;
      uint64_t v232 = v229;
      uint64_t v233 = (uint64_t)v132;
      LOBYTE(v234) = v223;
      sub_247FA9B64();
      v137 = v210;
      sub_248175BE0();
      (*(void (**)(uint64_t, void *))(v209 + 8))(v133, v137);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v135, v134);
      sub_247F98958(v130, v136, v132, (void *)v223, v222, (void *)v224, v225, v221, (void *)v218, (void *)v217, 9);
      break;
    case 10:
      uint64_t v138 = *(void *)(v230 + 24);
      uint64_t v204 = *(void *)(v230 + 16);
      uint64_t v201 = v138;
      v203 = *(void (***)(void, void))(v230 + 32);
      uint64_t v213 = *(void *)(v230 + 40);
      uint64_t v217 = *(void *)(v230 + 48);
      uint64_t v218 = *(void *)(v230 + 56);
      uint64_t v139 = *(void *)(v230 + 72);
      uint64_t v223 = *(void *)(v230 + 64);
      uint64_t v224 = v139;
      uint64_t v140 = *(void *)(v230 + 88);
      uint64_t v225 = *(void *)(v230 + 80);
      uint64_t v226 = v140;
      LODWORD(v229) = *(unsigned __int8 *)(v230 + 96);
      LODWORD(v202) = *(unsigned __int8 *)(v230 + 97);
      uint64_t v141 = *(void *)(v230 + 112);
      v142 = *(void **)(v230 + 120);
      uint64_t v221 = *(void *)(v230 + 104);
      uint64_t v222 = v141;
      v143 = *(void **)(v230 + 128);
      v144 = *(char **)(v230 + 136);
      v146 = *(void (***)(void, void))(v230 + 144);
      uint64_t v145 = *(void *)(v230 + 152);
      v147 = *(char **)(v230 + 160);
      v148 = *(char **)(v230 + 168);
      v149 = *(void **)(v230 + 176);
      int v150 = *(unsigned __int8 *)(v230 + 184);
      LOBYTE(v231) = 12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FA97F0(v217, v218, v223, v224, v225, v226, v229);
      LODWORD(v209) = v150;
      v210 = v149;
      v211 = v148;
      v212 = v142;
      unint64_t v230 = (unint64_t)v143;
      v205 = v144;
      v206 = v146;
      uint64_t v207 = v145;
      v208 = v147;
      sub_247F986A0((void *)v221, (void *)v222, v142, v143, v144, v146, v145, v147, v148, v149, v150);
      sub_247FA9A68();
      v151 = v214;
      v153 = v227;
      uint64_t v152 = v228;
      sub_248175B50();
      unint64_t v231 = v204;
      uint64_t v232 = v201;
      uint64_t v233 = (uint64_t)v203;
      unint64_t v234 = v213;
      uint64_t v154 = v217;
      uint64_t v235 = v217;
      uint64_t v155 = v218;
      v236 = (void (**)(void, void))v218;
      uint64_t v237 = v223;
      uint64_t v238 = v224;
      v239 = (char *)v225;
      v240 = (void *)v226;
      char v241 = v229;
      char v242 = (char)v202;
      char v243 = 0;
      sub_247FA9ABC();
      unint64_t v156 = v216;
      uint64_t v157 = v220;
      sub_248175BE0();
      if (v157)
      {
        sub_247F98958((void *)v221, (void *)v222, v212, (void *)v230, (uint64_t)v205, v206, v207, (uint64_t)v208, v211, v210, v209);
        (*(void (**)(char *, unint64_t))(v215 + 8))(v151, v156);
        (*(void (**)(char *, uint64_t))(v219 + 8))(v153, v152);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FA98D8(v154, v155, v223, v224, v225, v226, v229);
      }
      else
      {
        unint64_t v231 = v221;
        uint64_t v232 = v222;
        uint64_t v233 = (uint64_t)v212;
        unint64_t v234 = v230;
        uint64_t v173 = (uint64_t)v205;
        v174 = v206;
        uint64_t v235 = (uint64_t)v205;
        v236 = v206;
        uint64_t v175 = v207;
        uint64_t v176 = (uint64_t)v208;
        uint64_t v237 = v207;
        uint64_t v238 = (uint64_t)v208;
        v239 = v211;
        v240 = v210;
        char v241 = v209;
        char v243 = 1;
        sub_247F99638();
        sub_248175BE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FA98D8(v217, v218, v223, v224, v225, v226, v229);
        (*(void (**)(char *, unint64_t))(v215 + 8))(v151, v156);
        (*(void (**)(char *, uint64_t))(v219 + 8))(v227, v228);
        sub_247F98958((void *)v221, (void *)v222, v212, (void *)v230, v173, v174, v175, v176, v211, v210, v209);
      }
      break;
    case 11:
      v158 = *(void **)(v230 + 16);
      v159 = *(void **)(v230 + 24);
      v160 = *(void **)(v230 + 32);
      uint64_t v218 = *(void *)(v230 + 40);
      v161 = *(void **)(v230 + 56);
      uint64_t v221 = *(void *)(v230 + 48);
      uint64_t v226 = (uint64_t)v161;
      v162 = *(void **)(v230 + 72);
      uint64_t v229 = *(void *)(v230 + 64);
      v163 = *(char **)(v230 + 80);
      v164 = *(void **)(v230 + 88);
      char v165 = *(unsigned char *)(v230 + 96);
      LOBYTE(v231) = 13;
      sub_247F986A0(v158, v159, v160, (void *)v218, (void *)v221, v161, v229, v162, v163, v164, v165);
      sub_247FA9A14();
      v166 = v211;
      sub_248175B50();
      unint64_t v230 = (unint64_t)v158;
      unint64_t v231 = (unint64_t)v158;
      uint64_t v224 = (uint64_t)v160;
      uint64_t v225 = (uint64_t)v159;
      uint64_t v232 = (uint64_t)v159;
      uint64_t v233 = (uint64_t)v160;
      v167 = (void *)v218;
      uint64_t v168 = (uint64_t)v162;
      uint64_t v169 = v221;
      unint64_t v234 = v218;
      uint64_t v235 = v221;
      v236 = (void (**)(void, void))v226;
      uint64_t v237 = v229;
      uint64_t v222 = v168;
      uint64_t v223 = (uint64_t)v163;
      uint64_t v238 = v168;
      v239 = v163;
      v240 = v164;
      char v241 = v165;
      sub_247F99638();
      uint64_t v170 = v213;
      sub_248175BE0();
      (*((void (**)(char *, uint64_t))v212 + 1))(v166, v170);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v227, v228);
      sub_247F98958((void *)v230, (void *)v225, (void *)v224, v167, v169, (void *)v226, v229, v222, (void *)v223, v164, v165);
      break;
    case 12:
      if (v226 | v229 | v230 | v223 | v222 | v224 | v225 | v221 | v218 | v217)
      {
        LOBYTE(v231) = 1;
        sub_247FAA0A4();
        v171 = v227;
        uint64_t v172 = v228;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v180 + 8))(v17, v15);
        (*(void (**)(char *, uint64_t))(v219 + 8))(v171, v172);
      }
      else
      {
        LOBYTE(v231) = 0;
        sub_247FAA0F8();
        v178 = v227;
        uint64_t v177 = v228;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v179 + 8))(v20, v18);
        (*(void (**)(char *, uint64_t))(v219 + 8))(v178, v177);
      }
      break;
    default:
      uint64_t v27 = v222;
      unint64_t v216 = (unint64_t)v222 >> 8;
      LOBYTE(v231) = 2;
      sub_247FAA050();
      uint64_t v28 = v229;
      swift_bridgeObjectRetain();
      uint64_t v29 = v223;
      swift_bridgeObjectRetain();
      uint64_t v30 = v224;
      id v31 = (id)v224;
      swift_bridgeObjectRetain();
      uint64_t v32 = v221;
      id v33 = (id)v221;
      char v34 = v181;
      uint64_t v35 = v228;
      uint64_t v36 = v227;
      sub_248175B50();
      unint64_t v231 = v230;
      uint64_t v232 = v28;
      uint64_t v233 = v226;
      unint64_t v234 = v29;
      LOBYTE(v235) = v27;
      BYTE1(v235) = v216;
      BYTE2(v235) = BYTE2(v27) & 1;
      BYTE3(v235) = BYTE3(v27) & 1;
      v236 = (void (**)(void, void))v30;
      uint64_t v37 = v225;
      uint64_t v237 = v225;
      uint64_t v238 = v32;
      sub_247FA9FFC();
      uint64_t v38 = v183;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v182 + 8))(v34, v38);
      (*(void (**)(char *, uint64_t))(v219 + 8))(v36, v35);
      sub_247F98958((void *)v230, (void *)v229, (void *)v226, (void *)v223, v27, (void *)v224, v37, v32, (void *)v218, (void *)v217, 0);
      break;
  }
}

uint64_t AuthenticationModel.State.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 80);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  long long v10 = v0[4];
  char v11 = v1;
  sub_248175E50();
  AuthenticationModel.State.hash(into:)((uint64_t)v5);
  return sub_248175EC0();
}

uint64_t AuthenticationModel.State.init(from:)@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  v143 = a2;
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5238);
  uint64_t v118 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  v142 = (char *)&v104 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5240);
  uint64_t v119 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  v148 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5248);
  uint64_t v117 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  v147 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5250);
  uint64_t v116 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v141 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5258);
  uint64_t v115 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v140 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5260);
  uint64_t v114 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  uint64_t v139 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5268);
  uint64_t v113 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v138 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5270);
  uint64_t v112 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  v146 = (char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5278);
  uint64_t v111 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v145 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5280);
  uint64_t v110 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  v144 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5288);
  uint64_t v109 = *(void *)(v125 - 8);
  MEMORY[0x270FA5388](v125);
  v137 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5290);
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  v136 = (char *)&v104 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5298);
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v16 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52A0);
  uint64_t v120 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52A8);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  unint64_t v23 = (char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  v149 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_247FA99C0();
  uint64_t v25 = v158;
  sub_248175F20();
  uint64_t v158 = v25;
  if (v25)
  {
LABEL_8:
    uint64_t v45 = (uint64_t)v149;
    return __swift_destroy_boxed_opaque_existential_1(v45);
  }
  uint64_t v106 = v19;
  uint64_t v105 = v17;
  uint64_t v107 = v16;
  uint64_t v26 = v144;
  uint64_t v27 = v145;
  uint64_t v28 = v146;
  uint64_t v29 = v147;
  uint64_t v30 = v148;
  uint64_t v108 = v21;
  uint64_t v31 = sub_248175B30();
  if (*(void *)(v31 + 16) != 1)
  {
    uint64_t v41 = sub_2481758A0();
    uint64_t v42 = swift_allocError();
    uint64_t v44 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v44 = &type metadata for AuthenticationModel.State;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v44, *MEMORY[0x263F8DCB0], v41);
    uint64_t v158 = v42;
    swift_willThrow();
LABEL_7:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
    goto LABEL_8;
  }
  switch(*(unsigned char *)(v31 + 32))
  {
    case 1:
      LOBYTE(v150) = 1;
      sub_247FAA0A4();
      uint64_t v47 = v107;
      uint64_t v48 = v158;
      sub_248175A50();
      uint64_t v158 = v48;
      if (v48) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v121 + 8))(v47, v122);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v40 = xmmword_248177B60;
      goto LABEL_12;
    case 2:
      LOBYTE(v150) = 2;
      sub_247FAA050();
      id v52 = v136;
      uint64_t v53 = v158;
      sub_248175A50();
      uint64_t v158 = v53;
      if (v53) {
        goto LABEL_7;
      }
      sub_247FAA47C();
      uint64_t v54 = v124;
      uint64_t v55 = v158;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v52, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v158 = v55;
      if (v55) {
        goto LABEL_8;
      }
      uint64_t v39 = 0;
      char v50 = 0;
      long long v40 = v150;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      uint64_t v56 = 0x10000;
      if (!BYTE2(v153)) {
        uint64_t v56 = 0;
      }
      unint64_t v57 = (unsigned __int16)v153 | (unint64_t)v56;
      uint64_t v58 = 0x1000000;
      if (!BYTE3(v153)) {
        uint64_t v58 = 0;
      }
      uint64_t v36 = v57 | v58;
      uint64_t v37 = v154;
      uint64_t v38 = v155;
      *(void *)&long long v49 = v156;
      goto LABEL_13;
    case 3:
      LOBYTE(v150) = 3;
      sub_247FA9FA8();
      id v59 = v137;
      uint64_t v60 = v158;
      sub_248175A50();
      uint64_t v158 = v60;
      if (v60) {
        goto LABEL_7;
      }
      sub_247FAA47C();
      uint64_t v61 = v125;
      uint64_t v62 = v158;
      sub_248175AF0();
      uint64_t v158 = v62;
      char v63 = &v141;
      if (v62) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v109 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v39 = 0;
      long long v40 = v150;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      uint64_t v64 = 0x10000;
      if (!BYTE2(v153)) {
        uint64_t v64 = 0;
      }
      unint64_t v65 = (unsigned __int16)v153 | (unint64_t)v64;
      uint64_t v37 = v154;
      uint64_t v38 = v155;
      uint64_t v66 = 0x1000000;
      if (!BYTE3(v153)) {
        uint64_t v66 = 0;
      }
      uint64_t v36 = v65 | v66;
      *(void *)&long long v49 = v156;
      char v50 = 1;
      goto LABEL_13;
    case 4:
      LOBYTE(v150) = 4;
      sub_247FA9F54();
      id v59 = v26;
      uint64_t v67 = v158;
      sub_248175A50();
      uint64_t v158 = v67;
      if (v67) {
        goto LABEL_7;
      }
      sub_247FAA3D4();
      uint64_t v61 = v126;
      uint64_t v68 = v158;
      sub_248175AF0();
      uint64_t v158 = v68;
      char v63 = &v142;
      if (v68) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v110 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      long long v40 = v150;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      uint64_t v36 = v153;
      uint64_t v37 = v154;
      uint64_t v38 = v155;
      long long v49 = v156;
      char v50 = 2;
      uint64_t v39 = v157;
      goto LABEL_13;
    case 5:
      LOBYTE(v150) = 5;
      sub_247FA9EAC();
      uint64_t v69 = v158;
      sub_248175A50();
      uint64_t v158 = v69;
      if (v69) {
        goto LABEL_7;
      }
      sub_247FAA428();
      uint64_t v70 = v127;
      uint64_t v71 = v158;
      sub_248175AF0();
      uint64_t v158 = v71;
      if (v71)
      {
        (*(void (**)(char *, uint64_t))(v111 + 8))(v27, v70);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v111 + 8))(v27, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      long long v40 = v150;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      uint64_t v36 = v153;
      uint64_t v37 = v154;
      uint64_t v38 = v155;
      long long v49 = v156;
      char v50 = 3;
      uint64_t v39 = v157;
      goto LABEL_13;
    case 6:
      LOBYTE(v150) = 6;
      sub_247FA9E04();
      uint64_t v72 = v158;
      sub_248175A50();
      uint64_t v158 = v72;
      if (v72) {
        goto LABEL_7;
      }
      sub_247FAA3D4();
      uint64_t v73 = v128;
      uint64_t v74 = v158;
      sub_248175AF0();
      uint64_t v158 = v74;
      if (v74)
      {
        (*(void (**)(char *, uint64_t))(v112 + 8))(v28, v73);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v112 + 8))(v28, v73);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      long long v40 = v150;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      uint64_t v36 = v153;
      uint64_t v37 = v154;
      uint64_t v38 = v155;
      long long v49 = v156;
      char v50 = 4;
      uint64_t v39 = v157;
      goto LABEL_13;
    case 7:
      LOBYTE(v150) = 7;
      sub_247FA9DB0();
      id v59 = v138;
      uint64_t v75 = v158;
      sub_248175A50();
      uint64_t v158 = v75;
      if (v75) {
        goto LABEL_7;
      }
      sub_247FAA380();
      uint64_t v61 = v129;
      uint64_t v76 = v158;
      sub_248175AF0();
      uint64_t v158 = v76;
      char v63 = &v145;
      if (v76) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v113 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v40 = v150;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      long long v49 = 0uLL;
      char v50 = 5;
      uint64_t v36 = v153;
      goto LABEL_13;
    case 8:
      LOBYTE(v150) = 8;
      sub_247FA9D08();
      id v59 = v139;
      uint64_t v77 = v158;
      sub_248175A50();
      uint64_t v158 = v77;
      if (v77) {
        goto LABEL_7;
      }
      sub_247FAA380();
      uint64_t v61 = v130;
      uint64_t v78 = v158;
      sub_248175AF0();
      uint64_t v158 = v78;
      char v63 = &v146;
      if (v78) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v114 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v40 = v150;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      long long v49 = 0uLL;
      char v50 = 6;
      uint64_t v36 = v153;
      goto LABEL_13;
    case 9:
      LOBYTE(v150) = 9;
      sub_247FA9C60();
      id v59 = v140;
      uint64_t v79 = v158;
      sub_248175A50();
      uint64_t v158 = v79;
      if (v79) {
        goto LABEL_7;
      }
      sub_247FAA32C();
      uint64_t v61 = v131;
      uint64_t v80 = v158;
      sub_248175AF0();
      uint64_t v158 = v80;
      char v63 = &v147;
      if (v80) {
        goto LABEL_48;
      }
      (*(void (**)(char *, uint64_t))(v115 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v40 = v150;
      long long v49 = 0uLL;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      char v50 = 7;
      goto LABEL_13;
    case 0xA:
      LOBYTE(v150) = 10;
      sub_247FA9BB8();
      id v59 = v141;
      uint64_t v81 = v158;
      sub_248175A50();
      uint64_t v158 = v81;
      if (v81) {
        goto LABEL_7;
      }
      sub_247FAA2D8();
      uint64_t v61 = v132;
      uint64_t v82 = v158;
      sub_248175AF0();
      uint64_t v158 = v82;
      char v63 = &v148;
      if (v82)
      {
LABEL_48:
        (*((void (**)(char *, uint64_t))*(v63 - 32) + 1))(v59, v61);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v116 + 8))(v59, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v40 = v150;
      long long v49 = 0uLL;
      uint64_t v34 = v151;
      uint64_t v35 = v152;
      char v50 = 8;
      goto LABEL_13;
    case 0xB:
      LOBYTE(v150) = 11;
      sub_247FA9B10();
      uint64_t v83 = v158;
      sub_248175A50();
      uint64_t v158 = v83;
      if (v83) {
        goto LABEL_7;
      }
      sub_247FAA284();
      uint64_t v84 = v133;
      uint64_t v85 = v158;
      sub_248175AF0();
      uint64_t v158 = v85;
      if (v85)
      {
        (*(void (**)(char *, uint64_t))(v117 + 8))(v29, v84);
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v117 + 8))(v29, v84);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v40 = v150;
      uint64_t v34 = v151;
      long long v49 = 0uLL;
      uint64_t v35 = v152;
      char v50 = 9;
      goto LABEL_13;
    case 0xC:
      LOBYTE(v150) = 12;
      sub_247FA9A68();
      uint64_t v86 = v158;
      sub_248175A50();
      uint64_t v158 = v86;
      if (v86) {
        goto LABEL_7;
      }
      uint64_t v87 = swift_allocObject();
      LOBYTE(v150) = 0;
      sub_247FAA230();
      uint64_t v88 = v135;
      uint64_t v89 = v158;
      sub_248175AF0();
      uint64_t v158 = v89;
      if (v89)
      {
        (*(void (**)(char *, uint64_t))(v119 + 8))(v30, v88);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
        goto LABEL_64;
      }
      LOBYTE(v150) = 1;
      sub_247F99E00();
      uint64_t v95 = v158;
      sub_248175AF0();
      uint64_t v96 = v108;
      uint64_t v158 = v95;
      if (v95)
      {
        (*(void (**)(char *, uint64_t))(v119 + 8))(v30, v88);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v96 + 8))(v23, v20);
        uint64_t v97 = *(void *)(v87 + 48);
        uint64_t v98 = *(void *)(v87 + 56);
        uint64_t v99 = *(void *)(v87 + 64);
        uint64_t v100 = *(void *)(v87 + 72);
        uint64_t v101 = *(void *)(v87 + 80);
        uint64_t v102 = *(void *)(v87 + 88);
        char v103 = *(unsigned char *)(v87 + 96);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FA98D8(v97, v98, v99, v100, v101, v102, v103);
        goto LABEL_64;
      }
      (*(void (**)(char *, uint64_t))(v119 + 8))(v30, v88);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v96 + 8))(v23, v20);
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v49 = 0uLL;
      long long v40 = (unint64_t)v87;
      char v50 = 10;
      goto LABEL_13;
    case 0xD:
      LOBYTE(v150) = 13;
      sub_247FA9A14();
      uint64_t v90 = v142;
      uint64_t v91 = v158;
      sub_248175A50();
      uint64_t v158 = v91;
      if (v91) {
        goto LABEL_7;
      }
      uint64_t v92 = swift_allocObject();
      sub_247F99E00();
      uint64_t v93 = v134;
      uint64_t v94 = v158;
      sub_248175AF0();
      uint64_t v158 = v94;
      if (v94)
      {
        (*(void (**)(char *, uint64_t))(v118 + 8))(v90, v93);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
LABEL_64:
        swift_deallocUninitializedObject();
        goto LABEL_8;
      }
      (*(void (**)(char *, uint64_t))(v118 + 8))(v90, v93);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v49 = 0uLL;
      long long v40 = (unint64_t)v92;
      char v50 = 11;
LABEL_13:
      uint64_t v45 = (uint64_t)v149;
      unint64_t v51 = v143;
      long long *v143 = v40;
      *((void *)v51 + 2) = v34;
      *((void *)v51 + 3) = v35;
      *((void *)v51 + 4) = v36;
      *((void *)v51 + 5) = v37;
      *((void *)v51 + 6) = v38;
      *(long long *)((char *)v51 + 56) = v49;
      *((void *)v51 + 9) = v39;
      *((unsigned char *)v51 + 80) = v50;
      break;
    default:
      LOBYTE(v150) = 0;
      sub_247FAA0F8();
      uint64_t v32 = v106;
      uint64_t v33 = v158;
      sub_248175A50();
      uint64_t v158 = v33;
      if (v33) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v120 + 8))(v32, v105);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v23, v20);
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      long long v40 = 0uLL;
LABEL_12:
      long long v49 = 0uLL;
      char v50 = 12;
      goto LABEL_13;
  }
  return __swift_destroy_boxed_opaque_existential_1(v45);
}

uint64_t sub_247F9F318@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  return AuthenticationModel.State.init(from:)(a1, a2);
}

void sub_247F9F330(void *a1)
{
}

uint64_t sub_247F9F34C()
{
  char v1 = *((unsigned char *)v0 + 80);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  long long v10 = v0[4];
  char v11 = v1;
  sub_248175E50();
  AuthenticationModel.State.hash(into:)((uint64_t)v5);
  return sub_248175EC0();
}

uint64_t sub_247F9F3B4()
{
  char v1 = *((unsigned char *)v0 + 80);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  long long v10 = v0[4];
  char v11 = v1;
  sub_248175E50();
  AuthenticationModel.State.hash(into:)((uint64_t)v5);
  return sub_248175EC0();
}

uint64_t AuthenticationModel.UserInteraction.hash(into:)()
{
  return sub_248175E70();
}

uint64_t sub_247F9F440()
{
  uint64_t v1 = 0x6C616E6F6974706FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6465726975716572;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x726576656ELL;
  }
}

uint64_t sub_247F9F498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB20C0(a1, a2);
  *a3 = result;
  return result;
}

void sub_247F9F4C0(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_247F9F4CC(uint64_t a1)
{
  unint64_t v2 = sub_247FAA4D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9F508(uint64_t a1)
{
  unint64_t v2 = sub_247FAA4D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9F544@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_247F9F574(uint64_t a1)
{
  unint64_t v2 = sub_247FAA5CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9F5B0(uint64_t a1)
{
  unint64_t v2 = sub_247FAA5CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9F5EC(uint64_t a1)
{
  unint64_t v2 = sub_247FAA578();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9F628(uint64_t a1)
{
  unint64_t v2 = sub_247FAA578();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247F9F664(uint64_t a1)
{
  unint64_t v2 = sub_247FAA524();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247F9F6A0(uint64_t a1)
{
  unint64_t v2 = sub_247FAA524();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.UserInteraction.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52F8);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t v25 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v23 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5300);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5308);
  uint64_t v19 = *(void *)(v9 - 8);
  uint64_t v20 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5310);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA4D0();
  sub_248175F60();
  if (v16)
  {
    if (v16 == 1)
    {
      char v27 = 1;
      sub_247FAA578();
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v22);
    }
    else
    {
      char v28 = 2;
      sub_247FAA524();
      uint64_t v17 = v23;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
  }
  else
  {
    char v26 = 0;
    sub_247FAA5CC();
    sub_248175B50();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t AuthenticationModel.UserInteraction.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t AuthenticationModel.UserInteraction.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5338);
  uint64_t v33 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5340);
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5348);
  uint64_t v31 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5350);
  uint64_t v36 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA4D0();
  uint64_t v12 = (uint64_t)v39;
  sub_248175F20();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v29 = v6;
  uint64_t v30 = 0;
  uint64_t v14 = v37;
  uint64_t v13 = v38;
  uint64_t v39 = a1;
  uint64_t v15 = v11;
  uint64_t v16 = sub_248175B30();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v21 = sub_2481758A0();
    swift_allocError();
    unint64_t v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *unint64_t v23 = &type metadata for AuthenticationModel.UserInteraction;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v21 - 8) + 104))(v23, *MEMORY[0x263F8DCB0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v9);
    a1 = v39;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (*(unsigned char *)(v16 + 32))
  {
    if (v17 == 1)
    {
      char v41 = 1;
      sub_247FAA578();
      uint64_t v18 = v30;
      sub_248175A50();
      uint64_t v20 = v35;
      uint64_t v19 = v36;
      uint64_t v30 = v18;
      if (v18)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
LABEL_12:
        a1 = v39;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v9);
    }
    else
    {
      char v42 = 2;
      sub_247FAA524();
      uint64_t v25 = v30;
      sub_248175A50();
      uint64_t v20 = v35;
      uint64_t v26 = v36;
      uint64_t v30 = v25;
      if (v25)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v13);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
    }
  }
  else
  {
    char v40 = 0;
    sub_247FAA5CC();
    uint64_t v24 = v30;
    sub_248175A50();
    uint64_t v30 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v9);
    uint64_t v20 = v35;
  }
  *uint64_t v20 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_247FA0040@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return AuthenticationModel.UserInteraction.init(from:)(a1, a2);
}

uint64_t sub_247FA0058(void *a1)
{
  return AuthenticationModel.UserInteraction.encode(to:)(a1);
}

BOOL AuthenticationModel.isLoading.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for AuthenticationModel() + 40) + 80) == 11;
}

uint64_t AuthenticationModel.alertModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for AuthenticationModel();
  uint64_t v4 = v1 + *(int *)(result + 40);
  if (*(unsigned char *)(v4 + 80) == 10)
  {
    uint64_t v5 = *(_OWORD **)v4;
    long long v6 = v5[9];
    long long v46 = v5[8];
    long long v47 = v6;
    *(_OWORD *)uint64_t v48 = v5[10];
    *(_OWORD *)&v48[9] = *(_OWORD *)((char *)v5 + 169);
    long long v7 = v5[5];
    long long v42 = v5[4];
    long long v43 = v7;
    long long v8 = v5[7];
    long long v44 = v5[6];
    long long v45 = v8;
    long long v9 = v5[2];
    v40[0] = v5[1];
    v40[1] = v9;
    long long v41 = v5[3];
    uint64_t v38 = *((void *)&v40[0] + 1);
    uint64_t v39 = *(void *)&v40[0];
    unint64_t v36 = *((void *)&v9 + 1);
    uint64_t v37 = v9;
    uint64_t v34 = *((void *)&v41 + 1);
    uint64_t v35 = v41;
    uint64_t v32 = *((void *)&v42 + 1);
    uint64_t v33 = v42;
    uint64_t v30 = *((void *)&v43 + 1);
    uint64_t v31 = v43;
    char v28 = BYTE1(v44);
    char v29 = v44;
    uint64_t v10 = (void *)*((void *)&v45 + 1);
    uint64_t v26 = (void *)v45;
    char v27 = (void *)*((void *)&v44 + 1);
    long long v11 = v46;
    long long v12 = v47;
    long long v13 = *(_OWORD *)v48;
    uint64_t v14 = *(void **)&v48[16];
    char v15 = v48[24];
    sub_247FAA620((uint64_t)v40);
    sub_247F98958(v27, v26, v10, (void *)v11, *((uint64_t *)&v11 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v13, *((void **)&v13 + 1), v14, v15);
    char v16 = v28;
    char v17 = v29;
    uint64_t v19 = v30;
    uint64_t v18 = v31;
    uint64_t v21 = v32;
    uint64_t v20 = v33;
    uint64_t v22 = v35;
    unint64_t v23 = v36;
    uint64_t v24 = v34;
    *(void *)a1 = v39;
    uint64_t v25 = v37;
    uint64_t result = v38;
    *(void *)(a1 + 8) = v38;
  }
  else
  {
    uint64_t v25 = 0;
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    char v16 = 0;
    unint64_t v23 = 0xE000000000000000;
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0xE000000000000000;
    char v17 = -1;
  }
  *(void *)(a1 + 16) = v25;
  *(void *)(a1 + 24) = v23;
  *(void *)(a1 + 32) = v22;
  *(void *)(a1 + 40) = v24;
  *(void *)(a1 + 48) = v20;
  *(void *)(a1 + 56) = v21;
  *(void *)(a1 + 64) = v18;
  *(void *)(a1 + 72) = v19;
  *(unsigned char *)(a1 + 80) = v17;
  *(unsigned char *)(a1 + 81) = v16;
  return result;
}

__n128 AuthenticationModel.Alert.init(title:message:isPresented:error:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *(unsigned char *)(a6 + 48);
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  long long v8 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 32) = *(_OWORD *)a6;
  *(_OWORD *)(a7 + 48) = v8;
  __n128 result = *(__n128 *)(a6 + 32);
  *(__n128 *)(a7 + 64) = result;
  *(unsigned char *)(a7 + 80) = v7;
  *(unsigned char *)(a7 + 81) = a5;
  return result;
}

uint64_t AuthenticationModel.isAlertPresented.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v1 + 80) == 10)
  {
    unint64_t v2 = *(_OWORD **)v1;
    long long v3 = v2[9];
    long long v49 = v2[8];
    long long v50 = v3;
    *(_OWORD *)unint64_t v51 = v2[10];
    *(_OWORD *)&v51[9] = *(_OWORD *)((char *)v2 + 169);
    long long v4 = v2[5];
    long long v45 = v2[4];
    long long v46 = v4;
    long long v5 = v2[7];
    long long v47 = v2[6];
    long long v48 = v5;
    long long v6 = v2[2];
    v43[0] = v2[1];
    v43[1] = v6;
    long long v44 = v2[3];
    uint64_t v42 = *((void *)&v44 + 1);
    uint64_t v40 = v44;
    uint64_t v41 = v45;
    uint64_t v38 = v46;
    uint64_t v39 = *((void *)&v45 + 1);
    uint64_t v37 = *((void *)&v46 + 1);
    char v35 = v47;
    unsigned int v36 = BYTE1(v47);
    char v7 = (void *)v48;
    uint64_t v34 = (void *)*((void *)&v47 + 1);
    long long v8 = (void *)*((void *)&v48 + 1);
    uint64_t v10 = *((void *)&v49 + 1);
    long long v9 = (void *)v49;
    uint64_t v12 = *((void *)&v50 + 1);
    long long v11 = (void *)v50;
    uint64_t v14 = *(void **)&v51[8];
    uint64_t v13 = *(void *)v51;
    char v15 = *(void **)&v51[16];
    char v16 = v51[24];
    sub_247FAA620((uint64_t)v43);
    char v33 = v16;
    uint64_t v32 = v14;
    char v17 = v7;
    uint64_t v18 = v8;
    uint64_t v19 = v40;
    uint64_t v20 = v41;
    uint64_t v21 = v9;
    uint64_t v22 = v42;
    unint64_t v23 = v11;
    uint64_t v25 = v38;
    uint64_t v24 = v39;
    uint64_t v26 = v12;
    uint64_t v27 = v37;
    uint64_t v28 = v13;
    char v30 = v35;
    uint64_t v29 = v36;
    sub_247F98958(v34, v17, v18, v21, v10, v23, v26, v28, v32, v15, v33);
  }
  else
  {
    uint64_t v19 = 0;
    uint64_t v22 = 0;
    uint64_t v20 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v27 = 0;
    uint64_t v29 = 0;
    char v30 = -1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FA98D8(v19, v22, v20, v24, v25, v27, v30);
  return v29;
}

uint64_t sub_247FA0414@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for AuthenticationModel() + 40);
  if (*(unsigned char *)(v3 + 80) == 10)
  {
    long long v4 = *(_OWORD **)v3;
    long long v5 = v4[9];
    long long v51 = v4[8];
    long long v52 = v5;
    *(_OWORD *)uint64_t v53 = v4[10];
    *(_OWORD *)&v53[9] = *(_OWORD *)((char *)v4 + 169);
    long long v6 = v4[5];
    long long v47 = v4[4];
    long long v48 = v6;
    long long v7 = v4[7];
    long long v49 = v4[6];
    long long v50 = v7;
    long long v8 = v4[2];
    v45[0] = v4[1];
    v45[1] = v8;
    long long v46 = v4[3];
    uint64_t v43 = v47;
    uint64_t v44 = *((void *)&v46 + 1);
    uint64_t v42 = *((void *)&v47 + 1);
    uint64_t v41 = v46;
    long long v9 = v48;
    char v39 = BYTE1(v49);
    char v40 = v49;
    uint64_t v10 = (void *)*((void *)&v50 + 1);
    uint64_t v37 = (void *)v50;
    uint64_t v38 = (void *)*((void *)&v49 + 1);
    uint64_t v12 = *((void *)&v51 + 1);
    long long v11 = (void *)v51;
    uint64_t v14 = *((void *)&v52 + 1);
    uint64_t v13 = (void *)v52;
    char v16 = *(void **)&v53[8];
    uint64_t v15 = *(void *)v53;
    char v17 = *(void **)&v53[16];
    uint64_t v18 = a2;
    char v19 = v53[24];
    sub_247FAA620((uint64_t)v45);
    char v36 = v19;
    a2 = v18;
    uint64_t v34 = v16;
    char v35 = v17;
    char v20 = v39;
    char v21 = v40;
    uint64_t v22 = v10;
    unint64_t v23 = v11;
    uint64_t v25 = v43;
    uint64_t v24 = v44;
    uint64_t v26 = v12;
    uint64_t v27 = v42;
    uint64_t v28 = v14;
    uint64_t v29 = v41;
    uint64_t v30 = v9;
    uint64_t v31 = v15;
    uint64_t v32 = *((void *)&v9 + 1);
    sub_247F98958(v38, v37, v22, v23, v26, v13, v28, v31, v34, v35, v36);
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v27 = 0;
    uint64_t v30 = 0;
    uint64_t v32 = 0;
    char v20 = 0;
    char v21 = -1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_247FA98D8(v29, v24, v25, v27, v30, v32, v21);
  *a2 = v20;
  return result;
}

double sub_247FA05CC(char *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a2 + *(int *)(type metadata accessor for AuthenticationModel() + 40));
  if (*((unsigned char *)v3 + 80) == 10)
  {
    uint64_t v27 = (void *)v3[8];
    uint64_t v28 = (void *)v3[9];
    uint64_t v31 = v3[6];
    uint64_t v32 = v3[7];
    uint64_t v29 = v3[4];
    uint64_t v30 = (void *)v3[5];
    uint64_t v25 = (void *)v3[2];
    uint64_t v26 = (void *)v3[3];
    long long v5 = (_OWORD *)*v3;
    uint64_t v24 = (void *)v3[1];
    char v6 = *a1;
    long long v7 = *(_OWORD *)(*v3 + 144);
    *(_OWORD *)&v37[32] = *(_OWORD *)(*v3 + 128);
    *(_OWORD *)&v37[48] = v7;
    *(_OWORD *)&v37[64] = v5[10];
    *(_OWORD *)&v37[73] = *(_OWORD *)((char *)v5 + 169);
    long long v8 = v5[5];
    long long v35 = v5[4];
    long long v36 = v8;
    long long v9 = v5[7];
    *(_OWORD *)uint64_t v37 = v5[6];
    *(_OWORD *)&v37[16] = v9;
    long long v10 = v5[2];
    v33[0] = v5[1];
    v33[1] = v10;
    long long v34 = v5[3];
    long long v19 = v10;
    long long v17 = v35;
    long long v18 = v34;
    long long v11 = v36;
    char v12 = v37[0];
    long long v22 = *(_OWORD *)&v37[24];
    long long v23 = *(_OWORD *)&v37[8];
    long long v20 = *(_OWORD *)&v37[56];
    long long v21 = *(_OWORD *)&v37[40];
    uint64_t v13 = *(void *)&v37[72];
    uint64_t v14 = *(void *)&v37[80];
    char v15 = v37[88];
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = v33[0];
    *(_OWORD *)(v16 + 32) = v19;
    *(_OWORD *)(v16 + 48) = v18;
    *(_OWORD *)(v16 + 64) = v17;
    *(_OWORD *)(v16 + 80) = v11;
    *(unsigned char *)(v16 + 96) = v12;
    *(unsigned char *)(v16 + 97) = v6;
    *(_OWORD *)(v16 + 104) = v23;
    *(_OWORD *)(v16 + 120) = v22;
    *(_OWORD *)(v16 + 136) = v21;
    *(_OWORD *)(v16 + 152) = v20;
    *(void *)(v16 + 168) = v13;
    *(void *)(v16 + 176) = v14;
    *(unsigned char *)(v16 + 184) = v15;
    sub_247FAA620((uint64_t)v33);
    sub_247F98958(v5, v24, v25, v26, v29, v30, v31, v32, v27, v28, 10);
    *uint64_t v3 = v16;
    double result = 0.0;
    *(_OWORD *)(v3 + 1) = 0u;
    *(_OWORD *)(v3 + 3) = 0u;
    *(_OWORD *)(v3 + 5) = 0u;
    *(_OWORD *)(v3 + 7) = 0u;
    v3[9] = 0;
    *((unsigned char *)v3 + 80) = 10;
  }
  return result;
}

double AuthenticationModel.isAlertPresented.setter(char a1)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for AuthenticationModel() + 40));
  if (*((unsigned char *)v3 + 80) == 10)
  {
    uint64_t v26 = (void *)v3[8];
    uint64_t v27 = (void *)v3[9];
    uint64_t v30 = v3[6];
    uint64_t v31 = v3[7];
    uint64_t v28 = v3[4];
    uint64_t v29 = (void *)v3[5];
    uint64_t v24 = (void *)v3[2];
    uint64_t v25 = (void *)v3[3];
    long long v5 = (_OWORD *)*v3;
    long long v23 = (void *)v3[1];
    long long v6 = *(_OWORD *)(*v3 + 144);
    *(_OWORD *)&v36[32] = *(_OWORD *)(*v3 + 128);
    *(_OWORD *)&v36[48] = v6;
    *(_OWORD *)&v36[64] = v5[10];
    *(_OWORD *)&v36[73] = *(_OWORD *)((char *)v5 + 169);
    long long v7 = v5[5];
    long long v34 = v5[4];
    long long v35 = v7;
    long long v8 = v5[7];
    *(_OWORD *)long long v36 = v5[6];
    *(_OWORD *)&v36[16] = v8;
    long long v9 = v5[2];
    v32[0] = v5[1];
    v32[1] = v9;
    long long v33 = v5[3];
    long long v18 = v9;
    long long v16 = v34;
    long long v17 = v33;
    long long v10 = v35;
    char v11 = v36[0];
    long long v21 = *(_OWORD *)&v36[24];
    long long v22 = *(_OWORD *)&v36[8];
    long long v19 = *(_OWORD *)&v36[56];
    long long v20 = *(_OWORD *)&v36[40];
    uint64_t v12 = *(void *)&v36[72];
    uint64_t v13 = *(void *)&v36[80];
    char v14 = v36[88];
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v32[0];
    *(_OWORD *)(v15 + 32) = v18;
    *(_OWORD *)(v15 + 48) = v17;
    *(_OWORD *)(v15 + 64) = v16;
    *(_OWORD *)(v15 + 80) = v10;
    *(unsigned char *)(v15 + 96) = v11;
    *(unsigned char *)(v15 + 97) = a1 & 1;
    *(_OWORD *)(v15 + 104) = v22;
    *(_OWORD *)(v15 + 120) = v21;
    *(_OWORD *)(v15 + 136) = v20;
    *(_OWORD *)(v15 + 152) = v19;
    *(void *)(v15 + 168) = v12;
    *(void *)(v15 + 176) = v13;
    *(unsigned char *)(v15 + 184) = v14;
    sub_247FAA620((uint64_t)v32);
    sub_247F98958(v5, v23, v24, v25, v28, v29, v30, v31, v26, v27, 10);
    *uint64_t v3 = v15;
    double result = 0.0;
    *(_OWORD *)(v3 + 1) = 0u;
    *(_OWORD *)(v3 + 3) = 0u;
    *(_OWORD *)(v3 + 5) = 0u;
    *(_OWORD *)(v3 + 7) = 0u;
    v3[9] = 0;
    *((unsigned char *)v3 + 80) = 10;
  }
  return result;
}

void (*AuthenticationModel.isAlertPresented.modify(void *a1))(char **a1)
{
  uint64_t v3 = (char *)malloc(0xB8uLL);
  *a1 = v3;
  long long v4 = v3 + 169;
  *((void *)v3 + 22) = v1;
  uint64_t v5 = *(int *)(type metadata accessor for AuthenticationModel() + 40);
  *((_DWORD *)v3 + 43) = v5;
  uint64_t v6 = v1 + v5;
  if (*(unsigned char *)(v6 + 80) == 10)
  {
    long long v7 = *(_OWORD **)v6;
    long long v9 = v7[2];
    long long v8 = v7[3];
    *(_OWORD *)uint64_t v3 = v7[1];
    *((_OWORD *)v3 + 1) = v9;
    *((_OWORD *)v3 + 2) = v8;
    long long v10 = v7[7];
    long long v12 = v7[4];
    long long v11 = v7[5];
    *((_OWORD *)v3 + 5) = v7[6];
    *((_OWORD *)v3 + 6) = v10;
    *((_OWORD *)v3 + 3) = v12;
    *((_OWORD *)v3 + 4) = v11;
    long long v14 = v7[9];
    long long v13 = v7[10];
    long long v15 = v7[8];
    *(_OWORD *)(v3 + 153) = *(_OWORD *)((char *)v7 + 169);
    *((_OWORD *)v3 + 8) = v14;
    *((_OWORD *)v3 + 9) = v13;
    *((_OWORD *)v3 + 7) = v15;
    uint64_t v44 = *((void *)v3 + 7);
    uint64_t v49 = *((void *)v3 + 8);
    uint64_t v50 = *((void *)v3 + 4);
    uint64_t v47 = *((void *)v3 + 9);
    uint64_t v48 = *((void *)v3 + 6);
    char v45 = v3[81];
    char v46 = v3[80];
    uint64_t v42 = (void *)*((void *)v3 + 12);
    uint64_t v43 = (void *)*((void *)v3 + 11);
    uint64_t v16 = *((void *)v3 + 15);
    char v40 = (void *)*((void *)v3 + 14);
    uint64_t v41 = (void *)*((void *)v3 + 13);
    long long v17 = (void *)*((void *)v3 + 16);
    uint64_t v18 = *((void *)v3 + 17);
    uint64_t v20 = *((void *)v3 + 18);
    long long v19 = (void *)*((void *)v3 + 19);
    long long v21 = (void *)*((void *)v3 + 20);
    long long v22 = v3 + 169;
    char v23 = v3[168];
    uint64_t v24 = (uint64_t)v3;
    uint64_t v25 = *((void *)v3 + 5);
    sub_247FAA620(v24);
    char v39 = v23;
    long long v4 = v22;
    uint64_t v26 = v44;
    uint64_t v38 = v21;
    uint64_t v27 = v16;
    uint64_t v29 = v49;
    uint64_t v28 = v50;
    uint64_t v30 = v17;
    uint64_t v32 = v47;
    uint64_t v31 = v48;
    uint64_t v33 = v18;
    uint64_t v34 = v20;
    char v35 = v45;
    char v36 = v46;
    sub_247F98958(v43, v42, v41, v40, v27, v30, v33, v34, v19, v38, v39);
  }
  else
  {
    uint64_t v28 = 0;
    uint64_t v25 = 0;
    uint64_t v31 = 0;
    uint64_t v26 = 0;
    uint64_t v29 = 0;
    uint64_t v32 = 0;
    char v35 = 0;
    char v36 = -1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FA98D8(v28, v25, v31, v26, v29, v32, v36);
  *long long v4 = v35;
  return sub_247FA0B74;
}

void sub_247FA0B74(char **a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = (uint64_t *)(*((void *)*a1 + 22) + *((int *)*a1 + 43));
  if (*((unsigned char *)v2 + 80) == 10)
  {
    uint64_t v30 = (void *)v2[8];
    uint64_t v31 = (void *)v2[9];
    char v35 = (void *)v2[1];
    uint64_t v36 = v2[7];
    uint64_t v33 = (void *)v2[5];
    uint64_t v34 = v2[6];
    uint64_t v32 = v2[4];
    uint64_t v28 = (void *)v2[2];
    uint64_t v29 = (void *)v2[3];
    uint64_t v3 = (_OWORD *)*v2;
    char v27 = v1[169];
    long long v5 = *(_OWORD *)(*v2 + 32);
    long long v4 = *(_OWORD *)(*v2 + 48);
    *(_OWORD *)uint64_t v1 = *(_OWORD *)(*v2 + 16);
    *((_OWORD *)v1 + 1) = v5;
    *((_OWORD *)v1 + 2) = v4;
    long long v6 = v3[7];
    long long v8 = v3[4];
    long long v7 = v3[5];
    *((_OWORD *)v1 + 5) = v3[6];
    *((_OWORD *)v1 + 6) = v6;
    *((_OWORD *)v1 + 3) = v8;
    *((_OWORD *)v1 + 4) = v7;
    long long v10 = v3[9];
    long long v9 = v3[10];
    long long v11 = v3[8];
    *(_OWORD *)(v1 + 153) = *(_OWORD *)((char *)v3 + 169);
    *((_OWORD *)v1 + 8) = v10;
    *((_OWORD *)v1 + 9) = v9;
    *((_OWORD *)v1 + 7) = v11;
    long long v20 = *((_OWORD *)v1 + 1);
    long long v21 = *(_OWORD *)v1;
    long long v18 = *((_OWORD *)v1 + 3);
    long long v19 = *((_OWORD *)v1 + 2);
    uint64_t v12 = *((void *)v1 + 8);
    uint64_t v13 = *((void *)v1 + 9);
    char v14 = v1[80];
    long long v25 = *(_OWORD *)(v1 + 104);
    long long v26 = *(_OWORD *)(v1 + 88);
    long long v23 = *(_OWORD *)(v1 + 136);
    long long v24 = *(_OWORD *)(v1 + 120);
    uint64_t v16 = *((void *)v1 + 19);
    uint64_t v15 = *((void *)v1 + 20);
    char v22 = v1[168];
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = v21;
    *(_OWORD *)(v17 + 32) = v20;
    *(_OWORD *)(v17 + 48) = v19;
    *(_OWORD *)(v17 + 64) = v18;
    *(void *)(v17 + 80) = v12;
    *(void *)(v17 + 88) = v13;
    *(unsigned char *)(v17 + 96) = v14;
    *(unsigned char *)(v17 + 97) = v27;
    *(_OWORD *)(v17 + 104) = v26;
    *(_OWORD *)(v17 + 120) = v25;
    *(_OWORD *)(v17 + 136) = v24;
    *(_OWORD *)(v17 + 152) = v23;
    *(void *)(v17 + 168) = v16;
    *(void *)(v17 + 176) = v15;
    *(unsigned char *)(v17 + 184) = v22;
    sub_247FAA620((uint64_t)v1);
    sub_247F98958(v3, v35, v28, v29, v32, v33, v34, v36, v30, v31, 10);
    *unint64_t v2 = v17;
    *(_OWORD *)(v2 + 1) = 0u;
    *(_OWORD *)(v2 + 3) = 0u;
    *(_OWORD *)(v2 + 5) = 0u;
    *(_OWORD *)(v2 + 7) = 0u;
    v2[9] = 0;
    *((unsigned char *)v2 + 80) = 10;
  }
  free(v1);
}

uint64_t AuthenticationModel.BasicLogin.username.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuthenticationModel.BasicLogin.username.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AuthenticationModel.BasicLogin.username.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.BasicLogin.password.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuthenticationModel.BasicLogin.password.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AuthenticationModel.BasicLogin.password.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.BasicLogin.isCancelled.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t AuthenticationModel.BasicLogin.isCancelled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 32) = result;
  return result;
}

uint64_t (*AuthenticationModel.BasicLogin.isCancelled.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.BasicLogin.isSkipped.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t AuthenticationModel.BasicLogin.isSkipped.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*AuthenticationModel.BasicLogin.isSkipped.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.BasicLogin.supportsSplitAccounts.getter()
{
  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t AuthenticationModel.BasicLogin.supportsSplitAccounts.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 34) = result;
  return result;
}

uint64_t (*AuthenticationModel.BasicLogin.supportsSplitAccounts.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.BasicLogin.isSplitAccountSetup.getter()
{
  return *(unsigned __int8 *)(v0 + 35);
}

uint64_t AuthenticationModel.BasicLogin.isSplitAccountSetup.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 35) = result;
  return result;
}

uint64_t (*AuthenticationModel.BasicLogin.isSplitAccountSetup.modify())()
{
  return nullsub_1;
}

void *AuthenticationModel.BasicLogin.authenticationContext.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

uint64_t AuthenticationModel.BasicLogin.currentServices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AuthenticationModel.BasicLogin.currentServices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*AuthenticationModel.BasicLogin.currentServices.modify())()
{
  return nullsub_1;
}

void *AuthenticationModel.BasicLogin.error.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

void AuthenticationModel.BasicLogin.error.setter(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
}

uint64_t (*AuthenticationModel.BasicLogin.error.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

uint64_t (*sub_247FA106C())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.BasicLogin.init(username:password:supportsSplitAccounts:isSplitAccountSetup:authenticationContext:currentServices:error:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(_WORD *)(a9 + 32) = 514;
  *(unsigned char *)(a9 + 34) = a5;
  *(unsigned char *)(a9 + 35) = a6;
  *(void *)(a9 + 40) = a7;
  *(void *)(a9 + 48) = a8;
  *(void *)(a9 + 56) = a10;
  return result;
}

unint64_t AuthenticationModel.BasicLogin.description.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t AuthenticationModel.BasicLogin.debugDescription.getter()
{
  return 0xD000000000000010;
}

void AuthenticationModel.BasicLogin.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  int v2 = *(unsigned __int8 *)(v0 + 32);
  int v3 = *(unsigned __int8 *)(v0 + 33);
  long long v5 = *(void **)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  id v11 = *(id *)(v0 + 56);
  if (*(void *)(v0 + 8))
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_248175E80();
    if (v1)
    {
LABEL_3:
      sub_248175E80();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      if (v2 == 2) {
        goto LABEL_8;
      }
LABEL_7:
      sub_248175E80();
      goto LABEL_8;
    }
  }
  sub_248175E80();
  if (v2 != 2) {
    goto LABEL_7;
  }
LABEL_8:
  sub_248175E80();
  if (v3 != 2) {
    sub_248175E80();
  }
  sub_248175E80();
  sub_248175E80();
  sub_248175E80();
  sub_248175E80();
  if (v5)
  {
    id v6 = v5;
    sub_2481756D0();
  }
  sub_248175E70();
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    do
    {
      long long v9 = *(void **)(v4 + 8 * v8++ + 32);
      sub_248175160();
      id v10 = v9;
      sub_2481751A0();

      swift_bridgeObjectRelease();
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
  if (v11)
  {
    sub_248175E80();
    id v12 = v11;
    sub_2481756D0();
  }
  else
  {
    sub_248175E80();
  }
}

unint64_t sub_247FA15A0(char a1)
{
  unint64_t result = 0x656D616E72657375;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64726F7773736170;
      break;
    case 2:
      unint64_t result = 0x6C65636E61437369;
      break;
    case 3:
      unint64_t result = 0x657070696B537369;
      break;
    case 4:
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0x53746E6572727563;
      break;
    case 8:
      unint64_t result = 0x726F727265;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_247FA16D0()
{
  return sub_247FA15A0(*v0);
}

uint64_t sub_247FA16D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB2210(a1, a2);
  *a3 = result;
  return result;
}

void sub_247FA1700(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_247FA170C(uint64_t a1)
{
  unint64_t v2 = sub_247FAA70C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA1748(uint64_t a1)
{
  unint64_t v2 = sub_247FAA70C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.BasicLogin.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5360);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v22 = *(void *)(v1 + 24);
  uint64_t v23 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 32);
  int v20 = *(unsigned __int8 *)(v1 + 33);
  int v21 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 34);
  int v18 = *(unsigned __int8 *)(v1 + 35);
  int v19 = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v16 = *(void *)(v1 + 48);
  uint64_t v17 = v8;
  uint64_t v10 = a1[3];
  id v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_247FAA70C();
  sub_248175F60();
  LOBYTE(v26) = 0;
  uint64_t v14 = v24;
  sub_248175B60();
  if (!v14)
  {
    LOBYTE(v26) = 1;
    sub_248175B60();
    LOBYTE(v26) = 2;
    sub_248175B70();
    LOBYTE(v26) = 3;
    sub_248175B70();
    LOBYTE(v26) = 4;
    sub_248175BC0();
    LOBYTE(v26) = 5;
    sub_248175BC0();
    uint64_t v26 = v17;
    char v25 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
    sub_247FAAA00(&qword_2692D5378, &qword_2692D5370);
    sub_248175BE0();
    uint64_t v26 = v16;
    char v25 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D50C0);
    sub_247F99E54(&qword_2692D50C8, &qword_2692D50D0);
    sub_248175BE0();
    uint64_t v26 = v9;
    char v25 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    sub_247FAAA00(&qword_2692D5388, &qword_2692D5380);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v13);
}

uint64_t AuthenticationModel.BasicLogin.hashValue.getter()
{
  return sub_248175EC0();
}

void AuthenticationModel.BasicLogin.init(from:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5390);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA70C();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v32) = 0;
    uint64_t v9 = sub_248175A70();
    uint64_t v11 = v10;
    uint64_t v30 = v9;
    LOBYTE(v32) = 1;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_248175A70();
    uint64_t v14 = v13;
    uint64_t v29 = v12;
    LOBYTE(v32) = 2;
    swift_bridgeObjectRetain();
    int v28 = sub_248175A80();
    LOBYTE(v32) = 3;
    int v27 = sub_248175A80();
    LOBYTE(v32) = 4;
    int v26 = sub_248175AD0();
    LOBYTE(v32) = 5;
    int v25 = sub_248175AD0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
    char v31 = 6;
    sub_247FAAA00(&qword_2692D5398, &qword_2692D5370);
    sub_248175AF0();
    uint64_t v22 = a2;
    id v15 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D50C0);
    char v31 = 7;
    uint64_t v23 = sub_247F99E54(&qword_2692D50F8, &qword_2692D5100);
    id v24 = v15;
    sub_248175AF0();
    uint64_t v16 = (uint64_t)v32;
    v21[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    char v31 = 8;
    sub_247FAAA00(&qword_2692D53A0, &qword_2692D5380);
    uint64_t v23 = v16;
    swift_bridgeObjectRetain();
    sub_248175AF0();
    v25 &= 1u;
    v26 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = (uint64_t)v32;
    id v18 = v32;
    int v19 = v22;
    uint64_t v20 = v23;
    *uint64_t v22 = v30;
    v19[1] = v11;
    v19[2] = v29;
    v19[3] = v14;
    *((unsigned char *)v19 + 32) = v28;
    *((unsigned char *)v19 + 33) = v27;
    *((unsigned char *)v19 + 34) = v26;
    *((unsigned char *)v19 + 35) = v25;
    v19[5] = (uint64_t)v15;
    v19[6] = v20;
    v19[7] = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_247FA20E4(void *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_247FA20FC(void *a1)
{
  return AuthenticationModel.BasicLogin.encode(to:)(a1);
}

uint64_t sub_247FA2118()
{
  return sub_248175EC0();
}

uint64_t sub_247FA2190()
{
  return sub_248175EC0();
}

id AuthenticationModel.SecondFactor.authenticationContext.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t AuthenticationModel.SecondFactor.codeLength.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t AuthenticationModel.SecondFactor.collectedCode.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t AuthenticationModel.SecondFactor.collectedCode.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*AuthenticationModel.SecondFactor.collectedCode.modify())()
{
  return nullsub_1;
}

uint64_t (*AuthenticationModel.SecondFactor.errorInfo.modify())()
{
  return nullsub_1;
}

void *AuthenticationModel.SecondFactor.error.getter()
{
  id v1 = *(void **)(v0 + 72);
  id v2 = v1;
  return v1;
}

void AuthenticationModel.SecondFactor.error.setter(uint64_t a1)
{
  *(void *)(v1 + 72) = a1;
}

uint64_t (*AuthenticationModel.SecondFactor.error.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

unint64_t sub_247FA234C()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x676E654C65646F63;
      break;
    case 2:
      unint64_t result = 0x657463656C6C6F63;
      break;
    case 3:
      unint64_t result = 0x666E49726F727265;
      break;
    case 4:
      unint64_t result = 0x726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247FA240C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB25E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_247FA2434(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_247FA2440(uint64_t a1)
{
  unint64_t v2 = sub_247FAA760();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA247C(uint64_t a1)
{
  unint64_t v2 = sub_247FAA760();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.SecondFactor.encode(to:)(void *a1)
{
  return sub_247FA2930(a1, &qword_2692D53A8, (void (*)(void))sub_247FAA760);
}

uint64_t AuthenticationModel.SecondFactor.hashValue.getter()
{
  return sub_247FA2C2C((void (*)(unsigned char *))AuthenticationModel.SecondFactor.hash(into:));
}

void AuthenticationModel.SecondFactor.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_247FA2548(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_247FA2560(void *a1)
{
  return AuthenticationModel.SecondFactor.encode(to:)(a1);
}

BOOL sub_247FA2578(uint64_t a1, uint64_t a2)
{
  return sub_247FA7FA8(a1, a2);
}

uint64_t sub_247FA2594(uint64_t a1, uint64_t a2)
{
  return sub_247FA3174(a1, a2, (void (*)(unsigned char *))AuthenticationModel.SecondFactor.hash(into:));
}

uint64_t sub_247FA25B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247FA3200(a1, a2, a3, (void (*)(unsigned char *))AuthenticationModel.SecondFactor.hash(into:));
}

uint64_t (*AuthenticationModel.SecondFactorAlert.collectedCode.modify())()
{
  return nullsub_1;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV12SecondFactorV9errorInfoAC05ErrorH0VSgvg_0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = (void *)v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = (uint64_t)v6;
  return sub_247F98864(v2, v3, v4, v5, v6);
}

__n128 _s12AppleIDSetup19AuthenticationModelV12SecondFactorV9errorInfoAC05ErrorH0VSgvs_0(long long *a1)
{
  __n128 v4 = (__n128)a1[1];
  long long v5 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  sub_247F98AE8(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64));
  __n128 result = v4;
  *(_OWORD *)(v1 + 32) = v5;
  *(__n128 *)(v1 + 48) = v4;
  *(void *)(v1 + 64) = v2;
  return result;
}

uint64_t (*AuthenticationModel.SecondFactorAlert.errorInfo.modify())()
{
  return nullsub_1;
}

uint64_t (*AuthenticationModel.SecondFactorAlert.error.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

__n128 _s12AppleIDSetup19AuthenticationModelV12SecondFactorV10codeLength21authenticationContext9errorInfoAESi_So023AKAppleIDAuthenticationJ0CAC05ErrorL0VSgtcfC_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a3 + 32);
  *(void *)(a4 + 8) = a1;
  *(void *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 24) = 1;
  *(void *)a4 = a2;
  __n128 result = *(__n128 *)a3;
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 48) = v6;
  *(void *)(a4 + 64) = v4;
  *(void *)(a4 + 72) = 0;
  return result;
}

void _s12AppleIDSetup19AuthenticationModelV12SecondFactorV4hash4intoys6HasherVz_tF_0()
{
  uint64_t v1 = *(void **)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  *(_OWORD *)long long v5 = *(_OWORD *)(v0 + 40);
  uint64_t v3 = *(void **)(v0 + 72);
  if (*(void *)v0)
  {
    sub_248175E80();
    id v4 = v1;
    sub_2481756D0();
  }
  else
  {
    sub_248175E80();
  }
  sub_248175E70();
  sub_248175E80();
  if (!v2) {
    sub_248175E70();
  }
  if (v5[0] != (id)1)
  {
    sub_248175E80();
    AuthenticationModel.ErrorInfo.hash(into:)();
    if (v3) {
      goto LABEL_8;
    }
LABEL_12:
    sub_248175E80();
    return;
  }
  sub_248175E80();
  if (!v3) {
    goto LABEL_12;
  }
LABEL_8:
  sub_248175E80();
  id v6 = v3;
  sub_2481756D0();
}

uint64_t sub_247FA287C(uint64_t a1)
{
  unint64_t v2 = sub_247FAA85C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA28B8(uint64_t a1)
{
  unint64_t v2 = sub_247FAA85C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.SecondFactorAlert.encode(to:)(void *a1)
{
  return sub_247FA2930(a1, &qword_2692D53D0, (void (*)(void))sub_247FAA85C);
}

uint64_t sub_247FA2930(void *a1, uint64_t *a2, void (*a3)(void))
{
  int v26 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v3;
  uint64_t v9 = v3[1];
  uint64_t v24 = v3[2];
  uint64_t v25 = v9;
  int v33 = *((unsigned __int8 *)v3 + 24);
  uint64_t v11 = v3[4];
  uint64_t v22 = v3[5];
  uint64_t v23 = v11;
  uint64_t v12 = v3[7];
  uint64_t v19 = v3[6];
  uint64_t v20 = v12;
  uint64_t v21 = v3[8];
  uint64_t v18 = v3[9];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v26();
  sub_248175F60();
  uint64_t v28 = v10;
  char v34 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
  sub_247FAAA00(&qword_2692D5378, &qword_2692D5370);
  uint64_t v13 = v27;
  sub_248175BE0();
  if (!v13)
  {
    uint64_t v14 = v23;
    uint64_t v15 = v22;
    LOBYTE(v28) = 1;
    sub_248175BD0();
    LOBYTE(v28) = 2;
    sub_248175B80();
    uint64_t v28 = v14;
    uint64_t v29 = v15;
    uint64_t v30 = v19;
    uint64_t v31 = v20;
    uint64_t v32 = v21;
    char v34 = 3;
    sub_247FAA7B4();
    sub_248175B90();
    uint64_t v28 = v18;
    char v34 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    sub_247FAAA00(&qword_2692D5388, &qword_2692D5380);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AuthenticationModel.SecondFactorAlert.hashValue.getter()
{
  return sub_247FA2C2C((void (*)(unsigned char *))AuthenticationModel.SecondFactorAlert.hash(into:));
}

uint64_t sub_247FA2C2C(void (*a1)(unsigned char *))
{
  uint64_t v3 = *((void *)v1 + 2);
  char v4 = *((unsigned char *)v1 + 24);
  long long v8 = *v1;
  uint64_t v9 = v3;
  char v10 = v4;
  long long v5 = v1[3];
  long long v11 = v1[2];
  long long v12 = v5;
  long long v13 = v1[4];
  sub_248175E50();
  a1(v7);
  return sub_248175EC0();
}

void AuthenticationModel.SecondFactorAlert.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_247FA2CDC(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  char v34 = (void *)__swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = *(v34 - 1);
  MEMORY[0x270FA5388](v34);
  char v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  char v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  a3();
  sub_248175F20();
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);

    sub_247F98AE8(0, 1, 0, 0, 0);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
    char v42 = 0;
    sub_247FAAA00(&qword_2692D5398, &qword_2692D5370);
    sub_248175AF0();
    id v12 = v36;
    LOBYTE(v36) = 1;
    id v33 = v12;
    id v13 = v12;
    uint64_t v14 = sub_248175AE0();
    LOBYTE(v36) = 2;
    uint64_t v15 = sub_248175A90();
    int v41 = v16;
    char v42 = 3;
    sub_247FAA808();
    sub_248175AA0();
    uint64_t v28 = v15;
    uint64_t v29 = v14;
    uint64_t v30 = v8;
    id v31 = v13;
    uint64_t v18 = (uint64_t)v36;
    uint64_t v17 = v37;
    uint64_t v20 = v38;
    uint64_t v19 = v39;
    uint64_t v21 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    char v42 = 4;
    uint64_t v32 = v19;
    sub_247F98864(v18, v17, v20, v19, v21);
    sub_247FAAA00(&qword_2692D53A0, &qword_2692D5380);
    uint64_t v22 = v34;
    sub_248175AF0();
    (*(void (**)(char *, void *))(v30 + 8))(v10, v22);
    id v23 = v36;
    char v34 = v36;
    id v24 = v31;
    uint64_t v25 = v32;
    sub_247F98864(v18, v17, v20, v32, v21);
    sub_247F98AE8(v18, v17, v20, v25, v21);

    uint64_t v26 = v29;
    *(void *)a4 = v33;
    *(void *)(a4 + 8) = v26;
    *(void *)(a4 + 16) = v28;
    *(unsigned char *)(a4 + 24) = v41 & 1;
    *(void *)(a4 + 32) = v18;
    *(void *)(a4 + 40) = v17;
    *(void *)(a4 + 48) = v20;
    *(void *)(a4 + 56) = v25;
    *(void *)(a4 + 64) = v21;
    *(void *)(a4 + 72) = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);

    sub_247F98AE8(v18, v17, v20, v25, v21);
  }
}

void sub_247FA312C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_247FA3144(void *a1)
{
  return AuthenticationModel.SecondFactorAlert.encode(to:)(a1);
}

uint64_t sub_247FA315C(uint64_t a1, uint64_t a2)
{
  return sub_247FA3174(a1, a2, (void (*)(unsigned char *))AuthenticationModel.SecondFactorAlert.hash(into:));
}

uint64_t sub_247FA3174(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  uint64_t v5 = *((void *)v3 + 2);
  char v6 = *((unsigned char *)v3 + 24);
  long long v10 = *v3;
  uint64_t v11 = v5;
  char v12 = v6;
  long long v7 = v3[3];
  long long v13 = v3[2];
  long long v14 = v7;
  long long v15 = v3[4];
  sub_248175E50();
  a3(v9);
  return sub_248175EC0();
}

uint64_t sub_247FA31E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247FA3200(a1, a2, a3, (void (*)(unsigned char *))AuthenticationModel.SecondFactorAlert.hash(into:));
}

uint64_t sub_247FA3200(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  uint64_t v6 = *((void *)v4 + 2);
  char v7 = *((unsigned char *)v4 + 24);
  long long v11 = *v4;
  uint64_t v12 = v6;
  char v13 = v7;
  long long v8 = v4[3];
  long long v14 = v4[2];
  long long v15 = v8;
  long long v16 = v4[4];
  sub_248175E50();
  a4(v10);
  return sub_248175EC0();
}

uint64_t AuthenticationModel.ErrorInfo.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuthenticationModel.ErrorInfo.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void AuthenticationModel.ErrorInfo.error.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*AuthenticationModel.ErrorInfo.error.modify(void *a1))()
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

uint64_t AuthenticationModel.ErrorInfo.init(title:message:error:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

void AuthenticationModel.ErrorInfo.hash(into:)()
{
  uint64_t v1 = v0[3];
  unint64_t v2 = (void *)v0[4];
  if (v0[1])
  {
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
LABEL_8:
    sub_248175E80();
    if (v2) {
      goto LABEL_4;
    }
LABEL_9:
    sub_248175E80();
    return;
  }
  sub_248175E80();
  if (!v1) {
    goto LABEL_8;
  }
LABEL_3:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_9;
  }
LABEL_4:
  sub_248175E80();
  id v3 = v2;
  sub_2481756D0();
}

uint64_t sub_247FA347C()
{
  uint64_t v1 = 0x6567617373656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x726F727265;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_247FA34D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB2834(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FA34F8(uint64_t a1)
{
  unint64_t v2 = sub_247FAA8B0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA3534(uint64_t a1)
{
  unint64_t v2 = sub_247FAA8B0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.ErrorInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D53E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v7;
  uint64_t v12 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA8B0();
  sub_248175F60();
  char v19 = 0;
  uint64_t v8 = v15;
  sub_248175B60();
  if (!v8)
  {
    uint64_t v9 = v12;
    char v18 = 1;
    sub_248175B60();
    uint64_t v16 = v9;
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    sub_247FAAA00(&qword_2692D5388, &qword_2692D5380);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AuthenticationModel.ErrorInfo.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t AuthenticationModel.ErrorInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D53F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA8B0();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_248175A70();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v24 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_248175A70();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
  char v23 = 2;
  sub_247FAAA00(&qword_2692D53A0, &qword_2692D5380);
  uint64_t v20 = v14;
  swift_bridgeObjectRetain();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = (uint64_t)v22;
  id v16 = v22;
  uint64_t v17 = v20;
  *a2 = v21;
  a2[1] = v11;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247FA3A74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AuthenticationModel.ErrorInfo.init(from:)(a1, a2);
}

uint64_t sub_247FA3A8C(void *a1)
{
  return AuthenticationModel.ErrorInfo.encode(to:)(a1);
}

uint64_t sub_247FA3AA8()
{
  return sub_248175EC0();
}

uint64_t sub_247FA3B00()
{
  return sub_248175EC0();
}

id AuthenticationModel.ServerRedirect.authenticationContext.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void *AuthenticationModel.ServerRedirect.configuration.getter()
{
  id v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void *AuthenticationModel.ServerRedirect.finalURLResponse.getter()
{
  id v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void AuthenticationModel.ServerRedirect.finalURLResponse.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*AuthenticationModel.ServerRedirect.finalURLResponse.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

void *AuthenticationModel.ServerRedirect.error.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void AuthenticationModel.ServerRedirect.error.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*AuthenticationModel.ServerRedirect.error.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

void *AuthenticationModel.ServerRedirect.additionalOptions.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void AuthenticationModel.ServerRedirect.additionalOptions.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*AuthenticationModel.ServerRedirect.additionalOptions.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.ServerRedirect.init(authenticationContext:configuration:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  a3[2] = 0;
  a3[3] = 0;
  a3[4] = 0;
  *a3 = result;
  a3[1] = a2;
  return result;
}

void AuthenticationModel.ServerRedirect.hash(into:)()
{
  id v2 = *(void **)v0;
  uint64_t v1 = *(void **)(v0 + 8);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v5 = *(void **)(v0 + 32);
  if (*(void *)v0)
  {
    sub_248175E80();
    id v6 = v2;
    sub_2481756D0();

    if (v1) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_248175E80();
    if (v1)
    {
LABEL_3:
      sub_248175E80();
      id v7 = v1;
      sub_2481756D0();

      if (v4) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  sub_248175E80();
  if (v4)
  {
LABEL_4:
    sub_248175E80();
    id v8 = v4;
    sub_2481756D0();

    if (v3) {
      goto LABEL_5;
    }
LABEL_12:
    sub_248175E80();
    if (v5) {
      goto LABEL_6;
    }
LABEL_13:
    sub_248175E80();
    return;
  }
LABEL_11:
  sub_248175E80();
  if (!v3) {
    goto LABEL_12;
  }
LABEL_5:
  sub_248175E80();
  id v9 = v3;
  sub_2481756D0();

  if (!v5) {
    goto LABEL_13;
  }
LABEL_6:
  sub_248175E80();
  id v10 = v5;
  sub_2481756D0();
}

unint64_t sub_247FA3F04(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72756769666E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x726F727265;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_247FA3FCC()
{
  return sub_247FA3F04(*v0);
}

uint64_t sub_247FA3FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB297C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FA3FFC(uint64_t a1)
{
  unint64_t v2 = sub_247FAA904();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA4038(uint64_t a1)
{
  unint64_t v2 = sub_247FAA904();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.ServerRedirect.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5400);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v17 = v1[2];
  uint64_t v18 = v8;
  uint64_t v10 = v1[3];
  uint64_t v15 = v1[4];
  uint64_t v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA904();
  sub_248175F60();
  uint64_t v20 = v9;
  char v19 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
  sub_247FAAA00(&qword_2692D5378, &qword_2692D5370);
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v11 = v16;
    uint64_t v12 = v17;
    uint64_t v20 = v18;
    char v19 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5410);
    sub_247FAAA00(&qword_2692D5418, &qword_2692D5410);
    sub_248175BE0();
    uint64_t v20 = v12;
    char v19 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5420);
    sub_247FAAA00(&qword_2692D5428, &qword_2692D5420);
    sub_248175BE0();
    uint64_t v20 = v11;
    char v19 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    sub_247FAAA00(&qword_2692D5388, &qword_2692D5380);
    sub_248175BE0();
    uint64_t v20 = v15;
    char v19 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5430);
    sub_247FAAA00(&qword_2692D5438, &qword_2692D5430);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AuthenticationModel.ServerRedirect.hashValue.getter()
{
  return sub_248175EC0();
}

void AuthenticationModel.ServerRedirect.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5440);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA904();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
    char v26 = 0;
    sub_247FAAA00(&qword_2692D5398, &qword_2692D5370);
    sub_248175AF0();
    id v9 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5410);
    char v26 = 1;
    sub_247FAAA00(&qword_2692D5448, &qword_2692D5410);
    id v25 = v9;
    id v10 = v9;
    sub_248175AF0();
    char v23 = a2;
    id v11 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5420);
    char v26 = 2;
    sub_247FAAA00(&qword_2692D5450, &qword_2692D5420);
    id v24 = v11;
    sub_248175AF0();
    id v22 = v10;
    id v12 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    char v26 = 3;
    sub_247FAAA00(&qword_2692D53A0, &qword_2692D5380);
    id v21 = v12;
    sub_248175AF0();
    id v13 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5430);
    char v26 = 4;
    uint64_t v14 = sub_247FAAA00(&qword_2692D5458, &qword_2692D5430);
    v20[0] = v13;
    v20[1] = v14;
    id v15 = v13;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v16 = v27;
    id v17 = v27;
    uint64_t v18 = v23;
    *char v23 = v25;
    v18[1] = v11;
    uint64_t v19 = v20[0];
    v18[2] = v12;
    v18[3] = v19;
    v18[4] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
}

void sub_247FA48F4(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_247FA490C(void *a1)
{
  return AuthenticationModel.ServerRedirect.encode(to:)(a1);
}

uint64_t sub_247FA4928()
{
  return sub_248175EC0();
}

uint64_t sub_247FA4980()
{
  return sub_248175EC0();
}

uint64_t (*AuthenticationModel.NativeRecovery.error.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

void AuthenticationModel.NativeRecovery.recoveredInfo.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*AuthenticationModel.NativeRecovery.recoveredInfo.modify())()
{
  return nullsub_1;
}

void AuthenticationModel.NativeRecovery.hash(into:)()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void **)(v0 + 8);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  if (*(void *)v0)
  {
    sub_248175E80();
    id v5 = v2;
    sub_2481756D0();

    if (v1) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_248175E80();
    if (v1)
    {
LABEL_3:
      sub_248175E80();
      id v6 = v1;
      sub_2481756D0();

      if (v4) {
        goto LABEL_4;
      }
LABEL_10:
      sub_248175E80();
      if (v3) {
        goto LABEL_5;
      }
LABEL_11:
      sub_248175E80();
      return;
    }
  }
  sub_248175E80();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_4:
  sub_248175E80();
  id v7 = v4;
  sub_2481756D0();

  if (!v3) {
    goto LABEL_11;
  }
LABEL_5:
  sub_248175E80();
  id v8 = v3;
  sub_2481756D0();
}

unint64_t sub_247FA4BB4()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x747865746E6F63;
      break;
    case 2:
      unint64_t result = 0x726F727265;
      break;
    case 3:
      unint64_t result = 0x657265766F636572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247FA4C50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB2BA4(a1, a2);
  *a3 = result;
  return result;
}

void sub_247FA4C78(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_247FA4C84(uint64_t a1)
{
  unint64_t v2 = sub_247FAA958();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA4CC0(uint64_t a1)
{
  unint64_t v2 = sub_247FAA958();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.NativeRecovery.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5460);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v14 = v1[2];
  uint64_t v15 = v8;
  uint64_t v13 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA958();
  sub_248175F60();
  uint64_t v17 = v9;
  char v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
  sub_247FAAA00(&qword_2692D5378, &qword_2692D5370);
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = v14;
    uint64_t v17 = v15;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5470);
    sub_247FAAA00(&qword_2692D5478, &qword_2692D5470);
    sub_248175BE0();
    uint64_t v17 = v11;
    char v16 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    sub_247FAAA00(&qword_2692D5388, &qword_2692D5380);
    sub_248175BE0();
    uint64_t v17 = v10;
    char v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5430);
    sub_247FAAA00(&qword_2692D5438, &qword_2692D5430);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AuthenticationModel.NativeRecovery.hashValue.getter()
{
  return sub_248175EC0();
}

void AuthenticationModel.NativeRecovery.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5480);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA958();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
    char v21 = 0;
    sub_247FAAA00(&qword_2692D5398, &qword_2692D5370);
    sub_248175AF0();
    id v9 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5470);
    char v21 = 1;
    sub_247FAAA00(&qword_2692D5488, &qword_2692D5470);
    id v20 = v9;
    sub_248175AF0();
    uint64_t v18 = a2;
    id v10 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    char v21 = 2;
    sub_247FAAA00(&qword_2692D53A0, &qword_2692D5380);
    id v19 = v10;
    sub_248175AF0();
    id v11 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5430);
    char v21 = 3;
    uint64_t v12 = sub_247FAAA00(&qword_2692D5458, &qword_2692D5430);
    v17[0] = v11;
    v17[1] = v12;
    id v13 = v11;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v14 = v22;
    id v15 = v22;
    char v16 = v18;
    *uint64_t v18 = v9;
    v16[1] = v10;
    v16[2] = v17[0];
    v16[3] = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
}

void sub_247FA5420(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_247FA5438(void *a1)
{
  return AuthenticationModel.NativeRecovery.encode(to:)(a1);
}

uint64_t sub_247FA5454()
{
  return sub_248175EC0();
}

uint64_t sub_247FA54A4()
{
  return sub_248175EC0();
}

id AuthenticationModel.FidoChallenge.authenticationContext.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void *AuthenticationModel.FidoChallenge.context.getter()
{
  id v1 = *(void **)(v0 + 8);
  id v2 = v1;
  return v1;
}

void *AuthenticationModel.FidoChallenge.response.getter()
{
  id v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void AuthenticationModel.FidoChallenge.response.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*AuthenticationModel.FidoChallenge.response.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

void *AuthenticationModel.FidoChallenge.error.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

void AuthenticationModel.FidoChallenge.error.setter(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
}

uint64_t (*AuthenticationModel.FidoChallenge.error.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_247FA106C();
  return sub_247FA1068;
}

void sub_247FA569C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

void AuthenticationModel.FidoChallenge.hash(into:)()
{
  id v2 = *(void **)v0;
  uint64_t v1 = *(void **)(v0 + 8);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  if (*(void *)v0)
  {
    sub_248175E80();
    id v5 = v2;
    sub_2481756D0();

    if (v1) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_248175E80();
    if (v1)
    {
LABEL_3:
      sub_248175E80();
      id v6 = v1;
      sub_2481756D0();

      if (v4) {
        goto LABEL_4;
      }
LABEL_10:
      sub_248175E80();
      if (v3) {
        goto LABEL_5;
      }
LABEL_11:
      sub_248175E80();
      return;
    }
  }
  sub_248175E80();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_4:
  sub_248175E80();
  id v7 = v4;
  sub_2481756D0();

  if (!v3) {
    goto LABEL_11;
  }
LABEL_5:
  sub_248175E80();
  id v8 = v3;
  sub_2481756D0();
}

unint64_t sub_247FA5824()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x747865746E6F63;
      break;
    case 2:
      unint64_t result = 0x65736E6F70736572;
      break;
    case 3:
      unint64_t result = 0x726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247FA58B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB2D78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FA58DC(uint64_t a1)
{
  unint64_t v2 = sub_247FAA9AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA5918(uint64_t a1)
{
  unint64_t v2 = sub_247FAA9AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.FidoChallenge.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5490);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v14 = v1[2];
  uint64_t v15 = v8;
  uint64_t v13 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA9AC();
  sub_248175F60();
  uint64_t v17 = v9;
  char v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
  sub_247FAAA00(&qword_2692D5378, &qword_2692D5370);
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v11 = v14;
    uint64_t v17 = v15;
    char v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D54A0);
    sub_247FAAA00(&qword_2692D54A8, &qword_2692D54A0);
    sub_248175BE0();
    uint64_t v17 = v11;
    char v16 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D54B0);
    sub_247FAAA00(&qword_2692D54B8, &qword_2692D54B0);
    sub_248175BE0();
    uint64_t v17 = v10;
    char v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    sub_247FAAA00(&qword_2692D5388, &qword_2692D5380);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AuthenticationModel.FidoChallenge.hashValue.getter()
{
  return sub_248175EC0();
}

void AuthenticationModel.FidoChallenge.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D54C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAA9AC();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
    char v21 = 0;
    sub_247FAAA00(&qword_2692D5398, &qword_2692D5370);
    sub_248175AF0();
    id v9 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D54A0);
    char v21 = 1;
    sub_247FAAA00(&qword_2692D54C8, &qword_2692D54A0);
    id v20 = v9;
    sub_248175AF0();
    uint64_t v18 = a2;
    id v10 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D54B0);
    char v21 = 2;
    sub_247FAAA00(&qword_2692D54D0, &qword_2692D54B0);
    id v19 = v10;
    sub_248175AF0();
    id v11 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5380);
    char v21 = 3;
    uint64_t v12 = sub_247FAAA00(&qword_2692D53A0, &qword_2692D5380);
    v17[0] = v11;
    v17[1] = v12;
    id v13 = v11;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v14 = v22;
    id v15 = v22;
    char v16 = v18;
    *uint64_t v18 = v9;
    v16[1] = v10;
    v16[2] = v17[0];
    v16[3] = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
}

void sub_247FA6078(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_247FA6090(void *a1)
{
  return AuthenticationModel.FidoChallenge.encode(to:)(a1);
}

uint64_t sub_247FA60AC()
{
  return sub_248175EC0();
}

uint64_t sub_247FA60FC()
{
  return sub_248175EC0();
}

id AuthenticationModel.KeepUsing.authenticationContext.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t AuthenticationModel.KeepUsing.username.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuthenticationModel.KeepUsing.keepUsing.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t AuthenticationModel.KeepUsing.keepUsing.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*AuthenticationModel.KeepUsing.keepUsing.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.KeepUsing.init(authenticationContext:username:keepUsing:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(unsigned char *)(a5 + 24) = a4;
  return result;
}

uint64_t AuthenticationModel.KeepUsing.hash(into:)()
{
  uint64_t v1 = *(void **)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  if (*(void *)v0)
  {
    sub_248175E80();
    id v3 = v1;
    sub_2481756D0();
  }
  else
  {
    sub_248175E80();
  }
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (v2 != 2) {
    sub_248175E80();
  }
  return sub_248175E80();
}

unint64_t sub_247FA6298()
{
  uint64_t v1 = 0x656D616E72657375;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6973557065656BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_247FA62FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB2F28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FA6324(uint64_t a1)
{
  unint64_t v2 = sub_247FAAA44();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA6360(uint64_t a1)
{
  unint64_t v2 = sub_247FAAA44();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.KeepUsing.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D54D8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v12 = v1[2];
  uint64_t v13 = v8;
  v11[1] = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAAA44();
  sub_248175F60();
  uint64_t v17 = v9;
  char v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
  sub_247FAAA00(&qword_2692D5378, &qword_2692D5370);
  sub_248175BE0();
  if (!v2)
  {
    char v15 = 1;
    sub_248175BB0();
    char v14 = 2;
    sub_248175B70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AuthenticationModel.KeepUsing.hashValue.getter()
{
  return sub_248175EC0();
}

void AuthenticationModel.KeepUsing.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D54E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAAA44();
  sub_248175F20();
  if (v2)
  {
    id v9 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5370);
    char v20 = 0;
    sub_247FAAA00(&qword_2692D5398, &qword_2692D5370);
    sub_248175AF0();
    id v10 = v21;
    char v19 = 1;
    id v9 = v21;
    uint64_t v16 = sub_248175AC0();
    uint64_t v17 = v11;
    char v18 = 2;
    swift_bridgeObjectRetain();
    char v12 = sub_248175A80();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v16;
    uint64_t v14 = v17;
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v13;
    *(void *)(a2 + 16) = v14;
    *(unsigned char *)(a2 + 24) = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
}

void sub_247FA6884(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_247FA689C(void *a1)
{
  return AuthenticationModel.KeepUsing.encode(to:)(a1);
}

uint64_t sub_247FA68B8()
{
  return sub_248175EC0();
}

uint64_t sub_247FA6918()
{
  return sub_248175EC0();
}

uint64_t AuthenticationModel.Alert.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuthenticationModel.Alert.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AuthenticationModel.Alert.title.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.Alert.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AuthenticationModel.Alert.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AuthenticationModel.Alert.message.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.Alert.error.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  char v8 = *(unsigned char *)(v1 + 80);
  *(unsigned char *)(a1 + 48) = v8;
  return sub_247FA97F0(v2, v3, v4, v5, v6, v7, v8);
}

__n128 AuthenticationModel.Alert.error.setter(long long *a1)
{
  __n128 v6 = (__n128)a1[1];
  long long v7 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  sub_247FA98D8(*(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80));
  __n128 result = v6;
  *(_OWORD *)(v1 + 32) = v7;
  *(__n128 *)(v1 + 48) = v6;
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  *(unsigned char *)(v1 + 80) = v4;
  return result;
}

uint64_t (*AuthenticationModel.Alert.error.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.Alert.isPresented.getter()
{
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t AuthenticationModel.Alert.isPresented.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 81) = result;
  return result;
}

uint64_t (*AuthenticationModel.Alert.isPresented.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticationModel.Alert.hash(into:)(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 80);
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175E80();
  if (v3 != 255) {
    SetupError.hash(into:)(a1);
  }
  return sub_248175E80();
}

uint64_t sub_247FA6C68()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6567617373656DLL;
      break;
    case 2:
      uint64_t result = 0x726F727265;
      break;
    case 3:
      uint64_t result = 0x6E65736572507369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247FA6CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FB3088(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FA6D1C(uint64_t a1)
{
  unint64_t v2 = sub_247FAAA98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FA6D58(uint64_t a1)
{
  unint64_t v2 = sub_247FAAA98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticationModel.Alert.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D54F0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  __n128 v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v24 = *(void *)(v1 + 24);
  uint64_t v25 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v22 = *(void *)(v1 + 40);
  uint64_t v23 = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v20 = *(void *)(v1 + 56);
  uint64_t v21 = v9;
  uint64_t v10 = *(void *)(v1 + 64);
  uint64_t v18 = *(void *)(v1 + 72);
  uint64_t v19 = v10;
  int v34 = *(unsigned __int8 *)(v1 + 80);
  v17[3] = *(unsigned __int8 *)(v1 + 81);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAAA98();
  sub_248175F60();
  LOBYTE(v27) = 0;
  uint64_t v11 = v26;
  sub_248175BB0();
  if (!v11)
  {
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    uint64_t v15 = v22;
    uint64_t v14 = v23;
    LOBYTE(v27) = 1;
    sub_248175BB0();
    uint64_t v27 = v14;
    uint64_t v28 = v15;
    uint64_t v29 = v13;
    uint64_t v30 = v12;
    uint64_t v31 = v19;
    uint64_t v32 = v18;
    char v33 = v34;
    char v35 = 2;
    sub_247FAAAEC();
    sub_248175B90();
    LOBYTE(v27) = 3;
    sub_248175BC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AuthenticationModel.Alert.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 80);
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175E80();
  if (v1 != 255) {
    SetupError.hash(into:)((uint64_t)v3);
  }
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t AuthenticationModel.Alert.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5508);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FAAA98();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v25 = 0;
    uint64_t v29 = 0;
    uint64_t v17 = 0;
    uint64_t v16 = 0;
    char v18 = -1;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    LOBYTE(v43) = 0;
    uint64_t v9 = sub_248175AC0();
    uint64_t v12 = v11;
    uint64_t v39 = v9;
    LOBYTE(v43) = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_248175AC0();
    uint64_t v42 = v12;
    uint64_t v40 = v14;
    uint64_t v37 = v13;
    char v50 = 2;
    sub_247FAAB40();
    swift_bridgeObjectRetain();
    uint64_t v38 = 0;
    sub_248175AA0();
    char v33 = a2;
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    uint64_t v16 = v48;
    char v18 = v49;
    LOBYTE(v43) = 3;
    uint64_t v41 = v15;
    uint64_t v34 = v44;
    uint64_t v35 = v46;
    uint64_t v36 = v45;
    sub_247FA97F0(v15, v44, v45, v46, v47, v48, v49);
    char v19 = sub_248175AD0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LODWORD(v38) = v19 & 1;
    swift_bridgeObjectRetain();
    uint64_t v20 = v40;
    swift_bridgeObjectRetain();
    uint64_t v21 = v41;
    uint64_t v22 = v34;
    uint64_t v23 = v36;
    sub_247FA97F0(v41, v34, v36, v35, v17, v16, v18);
    uint64_t v24 = v21;
    uint64_t v25 = v35;
    sub_247FA98D8(v24, v22, v23, v35, v17, v16, v18);
    uint64_t v26 = v42;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v33;
    *char v33 = v39;
    v27[1] = v26;
    uint64_t v28 = v36;
    v27[2] = v37;
    v27[3] = v20;
    v27[4] = v41;
    v27[5] = v22;
    v27[6] = v28;
    v27[7] = v25;
    v27[8] = v17;
    v27[9] = v16;
    *((unsigned char *)v27 + 80) = v18;
    *((unsigned char *)v27 + 81) = v38;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v41;
    uint64_t v30 = v22;
    uint64_t v31 = v28;
  }
  return sub_247FA98D8(v29, v30, v31, v25, v17, v16, v18);
}

uint64_t sub_247FA753C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AuthenticationModel.Alert.init(from:)(a1, a2);
}

uint64_t sub_247FA7554(void *a1)
{
  return AuthenticationModel.Alert.encode(to:)(a1);
}

uint64_t sub_247FA7578()
{
  int v1 = *(unsigned __int8 *)(v0 + 80);
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175E80();
  if (v1 != 255) {
    SetupError.hash(into:)((uint64_t)v3);
  }
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t sub_247FA7688(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IdMSAccount();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_247F97FA8(v2, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return sub_248175E80();
  }
  sub_247FB32E8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  sub_248175E80();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_248174700();
  sub_247FB3350(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v12 = &v7[*(int *)(v4 + 24)];
  uint64_t v14 = *(void *)v12;
  uint64_t v13 = *((void *)v12 + 1);
  uint64_t v16 = *((void *)v12 + 2);
  uint64_t v15 = *((void *)v12 + 3);
  uint64_t v17 = *((void *)v12 + 4);
  uint64_t v18 = *((void *)v12 + 5);
  uint64_t v19 = *((void *)v12 + 6);
  uint64_t v20 = *((void *)v12 + 7);
  switch(v12[72])
  {
    case 1:
      uint64_t v24 = *((void *)v12 + 8);
      uint64_t v25 = v17;
      uint64_t v26 = v19;
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v15)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        char v21 = 1;
        goto LABEL_8;
      }
      sub_248175E80();
      sub_247FAC1EC(v14, v13, v16, 0, v25, v18, v26, v20, v24, 1);
      break;
    case 2:
      uint64_t v24 = *((void *)v12 + 8);
      uint64_t v25 = v17;
      uint64_t v26 = v19;
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      char v21 = 2;
LABEL_8:
      sub_247FAC1EC(v14, v13, v16, v15, v25, v18, v26, v20, v24, v21);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      uint64_t v24 = *((void *)v12 + 8);
      uint64_t v25 = v17;
      uint64_t v26 = v19;
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v22 = *(void *)&v7[*(int *)(v4 + 28)];
  swift_bridgeObjectRetain();
  sub_247FDE2AC(a1, v22);
  swift_bridgeObjectRelease();
  return sub_247FB3494((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
}

uint64_t sub_247FA7B30()
{
  unint64_t v0 = sub_248175A30();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

BOOL _s12AppleIDSetup19AuthenticationModelV10BasicLoginV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  int v7 = *(unsigned __int8 *)(a1 + 33);
  int v8 = *(unsigned __int8 *)(a1 + 34);
  int v9 = *(unsigned __int8 *)(a1 + 35);
  uint64_t v11 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v12 = *(void **)(a1 + 56);
  uint64_t v13 = *(void *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 24);
  int v16 = *(unsigned __int8 *)(a2 + 32);
  int v17 = *(unsigned __int8 *)(a2 + 33);
  int v18 = *(unsigned __int8 *)(a2 + 34);
  int v19 = *(unsigned __int8 *)(a2 + 35);
  uint64_t v20 = *(void **)(a2 + 40);
  uint64_t v21 = *(void *)(a2 + 48);
  uint64_t v22 = *(void **)(a2 + 56);
  if (!v3)
  {
    if (v13) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v13) {
    return 0;
  }
  if (*(void *)a1 == *(void *)a2 && v3 == v13) {
    goto LABEL_8;
  }
  uint64_t v53 = *(void *)(a1 + 16);
  uint64_t v54 = *(void *)(a1 + 48);
  uint64_t v62 = *(void **)(a1 + 56);
  int v60 = *(unsigned __int8 *)(a1 + 35);
  uint64_t v56 = *(void **)(a1 + 40);
  uint64_t v58 = *(void **)(a2 + 40);
  uint64_t v55 = *(void *)(a2 + 48);
  uint64_t v23 = *(void **)(a2 + 56);
  int v24 = *(unsigned __int8 *)(a1 + 34);
  int v25 = *(unsigned __int8 *)(a2 + 35);
  int v26 = *(unsigned __int8 *)(a2 + 34);
  int v27 = *(unsigned __int8 *)(a1 + 33);
  int v28 = *(unsigned __int8 *)(a2 + 33);
  int v29 = *(unsigned __int8 *)(a1 + 32);
  int v30 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v52 = *(void *)(a2 + 16);
  char v31 = sub_248175CE0();
  uint64_t v14 = v52;
  uint64_t v4 = v53;
  int v16 = v30;
  int v6 = v29;
  int v17 = v28;
  int v7 = v27;
  int v18 = v26;
  int v19 = v25;
  int v8 = v24;
  uint64_t v22 = v23;
  uint64_t v10 = v54;
  uint64_t v21 = v55;
  uint64_t v11 = v56;
  uint64_t v20 = v58;
  int v9 = v60;
  uint64_t v12 = v62;
  char v32 = v31;
  BOOL result = 0;
  if (v32)
  {
LABEL_8:
    if (v5)
    {
      if (!v15) {
        return 0;
      }
      if (v4 != v14 || v5 != v15)
      {
        char v63 = v12;
        uint64_t v34 = v22;
        int v59 = v8;
        int v35 = v19;
        int v36 = v18;
        int v61 = v17;
        int v37 = v6;
        int v57 = v16;
        char v38 = sub_248175CE0();
        int v16 = v57;
        int v6 = v37;
        int v17 = v61;
        int v18 = v36;
        int v19 = v35;
        int v8 = v59;
        uint64_t v22 = v34;
        uint64_t v12 = v63;
        char v39 = v38;
        BOOL result = 0;
        if ((v39 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v6 == 2)
    {
      if (v16 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v16 == 2 || ((((v6 & 1) == 0) ^ v16) & 1) == 0) {
        return result;
      }
    }
    if (v7 == 2)
    {
      if (v17 != 2) {
        return 0;
      }
      BOOL result = 0;
      if (v8 != v18) {
        return result;
      }
    }
    else
    {
      BOOL result = 0;
      if (v17 == 2 || ((((v7 & 1) == 0) ^ v17) & 1) == 0 || ((v8 ^ v18) & 1) != 0) {
        return result;
      }
    }
    if ((v9 ^ v19)) {
      return result;
    }
    if (v11)
    {
      if (!v20) {
        return 0;
      }
      uint64_t v40 = v10;
      uint64_t v41 = v22;
      uint64_t v42 = v12;
      sub_247FB3398(0, &qword_2692D58A0);
      id v43 = v20;
      id v44 = v11;
      char v45 = sub_2481756C0();

      if ((v45 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t v40 = v10;
      uint64_t v41 = v22;
      uint64_t v42 = v12;
      if (v20) {
        return 0;
      }
    }
    if (sub_2480F3E64(v40, v21))
    {
      if (v42)
      {
        if (!v41) {
          return 0;
        }
        uint64_t v46 = v41;
        uint64_t v47 = v42;
        uint64_t v48 = v46;
        sub_247FB3398(0, (unint64_t *)&qword_2692D5890);
        id v49 = v48;
        id v50 = v47;
        char v51 = sub_2481756C0();

        return (v51 & 1) != 0;
      }
      if (!v41) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV9ErrorInfoV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  int v6 = (void *)a1[4];
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v10 = (void *)a2[4];
  if (!v3)
  {
    if (v7) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v7) {
    return 0;
  }
  BOOL v11 = *a1 == *a2 && v3 == v7;
  if (v11 || (v12 = sub_248175CE0(), uint64_t result = 0, (v12 & 1) != 0))
  {
LABEL_10:
    if (v5)
    {
      if (!v9) {
        return 0;
      }
      if (v4 != v8 || v5 != v9)
      {
        char v14 = sub_248175CE0();
        uint64_t result = 0;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v9)
    {
      return 0;
    }
    if (v6)
    {
      if (v10)
      {
        sub_247FB3398(0, (unint64_t *)&qword_2692D5890);
        id v15 = v10;
        id v16 = v6;
        char v17 = sub_2481756C0();

        if (v17) {
          return 1;
        }
      }
    }
    else if (!v10)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_247FA7FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v10 = *(void **)(a1 + 64);
  BOOL v11 = *(void **)(a1 + 72);
  uint64_t v13 = *(void **)a2;
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  int v15 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v19 = *(void *)(a2 + 48);
  uint64_t v18 = *(void *)(a2 + 56);
  uint64_t v21 = *(void **)(a2 + 64);
  uint64_t v20 = *(void **)(a2 + 72);
  if (*(void *)a1)
  {
    if (!v13) {
      return 0;
    }
    uint64_t v54 = *(void *)(a2 + 32);
    uint64_t v55 = *(void *)(a2 + 40);
    uint64_t v56 = *(void *)(a2 + 48);
    uint64_t v57 = *(void *)(a2 + 56);
    char v63 = *(void **)(a1 + 72);
    uint64_t v64 = *(void **)(a2 + 64);
    uint64_t v58 = *(void **)(a2 + 72);
    uint64_t v59 = *(void *)(a1 + 32);
    uint64_t v60 = *(void *)(a1 + 40);
    uint64_t v61 = *(void *)(a1 + 48);
    uint64_t v62 = *(void *)(a1 + 56);
    uint64_t v22 = *(void **)(a1 + 64);
    sub_247FB3398(0, &qword_2692D58A0);
    id v23 = v13;
    id v24 = v2;
    char v25 = sub_2481756C0();

    BOOL result = 0;
    if ((v25 & 1) == 0) {
      return result;
    }
    uint64_t v10 = v22;
    uint64_t v8 = v62;
    BOOL v11 = v63;
    uint64_t v6 = v60;
    uint64_t v9 = v61;
    uint64_t v20 = v58;
    uint64_t v7 = v59;
    uint64_t v21 = v64;
    uint64_t v19 = v56;
    uint64_t v18 = v57;
    uint64_t v16 = v54;
    uint64_t v17 = v55;
    if (v3 != v12) {
      return result;
    }
LABEL_8:
    if (v5)
    {
      if (!v15) {
        return 0;
      }
    }
    else
    {
      if (v4 == v14) {
        char v27 = v15;
      }
      else {
        char v27 = 1;
      }
      if (v27) {
        return 0;
      }
    }
    if (v6 == 1)
    {
      uint64_t v28 = v7;
      uint64_t v29 = 1;
      uint64_t v30 = v9;
      uint64_t v31 = v8;
      if (v17 == 1)
      {
LABEL_24:
        if (v11)
        {
          if (!v20) {
            return 0;
          }
          id v50 = v20;
          sub_247FB3398(0, (unint64_t *)&qword_2692D5890);
          id v51 = v50;
          id v52 = v11;
          char v53 = sub_2481756C0();

          return (v53 & 1) != 0;
        }
        return !v20;
      }
    }
    else
    {
      v67[0] = v7;
      v67[1] = v6;
      v67[2] = v9;
      v67[3] = v8;
      uint64_t v68 = v10;
      if (v17 != 1)
      {
        v66[0] = v16;
        v66[1] = v17;
        v66[2] = v19;
        v66[3] = v18;
        v66[4] = v21;
        uint64_t v42 = v9;
        uint64_t v43 = v8;
        uint64_t v44 = v6;
        uint64_t v45 = v7;
        uint64_t v46 = v20;
        sub_247F98864(v7, v6, v9, v8, v10);
        id v47 = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v48 = _s12AppleIDSetup19AuthenticationModelV9ErrorInfoV2eeoiySbAE_AEtFZ_0(v67, v66);
        id v49 = v68;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_247F98AE8(v45, v44, v42, v43, v10);
        uint64_t v20 = v46;
        if ((v48 & 1) == 0) {
          return 0;
        }
        goto LABEL_24;
      }
      uint64_t v28 = v7;
      uint64_t v30 = v9;
      uint64_t v29 = v6;
      uint64_t v32 = v8;
      unint64_t v65 = v21;
      uint64_t v33 = v18;
      uint64_t v34 = v19;
      uint64_t v35 = v16;
      swift_bridgeObjectRetain();
      uint64_t v31 = v32;
      swift_bridgeObjectRetain();
      id v36 = v10;
      uint64_t v16 = v35;
      uint64_t v17 = 1;
      uint64_t v19 = v34;
      uint64_t v18 = v33;
      uint64_t v21 = v65;
    }
    uint64_t v37 = v19;
    uint64_t v38 = v16;
    uint64_t v39 = v18;
    uint64_t v40 = v21;
    uint64_t v41 = v17;
    sub_247F98864(v16, v17, v19, v18, v21);
    sub_247F98AE8(v28, v29, v30, v31, v10);
    sub_247F98AE8(v38, v41, v37, v39, v40);
    return 0;
  }
  BOOL result = 0;
  if (!v13 && v3 == v12) {
    goto LABEL_8;
  }
  return result;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV14ServerRedirectV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  char v5 = *(void **)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v9 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a2 + 24);
  uint64_t v10 = *(void **)(a2 + 32);
  if (*(void *)a1)
  {
    if (!v6) {
      return 0;
    }
    char v27 = *(void **)(a1 + 32);
    sub_247FB3398(0, &qword_2692D58A0);
    id v11 = v6;
    id v12 = v2;
    char v13 = sub_2481756C0();

    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    char v27 = *(void **)(a1 + 32);
    if (v6) {
      return 0;
    }
  }
  if (v3)
  {
    if (!v7) {
      return 0;
    }
    sub_247FB3398(0, &qword_2692D58B0);
    id v14 = v7;
    id v15 = v3;
    char v16 = sub_2481756C0();

    if ((v16 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v5)
  {
    if (!v9) {
      return 0;
    }
    sub_247FB3398(0, &qword_2692D58A8);
    id v17 = v9;
    id v18 = v5;
    char v19 = sub_2481756C0();

    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v4)
  {
    if (!v8) {
      return 0;
    }
    sub_247FB3398(0, (unint64_t *)&qword_2692D5890);
    id v20 = v8;
    id v21 = v4;
    char v22 = sub_2481756C0();

    if ((v22 & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (v27)
  {
    if (v10)
    {
      sub_247FB3398(0, &qword_2692D9EA0);
      id v23 = v10;
      id v24 = v27;
      char v25 = sub_2481756C0();

      if (v25) {
        return 1;
      }
    }
  }
  else if (!v10)
  {
    return 1;
  }
  return 0;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV14NativeRecoveryV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  char v5 = *(void **)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v9 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a2 + 24);
  if (*(void *)a1)
  {
    if (!v6) {
      return 0;
    }
    sub_247FB3398(0, &qword_2692D58A0);
    id v10 = v6;
    id v11 = v2;
    char v12 = sub_2481756C0();

    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  if (v3)
  {
    if (!v7) {
      return 0;
    }
    sub_247FB3398(0, &qword_2692D58B8);
    id v13 = v7;
    id v14 = v3;
    char v15 = sub_2481756C0();

    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v5)
  {
    if (!v9) {
      return 0;
    }
    sub_247FB3398(0, (unint64_t *)&qword_2692D5890);
    id v16 = v9;
    id v17 = v5;
    char v18 = sub_2481756C0();

    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v4)
  {
    if (v8)
    {
      sub_247FB3398(0, &qword_2692D9EA0);
      id v19 = v8;
      id v20 = v4;
      char v21 = sub_2481756C0();

      if (v21) {
        return 1;
      }
    }
  }
  else if (!v8)
  {
    return 1;
  }
  return 0;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV13FidoChallengeV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  char v5 = *(void **)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v9 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a2 + 24);
  if (*(void *)a1)
  {
    if (!v6) {
      return 0;
    }
    sub_247FB3398(0, &qword_2692D58A0);
    id v10 = v6;
    id v11 = v2;
    char v12 = sub_2481756C0();

    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  if (v3)
  {
    if (!v7) {
      return 0;
    }
    sub_247FB3398(0, &qword_2692D58C8);
    id v13 = v7;
    id v14 = v3;
    char v15 = sub_2481756C0();

    if ((v15 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v5)
  {
    if (!v9) {
      return 0;
    }
    sub_247FB3398(0, &qword_2692D58C0);
    id v16 = v9;
    id v17 = v5;
    char v18 = sub_2481756C0();

    if ((v18 & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v4)
  {
    if (v8)
    {
      sub_247FB3398(0, (unint64_t *)&qword_2692D5890);
      id v19 = v8;
      id v20 = v4;
      char v21 = sub_2481756C0();

      if (v21) {
        return 1;
      }
    }
  }
  else if (!v8)
  {
    return 1;
  }
  return 0;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV9KeepUsingV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (*(void *)a1)
  {
    if (!v7) {
      return 0;
    }
    sub_247FB3398(0, &qword_2692D58A0);
    id v10 = v7;
    id v11 = v3;
    char v12 = sub_2481756C0();

    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  BOOL v13 = v2 == v6 && v4 == v8;
  if (v13 || (v14 = sub_248175CE0(), uint64_t result = 0, (v14 & 1) != 0))
  {
    if (v5 == 2)
    {
      if (v9 != 2) {
        return 0;
      }
    }
    else if (v9 == 2 || ((((v5 & 1) == 0) ^ v9) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV5AlertV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v27 = *(void *)(a1 + 32);
  uint64_t v28 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  int v29 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v22 = *(void *)(a2 + 40);
  uint64_t v23 = *(void *)(a2 + 48);
  uint64_t v24 = *(void *)(a2 + 56);
  uint64_t v25 = *(void *)(a2 + 64);
  uint64_t v26 = *(void *)(a2 + 72);
  int v11 = *(unsigned __int8 *)(a2 + 80);
  int v20 = *(unsigned __int8 *)(a2 + 81);
  int v21 = *(unsigned __int8 *)(a1 + 81);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_248175CE0(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v8 && v3 == v9 || (v14 = sub_248175CE0(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v29 == 255)
      {
        uint64_t v18 = v7;
        uint64_t v17 = v5;
        uint64_t v16 = v6;
        uint64_t v15 = v4;
        if (v11 == 255) {
          return v21 ^ v20 ^ 1u;
        }
      }
      else
      {
        uint64_t v32 = v27;
        uint64_t v33 = v28;
        uint64_t v15 = v4;
        uint64_t v34 = v4;
        uint64_t v35 = v6;
        uint64_t v16 = v6;
        uint64_t v17 = v5;
        uint64_t v36 = v5;
        uint64_t v37 = v7;
        uint64_t v18 = v7;
        char v38 = v29;
        if (v11 != 255)
        {
          v30[0] = v10;
          v30[1] = v22;
          v30[2] = v23;
          v30[3] = v24;
          v30[4] = v25;
          v30[5] = v26;
          char v31 = v11;
          sub_247FA9804(v27, v28, v4, v6, v5, v7, v29);
          sub_247FA9804(v27, v28, v4, v6, v5, v7, v29);
          char v19 = static SetupError.== infix(_:_:)((uint64_t)&v32, (uint64_t)v30);
          sub_247FA98EC(v32, v33, v34, v35, v36, v37, v38);
          sub_247FA98D8(v27, v28, v4, v6, v5, v7, v29);
          if ((v19 & 1) == 0) {
            return 0;
          }
          return v21 ^ v20 ^ 1u;
        }
        sub_247FA9804(v27, v28, v4, v6, v5, v7, v29);
        sub_247FA9804(v27, v28, v4, v6, v5, v7, v29);
        sub_247FA98EC(v27, v28, v4, v6, v5, v7, v29);
      }
      sub_247FA97F0(v10, v22, v23, v24, v25, v26, v11);
      sub_247FA98D8(v27, v28, v15, v16, v17, v18, v29);
      sub_247FA98D8(v10, v22, v23, v24, v25, v26, v11);
      return 0;
    }
  }
  return result;
}

BOOL _s12AppleIDSetup19AuthenticationModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v84 = type metadata accessor for AuthenticationModel();
  uint64_t v4 = MEMORY[0x270FA5388](v84);
  uint64_t v91 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v92 = (char *)&v83 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v88 = (char *)&v83 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v87 = (char *)&v83 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v96 = (uint64_t)&v83 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v93 = (uint64_t)&v83 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v94 = (uint64_t)&v83 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v95 = (uint64_t)&v83 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v86 = (uint64_t)&v83 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v85 = (uint64_t)&v83 - v22;
  uint64_t v23 = type metadata accessor for IdMSAccount();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (uint64_t *)((char *)&v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58D0);
  uint64_t v28 = v27 - 8;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
  uint64_t v34 = (uint64_t *)((char *)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v37 = (char *)&v83 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v83 - v38;
  uint64_t v89 = a1;
  sub_247F97FA8(a1, (uint64_t)&v83 - v38);
  uint64_t v90 = a2;
  sub_247F97FA8(a2, (uint64_t)v37);
  uint64_t v40 = (uint64_t)&v30[*(int *)(v28 + 56)];
  sub_247F97FA8((uint64_t)v39, (uint64_t)v30);
  sub_247F97FA8((uint64_t)v37, v40);
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v41((uint64_t)v30, 1, v23) == 1)
  {
    sub_247FB33D4((uint64_t)v37, &qword_2692D5080);
    sub_247FB33D4((uint64_t)v39, &qword_2692D5080);
    if (v41(v40, 1, v23) == 1)
    {
      sub_247FB33D4((uint64_t)v30, &qword_2692D5080);
      uint64_t v42 = v89;
      uint64_t v43 = v85;
      sub_247FB3430(v89, v85);
      uint64_t v44 = v90;
      uint64_t v45 = v86;
      sub_247FB3430(v90, v86);
      uint64_t v46 = v91;
      uint64_t v47 = (uint64_t)v88;
      uint64_t v48 = (uint64_t)v87;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_247F97FA8((uint64_t)v30, (uint64_t)v34);
  if (v41(v40, 1, v23) == 1)
  {
    sub_247FB33D4((uint64_t)v37, &qword_2692D5080);
    sub_247FB33D4((uint64_t)v39, &qword_2692D5080);
    sub_247FB3494((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_6:
    sub_247FB33D4((uint64_t)v30, &qword_2692D58D0);
    uint64_t v42 = v89;
    uint64_t v43 = v85;
    sub_247FB3430(v89, v85);
    uint64_t v44 = v90;
    uint64_t v45 = v86;
    sub_247FB3430(v90, v86);
    uint64_t v46 = v91;
    uint64_t v47 = (uint64_t)v88;
    uint64_t v48 = (uint64_t)v87;
LABEL_15:
    sub_247FB3494(v45, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3494(v43, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    uint64_t v55 = v95;
    sub_247FB3430(v42, v95);
    uint64_t v56 = v94;
    sub_247FB3430(v44, v94);
    goto LABEL_16;
  }
  sub_247FB32E8(v40, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  char v49 = _s12AppleIDSetup11IdMSAccountV2eeoiySbAC_ACtFZ_0(v34, v26);
  sub_247FB3494((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  sub_247FB33D4((uint64_t)v37, &qword_2692D5080);
  sub_247FB33D4((uint64_t)v39, &qword_2692D5080);
  sub_247FB3494((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  sub_247FB33D4((uint64_t)v30, &qword_2692D5080);
  uint64_t v42 = v89;
  uint64_t v43 = v85;
  sub_247FB3430(v89, v85);
  uint64_t v44 = v90;
  uint64_t v45 = v86;
  sub_247FB3430(v90, v86);
  uint64_t v46 = v91;
  uint64_t v47 = (uint64_t)v88;
  uint64_t v48 = (uint64_t)v87;
  if ((v49 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  id v50 = (int *)v84;
  uint64_t v51 = v43;
  int v52 = *(unsigned __int8 *)(v43 + *(int *)(v84 + 24));
  sub_247FB3494(v51, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  uint64_t v53 = v45;
  int v54 = *(unsigned __int8 *)(v45 + v50[6]);
  sub_247FB3494(v53, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  uint64_t v55 = v95;
  sub_247FB3430(v42, v95);
  uint64_t v56 = v94;
  sub_247FB3430(v44, v94);
  if (v52 != v54)
  {
LABEL_16:
    sub_247FB3494(v56, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3494(v55, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    uint64_t v68 = v93;
    sub_247FB3430(v42, v93);
    uint64_t v69 = v96;
    sub_247FB3430(v44, v96);
    goto LABEL_17;
  }
  uint64_t v57 = (int8x16_t *)(v55 + v50[10]);
  __int8 v58 = v57[5].i8[0];
  int8x16_t v59 = v57[1];
  v99[0] = *v57;
  v99[1] = v59;
  int8x16_t v60 = v57[3];
  v99[2] = v57[2];
  v99[3] = v60;
  v99[4] = v57[4];
  __int8 v100 = v58;
  uint64_t v61 = v56 + v50[10];
  char v62 = *(unsigned char *)(v61 + 80);
  long long v63 = *(_OWORD *)(v61 + 16);
  v97[0] = *(_OWORD *)v61;
  long long v64 = *(_OWORD *)(v61 + 32);
  long long v65 = *(_OWORD *)(v61 + 48);
  v97[1] = v63;
  v97[2] = v64;
  long long v66 = *(_OWORD *)(v61 + 64);
  v97[3] = v65;
  v97[4] = v66;
  char v98 = v62;
  char v67 = static AuthenticationModel.State.== infix(_:_:)(v99, (uint64_t *)v97);
  sub_247FB3494(v56, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  sub_247FB3494(v55, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  uint64_t v68 = v93;
  sub_247FB3430(v42, v93);
  uint64_t v69 = v96;
  sub_247FB3430(v44, v96);
  if ((v67 & 1) == 0)
  {
LABEL_17:
    sub_247FB3494(v69, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3494(v68, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
LABEL_18:
    uint64_t v75 = (uint64_t)v46;
    uint64_t v76 = (uint64_t)v92;
LABEL_19:
    sub_247FB3430(v42, v48);
    sub_247FB3430(v44, v47);
    goto LABEL_20;
  }
  uint64_t v70 = v50[7];
  uint64_t v71 = (void *)(v68 + v70);
  uint64_t v72 = *(void *)(v68 + v70 + 8);
  uint64_t v73 = (void *)(v69 + v70);
  uint64_t v74 = v73[1];
  if (!v72)
  {
    swift_bridgeObjectRetain();
    sub_247FB3494(v69, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3494(v68, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    uint64_t v75 = (uint64_t)v46;
    uint64_t v76 = (uint64_t)v92;
    if (!v74) {
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (!v74)
  {
    swift_bridgeObjectRetain();
    sub_247FB3494(v69, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3494(v68, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v75 = (uint64_t)v46;
  if (*v71 == *v73 && v72 == v74)
  {
    swift_bridgeObjectRetain();
    sub_247FB3494(v96, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3494(v68, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    swift_bridgeObjectRelease();
    uint64_t v76 = (uint64_t)v92;
LABEL_26:
    sub_247FB3430(v42, v48);
    sub_247FB3430(v44, v47);
    goto LABEL_29;
  }
  char v78 = sub_248175CE0();
  swift_bridgeObjectRetain();
  sub_247FB3494(v96, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  sub_247FB3494(v68, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  swift_bridgeObjectRelease();
  sub_247FB3430(v42, v48);
  sub_247FB3430(v44, v47);
  uint64_t v76 = (uint64_t)v92;
  if ((v78 & 1) == 0)
  {
LABEL_20:
    sub_247FB3494(v47, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3494(v48, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3430(v42, v76);
    sub_247FB3430(v44, v75);
LABEL_21:
    sub_247FB3494(v76, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    sub_247FB3494(v75, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
    return 0;
  }
LABEL_29:
  uint64_t v79 = v84;
  int v80 = *(unsigned __int8 *)(v48 + *(int *)(v84 + 36));
  sub_247FB3494(v48, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  int v81 = *(unsigned __int8 *)(v47 + *(int *)(v79 + 36));
  sub_247FB3494(v47, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  sub_247FB3430(v42, v76);
  sub_247FB3430(v44, v75);
  if (v80 != v81) {
    goto LABEL_21;
  }
  char v82 = sub_2480F3E64(*(void *)(v76 + *(int *)(v79 + 32)), *(void *)(v75 + *(int *)(v79 + 32)));
  sub_247FB3494(v76, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  sub_247FB3494(v75, (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  return (v82 & 1) != 0;
}

uint64_t sub_247FA9730(uint64_t a1)
{
  uint64_t v13 = *(void **)(a1 + 88);
  uint64_t v2 = *(void **)(a1 + 104);
  uint64_t v12 = *(void **)(a1 + 96);
  uint64_t v3 = *(void **)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void **)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void **)(a1 + 152);
  uint64_t v9 = *(void **)(a1 + 160);
  char v10 = *(unsigned char *)(a1 + 168);
  sub_247F98958(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(unsigned char *)(a1 + 80));
  sub_247F98958(v13, v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_247FA97F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1) {
    return sub_247FA9804(a1, a2, a3, a4, a5, a6, a7);
  }
  return a1;
}

uint64_t sub_247FA9804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 1:
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247FA98D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7 != -1) {
    return sub_247FA98EC(a1, a2, a3, a4, a5, a6, a7);
  }
  return a1;
}

uint64_t sub_247FA98EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 1:
      goto LABEL_4;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_247FA99C0()
{
  unint64_t result = qword_2692D5180;
  if (!qword_2692D5180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5180);
  }
  return result;
}

unint64_t sub_247FA9A14()
{
  unint64_t result = qword_2692D5188;
  if (!qword_2692D5188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5188);
  }
  return result;
}

unint64_t sub_247FA9A68()
{
  unint64_t result = qword_2692D5190;
  if (!qword_2692D5190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5190);
  }
  return result;
}

unint64_t sub_247FA9ABC()
{
  unint64_t result = qword_2692D5198;
  if (!qword_2692D5198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5198);
  }
  return result;
}

unint64_t sub_247FA9B10()
{
  unint64_t result = qword_2692D51A0;
  if (!qword_2692D51A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51A0);
  }
  return result;
}

unint64_t sub_247FA9B64()
{
  unint64_t result = qword_2692D51A8;
  if (!qword_2692D51A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51A8);
  }
  return result;
}

unint64_t sub_247FA9BB8()
{
  unint64_t result = qword_2692D51B0;
  if (!qword_2692D51B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51B0);
  }
  return result;
}

unint64_t sub_247FA9C0C()
{
  unint64_t result = qword_2692D51B8;
  if (!qword_2692D51B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51B8);
  }
  return result;
}

unint64_t sub_247FA9C60()
{
  unint64_t result = qword_2692D51C0;
  if (!qword_2692D51C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51C0);
  }
  return result;
}

unint64_t sub_247FA9CB4()
{
  unint64_t result = qword_2692D51C8;
  if (!qword_2692D51C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51C8);
  }
  return result;
}

unint64_t sub_247FA9D08()
{
  unint64_t result = qword_2692D51D0;
  if (!qword_2692D51D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51D0);
  }
  return result;
}

unint64_t sub_247FA9D5C()
{
  unint64_t result = qword_2692D51D8;
  if (!qword_2692D51D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51D8);
  }
  return result;
}

unint64_t sub_247FA9DB0()
{
  unint64_t result = qword_2692D51E0;
  if (!qword_2692D51E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51E0);
  }
  return result;
}

unint64_t sub_247FA9E04()
{
  unint64_t result = qword_2692D51E8;
  if (!qword_2692D51E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51E8);
  }
  return result;
}

unint64_t sub_247FA9E58()
{
  unint64_t result = qword_2692D51F0;
  if (!qword_2692D51F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51F0);
  }
  return result;
}

unint64_t sub_247FA9EAC()
{
  unint64_t result = qword_2692D51F8;
  if (!qword_2692D51F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D51F8);
  }
  return result;
}

unint64_t sub_247FA9F00()
{
  unint64_t result = qword_2692D5200;
  if (!qword_2692D5200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5200);
  }
  return result;
}

unint64_t sub_247FA9F54()
{
  unint64_t result = qword_2692D5208;
  if (!qword_2692D5208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5208);
  }
  return result;
}

unint64_t sub_247FA9FA8()
{
  unint64_t result = qword_2692D5210;
  if (!qword_2692D5210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5210);
  }
  return result;
}

unint64_t sub_247FA9FFC()
{
  unint64_t result = qword_2692D5218;
  if (!qword_2692D5218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5218);
  }
  return result;
}

unint64_t sub_247FAA050()
{
  unint64_t result = qword_2692D5220;
  if (!qword_2692D5220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5220);
  }
  return result;
}

unint64_t sub_247FAA0A4()
{
  unint64_t result = qword_2692D5228;
  if (!qword_2692D5228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5228);
  }
  return result;
}

unint64_t sub_247FAA0F8()
{
  unint64_t result = qword_2692D5230;
  if (!qword_2692D5230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5230);
  }
  return result;
}

uint64_t sub_247FAA14C()
{
  sub_247F98958(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(unsigned char *)(v0 + 96));
  return MEMORY[0x270FA0238](v0, 97, 7);
}

uint64_t sub_247FAA1A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 96);
  if (v1 != 255) {
    sub_247FA98EC(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1);
  }
  sub_247F98958(*(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(void **)(v0 + 128), *(void *)(v0 + 136), *(void **)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void **)(v0 + 168), *(void **)(v0 + 176), *(unsigned char *)(v0 + 184));
  return MEMORY[0x270FA0238](v0, 185, 7);
}

unint64_t sub_247FAA230()
{
  unint64_t result = qword_2692D52B8;
  if (!qword_2692D52B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D52B8);
  }
  return result;
}

unint64_t sub_247FAA284()
{
  unint64_t result = qword_2692D52C0;
  if (!qword_2692D52C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D52C0);
  }
  return result;
}

unint64_t sub_247FAA2D8()
{
  unint64_t result = qword_2692D52C8;
  if (!qword_2692D52C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D52C8);
  }
  return result;
}

unint64_t sub_247FAA32C()
{
  unint64_t result = qword_2692D52D0;
  if (!qword_2692D52D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D52D0);
  }
  return result;
}

unint64_t sub_247FAA380()
{
  unint64_t result = qword_2692D52D8;
  if (!qword_2692D52D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D52D8);
  }
  return result;
}

unint64_t sub_247FAA3D4()
{
  unint64_t result = qword_2692D52E0;
  if (!qword_2692D52E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D52E0);
  }
  return result;
}

unint64_t sub_247FAA428()
{
  unint64_t result = qword_2692D52E8;
  if (!qword_2692D52E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D52E8);
  }
  return result;
}

unint64_t sub_247FAA47C()
{
  unint64_t result = qword_2692D52F0;
  if (!qword_2692D52F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D52F0);
  }
  return result;
}

unint64_t sub_247FAA4D0()
{
  unint64_t result = qword_2692D5318;
  if (!qword_2692D5318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5318);
  }
  return result;
}

unint64_t sub_247FAA524()
{
  unint64_t result = qword_2692D5320;
  if (!qword_2692D5320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5320);
  }
  return result;
}

unint64_t sub_247FAA578()
{
  unint64_t result = qword_2692D5328;
  if (!qword_2692D5328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5328);
  }
  return result;
}

unint64_t sub_247FAA5CC()
{
  unint64_t result = qword_2692D5330;
  if (!qword_2692D5330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5330);
  }
  return result;
}

uint64_t sub_247FAA620(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v20 = *(void **)(a1 + 88);
  uint64_t v18 = *(void **)(a1 + 104);
  uint64_t v19 = *(void **)(a1 + 96);
  uint64_t v16 = *(void **)(a1 + 120);
  uint64_t v17 = *(void **)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 136);
  uint64_t v15 = *(void **)(a1 + 128);
  uint64_t v6 = *(void **)(a1 + 152);
  uint64_t v13 = *(void **)(a1 + 144);
  uint64_t v7 = *(void **)(a1 + 160);
  char v8 = *(unsigned char *)(a1 + 168);
  char v9 = *(unsigned char *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FA97F0(v12, v11, v2, v3, v4, v5, v9);
  sub_247F986A0(v20, v19, v18, v17, v16, v15, v14, v13, v6, v7, v8);
  return a1;
}

unint64_t sub_247FAA70C()
{
  unint64_t result = qword_2692D5368;
  if (!qword_2692D5368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5368);
  }
  return result;
}

unint64_t sub_247FAA760()
{
  unint64_t result = qword_2692D53B0;
  if (!qword_2692D53B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D53B0);
  }
  return result;
}

unint64_t sub_247FAA7B4()
{
  unint64_t result = qword_2692D53B8;
  if (!qword_2692D53B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D53B8);
  }
  return result;
}

unint64_t sub_247FAA808()
{
  unint64_t result = qword_2692D53C8;
  if (!qword_2692D53C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D53C8);
  }
  return result;
}

unint64_t sub_247FAA85C()
{
  unint64_t result = qword_2692D53D8;
  if (!qword_2692D53D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D53D8);
  }
  return result;
}

unint64_t sub_247FAA8B0()
{
  unint64_t result = qword_2692D53F0;
  if (!qword_2692D53F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D53F0);
  }
  return result;
}

unint64_t sub_247FAA904()
{
  unint64_t result = qword_2692D5408;
  if (!qword_2692D5408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5408);
  }
  return result;
}

unint64_t sub_247FAA958()
{
  unint64_t result = qword_2692D5468;
  if (!qword_2692D5468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5468);
  }
  return result;
}

unint64_t sub_247FAA9AC()
{
  unint64_t result = qword_2692D5498;
  if (!qword_2692D5498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5498);
  }
  return result;
}

uint64_t sub_247FAAA00(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_247FAAA44()
{
  unint64_t result = qword_2692D54E0;
  if (!qword_2692D54E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D54E0);
  }
  return result;
}

unint64_t sub_247FAAA98()
{
  unint64_t result = qword_2692D54F8;
  if (!qword_2692D54F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D54F8);
  }
  return result;
}

unint64_t sub_247FAAAEC()
{
  unint64_t result = qword_2692D5500;
  if (!qword_2692D5500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5500);
  }
  return result;
}

unint64_t sub_247FAAB40()
{
  unint64_t result = qword_2692D5510;
  if (!qword_2692D5510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5510);
  }
  return result;
}

uint64_t sub_247FAAB94(void *a1)
{
  a1[1] = sub_247FB3350(&qword_2692D5518, (void (*)(uint64_t))type metadata accessor for AuthenticationModel);
  a1[2] = sub_247FB3350(&qword_2692D5520, (void (*)(uint64_t))type metadata accessor for AuthenticationModel);
  uint64_t result = sub_247FB3350(&qword_2692D5528, (void (*)(uint64_t))type metadata accessor for AuthenticationModel);
  a1[3] = result;
  return result;
}

uint64_t sub_247FAAC40()
{
  return sub_247FB3350(&qword_2692D5530, (void (*)(uint64_t))type metadata accessor for AuthenticationModel);
}

uint64_t sub_247FAAC88(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247F99E00, (uint64_t (*)(void))sub_247F99638, (uint64_t (*)(void))sub_247FAAD1C);
}

uint64_t sub_247FAACC8(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_247FAAD1C()
{
  unint64_t result = qword_2692D5538;
  if (!qword_2692D5538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5538);
  }
  return result;
}

unint64_t sub_247FAAD74()
{
  unint64_t result = qword_2692D5540;
  if (!qword_2692D5540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5540);
  }
  return result;
}

unint64_t sub_247FAADCC()
{
  unint64_t result = qword_2692D5548;
  if (!qword_2692D5548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5548);
  }
  return result;
}

uint64_t sub_247FAAE20(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247F99DAC, (uint64_t (*)(void))sub_247F995E4, (uint64_t (*)(void))sub_247FAAE60);
}

unint64_t sub_247FAAE60()
{
  unint64_t result = qword_2692D5550;
  if (!qword_2692D5550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5550);
  }
  return result;
}

uint64_t sub_247FAAEB4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA47C, (uint64_t (*)(void))sub_247FA9FFC, (uint64_t (*)(void))sub_247FAAEF4);
}

unint64_t sub_247FAAEF4()
{
  unint64_t result = qword_2692D5558;
  if (!qword_2692D5558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5558);
  }
  return result;
}

unint64_t sub_247FAAF4C()
{
  unint64_t result = qword_2692D5560;
  if (!qword_2692D5560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5560);
  }
  return result;
}

uint64_t sub_247FAAFA0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA3D4, (uint64_t (*)(void))sub_247FA9E58, (uint64_t (*)(void))sub_247FAAFE0);
}

unint64_t sub_247FAAFE0()
{
  unint64_t result = qword_2692D5568;
  if (!qword_2692D5568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5568);
  }
  return result;
}

unint64_t sub_247FAB038()
{
  unint64_t result = qword_2692D5570;
  if (!qword_2692D5570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5570);
  }
  return result;
}

uint64_t sub_247FAB08C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA428, (uint64_t (*)(void))sub_247FA9F00, (uint64_t (*)(void))sub_247FAB0CC);
}

unint64_t sub_247FAB0CC()
{
  unint64_t result = qword_2692D5578;
  if (!qword_2692D5578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5578);
  }
  return result;
}

unint64_t sub_247FAB124()
{
  unint64_t result = qword_2692D5580;
  if (!qword_2692D5580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5580);
  }
  return result;
}

uint64_t sub_247FAB178(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA808, (uint64_t (*)(void))sub_247FAA7B4, (uint64_t (*)(void))sub_247FAB1B8);
}

unint64_t sub_247FAB1B8()
{
  unint64_t result = qword_2692D5588;
  if (!qword_2692D5588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5588);
  }
  return result;
}

unint64_t sub_247FAB210()
{
  unint64_t result = qword_2692D5590;
  if (!qword_2692D5590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5590);
  }
  return result;
}

uint64_t sub_247FAB264(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA380, (uint64_t (*)(void))sub_247FA9D5C, (uint64_t (*)(void))sub_247FAB2A4);
}

unint64_t sub_247FAB2A4()
{
  unint64_t result = qword_2692D5598;
  if (!qword_2692D5598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5598);
  }
  return result;
}

unint64_t sub_247FAB2FC()
{
  unint64_t result = qword_2692D55A0;
  if (!qword_2692D55A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55A0);
  }
  return result;
}

uint64_t sub_247FAB350(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA32C, (uint64_t (*)(void))sub_247FA9CB4, (uint64_t (*)(void))sub_247FAB390);
}

unint64_t sub_247FAB390()
{
  unint64_t result = qword_2692D55A8;
  if (!qword_2692D55A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55A8);
  }
  return result;
}

unint64_t sub_247FAB3E8()
{
  unint64_t result = qword_2692D55B0;
  if (!qword_2692D55B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55B0);
  }
  return result;
}

uint64_t sub_247FAB43C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA2D8, (uint64_t (*)(void))sub_247FA9C0C, (uint64_t (*)(void))sub_247FAB47C);
}

unint64_t sub_247FAB47C()
{
  unint64_t result = qword_2692D55B8;
  if (!qword_2692D55B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55B8);
  }
  return result;
}

unint64_t sub_247FAB4D4()
{
  unint64_t result = qword_2692D55C0;
  if (!qword_2692D55C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55C0);
  }
  return result;
}

uint64_t sub_247FAB528(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA284, (uint64_t (*)(void))sub_247FA9B64, (uint64_t (*)(void))sub_247FAB568);
}

unint64_t sub_247FAB568()
{
  unint64_t result = qword_2692D55C8;
  if (!qword_2692D55C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55C8);
  }
  return result;
}

unint64_t sub_247FAB5C0()
{
  unint64_t result = qword_2692D55D0;
  if (!qword_2692D55D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55D0);
  }
  return result;
}

uint64_t sub_247FAB614(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FAACC8(a1, a2, a3, (uint64_t (*)(void))sub_247FAA230, (uint64_t (*)(void))sub_247FA9ABC, (uint64_t (*)(void))sub_247FAB654);
}

unint64_t sub_247FAB654()
{
  unint64_t result = qword_2692D55D8;
  if (!qword_2692D55D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55D8);
  }
  return result;
}

unint64_t sub_247FAB6AC()
{
  unint64_t result = qword_2692D55E0;
  if (!qword_2692D55E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D55E0);
  }
  return result;
}

id sub_247FAB710@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 40);
  *a2 = v2;
  return v2;
}

void sub_247FAB71C(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 40);
  id v5 = *a1;

  *(void *)(a2 + 40) = v3;
}

id sub_247FAB758@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 56);
  *a2 = v2;
  return v2;
}

void sub_247FAB764(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 56);
  id v5 = *a1;

  *(void *)(a2 + 56) = v3;
}

id sub_247FAB7A0@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

void sub_247FAB7AC(id *a1, void **a2)
{
  id v3 = *a1;
  uint64_t v4 = *a2;
  id v5 = *a1;

  *a2 = v3;
}

id sub_247FAB7E8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 72);
  *a2 = v2;
  return v2;
}

void sub_247FAB7F4(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 72);
  id v5 = *a1;

  *(void *)(a2 + 72) = v3;
}

id sub_247FAB830@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 32);
  *a2 = v2;
  return v2;
}

void sub_247FAB83C(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 32);
  id v5 = *a1;

  *(void *)(a2 + 32) = v3;
}

id sub_247FAB878@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

void sub_247FAB884(id *a1, void **a2)
{
  id v3 = *a1;
  uint64_t v4 = *a2;
  id v5 = *a1;

  *a2 = v3;
}

id sub_247FAB8C0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 8);
  *a2 = v2;
  return v2;
}

void sub_247FAB8CC(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = *a1;

  *(void *)(a2 + 8) = v3;
}

id sub_247FAB908@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 16);
  *a2 = v2;
  return v2;
}

void sub_247FAB914(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *a1;

  *(void *)(a2 + 16) = v3;
}

id sub_247FAB950@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 24);
  *a2 = v2;
  return v2;
}

void sub_247FAB95C(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 24);
  id v5 = *a1;

  *(void *)(a2 + 24) = v3;
}

void sub_247FAB998(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 32);
  id v5 = *a1;

  *(void *)(a2 + 32) = v3;
}

id sub_247FAB9D4@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

void sub_247FAB9E0(id *a1, void **a2)
{
  id v3 = *a1;
  uint64_t v4 = *a2;
  id v5 = *a1;

  *a2 = v3;
}

id sub_247FABA1C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 8);
  *a2 = v2;
  return v2;
}

void sub_247FABA28(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = *a1;

  *(void *)(a2 + 8) = v3;
}

id sub_247FABA64@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 16);
  *a2 = v2;
  return v2;
}

void sub_247FABA70(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *a1;

  *(void *)(a2 + 16) = v3;
}

id sub_247FABAAC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 24);
  *a2 = v2;
  return v2;
}

void sub_247FABAB8(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 24);
  id v5 = *a1;

  *(void *)(a2 + 24) = v3;
}

void sub_247FABAF4(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 24);
  id v5 = *a1;

  *(void *)(a2 + 24) = v3;
}

id sub_247FABB30@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

void sub_247FABB3C(id *a1, void **a2)
{
  id v3 = *a1;
  uint64_t v4 = *a2;
  id v5 = *a1;

  *a2 = v3;
}

void *initializeBufferWithCopyOfBuffer for AuthenticationModel(void *a1, void *a2, int *a3)
{
  id v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v11 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = (int *)type metadata accessor for IdMSAccount();
    uint64_t v8 = *((void *)v7 - 1);
    uint64_t v71 = v6;
    uint64_t v72 = v3;
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v3, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(a1, v3, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v69 = v8;
      uint64_t v12 = v3[1];
      *a1 = *v3;
      a1[1] = v12;
      uint64_t v13 = v3[3];
      a1[2] = v3[2];
      a1[3] = v13;
      uint64_t v14 = v3[5];
      a1[4] = v3[4];
      a1[5] = v14;
      uint64_t v15 = v3[7];
      a1[6] = v3[6];
      a1[7] = v15;
      uint64_t v16 = v3[9];
      a1[8] = v3[8];
      a1[9] = v16;
      uint64_t v17 = v7[5];
      long long v64 = (char *)v3 + v17;
      char v67 = (char *)a1 + v17;
      uint64_t v18 = sub_248174700();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v67, v64, v18);
      uint64_t v20 = v7[6];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)v72 + v20;
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *((void *)v22 + 1);
      uint64_t v25 = *((void *)v22 + 2);
      uint64_t v26 = *((void *)v22 + 3);
      uint64_t v27 = *((void *)v22 + 4);
      uint64_t v28 = *((void *)v22 + 5);
      uint64_t v62 = *((void *)v22 + 7);
      uint64_t v65 = *((void *)v22 + 6);
      uint64_t v29 = *((void *)v22 + 8);
      LOBYTE(v67) = v22[72];
      sub_247FABF8C(*(void *)v22, v24, v25, v26, v27, v28, v65, v62, v29, (char)v67);
      *(void *)uint64_t v21 = v23;
      *((void *)v21 + 1) = v24;
      *((void *)v21 + 2) = v25;
      *((void *)v21 + 3) = v26;
      *((void *)v21 + 4) = v27;
      *((void *)v21 + 5) = v28;
      *((void *)v21 + 6) = v65;
      *((void *)v21 + 7) = v62;
      *((void *)v21 + 8) = v29;
      id v3 = v72;
      v21[72] = (char)v67;
      *(void *)((char *)a1 + v7[7]) = *(void *)((char *)v72 + v7[7]);
      uint64_t v30 = *(void (**)(void *, void, uint64_t, int *))(v69 + 56);
      swift_bridgeObjectRetain();
      v30(a1, 0, 1, v7);
      uint64_t v6 = v71;
    }
    uint64_t v31 = v6[5];
    uint64_t v32 = (void *)((char *)a1 + v31);
    uint64_t v33 = (void *)((char *)v3 + v31);
    uint64_t v34 = v33[1];
    if (v34)
    {
      *uint64_t v32 = *v33;
      v32[1] = v34;
      uint64_t v35 = v33[3];
      _OWORD v32[2] = v33[2];
      v32[3] = v35;
      uint64_t v36 = v33[5];
      v32[4] = v33[4];
      v32[5] = v36;
      uint64_t v37 = v33[7];
      v32[6] = v33[6];
      v32[7] = v37;
      uint64_t v38 = v33[9];
      v32[8] = v33[8];
      v32[9] = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v39 = *((_OWORD *)v33 + 3);
      *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
      *((_OWORD *)v32 + 3) = v39;
      *((_OWORD *)v32 + 4) = *((_OWORD *)v33 + 4);
      long long v40 = *((_OWORD *)v33 + 1);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((_OWORD *)v32 + 1) = v40;
    }
    uint64_t v41 = v6[7];
    *((unsigned char *)a1 + v6[6]) = *((unsigned char *)v3 + v6[6]);
    uint64_t v42 = (void *)((char *)a1 + v41);
    uint64_t v43 = (void *)((char *)v3 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    uint64_t v45 = v6[9];
    *(void *)((char *)a1 + v6[8]) = *(void *)((char *)v3 + v6[8]);
    *((unsigned char *)a1 + v45) = *((unsigned char *)v3 + v45);
    uint64_t v46 = v6[10];
    uint64_t v47 = (char *)a1 + v46;
    uint64_t v48 = (char *)v3 + v46;
    char v49 = (void *)*((void *)v48 + 1);
    uint64_t v68 = *(void **)v48;
    uint64_t v70 = a1;
    id v50 = (void *)*((void *)v48 + 2);
    uint64_t v51 = (void *)*((void *)v48 + 3);
    uint64_t v53 = (void *)*((void *)v48 + 4);
    int v52 = (void *)*((void *)v48 + 5);
    int v54 = (void *)*((void *)v48 + 8);
    uint64_t v63 = *((void *)v48 + 6);
    long long v66 = (void *)*((void *)v48 + 7);
    uint64_t v55 = (void *)*((void *)v48 + 9);
    char v56 = v48[80];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247F986A0(v68, v49, v50, v51, v53, v52, v63, v66, v54, v55, v56);
    *(void *)uint64_t v47 = v68;
    *((void *)v47 + 1) = v49;
    *((void *)v47 + 2) = v50;
    *((void *)v47 + 3) = v51;
    *((void *)v47 + 4) = v53;
    *((void *)v47 + 5) = v52;
    *((void *)v47 + 6) = v63;
    *((void *)v47 + 7) = v66;
    *((void *)v47 + 8) = v54;
    *((void *)v47 + 9) = v55;
    v47[80] = v56;
    uint64_t v11 = v70;
    uint64_t v57 = v71[11];
    __int8 v58 = (void *)((char *)v70 + v57);
    int8x16_t v59 = (void *)((char *)v72 + v57);
    if (*v59)
    {
      uint64_t v60 = v59[1];
      *__int8 v58 = *v59;
      v58[1] = v60;
      swift_retain();
    }
    else
    {
      *(_OWORD *)__int8 v58 = *(_OWORD *)v59;
    }
  }
  return v11;
}

uint64_t sub_247FABF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a10 != 2)
  {
    if (a10 != 1)
    {
      if (a10) {
        return result;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

void destroy for AuthenticationModel(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for IdMSAccount();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(v4 + 20);
    uint64_t v6 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 24);
    sub_247FAC1EC(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[10];
  sub_247F98958(*(void **)v8, *(void **)(v8 + 8), *(void **)(v8 + 16), *(void **)(v8 + 24), *(void *)(v8 + 32), *(void **)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void **)(v8 + 64), *(void **)(v8 + 72), *(unsigned char *)(v8 + 80));
  if (*(void *)(a1 + a2[11]))
  {
    swift_release();
  }
}

uint64_t sub_247FAC1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t result = a2;
  if (a10 != 2)
  {
    if (a10 != 1)
    {
      if (a10) {
        return result;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AuthenticationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v7 = *((void *)v6 - 1);
  long long v66 = a3;
  char v67 = a2;
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v68 = v7;
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    uint64_t v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    uint64_t v11 = a2[5];
    a1[4] = a2[4];
    a1[5] = v11;
    uint64_t v12 = a2[7];
    a1[6] = a2[6];
    a1[7] = v12;
    uint64_t v13 = a2[9];
    a1[8] = a2[8];
    a1[9] = v13;
    uint64_t v14 = v6[5];
    uint64_t v61 = (char *)a2 + v14;
    long long v64 = (char *)a1 + v14;
    uint64_t v15 = sub_248174700();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v64, v61, v15);
    uint64_t v17 = v6[6];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)v67 + v17;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *((void *)v19 + 1);
    uint64_t v22 = *((void *)v19 + 2);
    uint64_t v23 = *((void *)v19 + 3);
    uint64_t v24 = *((void *)v19 + 4);
    uint64_t v25 = *((void *)v19 + 5);
    uint64_t v59 = *((void *)v19 + 7);
    uint64_t v62 = *((void *)v19 + 6);
    uint64_t v26 = *((void *)v19 + 8);
    LOBYTE(v64) = v19[72];
    sub_247FABF8C(*(void *)v19, v21, v22, v23, v24, v25, v62, v59, v26, (char)v64);
    *(void *)uint64_t v18 = v20;
    *((void *)v18 + 1) = v21;
    *((void *)v18 + 2) = v22;
    *((void *)v18 + 3) = v23;
    *((void *)v18 + 4) = v24;
    *((void *)v18 + 5) = v25;
    *((void *)v18 + 6) = v62;
    *((void *)v18 + 7) = v59;
    *((void *)v18 + 8) = v26;
    a2 = v67;
    v18[72] = (char)v64;
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)v67 + v6[7]);
    uint64_t v27 = *(void (**)(void *, void, uint64_t, int *))(v68 + 56);
    swift_bridgeObjectRetain();
    v27(a1, 0, 1, v6);
    a3 = v66;
  }
  uint64_t v28 = a3[5];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = v30[1];
  if (v31)
  {
    *uint64_t v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = v30[3];
    v29[2] = v30[2];
    v29[3] = v32;
    uint64_t v33 = v30[5];
    v29[4] = v30[4];
    v29[5] = v33;
    uint64_t v34 = v30[7];
    v29[6] = v30[6];
    v29[7] = v34;
    uint64_t v35 = v30[9];
    v29[8] = v30[8];
    v29[9] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v36 = *((_OWORD *)v30 + 3);
    *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
    *((_OWORD *)v29 + 3) = v36;
    *((_OWORD *)v29 + 4) = *((_OWORD *)v30 + 4);
    long long v37 = *((_OWORD *)v30 + 1);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *((_OWORD *)v29 + 1) = v37;
  }
  uint64_t v38 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  long long v39 = (void *)((char *)a1 + v38);
  long long v40 = (void *)((char *)a2 + v38);
  uint64_t v41 = v40[1];
  *long long v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v42) = *((unsigned char *)a2 + v42);
  uint64_t v43 = a3[10];
  uint64_t v69 = a1;
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = (void *)*((void *)v45 + 1);
  uint64_t v47 = (void *)*((void *)v45 + 2);
  uint64_t v48 = (void *)*((void *)v45 + 3);
  char v49 = (void *)*((void *)v45 + 4);
  uint64_t v60 = (void *)*((void *)v45 + 5);
  uint64_t v50 = *((void *)v45 + 6);
  uint64_t v63 = (void *)*((void *)v45 + 7);
  uint64_t v65 = *(void **)v45;
  uint64_t v51 = (void *)*((void *)v45 + 8);
  int v52 = (void *)*((void *)v45 + 9);
  char v53 = v45[80];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247F986A0(v65, v46, v47, v48, v49, v60, v50, v63, v51, v52, v53);
  *(void *)uint64_t v44 = v65;
  *((void *)v44 + 1) = v46;
  *((void *)v44 + 2) = v47;
  *((void *)v44 + 3) = v48;
  *((void *)v44 + 4) = v49;
  *((void *)v44 + 5) = v60;
  *((void *)v44 + 6) = v50;
  *((void *)v44 + 7) = v63;
  *((void *)v44 + 8) = v51;
  *((void *)v44 + 9) = v52;
  v44[80] = v53;
  uint64_t v54 = v66[11];
  uint64_t v55 = (void *)((char *)v69 + v54);
  char v56 = (void *)((char *)v67 + v54);
  if (*v56)
  {
    uint64_t v57 = v56[1];
    void *v55 = *v56;
    v55[1] = v57;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  }
  return v69;
}

void *assignWithCopy for AuthenticationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v108 = a3;
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      uint64_t v105 = v7;
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      uint64_t v11 = v6[5];
      uint64_t v97 = (char *)a2 + v11;
      uint64_t v101 = (char *)a1 + v11;
      uint64_t v12 = sub_248174700();
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v94(v101, v97, v12);
      uint64_t v13 = v6[6];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *((void *)v15 + 1);
      uint64_t v18 = *((void *)v15 + 2);
      uint64_t v19 = *((void *)v15 + 3);
      uint64_t v20 = *((void *)v15 + 4);
      uint64_t v21 = *((void *)v15 + 5);
      uint64_t v93 = *((void *)v15 + 7);
      uint64_t v95 = *((void *)v15 + 6);
      uint64_t v98 = *((void *)v15 + 8);
      LOBYTE(v101) = v15[72];
      sub_247FABF8C(*(void *)v15, v17, v18, v19, v20, v21, v95, v93, v98, (char)v101);
      *(void *)uint64_t v14 = v16;
      *((void *)v14 + 1) = v17;
      *((void *)v14 + 2) = v18;
      *((void *)v14 + 3) = v19;
      a3 = v108;
      *((void *)v14 + 4) = v20;
      *((void *)v14 + 5) = v21;
      *((void *)v14 + 6) = v95;
      *((void *)v14 + 7) = v93;
      *((void *)v14 + 8) = v98;
      v14[72] = (char)v101;
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      uint64_t v22 = *(void (**)(void *, void, uint64_t, int *))(v105 + 56);
      swift_bridgeObjectRetain();
      v22(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_247FB3494((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_6:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = v6[5];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  uint64_t v36 = v6[6];
  long long v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = *(void *)v38;
  uint64_t v40 = *((void *)v38 + 1);
  uint64_t v41 = *((void *)v38 + 2);
  uint64_t v42 = *((void *)v38 + 3);
  uint64_t v43 = *((void *)v38 + 4);
  uint64_t v44 = *((void *)v38 + 5);
  uint64_t v96 = *((void *)v38 + 7);
  uint64_t v99 = *((void *)v38 + 6);
  uint64_t v102 = *((void *)v38 + 8);
  char v106 = v38[72];
  sub_247FABF8C(*(void *)v38, v40, v41, v42, v43, v44, v99, v96, v102, v106);
  uint64_t v45 = *(void *)v37;
  uint64_t v46 = *((void *)v37 + 1);
  uint64_t v47 = *((void *)v37 + 2);
  uint64_t v48 = *((void *)v37 + 3);
  uint64_t v49 = *((void *)v37 + 4);
  uint64_t v50 = *((void *)v37 + 5);
  uint64_t v51 = *((void *)v37 + 6);
  uint64_t v52 = *((void *)v37 + 7);
  uint64_t v53 = *((void *)v37 + 8);
  char v54 = v37[72];
  *(void *)long long v37 = v39;
  *((void *)v37 + 1) = v40;
  *((void *)v37 + 2) = v41;
  *((void *)v37 + 3) = v42;
  a3 = v108;
  *((void *)v37 + 4) = v43;
  *((void *)v37 + 5) = v44;
  *((void *)v37 + 6) = v99;
  *((void *)v37 + 7) = v96;
  *((void *)v37 + 8) = v102;
  v37[72] = v106;
  sub_247FAC1EC(v45, v46, v47, v48, v49, v50, v51, v52, v53, v54);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v24 = a3[5];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = *(void *)((char *)a1 + v24 + 8);
  uint64_t v28 = *(void *)((char *)a2 + v24 + 8);
  if (v27)
  {
    if (v28)
    {
      void *v25 = *v26;
      v25[1] = v26[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v25[2] = v26[2];
      v25[3] = v26[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v25[4] = v26[4];
      v25[5] = v26[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v25[6] = v26[6];
      v25[7] = v26[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v25[8] = v26[8];
      v25[9] = v26[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FACD88((uint64_t)v25);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      long long v29 = *((_OWORD *)v26 + 4);
      long long v31 = *((_OWORD *)v26 + 1);
      long long v30 = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 4) = v29;
      *((_OWORD *)v25 + 1) = v31;
      *((_OWORD *)v25 + 2) = v30;
    }
  }
  else if (v28)
  {
    void *v25 = *v26;
    v25[1] = v26[1];
    v25[2] = v26[2];
    v25[3] = v26[3];
    v25[4] = v26[4];
    v25[5] = v26[5];
    v25[6] = v26[6];
    v25[7] = v26[7];
    v25[8] = v26[8];
    v25[9] = v26[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
    long long v55 = *((_OWORD *)v26 + 1);
    long long v56 = *((_OWORD *)v26 + 2);
    long long v57 = *((_OWORD *)v26 + 4);
    *((_OWORD *)v25 + 3) = *((_OWORD *)v26 + 3);
    *((_OWORD *)v25 + 4) = v57;
    *((_OWORD *)v25 + 1) = v55;
    *((_OWORD *)v25 + 2) = v56;
  }
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v58 = a3[7];
  uint64_t v59 = (void *)((char *)a1 + v58);
  uint64_t v60 = (void *)((char *)a2 + v58);
  *uint64_t v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v61 = a3[10];
  uint64_t v62 = a2;
  uint64_t v104 = a2;
  uint64_t v107 = a1;
  uint64_t v63 = (char *)a1 + v61;
  long long v64 = (char *)v62 + v61;
  uint64_t v65 = *(void **)v64;
  long long v66 = (void *)*((void *)v64 + 1);
  char v67 = (void *)*((void *)v64 + 2);
  uint64_t v68 = (void *)*((void *)v64 + 3);
  uint64_t v69 = (void *)*((void *)v64 + 4);
  uint64_t v70 = (void *)*((void *)v64 + 5);
  uint64_t v71 = *((void *)v64 + 6);
  uint64_t v72 = (void *)*((void *)v64 + 7);
  uint64_t v73 = (void *)*((void *)v64 + 8);
  __int8 v100 = (void *)*((void *)v64 + 9);
  char v103 = v64[80];
  sub_247F986A0(*(void **)v64, v66, v67, v68, v69, v70, v71, v72, v73, v100, v103);
  uint64_t v74 = *(void **)v63;
  uint64_t v75 = (void *)*((void *)v63 + 1);
  uint64_t v76 = (void *)*((void *)v63 + 2);
  uint64_t v77 = (void *)*((void *)v63 + 3);
  uint64_t v78 = *((void *)v63 + 4);
  uint64_t v79 = (void *)*((void *)v63 + 5);
  uint64_t v80 = *((void *)v63 + 6);
  uint64_t v81 = *((void *)v63 + 7);
  char v82 = (void *)*((void *)v63 + 8);
  uint64_t v83 = (void *)*((void *)v63 + 9);
  char v84 = v63[80];
  *(void *)uint64_t v63 = v65;
  *((void *)v63 + 1) = v66;
  *((void *)v63 + 2) = v67;
  *((void *)v63 + 3) = v68;
  *((void *)v63 + 4) = v69;
  *((void *)v63 + 5) = v70;
  *((void *)v63 + 6) = v71;
  *((void *)v63 + 7) = v72;
  *((void *)v63 + 8) = v73;
  *((void *)v63 + 9) = v100;
  v63[80] = v103;
  sub_247F98958(v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84);
  uint64_t v85 = v108[11];
  uint64_t v86 = (void *)((char *)v107 + v85);
  uint64_t v87 = (char *)v104 + v85;
  uint64_t v88 = *(void *)((char *)v107 + v85);
  uint64_t v89 = *(void *)((char *)v104 + v85);
  if (!v88)
  {
    if (v89)
    {
      uint64_t v91 = *((void *)v87 + 1);
      *uint64_t v86 = v89;
      v86[1] = v91;
      swift_retain();
      return v107;
    }
LABEL_21:
    *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
    return v107;
  }
  if (!v89)
  {
    swift_release();
    goto LABEL_21;
  }
  uint64_t v90 = *((void *)v87 + 1);
  *uint64_t v86 = v89;
  v86[1] = v90;
  swift_retain();
  swift_release();
  return v107;
}

uint64_t sub_247FACD88(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for AuthenticationModel(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    a1[4] = a2[4];
    long long v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    uint64_t v11 = v6[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_248174700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = v6[6];
    uint64_t v16 = (_OWORD *)((char *)a1 + v15);
    uint64_t v17 = (_OWORD *)((char *)a2 + v15);
    long long v18 = v17[3];
    v16[2] = v17[2];
    v16[3] = v18;
    *(_OWORD *)((char *)v16 + 57) = *(_OWORD *)((char *)v17 + 57);
    long long v19 = v17[1];
    _OWORD *v16 = *v17;
    v16[1] = v19;
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v20 = a3[5];
  uint64_t v21 = a3[6];
  uint64_t v22 = (_OWORD *)((char *)a1 + v20);
  uint64_t v23 = (_OWORD *)((char *)a2 + v20);
  long long v24 = v23[3];
  v22[2] = v23[2];
  v22[3] = v24;
  v22[4] = v23[4];
  long long v25 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v25;
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  uint64_t v26 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v28 = (char *)a1 + v27;
  long long v29 = (char *)a2 + v27;
  long long v30 = *((_OWORD *)v29 + 1);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *((_OWORD *)v28 + 1) = v30;
  v28[80] = v29[80];
  long long v31 = *((_OWORD *)v29 + 4);
  long long v32 = *((_OWORD *)v29 + 2);
  *((_OWORD *)v28 + 3) = *((_OWORD *)v29 + 3);
  *((_OWORD *)v28 + 4) = v31;
  *((_OWORD *)v28 + 2) = v32;
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (uint64_t *)((char *)a2 + v33);
  uint64_t v36 = *v35;
  if (*v35)
  {
    uint64_t v37 = v35[1];
    *uint64_t v34 = v36;
    v34[1] = v37;
  }
  else
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  }
  return a1;
}

void *assignWithTake for AuthenticationModel(void *a1, void *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      long long v11 = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v11;
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      long long v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v12;
      uint64_t v13 = v6[5];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      uint64_t v17 = v6[6];
      long long v18 = (_OWORD *)((char *)a1 + v17);
      long long v19 = (_OWORD *)((char *)a2 + v17);
      long long v20 = v19[3];
      v18[2] = v19[2];
      v18[3] = v20;
      *(_OWORD *)((char *)v18 + 57) = *(_OWORD *)((char *)v19 + 57);
      long long v21 = v19[1];
      *long long v18 = *v19;
      v18[1] = v21;
      *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
      (*(void (**)(void *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_247FB3494((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v63 = a2[1];
  *a1 = *a2;
  a1[1] = v63;
  swift_bridgeObjectRelease();
  uint64_t v64 = a2[3];
  a1[2] = a2[2];
  a1[3] = v64;
  swift_bridgeObjectRelease();
  uint64_t v65 = a2[5];
  a1[4] = a2[4];
  a1[5] = v65;
  swift_bridgeObjectRelease();
  uint64_t v66 = a2[7];
  a1[6] = a2[6];
  a1[7] = v66;
  swift_bridgeObjectRelease();
  uint64_t v67 = a2[9];
  a1[8] = a2[8];
  a1[9] = v67;
  swift_bridgeObjectRelease();
  uint64_t v68 = v6[5];
  uint64_t v69 = (char *)a1 + v68;
  uint64_t v70 = (char *)a2 + v68;
  uint64_t v71 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 40))(v69, v70, v71);
  uint64_t v72 = v6[6];
  uint64_t v73 = (char *)a1 + v72;
  uint64_t v74 = (char *)a2 + v72;
  uint64_t v75 = *((void *)v74 + 8);
  char v76 = v74[72];
  uint64_t v77 = *(void *)v73;
  uint64_t v78 = *((void *)v73 + 1);
  uint64_t v79 = *((void *)v73 + 2);
  uint64_t v80 = *((void *)v73 + 3);
  uint64_t v81 = *((void *)v73 + 4);
  uint64_t v82 = *((void *)v73 + 5);
  uint64_t v83 = *((void *)v73 + 6);
  uint64_t v84 = *((void *)v73 + 7);
  uint64_t v85 = *((void *)v73 + 8);
  char v86 = v73[72];
  long long v87 = *((_OWORD *)v74 + 1);
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
  *((_OWORD *)v73 + 1) = v87;
  long long v88 = *((_OWORD *)v74 + 3);
  *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
  *((_OWORD *)v73 + 3) = v88;
  *((void *)v73 + 8) = v75;
  v73[72] = v76;
  sub_247FAC1EC(v77, v78, v79, v80, v81, v82, v83, v84, v85, v86);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v23 = a3[5];
  long long v24 = (void *)((char *)a1 + v23);
  long long v25 = (void *)((char *)a2 + v23);
  if (*(void *)((char *)a1 + v23 + 8))
  {
    uint64_t v26 = v25[1];
    if (v26)
    {
      *long long v24 = *v25;
      v24[1] = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = v25[3];
      v24[2] = v25[2];
      v24[3] = v27;
      swift_bridgeObjectRelease();
      uint64_t v28 = v25[5];
      v24[4] = v25[4];
      v24[5] = v28;
      swift_bridgeObjectRelease();
      uint64_t v29 = v25[7];
      v24[6] = v25[6];
      v24[7] = v29;
      swift_bridgeObjectRelease();
      uint64_t v30 = v25[9];
      v24[8] = v25[8];
      v24[9] = v30;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_247FACD88((uint64_t)v24);
  }
  long long v31 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v31;
  *((_OWORD *)v24 + 4) = *((_OWORD *)v25 + 4);
  long long v32 = *((_OWORD *)v25 + 1);
  *(_OWORD *)long long v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v32;
LABEL_12:
  uint64_t v33 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  char v41 = v40[80];
  uint64_t v42 = *(void **)v39;
  uint64_t v43 = (void *)*((void *)v39 + 1);
  uint64_t v44 = (void *)*((void *)v39 + 2);
  uint64_t v45 = (void *)*((void *)v39 + 3);
  uint64_t v46 = *((void *)v39 + 4);
  uint64_t v47 = (void *)*((void *)v39 + 5);
  uint64_t v48 = *((void *)v39 + 6);
  uint64_t v49 = *((void *)v39 + 7);
  uint64_t v50 = (void *)*((void *)v39 + 8);
  uint64_t v51 = (void *)*((void *)v39 + 9);
  char v52 = v39[80];
  long long v53 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v53;
  long long v54 = *((_OWORD *)v40 + 3);
  *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
  *((_OWORD *)v39 + 3) = v54;
  *((_OWORD *)v39 + 4) = *((_OWORD *)v40 + 4);
  v39[80] = v41;
  sub_247F98958(v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52);
  uint64_t v55 = a3[11];
  long long v56 = (void *)((char *)a1 + v55);
  long long v57 = (void *)((char *)a2 + v55);
  uint64_t v58 = *(void *)((char *)a1 + v55);
  uint64_t v59 = *v57;
  if (!v58)
  {
    if (v59)
    {
      uint64_t v61 = v57[1];
      void *v56 = v59;
      v56[1] = v61;
      return a1;
    }
LABEL_18:
    *(_OWORD *)long long v56 = *(_OWORD *)v57;
    return a1;
  }
  if (!v59)
  {
    swift_release();
    goto LABEL_18;
  }
  uint64_t v60 = v57[1];
  void *v56 = v59;
  v56[1] = v60;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247FAD468);
}

uint64_t sub_247FAD468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AuthenticationModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247FAD540);
}

uint64_t sub_247FAD540(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

void sub_247FAD600()
{
  sub_247FAD6CC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_247FAD6CC()
{
  if (!qword_2692D55F8)
  {
    type metadata accessor for IdMSAccount();
    unint64_t v0 = sub_248175700();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2692D55F8);
    }
  }
}

void destroy for AuthenticationModel.State(uint64_t a1)
{
}

uint64_t initializeWithCopy for AuthenticationModel.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unint64_t v10 = *(void **)(a2 + 56);
  long long v11 = *(void **)(a2 + 64);
  uint64_t v13 = *(void **)(a2 + 72);
  char v14 = *(unsigned char *)(a2 + 80);
  sub_247F986A0(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(unsigned char *)(a1 + 80) = v14;
  return a1;
}

uint64_t assignWithCopy for AuthenticationModel.State(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void **)(a2 + 32);
  uint64_t v8 = *(void **)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  unint64_t v10 = *(void **)(a2 + 56);
  long long v11 = *(void **)(a2 + 64);
  long long v24 = *(void **)(a2 + 72);
  char v25 = *(unsigned char *)(a2 + 80);
  sub_247F986A0(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25);
  long long v12 = *(void **)a1;
  uint64_t v13 = *(void **)(a1 + 8);
  char v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void **)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(void **)(a1 + 64);
  long long v21 = *(void **)(a1 + 72);
  char v22 = *(unsigned char *)(a1 + 80);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(unsigned char *)(a1 + 80) = v25;
  sub_247F98958(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AuthenticationModel.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 80);
  long long v4 = *(void **)a1;
  uint64_t v6 = *(void **)(a1 + 8);
  long long v5 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(void **)(a1 + 64);
  uint64_t v13 = *(void **)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 80);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = v3;
  sub_247F98958(v4, v6, v5, v7, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF4 && *(unsigned char *)(a1 + 81)) {
    return (*(_DWORD *)a1 + 244);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 <= 0xC) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationModel.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF3)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 - 244;
    if (a3 >= 0xF4) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF4) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_247FADA3C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 80) <= 0xBu) {
    return *(unsigned __int8 *)(a1 + 80);
  }
  else {
    return (*(_DWORD *)a1 + 12);
  }
}

uint64_t sub_247FADA54(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xC)
  {
    *(void *)__n128 result = a2 - 12;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)(result + 72) = 0;
    LOBYTE(a2) = 12;
  }
  *(unsigned char *)(result + 80) = a2;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State()
{
  return &type metadata for AuthenticationModel.State;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.UserInteraction()
{
  return &type metadata for AuthenticationModel.UserInteraction;
}

uint64_t initializeBufferWithCopyOfBuffer for IdMSAccount.Credential.CompanionKeyEnvelope(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for AuthenticationModel.BasicLogin(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for AuthenticationModel.BasicLogin(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v6 = *(void **)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v5;
  uint64_t v7 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v8 = v6;
  swift_bridgeObjectRetain();
  id v9 = v7;
  return a1;
}

uint64_t assignWithCopy for AuthenticationModel.BasicLogin(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  uint64_t v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 56);
  id v8 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v8;
  id v9 = v8;

  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AuthenticationModel.BasicLogin(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);

  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.BasicLogin(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationModel.BasicLogin(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.BasicLogin()
{
  return &type metadata for AuthenticationModel.BasicLogin;
}

uint64_t sub_247FADDD8(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.SecondFactor()
{
  return &type metadata for AuthenticationModel.SecondFactor;
}

void _s12AppleIDSetup19AuthenticationModelV12SecondFactorVwxx_0(uint64_t a1)
{
  if (*(void *)(a1 + 40) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v2 = *(void **)(a1 + 72);
}

uint64_t _s12AppleIDSetup19AuthenticationModelV12SecondFactorVwcp_0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  id v7 = v4;
  if (v6 == 1)
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v9 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v9;
    uint64_t v10 = *(void **)(a2 + 64);
    *(void *)(a1 + 64) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = v10;
  }
  long long v12 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v12;
  id v13 = v12;
  return a1;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV12SecondFactorVwca_0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v7;
  long long v8 = (long long *)(a1 + 32);
  uint64_t v9 = (long long *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *v9;
      long long v12 = *(_OWORD *)(a2 + 48);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *long long v8 = v11;
      *(_OWORD *)(a1 + 48) = v12;
    }
    else
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      long long v15 = *(void **)(a2 + 64);
      *(void *)(a1 + 64) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v16 = v15;
    }
  }
  else if (v10 == 1)
  {
    sub_247FADDD8(a1 + 32);
    uint64_t v13 = *(void *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 48);
    *long long v8 = *v9;
    *(_OWORD *)(a1 + 48) = v14;
    *(void *)(a1 + 64) = v13;
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void **)(a1 + 64);
    uint64_t v18 = *(void **)(a2 + 64);
    *(void *)(a1 + 64) = v18;
    id v19 = v18;
  }
  long long v20 = *(void **)(a1 + 72);
  long long v21 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v21;
  id v22 = v21;

  return a1;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV12SecondFactorVwta_0(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  if (*(void *)(a1 + 40) != 1)
  {
    uint64_t v6 = *(void *)(a2 + 40);
    if (v6 != 1)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void **)(a1 + 64);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);

      goto LABEL_6;
    }
    sub_247FADDD8(a1 + 32);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
LABEL_6:
  uint64_t v10 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  return a1;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV12SecondFactorVwet_0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s12AppleIDSetup19AuthenticationModelV12SecondFactorVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.SecondFactorAlert()
{
  return &type metadata for AuthenticationModel.SecondFactorAlert;
}

void destroy for AuthenticationModel.ErrorInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for AuthenticationModel.ErrorInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for AuthenticationModel.ErrorInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AuthenticationModel.ErrorInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.ErrorInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationModel.ErrorInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.ErrorInfo()
{
  return &type metadata for AuthenticationModel.ErrorInfo;
}

void destroy for AuthenticationModel.ServerRedirect(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for AuthenticationModel.ServerRedirect(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  long long v7 = *(void **)(a2 + 32);
  a1[4] = v7;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  id v11 = v6;
  id v12 = v7;
  return a1;
}

uint64_t assignWithCopy for AuthenticationModel.ServerRedirect(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  long long v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 16);
  id v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  uint64_t v13 = *(void **)(a1 + 24);
  long long v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  id v16 = *(void **)(a1 + 32);
  uint64_t v17 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v17;
  id v18 = v17;

  return a1;
}

uint64_t assignWithTake for AuthenticationModel.ServerRedirect(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.ServerRedirect(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationModel.ServerRedirect(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.ServerRedirect()
{
  return &type metadata for AuthenticationModel.ServerRedirect;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.NativeRecovery()
{
  return &type metadata for AuthenticationModel.NativeRecovery;
}

void destroy for AuthenticationModel.FidoChallenge(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 24);
}

void *_s12AppleIDSetup19AuthenticationModelV14NativeRecoveryVwcp_0(void *a1, uint64_t a2)
{
  long long v3 = *(void **)a2;
  int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  id v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  id v10 = v6;
  return a1;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV14NativeRecoveryVwca_0(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  id v10 = *(void **)(a1 + 16);
  id v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  uint64_t v13 = *(void **)(a1 + 24);
  long long v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  return a1;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV14NativeRecoveryVwta_0(uint64_t a1, _OWORD *a2)
{
  int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t _s12AppleIDSetup19AuthenticationModelV14NativeRecoveryVwet_0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s12AppleIDSetup19AuthenticationModelV14NativeRecoveryVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.FidoChallenge()
{
  return &type metadata for AuthenticationModel.FidoChallenge;
}

uint64_t destroy for AuthenticationModel.KeepUsing(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AuthenticationModel.KeepUsing(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AuthenticationModel.KeepUsing(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for AuthenticationModel.KeepUsing(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.KeepUsing(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationModel.KeepUsing(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.KeepUsing()
{
  return &type metadata for AuthenticationModel.KeepUsing;
}

uint64_t destroy for AuthenticationModel.Alert(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    uint64_t v8 = *(void *)(a1 + 64);
    uint64_t v9 = *(void *)(a1 + 72);
    return sub_247FA98EC(v4, v5, v6, v7, v8, v9, v3);
  }
  return result;
}

uint64_t initializeWithCopy for AuthenticationModel.Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  int v6 = *(unsigned __int8 *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 255)
  {
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t v11 = *(void *)(a2 + 64);
    uint64_t v12 = *(void *)(a2 + 72);
    sub_247FA9804(v7, v8, v9, v10, v11, v12, v6);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    *(unsigned char *)(a1 + 80) = v6;
  }
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

uint64_t assignWithCopy for AuthenticationModel.Alert(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (long long *)(a2 + 32);
  int v6 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v6 == 255)
    {
      long long v29 = *v5;
      long long v30 = *(_OWORD *)(a2 + 48);
      long long v31 = *(_OWORD *)(a2 + 64);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(_OWORD *)(a1 + 48) = v30;
      *(_OWORD *)(a1 + 64) = v31;
      *uint64_t v4 = v29;
    }
    else
    {
      uint64_t v20 = *(void *)(a2 + 32);
      uint64_t v21 = *(void *)(a2 + 40);
      uint64_t v22 = *(void *)(a2 + 48);
      uint64_t v23 = *(void *)(a2 + 56);
      uint64_t v24 = *(void *)(a2 + 64);
      uint64_t v25 = *(void *)(a2 + 72);
      sub_247FA9804(v20, v21, v22, v23, v24, v25, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 32) = v20;
      *(void *)(a1 + 40) = v21;
      *(void *)(a1 + 48) = v22;
      *(void *)(a1 + 56) = v23;
      *(void *)(a1 + 64) = v24;
      *(void *)(a1 + 72) = v25;
      *(unsigned char *)(a1 + 80) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_247FAEE24(a1 + 32);
    long long v27 = *(_OWORD *)(a2 + 48);
    long long v26 = *(_OWORD *)(a2 + 64);
    long long v28 = *v5;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v27;
    *(_OWORD *)(a1 + 64) = v26;
    *uint64_t v4 = v28;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    uint64_t v10 = *(void *)(a2 + 56);
    uint64_t v11 = *(void *)(a2 + 64);
    uint64_t v12 = *(void *)(a2 + 72);
    sub_247FA9804(v7, v8, v9, v10, v11, v12, *(unsigned char *)(a2 + 80));
    uint64_t v13 = *(void *)(a1 + 32);
    uint64_t v14 = *(void *)(a1 + 40);
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = *(void *)(a1 + 56);
    uint64_t v17 = *(void *)(a1 + 64);
    uint64_t v18 = *(void *)(a1 + 72);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    char v19 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v6;
    sub_247FA98EC(v13, v14, v15, v16, v17, v18, v19);
  }
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

uint64_t sub_247FAEE24(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy82_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AuthenticationModel.Alert(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  int v6 = *(unsigned __int8 *)(a1 + 80);
  if (v6 == 255) {
    goto LABEL_5;
  }
  int v7 = *(unsigned __int8 *)(a2 + 80);
  if (v7 == 255)
  {
    sub_247FAEE24(a1 + 32);
LABEL_5:
    long long v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = v7;
  sub_247FA98EC(v8, v9, v10, v11, v12, v13, v6);
LABEL_6:
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.Alert(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 82)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuthenticationModel.Alert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 82) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.Alert()
{
  return &type metadata for AuthenticationModel.Alert;
}

ValueMetadata *type metadata accessor for AuthenticationModel.Alert.CodingKeys()
{
  return &type metadata for AuthenticationModel.Alert.CodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.KeepUsing.CodingKeys()
{
  return &type metadata for AuthenticationModel.KeepUsing.CodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.FidoChallenge.CodingKeys()
{
  return &type metadata for AuthenticationModel.FidoChallenge.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SignInCommand.Request.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12AppleIDSetup19AuthenticationModelV5AlertV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FAF1A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.NativeRecovery.CodingKeys()
{
  return &type metadata for AuthenticationModel.NativeRecovery.CodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.ServerRedirect.CodingKeys()
{
  return &type metadata for AuthenticationModel.ServerRedirect.CodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.ErrorInfo.CodingKeys()
{
  return &type metadata for AuthenticationModel.ErrorInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.SecondFactorAlert.CodingKeys()
{
  return &type metadata for AuthenticationModel.SecondFactorAlert.CodingKeys;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.ID.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12AppleIDSetup19AuthenticationModelV14ServerRedirectV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FAF36CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.SecondFactor.CodingKeys()
{
  return &type metadata for AuthenticationModel.SecondFactor.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.BasicLogin.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AuthenticationModel.BasicLogin.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FAF500);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

uint64_t sub_247FAF528(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_247FAF530(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.BasicLogin.CodingKeys()
{
  return &type metadata for AuthenticationModel.BasicLogin.CodingKeys;
}

uint64_t getEnumTagSinglePayload for RepairError.GenericCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12AppleIDSetup19AuthenticationModelV15UserInteractionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FAF6A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.UserInteraction.CodingKeys()
{
  return &type metadata for AuthenticationModel.UserInteraction.CodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.UserInteraction.NeverCodingKeys()
{
  return &type metadata for AuthenticationModel.UserInteraction.NeverCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.UserInteraction.OptionalCodingKeys()
{
  return &type metadata for AuthenticationModel.UserInteraction.OptionalCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.UserInteraction.RequiredCodingKeys()
{
  return &type metadata for AuthenticationModel.UserInteraction.RequiredCodingKeys;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.State.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AuthenticationModel.State.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *__n128 result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FAF868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.CodingKeys()
{
  return &type metadata for AuthenticationModel.State.CodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.InitialCodingKeys()
{
  return &type metadata for AuthenticationModel.State.InitialCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.SrpCodingKeys()
{
  return &type metadata for AuthenticationModel.State.SrpCodingKeys;
}

uint64_t sub_247FAF8CC()
{
  return 0;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.BasicLoginCodingKeys()
{
  return &type metadata for AuthenticationModel.State.BasicLoginCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.DismissBasicLoginUICodingKeys()
{
  return &type metadata for AuthenticationModel.State.DismissBasicLoginUICodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.SecondFactorCodingKeys()
{
  return &type metadata for AuthenticationModel.State.SecondFactorCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.SecondFactorAlertCodingKeys()
{
  return &type metadata for AuthenticationModel.State.SecondFactorAlertCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.DismissSecondFactorCodingKeys()
{
  return &type metadata for AuthenticationModel.State.DismissSecondFactorCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.ServerRedirectCodingKeys()
{
  return &type metadata for AuthenticationModel.State.ServerRedirectCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.DismissServerProvidedUICodingKeys()
{
  return &type metadata for AuthenticationModel.State.DismissServerProvidedUICodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.NativeRecoveryCodingKeys()
{
  return &type metadata for AuthenticationModel.State.NativeRecoveryCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.FidoChallengeCodingKeys()
{
  return &type metadata for AuthenticationModel.State.FidoChallengeCodingKeys;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.KeepUsingCodingKeys()
{
  return &type metadata for AuthenticationModel.State.KeepUsingCodingKeys;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.State.AlertCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AuthenticationModel.State.AlertCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FAFAD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_247FAFAF8(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.AlertCodingKeys()
{
  return &type metadata for AuthenticationModel.State.AlertCodingKeys;
}

uint64_t getEnumTagSinglePayload for AuthenticateCommand.Response.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s12AppleIDSetup19AuthenticationModelV5StateO20BasicLoginCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x247FAFC00);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.State.LoadingCodingKeys()
{
  return &type metadata for AuthenticationModel.State.LoadingCodingKeys;
}

uint64_t getEnumTagSinglePayload for AuthenticationModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AuthenticationModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FAFD94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticationModel.CodingKeys()
{
  return &type metadata for AuthenticationModel.CodingKeys;
}

unint64_t sub_247FAFDD0()
{
  unint64_t result = qword_2692D5600;
  if (!qword_2692D5600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5600);
  }
  return result;
}

unint64_t sub_247FAFE28()
{
  unint64_t result = qword_2692D5608;
  if (!qword_2692D5608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5608);
  }
  return result;
}

unint64_t sub_247FAFE80()
{
  unint64_t result = qword_2692D5610;
  if (!qword_2692D5610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5610);
  }
  return result;
}

unint64_t sub_247FAFED8()
{
  unint64_t result = qword_2692D5618;
  if (!qword_2692D5618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5618);
  }
  return result;
}

unint64_t sub_247FAFF30()
{
  unint64_t result = qword_2692D5620;
  if (!qword_2692D5620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5620);
  }
  return result;
}

unint64_t sub_247FAFF88()
{
  unint64_t result = qword_2692D5628;
  if (!qword_2692D5628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5628);
  }
  return result;
}

unint64_t sub_247FAFFE0()
{
  unint64_t result = qword_2692D5630;
  if (!qword_2692D5630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5630);
  }
  return result;
}

unint64_t sub_247FB0038()
{
  unint64_t result = qword_2692D5638;
  if (!qword_2692D5638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5638);
  }
  return result;
}

unint64_t sub_247FB0090()
{
  unint64_t result = qword_2692D5640;
  if (!qword_2692D5640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5640);
  }
  return result;
}

unint64_t sub_247FB00E8()
{
  unint64_t result = qword_2692D5648;
  if (!qword_2692D5648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5648);
  }
  return result;
}

unint64_t sub_247FB0140()
{
  unint64_t result = qword_2692D5650;
  if (!qword_2692D5650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5650);
  }
  return result;
}

unint64_t sub_247FB0198()
{
  unint64_t result = qword_2692D5658;
  if (!qword_2692D5658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5658);
  }
  return result;
}

unint64_t sub_247FB01F0()
{
  unint64_t result = qword_2692D5660;
  if (!qword_2692D5660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5660);
  }
  return result;
}

unint64_t sub_247FB0248()
{
  unint64_t result = qword_2692D5668;
  if (!qword_2692D5668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5668);
  }
  return result;
}

unint64_t sub_247FB02A0()
{
  unint64_t result = qword_2692D5670;
  if (!qword_2692D5670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5670);
  }
  return result;
}

unint64_t sub_247FB02F8()
{
  unint64_t result = qword_2692D5678;
  if (!qword_2692D5678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5678);
  }
  return result;
}

unint64_t sub_247FB0350()
{
  unint64_t result = qword_2692D5680;
  if (!qword_2692D5680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5680);
  }
  return result;
}

unint64_t sub_247FB03A8()
{
  unint64_t result = qword_2692D5688;
  if (!qword_2692D5688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5688);
  }
  return result;
}

unint64_t sub_247FB0400()
{
  unint64_t result = qword_2692D5690;
  if (!qword_2692D5690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5690);
  }
  return result;
}

unint64_t sub_247FB0458()
{
  unint64_t result = qword_2692D5698;
  if (!qword_2692D5698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5698);
  }
  return result;
}

unint64_t sub_247FB04B0()
{
  unint64_t result = qword_2692D56A0;
  if (!qword_2692D56A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56A0);
  }
  return result;
}

unint64_t sub_247FB0508()
{
  unint64_t result = qword_2692D56A8;
  if (!qword_2692D56A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56A8);
  }
  return result;
}

unint64_t sub_247FB0560()
{
  unint64_t result = qword_2692D56B0;
  if (!qword_2692D56B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56B0);
  }
  return result;
}

unint64_t sub_247FB05B8()
{
  unint64_t result = qword_2692D56B8;
  if (!qword_2692D56B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56B8);
  }
  return result;
}

unint64_t sub_247FB0610()
{
  unint64_t result = qword_2692D56C0;
  if (!qword_2692D56C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56C0);
  }
  return result;
}

unint64_t sub_247FB0668()
{
  unint64_t result = qword_2692D56C8;
  if (!qword_2692D56C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56C8);
  }
  return result;
}

unint64_t sub_247FB06C0()
{
  unint64_t result = qword_2692D56D0;
  if (!qword_2692D56D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56D0);
  }
  return result;
}

unint64_t sub_247FB0718()
{
  unint64_t result = qword_2692D56D8;
  if (!qword_2692D56D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56D8);
  }
  return result;
}

unint64_t sub_247FB0770()
{
  unint64_t result = qword_2692D56E0;
  if (!qword_2692D56E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56E0);
  }
  return result;
}

unint64_t sub_247FB07C8()
{
  unint64_t result = qword_2692D56E8;
  if (!qword_2692D56E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56E8);
  }
  return result;
}

unint64_t sub_247FB0820()
{
  unint64_t result = qword_2692D56F0;
  if (!qword_2692D56F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56F0);
  }
  return result;
}

unint64_t sub_247FB0878()
{
  unint64_t result = qword_2692D56F8;
  if (!qword_2692D56F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D56F8);
  }
  return result;
}

unint64_t sub_247FB08D0()
{
  unint64_t result = qword_2692D5700;
  if (!qword_2692D5700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5700);
  }
  return result;
}

unint64_t sub_247FB0928()
{
  unint64_t result = qword_2692D5708;
  if (!qword_2692D5708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5708);
  }
  return result;
}

unint64_t sub_247FB0980()
{
  unint64_t result = qword_2692D5710;
  if (!qword_2692D5710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5710);
  }
  return result;
}

unint64_t sub_247FB09D8()
{
  unint64_t result = qword_2692D5718;
  if (!qword_2692D5718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5718);
  }
  return result;
}

unint64_t sub_247FB0A30()
{
  unint64_t result = qword_2692D5720;
  if (!qword_2692D5720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5720);
  }
  return result;
}

unint64_t sub_247FB0A88()
{
  unint64_t result = qword_2692D5728;
  if (!qword_2692D5728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5728);
  }
  return result;
}

unint64_t sub_247FB0AE0()
{
  unint64_t result = qword_2692D5730;
  if (!qword_2692D5730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5730);
  }
  return result;
}

unint64_t sub_247FB0B38()
{
  unint64_t result = qword_2692D5738;
  if (!qword_2692D5738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5738);
  }
  return result;
}

unint64_t sub_247FB0B90()
{
  unint64_t result = qword_2692D5740;
  if (!qword_2692D5740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5740);
  }
  return result;
}

unint64_t sub_247FB0BE8()
{
  unint64_t result = qword_2692D5748;
  if (!qword_2692D5748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5748);
  }
  return result;
}

unint64_t sub_247FB0C40()
{
  unint64_t result = qword_2692D5750;
  if (!qword_2692D5750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5750);
  }
  return result;
}

unint64_t sub_247FB0C98()
{
  unint64_t result = qword_2692D5758;
  if (!qword_2692D5758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5758);
  }
  return result;
}

unint64_t sub_247FB0CF0()
{
  unint64_t result = qword_2692D5760;
  if (!qword_2692D5760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5760);
  }
  return result;
}

unint64_t sub_247FB0D48()
{
  unint64_t result = qword_2692D5768;
  if (!qword_2692D5768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5768);
  }
  return result;
}

unint64_t sub_247FB0DA0()
{
  unint64_t result = qword_2692D5770;
  if (!qword_2692D5770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5770);
  }
  return result;
}

unint64_t sub_247FB0DF8()
{
  unint64_t result = qword_2692D5778;
  if (!qword_2692D5778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5778);
  }
  return result;
}

unint64_t sub_247FB0E50()
{
  unint64_t result = qword_2692D5780;
  if (!qword_2692D5780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5780);
  }
  return result;
}

unint64_t sub_247FB0EA8()
{
  unint64_t result = qword_2692D5788;
  if (!qword_2692D5788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5788);
  }
  return result;
}

unint64_t sub_247FB0F00()
{
  unint64_t result = qword_2692D5790;
  if (!qword_2692D5790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5790);
  }
  return result;
}

unint64_t sub_247FB0F58()
{
  unint64_t result = qword_2692D5798;
  if (!qword_2692D5798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5798);
  }
  return result;
}

unint64_t sub_247FB0FB0()
{
  unint64_t result = qword_2692D57A0;
  if (!qword_2692D57A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57A0);
  }
  return result;
}

unint64_t sub_247FB1008()
{
  unint64_t result = qword_2692D57A8;
  if (!qword_2692D57A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57A8);
  }
  return result;
}

unint64_t sub_247FB1060()
{
  unint64_t result = qword_2692D57B0;
  if (!qword_2692D57B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57B0);
  }
  return result;
}

unint64_t sub_247FB10B8()
{
  unint64_t result = qword_2692D57B8;
  if (!qword_2692D57B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57B8);
  }
  return result;
}

unint64_t sub_247FB1110()
{
  unint64_t result = qword_2692D57C0;
  if (!qword_2692D57C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57C0);
  }
  return result;
}

unint64_t sub_247FB1168()
{
  unint64_t result = qword_2692D57C8;
  if (!qword_2692D57C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57C8);
  }
  return result;
}

unint64_t sub_247FB11C0()
{
  unint64_t result = qword_2692D57D0;
  if (!qword_2692D57D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57D0);
  }
  return result;
}

unint64_t sub_247FB1218()
{
  unint64_t result = qword_2692D57D8;
  if (!qword_2692D57D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57D8);
  }
  return result;
}

unint64_t sub_247FB1270()
{
  unint64_t result = qword_2692D57E0;
  if (!qword_2692D57E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57E0);
  }
  return result;
}

unint64_t sub_247FB12C8()
{
  unint64_t result = qword_2692D57E8;
  if (!qword_2692D57E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57E8);
  }
  return result;
}

unint64_t sub_247FB1320()
{
  unint64_t result = qword_2692D57F0;
  if (!qword_2692D57F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57F0);
  }
  return result;
}

unint64_t sub_247FB1378()
{
  unint64_t result = qword_2692D57F8;
  if (!qword_2692D57F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D57F8);
  }
  return result;
}

unint64_t sub_247FB13D0()
{
  unint64_t result = qword_2692D5800;
  if (!qword_2692D5800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5800);
  }
  return result;
}

unint64_t sub_247FB1428()
{
  unint64_t result = qword_2692D5808;
  if (!qword_2692D5808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5808);
  }
  return result;
}

unint64_t sub_247FB1480()
{
  unint64_t result = qword_2692D5810;
  if (!qword_2692D5810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5810);
  }
  return result;
}

unint64_t sub_247FB14D8()
{
  unint64_t result = qword_2692D5818;
  if (!qword_2692D5818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5818);
  }
  return result;
}

unint64_t sub_247FB1530()
{
  unint64_t result = qword_2692D5820;
  if (!qword_2692D5820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5820);
  }
  return result;
}

unint64_t sub_247FB1588()
{
  unint64_t result = qword_2692D5828;
  if (!qword_2692D5828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5828);
  }
  return result;
}

unint64_t sub_247FB15E0()
{
  unint64_t result = qword_2692D5830;
  if (!qword_2692D5830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5830);
  }
  return result;
}

unint64_t sub_247FB1638()
{
  unint64_t result = qword_2692D5838;
  if (!qword_2692D5838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5838);
  }
  return result;
}

unint64_t sub_247FB1690()
{
  unint64_t result = qword_2692D5840;
  if (!qword_2692D5840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5840);
  }
  return result;
}

unint64_t sub_247FB16E8()
{
  unint64_t result = qword_2692D5848;
  if (!qword_2692D5848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5848);
  }
  return result;
}

unint64_t sub_247FB1740()
{
  unint64_t result = qword_2692D5850;
  if (!qword_2692D5850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5850);
  }
  return result;
}

unint64_t sub_247FB1798()
{
  unint64_t result = qword_2692D5858;
  if (!qword_2692D5858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5858);
  }
  return result;
}

unint64_t sub_247FB17F0()
{
  unint64_t result = qword_2692D5860;
  if (!qword_2692D5860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5860);
  }
  return result;
}

unint64_t sub_247FB1848()
{
  unint64_t result = qword_2692D5868;
  if (!qword_2692D5868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5868);
  }
  return result;
}

unint64_t sub_247FB18A0()
{
  unint64_t result = qword_2692D5870;
  if (!qword_2692D5870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5870);
  }
  return result;
}

unint64_t sub_247FB18F8()
{
  unint64_t result = qword_2692D5878;
  if (!qword_2692D5878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5878);
  }
  return result;
}

unint64_t sub_247FB1950()
{
  unint64_t result = qword_2692D5880;
  if (!qword_2692D5880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5880);
  }
  return result;
}

unint64_t sub_247FB19A8()
{
  unint64_t result = qword_2692D5888;
  if (!qword_2692D5888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5888);
  }
  return result;
}

uint64_t sub_247FB19FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_247FB1AC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616974696E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7369331 && a2 == 0xE300000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676F4C6369736162 && a2 == 0xEA00000000006E69 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002481904C0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6146646E6F636573 && a2 == 0xEC000000726F7463 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002481904E0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000248190500 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6552726576726573 && a2 == 0xEE00746365726964 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000248190520 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x655265766974616ELL && a2 == 0xEE00797265766F63 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C6168436F646966 && a2 == 0xED000065676E656CLL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E6973557065656BLL && a2 == 0xE900000000000067 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7472656C61 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_247FB20C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726576656ELL && a2 == 0xE500000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E6F6974706FLL && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6465726975716572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_247FB2210(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D616E72657375 && a2 == 0xE800000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64726F7773736170 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C65636E61437369 && a2 == 0xEB0000000064656CLL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657070696B537369 && a2 == 0xE900000000000064 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002481901F0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000248190540 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000248190560 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x53746E6572727563 && a2 == 0xEF73656369767265 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_247FB25E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000248190560 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E654C65646F63 && a2 == 0xEA00000000006874 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657463656C6C6F63 && a2 == 0xED000065646F4364 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x666E49726F727265 && a2 == 0xE90000000000006FLL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_247FB2834(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_247FB297C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000248190560 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248190580 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002481905A0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_247FB2BA4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000248190560 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657265766F636572 && a2 == 0xED00006F666E4964)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_247FB2D78(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000248190560 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x747865746E6F63 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65736E6F70736572 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_247FB2F28(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000248190560 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E72657375 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6973557065656BLL && a2 == 0xE900000000000067)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_247FB3088(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E65736572507369 && a2 == 0xEB00000000646574)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_247FB324C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_247FB3284(uint64_t a1)
{
  BOOL v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  uint64_t v4 = a1;
  return v2(&v4);
}

uint64_t sub_247FB32BC(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_247FB32E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_247FB3350(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247FB3398(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_247FB33D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_247FB3430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AuthenticationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_247FB3494(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_247FB357C()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_2692D58D8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2692D58D8);
  if (qword_2692D4DE8 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2692DBE00);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t MessagePacker.encoder.getter()
{
  return swift_retain();
}

uint64_t MessagePacker.encoder.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*MessagePacker.encoder.modify())()
{
  return nullsub_1;
}

uint64_t MessagePacker.signingIdentity.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_247FBB338(v2 + *(int *)(a1 + 36), a2, &qword_2692D58F0);
}

uint64_t MessagePacker.signingIdentity.setter(uint64_t a1, uint64_t a2)
{
  return sub_247FB36D0(a1, v2 + *(int *)(a2 + 36));
}

uint64_t sub_247FB36D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*MessagePacker.signingIdentity.modify())()
{
  return nullsub_1;
}

uint64_t (*MessagePacker.topicIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MessagePacker.init(encoder:signingIdentity:topicIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  return sub_247FB56C4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for MessagePacker, a7);
}

uint64_t type metadata accessor for MessagePacker()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MessagePacker.pack(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v109 = (uint64_t)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v107 = *(void *)(v6 - 8);
  uint64_t v108 = v6;
  MEMORY[0x270FA5388](v6);
  char v103 = (uint8_t **)((char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_2481748C0();
  uint64_t v101 = *(void *)(v8 - 8);
  uint64_t v102 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  __int8 v100 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = a2;
  uint64_t v11 = *(char **)(a2 + 16);
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  char v106 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v96 - v16;
  MEMORY[0x270FA5388](v15);
  char v19 = (char *)&v96 - v18;
  if (qword_2692D4D50 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_248174B90();
  uint64_t v21 = __swift_project_value_buffer(v20, (uint64_t)qword_2692D58D8);
  uint64_t v22 = *(void (**)(char *, uint64_t, char *))(v12 + 16);
  v22(v19, a1, v11);
  uint64_t v111 = v21;
  uint64_t v23 = a1;
  uint64_t v24 = sub_248174B70();
  os_log_type_t v25 = sub_2481755C0();
  uint64_t v112 = v24;
  LODWORD(v110) = v25;
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v104 = v22;
  uint64_t v105 = v12 + 16;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v97 = v12;
    long long v28 = (uint8_t *)v27;
    uint64_t v98 = swift_slowAlloc();
    v120[0] = v98;
    uint64_t v99 = v23;
    *(_DWORD *)long long v28 = 136315138;
    uint64_t v96 = v28 + 4;
    v22(v17, (uint64_t)v19, v11);
    uint64_t v29 = sub_248175190();
    *(void *)&v118[0] = sub_247FB6D24(v29, v30, v120);
    uint64_t v31 = v99;
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *))(v97 + 8))(v19, v11);
    long long v32 = v112;
    _os_log_impl(&dword_247F93000, v112, (os_log_type_t)v110, "Packing up outMessage: %s", v28, 0xCu);
    uint64_t v33 = v98;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v33, -1, -1);
    MEMORY[0x24C574E00](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, char *))(v12 + 8))(v19, v11);

    uint64_t v31 = v23;
  }
  uint64_t v34 = v115;
  uint64_t v35 = *v114;
  uint64_t v36 = *(void *)(v115 + 24);
  uint64_t v37 = v113;
  uint64_t v38 = sub_2481745F0();
  uint64_t v113 = v39;
  if (!v37)
  {
    uint64_t v40 = v38;
    uint64_t v99 = v36;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5900);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24817A5E0;
    *(void *)(inited + 32) = 0x726576676B70;
    *(void *)(inited + 40) = 0xE600000000000000;
    v120[0] = 1;
    sub_248175810();
    *(void *)(inited + 88) = 25712;
    *(void *)(inited + 96) = 0xE200000000000000;
    v120[0] = (uint64_t)v40;
    v120[1] = v113;
    uint64_t v112 = v40;
    sub_247FB6C20((uint64_t)v40, v113);
    uint64_t v98 = sub_247FB6C78();
    sub_248175810();
    unint64_t v42 = sub_247FB44EC(inited);
    unint64_t v123 = v42;
    v104(v106, v31, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5910);
    char v106 = v11;
    if (swift_dynamicCast())
    {
      sub_247FB8480(v118, (uint64_t)v120);
      uint64_t v43 = v121;
      uint64_t v44 = v122;
      __swift_project_boxed_opaque_existential_1(v120, v121);
      LOBYTE(v116) = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 32))(v43, v44);
      sub_248175810();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v116 = v42;
      sub_247FB7D04((uint64_t)v118, 0x7265766F746F7270, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
      unint64_t v123 = v116;
      swift_bridgeObjectRelease();
      uint64_t v46 = v121;
      uint64_t v47 = v122;
      __swift_project_boxed_opaque_existential_1(v120, v121);
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v47 + 24);
      uint64_t v49 = v100;
      uint64_t v50 = v47;
      uint64_t v34 = v115;
      v48(v46, v50);
      uint64_t v51 = sub_248174870();
      uint64_t v53 = v52;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v49, v102);
      uint64_t v116 = v51;
      uint64_t v117 = v53;
      sub_248175810();
      uint64_t v54 = v123;
      char v55 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v116 = v54;
      sub_247FB7D04((uint64_t)v118, 0x646967736DLL, 0xE500000000000000, v55);
      unint64_t v42 = v116;
      unint64_t v123 = v116;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
    }
    else
    {
      uint64_t v119 = 0;
      memset(v118, 0, sizeof(v118));
      sub_247FB33D4((uint64_t)v118, &qword_2692D5918);
    }
    long long v56 = v114;
    long long v57 = (uint64_t *)((char *)v114 + *(int *)(v34 + 40));
    unint64_t v58 = v57[1];
    uint64_t v110 = 0;
    if (v58)
    {
      uint64_t v59 = *v57;
      swift_bridgeObjectRetain_n();
      uint64_t v60 = sub_248174B70();
      os_log_type_t v61 = sub_2481755C0();
      if (os_log_type_enabled(v60, v61))
      {
        uint64_t v105 = v59;
        uint64_t v62 = (uint8_t *)swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        v120[0] = v63;
        *(_DWORD *)uint64_t v62 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)&v118[0] = sub_247FB6D24(v105, v58, v120);
        uint64_t v59 = v105;
        long long v56 = v114;
        sub_248175730();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_247F93000, v60, v61, "Attaching topic identifier: %s", v62, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v63, -1, -1);
        MEMORY[0x24C574E00](v62, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      *(void *)&v118[0] = v59;
      *((void *)&v118[0] + 1) = v58;
      sub_248175810();
      char v64 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v118[0] = v42;
      sub_247FB7D04((uint64_t)v120, 1684631668, 0xE400000000000000, v64);
      unint64_t v123 = *(void *)&v118[0];
      swift_bridgeObjectRelease();
    }
    uint64_t v65 = v109;
    sub_247FBB338((uint64_t)v56 + *(int *)(v115 + 36), v109, &qword_2692D58F0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v65, 1, v108) == 1)
    {
      uint64_t v66 = &qword_2692D58F0;
      uint64_t v67 = v65;
    }
    else
    {
      uint64_t v68 = v65;
      uint64_t v69 = v103;
      sub_247FB738C(v68, (uint64_t)v103);
      uint64_t v70 = v112;
      uint64_t v71 = sub_247FB8134((uint64_t)v69, (uint64_t)v112, v113);
      if (v72 >> 60 == 15)
      {
        sub_247FB33D4((uint64_t)v103, &qword_2692D58F8);
LABEL_24:
        long long v87 = sub_248174B70();
        os_log_type_t v88 = sub_2481755C0();
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = (uint8_t *)swift_slowAlloc();
          uint64_t v90 = swift_slowAlloc();
          v120[0] = v90;
          *(_DWORD *)uint64_t v89 = 136315138;
          uint64_t v115 = (uint64_t)(v89 + 4);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          uint64_t v91 = sub_248175020();
          unint64_t v93 = v92;
          swift_bridgeObjectRelease();
          uint64_t v116 = sub_247FB6D24(v91, v93, v120);
          uint64_t v70 = v112;
          sub_248175730();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_247F93000, v87, v88, "Returning packed up outDictionary: %s", v89, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C574E00](v90, -1, -1);
          MEMORY[0x24C574E00](v89, -1, -1);
        }

        swift_beginAccess();
        uint64_t v94 = swift_bridgeObjectRetain();
        uint64_t v35 = sub_247FB4C0C(v94);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FB6CCC((uint64_t)v70, v113);
        return v35;
      }
      uint64_t v73 = (uint64_t)v71;
      unint64_t v74 = v72;
      sub_247FB8458((uint64_t)v71, v72);
      sub_247FB6C20(v73, v74);
      uint64_t v75 = sub_248174B70();
      os_log_type_t v76 = sub_2481755C0();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc();
        uint64_t v115 = swift_slowAlloc();
        v120[0] = v115;
        *(_DWORD *)uint64_t v77 = 136315138;
        uint64_t v114 = (uint64_t *)(v77 + 4);
        sub_247FB6C20(v73, v74);
        uint64_t v78 = sub_248174780();
        unint64_t v80 = v79;
        sub_247FB846C(v73, v74);
        *(void *)&v118[0] = sub_247FB6D24(v78, v80, v120);
        sub_248175730();
        swift_bridgeObjectRelease();
        sub_247FB846C(v73, v74);
        sub_247FB846C(v73, v74);
        _os_log_impl(&dword_247F93000, v75, v76, "Attaching signature: %s", v77, 0xCu);
        uint64_t v81 = v115;
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v81, -1, -1);
        MEMORY[0x24C574E00](v77, -1, -1);
      }
      else
      {
        sub_247FB846C(v73, v74);
        sub_247FB846C(v73, v74);
      }

      *(void *)&v118[0] = v73;
      *((void *)&v118[0] + 1) = v74;
      sub_247FB6C20(v73, v74);
      sub_248175810();
      char v82 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v118[0] = v123;
      sub_247FB7D04((uint64_t)v120, 26483, 0xE200000000000000, v82);
      uint64_t v83 = *(void *)&v118[0];
      swift_bridgeObjectRelease();
      uint64_t v84 = v103;
      uint64_t v85 = v103[1];
      *(void *)&v118[0] = *v103;
      *((void *)&v118[0] + 1) = v85;
      swift_bridgeObjectRetain();
      sub_248175810();
      char v86 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v118[0] = v83;
      sub_247FB7D04((uint64_t)v120, 0x64696D6B6773, 0xE600000000000000, v86);
      unint64_t v123 = *(void *)&v118[0];
      swift_bridgeObjectRelease();
      sub_247FB846C(v73, v74);
      uint64_t v66 = &qword_2692D58F8;
      uint64_t v67 = (uint64_t)v84;
    }
    sub_247FB33D4(v67, v66);
    uint64_t v70 = v112;
    goto LABEL_24;
  }
  return v35;
}

unint64_t sub_247FB44EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5B00);
  uint64_t v2 = (void *)sub_248175A00();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  uint64_t v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_247FBB338(v4, (uint64_t)&v16, &qword_2692D5B20);
    uint64_t v5 = v16;
    uint64_t v6 = v17;
    unint64_t result = sub_247FB64A4(v16, v17);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    uint64_t v10 = v2[7] + 40 * result;
    long long v11 = v18;
    long long v12 = v19;
    *(void *)(v10 + 32) = v20;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_247FB4638(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AC8);
  uint64_t v2 = sub_248175A00();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_247FBB338(v6, (uint64_t)&v15, (uint64_t *)&unk_2692D9300);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_247FB64A4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v11 = (uint64_t *)(v3[6] + 16 * result);
    *long long v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_247FBB1B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_247FB4770(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AD0);
  uint64_t v2 = (void *)sub_248175A00();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_247FB64A4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_247FB4894(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AC0);
  uint64_t v2 = (void *)sub_248175A00();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_247FB64A4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_247FB49B0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AE8);
  uint64_t v2 = sub_248175A00();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_247FBB338(v6, (uint64_t)v15, &qword_2692D5AF0);
    unint64_t result = sub_247FB6460((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_247FBB1B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_247FB4AF4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692DB7E0);
  uint64_t v2 = (void *)sub_248175A00();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    id v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    unint64_t result = sub_247FB63CC((uint64_t)v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v7;
    long long v10 = (void *)(v2[7] + 16 * result);
    *long long v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_247FB4C0C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AE8);
    uint64_t v2 = sub_248175A00();
  }
  else
  {
    uint64_t v2 = MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    long long v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_247FBB220(*(void *)(a1 + 56) + 40 * v12, (uint64_t)v46);
    uint64_t v44 = v19;
    uint64_t v45 = v18;
    long long v41 = v46[0];
    long long v42 = v46[1];
    uint64_t v43 = v47;
    uint64_t v31 = v19;
    uint64_t v32 = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    v29[0] = v41;
    v29[1] = v42;
    uint64_t v30 = v43;
    swift_dynamicCast();
    long long v37 = v33;
    long long v38 = v34;
    uint64_t v39 = v35;
    sub_247FBB1B4(&v36, v40);
    long long v33 = v37;
    long long v34 = v38;
    uint64_t v35 = v39;
    sub_247FBB1B4(v40, v29);
    sub_247FBB1B4(v29, &v37);
    uint64_t result = sub_2481757F0();
    uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = *(void *)(v2 + 48) + 40 * v9;
    *(_OWORD *)uint64_t v10 = v33;
    *(_OWORD *)(v10 + 16) = v34;
    *(void *)(v10 + 32) = v35;
    uint64_t result = (uint64_t)sub_247FBB1B4(&v37, (_OWORD *)(*(void *)(v2 + 56) + 32 * v9));
    ++*(void *)(v2 + 16);
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_247FBB1C4();
    return v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_247FB4FF4(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AC8);
    uint64_t v2 = (void *)sub_248175A00();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = &v37;
  id v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = MEMORY[0x263F8EE58] + 8;
  uint64_t v11 = MEMORY[0x263F8D310];
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_247FBB1C4();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    unint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_247FBB1B4(v6, v7);
    sub_247FBB1B4(v7, v40);
    sub_247FBB1B4(v40, &v38);
    unint64_t result = sub_247FB64A4(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      unint64_t v12 = v7;
      int64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      uint64_t v16 = v10;
      long long v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      uint64_t v6 = v13;
      id v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      unint64_t result = (unint64_t)sub_247FBB1B4(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    int64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *int64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_247FBB1B4(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

char *sub_247FB5360(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_248174E60();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  sub_247FBB338((uint64_t)&v2[*(int *)(v13 + 36)], (uint64_t)v8, &qword_2692D5920);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_247FB33D4((uint64_t)v8, &qword_2692D5920);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5B08);
    sub_247FBB2D8();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v16[0] = a1;
    v16[1] = a2;
    sub_247FBB1CC();
    uint64_t v2 = v12;
    uint64_t v14 = sub_248174E40();
    if (!v3) {
      uint64_t v2 = (char *)v14;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return v2;
}

uint64_t sub_247FB5598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = MessagePacker.pack(_:)(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t (*MessageUnpacker.decoder.modify())()
{
  return nullsub_1;
}

uint64_t (*MessageUnpacker.signingIdentity.modify())()
{
  return nullsub_1;
}

uint64_t _s12AppleIDSetup13MessagePackerV15topicIdentifierSSSgvg_0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s12AppleIDSetup13MessagePackerV15topicIdentifierSSSgvs_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*MessageUnpacker.topicIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t MessageUnpacker.init(decoder:signingIdentity:topicIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  return sub_247FB56C4(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for MessageUnpacker, a7);
}

uint64_t sub_247FB56C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void, uint64_t, uint64_t)@<X6>, void *a8@<X8>)
{
  uint64_t v13 = a7(0, a5, a6);
  uint64_t v14 = (uint64_t)a8 + *(int *)(v13 + 36);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = (void *)((char *)a8 + *(int *)(v13 + 40));
  void *v16 = 0;
  v16[1] = 0;
  *a8 = a1;
  sub_247FB36D0(a2, v14);
  uint64_t result = swift_bridgeObjectRelease();
  void *v16 = a3;
  v16[1] = a4;
  return result;
}

uint64_t MessageUnpacker.unpack(_:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v80 = a3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v81 = *(void *)(v12 - 8);
  uint64_t v82 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v89 = (uint64_t)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4D50 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_248174B90();
  uint64_t v15 = __swift_project_value_buffer(v14, (uint64_t)qword_2692D58D8);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_248174B70();
  os_log_type_t v17 = sub_2481755C0();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v83 = v11;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v77 = v6;
    int64_t v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    unint64_t v79 = a2;
    uint64_t v22 = v21;
    v86[0] = v21;
    v76[1] = v15;
    *(_DWORD *)int64_t v20 = 136315138;
    v76[0] = v20 + 4;
    swift_bridgeObjectRetain();
    uint64_t v78 = v4;
    uint64_t v23 = sub_248175020();
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    *(void *)&long long v87 = sub_247FB6D24(v23, v25, v86);
    sub_248175730();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v16, v17, "Unpacking inDictionary: %s", v20, 0xCu);
    uint64_t v5 = v78;
    swift_arrayDestroy();
    uint64_t v26 = v22;
    a2 = v79;
    MEMORY[0x24C574E00](v26, -1, -1);
    int64_t v27 = v20;
    uint64_t v6 = v77;
    MEMORY[0x24C574E00](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v84 = 25712;
  unint64_t v85 = 0xE200000000000000;
  sub_248175810();
  if (*(void *)(a1 + 16) && (unint64_t v28 = sub_247FB6460((uint64_t)v86), (v29 & 1) != 0))
  {
    sub_247FB8B14(*(void *)(a1 + 56) + 32 * v28, (uint64_t)&v87);
  }
  else
  {
    long long v87 = 0u;
    long long v88 = 0u;
  }
  sub_247FB84B0((uint64_t)v86);
  if (!*((void *)&v88 + 1))
  {
    sub_247FB33D4((uint64_t)&v87, (uint64_t *)&unk_26B13BED0);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    uint64_t v36 = sub_248174B70();
    os_log_type_t v37 = sub_2481755D0();
    if (os_log_type_enabled(v36, v37))
    {
      long long v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v38 = 0;
      _os_log_impl(&dword_247F93000, v36, v37, "Failed to unpack message due to missing payload", v38, 2u);
      MEMORY[0x24C574E00](v38, -1, -1);
    }

    type metadata accessor for MessageUnpacker.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *uint64_t v39 = 0u;
    v39[1] = 0u;
    return swift_willThrow();
  }
  uint64_t v30 = v84;
  unint64_t v79 = v85;
  int64_t v31 = (uint64_t *)(v6 + *(int *)(a2 + 40));
  unint64_t v32 = v31[1];
  if (v32)
  {
    uint64_t v33 = *v31;
    uint64_t v84 = 1684631668;
    unint64_t v85 = 0xE400000000000000;
    swift_bridgeObjectRetain();
    sub_248175810();
    if (*(void *)(a1 + 16) && (unint64_t v34 = sub_247FB6460((uint64_t)v86), (v35 & 1) != 0))
    {
      sub_247FB8B14(*(void *)(a1 + 56) + 32 * v34, (uint64_t)&v87);
    }
    else
    {
      long long v87 = 0u;
      long long v88 = 0u;
    }
    sub_247FB84B0((uint64_t)v86);
    if (*((void *)&v88 + 1))
    {
      if (swift_dynamicCast())
      {
        uint64_t v41 = v85;
        if (v33 == v84 && v32 == v85 || (uint64_t v77 = v84, (sub_248175CE0() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v42 = sub_248174B70();
          os_log_type_t v43 = sub_2481755C0();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = a1;
            uint64_t v45 = v6;
            uint64_t v46 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v46 = 0;
            _os_log_impl(&dword_247F93000, v42, v43, "Verified that topic identifier for inDictionary matches, unpacking will proceed", v46, 2u);
            uint64_t v47 = v46;
            uint64_t v6 = v45;
            a1 = v44;
            MEMORY[0x24C574E00](v47, -1, -1);
          }

          goto LABEL_29;
        }
        uint64_t v67 = v33;
        swift_bridgeObjectRetain_n();
        uint64_t v89 = v41;
        swift_bridgeObjectRetain_n();
        uint64_t v68 = sub_248174B70();
        os_log_type_t v69 = sub_2481755B0();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = swift_slowAlloc();
          uint64_t v82 = swift_slowAlloc();
          v86[0] = v82;
          *(_DWORD *)uint64_t v70 = 136315394;
          uint64_t v83 = (char *)v30;
          swift_bridgeObjectRetain();
          uint64_t v78 = v67;
          *(void *)&long long v87 = sub_247FB6D24(v67, v32, v86);
          sub_248175730();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v70 + 12) = 2080;
          unint64_t v71 = v89;
          swift_bridgeObjectRetain();
          uint64_t v72 = v77;
          *(void *)&long long v87 = sub_247FB6D24(v77, v71, v86);
          uint64_t v30 = (uint64_t)v83;
          sub_248175730();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_247F93000, v68, v69, "Failed to unpack due to topic identifiers not matching: %s != %s", (uint8_t *)v70, 0x16u);
          uint64_t v73 = v82;
          swift_arrayDestroy();
          MEMORY[0x24C574E00](v73, -1, -1);
          MEMORY[0x24C574E00](v70, -1, -1);

          uint64_t v74 = v78;
        }
        else
        {

          unint64_t v71 = v89;
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          uint64_t v74 = v67;
          uint64_t v72 = v77;
        }
        type metadata accessor for MessageUnpacker.Failure();
        swift_getWitnessTable();
        swift_allocError();
        *uint64_t v75 = v74;
        v75[1] = v32;
        v75[2] = v72;
        v75[3] = v71;
LABEL_41:
        swift_willThrow();
        return sub_247FB6CCC(v30, v79);
      }
    }
    else
    {
      sub_247FB33D4((uint64_t)&v87, (uint64_t *)&unk_26B13BED0);
    }
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_248174B70();
    os_log_type_t v55 = sub_2481755D0();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v78 = v33;
      long long v57 = (uint8_t *)v56;
      uint64_t v58 = swift_slowAlloc();
      v86[0] = v58;
      *(_DWORD *)long long v57 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)&long long v87 = sub_247FB6D24(v78, v32, v86);
      sub_248175730();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_247F93000, v54, v55, "Failed to unpack due to missing topic id when expected: %s", v57, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v58, -1, -1);
      MEMORY[0x24C574E00](v57, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    type metadata accessor for MessageUnpacker.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *(_OWORD *)uint64_t v59 = xmmword_24817A5F0;
    *(void *)(v59 + 16) = 0;
    *(void *)(v59 + 24) = 0;
    goto LABEL_41;
  }
LABEL_29:
  uint64_t v48 = (uint64_t)v83;
  sub_247FBB338(v6 + *(int *)(a2 + 36), (uint64_t)v83, &qword_2692D58F0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v48, 1, v82) == 1)
  {
    sub_247FB33D4(v48, &qword_2692D58F0);
  }
  else
  {
    sub_247FB738C(v48, v89);
    uint64_t v49 = sub_248174B70();
    os_log_type_t v50 = sub_2481755C0();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v51 = 0;
      _os_log_impl(&dword_247F93000, v49, v50, "Incoming signature will be validated", v51, 2u);
      MEMORY[0x24C574E00](v51, -1, -1);
    }

    *(void *)&long long v87 = 26483;
    *((void *)&v87 + 1) = 0xE200000000000000;
    sub_248175810();
    if (*(void *)(a1 + 16) && (unint64_t v52 = sub_247FB6460((uint64_t)v86), (v53 & 1) != 0))
    {
      sub_247FB8B14(*(void *)(a1 + 56) + 32 * v52, (uint64_t)&v87);
    }
    else
    {
      long long v87 = 0u;
      long long v88 = 0u;
    }
    sub_247FB84B0((uint64_t)v86);
    if (*((void *)&v88 + 1))
    {
      int v60 = swift_dynamicCast();
      if (v60) {
        uint64_t v61 = v84;
      }
      else {
        uint64_t v61 = 0;
      }
      if (v60) {
        unint64_t v62 = v85;
      }
      else {
        unint64_t v62 = 0xF000000000000000;
      }
    }
    else
    {
      sub_247FB33D4((uint64_t)&v87, (uint64_t *)&unk_26B13BED0);
      uint64_t v61 = 0;
      unint64_t v62 = 0xF000000000000000;
    }
    uint64_t v63 = *(void *)(a2 + 16);
    uint64_t v64 = *(void *)(a2 + 24);
    uint64_t v65 = v89;
    sub_247FB85F4(v61, v62, v30, v79, v89, v63, v64);
    sub_247FB33D4(v65, &qword_2692D58F8);
    if (v5)
    {
      sub_247FB6CCC(v30, v79);
      return sub_247FB846C(v61, v62);
    }
    sub_247FB846C(v61, v62);
  }
  unint64_t v66 = v79;
  sub_2481745C0();
  return sub_247FB6CCC(v30, v66);
}

uint64_t sub_247FB6364@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return MessageUnpacker.unpack(_:)(*a1, a2, a3);
}

uint64_t sub_247FB6380(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_247FB6390(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

unint64_t sub_247FB63CC(uint64_t a1)
{
  sub_248175160();
  sub_248175E50();
  sub_2481751A0();
  uint64_t v2 = sub_248175EC0();
  swift_bridgeObjectRelease();
  return sub_247FB65EC(a1, v2);
}

unint64_t sub_247FB6460(uint64_t a1)
{
  uint64_t v2 = sub_2481757F0();
  return sub_247FB6764(a1, v2);
}

unint64_t sub_247FB64A4(uint64_t a1, uint64_t a2)
{
  sub_248175E50();
  sub_2481751A0();
  uint64_t v4 = sub_248175EC0();
  return sub_247FB682C(a1, a2, v4);
}

unint64_t sub_247FB651C(unsigned __int8 a1)
{
  sub_248175E50();
  sub_248175E70();
  uint64_t v2 = sub_248175EC0();
  return sub_247FB6910(a1, v2);
}

unint64_t sub_247FB6588(uint64_t a1)
{
  sub_2481759A0();
  uint64_t v2 = sub_2481750A0();
  return sub_247FB69B0(a1, v2);
}

unint64_t sub_247FB65EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_248175160();
    uint64_t v8 = v7;
    if (v6 == sub_248175160() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_248175CE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_248175160();
          uint64_t v15 = v14;
          if (v13 == sub_248175160() && v15 == v16) {
            break;
          }
          char v18 = sub_248175CE0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_247FB6764(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_247FBB220(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x24C573CF0](v9, a1);
      sub_247FB84B0((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_247FB682C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_248175CE0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_248175CE0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_247FB6910(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_247FB69B0(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_2481759A0();
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_248175100();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_247FB6B48(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_247FB6B70(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_247FB6D24(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_248175730();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_247FB6C20(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_247FB6C78()
{
  unint64_t result = qword_2692D5908;
  if (!qword_2692D5908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5908);
  }
  return result;
}

uint64_t sub_247FB6CCC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_247FB6D24(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_247FB6DF8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_247FB8B14((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_247FB8B14((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_247FB6DF8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_248175740();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_247FB6FB4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_2481758D0();
  if (!v8)
  {
    sub_2481759B0();
    __break(1u);
LABEL_17:
    uint64_t result = sub_248175A10();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_247FB6FB4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_247FB704C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_247FB722C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_247FB722C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_247FB704C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_247FB71C4(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_248175860();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_2481759B0();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_2481751E0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_248175A10();
    __break(1u);
LABEL_14:
    uint64_t result = sub_2481759B0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_247FB71C4(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5B18);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_247FB722C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5B18);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_248175A10();
  __break(1u);
  return result;
}

unsigned char **sub_247FB737C(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_247FB738C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_247FB73F4(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5B00);
  char v42 = a2;
  uint64_t v6 = sub_2481759F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v40) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v41 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v41 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v40)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v41 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v40) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v41 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_22:
    unint64_t v25 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v5 + 56) + 40 * v20;
    if (v42)
    {
      long long v29 = *(_OWORD *)v28;
      long long v30 = *(_OWORD *)(v28 + 16);
      uint64_t v45 = *(void *)(v28 + 32);
      long long v43 = v29;
      long long v44 = v30;
    }
    else
    {
      sub_247FBB220(v28, (uint64_t)&v43);
      swift_bridgeObjectRetain();
    }
    sub_248175E50();
    sub_2481751A0();
    uint64_t result = sub_248175EC0();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v32) & ~*(void *)(v11 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v11 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v14 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v27;
    v15[1] = v26;
    uint64_t v16 = *(void *)(v7 + 56) + 40 * v14;
    long long v17 = v43;
    long long v18 = v44;
    *(void *)(v16 + 32) = v45;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v39;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v22, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_247FB772C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AC0);
  char v38 = a2;
  uint64_t v6 = sub_2481759F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          unint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    long long v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    unint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_248175E50();
    sub_2481751A0();
    uint64_t result = sub_248175EC0();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *long long v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_247FB7A3C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AE0);
  uint64_t result = sub_2481759F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_248175E50();
      sub_248175E70();
      uint64_t result = sub_248175EC0();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_247FB7D04(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_247FB64A4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_18;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24804E3C0();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      return sub_247FBB27C(a1, v19);
    }
    goto LABEL_13;
  }
  sub_247FB73F4(v15, a4 & 1);
  unint64_t v21 = sub_247FB64A4(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_19:
    uint64_t result = sub_248175D80();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_13:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  unint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *unint64_t v23 = a2;
  v23[1] = a3;
  uint64_t v24 = v18[7] + 40 * v12;
  long long v25 = *(_OWORD *)a1;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(void *)(v24 + 32) = *(void *)(a1 + 32);
  *(_OWORD *)uint64_t v24 = v25;
  *(_OWORD *)(v24 + 16) = v26;
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18[2] = v29;
  return swift_bridgeObjectRetain();
}

void sub_247FB7E94(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_247FB64A4(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24804E5B8();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_247FB772C(v15, a4 & 1);
  unint64_t v20 = sub_247FB64A4(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_248175D80();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v22 = (uint64_t *)(v18[6] + 16 * v12);
  *char v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;
  swift_bridgeObjectRetain();
}

uint64_t sub_247FB8004(uint64_t a1, unsigned __int8 a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_247FB651C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24804E76C();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      void v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_247FB7A3C(result, a3 & 1);
  uint64_t result = sub_247FB651C(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AD8);
  uint64_t result = sub_248175D80();
  __break(1u);
  return result;
}

char *sub_247FB8134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  MEMORY[0x270FA5388](v6);
  return sub_247FB5360(a2, a3);
}

uint64_t sub_247FB8458(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_247FB6C20(a1, a2);
  }
  return a1;
}

uint64_t sub_247FB846C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_247FB6CCC(a1, a2);
  }
  return a1;
}

uint64_t sub_247FB8480(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t type metadata accessor for MessageUnpacker()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_247FB84B0(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for MessageUnpacker.Failure()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_247FB851C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5AE0);
    long long v3 = (void *)sub_248175A00();
    for (int64_t i = (void *)(a1 + 40); ; i += 2)
    {
      unsigned __int8 v5 = *((unsigned char *)i - 8);
      uint64_t v6 = *i;
      unint64_t result = sub_247FB651C(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v3[6] + result) = v5;
      *(void *)(v3[7] + 8 * result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

void sub_247FB85F4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v42 = a7;
  uint64_t v36 = a4;
  uint64_t v37 = a6;
  uint64_t v35 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
  MEMORY[0x270FA5388](v10 - 8);
  BOOL v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_248174EA0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  char v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 60 == 15)
  {
    if (qword_2692D4D50 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_248174B90();
    __swift_project_value_buffer(v17, (uint64_t)qword_2692D58D8);
    uint64_t v18 = sub_248174B70();
    os_log_type_t v19 = sub_2481755D0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_247F93000, v18, v19, "** Incoming message was not signed (but expected) **", v20, 2u);
      MEMORY[0x24C574E00](v20, -1, -1);
    }

    type metadata accessor for MessageUnpacker.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *(_OWORD *)uint64_t v21 = xmmword_24817A610;
    *(void *)(v21 + 16) = 0;
    *(void *)(v21 + 24) = 0;
    swift_willThrow();
    return;
  }
  unint64_t v22 = a2;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  sub_247FBB338(a5 + *(int *)(v23 + 40), (uint64_t)v12, &qword_2692D5928);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_247FB6C20(a1, a2);
    sub_247FB33D4((uint64_t)v12, &qword_2692D5928);
LABEL_15:
    if (qword_2692D4D50 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_248174B90();
    __swift_project_value_buffer(v29, (uint64_t)qword_2692D58D8);
    char v30 = sub_248174B70();
    os_log_type_t v31 = sub_2481755D0();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v32 = 0;
      _os_log_impl(&dword_247F93000, v30, v31, "** Incoming message signature is not valid (and enforced) **", v32, 2u);
      MEMORY[0x24C574E00](v32, -1, -1);
    }

    type metadata accessor for MessageUnpacker.Failure();
    swift_getWitnessTable();
    swift_allocError();
    *(_OWORD *)uint64_t v33 = xmmword_24817A600;
    *(void *)(v33 + 16) = 0;
    *(void *)(v33 + 24) = 0;
    swift_willThrow();
    sub_247FB846C(a1, v22);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  uint64_t v40 = v35;
  uint64_t v41 = v36;
  uint64_t v38 = a1;
  unint64_t v39 = a2;
  sub_247FB6C20(a1, a2);
  sub_247FBB1CC();
  char v24 = sub_248174E70();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if ((v24 & 1) == 0) {
    goto LABEL_15;
  }
  if (qword_2692D4D50 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_248174B90();
  __swift_project_value_buffer(v25, (uint64_t)qword_2692D58D8);
  long long v26 = sub_248174B70();
  os_log_type_t v27 = sub_2481755C0();
  if (os_log_type_enabled(v26, v27))
  {
    BOOL v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v28 = 0;
    _os_log_impl(&dword_247F93000, v26, v27, "Validated signature", v28, 2u);
    MEMORY[0x24C574E00](v28, -1, -1);
  }
  sub_247FB846C(a1, v22);
}

uint64_t sub_247FB8B14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_247FB8B70(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t dispatch thunk of MessagePacking.pack(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MessageUnpacking.unpack(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_247FB8BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_247FB8BEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_247FB8C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

void sub_247FB8C1C()
{
  if (!qword_2692D59B8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D58F8);
    unint64_t v0 = sub_248175700();
    if (!v1) {
      atomic_store(v0, qword_2692D59B8);
    }
  }
}

void sub_247FB8C78()
{
  sub_247FB8C1C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_247FB8D1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v39 = v11;
      uint64_t v40 = v12;
      uint64_t v14 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v14;
      *((unsigned char *)v9 + 16) = *((unsigned char *)v10 + 16);
      uint64_t v15 = *(int *)(v11 + 36);
      uint64_t v41 = v9;
      __dst = (char *)v9 + v15;
      char v16 = (char *)v10 + v15;
      uint64_t v17 = sub_248174E60();
      uint64_t v18 = *(void *)(v17 - 8);
      os_log_type_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      swift_bridgeObjectRetain();
      if (v19(v16, 1, v17))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
        memcpy(__dst, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 16))(__dst, v16, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
      }
      uint64_t v21 = *(int *)(v39 + 40);
      unint64_t v22 = (char *)v41 + v21;
      uint64_t v23 = (char *)v10 + v21;
      uint64_t v24 = sub_248174EA0();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
        memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      uint64_t v27 = *(int *)(v39 + 44);
      BOOL v28 = (char *)v41 + v27;
      uint64_t v29 = (char *)v10 + v27;
      uint64_t v30 = sub_248174EF0();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
    }
    uint64_t v33 = *(int *)(a3 + 40);
    uint64_t v34 = (uint64_t *)((char *)a1 + v33);
    uint64_t v35 = (uint64_t *)((char *)a2 + v33);
    uint64_t v36 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v36;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_247FB917C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = v4 + v5[9];
    uint64_t v7 = sub_248174E60();
    uint64_t v8 = *(void *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    }
    uint64_t v9 = v4 + v5[10];
    uint64_t v10 = sub_248174EA0();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v12 = v4 + v5[11];
    uint64_t v13 = sub_248174EF0();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
  }
  return swift_bridgeObjectRelease();
}

void *sub_247FB93D0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  swift_retain();
  uint64_t v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v37 = v10;
    uint64_t v38 = v3;
    uint64_t v39 = v4;
    uint64_t v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    *((unsigned char *)v7 + 16) = *((unsigned char *)v8 + 16);
    uint64_t v13 = v9[9];
    __dst = (char *)v7 + v13;
    uint64_t v14 = (char *)v8 + v13;
    uint64_t v15 = sub_248174E60();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
    }
    uint64_t v19 = v9[10];
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)v8 + v19;
    uint64_t v22 = sub_248174EA0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v3 = v38;
    uint64_t v4 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    uint64_t v25 = v9[11];
    uint64_t v26 = (char *)v7 + v25;
    uint64_t v27 = (char *)v8 + v25;
    uint64_t v28 = sub_248174EF0();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v37 + 56))(v7, 0, 1, v9);
  }
  uint64_t v31 = *(int *)(v3 + 40);
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)v4 + v31);
  uint64_t v34 = v33[1];
  *uint64_t v32 = *v33;
  v32[1] = v34;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_247FB97E4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (uint64_t)v5 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_247FB33D4(v7, &qword_2692D58F8);
      goto LABEL_7;
    }
    uint64_t v69 = a3;
    unint64_t v71 = v4;
    *(void *)uint64_t v7 = *(void *)v8;
    *(void *)(v7 + 8) = *((void *)v8 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v7 + 16) = v8[16];
    uint64_t v23 = v9[9];
    uint64_t v24 = (void *)(v7 + v23);
    uint64_t v25 = &v8[v23];
    uint64_t v26 = sub_248174E60();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
    __dsta = v24;
    LODWORD(v24) = v28(v24, 1, v26);
    int v29 = v28(v25, 1, v26);
    if (v24)
    {
      if (v29)
      {
        size_t v30 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v31 = __dsta;
LABEL_23:
        memcpy(v31, v25, v30);
        goto LABEL_26;
      }
      (*(void (**)(void *, char *, uint64_t))(v27 + 16))(__dsta, v25, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dsta, 0, 1, v26);
    }
    else
    {
      if (v29)
      {
        (*(void (**)(void *, uint64_t))(v27 + 8))(__dsta, v26);
        size_t v30 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v31 = __dsta;
        goto LABEL_23;
      }
      (*(void (**)(void *, char *, uint64_t))(v27 + 24))(__dsta, v25, v26);
    }
LABEL_26:
    uint64_t v48 = v9[10];
    uint64_t v49 = (void *)(v7 + v48);
    os_log_type_t v50 = &v8[v48];
    uint64_t v51 = sub_248174EA0();
    uint64_t v52 = *(void *)(v51 - 8);
    char v53 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v52 + 48);
    __dstb = v49;
    LODWORD(v49) = v53(v49, 1, v51);
    int v54 = v53(v50, 1, v51);
    if (v49)
    {
      if (!v54)
      {
        (*(void (**)(void *, char *, uint64_t))(v52 + 16))(__dstb, v50, v51);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v52 + 56))(__dstb, 0, 1, v51);
        goto LABEL_34;
      }
      size_t v55 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      uint64_t v56 = __dstb;
    }
    else
    {
      if (!v54)
      {
        (*(void (**)(void *, char *, uint64_t))(v52 + 24))(__dstb, v50, v51);
        goto LABEL_34;
      }
      (*(void (**)(void *, uint64_t))(v52 + 8))(__dstb, v51);
      size_t v55 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      uint64_t v56 = __dstb;
    }
    memcpy(v56, v50, v55);
LABEL_34:
    a3 = v69;
    uint64_t v57 = v9[11];
    uint64_t v58 = (void *)(v7 + v57);
    uint64_t v59 = &v8[v57];
    uint64_t v60 = sub_248174EF0();
    uint64_t v61 = *(void *)(v60 - 8);
    unint64_t v62 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v61 + 48);
    int v63 = v62(v58, 1, v60);
    int v64 = v62(v59, 1, v60);
    uint64_t v4 = v71;
    if (v63)
    {
      if (!v64)
      {
        (*(void (**)(void *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        goto LABEL_20;
      }
    }
    else
    {
      if (!v64)
      {
        (*(void (**)(void *, char *, uint64_t))(v61 + 24))(v58, v59, v60);
        goto LABEL_20;
      }
      (*(void (**)(void *, uint64_t))(v61 + 8))(v58, v60);
    }
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
    uint64_t v21 = v58;
    uint64_t v22 = v59;
    goto LABEL_8;
  }
  if (v13)
  {
LABEL_7:
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v21 = (void *)v7;
    uint64_t v22 = v8;
LABEL_8:
    memcpy(v21, v22, v20);
    goto LABEL_20;
  }
  uint64_t v70 = v4;
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *((void *)v8 + 1);
  *(unsigned char *)(v7 + 16) = v8[16];
  uint64_t v14 = v9[9];
  __dst = (void *)(v7 + v14);
  __src = v5;
  uint64_t v15 = &v8[v14];
  uint64_t v16 = sub_248174E60();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(__dst, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
  }
  uint64_t v32 = v9[10];
  uint64_t v33 = (void *)(v7 + v32);
  uint64_t v34 = &v8[v32];
  uint64_t v35 = sub_248174EA0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v5 = __src;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  uint64_t v4 = v70;
  uint64_t v38 = v9[11];
  uint64_t v39 = (void *)(v7 + v38);
  uint64_t v40 = &v8[v38];
  uint64_t v41 = sub_248174EF0();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_20:
  uint64_t v44 = *(int *)(a3 + 40);
  uint64_t v45 = (void *)((char *)v5 + v44);
  uint64_t v46 = (void *)((char *)v4 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_247FBA09C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v31 = v3;
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    v7[16] = v8[16];
    uint64_t v12 = v9[9];
    int v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    uint64_t v15 = sub_248174E60();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    uint64_t v18 = v9[10];
    uint64_t v19 = &v7[v18];
    size_t v20 = &v8[v18];
    uint64_t v21 = sub_248174EA0();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    uint64_t v24 = v9[11];
    uint64_t v25 = &v7[v24];
    uint64_t v26 = &v8[v24];
    uint64_t v27 = sub_248174EF0();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v3 = v31;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(v3 + 40)) = *(_OWORD *)((char *)a2 + *(int *)(v3 + 40));
  return a1;
}

void *sub_247FBA488(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2;
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (uint64_t)a1 + v6;
  uint64_t v8 = (char *)v4 + v6;
  uint64_t v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F8);
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_247FB33D4(v7, &qword_2692D58F8);
      goto LABEL_7;
    }
    uint64_t v67 = v4;
    uint64_t v72 = a3;
    uint64_t v23 = *((void *)v8 + 1);
    *(void *)uint64_t v7 = *(void *)v8;
    *(void *)(v7 + 8) = v23;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v7 + 16) = v8[16];
    uint64_t v24 = v9[9];
    uint64_t v25 = (void *)(v7 + v24);
    uint64_t v26 = &v8[v24];
    uint64_t v27 = sub_248174E60();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
    uint64_t v69 = v25;
    LODWORD(v25) = v29(v25, 1, v27);
    int v30 = v29(v26, 1, v27);
    if (v25)
    {
      if (v30)
      {
        size_t v31 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v32 = v69;
LABEL_23:
        memcpy(v32, v26, v31);
        goto LABEL_26;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v28 + 32))(v69, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v69, 0, 1, v27);
    }
    else
    {
      if (v30)
      {
        (*(void (**)(void *, uint64_t))(v28 + 8))(v69, v27);
        size_t v31 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920) - 8) + 64);
        uint64_t v32 = v69;
        goto LABEL_23;
      }
      (*(void (**)(void *, unsigned char *, uint64_t))(v28 + 40))(v69, v26, v27);
    }
LABEL_26:
    uint64_t v4 = v67;
    uint64_t v51 = v9[10];
    uint64_t v52 = (void *)(v7 + v51);
    char v53 = &v8[v51];
    uint64_t v54 = sub_248174EA0();
    uint64_t v68 = *(void *)(v54 - 8);
    size_t v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v68 + 48);
    uint64_t v70 = v52;
    LODWORD(v52) = v55(v52, 1, v54);
    int v56 = v55(v53, 1, v54);
    if (v52)
    {
      if (!v56)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v68 + 32))(v70, v53, v54);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v70, 0, 1, v54);
        goto LABEL_34;
      }
      size_t v57 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      uint64_t v58 = v70;
    }
    else
    {
      if (!v56)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v68 + 40))(v70, v53, v54);
        goto LABEL_34;
      }
      (*(void (**)(void *, uint64_t))(v68 + 8))(v70, v54);
      size_t v57 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928) - 8) + 64);
      uint64_t v58 = v70;
    }
    memcpy(v58, v53, v57);
LABEL_34:
    uint64_t v59 = v9[11];
    uint64_t v60 = (void *)(v7 + v59);
    uint64_t v61 = &v8[v59];
    uint64_t v62 = sub_248174EF0();
    uint64_t v63 = *(void *)(v62 - 8);
    int v64 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v63 + 48);
    int v65 = v64(v60, 1, v62);
    int v66 = v64(v61, 1, v62);
    if (v65)
    {
      a3 = v72;
      if (!v66)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v63 + 32))(v60, v61, v62);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        goto LABEL_20;
      }
    }
    else
    {
      a3 = v72;
      if (!v66)
      {
        (*(void (**)(void *, unsigned char *, uint64_t))(v63 + 40))(v60, v61, v62);
        goto LABEL_20;
      }
      (*(void (**)(void *, uint64_t))(v63 + 8))(v60, v62);
    }
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_2692D5930) - 8) + 64);
    uint64_t v21 = v60;
    uint64_t v22 = v61;
    goto LABEL_8;
  }
  if (v13)
  {
LABEL_7:
    size_t v20 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0) - 8) + 64);
    uint64_t v21 = (void *)v7;
    uint64_t v22 = v8;
LABEL_8:
    memcpy(v21, v22, v20);
    goto LABEL_20;
  }
  uint64_t v71 = a3;
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  *(unsigned char *)(v7 + 16) = v8[16];
  uint64_t v14 = v9[9];
  uint64_t v15 = (void *)(v7 + v14);
  uint64_t v16 = &v8[v14];
  uint64_t v17 = sub_248174E60();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5920);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v33 = v9[10];
  uint64_t v34 = (void *)(v7 + v33);
  uint64_t v35 = &v8[v33];
  uint64_t v36 = sub_248174EA0();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5928);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v37 + 32))(v34, v35, v36);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  a3 = v71;
  uint64_t v39 = v9[11];
  uint64_t v40 = (void *)(v7 + v39);
  uint64_t v41 = &v8[v39];
  uint64_t v42 = sub_248174EF0();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(qword_2692D5930);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(v43 + 32))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  (*(void (**)(uint64_t, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_20:
  uint64_t v45 = *(int *)(a3 + 40);
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)v4 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *uint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247FBAD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247FBAD30);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_247FBADE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247FBADFC);
}

void *__swift_store_extra_inhabitant_indexTm(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D58F0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_247FBAEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

unint64_t destroy for SignInModel.State(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_247FBAF08(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_247FBAF64(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247FBB048(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247FBB0C4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_247FBB118(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_247FBB178(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_247FBB190(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

_OWORD *sub_247FBB1B4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_247FBB1C4()
{
  return swift_release();
}

unint64_t sub_247FBB1CC()
{
  unint64_t result = qword_2692D5AF8;
  if (!qword_2692D5AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5AF8);
  }
  return result;
}

uint64_t sub_247FBB220(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_247FBB27C(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_247FBB2D8()
{
  unint64_t result = qword_2692D5B10;
  if (!qword_2692D5B10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D5B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5B10);
  }
  return result;
}

uint64_t sub_247FBB338(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_247FBB444()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_26930EEA0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26930EEA0);
  return sub_248174B80();
}

uint64_t sub_247FBB4C4()
{
  uint64_t v0 = sub_248174B90();
  __swift_allocate_value_buffer(v0, qword_2692D5B28);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_2692D5B28);
  if (qword_2692D4D58 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26930EEA0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static _Coordinated.CommonError.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_11;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_11;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_11;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_11;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    default:
      if (v5 >= 4)
      {
        if (v2 == v4 && v3 == v5) {
          char v6 = 1;
        }
        else {
          char v6 = sub_248175CE0();
        }
      }
      else
      {
LABEL_11:
        char v6 = 0;
      }
      sub_247FBB6BC(v4, v5);
      sub_247FBB6BC(v2, v3);
      break;
  }
  sub_247FBB6D0(v2, v3);
  sub_247FBB6D0(v4, v5);
  return v6 & 1;
}

uint64_t sub_247FBB6BC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_247FBB6D0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_247FBB6E8(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v2 = (char *)&v5 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - v1);
  return sub_247FBB84C((uint64_t)v2);
}

uint64_t sub_247FBB7A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_247FBB84C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t (*sub_247FBB8F8())()
{
  return j__swift_endAccess;
}

uint64_t _Coordinated.receiver.getter()
{
  uint64_t v1 = *(void *)(v0 + *(void *)(*(void *)v0 + 104));
  swift_retain();
  return v1;
}

uint64_t sub_247FBB9AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 120));
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_247F98D68(v4);
}

uint64_t sub_247FBB9D8()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 128));
}

uint64_t sub_247FBB9F4(uint64_t result)
{
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 128)) = result;
  return result;
}

uint64_t sub_247FBBA10()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 136));
}

uint64_t sub_247FBBA2C(uint64_t result)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 136)) = result;
  return result;
}

uint64_t sub_247FBBA48()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 136);
  if (*(uint64_t *)((char *)v0 + v2) == -1)
  {
    *(uint64_t *)((char *)v0 + v2) = 0;
    uint64_t v1 = *v0;
  }
  uint64_t v3 = *(void *)(v1 + 136);
  uint64_t v4 = *(uint64_t *)((char *)v0 + v3);
  BOOL v5 = __CFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    *(uint64_t *)((char *)v0 + v3) = v6;
    return *(uint64_t *)((char *)v0 + *(void *)(*v0 + 136));
  }
  return result;
}

uint64_t sub_247FBBAB8(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *(void *)(*(void *)v1 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v3 = sub_248175ED0();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FBBC28, v1, 0);
}

uint64_t sub_247FBBC28()
{
  uint64_t v29 = v0;
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = sub_248174B90();
  v0[16] = __swift_project_value_buffer(v5, (uint64_t)qword_2692D5B28);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[17] = v6;
  v0[18] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v3);
  uint64_t v7 = sub_248174B70();
  os_log_type_t v8 = sub_2481755C0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[15];
  if (v9)
  {
    uint64_t v11 = v0[14];
    uint64_t v24 = v0[12];
    log = v7;
    uint64_t v12 = v0[11];
    os_log_type_t type = v8;
    int v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)int v13 = 136315138;
    v6(v11, v10, v12);
    uint64_t v14 = sub_248175190();
    v0[4] = sub_247FB6D24(v14, v15, &v28);
    sub_248175730();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v16(v10, v12);
    uint64_t v7 = log;
    _os_log_impl(&dword_247F93000, log, type, "Received _Coordinated value update: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v26, -1, -1);
    MEMORY[0x24C574E00](v13, -1, -1);
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0[12] + 8);
    v16(v10, v0[11]);
  }

  v0[19] = v16;
  if (*(unsigned char *)(v0[6] + *(void *)(*(void *)v0[6] + 128)))
  {
    uint64_t v17 = sub_248174B70();
    os_log_type_t v18 = sub_2481755D0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl(&dword_247F93000, v17, v18, "_Coordinated value is actually invalidated, rejecting this update", v19, 2u);
      MEMORY[0x24C574E00](v19, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    size_t v20 = (uint64_t (*)(void))v0[1];
    return v20(0);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0[7] - 8) + 16))(v0[10], v0[5] + *(int *)(v0[11] + 32));
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[20] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_247FBC018;
    uint64_t v23 = v0[5];
    return sub_247FBCBE8(v23);
  }
}

uint64_t sub_247FBC018()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v4 = sub_247FBC7F0;
  }
  else {
    uint64_t v4 = sub_247FBC144;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247FBC144()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (**(void **)(v0 + 40) == *(void *)(v1 + *(void *)(*(void *)v1 + 136)))
  {
    uint64_t v2 = (int **)(v1 + *(void *)(*(void *)v1 + 120));
    uint64_t v3 = *v2;
    *(void *)(v0 + 176) = *v2;
    *(void *)(v0 + 184) = v2[1];
    if (v3)
    {
      sub_247F98D10((uint64_t)v3);
      os_log_type_t type = (uint64_t (*)(uint64_t))((char *)v3 + *v3);
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_247FBC4EC;
      uint64_t v5 = *(void *)(v0 + 80);
      return type(v5);
    }
    uint64_t v7 = sub_248174B70();
    uint64_t v17 = sub_2481755C0();
    if (os_log_type_enabled(v7, (os_log_type_t)v17))
    {
      os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v18 = 0;
      _os_log_impl(&dword_247F93000, v7, (os_log_type_t)v17, "Ignoring value update response because we do not have an active update handler", v18, 2u);
      uint64_t v16 = (uint64_t)v18;
      goto LABEL_11;
    }
  }
  else
  {
    (*(void (**)(void))(v0 + 136))(*(void *)(v0 + 104));
    swift_retain();
    uint64_t v7 = sub_248174B70();
    os_log_type_t v8 = sub_2481755D0();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void (**)(uint64_t *, uint64_t))(v0 + 152);
    uint64_t v11 = *(uint64_t **)(v0 + 104);
    uint64_t v12 = *(void *)(v0 + 88);
    uint64_t v13 = *(void *)(v0 + 48);
    if (v9)
    {
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134218240;
      os_log_type_t typea = v8;
      uint64_t v15 = *v11;
      v10(v11, v12);
      *(void *)(v0 + 16) = v15;
      sub_248175730();
      *(_WORD *)(v14 + 12) = 2048;
      *(void *)(v0 + 24) = *(void *)(v13 + *(void *)(*(void *)v13 + 136));
      sub_248175730();
      swift_release();
      _os_log_impl(&dword_247F93000, v7, typea, "Received update with sequence ID %llu but we're currently at %llu", (uint8_t *)v14, 0x16u);
      uint64_t v16 = v14;
LABEL_11:
      MEMORY[0x24C574E00](v16, -1, -1);
      goto LABEL_12;
    }
    v10(*(uint64_t **)(v0 + 104), *(void *)(v0 + 88));
    swift_release();
  }
LABEL_12:
  uint64_t v20 = *(void *)(v0 + 72);
  uint64_t v19 = *(void *)(v0 + 80);
  uint64_t v21 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22(0);
}

uint64_t sub_247FBC4EC(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  *(unsigned char *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FBC604, v2, 0);
}

uint64_t sub_247FBC604()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 200);
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  if (v1 == 1)
  {
    if (v4)
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_247F93000, v2, v3, "Clearing current update handler", v5, 2u);
      MEMORY[0x24C574E00](v5, -1, -1);
    }
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 64);
    uint64_t v10 = *(void *)(v0 + 48);

    uint64_t v11 = (uint64_t *)(v10 + *(void *)(*(void *)v10 + 120));
    uint64_t v12 = *v11;
    *uint64_t v11 = 0;
    v11[1] = 0;
    sub_247F98D68(v12);
    sub_247F98D68(v6);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  else
  {
    if (v4)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_247F93000, v2, v3, "Not clearing current update handler", v13, 2u);
      MEMORY[0x24C574E00](v13, -1, -1);
    }
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v14 = *(void *)(v0 + 80);
    uint64_t v16 = *(void *)(v0 + 64);
    sub_247F98D68(*(void *)(v0 + 176));

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v17(v1);
}

uint64_t sub_247FBC7F0()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 80);
  (*(void (**)(void *, void))(*(void *)(v0 + 72) + 8))(v2, *(void *)(v0 + 64));
  *uint64_t v2 = v1;
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = *(void *)(v0 + 48);
  if (**(void **)(v0 + 40) == *(void *)(v3 + *(void *)(*(void *)v3 + 136)))
  {
    BOOL v4 = (int **)(v3 + *(void *)(*(void *)v3 + 120));
    uint64_t v5 = *v4;
    *(void *)(v0 + 176) = *v4;
    *(void *)(v0 + 184) = v4[1];
    if (v5)
    {
      sub_247F98D10((uint64_t)v5);
      os_log_type_t type = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_247FBC4EC;
      uint64_t v7 = *(void *)(v0 + 80);
      return type(v7);
    }
    uint64_t v9 = sub_248174B70();
    uint64_t v19 = sub_2481755C0();
    if (os_log_type_enabled(v9, (os_log_type_t)v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl(&dword_247F93000, v9, (os_log_type_t)v19, "Ignoring value update response because we do not have an active update handler", v20, 2u);
      uint64_t v18 = (uint64_t)v20;
      goto LABEL_11;
    }
  }
  else
  {
    (*(void (**)(void))(v0 + 136))(*(void *)(v0 + 104));
    swift_retain();
    uint64_t v9 = sub_248174B70();
    os_log_type_t v10 = sub_2481755D0();
    BOOL v11 = os_log_type_enabled(v9, v10);
    uint64_t v12 = *(void (**)(uint64_t *, uint64_t))(v0 + 152);
    uint64_t v13 = *(uint64_t **)(v0 + 104);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v15 = *(void *)(v0 + 48);
    if (v11)
    {
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 134218240;
      os_log_type_t typea = v10;
      uint64_t v17 = *v13;
      v12(v13, v14);
      *(void *)(v0 + 16) = v17;
      sub_248175730();
      *(_WORD *)(v16 + 12) = 2048;
      *(void *)(v0 + 24) = *(void *)(v15 + *(void *)(*(void *)v15 + 136));
      sub_248175730();
      swift_release();
      _os_log_impl(&dword_247F93000, v9, typea, "Received update with sequence ID %llu but we're currently at %llu", (uint8_t *)v16, 0x16u);
      uint64_t v18 = v16;
LABEL_11:
      MEMORY[0x24C574E00](v18, -1, -1);
      goto LABEL_12;
    }
    v12(*(uint64_t **)(v0 + 104), *(void *)(v0 + 88));
    swift_release();
  }
LABEL_12:
  uint64_t v22 = *(void *)(v0 + 72);
  uint64_t v21 = *(void *)(v0 + 80);
  uint64_t v23 = *(void *)(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24(0);
}

uint64_t type metadata accessor for _Coordinated.ValueUpdate.Response()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_247FBCBE8(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2481748C0();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  v2[28] = *(void *)(v3 + 80);
  v2[29] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  v2[30] = type metadata accessor for _Coordinated.AsyncThrowingTapHandle();
  v2[31] = swift_getTupleTypeMetadata2();
  uint64_t v5 = sub_248175700();
  v2[32] = v5;
  v2[33] = *(void *)(v5 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FBCDB8, v1, 0);
}

uint64_t sub_247FBCDB8()
{
  uint64_t v56 = v0;
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_248174B90();
  *(void *)(v0 + 288) = __swift_project_value_buffer(v1, (uint64_t)qword_2692D5B28);
  swift_retain();
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    swift_beginAccess();
    sub_247FD16F4(&qword_2692D5B50);
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_248175040();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 152) = v5;
    sub_248175730();
    swift_release();
    _os_log_impl(&dword_247F93000, v2, v3, "Expected to pre-process value update with %ld taps", v4, 0xCu);
    MEMORY[0x24C574E00](v4, -1, -1);
  }
  else
  {
    swift_release();
  }

  uint64_t v6 = (uint64_t *)(*(void *)(v0 + 168) + *(void *)(**(void **)(v0 + 168) + 112));
  swift_beginAccess();
  uint64_t v7 = *v6;
  *(void *)(v0 + 296) = v7;
  char v8 = *(unsigned char *)(v7 + 32);
  *(unsigned char *)(v0 + 368) = v8;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << v8;
  if (-(-1 << v8) < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *(void *)(v7 + 64);
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v12 = 0;
    unint64_t v13 = __clz(__rbit64(v11));
    uint64_t v14 = (v11 - 1) & v11;
LABEL_10:
    uint64_t v15 = *(void *)(v0 + 272);
    uint64_t v16 = *(void *)(v0 + 248);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 184) + 16))(v15, *(void *)(v7 + 48) + *(void *)(*(void *)(v0 + 184) + 72) * v13, *(void *)(v0 + 176));
    *(void *)(v15 + *(int *)(v16 + 48)) = *(void *)(*(void *)(v7 + 56) + 8 * v13);
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    swift_retain();
    goto LABEL_17;
  }
  unint64_t v18 = 63 - v10;
  if ((unint64_t)(63 - v10) <= 0x7F)
  {
    uint64_t v12 = 0;
  }
  else
  {
    unint64_t v19 = *(void *)(v7 + 72);
    if (v19)
    {
      uint64_t v12 = 1;
LABEL_14:
      uint64_t v14 = (v19 - 1) & v19;
      unint64_t v13 = __clz(__rbit64(v19)) + (v12 << 6);
      goto LABEL_10;
    }
    if (v18 < 0xC0)
    {
      uint64_t v12 = 1;
    }
    else
    {
      unint64_t v19 = *(void *)(v7 + 80);
      if (v19)
      {
        uint64_t v12 = 2;
        goto LABEL_14;
      }
      if (v18 < 0x100)
      {
        uint64_t v12 = 2;
      }
      else
      {
        unint64_t v19 = *(void *)(v7 + 88);
        if (v19)
        {
          uint64_t v12 = 3;
          goto LABEL_14;
        }
        uint64_t v50 = 0;
        uint64_t v51 = v18 >> 6;
        uint64_t v52 = 4;
        if (v51 > 4) {
          uint64_t v52 = v51;
        }
        uint64_t v53 = v52 - 4;
        while (v53 != v50)
        {
          unint64_t v19 = *(void *)(v7 + 96 + 8 * v50++);
          if (v19)
          {
            uint64_t v12 = v50 + 3;
            goto LABEL_14;
          }
        }
        uint64_t v12 = v51 - 1;
      }
    }
  }
  uint64_t v17 = *(void *)(*(void *)(v0 + 248) - 8);
  (*(void (**)(void, uint64_t, uint64_t))(v17 + 56))(*(void *)(v0 + 272), 1, 1);
  uint64_t v14 = 0;
LABEL_17:
  *(void *)(v0 + 304) = v12;
  *(void *)(v0 + 312) = v14;
  uint64_t v20 = *(void *)(v0 + 280);
  uint64_t v21 = *(void *)(v0 + 248);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 264) + 32))(v20, *(void *)(v0 + 272), *(void *)(v0 + 256));
  int v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v20, 1, v21);
  uint64_t v23 = *(void *)(v0 + 280);
  uint64_t v25 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 216);
  if (v22 == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
  else
  {
    uint64_t v28 = *(void *)(v0 + 176);
    uint64_t v29 = *(void *)(v0 + 184);
    uint64_t v30 = *(void *)(v23 + *(int *)(*(void *)(v0 + 248) + 48));
    *(void *)(v0 + 320) = v30;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v24, v23, v28);
    size_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    *(void *)(v0 + 328) = v31;
    *(void *)(v0 + 336) = (v29 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v31(v25, v24, v28);
    swift_retain_n();
    uint64_t v32 = sub_248174B70();
    os_log_type_t v33 = sub_2481755C0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = *(void *)(v0 + 208);
      uint64_t v36 = *(void *)(v0 + 176);
      uint64_t v35 = *(void *)(v0 + 184);
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v55 = v38;
      *(_DWORD *)uint64_t v37 = 136315394;
      sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
      uint64_t v39 = sub_248175C30();
      *(void *)(v37 + 4) = sub_247FB6D24(v39, v40, &v55);
      swift_bridgeObjectRelease();
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
      v41(v34, v36);
      *(_WORD *)(v37 + 12) = 2080;
      *(void *)(v0 + 144) = v30;
      swift_retain();
      uint64_t v42 = sub_248175190();
      *(void *)(v37 + 14) = sub_247FB6D24(v42, v43, &v55);
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v32, v33, "Pre-processing value update with tap (id:%s): %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v38, -1, -1);
      MEMORY[0x24C574E00](v37, -1, -1);
    }
    else
    {
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 184) + 8);
      v41(*(void *)(v0 + 208), *(void *)(v0 + 176));

      swift_release_n();
    }
    *(void *)(v0 + 344) = v41;
    uint64_t v44 = *(void *)(v0 + 160);
    uint64_t v45 = *(int **)(v30 + 32);
    *(void *)(v0 + 40) = *(void *)(v0 + 240);
    *(void *)(v0 + 48) = &off_26FC3CFE0;
    *(void *)(v0 + 16) = v30;
    uint64_t v46 = type metadata accessor for _Coordinated.ValueUpdate.Response();
    uint64_t v47 = v45;
    uint64_t v48 = v44 + *(int *)(v46 + 32);
    uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t))((char *)v47 + *v47);
    swift_retain();
    uint64_t v49 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v49;
    *uint64_t v49 = v0;
    v49[1] = sub_247FBD56C;
    return v54(v0 + 16, v48);
  }
}

uint64_t sub_247FBD56C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 168);
    uint64_t v4 = sub_247FBDC74;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 168);
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
    uint64_t v4 = sub_247FBD694;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247FBD694()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 176);
  swift_release();
  uint64_t result = v1(v2, v3);
  int64_t v6 = *(void *)(v0 + 304);
  unint64_t v5 = *(void *)(v0 + 312);
  if (v5)
  {
    uint64_t v7 = (v5 - 1) & v5;
    unint64_t v8 = __clz(__rbit64(v5)) | (v6 << 6);
    uint64_t v9 = *(void *)(v0 + 296);
LABEL_3:
    uint64_t v10 = *(void *)(v0 + 272);
    uint64_t v11 = *(void *)(v0 + 248);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 184) + 16))(v10, *(void *)(v9 + 48) + *(void *)(*(void *)(v0 + 184) + 72) * v8, *(void *)(v0 + 176));
    *(void *)(v10 + *(int *)(v11 + 48)) = *(void *)(*(void *)(v9 + 56) + 8 * v8);
    uint64_t v12 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    swift_retain();
    goto LABEL_19;
  }
  int64_t v13 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  int64_t v14 = (unint64_t)((1 << *(unsigned char *)(v0 + 368)) + 63) >> 6;
  if (v13 < v14)
  {
    uint64_t v9 = *(void *)(v0 + 296);
    uint64_t v15 = v9 + 64;
    unint64_t v16 = *(void *)(v9 + 64 + 8 * v13);
    if (v16)
    {
LABEL_7:
      uint64_t v7 = (v16 - 1) & v16;
      unint64_t v8 = __clz(__rbit64(v16)) + (v13 << 6);
      int64_t v6 = v13;
      goto LABEL_3;
    }
    int64_t v17 = v6 + 2;
    ++v6;
    if (v13 + 1 < v14)
    {
      unint64_t v16 = *(void *)(v15 + 8 * v17);
      if (v16)
      {
        ++v13;
        goto LABEL_7;
      }
      int64_t v18 = v13 + 2;
      int64_t v6 = v13 + 1;
      if (v13 + 2 < v14)
      {
        unint64_t v16 = *(void *)(v15 + 8 * v18);
        if (v16)
        {
          v13 += 2;
          goto LABEL_7;
        }
        while (1)
        {
          int64_t v13 = v18 + 1;
          if (__OFADD__(v18, 1)) {
            break;
          }
          if (v13 >= v14)
          {
            int64_t v6 = v14 - 1;
            goto LABEL_18;
          }
          unint64_t v16 = *(void *)(v15 + 8 * v13);
          ++v18;
          if (v16) {
            goto LABEL_7;
          }
        }
LABEL_30:
        __break(1u);
        return result;
      }
    }
  }
LABEL_18:
  uint64_t v12 = *(void *)(*(void *)(v0 + 248) - 8);
  (*(void (**)(void, uint64_t, uint64_t))(v12 + 56))(*(void *)(v0 + 272), 1, 1);
  uint64_t v7 = 0;
LABEL_19:
  *(void *)(v0 + 304) = v6;
  *(void *)(v0 + 312) = v7;
  uint64_t v19 = *(void *)(v0 + 280);
  uint64_t v20 = *(void *)(v0 + 248);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 264) + 32))(v19, *(void *)(v0 + 272), *(void *)(v0 + 256));
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v19, 1, v20);
  uint64_t v22 = *(void *)(v0 + 280);
  uint64_t v24 = *(void *)(v0 + 208);
  uint64_t v23 = *(void *)(v0 + 216);
  if (v21 == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
  else
  {
    uint64_t v26 = *(void *)(v0 + 176);
    uint64_t v27 = *(void *)(v0 + 184);
    uint64_t v28 = *(void *)(v22 + *(int *)(*(void *)(v0 + 248) + 48));
    *(void *)(v0 + 320) = v28;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v23, v22, v26);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
    *(void *)(v0 + 328) = v29;
    *(void *)(v0 + 336) = (v27 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v29(v24, v23, v26);
    swift_retain_n();
    uint64_t v30 = sub_248174B70();
    os_log_type_t v31 = sub_2481755C0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = *(void *)(v0 + 208);
      uint64_t v34 = *(void *)(v0 + 176);
      uint64_t v33 = *(void *)(v0 + 184);
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v49 = v36;
      *(_DWORD *)uint64_t v35 = 136315394;
      sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
      uint64_t v37 = sub_248175C30();
      *(void *)(v35 + 4) = sub_247FB6D24(v37, v38, &v49);
      swift_bridgeObjectRelease();
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v39(v32, v34);
      *(_WORD *)(v35 + 12) = 2080;
      *(void *)(v0 + 144) = v28;
      swift_retain();
      uint64_t v40 = sub_248175190();
      *(void *)(v35 + 14) = sub_247FB6D24(v40, v41, &v49);
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_247F93000, v30, v31, "Pre-processing value update with tap (id:%s): %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v36, -1, -1);
      MEMORY[0x24C574E00](v35, -1, -1);
    }
    else
    {
      uint64_t v39 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 184) + 8);
      v39(*(void *)(v0 + 208), *(void *)(v0 + 176));

      swift_release_n();
    }
    *(void *)(v0 + 344) = v39;
    uint64_t v42 = *(void *)(v0 + 160);
    unint64_t v43 = *(int **)(v28 + 32);
    *(void *)(v0 + 40) = *(void *)(v0 + 240);
    *(void *)(v0 + 48) = &off_26FC3CFE0;
    *(void *)(v0 + 16) = v28;
    uint64_t v44 = type metadata accessor for _Coordinated.ValueUpdate.Response();
    uint64_t v45 = v43;
    uint64_t v46 = v42 + *(int *)(v44 + 32);
    uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t))((char *)v45 + *v45);
    swift_retain();
    uint64_t v47 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v47;
    *uint64_t v47 = v0;
    v47[1] = sub_247FBD56C;
    return v48(v0 + 16, v46);
  }
}

uint64_t sub_247FBDC74()
{
  uint64_t v99 = v0;
  uint64_t v1 = *(void **)(v0 + 360);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  *(void *)(v0 + 104) = v1;
  id v2 = v1;
  type metadata accessor for _Coordinated.HaltingTapError();
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 328);
    uint64_t v4 = *(void *)(v0 + 216);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 176);

    uint64_t v7 = v5;
    unint64_t v8 = *(void **)(v0 + 112);
    v3(v7, v4, v6);
    id v9 = v8;
    id v10 = v8;
    uint64_t v11 = sub_248174B70();
    os_log_type_t v12 = sub_2481755B0();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v15 = *(void *)(v0 + 176);
    if (v13)
    {
      id v96 = v8;
      uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
      log = v11;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v91 = (void *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      v98[0] = v94;
      *(_DWORD *)uint64_t v16 = 136315394;
      sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
      uint64_t v17 = sub_248175C30();
      *(void *)(v0 + 128) = sub_247FB6D24(v17, v18, v98);
      sub_248175730();
      swift_bridgeObjectRelease();
      v90(v14, v15);
      *(_WORD *)(v16 + 12) = 2112;
      swift_getWitnessTable();
      swift_allocError();
      *uint64_t v19 = v8;
      id v20 = v8;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 136) = v21;
      sub_248175730();
      *uint64_t v91 = v21;

      _os_log_impl(&dword_247F93000, log, v12, "Halting coordination for tap (id:%s): %@", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v91, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v94, -1, -1);
      MEMORY[0x24C574E00](v16, -1, -1);

      if (!v96) {
        goto LABEL_8;
      }
    }
    else
    {
      (*(void (**)(void, void))(v0 + 344))(*(void *)(v0 + 200), *(void *)(v0 + 176));

      if (!v8)
      {
LABEL_8:
        swift_getWitnessTable();
        swift_allocError();
        *unint64_t v41 = 0;
      }
    }
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v43 = *(void *)(v0 + 216);
    uint64_t v44 = *(void *)(v0 + 176);
    swift_willThrow();
    swift_release();
    v42(v43, v44);
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
LABEL_31:
    return v45();
  }
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 328);
  uint64_t v23 = *(void *)(v0 + 216);
  uint64_t v24 = *(void *)(v0 + 192);
  uint64_t v25 = *(void *)(v0 + 176);

  v22(v24, v23, v25);
  swift_retain_n();
  uint64_t v26 = sub_248174B70();
  os_log_type_t v27 = sub_2481755D0();
  BOOL v28 = os_log_type_enabled(v26, v27);
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
  uint64_t v30 = *(void *)(v0 + 320);
  if (v28)
  {
    os_log_t loga = *(os_log_t *)(v0 + 360);
    uint64_t v95 = *(void *)(v0 + 216);
    uint64_t v31 = *(void *)(v0 + 192);
    uint64_t v32 = *(void *)(v0 + 176);
    uint64_t v33 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v98[0] = v34;
    *(_DWORD *)uint64_t v33 = 136315394;
    sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
    uint64_t v35 = sub_248175C30();
    *(void *)(v33 + 4) = sub_247FB6D24(v35, v36, v98);
    swift_bridgeObjectRelease();
    v29(v31, v32);
    *(_WORD *)(v33 + 12) = 2080;
    *(void *)(v0 + 120) = v30;
    swift_retain();
    uint64_t v37 = sub_248175190();
    *(void *)(v33 + 14) = sub_247FB6D24(v37, v38, v98);
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v26, v27, "Ignoring non-halting error in tap (id:%s): %s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v34, -1, -1);
    MEMORY[0x24C574E00](v33, -1, -1);

    swift_release();
    uint64_t v39 = v95;
    uint64_t v40 = v32;
  }
  else
  {
    uint64_t v46 = *(void *)(v0 + 216);
    uint64_t v47 = *(void *)(v0 + 192);
    uint64_t v48 = *(void *)(v0 + 176);

    swift_release_n();
    v29(v47, v48);
    swift_release();
    uint64_t v39 = v46;
    uint64_t v40 = v48;
  }
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v29)(v39, v40);
  int64_t v51 = *(void *)(v0 + 304);
  unint64_t v50 = *(void *)(v0 + 312);
  if (v50)
  {
    uint64_t v52 = (v50 - 1) & v50;
    unint64_t v53 = __clz(__rbit64(v50)) | (v51 << 6);
    uint64_t v54 = *(void *)(v0 + 296);
LABEL_13:
    uint64_t v55 = *(void *)(v0 + 272);
    uint64_t v56 = *(void *)(v0 + 248);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 184) + 16))(v55, *(void *)(v54 + 48) + *(void *)(*(void *)(v0 + 184) + 72) * v53, *(void *)(v0 + 176));
    *(void *)(v55 + *(int *)(v56 + 48)) = *(void *)(*(void *)(v54 + 56) + 8 * v53);
    uint64_t v57 = *(void *)(v56 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v55, 0, 1, v56);
    swift_retain();
    goto LABEL_29;
  }
  int64_t v58 = v51 + 1;
  if (__OFADD__(v51, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  int64_t v59 = (unint64_t)((1 << *(unsigned char *)(v0 + 368)) + 63) >> 6;
  if (v58 < v59)
  {
    uint64_t v54 = *(void *)(v0 + 296);
    uint64_t v60 = v54 + 64;
    unint64_t v61 = *(void *)(v54 + 64 + 8 * v58);
    if (v61)
    {
LABEL_17:
      uint64_t v52 = (v61 - 1) & v61;
      unint64_t v53 = __clz(__rbit64(v61)) + (v58 << 6);
      int64_t v51 = v58;
      goto LABEL_13;
    }
    int64_t v62 = v51 + 2;
    ++v51;
    if (v58 + 1 < v59)
    {
      unint64_t v61 = *(void *)(v60 + 8 * v62);
      if (v61)
      {
        ++v58;
        goto LABEL_17;
      }
      int64_t v63 = v58 + 2;
      int64_t v51 = v58 + 1;
      if (v58 + 2 < v59)
      {
        unint64_t v61 = *(void *)(v60 + 8 * v63);
        if (v61)
        {
          v58 += 2;
          goto LABEL_17;
        }
        while (1)
        {
          int64_t v58 = v63 + 1;
          if (__OFADD__(v63, 1)) {
            break;
          }
          if (v58 >= v59)
          {
            int64_t v51 = v59 - 1;
            goto LABEL_28;
          }
          unint64_t v61 = *(void *)(v60 + 8 * v58);
          ++v63;
          if (v61) {
            goto LABEL_17;
          }
        }
LABEL_41:
        __break(1u);
        return result;
      }
    }
  }
LABEL_28:
  uint64_t v57 = *(void *)(*(void *)(v0 + 248) - 8);
  (*(void (**)(void, uint64_t, uint64_t))(v57 + 56))(*(void *)(v0 + 272), 1, 1);
  uint64_t v52 = 0;
LABEL_29:
  *(void *)(v0 + 304) = v51;
  *(void *)(v0 + 312) = v52;
  uint64_t v64 = *(void *)(v0 + 280);
  uint64_t v65 = *(void *)(v0 + 248);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 264) + 32))(v64, *(void *)(v0 + 272), *(void *)(v0 + 256));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v64, 1, v65) == 1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_31;
  }
  uint64_t v67 = *(void *)(v0 + 208);
  uint64_t v66 = *(void *)(v0 + 216);
  uint64_t v68 = *(void *)(v0 + 176);
  uint64_t v69 = *(void *)(v0 + 184);
  uint64_t v70 = *(void *)(*(void *)(v0 + 280) + *(int *)(*(void *)(v0 + 248) + 48));
  *(void *)(v0 + 320) = v70;
  (*(void (**)(uint64_t))(v69 + 32))(v66);
  uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
  *(void *)(v0 + 328) = v71;
  *(void *)(v0 + 336) = (v69 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v71(v67, v66, v68);
  swift_retain_n();
  uint64_t v72 = sub_248174B70();
  os_log_type_t v73 = sub_2481755C0();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = *(void *)(v0 + 208);
    uint64_t v76 = *(void *)(v0 + 176);
    uint64_t v75 = *(void *)(v0 + 184);
    uint64_t v77 = swift_slowAlloc();
    uint64_t v78 = swift_slowAlloc();
    v98[0] = v78;
    *(_DWORD *)uint64_t v77 = 136315394;
    sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
    uint64_t v79 = sub_248175C30();
    *(void *)(v77 + 4) = sub_247FB6D24(v79, v80, v98);
    swift_bridgeObjectRelease();
    uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v81(v74, v76);
    *(_WORD *)(v77 + 12) = 2080;
    *(void *)(v0 + 144) = v70;
    swift_retain();
    uint64_t v82 = sub_248175190();
    *(void *)(v77 + 14) = sub_247FB6D24(v82, v83, v98);
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v72, v73, "Pre-processing value update with tap (id:%s): %s", (uint8_t *)v77, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v78, -1, -1);
    MEMORY[0x24C574E00](v77, -1, -1);
  }
  else
  {
    uint64_t v81 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 184) + 8);
    v81(*(void *)(v0 + 208), *(void *)(v0 + 176));

    swift_release_n();
  }
  *(void *)(v0 + 344) = v81;
  uint64_t v84 = *(void *)(v0 + 160);
  unint64_t v85 = *(int **)(v70 + 32);
  *(void *)(v0 + 40) = *(void *)(v0 + 240);
  *(void *)(v0 + 48) = &off_26FC3CFE0;
  *(void *)(v0 + 16) = v70;
  uint64_t v86 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  long long v87 = v85;
  uint64_t v88 = v84 + *(int *)(v86 + 32);
  uint64_t v97 = (uint64_t (*)(uint64_t, uint64_t))((char *)v87 + *v87);
  swift_retain();
  uint64_t v89 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v89;
  *uint64_t v89 = v0;
  v89[1] = sub_247FBD56C;
  return v97(v0 + 16, v88);
}

uint64_t _Coordinated.__allocating_init(coordinating:receiver:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  _Coordinated.init(coordinating:receiver:)(a1, a2, a3);
  return v6;
}

uint64_t *_Coordinated.init(coordinating:receiver:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  swift_defaultActor_initialize();
  uint64_t v8 = *(void *)(*v3 + 112);
  sub_2481748C0();
  uint64_t v9 = *(void *)(v7 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  type metadata accessor for _Coordinated.AsyncThrowingTapHandle();
  swift_getTupleTypeMetadata2();
  sub_248175310();
  sub_247FD16F4(&qword_2692D5B50);
  *(uint64_t *)((char *)v3 + v8) = sub_248175030();
  id v10 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 120));
  *id v10 = 0;
  v10[1] = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 128)) = 0;
  *(uint64_t *)((char *)v3 + *(void *)(*v3 + 136)) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 96), a1, v9);
  uint64_t v11 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 104));
  *uint64_t v11 = a2;
  v11[1] = a3;
  return v3;
}

uint64_t sub_247FBEA3C()
{
  v1[9] = v0;
  v1[10] = *(void *)(*(void *)v0 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v2 = sub_248175ED0();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FBEB30, v0, 0);
}

uint64_t sub_247FBEB30()
{
  uint64_t v37 = v0;
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_248174B90();
  __swift_project_value_buffer(v1, (uint64_t)qword_2692D5B28);
  swift_retain_n();
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755B0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[9];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v36 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    v0[7] = v4;
    type metadata accessor for _Coordinated();
    swift_retain();
    uint64_t v7 = sub_248175190();
    v0[8] = sub_247FB6D24(v7, v8, &v36);
    sub_248175730();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v2, v3, "Invalidating %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v6, -1, -1);
    MEMORY[0x24C574E00](v5, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v9 = v0[9];
  *(unsigned char *)(v9 + *(void *)(*(void *)v9 + 128)) = 1;
  id v10 = (int **)(v9 + *(void *)(*(void *)v9 + 120));
  uint64_t v11 = *v10;
  v0[14] = *v10;
  os_log_type_t v12 = v10[1];
  v0[15] = v12;
  if (v11)
  {
    sub_247F98D10((uint64_t)v11);
    swift_retain();
    sub_247F98D10((uint64_t)v11);
    swift_retain();
    sub_247F98D10((uint64_t)v11);
    BOOL v13 = sub_248174B70();
    os_log_type_t v14 = sub_2481755B0();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t type = v14;
      uint64_t v16 = v0[9];
      uint64_t v15 = v0[10];
      uint64_t v17 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v36 = v33;
      *(_DWORD *)uint64_t v17 = 136315394;
      v0[4] = v16;
      type metadata accessor for _Coordinated();
      swift_retain();
      uint64_t v18 = sub_248175190();
      v0[5] = sub_247FB6D24(v18, v19, &v36);
      sub_248175730();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      id v20 = (void *)swift_allocObject();
      void v20[2] = v15;
      v20[3] = v11;
      v20[4] = v12;
      v0[2] = &unk_2692D5B68;
      v0[3] = v20;
      swift_getFunctionTypeMetadata1();
      swift_retain();
      uint64_t v21 = sub_248175190();
      v0[6] = sub_247FB6D24(v21, v22, &v36);
      sub_248175730();
      swift_bridgeObjectRelease();
      sub_247F98D68((uint64_t)v11);
      sub_247F98D68((uint64_t)v11);
      _os_log_impl(&dword_247F93000, v13, type, "Invalidating %s with currentUpdateHandler: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v33, -1, -1);
      MEMORY[0x24C574E00](v17, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_247F98D68((uint64_t)v11);
      sub_247F98D68((uint64_t)v11);
    }

    BOOL v28 = (uint64_t *)v0[13];
    type metadata accessor for _Coordinated.CommonError();
    swift_getWitnessTable();
    uint64_t v29 = swift_allocError();
    *uint64_t v30 = xmmword_24817A600;
    *BOOL v28 = v29;
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = (uint64_t (*)(uint64_t))((char *)v11 + *v11);
    uint64_t v31 = (void *)swift_task_alloc();
    v0[16] = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_247FBF17C;
    uint64_t v32 = v0[13];
    return v35(v32);
  }
  else
  {
    uint64_t v23 = sub_248174B70();
    os_log_type_t v24 = sub_2481755C0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_247F93000, v23, v24, "Nothing to actively invalidate", v25, 2u);
      MEMORY[0x24C574E00](v25, -1, -1);
    }

    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
}

uint64_t sub_247FBF17C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  uint64_t v2 = *(void *)(*(void *)v0 + 96);
  uint64_t v3 = *(void *)(*(void *)v0 + 88);
  uint64_t v4 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x270FA2498](sub_247FBF2E8, v4, 0);
}

uint64_t sub_247FBF2E8()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = (uint64_t *)(v0[9] + *(void *)(*(void *)v0[9] + 120));
  uint64_t v3 = *v2;
  *uint64_t v2 = 0;
  v2[1] = 0;
  sub_247F98D68(v3);
  sub_247F98D68(v1);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_247FBF380(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_247FBF45C;
  return v7(a2);
}

uint64_t sub_247FBF45C(char a1)
{
  uint64_t v3 = *(unsigned char **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_247FBF56C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FBF5B4, v1, 0);
}

uint64_t sub_247FBF5B4()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = *(void *)(v1 + 80);
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_247FBF684;
  return sub_247FBF824((uint64_t)sub_247FD10B4, v3);
}

uint64_t sub_247FBF684()
{
  uint64_t v2 = (void *)*v1;
  v2[7] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return MEMORY[0x270FA2498](sub_247FBF7C0, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_247FBF7C0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FBF824(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  v3[8] = *(void *)(*(void *)v2 + 80);
  v3[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for _Coordinated.ValueUpdate();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FBF92C, v2, 0);
}

uint64_t sub_247FBF92C()
{
  uint64_t v1 = (void (*)(uint64_t))v0[5];
  uint64_t v2 = v0[7] + *(void *)(*(void *)v0[7] + 96);
  swift_beginAccess();
  v1(v2);
  swift_endAccess();
  sub_247FC33D0();
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[8];
  uint64_t v6 = sub_247FBBA48();
  sub_247FBB7A8(v4);
  sub_247FBFCF4(v6, 0, v4, v5, v3);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[13] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_247FBFAB8;
  uint64_t v8 = v0[12];
  return sub_247FC2B20(v8, 0);
}

uint64_t sub_247FBFAB8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_247FBFC6C;
  }
  else {
    uint64_t v4 = sub_247FBFBE4;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247FBFBE4()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247FBFC6C()
{
  (*(void (**)(void, void))(v0[11] + 8))(v0[12], v0[10]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247FBFCF4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(unsigned char *)(a5 + 8) = a2;
  uint64_t v8 = type metadata accessor for _Coordinated.ValueUpdate();
  uint64_t v9 = *(void *)(a4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a5 + *(int *)(v8 + 32), a3, a4);
  uint64_t v10 = *(int *)(v8 + 36);
  uint64_t v11 = sub_247FC5DB4();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a3, a4);
  *(void *)(a5 + v10) = v11;
  return result;
}

uint64_t sub_247FBFDC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = *v5;
  return MEMORY[0x270FA2498](sub_247FBFE14, v5, 0);
}

uint64_t sub_247FBFE14()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  v4[2] = *(void *)(v1 + 80);
  v4[3] = v2;
  v4[4] = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[10] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_247FBFEF8;
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[2];
  return sub_247FC0098(v9, (uint64_t)sub_247FD1184, (uint64_t)v4, v7, v8, v6);
}

uint64_t sub_247FBFEF8()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[7];
    return MEMORY[0x270FA2498](sub_247FC0034, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_247FC0034()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FC0098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[10] = a6;
  v7[11] = v6;
  v7[8] = a4;
  v7[9] = a5;
  v7[6] = a2;
  v7[7] = a3;
  v7[5] = a1;
  uint64_t v8 = *(void *)(*(void *)v6 + 80);
  v7[12] = v8;
  v7[13] = swift_getTupleTypeMetadata2();
  v7[14] = swift_task_alloc();
  v7[15] = *(void *)(v8 - 8);
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for _Coordinated.ValueUpdate();
  v7[18] = v9;
  v7[19] = *(void *)(v9 - 8);
  v7[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  v7[21] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC025C, v6, 0);
}

uint64_t sub_247FC025C()
{
  uint64_t v1 = (void (*)(uint64_t))v0[6];
  uint64_t v2 = v0[11] + *(void *)(*(void *)v0[11] + 96);
  swift_beginAccess();
  v1(v2);
  swift_endAccess();
  sub_247FC33D0();
  v0[22] = 0;
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[11];
  uint64_t v18 = v0[10];
  uint64_t v8 = v0[9];
  uint64_t v17 = v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5B98);
  uint64_t v9 = (unsigned char *)swift_allocObject();
  v0[23] = v9;
  swift_defaultActor_initialize();
  uint64_t v10 = &v9[*(void *)(*(void *)v9 + 104)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5BA0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v9[112] = 0;
  uint64_t v12 = sub_2481753D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  type metadata accessor for _Coordinated();
  uint64_t WitnessTable = swift_getWitnessTable();
  os_log_type_t v14 = (void *)swift_allocObject();
  v14[2] = v7;
  v14[3] = WitnessTable;
  v14[4] = v18;
  v14[5] = v7;
  v14[6] = v17;
  v14[7] = v8;
  v14[8] = v9;
  swift_retain_n();
  swift_retain();
  swift_retain();
  v0[24] = sub_247FC299C(v4, (uint64_t)&unk_2692D5BB0, (uint64_t)v14);
  uint64_t v15 = sub_247FBBA48();
  sub_247FBB7A8(v5);
  sub_247FBFCF4(v15, 1, v5, v6, v3);
  return MEMORY[0x270FA2498](sub_247FC055C, v9, 0);
}

uint64_t sub_247FC055C()
{
  uint64_t v1 = v0[22];
  sub_247FD0BDC();
  if (v1)
  {
    v0[29] = v1;
    uint64_t v2 = v0[11];
    return MEMORY[0x270FA2498](sub_247FC0A20, v2, 0);
  }
  else
  {
    sub_247FAAA00(&qword_2692D5BB8, &qword_2692D5B98);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[25] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_247FC06B4;
    return MEMORY[0x270FA2360]();
  }
}

uint64_t sub_247FC06B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 184);
    uint64_t v4 = sub_247FC09FC;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = sub_247FC07CC;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247FC07CC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[27] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FC086C;
  uint64_t v3 = v0[20];
  return sub_247FC2B20(v3, v1);
}

uint64_t sub_247FC086C()
{
  uint64_t v2 = (void *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[11];
    return MEMORY[0x270FA2498](sub_247FC0DB0, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v2[30] = v4;
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    *uint64_t v4 = v2;
    v4[1] = sub_247FC0AEC;
    uint64_t v6 = v2[24];
    uint64_t v8 = v2[13];
    uint64_t v7 = v2[14];
    uint64_t v9 = MEMORY[0x263F8E4E0];
    return MEMORY[0x270FA1FA8](v7, v6, v8, v5, v9);
  }
}

uint64_t sub_247FC09FC()
{
  v0[29] = v0[26];
  return MEMORY[0x270FA2498](sub_247FC0A20, v0[11], 0);
}

uint64_t sub_247FC0A20()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_247FC0AEC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v4 = sub_247FC0E7C;
  }
  else {
    uint64_t v4 = sub_247FC0C18;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247FC0C18()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v11 = v0[18];
  uint64_t v12 = v0[20];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[14] + *(int *)(v0[13] + 48);
  (*(void (**)(uint64_t))(v3 + 32))(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v7, v8, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v5);
  sub_247FBB84C(v2);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_247FC0DB0()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_247FC0E7C()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_247FC0F48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[2] = a1;
  v8[3] = a4;
  v8[8] = *a4;
  return MEMORY[0x270FA2498](sub_247FC0F98, a4, 0);
}

uint64_t sub_247FC0F98()
{
  uint64_t v1 = *(void *)(v0 + 56);
  type metadata accessor for _Coordinated();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  long long v9 = *(_OWORD *)(v0 + 24);
  long long v4 = *(_OWORD *)(v0 + 40);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v9;
  *(_OWORD *)(v3 + 40) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *uint64_t v5 = v0;
  v5[1] = sub_247FC10F4;
  uint64_t v7 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v7, v9, WitnessTable, 0xD000000000000024, 0x8000000248190910, sub_247FD7580, v3, TupleTypeMetadata2);
}

uint64_t sub_247FC10F4()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[3];
    return MEMORY[0x270FA2498](sub_247FD7A08, v3, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_247FC1230(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v29 = a3;
  uint64_t v9 = *a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v9 + 80);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v14 = sub_248175370();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v28 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v28 - v17, a1, v14);
  unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v13;
  *(void *)(v20 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v20 + v19, v18, v14);
  uint64_t v21 = (void *)(v20 + ((v16 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v22 = v30;
  *uint64_t v21 = v29;
  v21[1] = v22;
  uint64_t v23 = (uint64_t *)((char *)a2 + *(void *)(*a2 + 120));
  uint64_t v24 = *v23;
  *uint64_t v23 = (uint64_t)&unk_2692D6600;
  v23[1] = v20;
  swift_retain();
  sub_247F98D68(v24);
  uint64_t v25 = sub_2481753D0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v31;
  swift_retain();
  sub_247FFC09C((uint64_t)v12, (uint64_t)&unk_2692D6610, (uint64_t)v26);
  return swift_release();
}

uint64_t sub_247FC14E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  v6[16] = swift_getTupleTypeMetadata2();
  v6[17] = swift_task_alloc();
  v6[18] = *(void *)(a6 - 8);
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  type metadata accessor for CoordinatedDecision();
  v6[22] = swift_task_alloc();
  v6[23] = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v9 = sub_248175ED0();
  v6[24] = v9;
  v6[25] = *(void *)(v9 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = *(void *)(a5 - 8);
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC173C, 0, 0);
}

uint64_t sub_247FC173C()
{
  (*(void (**)(void, void, void))(v0[25] + 16))(v0[26], v0[10], v0[24]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v1 = *(void **)v0[26];
    if (qword_2692D4D60 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_248174B90();
    __swift_project_value_buffer(v2, (uint64_t)qword_2692D5B28);
    id v3 = v1;
    id v4 = v1;
    uint64_t v5 = sub_248174B70();
    os_log_type_t v6 = sub_2481755D0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      id v9 = v1;
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      v0[3] = v10;
      sub_248175730();
      *uint64_t v8 = v10;

      _os_log_impl(&dword_247F93000, v5, v6, "Failed to coordinate with error: %@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v8, -1, -1);
      MEMORY[0x24C574E00](v7, -1, -1);
    }
    else
    {
    }
    v0[2] = v1;
    sub_248175370();
    sub_248175350();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
    return v16(1);
  }
  else
  {
    uint64_t v11 = (int *)v0[12];
    (*(void (**)(void, void, void))(v0[27] + 32))(v0[32], v0[26], v0[14]);
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[33] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_247FC1AE8;
    uint64_t v13 = v0[32];
    uint64_t v14 = v0[22];
    return v17(v14, v13);
  }
}

uint64_t sub_247FC1AE8()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247FC2318;
  }
  else {
    uint64_t v2 = sub_247FC1BFC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247FC1BFC()
{
  uint64_t v77 = v0;
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[15];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  int v5 = v4;
  if (v4 == 1)
  {
    if (qword_2692D4D60 != -1) {
      swift_once();
    }
    uint64_t v31 = v0[32];
    uint64_t v32 = v0[29];
    uint64_t v33 = v0[27];
    uint64_t v34 = v0[14];
    uint64_t v35 = sub_248174B90();
    __swift_project_value_buffer(v35, (uint64_t)qword_2692D5B28);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
    v36(v32, v31, v34);
    uint64_t v37 = sub_248174B70();
    os_log_type_t v38 = sub_2481755C0();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v40 = v0[32];
    if (v39)
    {
      uint64_t v41 = v0[29];
      uint64_t v42 = v0[30];
      uint64_t v70 = v0[27];
      uint64_t v43 = v0[14];
      uint64_t v73 = v0[32];
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v76 = v72;
      *(_DWORD *)uint64_t v44 = 136315138;
      v36(v42, v41, v43);
      uint64_t v45 = sub_248175190();
      v0[7] = sub_247FB6D24(v45, v46, &v76);
      sub_248175730();
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      v47(v41, v43);
      _os_log_impl(&dword_247F93000, v37, v38, "Continuing to wait for coordination to complete: %s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v72, -1, -1);
      MEMORY[0x24C574E00](v44, -1, -1);

      v47(v73, v43);
    }
    else
    {
      uint64_t v56 = v0[29];
      uint64_t v57 = v0[27];
      uint64_t v58 = v0[14];

      int64_t v59 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
      v59(v56, v58);
      v59(v40, v58);
    }
  }
  else
  {
    int v75 = v4;
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[21], v1, v3);
    if (qword_2692D4D60 != -1) {
      swift_once();
    }
    uint64_t v6 = v0[31];
    uint64_t v7 = v0[32];
    uint64_t v8 = v0[27];
    uint64_t v10 = v0[20];
    uint64_t v9 = v0[21];
    uint64_t v11 = v0[18];
    uint64_t v13 = v0[14];
    uint64_t v12 = v0[15];
    uint64_t v14 = sub_248174B90();
    __swift_project_value_buffer(v14, (uint64_t)qword_2692D5B28);
    uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v71(v6, v7, v13);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v15(v10, v9, v12);
    uint64_t v16 = sub_248174B70();
    os_log_type_t v17 = sub_2481755C0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[31];
    uint64_t v69 = v15;
    if (v18)
    {
      uint64_t v20 = v0[30];
      os_log_type_t type = v17;
      uint64_t v21 = v0[27];
      uint64_t v22 = v0[18];
      uint64_t v66 = v0[19];
      uint64_t v67 = v0[20];
      uint64_t v23 = v0[14];
      uint64_t v62 = v0[15];
      uint64_t v24 = swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      uint64_t v76 = v65;
      *(_DWORD *)uint64_t v24 = 136315394;
      log = v16;
      uint64_t v25 = v15;
      v71(v20, v19, v23);
      uint64_t v26 = sub_248175190();
      v0[8] = sub_247FB6D24(v26, v27, &v76);
      sub_248175730();
      swift_bridgeObjectRelease();
      uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v74(v19, v23);
      *(_WORD *)(v24 + 12) = 2080;
      uint64_t v28 = v67;
      v25(v66, v67, v62);
      uint64_t v29 = sub_248175190();
      v0[9] = sub_247FB6D24(v29, v30, &v76);
      sub_248175730();
      swift_bridgeObjectRelease();
      uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v68(v28, v62);
      uint64_t v16 = log;
      _os_log_impl(&dword_247F93000, log, type, "Accepting / completing coordination for inValue (%s) with outValue: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v65, -1, -1);
      MEMORY[0x24C574E00](v24, -1, -1);
    }
    else
    {
      uint64_t v48 = v0[20];
      uint64_t v49 = v0[18];
      uint64_t v50 = v0[15];
      uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v0[27] + 8);
      v74(v19, v0[14]);
      uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      v68(v48, v50);
    }

    uint64_t v51 = v0[32];
    uint64_t v52 = v0[21];
    uint64_t v54 = v0[14];
    uint64_t v53 = v0[15];
    uint64_t v55 = v0[17] + *(int *)(v0[16] + 48);
    v71(v0[17], v51, v54);
    v69(v55, v52, v53);
    sub_248175370();
    sub_248175360();
    v68(v52, v53);
    v74(v51, v54);
    int v5 = v75;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v60 = (uint64_t (*)(BOOL))v0[1];
  return v60(v5 != 1);
}

uint64_t sub_247FC2318()
{
  uint64_t v33 = v0;
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = v0[32];
  uint64_t v4 = v0[27];
  uint64_t v3 = v0[28];
  uint64_t v5 = v0[14];
  uint64_t v6 = sub_248174B90();
  __swift_project_value_buffer(v6, (uint64_t)qword_2692D5B28);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v3, v2, v5);
  id v8 = v1;
  id v9 = v1;
  uint64_t v10 = sub_248174B70();
  os_log_type_t v11 = sub_2481755D0();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = (void *)v0[34];
  if (v12)
  {
    uint64_t v14 = v0[30];
    uint64_t v16 = v0[27];
    uint64_t v15 = v0[28];
    log = v10;
    uint64_t v17 = v0[14];
    os_log_type_t type = v11;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = v31;
    *(_DWORD *)uint64_t v18 = 136315394;
    v7(v14, v15, v17);
    uint64_t v19 = sub_248175190();
    v0[5] = sub_247FB6D24(v19, v20, &v32);
    sub_248175730();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v21(v15, v17);
    *(_WORD *)(v18 + 12) = 2112;
    id v22 = v13;
    uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v23;
    sub_248175730();
    *uint64_t v28 = v23;

    uint64_t v10 = log;
    _os_log_impl(&dword_247F93000, log, type, "Failed to handle incoming value (%s) with error: %@", (uint8_t *)v18, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v31, -1, -1);
    MEMORY[0x24C574E00](v18, -1, -1);
  }
  else
  {
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0[27] + 8);
    v21(v0[28], v0[14]);
  }
  uint64_t v24 = v0[32];
  uint64_t v25 = v0[14];
  v0[4] = v0[34];
  sub_248175370();
  sub_248175350();
  v21(v24, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(uint64_t))v0[1];
  return v26(1);
}

uint64_t sub_247FC26E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a1;
  v4[9] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D65D0);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5BA0);
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC27F0, a4, 0);
}

uint64_t sub_247FC27F0()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 72) + *(void *)(**(void **)(v0 + 72) + 104);
  swift_beginAccess();
  sub_247FD7518(v4, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_247FB33D4(*(void *)(v0 + 88), &qword_2692D65D0);
    char v5 = 1;
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 96);
    uint64_t v9 = *(void *)(v0 + 80);
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 32))(v6, *(void *)(v0 + 88), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v9, 1, 1, v8);
    swift_beginAccess();
    sub_247FD74B0(v9, v4);
    swift_endAccess();
    sub_248175360();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    char v5 = 0;
  }
  **(unsigned char **)(v0 + 64) = v5;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_247FC299C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_2481753D0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_2481753C0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_247FB33D4(a1, &qword_2692D9520);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_248175340();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_247FC2B20(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *(void *)(*(void *)v2 + 80);
  uint64_t v4 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC2BFC, v2, 0);
}

uint64_t sub_247FC2BFC()
{
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_248174B90();
  v0[9] = __swift_project_value_buffer(v1, (uint64_t)qword_2692D5B28);
  uint64_t v2 = sub_248174B70();
  os_log_type_t v3 = sub_2481755C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_247F93000, v2, v3, "Running taps with echo response for update", v4, 2u);
    MEMORY[0x24C574E00](v4, -1, -1);
  }
  uint64_t v5 = (char *)v0[8];
  uint64_t v6 = v0[2];

  uint64_t v7 = type metadata accessor for _Coordinated.ValueUpdate();
  _Coordinated.ValueUpdate.response(withUpdatedValue:)(v6 + *(int *)(v7 + 32), v7, v5);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_247FC2D80;
  uint64_t v9 = v0[8];
  return sub_247FBCBE8(v9);
}

uint64_t sub_247FC2D80()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_247FC31BC;
  }
  else {
    uint64_t v4 = sub_247FC2EAC;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247FC2EAC()
{
  uint64_t v1 = sub_248174B70();
  os_log_type_t v2 = sub_2481755C0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_247F93000, v1, v2, "Finished running taps, calling receiver", v3, 2u);
    MEMORY[0x24C574E00](v3, -1, -1);
  }
  uint64_t v4 = v0[4];

  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + *(void *)(*(void *)v4 + 104))
                                                + **(int **)(v4 + *(void *)(*(void *)v4 + 104)));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[12] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_247FC3010;
  uint64_t v6 = v0[2];
  uint64_t v7 = v0[3];
  return v9(v7, v6);
}

uint64_t sub_247FC3010()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_247FC323C;
  }
  else {
    uint64_t v4 = sub_247FC313C;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_247FC313C()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247FC31BC()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247FC323C()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t _Coordinated.ValueUpdate.response(withUpdatedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v3;
  (*(void (**)(char *))(v6 + 16))(v8);
  uint64_t v10 = sub_247FC5E00();
  *(void *)a3 = v9;
  uint64_t v11 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(&a3[*(int *)(v11 + 32)], v8, v5);
  *((void *)a3 + 1) = v10;
  return result;
}

void sub_247FC33D0()
{
  if (*(unsigned char *)(v0 + *(void *)(*(void *)v0 + 128)))
  {
    if (qword_2692D4D60 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_248174B90();
    __swift_project_value_buffer(v1, (uint64_t)qword_2692D5B28);
    swift_retain_n();
    uint64_t v2 = sub_248174B70();
    os_log_type_t v3 = sub_2481755B0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      uint64_t v16 = v5;
      *(_DWORD *)uint64_t v4 = 136315138;
      type metadata accessor for _Coordinated();
      swift_retain();
      uint64_t v6 = sub_248175190();
      sub_247FB6D24(v6, v7, &v16);
      sub_248175730();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_247F93000, v2, v3, "Coordinator %s is invalidated", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v5, -1, -1);
      MEMORY[0x24C574E00](v4, -1, -1);
    }
    else
    {
      swift_release_n();
    }
    type metadata accessor for _Coordinated.CommonError();
    swift_getWitnessTable();
    swift_allocError();
    _OWORD *v15 = xmmword_24817A600;
    swift_willThrow();
  }
  else
  {
    if (qword_2692D4D60 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_248174B90();
    __swift_project_value_buffer(v8, (uint64_t)qword_2692D5B28);
    swift_retain_n();
    uint64_t v9 = sub_248174B70();
    os_log_type_t v10 = sub_2481755C0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v16 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      type metadata accessor for _Coordinated();
      swift_retain();
      uint64_t v13 = sub_248175190();
      sub_247FB6D24(v13, v14, &v16);
      sub_248175730();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_247F93000, v9, v10, "Checked that %s is not invalidated & ready to coordinate", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v12, -1, -1);
      MEMORY[0x24C574E00](v11, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
}

uint64_t sub_247FC37D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FC381C, v3, 0);
}

uint64_t sub_247FC381C()
{
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = (void *)swift_allocObject();
  v0[7] = v4;
  v4[2] = *(void *)(v1 + 80);
  v4[3] = v3;
  v4[4] = v2;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_247FC3910;
  uint64_t v6 = v0[2];
  return sub_247FC3F3C(v6, (uint64_t)&unk_2692D5BD0, (uint64_t)v4);
}

uint64_t sub_247FC3910()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FD79F4, v1, 0);
}

uint64_t sub_247FC3A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_247FC3A44, 0, 0);
}

uint64_t sub_247FC3A44()
{
  (*(void (**)(void, void))(v0 + 32))(*(void *)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FC3AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FC3AFC, v3, 0);
}

uint64_t sub_247FC3AFC()
{
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = (void *)swift_allocObject();
  v0[7] = v4;
  v4[2] = *(void *)(v1 + 80);
  v4[3] = v3;
  v4[4] = v2;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[8] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_247FC3BF0;
  uint64_t v6 = v0[2];
  return sub_247FC3F3C(v6, (uint64_t)&unk_2692D5BF0, (uint64_t)v4);
}

uint64_t sub_247FC3BF0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FC3D00, v1, 0);
}

uint64_t sub_247FC3D00()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FC3D60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FC3E44;
  return v8(a1, a2);
}

uint64_t sub_247FC3E44()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FC3F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v4[8] = *v3;
  uint64_t v5 = sub_2481748C0();
  v4[9] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[10] = v6;
  v4[11] = *(void *)(v6 + 64);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC4058, v3, 0);
}

uint64_t sub_247FC4058()
{
  uint64_t v49 = v0;
  sub_2481748B0();
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = sub_248174B90();
  __swift_project_value_buffer(v5, (uint64_t)qword_2692D5B28);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v45(v2, v1, v4);
  uint64_t v6 = sub_248174B70();
  os_log_type_t v7 = sub_2481755C0();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[14];
  uint64_t v11 = v0[9];
  uint64_t v10 = v0[10];
  if (v8)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v48 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
    uint64_t v14 = sub_248175C30();
    v0[3] = sub_247FB6D24(v14, v15, &v48);
    sub_248175730();
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v47(v9, v11);
    _os_log_impl(&dword_247F93000, v6, v7, "Tapping with with id: %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v13, -1, -1);
    MEMORY[0x24C574E00](v12, -1, -1);
  }
  else
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v47(v0[14], v0[9]);
  }

  uint64_t v16 = v0[15];
  uint64_t v17 = v0[13];
  uint64_t v19 = v0[10];
  uint64_t v18 = v0[11];
  uint64_t v20 = v0[9];
  uint64_t v40 = v16;
  uint64_t v41 = v0[6];
  uint64_t v42 = v0[12];
  uint64_t v43 = v0[5];
  uint64_t v39 = *(void *)(v0[8] + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v46 = type metadata accessor for _Coordinated.AsyncThrowingTapHandle();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  v45(v17, v16, v20);
  unint64_t v22 = (*(unsigned __int8 *)(v19 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v39;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v23 + v22, v17, v20);
  *(void *)(v23 + ((v18 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  uint64_t v24 = (void *)swift_allocObject();
  v24[4] = v43;
  v24[5] = v41;
  v24[2] = sub_247FD1658;
  v24[3] = v23;
  uint64_t v44 = (uint64_t)v24;
  v45(v42, v40, v20);
  swift_retain();
  uint64_t v25 = sub_248174B70();
  os_log_type_t v26 = sub_2481755C0();
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v28 = v0[12];
  uint64_t v29 = v0[9];
  if (v27)
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v48 = v31;
    *(_DWORD *)unint64_t v30 = 136315138;
    sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
    uint64_t v32 = sub_248175C30();
    v0[2] = sub_247FB6D24(v32, v33, &v48);
    sub_248175730();
    swift_bridgeObjectRelease();
    v47(v28, v29);
    _os_log_impl(&dword_247F93000, v25, v26, "Adding tap with id: %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v31, -1, -1);
    MEMORY[0x24C574E00](v30, -1, -1);
  }
  else
  {
    v47(v0[12], v0[9]);
  }

  uint64_t v34 = v0[15];
  uint64_t v35 = v0[9];
  uint64_t v36 = (uint64_t *)v0[4];
  sub_247FC4C78(v44, v34);
  v36[3] = v46;
  v36[4] = (uint64_t)&off_26FC3CFE0;
  *uint64_t v36 = v44;
  v47(v34, v35);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_247FC45D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v51 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v50 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_2481748C0();
  BOOL v8 = *(void (**)(char *, uint64_t))(v7 - 8);
  uint64_t v9 = *((void *)v8 + 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v49 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v54 = (char *)v45 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v45 - v13;
  uint64_t v15 = a2 + 16;
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_248174B90();
  uint64_t v17 = __swift_project_value_buffer(v16, (uint64_t)qword_2692D5B28);
  uint64_t v18 = (char *)v8 + 16;
  uint64_t v53 = (void (*)(char *, uint64_t, uint64_t))*((void *)v8 + 2);
  v53(v14, a1, v7);
  uint64_t v52 = v17;
  uint64_t v19 = sub_248174B70();
  os_log_type_t v20 = sub_2481755C0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v48 = v9;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    v45[1] = v15;
    uint64_t v23 = (uint8_t *)v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v47 = (char *)v8 + 16;
    uint64_t v25 = v24;
    v57[0] = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v46 = v8;
    sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
    uint64_t v26 = sub_248175C30();
    uint64_t v56 = sub_247FB6D24(v26, v27, v57);
    BOOL v8 = v46;
    sub_248175730();
    swift_bridgeObjectRelease();
    uint64_t v28 = (void (*)(char *, uint64_t))*((void *)v8 + 1);
    v28(v14, v7);
    _os_log_impl(&dword_247F93000, v19, v20, "Called to untap with %s", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v29 = v25;
    uint64_t v18 = v47;
    MEMORY[0x24C574E00](v29, -1, -1);
    MEMORY[0x24C574E00](v23, -1, -1);
  }
  else
  {
    uint64_t v28 = (void (*)(char *, uint64_t))*((void *)v8 + 1);
    v28(v14, v7);
  }

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v31 = v54;
  if (result)
  {
    uint64_t v32 = result;
    uint64_t v46 = v28;
    v53(v54, a1, v7);
    unint64_t v33 = sub_248174B70();
    os_log_type_t v34 = sub_2481755C0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v56 = v36;
      uint64_t v52 = a1;
      *(_DWORD *)uint64_t v35 = 136315138;
      uint64_t v47 = v18;
      sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
      uint64_t v37 = sub_248175C30();
      uint64_t v55 = sub_247FB6D24(v37, v38, &v56);
      a1 = v52;
      sub_248175730();
      swift_bridgeObjectRelease();
      v46(v54, v7);
      _os_log_impl(&dword_247F93000, v33, v34, "Untapping with %s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C574E00](v36, -1, -1);
      MEMORY[0x24C574E00](v35, -1, -1);
    }
    else
    {
      v46(v31, v7);
    }

    uint64_t v40 = (uint64_t)v50;
    uint64_t v39 = v51;
    uint64_t v41 = v49;
    uint64_t v42 = sub_2481753D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v40, 1, 1, v42);
    v53(v41, a1, v7);
    unint64_t v43 = (*((unsigned __int8 *)v8 + 80) + 48) & ~(unint64_t)*((unsigned __int8 *)v8 + 80);
    uint64_t v44 = (char *)swift_allocObject();
    *((void *)v44 + 2) = 0;
    *((void *)v44 + 3) = 0;
    *((void *)v44 + 4) = v39;
    *((void *)v44 + 5) = v32;
    (*((void (**)(char *, char *, uint64_t))v8 + 4))(&v44[v43], v41, v7);
    sub_247FFC0C4(v40, (uint64_t)&unk_2692D65C8, (uint64_t)v44);
    return swift_release();
  }
  return result;
}

uint64_t sub_247FC4BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x270FA2498](sub_247FC4BC4, a4, 0);
}

uint64_t sub_247FC4BC4()
{
  sub_247FC5028(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_247FC4C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (void *)swift_allocObject();
  result[4] = a1;
  result[5] = a2;
  result[2] = a3;
  result[3] = a4;
  return result;
}

uint64_t sub_247FC4C78(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = *v2;
  uint64_t v5 = sub_2481748C0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v22 - v10;
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_248174B90();
  __swift_project_value_buffer(v12, (uint64_t)qword_2692D5B28);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v27 = a2;
  v26(v11, a2, v5);
  uint64_t v13 = sub_248174B70();
  os_log_type_t v14 = sub_2481755C0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v9;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v23 = swift_slowAlloc();
    v29[0] = v23;
    uint64_t v24 = a1;
    *(_DWORD *)uint64_t v16 = 136315138;
    v22[1] = v16 + 4;
    sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
    uint64_t v17 = sub_248175C30();
    uint64_t v30 = sub_247FB6D24(v17, v18, v29);
    a1 = v24;
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    _os_log_impl(&dword_247F93000, v13, v14, "Actually adding the tap with id now: %s", v16, 0xCu);
    uint64_t v19 = v23;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v19, -1, -1);
    os_log_type_t v20 = v16;
    uint64_t v9 = v25;
    MEMORY[0x24C574E00](v20, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }

  v26(v9, v27, v5);
  uint64_t v30 = a1;
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  type metadata accessor for _Coordinated.AsyncThrowingTapHandle();
  sub_247FD16F4(&qword_2692D5B50);
  sub_248175050();
  sub_248175090();
  return swift_endAccess();
}

uint64_t sub_247FC5028(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_2481748C0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - v9;
  if (qword_2692D4D60 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_248174B90();
  __swift_project_value_buffer(v11, (uint64_t)qword_2692D5B28);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v26 = a1;
  v25(v10, a1, v4);
  uint64_t v12 = sub_248174B70();
  os_log_type_t v13 = sub_2481755C0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = v8;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v22 = swift_slowAlloc();
    v27[0] = v22;
    uint64_t v23 = v3;
    *(_DWORD *)uint64_t v15 = 136315138;
    BOOL v21 = v15 + 4;
    sub_247FD16F4((unint64_t *)&qword_2692D5BF8);
    uint64_t v16 = sub_248175C30();
    uint64_t v28 = sub_247FB6D24(v16, v17, v27);
    sub_248175730();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _os_log_impl(&dword_247F93000, v12, v13, "Removing tap with id: %s", v15, 0xCu);
    uint64_t v18 = v22;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v18, -1, -1);
    uint64_t v19 = v15;
    uint64_t v8 = v24;
    MEMORY[0x24C574E00](v19, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }

  v25(v8, v26, v4);
  uint64_t v28 = 0;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  type metadata accessor for _Coordinated.AsyncThrowingTapHandle();
  sub_247FD16F4(&qword_2692D5B50);
  sub_248175050();
  sub_248175090();
  return swift_endAccess();
}

uint64_t _Coordinated.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  swift_release();
  swift_bridgeObjectRelease();
  sub_247F98D68(*(void *)(v0 + *(void *)(*(void *)v0 + 120)));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t _Coordinated.__deallocating_deinit()
{
  _Coordinated.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_247FC54C8(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_247FC54E8, v1, 0);
}

uint64_t sub_247FC54E8()
{
  sub_247FBB7A8(*(void *)(v0 + 16));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FC5548(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FD79CC;
  return sub_247FBBAB8(a1);
}

uint64_t sub_247FC55DC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_247FD79D0;
  return sub_247FBEA3C();
}

uint64_t sub_247FC5668(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_247FD79D0;
  v4[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FBF5B4, v1, 0);
}

uint64_t sub_247FC573C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247FD79D0;
  return sub_247FBF824(a1, a2);
}

uint64_t sub_247FC57E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[6] = a5;
  v12[7] = v5;
  v12[4] = a3;
  v12[5] = a4;
  v12[2] = a1;
  uint64_t v12[3] = a2;
  v12[1] = sub_247FD79D0;
  v12[8] = *v5;
  return MEMORY[0x270FA2498](sub_247FBFE14, v5, 0);
}

uint64_t sub_247FC58DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  os_log_type_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *os_log_type_t v13 = v6;
  v13[1] = sub_247FD79D0;
  return sub_247FC0098(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_247FC59B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FD79D0;
  v8[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FC381C, v3, 0);
}

uint64_t sub_247FC5A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FD79D0;
  v8[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FC3AFC, v3, 0);
}

uint64_t sub_247FC5B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  return sub_247FC3F3C(a1, a2, a3);
}

uint64_t sub_247FC5C34()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  swift_retain();
  uint64_t v2 = swift_release();
  v1(v2);
  return swift_release();
}

uint64_t sub_247FC5C8C()
{
  swift_retain();
  sub_247FC5C34();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_247FC5CC0()
{
  uint64_t v0 = sub_247FC5C8C();
  return MEMORY[0x270FA0228](v0, 48, 7);
}

uint64_t sub_247FC5CF0()
{
  return sub_247FC5C34();
}

id _Coordinated.HaltingTapError.underlyingError.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t _Coordinated.HaltingTapError.init(underlyingError:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t _Coordinated.ValueUpdate.isCoordinated.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t _Coordinated.ValueUpdate.updatedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 32), a1);
}

uint64_t (*_Coordinated.ValueUpdate.updatedValue.modify())()
{
  return nullsub_1;
}

uint64_t sub_247FC5DB4()
{
  return sub_2481749D0();
}

void (*sub_247FC5E00())(void *, void)
{
  sub_2481749F0();
  if (v2[0] == -1)
  {
    v2[0] = 0;
    sub_248174A00();
  }
  uint64_t result = (void (*)(void *, void))sub_2481749E0();
  if (*v1 == -1)
  {
    __break(1u);
  }
  else
  {
    ++*v1;
    result(v2, 0);
    sub_2481749F0();
    return (void (*)(void *, void))v2[0];
  }
  return result;
}

BOOL sub_247FC5EB8(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_247FC5EC8()
{
  return sub_248175E70();
}

uint64_t sub_247FC5EF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636E6575716573 && a2 == 0xEA00000000004449;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6964726F6F437369 && a2 == 0xED0000646574616ELL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5664657461647075 && a2 == 0xEC00000065756C61 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002481908B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_247FC60F0(char a1)
{
  unint64_t result = 0x65636E6575716573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6964726F6F437369;
      break;
    case 2:
      unint64_t result = 0x5664657461647075;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_247FC61A0(char *a1, char *a2)
{
  return sub_247FC5EB8(*a1, *a2);
}

uint64_t sub_247FC61B0()
{
  return sub_247FC64B0();
}

uint64_t sub_247FC61D0()
{
  return sub_247FC5EC8();
}

uint64_t sub_247FC61DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247FC6578(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_247FC5EC8);
}

unint64_t sub_247FC61F4()
{
  return sub_247FC60F0(*v0);
}

uint64_t sub_247FC6200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FC5EF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FC622C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_247FD17FC();
  *a1 = result;
  return result;
}

uint64_t sub_247FC6258(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_247FC62AC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t _s12AppleIDSetup12_CoordinatedC11ValueUpdateV07updatedD0xvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 32));
}

uint64_t sub_247FC633C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636E6575716573 && a2 == 0xEA00000000004449;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002481908D0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5664657461647075 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_247FC64B0()
{
  return sub_248175EC0();
}

uint64_t sub_247FC64F8(char a1)
{
  if (!a1) {
    return 0x65636E6575716573;
  }
  if (a1 == 1) {
    return 0xD000000000000012;
  }
  return 0x5664657461647075;
}

uint64_t sub_247FC6560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247FC6578(a1, a2, a3, (void (*)(unsigned char *, void, void))sub_247FD79FC);
}

uint64_t sub_247FC6578(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void))
{
  sub_248175E50();
  a4(v8, *v4, *(void *)(a2 + 16));
  return sub_248175EC0();
}

uint64_t sub_247FC65D0()
{
  return sub_247FC64F8(*v0);
}

uint64_t sub_247FC65DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FC633C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FC6608@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_247FD1804();
  *a1 = result;
  return result;
}

uint64_t sub_247FC6634(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_247FC6688(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t _Coordinated.ValueUpdate<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v26 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _Coordinated.ValueUpdate.CodingKeys();
  swift_getWitnessTable();
  uint64_t v29 = sub_248175B40();
  uint64_t v25 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v8 = type metadata accessor for _Coordinated.ValueUpdate();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v28 = v7;
  uint64_t v11 = (uint64_t)v30;
  sub_248175F20();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v30 = a1;
  uint64_t v12 = v25;
  char v35 = 0;
  os_log_type_t v13 = v28;
  uint64_t v14 = v29;
  *(void *)uint64_t v10 = sub_248175B20();
  char v34 = 1;
  char v15 = sub_248175AD0();
  BOOL v21 = v10;
  v10[8] = v15 & 1;
  char v33 = 2;
  sub_248175AF0();
  uint64_t v16 = *(void (**)(void))(v24 + 32);
  uint64_t v27 = &v21[*(int *)(v8 + 32)];
  v16();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5C00);
  char v32 = 3;
  sub_247FD1750(&qword_2692D5C08);
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v13, v14);
  uint64_t v18 = v21;
  uint64_t v17 = v22;
  *(void *)&v21[*(int *)(v8 + 36)] = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v23, v18, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v18, v8);
}

uint64_t sub_247FC6B04@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return _Coordinated.ValueUpdate<A>.init(from:)(a1, *(void *)(a2 + 16), *(char **)(a3 - 8), a4);
}

uint64_t _Coordinated.ValueUpdate<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v4 = v3;
  uint64_t v15 = a2;
  v14[1] = *(void *)(a2 + 16);
  type metadata accessor for _Coordinated.ValueUpdate.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_248175C20();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  char v22 = 0;
  uint64_t v10 = v17;
  sub_248175C10();
  if (v10) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v12 = v7;
  uint64_t v13 = v15;
  char v21 = 1;
  sub_248175BC0();
  char v20 = 2;
  sub_248175BE0();
  uint64_t v18 = *(void *)(v4 + *(int *)(v13 + 36));
  char v19 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5C00);
  sub_247FD1750(&qword_2692D5C10);
  sub_248175BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v9, v6);
}

uint64_t sub_247FC6D90(void *a1, uint64_t a2, uint64_t a3)
{
  return _Coordinated.ValueUpdate<A>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t static _Coordinated.ValueUpdate<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)) {
    return 0;
  }
  type metadata accessor for _Coordinated.ValueUpdate();
  if ((sub_248175100() & 1) == 0) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5C00);
  return sub_248174A20() & 1;
}

uint64_t sub_247FC6E68(uint64_t a1, uint64_t a2)
{
  return static _Coordinated.ValueUpdate<A>.== infix(_:_:)(a1, a2);
}

uint64_t _Coordinated.ValueUpdate<A>.hash(into:)()
{
  return sub_2481750B0();
}

uint64_t _Coordinated.ValueUpdate<A>.hashValue.getter(uint64_t a1, uint64_t a2)
{
  return sub_247FC75D8(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t))_Coordinated.ValueUpdate<A>.hash(into:));
}

uint64_t sub_247FC6F54(uint64_t a1, uint64_t a2)
{
  return _Coordinated.ValueUpdate<A>.hashValue.getter(a1, *(void *)(a2 - 8));
}

uint64_t sub_247FC6F5C()
{
  return _Coordinated.ValueUpdate<A>.hash(into:)();
}

uint64_t sub_247FC6F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247FC7660(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))_Coordinated.ValueUpdate<A>.hash(into:));
}

uint64_t _Coordinated.ValueUpdate.Response<A>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v19 = a4;
  uint64_t v18 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  char v21 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _Coordinated.ValueUpdate.Response.CodingKeys();
  swift_getWitnessTable();
  uint64_t v23 = sub_248175B40();
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  uint64_t v17 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v17 - v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v12 = v24;
  sub_248175F20();
  if (!v12)
  {
    uint64_t v24 = v9;
    uint64_t v14 = v20;
    uint64_t v13 = v21;
    char v27 = 0;
    *uint64_t v11 = sub_248175B20();
    char v26 = 1;
    v11[1] = sub_248175B20();
    char v25 = 2;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v23);
    uint64_t v16 = v24;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v11 + *(int *)(v24 + 32), v13, a2);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v17 + 32))(v19, v11, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_247FC72B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return _Coordinated.ValueUpdate.Response<A>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t _Coordinated.ValueUpdate.Response<A>.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  v10[2] = a3;
  v10[1] = a2;
  v10[0] = *(void *)(a2 + 16);
  type metadata accessor for _Coordinated.ValueUpdate.Response.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_248175C20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248175F60();
  char v13 = 0;
  uint64_t v8 = v10[3];
  sub_248175C10();
  if (!v8)
  {
    char v12 = 1;
    sub_248175C10();
    char v11 = 2;
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_247FC74AC(void *a1, uint64_t a2, uint64_t a3)
{
  return _Coordinated.ValueUpdate.Response<A>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t static _Coordinated.ValueUpdate.Response<A>.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1]) {
    return 0;
  }
  type metadata accessor for _Coordinated.ValueUpdate.Response();
  return sub_248175100() & 1;
}

uint64_t sub_247FC754C(void *a1, void *a2)
{
  return static _Coordinated.ValueUpdate.Response<A>.== infix(_:_:)(a1, a2);
}

uint64_t _Coordinated.ValueUpdate.Response<A>.hash(into:)()
{
  return sub_2481750B0();
}

uint64_t _Coordinated.ValueUpdate.Response<A>.hashValue.getter(uint64_t a1, uint64_t a2)
{
  return sub_247FC75D8(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t))_Coordinated.ValueUpdate.Response<A>.hash(into:));
}

uint64_t sub_247FC75D8(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t, uint64_t))
{
  sub_248175E50();
  a3(v7, a1, a2);
  return sub_248175EC0();
}

uint64_t sub_247FC7638(uint64_t a1, uint64_t a2)
{
  return _Coordinated.ValueUpdate.Response<A>.hashValue.getter(a1, *(void *)(a2 - 8));
}

uint64_t sub_247FC7640()
{
  return _Coordinated.ValueUpdate.Response<A>.hash(into:)();
}

uint64_t sub_247FC7648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247FC7660(a1, a2, a3, (void (*)(unsigned char *, uint64_t, uint64_t))_Coordinated.ValueUpdate.Response<A>.hash(into:));
}

uint64_t sub_247FC7660(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a3 - 8);
  sub_248175E50();
  a4(v8, a2, v6);
  return sub_248175EC0();
}

void *CoordinationProtocol.coercing<A>(derive:mutator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for _Coordinated.Coerced();
  uint64_t v13 = CoordinationProtocol.into()(a5, a7);
  uint64_t v14 = (void *)swift_allocObject();
  swift_retain();
  swift_retain();
  swift_defaultActor_initialize();
  v14[14] = v13;
  v14[15] = a1;
  v14[16] = a2;
  v14[17] = a3;
  v14[18] = a4;
  return v14;
}

uint64_t CoordinationProtocol.into()(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for _AnyCoordinated();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = v2;
  *(void *)(v4 + 120) = a2;
  return v4;
}

void *sub_247FC77FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v10[14] = a1;
  v10[15] = a2;
  v10[16] = a3;
  v10[17] = a4;
  v10[18] = a5;
  return v10;
}

uint64_t CoordinationProtocol.coercing<A>(to:derive:mutator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  uint64_t v11 = sub_248175700();
  v9[11] = v11;
  v9[12] = *(void *)(v11 - 8);
  v9[13] = swift_task_alloc();
  v9[14] = *(void *)(a7 - 8);
  v9[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC798C, 0, 0);
}

uint64_t sub_247FC798C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v6 = *(void *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v15 = *(void *)(v0 + 24);
  uint64_t v16 = *(void *)(v0 + 16);
  uint64_t v17 = *(void *)(v0 + 88);
  swift_getAssociatedTypeWitness();
  type metadata accessor for _Coordinated.Coerced();
  long long v18 = *(_OWORD *)(v0 + 32);
  uint64_t v8 = CoordinationProtocol.into()(v6, v4);
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 128) = v9;
  swift_retain();
  swift_retain();
  swift_defaultActor_initialize();
  *(void *)(v9 + 112) = v8;
  *(void *)(v9 + 120) = v15;
  *(_OWORD *)(v9 + 128) = v18;
  *(void *)(v9 + 144) = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v16, v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v5) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 104), *(void *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v11 = *(void *)(v0 + 128);
    return v10(v11);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 112) + 32))(*(void *)(v0 + 120), *(void *)(v0 + 104), *(void *)(v0 + 64));
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_247FC7BC4;
    uint64_t v14 = *(void *)(v0 + 120);
    return sub_247FC8C08(v14);
  }
}

uint64_t sub_247FC7BC4()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247FC7D68;
  }
  else {
    uint64_t v2 = sub_247FC7CD8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247FC7CD8()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[16];
  return v1(v2);
}

uint64_t sub_247FC7D68()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_247FC7E04(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  void v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC7ED0, v1, 0);
}

uint64_t sub_247FC7ED0()
{
  uint64_t v1 = (void *)v0[3];
  v0[7] = v1[15];
  v0[8] = v1[16];
  uint64_t v2 = (void *)v1[14];
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_247FC7FC4;
  v3[2] = v0[6];
  v3[3] = v2;
  v3[4] = *v2;
  return MEMORY[0x270FA2498](sub_247FCBFDC, v2, 0);
}

uint64_t sub_247FC7FC4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FC80D4, v1, 0);
}

uint64_t sub_247FC80D4()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v0 + 32);
  (*(void (**)(uint64_t))(v0 + 56))(v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void *sub_247FC8178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_defaultActor_initialize();
  v5[14] = a1;
  v5[15] = a2;
  v5[16] = a3;
  v5[17] = a4;
  v5[18] = a5;
  return v5;
}

uint64_t sub_247FC81D0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_247FC81F4, v2, 0);
}

uint64_t sub_247FC81F4()
{
  uint64_t v1 = *(void **)(v0[4] + 112);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FC82D0;
  v2[2] = v0[2];
  v2[3] = v1;
  void v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FCBFDC, v1, 0);
}

uint64_t sub_247FC82D0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FC83E0, v1, 0);
}

uint64_t sub_247FC83E0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[2];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[4] + 136);
  swift_retain();
  v3(v2, v1);
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_247FC8470(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = *v1;
  void v2[4] = *v1;
  v2[5] = *(void *)(v3 + 80);
  v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  v2[7] = v4;
  v2[8] = *(void *)(v4 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC85A0, v1, 0);
}

uint64_t sub_247FC85A0()
{
  uint64_t v1 = (void *)v0[2];
  v0[10] = *(void *)(v0[3] + 112);
  v0[11] = *v1;
  uint64_t v2 = (char *)v1 + *(int *)(type metadata accessor for _Coordinated.ValueUpdate.Response() + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_247FC867C;
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[3];
  v3[3] = v2;
  v3[4] = v5;
  v3[2] = v4;
  return MEMORY[0x270FA2498](sub_247FC81F4, v5, 0);
}

uint64_t sub_247FC867C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FC878C, v1, 0);
}

uint64_t sub_247FC878C()
{
  uint64_t v1 = (char *)v0[9];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v4 = *(void *)(v0[2] + 8);
  *(void *)uint64_t v1 = v0[11];
  uint64_t v5 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 32))(&v1[*(int *)(v5 + 32)], v3, v2);
  *((void *)v1 + 1) = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_247FC88C4;
  uint64_t v7 = (void *)v0[10];
  v6[2] = v0[9];
  v6[3] = v7;
  v6[4] = *v7;
  return MEMORY[0x270FA2498](sub_247FCC4DC, v7, 0);
}

uint64_t sub_247FC88C4(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *(void *)(*v1 + 56);
  uint64_t v8 = *v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v8 + 8);
  return v6(a1);
}

uint64_t sub_247FC8A48()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_247FC8A68, v0, 0);
}

uint64_t sub_247FC8A68()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 112);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FC8B14;
  v2[2] = v1;
  return MEMORY[0x270FA2498](sub_247FCCACC, v1, 0);
}

uint64_t sub_247FC8B14()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FC8C08(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  void v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC8CD4, v1, 0);
}

uint64_t sub_247FC8CD4()
{
  v0[7] = *(void *)(v0[3] + 112);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_247FC8D90;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  v1[3] = v0[2];
  v1[4] = v3;
  v1[2] = v2;
  return MEMORY[0x270FA2498](sub_247FC81F4, v3, 0);
}

uint64_t sub_247FC8D90()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_247FC8F24;
  uint64_t v4 = (void *)v1[7];
  v3[2] = v1[6];
  v3[3] = v4;
  v3[4] = *v4;
  return MEMORY[0x270FA2498](sub_247FCCC14, v4, 0);
}

uint64_t sub_247FC8F24()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  uint64_t v5 = *(void **)v1;
  v5[10] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    uint64_t v6 = v5[3];
    return MEMORY[0x270FA2498](sub_247FC90CC, v6, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v5[1];
    return v7();
  }
}

uint64_t sub_247FC90CC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FC9130(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return MEMORY[0x270FA2498](sub_247FC917C, v2, 0);
}

uint64_t sub_247FC917C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)v1[14];
  uint64_t v5 = v1[17];
  uint64_t v4 = v1[18];
  *(void *)(v0 + 48) = v4;
  uint64_t v7 = v1[15];
  uint64_t v6 = v1[16];
  *(void *)(v0 + 56) = v6;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 64) = v8;
  long long v9 = *(_OWORD *)(v0 + 16);
  *(void *)(v8 + 16) = *(void *)(v2 + 80);
  *(void *)(v8 + 24) = *(void *)(v2 + 88);
  *(void *)(v8 + 32) = v7;
  *(void *)(v8 + 40) = v6;
  *(_OWORD *)(v8 + 48) = v9;
  *(void *)(v8 + 64) = v5;
  *(void *)(v8 + 72) = v4;
  swift_retain();
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_247FC92D4;
  v10[3] = v8;
  void v10[4] = v3;
  v10[2] = sub_247FD180C;
  v10[5] = *v3;
  return MEMORY[0x270FA2498](sub_247FCD198, v3, 0);
}

uint64_t sub_247FC92D4()
{
  uint64_t v2 = (void *)*v1;
  v2[10] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[4];
    return MEMORY[0x270FA2498](sub_247FC9428, v3, 0);
  }
  else
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_247FC9428()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FC94A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, void (*a6)(uint64_t, char *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12 = *(void *)(a9 - 8);
  uint64_t v13 = MEMORY[0x270FA5388]();
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16(v13);
  a4(v15);
  a6(a1, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, a9);
}

uint64_t sub_247FC95B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  uint64_t v7 = *v5;
  v6[8] = *v5;
  uint64_t v8 = *(void *)(v7 + 80);
  v6[9] = v8;
  v6[10] = *(void *)(v8 - 8);
  v6[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC96B0, v5, 0);
}

uint64_t sub_247FC96B0()
{
  v0[12] = *(void *)(v0[7] + 112);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_247FC9770;
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[7];
  v1[3] = v0[3];
  v1[4] = v3;
  v1[2] = v2;
  return MEMORY[0x270FA2498](sub_247FC81F4, v3, 0);
}

uint64_t sub_247FC9770()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FC9880, v1, 0);
}

uint64_t sub_247FC9880()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v6 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v8 = *(void *)(v3 + 120);
  uint64_t v7 = *(void *)(v3 + 128);
  v0[14] = v7;
  long long v9 = (void *)swift_allocObject();
  v0[15] = v9;
  v9[2] = v1;
  v9[3] = *(void *)(v2 + 88);
  v9[4] = v4;
  v9[5] = v8;
  v9[6] = v7;
  v9[7] = v6;
  v9[8] = v5;
  swift_retain_n();
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[16] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_247FC99E4;
  uint64_t v12 = v0[11];
  uint64_t v11 = (void *)v0[12];
  uint64_t v13 = v0[2];
  v10[6] = v0[6];
  v10[7] = v11;
  void v10[4] = &unk_2692D5C90;
  v10[5] = v9;
  v10[2] = v13;
  v10[3] = v12;
  v10[8] = *v11;
  return MEMORY[0x270FA2498](sub_247FCD8C8, v11, 0);
}

uint64_t sub_247FC99E4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(*(void *)v1 + 72);
  uint64_t v5 = *(void **)v1;
  v5[17] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    uint64_t v6 = v5[7];
    return MEMORY[0x270FA2498](sub_247FC9BB8, v6, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v5[1];
    return v7();
  }
}

uint64_t sub_247FC9BB8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FC9C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a6;
  v8[8] = a8;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  v8[9] = *(void *)(a8 - 8);
  v8[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FC9CEC, 0, 0);
}

uint64_t sub_247FC9CEC()
{
  uint64_t v1 = *(int **)(v0 + 48);
  (*(void (**)(void))(v0 + 32))(*(void *)(v0 + 24));
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FC9DDC;
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4, v3);
}

uint64_t sub_247FC9DDC()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247FC9F70;
  }
  else {
    uint64_t v2 = sub_247FC9EF0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247FC9EF0()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247FC9F70()
{
  (*(void (**)(void, void))(v0[9] + 8))(v0[10], v0[8]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247FC9FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v7[9] = *v6;
  return MEMORY[0x270FA2498](sub_247FCA044, v6, 0);
}

uint64_t sub_247FCA044()
{
  uint64_t v2 = *(void **)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v19 = *(void *)(v0 + 48);
  uint64_t v20 = (void *)v2[14];
  uint64_t v4 = v2[18];
  uint64_t v17 = v2[17];
  *(void *)(v0 + 80) = v4;
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[16];
  *(void *)(v0 + 88) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  uint64_t v8 = *(void *)(v1 + 80);
  long long v9 = *(_OWORD *)(v0 + 24);
  *(void *)(v7 + 16) = v8;
  uint64_t v10 = *(void *)(v1 + 88);
  *(void *)(v7 + 24) = v10;
  *(void *)(v7 + 32) = v3;
  *(void *)(v7 + 40) = v5;
  *(void *)(v7 + 48) = v6;
  *(_OWORD *)(v7 + 56) = v9;
  *(void *)(v7 + 72) = v17;
  *(void *)(v7 + 80) = v4;
  uint64_t v11 = v2[15];
  uint64_t v12 = v2[16];
  *(void *)(v0 + 104) = v12;
  uint64_t v13 = (void *)swift_allocObject();
  *(void *)(v0 + 112) = v13;
  v13[2] = v8;
  v13[3] = v10;
  v13[4] = v3;
  v13[5] = v11;
  v13[6] = v12;
  v13[7] = v18;
  v13[8] = v19;
  swift_retain_n();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_247FCA228;
  uint64_t v15 = *(void *)(v0 + 16);
  v14[7] = *(void *)(v0 + 56);
  v14[8] = v20;
  v14[5] = &unk_2692D5CB0;
  v14[6] = v13;
  v14[3] = sub_247FD1934;
  v14[4] = v7;
  void v14[2] = v15;
  v14[9] = *v20;
  return MEMORY[0x270FA2498](sub_247FCE450, v20, 0);
}

uint64_t sub_247FCA228()
{
  uint64_t v2 = (void *)*v1;
  v2[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[8];
    return MEMORY[0x270FA2498](sub_247FCA39C, v3, 0);
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_247FCA39C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FCA430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a6;
  v8[8] = a8;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  v8[9] = *(void *)(a8 - 8);
  v8[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCA4F4, 0, 0);
}

uint64_t sub_247FCA4F4()
{
  uint64_t v1 = *(int **)(v0 + 48);
  (*(void (**)(void))(v0 + 32))(*(void *)(v0 + 24));
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FCA5E4;
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4, v3);
}

uint64_t sub_247FCA5E4()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_247FD7A0C;
  }
  else {
    uint64_t v2 = sub_247FD7A00;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_247FCA6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCA744, v3, 0);
}

uint64_t sub_247FCA744()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)v1[14];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  v0[7] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[8] = v8;
  v8[2] = *(void *)(v2 + 80);
  v8[3] = *(void *)(v2 + 88);
  v8[4] = v4;
  v8[5] = v3;
  v8[6] = v6;
  v8[7] = v7;
  swift_retain_n();
  swift_retain();
  long long v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *long long v9 = v0;
  v9[1] = sub_247FD7A10;
  uint64_t v10 = v0[2];
  v9[4] = v8;
  v9[5] = v5;
  v9[2] = v10;
  v9[3] = sub_247FD1AA4;
  v9[6] = *v5;
  return MEMORY[0x270FA2498](sub_247FCEFEC, v5, 0);
}

uint64_t sub_247FCA8A4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = *(void *)(a8 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15(v14);
  a3(a1, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, a8);
}

uint64_t sub_247FCA998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCA9E4, v3, 0);
}

uint64_t sub_247FCA9E4()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)v1[14];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  v0[7] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[8] = v8;
  v8[2] = *(void *)(v2 + 80);
  v8[3] = *(void *)(v2 + 88);
  v8[4] = v4;
  v8[5] = v3;
  v8[6] = v6;
  v8[7] = v7;
  swift_retain_n();
  swift_retain();
  long long v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *long long v9 = v0;
  v9[1] = sub_247FD7A10;
  uint64_t v10 = v0[2];
  v9[4] = v8;
  v9[5] = v5;
  v9[2] = v10;
  v9[3] = &unk_2692D5CE0;
  v9[6] = *v5;
  return MEMORY[0x270FA2498](sub_247FCF434, v5, 0);
}

uint64_t sub_247FCAB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a6;
  v8[8] = a8;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  v8[9] = *(void *)(a8 - 8);
  v8[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCAC04, 0, 0);
}

uint64_t sub_247FCAC04()
{
  uint64_t v1 = *(int **)(v0 + 32);
  (*(void (**)(void))(v0 + 48))(*(void *)(v0 + 24));
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FCACF4;
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4, v3);
}

uint64_t sub_247FCACF4()
{
  uint64_t v1 = *(void *)(*v0 + 80);
  uint64_t v2 = *(void *)(*v0 + 72);
  uint64_t v3 = *(void *)(*v0 + 64);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_247FCAE4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCAE98, v3, 0);
}

uint64_t sub_247FCAE98()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = (void *)v1[14];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  v0[7] = v7;
  uint64_t v8 = (void *)swift_allocObject();
  v0[8] = v8;
  v8[2] = *(void *)(v2 + 80);
  v8[3] = *(void *)(v2 + 88);
  v8[4] = v4;
  v8[5] = v3;
  v8[6] = v6;
  v8[7] = v7;
  swift_retain_n();
  swift_retain();
  long long v9 = (void *)swift_task_alloc();
  v0[9] = v9;
  *long long v9 = v0;
  v9[1] = sub_247FCAFF8;
  uint64_t v10 = v0[2];
  v9[4] = v8;
  v9[5] = v5;
  v9[2] = v10;
  v9[3] = &unk_2692D5D00;
  v9[6] = *v5;
  return MEMORY[0x270FA2498](sub_247FCFAA8, v5, 0);
}

uint64_t sub_247FCAFF8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FCB124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a6;
  v8[8] = a8;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  v8[9] = *(void *)(a8 - 8);
  v8[10] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCB1E4, 0, 0);
}

uint64_t sub_247FCB1E4()
{
  uint64_t v1 = *(int **)(v0 + 32);
  (*(void (**)(void))(v0 + 48))(*(void *)(v0 + 24));
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FCB2D4;
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  return v6(v4, v3);
}

uint64_t sub_247FCB2D4()
{
  uint64_t v2 = *(void *)(*v1 + 80);
  uint64_t v3 = *(void *)(*v1 + 72);
  uint64_t v4 = *(void *)(*v1 + 64);
  uint64_t v5 = *v1;
  *(void *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FCB47C, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_247FCB47C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t _Coordinated.Coerced.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t _Coordinated.Coerced.__deallocating_deinit()
{
  _Coordinated.Coerced.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_247FCB544(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FD79D0;
  return sub_247FC7E04(a1);
}

uint64_t sub_247FCB5DC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FD79CC;
  return sub_247FC8470(a1);
}

uint64_t sub_247FCB670()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247FD79D0;
  v2[2] = v0;
  return MEMORY[0x270FA2498](sub_247FC8A68, v0, 0);
}

uint64_t sub_247FCB714(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_247FD79D0;
  return sub_247FC8C08(a1);
}

uint64_t sub_247FCB7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_247FD79D0;
  v6[2] = a1;
  v6[5] = *v2;
  return MEMORY[0x270FA2498](sub_247FC917C, v2, 0);
}

uint64_t sub_247FCB888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_247FCB950;
  return sub_247FC95B0(a1, a2, a3, a4, a5);
}

uint64_t sub_247FCB950()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FCBA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[7] = a6;
  v14[8] = v6;
  v14[5] = a4;
  v14[6] = a5;
  v14[3] = a2;
  v14[4] = a3;
  v14[1] = sub_247FD79D0;
  void v14[2] = a1;
  v14[9] = *v6;
  return MEMORY[0x270FA2498](sub_247FCA044, v6, 0);
}

uint64_t sub_247FCBB4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FD79D0;
  v8[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCA744, v3, 0);
}

uint64_t sub_247FCBC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FD79D0;
  v8[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCA9E4, v3, 0);
}

uint64_t sub_247FCBD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FD79D0;
  v8[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCAE98, v3, 0);
}

uint64_t _AnyCoordinated.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = a1;
  *(void *)(v5 + 120) = a3;
  return v5;
}

uint64_t _TypeEraser.wrappedValue.getter()
{
  return swift_retain();
}

uint64_t _TypeEraser.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v2 + 112) = a1;
  return v2;
}

uint64_t _TypeEraser.init(wrappedValue:)(uint64_t a1)
{
  swift_defaultActor_initialize();
  *(void *)(v1 + 112) = a1;
  return v1;
}

uint64_t _TypeEraser.__allocating_init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = CoordinationProtocol.into()(a2, a3);
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = v3;
  swift_unknownObjectRelease();
  return v4;
}

uint64_t _TypeEraser.deinit()
{
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t _TypeEraser.__deallocating_deinit()
{
  return sub_247FD01A0(MEMORY[0x263F8EED8]);
}

uint64_t _TypeEraser.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_247FCBF78()
{
  return _TypeEraser.unownedExecutor.getter();
}

uint64_t sub_247FCBF94(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  void v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FCBFDC, v1, 0);
}

uint64_t sub_247FCBFDC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  uint64_t v7 = *(void *)(v2 + 80);
  *uint64_t v6 = v0;
  v6[1] = sub_247FCC09C;
  uint64_t v8 = v0[2];
  return sub_247FCC190(v8, v4, v7, ObjectType, v3);
}

uint64_t sub_247FCC09C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FCC190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5[2] = a1;
  v5[3] = a3;
  v5[4] = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_task_alloc();
  v5[5] = v8;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 24) + **(int **)(a5 + 24));
  long long v9 = (void *)swift_task_alloc();
  v5[6] = v9;
  *long long v9 = v5;
  v9[1] = sub_247FCC2E8;
  return v11(v8, a4, a5);
}

uint64_t sub_247FCC2E8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FCC3E4, 0, 0);
}

uint64_t sub_247FCC3E4()
{
  swift_dynamicCast();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t _AnyCoordinated.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = a3;
  return v3;
}

uint64_t sub_247FCC494(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  void v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FCC4DC, v1, 0);
}

uint64_t sub_247FCC4DC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  uint64_t v7 = *(void *)(v2 + 80);
  *uint64_t v6 = v0;
  v6[1] = sub_247FCC598;
  uint64_t v8 = v0[2];
  return sub_247FCC694(v4, v8, v7, ObjectType, v3);
}

uint64_t sub_247FCC598(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_247FCC694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  id v5[2] = a1;
  v5[3] = a2;
  swift_getAssociatedTypeWitness();
  uint64_t v6 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  v5[6] = v6;
  v5[7] = *(void *)(v6 - 8);
  v5[8] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for _Coordinated.ValueUpdate.Response();
  v5[9] = v7;
  v5[10] = *(void *)(v7 - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCC7E8, 0, 0);
}

uint64_t sub_247FCC7E8()
{
  uint64_t v7 = v0[5];
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[3], v0[9]);
  swift_dynamicCast();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 32) + **(int **)(v7 + 32));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_247FCC928;
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  return v6(v2, v3, v4);
}

uint64_t sub_247FCC928(uint64_t a1)
{
  uint64_t v3 = *(void *)(*v1 + 64);
  uint64_t v4 = *(void *)(*v1 + 56);
  uint64_t v5 = *(void *)(*v1 + 48);
  uint64_t v8 = *v1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v8 + 8);
  return v6(a1);
}

uint64_t sub_247FCCAAC()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_247FCCACC, v0, 0);
}

uint64_t sub_247FCCACC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v1 + 40) + **(int **)(v1 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_247FD79C0;
  return v5(ObjectType, v1);
}

uint64_t sub_247FCCBCC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  void v2[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FCCC14, v1, 0);
}

uint64_t sub_247FCCC14()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[5] = v6;
  uint64_t v7 = *(void *)(v2 + 80);
  *uint64_t v6 = v0;
  v6[1] = sub_247FCC09C;
  uint64_t v8 = v0[2];
  return sub_247FCCCD0(v4, v8, v7, ObjectType, v3);
}

uint64_t sub_247FCCCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  id v5[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(void *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v5[10] = *(void *)(a3 - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCCE0C, 0, 0);
}

uint64_t sub_247FCCE0C()
{
  uint64_t v7 = v0[6];
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[3], v0[4]);
  swift_dynamicCast();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 48) + **(int **)(v7 + 48));
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_247FCCF4C;
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  return v6(v2, v3, v4);
}

uint64_t sub_247FCCF4C()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FCD0C0, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[8] + 8))(v2[9], v2[7]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
}

uint64_t sub_247FCD0C0()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247FCD14C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  return MEMORY[0x270FA2498](sub_247FCD198, v2, 0);
}

uint64_t sub_247FCD198()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  uint64_t v7 = *(void *)(v2 + 80);
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_247FCD270;
  long long v8 = *(_OWORD *)(v0 + 16);
  *(void *)(v6 + 48) = ObjectType;
  *(void *)(v6 + 56) = v4;
  *(void *)(v6 + 40) = v7;
  *(_OWORD *)(v6 + 24) = v8;
  *(void *)(v6 + 16) = v3;
  return MEMORY[0x270FA2498](sub_247FCD38C, 0, 0);
}

uint64_t sub_247FCD270()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FCD364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return MEMORY[0x270FA2498](sub_247FCD38C, 0, 0);
}

uint64_t sub_247FCD38C()
{
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  long long v2 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v1 + 32) = v8;
  *(_OWORD *)(v1 + 40) = v2;
  uint64_t v7 = (uint64_t (*)(uint64_t (*)(char *), uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 56)
                                                                                         + **(int **)(v8 + 56));
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_247FCD4BC;
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  return v7(sub_247FD72E4, v1, v4, v5);
}

uint64_t sub_247FCD4BC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FCD5F8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_247FCD5F8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FCD65C(char *a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v10, a1, AssociatedTypeWitness);
  swift_dynamicCast();
  v20(v16);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, a4);
  swift_dynamicCast();
  v17(a1, v10, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, a4);
}

uint64_t sub_247FCD878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v6[8] = *v5;
  return MEMORY[0x270FA2498](sub_247FCD8C8, v5, 0);
}

uint64_t sub_247FCD8C8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = *(void *)(v0[7] + 112);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  uint64_t v5 = *(void *)(v1 + 80);
  *uint64_t v4 = v0;
  v4[1] = sub_247FCD994;
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[3];
  uint64_t v9 = v0[4];
  uint64_t v10 = v0[2];
  return sub_247FCDA88(v10, v2, v8, v9, v6, v5, v7, ObjectType);
}

uint64_t sub_247FCD994()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FCDA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v13;
  v8[7] = a6;
  v8[8] = a7;
  v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[11] = AssociatedTypeWitness;
  v8[12] = *(void *)(AssociatedTypeWitness - 8);
  v8[13] = swift_task_alloc();
  v8[14] = *(void *)(a6 - 8);
  v8[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCDBCC, 0, 0);
}

uint64_t sub_247FCDBCC()
{
  uint64_t v14 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  long long v12 = *(_OWORD *)(v0 + 56);
  (*(void (**)(void, void, void))(*(void *)(v0 + 112) + 16))(*(void *)(v0 + 120), *(void *)(v0 + 32), *(void *)(v0 + 56));
  swift_dynamicCast();
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 128) = v4;
  *(_OWORD *)(v4 + 16) = v12;
  *(void *)(v4 + 32) = v1;
  *(void *)(v4 + 40) = v14;
  *(void *)(v4 + 48) = v3;
  *(void *)(v4 + 56) = v2;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 64)
                                                                                             + **(int **)(v14 + 64));
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_247FCDD84;
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 64);
  uint64_t v10 = *(void *)(v0 + 16);
  return v13(v10, v6, &unk_2692D65B8, v4, v9, v7, v8);
}

uint64_t sub_247FCDD84()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FCDF00, 0, 0);
  }
  else
  {
    uint64_t v4 = v2[12];
    uint64_t v3 = v2[13];
    uint64_t v5 = v2[11];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v2[1];
    return v6();
  }
}

uint64_t sub_247FCDF00()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_247FCDF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  id v5[2] = a1;
  v5[7] = *(void *)(a5 - 8);
  v5[8] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[9] = AssociatedTypeWitness;
  v5[10] = *(void *)(AssociatedTypeWitness - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCE0D4, 0, 0);
}

uint64_t sub_247FCE0D4()
{
  uint64_t v1 = (int *)v0[4];
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[3], v0[9]);
  swift_dynamicCast();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FCE1FC;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[2];
  return v6(v4, v3);
}

uint64_t sub_247FCE1FC()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FCE370, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
}

uint64_t sub_247FCE370()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_247FCE3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v7[9] = *v6;
  return MEMORY[0x270FA2498](sub_247FCE450, v6, 0);
}

uint64_t sub_247FCE450()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  uint64_t v7 = *(void *)(v2 + 80);
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_247FCE534;
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 16);
  long long v10 = *(_OWORD *)(v0 + 24);
  long long v11 = *(_OWORD *)(v0 + 40);
  *(void *)(v6 + 80) = ObjectType;
  *(void *)(v6 + 88) = v4;
  *(void *)(v6 + 64) = v7;
  *(void *)(v6 + 72) = v8;
  *(_OWORD *)(v6 + 32) = v10;
  *(_OWORD *)(v6 + 48) = v11;
  *(void *)(v6 + 16) = v9;
  *(void *)(v6 + 24) = v3;
  return MEMORY[0x270FA2498](sub_247FCE660, 0, 0);
}

uint64_t sub_247FCE534()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FCE628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[10] = v10;
  v8[11] = v11;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return MEMORY[0x270FA2498](sub_247FCE660, 0, 0);
}

uint64_t sub_247FCE660()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v16 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 96) = v6;
  long long v7 = *(_OWORD *)(v0 + 32);
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v16;
  *(_OWORD *)(v6 + 48) = v7;
  uint64_t v8 = (void *)swift_allocObject();
  *(void *)(v0 + 104) = v8;
  v8[2] = v3;
  v8[3] = v2;
  v8[4] = v1;
  v8[5] = v16;
  v8[6] = v5;
  v8[7] = v4;
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t (*)(char *), uint64_t, void *, void *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 + 72) + **(int **)(v16 + 72));
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_247FCE800;
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v11 = *(void *)(v0 + 88);
  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 16);
  return v15(v13, sub_247FD70E4, v6, &unk_2692D65A8, v8, v12, v10, v11);
}

uint64_t sub_247FCE800()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FCE948, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_247FCE948()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_247FCE9B4(char *a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v17(v10, a1, AssociatedTypeWitness);
  swift_dynamicCast();
  v20(v16);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, a4);
  swift_dynamicCast();
  v17(a1, v10, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, a4);
}

uint64_t sub_247FCEBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  id v5[2] = a1;
  v5[7] = *(void *)(a5 - 8);
  v5[8] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[9] = AssociatedTypeWitness;
  v5[10] = *(void *)(AssociatedTypeWitness - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCED04, 0, 0);
}

uint64_t sub_247FCED04()
{
  uint64_t v1 = (int *)v0[4];
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[3], v0[9]);
  swift_dynamicCast();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FCEE2C;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[2];
  return v6(v4, v3);
}

uint64_t sub_247FCEE2C()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_247FD79C8, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
}

uint64_t sub_247FCEFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCEFEC, v3, 0);
}

uint64_t sub_247FCEFEC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  uint64_t v7 = *(void *)(v2 + 80);
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_247FD79C4;
  uint64_t v8 = *(void *)(v0 + 16);
  long long v9 = *(_OWORD *)(v0 + 24);
  *(void *)(v6 + 56) = ObjectType;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 32) = v9;
  *(void *)(v6 + 16) = v8;
  *(void *)(v6 + 24) = v3;
  return MEMORY[0x270FA2498](sub_247FCF0F4, 0, 0);
}

uint64_t sub_247FCF0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_247FCF0F4, 0, 0);
}

uint64_t sub_247FCF0F4()
{
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 72) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v3 + 32) = v10;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = v1;
  long long v9 = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 80) + **(int **)(v10 + 80));
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_247FD7A14;
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 16);
  return v9(v7, sub_247FD70D4, v3, v5, v6);
}

uint64_t sub_247FCF240(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, char *), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v16 - v13, a2, AssociatedTypeWitness);
  swift_dynamicCast();
  a3(a1, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, a5);
}

uint64_t sub_247FCF3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCF434, v3, 0);
}

uint64_t sub_247FCF434()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  uint64_t v7 = *(void *)(v2 + 80);
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_247FD79C4;
  uint64_t v8 = *(void *)(v0 + 16);
  long long v9 = *(_OWORD *)(v0 + 24);
  *(void *)(v6 + 56) = ObjectType;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 32) = v9;
  *(void *)(v6 + 16) = v8;
  *(void *)(v6 + 24) = v3;
  return MEMORY[0x270FA2498](sub_247FCF53C, 0, 0);
}

uint64_t sub_247FCF510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_247FCF53C, 0, 0);
}

uint64_t sub_247FCF53C()
{
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 72) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v3 + 32) = v10;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = v1;
  long long v9 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 88) + **(int **)(v10 + 88));
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_247FD7A14;
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 16);
  return v9(v7, &unk_2692D6598, v3, v5, v6);
}

uint64_t sub_247FCF688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  id v5[2] = a1;
  v5[7] = *(void *)(a5 - 8);
  v5[8] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[9] = AssociatedTypeWitness;
  v5[10] = *(void *)(AssociatedTypeWitness - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FCF7C0, 0, 0);
}

uint64_t sub_247FCF7C0()
{
  uint64_t v1 = (int *)v0[4];
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[3], v0[9]);
  swift_dynamicCast();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FCF8E8;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[2];
  return v6(v4, v3);
}

uint64_t sub_247FCF8E8()
{
  uint64_t v1 = *(void *)(*v0 + 64);
  uint64_t v2 = *(void *)(*v0 + 56);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v6 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_247FCFA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCFAA8, v3, 0);
}

uint64_t sub_247FCFAA8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 120);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  uint64_t v7 = *(void *)(v2 + 80);
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_247FCFB84;
  uint64_t v8 = *(void *)(v0 + 16);
  long long v9 = *(_OWORD *)(v0 + 24);
  *(void *)(v6 + 56) = ObjectType;
  *(void *)(v6 + 64) = v4;
  *(void *)(v6 + 48) = v7;
  *(_OWORD *)(v6 + 32) = v9;
  *(void *)(v6 + 16) = v8;
  *(void *)(v6 + 24) = v3;
  return MEMORY[0x270FA2498](sub_247FCFCA4, 0, 0);
}

uint64_t sub_247FCFB84()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FCFC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_247FCFCA4, 0, 0);
}

uint64_t sub_247FCFCA4()
{
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 72) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 48);
  *(void *)(v3 + 32) = v10;
  *(void *)(v3 + 40) = v2;
  *(void *)(v3 + 48) = v1;
  long long v9 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 96) + **(int **)(v10 + 96));
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_247FCFDF0;
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 16);
  return v9(v7, &unk_2692D6588, v3, v5, v6);
}

uint64_t sub_247FCFDF0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FCFF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  id v5[2] = a1;
  v5[7] = *(void *)(a5 - 8);
  v5[8] = swift_task_alloc();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[9] = AssociatedTypeWitness;
  v5[10] = *(void *)(AssociatedTypeWitness - 8);
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FD0038, 0, 0);
}

uint64_t sub_247FD0038()
{
  uint64_t v1 = (int *)v0[4];
  (*(void (**)(void, void, void))(v0[10] + 16))(v0[11], v0[3], v0[9]);
  swift_dynamicCast();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v1 + *v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_247FCE1FC;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[2];
  return v6(v4, v3);
}

uint64_t _AnyCoordinated.deinit()
{
  swift_unknownObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t _AnyCoordinated.__deallocating_deinit()
{
  return sub_247FD01A0(MEMORY[0x263F8EEE8]);
}

uint64_t sub_247FD01A0(void (*a1)(void))
{
  a1(*(void *)(v1 + 112));
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v1);
}

uint64_t sub_247FD01E0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_247FD79D0;
  v4[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FCBFDC, v1, 0);
}

uint64_t sub_247FD02B4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_247FD79CC;
  v4[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FCC4DC, v1, 0);
}

uint64_t sub_247FD0388()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247FD79D0;
  v2[2] = v0;
  return MEMORY[0x270FA2498](sub_247FCCACC, v0, 0);
}

uint64_t sub_247FD042C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_247FD79D0;
  v4[4] = *v1;
  return MEMORY[0x270FA2498](sub_247FCCC14, v1, 0);
}

uint64_t sub_247FD0500(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[3] = a2;
  v6[4] = v2;
  v6[1] = sub_247FD79D0;
  v6[2] = a1;
  v6[5] = *v2;
  return MEMORY[0x270FA2498](sub_247FCD198, v2, 0);
}

uint64_t sub_247FD05E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[6] = a5;
  v12[7] = v5;
  v12[4] = a3;
  v12[5] = a4;
  v12[2] = a1;
  uint64_t v12[3] = a2;
  v12[1] = sub_247FD79D0;
  v12[8] = *v5;
  return MEMORY[0x270FA2498](sub_247FCD8C8, v5, 0);
}

uint64_t sub_247FD06DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[7] = a6;
  v14[8] = v6;
  v14[5] = a4;
  v14[6] = a5;
  v14[3] = a2;
  v14[4] = a3;
  v14[1] = sub_247FD79D0;
  void v14[2] = a1;
  v14[9] = *v6;
  return MEMORY[0x270FA2498](sub_247FCE450, v6, 0);
}

uint64_t sub_247FD07E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FD79D0;
  v8[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCEFEC, v3, 0);
}

uint64_t sub_247FD08CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FD79D0;
  v8[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCF434, v3, 0);
}

uint64_t sub_247FD09B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_247FD79D0;
  v8[6] = *v3;
  return MEMORY[0x270FA2498](sub_247FCFAA8, v3, 0);
}

uint64_t sub_247FD0A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D65D0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5BA0);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v9 = a2 + *(void *)(*(void *)a2 + 104);
  swift_beginAccess();
  sub_247FD74B0((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_247FD0BDC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D65D0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v13 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5BA0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t)&v0[*(void *)(*(void *)v0 + 104)];
  swift_beginAccess();
  sub_247FD7518(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_247FB33D4((uint64_t)v6, &qword_2692D65D0);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  if (v0[112])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D65D8);
    sub_247FAAA00(&qword_2692D65E0, &qword_2692D65D8);
    v13[0] = swift_allocError();
    sub_248175350();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, 1, 1, v7);
    swift_beginAccess();
    sub_247FD74B0((uint64_t)v4, v11);
    swift_endAccess();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D65E8);
    sub_247FAAA00(&qword_2692D65F0, &qword_2692D65E8);
    swift_allocError();
    swift_willThrow();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void *sub_247FD0EC0(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_248175A10();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t type metadata accessor for _Coordinated.AsyncThrowingTapHandle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _Coordinated.CommonError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _Coordinated()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_247FD0FAC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_247FD0FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 24);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692D5B60 + dword_2692D5B60);
  return v8(a1, a2, v6);
}

uint64_t sub_247FD10B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for _Coordinated.ValueUpdate()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_247FD1184(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v3);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  return v5(a1, v4, v3);
}

uint64_t sub_247FD1240()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_247FD1290(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(v1 + 40);
  long long v7 = *(_OWORD *)(v1 + 56);
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_247FD79D0;
  *(void *)(v5 + 56) = v4;
  *(_OWORD *)(v5 + 40) = v7;
  *(_OWORD *)(v5 + 24) = v6;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 64) = *(void *)v6;
  return MEMORY[0x270FA2498](sub_247FC0F98, v6, 0);
}

uint64_t sub_247FD1384(uint64_t a1)
{
  return sub_247FD0A9C(a1, v1);
}

uint64_t sub_247FD138C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v2 + 24);
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_247FD79D0;
  *(_OWORD *)(v6 + 32) = v7;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  return MEMORY[0x270FA2498](sub_247FC3A44, 0, 0);
}

uint64_t sub_247FD144C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 24);
  long long v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *long long v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  uint64_t v8 = (void *)swift_task_alloc();
  v7[2] = v8;
  *uint64_t v8 = v7;
  v8[1] = sub_247FC3E44;
  return v10(a1, a2);
}

uint64_t sub_247FD157C()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_247FD15B4()
{
  uint64_t v1 = sub_2481748C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_247FD1658()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(sub_2481748C0() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_247FC45D4(v0 + v3, v4, v1);
}

uint64_t sub_247FD16F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2481748C0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for _Coordinated.ValueUpdate.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_247FD1750(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D5C00);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for _Coordinated.ValueUpdate.Response.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _Coordinated.Coerced()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for _AnyCoordinated()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_247FD17FC()
{
  return 4;
}

uint64_t sub_247FD1804()
{
  return 3;
}

uint64_t sub_247FD180C(uint64_t a1)
{
  return sub_247FC94A0(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(char *))(v1 + 48), *(void *)(v1 + 56), *(void (**)(uint64_t, char *))(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_247FD1844(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_247FD79D0;
  return sub_247FC9C28(a1, a2, v8, v9, v10, v11, v6, v7);
}

uint64_t sub_247FD1934(uint64_t a1)
{
  return sub_247FC94A0(a1, *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(char *))(v1 + 56), *(void *)(v1 + 64), *(void (**)(uint64_t, char *))(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t objectdestroy_47Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_247FD19B0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = v2[8];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_247FD79D0;
  return sub_247FCA430(a1, a2, v8, v9, v10, v11, v6, v7);
}

uint64_t sub_247FD1AA4(uint64_t a1, uint64_t a2)
{
  return sub_247FCA8A4(a1, a2, *(void (**)(uint64_t, char *))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_247FD1AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_247FD79D0;
  return sub_247FCAB44(a1, a2, v8, v9, v11, v10, v6, v7);
}

uint64_t objectdestroy_60Tm()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_247FD1BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_247FD79D0;
  return sub_247FCB124(a1, a2, v8, v9, v11, v10, v6, v7);
}

uint64_t sub_247FD1CAC(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_247FD1CE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_247FD1D30()
{
  return swift_getWitnessTable();
}

uint64_t sub_247FD1D78(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_247FD1DB4(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_247FD1DF0@<X0>(uint64_t a1@<X8>)
{
  return sub_247FBB7A8(a1);
}

uint64_t sub_247FD1E18()
{
  return 8;
}

void *sub_247FD1E24(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t dispatch thunk of CoordinationProtocol.wrappedValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CoordinationProtocol.submit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 32) + **(int **)(a3 + 32));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79CC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CoordinationProtocol.invalidate()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 40) + **(int **)(a2 + 40));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247FD79D0;
  return v7(a1, a2);
}

uint64_t dispatch thunk of CoordinationProtocol.updateWithoutCoordination(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CoordinationProtocol.updatingWithoutCoordination(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 56) + **(int **)(a4 + 56));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247FD79D0;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CoordinationProtocol.updateWithCoordination<A>(to:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 64)
                                                                                              + **(int **)(a7 + 64));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  void *v15 = v7;
  v15[1] = sub_247FD79D0;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of CoordinationProtocol.updatingWithCoordination<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a8 + 72) + **(int **)(a8 + 72));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v8 + 16) = v17;
  void *v17 = v8;
  v17[1] = sub_247FD79D0;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of CoordinationProtocol.tapping(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 80) + **(int **)(a5 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_247FD79D0;
  return v13(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  void *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 88) + **(int **)(a5 + 88));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_247FD79D0;
  return v13(a1, a2, a3, a4, a5);
}

{
  uint64_t v5;
  void *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;

  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 96) + **(int **)(a5 + 96));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_247FD79D0;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_247FD2918()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for _Coordinated(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _Coordinated);
}

uint64_t dispatch thunk of _Coordinated.wrappedValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of _Coordinated.wrappedValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of _Coordinated.wrappedValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of _Coordinated.submit(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 272) + **(int **)(*(void *)v1 + 272));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79CC;
  return v6(a1);
}

uint64_t dispatch thunk of _Coordinated.__allocating_init(coordinating:receiver:)()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of _Coordinated.invalidate()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 296) + **(int **)(*(void *)v0 + 296));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247FCB950;
  return v4();
}

uint64_t dispatch thunk of _Coordinated.updateWithoutCoordination(to:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 304) + **(int **)(*(void *)v1 + 304));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79D0;
  return v6(a1);
}

uint64_t dispatch thunk of _Coordinated.updatingWithoutCoordination(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 312) + **(int **)(*(void *)v2 + 312));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FD79D0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of _Coordinated.updateWithCoordination<A>(to:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 320)
                                                                            + **(int **)(*(void *)v5 + 320));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[1] = sub_247FCB950;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of _Coordinated.updatingWithCoordination<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 328)
                                                                                     + **(int **)(*(void *)v6 + 328));
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *uint64_t v14 = v7;
  v14[1] = sub_247FD79D0;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of _Coordinated.tapping(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 352)
                                                          + **(int **)(*(void *)v3 + 352));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 360)
                                                          + **(int **)(*(void *)v3 + 360));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 368)
                                                          + **(int **)(*(void *)v3 + 368));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

uint64_t sub_247FD34B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unint64_t sub_247FD34C0(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_247FD34D8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *sub_247FD3524(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247FD35C8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247FD362C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_247FD3680(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

void *sub_247FD36DC(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

uint64_t sub_247FD36FC()
{
  return swift_initClassMetadata2();
}

void *sub_247FD3744(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void sub_247FD3778(id *a1)
{
}

void **sub_247FD3780(void **a1, id *a2)
{
  id v3 = *a1;
  id v4 = *a2;
  id v5 = *a2;
  *a1 = v4;

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void **sub_247FD37D4(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_247FD3808(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_247FD3864(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for _Coordinated.HaltingTapError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of CoordinatedTapHandle.untap()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_247FD38E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_247FD38E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_247FD399C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64) + 7;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v6 + ((v5 + 9) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v10 = (a1 + v5 + 9) & ~v5;
    uint64_t v11 = ((unint64_t)a2 + v5 + 9) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v10, v11);
    *(void *)((v6 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v6 + v11) & 0xFFFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v3;
}

uint64_t sub_247FD3AC4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 9) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
  return swift_release();
}

uint64_t sub_247FD3B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 16;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 9 + a1) & ~v6;
  uint64_t v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v7, v8);
  *(void *)((*(void *)(v5 + 48) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_247FD3BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 24;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 9 + a1) & ~v6;
  uint64_t v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v7, v8);
  *(void *)((*(void *)(v5 + 40) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_247FD3CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 9 + a1) & ~v6;
  uint64_t v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  *(void *)((*(void *)(v5 + 32) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_247FD3D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 40;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = (v6 + 9 + a1) & ~v6;
  uint64_t v8 = (v6 + 9 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v7, v8);
  *(void *)((*(void *)(v5 + 24) + 7 + v7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + v8) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_247FD3E00(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7;
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + ((v6 + 9) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v10 = a2 - v7;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x247FD3F68);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v7 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  uint64_t v18 = ((unint64_t)a1 + v6 + 9) & ~v6;
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(v18);
  }
  unint64_t v19 = *(void *)((v8 + v18) & 0xFFFFFFFFFFFFFFF8);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void sub_247FD3F7C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7;
  unint64_t v11 = ((v10 + ((v9 + 9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 >= a3)
  {
    int v15 = 0;
    int v16 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            unint64_t v19 = (unint64_t)&a1[v9 + 9] & ~v9;
            if (v7 < 0x7FFFFFFF)
            {
              uint64_t v21 = (void *)((v10 + v19) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0) {
                uint64_t v22 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v22 = a2 - 1;
              }
              *uint64_t v21 = v22;
            }
            else
            {
              uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
              v20(v19);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8;
    if (((v10 + ((v9 + 9) & ~v9)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    int v16 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((v10 + ((v9 + 9) & ~v9)) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v17 = v16;
  }
  else {
    int v17 = 1;
  }
  if (((v10 + ((v9 + 9) & ~v9)) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v18 = ~v8 + a2;
    bzero(a1, ((v10 + ((v9 + 9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v18;
  }
  switch(v15)
  {
    case 1:
      a1[v11] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v17;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x247FD417CLL);
    case 4:
      *(_DWORD *)&a1[v11] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_247FD41A4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_247FD4244(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 16) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v9 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v10 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v9 = *v10;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)v9 + v5 + 8) & ~v5, ((unint64_t)v10 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_247FD4340(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

void *sub_247FD4384(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 16))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_247FD4408(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_247FD448C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_247FD4510(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_247FD4594(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 8) & ~v6);
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_247FD4718(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 16) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x247FD4954);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
        int v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_247FD497C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_247FD49F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_247FD4B34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_247FD4BF8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_247FD4CF0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    unsigned int v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_247FD4E5C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_247FD4F54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    unsigned int v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_247FD50C0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_247FD5260(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x247FD549CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          unint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_247FD54C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_247FD54F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t type metadata accessor for CoordinatedDecision()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_247FD553C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for _Coordinated.Coerced(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _Coordinated.Coerced);
}

uint64_t dispatch thunk of _Coordinated.Coerced.wrappedValue.getter(uint64_t a1)
{
  int v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79D0;
  return v6(a1);
}

uint64_t dispatch thunk of _Coordinated.Coerced.submit(_:)(uint64_t a1)
{
  int v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 200) + **(int **)(*(void *)v1 + 200));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79CC;
  return v6(a1);
}

uint64_t dispatch thunk of _Coordinated.Coerced.invalidate()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 208) + **(int **)(*(void *)v0 + 208));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247FD79D0;
  return v4();
}

uint64_t dispatch thunk of _Coordinated.Coerced.updateWithoutCoordination(to:)(uint64_t a1)
{
  int v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 216) + **(int **)(*(void *)v1 + 216));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79D0;
  return v6(a1);
}

uint64_t dispatch thunk of _Coordinated.Coerced.updatingWithoutCoordination(_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 224) + **(int **)(*(void *)v2 + 224));
  int v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *int v6 = v3;
  v6[1] = sub_247FD79D0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of _Coordinated.Coerced.updateWithCoordination<A>(to:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 232)
                                                                            + **(int **)(*(void *)v5 + 232));
  unsigned int v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *unsigned int v12 = v6;
  v12[1] = sub_247FD79D0;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of _Coordinated.Coerced.updatingWithCoordination<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 240)
                                                                                     + **(int **)(*(void *)v6 + 240));
  unsigned int v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *unsigned int v14 = v7;
  v14[1] = sub_247FD79D0;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of _Coordinated.Coerced.tapping(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 248)
                                                          + **(int **)(*(void *)v3 + 248));
  unsigned int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unsigned int v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  size_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 256)
                                                          + **(int **)(*(void *)v3 + 256));
  unsigned int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unsigned int v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  size_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 264)
                                                          + **(int **)(*(void *)v3 + 264));
  unsigned int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unsigned int v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

uint64_t sub_247FD60AC()
{
  return sub_247FD610C();
}

uint64_t type metadata accessor for _TypeEraser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for _TypeEraser(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _TypeEraser);
}

uint64_t dispatch thunk of _TypeEraser.__allocating_init(wrappedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_247FD6100()
{
  return sub_247FD610C();
}

uint64_t sub_247FD610C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for _AnyCoordinated(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for _AnyCoordinated);
}

uint64_t dispatch thunk of _AnyCoordinated.wrappedValue.getter(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 104) + **(int **)(*(void *)v1 + 104));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79D0;
  return v6(a1);
}

uint64_t dispatch thunk of _AnyCoordinated.__allocating_init<A>(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of _AnyCoordinated.submit(_:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 120) + **(int **)(*(void *)v1 + 120));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79CC;
  return v6(a1);
}

uint64_t dispatch thunk of _AnyCoordinated.invalidate()()
{
  uint64_t v4 = (uint64_t (*)(void))(*(void *)(*(void *)v0 + 128) + **(int **)(*(void *)v0 + 128));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_247FD79D0;
  return v4();
}

uint64_t dispatch thunk of _AnyCoordinated.updateWithoutCoordination(to:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 136) + **(int **)(*(void *)v1 + 136));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_247FD79D0;
  return v6(a1);
}

uint64_t dispatch thunk of _AnyCoordinated.updatingWithoutCoordination(_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_247FD79D0;
  return v8(a1, a2);
}

uint64_t dispatch thunk of _AnyCoordinated.updateWithCoordination<A>(to:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unsigned int v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v5 + 152)
                                                                            + **(int **)(*(void *)v5 + 152));
  unsigned int v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *unsigned int v12 = v6;
  v12[1] = sub_247FD79D0;
  return v14(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of _AnyCoordinated.updatingWithCoordination<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v6 + 160)
                                                                                     + **(int **)(*(void *)v6 + 160));
  unsigned int v14 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v14;
  *unsigned int v14 = v7;
  v14[1] = sub_247FD79D0;
  return v16(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of _AnyCoordinated.tapping(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 168)
                                                          + **(int **)(*(void *)v3 + 168));
  unsigned int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unsigned int v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  size_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 176)
                                                          + **(int **)(*(void *)v3 + 176));
  unsigned int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unsigned int v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  size_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)v3 + 184)
                                                          + **(int **)(*(void *)v3 + 184));
  unsigned int v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *unsigned int v8 = v4;
  v8[1] = sub_247FD79D0;
  return v10(a1, a2, a3);
}

unsigned char *sub_247FD6C64(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FD6D30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_247FD6D58(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FD6E24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_247FD6E4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_247FD6E68()
{
  return swift_getWitnessTable();
}

uint64_t sub_247FD6E84()
{
  return swift_getWitnessTable();
}

uint64_t sub_247FD6EA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_247FD6EBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_247FD6ED8()
{
  return swift_getWitnessTable();
}

uint64_t sub_247FD6EF4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_247FD6F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247FD79D0;
  return sub_247FCFF00(a1, a2, v7, v8, v6);
}

uint64_t sub_247FD7000(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247FD79D0;
  return sub_247FCF688(a1, a2, v7, v8, v6);
}

uint64_t sub_247FD70D4(uint64_t a1, uint64_t a2)
{
  return sub_247FCF240(a1, a2, *(void (**)(uint64_t, char *))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16));
}

uint64_t sub_247FD70E4(char *a1)
{
  return sub_247FCE9B4(a1, *(void (**)(char *))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16));
}

uint64_t sub_247FD70F4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_247FD712C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v8 = v2[6];
  uint64_t v7 = v2[7];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247FD79D0;
  return sub_247FCEBCC(a1, a2, v8, v7, v6);
}

uint64_t sub_247FD7208(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v8 = v2[6];
  uint64_t v7 = v2[7];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_247FD79D0;
  return sub_247FCDF9C(a1, a2, v8, v7, v6);
}

uint64_t sub_247FD72E4(char *a1)
{
  return sub_247FCD65C(a1, *(void (**)(char *))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16));
}

uint64_t sub_247FD72F4()
{
  uint64_t v1 = sub_2481748C0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_247FD73C8()
{
  uint64_t v2 = *(void *)(sub_2481748C0() - 8);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  id v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_247FD79D0;
  return MEMORY[0x270FA2498](sub_247FC4BC4, v3, 0);
}

uint64_t sub_247FD74B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D65D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_247FD7518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D65D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_247FD7580(uint64_t a1)
{
  return sub_247FC1230(a1, *(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 16));
}

uint64_t sub_247FD7590()
{
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v1 = sub_248175370();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_247FD766C(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B13BEC0);
  uint64_t v6 = *(void *)(sub_248175370() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v1 + v7;
  uint64_t v9 = (uint64_t *)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  unsigned int v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *unsigned int v12 = v2;
  v12[1] = sub_247FD77CC;
  return sub_247FC14E0(a1, v8, v10, v11, v5, v4);
}

uint64_t sub_247FD77CC(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_247FD78C8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_247FD7908(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_247FD79D0;
  return sub_247FC26E8(a1, v4, v5, v6);
}

uint64_t sub_247FD7A24(long long *a1)
{
  sub_248175EB0();
  sub_248175E80();
  uint64_t v3 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630) + 32);
  sub_2481751A0();
  uint64_t v4 = type metadata accessor for RepairModel();
  uint64_t v5 = v3 + *(int *)(v4 + 20);
  sub_248175E70();
  SetupModel.RemoteRole.hash(into:)();
  switch(*(unsigned char *)(v5 + 88))
  {
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      SetupError.hash(into:)((uint64_t)a1);
      break;
  }
  DiscoveryModel.hash(into:)(a1);
  type metadata accessor for SetupModel();
  AuthenticationModel.hash(into:)((uint64_t)a1);
  SignInModel.hash(into:)((uint64_t)a1);
  switch(*(unsigned char *)(v3 + *(int *)(v4 + 24) + 40))
  {
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      RepairError.hash(into:)((uint64_t)a1);
      break;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5C00);
  sub_247FEFBB8();
  return sub_2481750B0();
}

unint64_t static Constants.MachServiceNames.setupService.getter()
{
  return 0xD000000000000021;
}

unint64_t static Constants.MachServiceNames.repairService.getter()
{
  return 0xD000000000000022;
}

uint64_t MachRepairMessage.hash(into:)(long long *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RepairModel();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unsigned int v12 = (char *)v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v88 - v13;
  uint64_t v15 = type metadata accessor for MachRepairMessage();
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (void *)((char *)v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_247FEFA20(v1, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v89 = *v17;
      uint64_t v23 = v17[3];
      uint64_t v24 = v17[5];
      uint64_t v25 = v17[7];
      uint64_t v27 = v17[9];
      uint64_t v26 = v17[10];
      uint64_t v28 = v17[12];
      *(void *)&long long v90 = v17[11];
      uint64_t v29 = v17[13];
      uint64_t v30 = v17[14];
      *(void *)&long long v91 = v29;
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      v88[0] = v27;
      swift_bridgeObjectRelease();
      v88[1] = v25;
      swift_bridgeObjectRelease();
      v88[2] = v24;
      swift_bridgeObjectRelease();
      uint64_t v89 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_247FDEAB0(a1, v26);
      swift_bridgeObjectRelease();
      sub_248175E80();
      if (v28)
      {
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v31 = v90;
        sub_2481751A0();
        sub_247FDEDB8((uint64_t)a1, v30);
        sub_247FE0708(v31, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = v31;
        uint64_t v33 = v28;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = v90;
        uint64_t v33 = 0;
      }
      uint64_t result = sub_247FE0708(v32, v33);
      break;
    case 2u:
      sub_247FEFA88((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for RepairModel);
      sub_248175E70();
      sub_2481751A0();
      char v34 = &v12[*(int *)(v9 + 20)];
      sub_248175E70();
      uint64_t v35 = *((void *)v34 + 3);
      int v36 = *((_DWORD *)v34 + 8);
      __int16 v37 = *((_WORD *)v34 + 18);
      long long v92 = *(_OWORD *)(v34 + 8);
      *(void *)&long long v93 = v35;
      WORD6(v93) = v37;
      DWORD2(v93) = v36;
      SetupModel.RemoteRole.hash(into:)();
      char v38 = v34[88];
      switch(v38)
      {
        case -6:
        case -5:
        case -4:
        case -3:
        case -2:
        case -1:
          sub_248175E70();
          break;
        default:
          uint64_t v67 = *((void *)v34 + 9);
          uint64_t v66 = *((void *)v34 + 10);
          long long v91 = *(_OWORD *)(v34 + 56);
          long long v90 = *(_OWORD *)(v34 + 40);
          sub_248175E70();
          long long v92 = v90;
          long long v93 = v91;
          *(void *)&long long v94 = v67;
          *((void *)&v94 + 1) = v66;
          LOBYTE(v95) = v38;
          SetupError.hash(into:)((uint64_t)a1);
          break;
      }
      long long v68 = *((_OWORD *)v34 + 15);
      long long v100 = *((_OWORD *)v34 + 14);
      long long v101 = v68;
      long long v69 = *((_OWORD *)v34 + 17);
      long long v102 = *((_OWORD *)v34 + 16);
      long long v103 = v69;
      long long v70 = *((_OWORD *)v34 + 11);
      long long v96 = *((_OWORD *)v34 + 10);
      long long v97 = v70;
      long long v71 = *((_OWORD *)v34 + 13);
      long long v98 = *((_OWORD *)v34 + 12);
      long long v99 = v71;
      long long v72 = *((_OWORD *)v34 + 7);
      long long v92 = *((_OWORD *)v34 + 6);
      long long v93 = v72;
      long long v73 = *((_OWORD *)v34 + 9);
      long long v94 = *((_OWORD *)v34 + 8);
      long long v95 = v73;
      DiscoveryModel.hash(into:)(a1);
      type metadata accessor for SetupModel();
      AuthenticationModel.hash(into:)((uint64_t)a1);
      SignInModel.hash(into:)((uint64_t)a1);
      uint64_t v74 = &v12[*(int *)(v9 + 24)];
      char v75 = v74[40];
      switch(v75)
      {
        case -5:
        case -4:
        case -3:
        case -2:
        case -1:
          sub_248175E70();
          break;
        default:
          uint64_t v76 = *((void *)v74 + 4);
          long long v91 = *((_OWORD *)v74 + 1);
          long long v90 = *(_OWORD *)v74;
          sub_248175E70();
          long long v92 = v90;
          long long v93 = v91;
          *(void *)&long long v94 = v76;
          BYTE8(v94) = v75;
          RepairError.hash(into:)((uint64_t)a1);
          break;
      }
      uint64_t result = sub_247FEFB38((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for RepairModel);
      break;
    case 3u:
      uint64_t v39 = v17[3];
      sub_248175E70();
      sub_2481751A0();
      sub_247FDEDB8((uint64_t)a1, v39);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      break;
    case 4u:
      sub_247FE06A4((uint64_t)v17, (uint64_t)v8, &qword_2692D6630);
      sub_248175E70();
      sub_247FD7A24(a1);
      uint64_t v41 = (uint64_t)v8;
      uint64_t v42 = &qword_2692D6630;
      goto LABEL_31;
    case 5u:
      sub_247FE06A4((uint64_t)v17, (uint64_t)v5, &qword_2692D6628);
      sub_248175E70();
      sub_248175EB0();
      sub_248175EB0();
      unint64_t v43 = &v5[*(int *)(v3 + 32)];
      sub_2481751A0();
      uint64_t v44 = &v43[*(int *)(v9 + 20)];
      sub_248175E70();
      uint64_t v45 = *((void *)v44 + 3);
      int v46 = *((_DWORD *)v44 + 8);
      __int16 v47 = *((_WORD *)v44 + 18);
      long long v92 = *(_OWORD *)(v44 + 8);
      *(void *)&long long v93 = v45;
      WORD6(v93) = v47;
      DWORD2(v93) = v46;
      SetupModel.RemoteRole.hash(into:)();
      char v48 = v44[88];
      switch(v48)
      {
        case -6:
        case -5:
        case -4:
        case -3:
        case -2:
        case -1:
          sub_248175E70();
          break;
        default:
          uint64_t v78 = *((void *)v44 + 9);
          uint64_t v77 = *((void *)v44 + 10);
          long long v91 = *(_OWORD *)(v44 + 56);
          long long v90 = *(_OWORD *)(v44 + 40);
          sub_248175E70();
          long long v92 = v90;
          long long v93 = v91;
          *(void *)&long long v94 = v78;
          *((void *)&v94 + 1) = v77;
          LOBYTE(v95) = v48;
          SetupError.hash(into:)((uint64_t)a1);
          break;
      }
      long long v79 = *((_OWORD *)v44 + 15);
      long long v100 = *((_OWORD *)v44 + 14);
      long long v101 = v79;
      long long v80 = *((_OWORD *)v44 + 17);
      long long v102 = *((_OWORD *)v44 + 16);
      long long v103 = v80;
      long long v81 = *((_OWORD *)v44 + 11);
      long long v96 = *((_OWORD *)v44 + 10);
      long long v97 = v81;
      long long v82 = *((_OWORD *)v44 + 13);
      long long v98 = *((_OWORD *)v44 + 12);
      long long v99 = v82;
      long long v83 = *((_OWORD *)v44 + 7);
      long long v92 = *((_OWORD *)v44 + 6);
      long long v93 = v83;
      long long v84 = *((_OWORD *)v44 + 9);
      long long v94 = *((_OWORD *)v44 + 8);
      long long v95 = v84;
      DiscoveryModel.hash(into:)(a1);
      type metadata accessor for SetupModel();
      AuthenticationModel.hash(into:)((uint64_t)a1);
      SignInModel.hash(into:)((uint64_t)a1);
      unint64_t v85 = &v43[*(int *)(v9 + 24)];
      char v86 = v85[40];
      switch(v86)
      {
        case -5:
        case -4:
        case -3:
        case -2:
        case -1:
          sub_248175E70();
          break;
        default:
          uint64_t v87 = *((void *)v85 + 4);
          long long v91 = *((_OWORD *)v85 + 1);
          long long v90 = *(_OWORD *)v85;
          sub_248175E70();
          long long v92 = v90;
          long long v93 = v91;
          *(void *)&long long v94 = v87;
          BYTE8(v94) = v86;
          RepairError.hash(into:)((uint64_t)a1);
          break;
      }
      uint64_t v42 = &qword_2692D6628;
      uint64_t v41 = (uint64_t)v5;
LABEL_31:
      uint64_t result = sub_247FB33D4(v41, v42);
      break;
    case 6u:
      uint64_t v49 = *v17;
      uint64_t v50 = v17[1];
      uint64_t v51 = v17[2];
      uint64_t v52 = v17[3];
      uint64_t v53 = v17[4];
      char v54 = *((unsigned char *)v17 + 40);
      sub_248175E70();
      *(void *)&long long v92 = v49;
      *((void *)&v92 + 1) = v50;
      *(void *)&long long v93 = v51;
      *((void *)&v93 + 1) = v52;
      *(void *)&long long v94 = v53;
      BYTE8(v94) = v54;
      RepairError.hash(into:)((uint64_t)a1);
      uint64_t result = sub_247FE0600(v49, v50, v51, v52, v53, v54);
      break;
    case 7u:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_247FEFA88((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RepairModel);
      sub_248175E70();
      sub_2481751A0();
      int v18 = &v14[*(int *)(v9 + 20)];
      sub_248175E70();
      uint64_t v19 = *((void *)v18 + 3);
      int v20 = *((_DWORD *)v18 + 8);
      __int16 v21 = *((_WORD *)v18 + 18);
      long long v92 = *(_OWORD *)(v18 + 8);
      *(void *)&long long v93 = v19;
      WORD6(v93) = v21;
      DWORD2(v93) = v20;
      SetupModel.RemoteRole.hash(into:)();
      char v22 = v18[88];
      switch(v22)
      {
        case -6:
        case -5:
        case -4:
        case -3:
        case -2:
        case -1:
          sub_248175E70();
          break;
        default:
          uint64_t v56 = *((void *)v18 + 9);
          uint64_t v55 = *((void *)v18 + 10);
          long long v91 = *(_OWORD *)(v18 + 56);
          long long v90 = *(_OWORD *)(v18 + 40);
          sub_248175E70();
          long long v92 = v90;
          long long v93 = v91;
          *(void *)&long long v94 = v56;
          *((void *)&v94 + 1) = v55;
          LOBYTE(v95) = v22;
          SetupError.hash(into:)((uint64_t)a1);
          break;
      }
      long long v57 = *((_OWORD *)v18 + 15);
      long long v100 = *((_OWORD *)v18 + 14);
      long long v101 = v57;
      long long v58 = *((_OWORD *)v18 + 17);
      long long v102 = *((_OWORD *)v18 + 16);
      long long v103 = v58;
      long long v59 = *((_OWORD *)v18 + 11);
      long long v96 = *((_OWORD *)v18 + 10);
      long long v97 = v59;
      long long v60 = *((_OWORD *)v18 + 13);
      long long v98 = *((_OWORD *)v18 + 12);
      long long v99 = v60;
      long long v61 = *((_OWORD *)v18 + 7);
      long long v92 = *((_OWORD *)v18 + 6);
      long long v93 = v61;
      long long v62 = *((_OWORD *)v18 + 9);
      long long v94 = *((_OWORD *)v18 + 8);
      long long v95 = v62;
      DiscoveryModel.hash(into:)(a1);
      type metadata accessor for SetupModel();
      AuthenticationModel.hash(into:)((uint64_t)a1);
      SignInModel.hash(into:)((uint64_t)a1);
      int64_t v63 = &v14[*(int *)(v9 + 24)];
      char v64 = v63[40];
      switch(v64)
      {
        case -5:
        case -4:
        case -3:
        case -2:
        case -1:
          sub_248175E70();
          break;
        default:
          uint64_t v65 = *((void *)v63 + 4);
          long long v91 = *((_OWORD *)v63 + 1);
          long long v90 = *(_OWORD *)v63;
          sub_248175E70();
          long long v92 = v90;
          long long v93 = v91;
          *(void *)&long long v94 = v65;
          BYTE8(v94) = v64;
          RepairError.hash(into:)((uint64_t)a1);
          break;
      }
      uint64_t result = sub_247FEFB38((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RepairModel);
      break;
  }
  return result;
}

unint64_t sub_247FD8AB4(char a1)
{
  unint64_t result = 0x726961706572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6552726961706572;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x526D6F74706D7973;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0x74706965636572;
      break;
    case 7:
      unint64_t result = 0x6572756C696166;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_247FD8BD4()
{
  return sub_247FD8AB4(*v0);
}

uint64_t sub_247FD8BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FEF1A0(a1, a2);
  *a3 = result;
  return result;
}

void sub_247FD8C04(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_247FD8C10(uint64_t a1)
{
  unint64_t v2 = sub_247FE0758();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD8C4C(uint64_t a1)
{
  unint64_t v2 = sub_247FE0758();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FD8C88(uint64_t a1)
{
  unint64_t v2 = sub_247FE08A8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD8CC4(uint64_t a1)
{
  unint64_t v2 = sub_247FE08A8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FD8D00(uint64_t a1)
{
  unint64_t v2 = sub_247FE09A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD8D3C(uint64_t a1)
{
  unint64_t v2 = sub_247FE09A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FD8D78(uint64_t a1)
{
  unint64_t v2 = sub_247FE07AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD8DB4(uint64_t a1)
{
  unint64_t v2 = sub_247FE07AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FD8DF0(uint64_t a1)
{
  unint64_t v2 = sub_247FE0B40();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD8E2C(uint64_t a1)
{
  unint64_t v2 = sub_247FE0B40();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FD8E68(uint64_t a1)
{
  unint64_t v2 = sub_247FE0854();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD8EA4(uint64_t a1)
{
  unint64_t v2 = sub_247FE0854();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FD8EE0(uint64_t a1)
{
  unint64_t v2 = sub_247FE0C3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD8F1C(uint64_t a1)
{
  unint64_t v2 = sub_247FE0C3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FD8F58(uint64_t a1)
{
  unint64_t v2 = sub_247FE0B94();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD8F94(uint64_t a1)
{
  unint64_t v2 = sub_247FE0B94();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FD8FD0(uint64_t a1)
{
  unint64_t v2 = sub_247FE0A98();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FD900C(uint64_t a1)
{
  unint64_t v2 = sub_247FE0A98();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MachRepairMessage.encode(to:)(void *a1)
{
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6638);
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  long long v94 = (char *)&v70 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6640);
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v88 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6648);
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x270FA5388](v93);
  uint64_t v89 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628);
  MEMORY[0x270FA5388](v85);
  uint64_t v87 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6650);
  uint64_t v84 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  long long v83 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  MEMORY[0x270FA5388](v79);
  uint64_t v82 = (uint64_t)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6658);
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v78 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6660);
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  long long v72 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6668);
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  long long v73 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6670);
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  unsigned int v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for RepairModel();
  uint64_t v13 = MEMORY[0x270FA5388](v97);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v70 - v16;
  uint64_t v18 = type metadata accessor for MachRepairMessage();
  MEMORY[0x270FA5388](v18);
  int v20 = (uint64_t *)((char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6678);
  uint64_t v99 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  char v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FE0758();
  long long v98 = v22;
  sub_248175F60();
  sub_247FEFA20(v100, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v27 = (char *)v20[1];
      uint64_t v100 = *v20;
      uint64_t v28 = v20[2];
      uint64_t v29 = v20[3];
      uint64_t v30 = v20[5];
      uint64_t v96 = v20[4];
      uint64_t v97 = v28;
      uint64_t v31 = v20[7];
      uint64_t v93 = v20[6];
      uint64_t v32 = v20[9];
      uint64_t v92 = v20[8];
      uint64_t v91 = v20[10];
      uint64_t v88 = (char *)v20[11];
      uint64_t v90 = v20[12];
      uint64_t v33 = v20[14];
      uint64_t v89 = (char *)v20[13];
      LOBYTE(v101) = 1;
      sub_247FE0B94();
      char v34 = v73;
      uint64_t v35 = v98;
      sub_248175B50();
      uint64_t v101 = v100;
      uint64_t v102 = (uint64_t)v27;
      long long v94 = v27;
      uint64_t v103 = v97;
      uint64_t v104 = v29;
      uint64_t v36 = (uint64_t)v88;
      uint64_t v95 = v29;
      uint64_t v105 = v96;
      uint64_t v106 = v30;
      uint64_t v96 = v30;
      uint64_t v107 = v93;
      uint64_t v108 = v31;
      uint64_t v97 = v31;
      uint64_t v109 = v92;
      uint64_t v110 = v32;
      uint64_t v37 = v90;
      uint64_t v100 = v32;
      uint64_t v111 = v91;
      uint64_t v112 = v88;
      uint64_t v113 = v90;
      uint64_t v114 = v89;
      uint64_t v115 = v33;
      sub_247FE0BE8();
      uint64_t v38 = v77;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v34, v38);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v35, v116);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_247FE0708(v36, v37);
    case 2u:
      sub_247FEFA88((uint64_t)v20, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for RepairModel);
      LOBYTE(v101) = 2;
      sub_247FE0B40();
      uint64_t v39 = v72;
      uint64_t v40 = v116;
      uint64_t v41 = v98;
      sub_248175B50();
      sub_247FEFAF0(&qword_2692D66B0, (void (*)(uint64_t))type metadata accessor for RepairModel);
      uint64_t v42 = v76;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v39, v42);
      sub_247FEFB38((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for RepairModel);
      goto LABEL_9;
    case 3u:
      uint64_t v44 = *v20;
      uint64_t v43 = v20[1];
      uint64_t v46 = v20[2];
      uint64_t v45 = v20[3];
      LOBYTE(v101) = 3;
      sub_247FE0A98();
      __int16 v47 = v78;
      uint64_t v48 = v116;
      uint64_t v49 = v98;
      sub_248175B50();
      uint64_t v101 = v44;
      uint64_t v102 = v43;
      uint64_t v103 = v46;
      uint64_t v104 = v45;
      sub_247FE0AEC();
      uint64_t v50 = v81;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v47, v50);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v49, v48);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 4u:
      uint64_t v51 = v82;
      sub_247FE06A4((uint64_t)v20, v82, &qword_2692D6630);
      LOBYTE(v101) = 4;
      sub_247FE09A0();
      uint64_t v52 = v83;
      uint64_t v40 = v116;
      uint64_t v41 = v98;
      sub_248175B50();
      sub_247FE09F4();
      uint64_t v53 = v86;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v53);
      char v54 = &qword_2692D6630;
      goto LABEL_8;
    case 5u:
      uint64_t v51 = v87;
      sub_247FE06A4((uint64_t)v20, v87, &qword_2692D6628);
      LOBYTE(v101) = 5;
      sub_247FE08A8();
      uint64_t v55 = v89;
      uint64_t v40 = v116;
      uint64_t v41 = v98;
      sub_248175B50();
      sub_247FE08FC();
      uint64_t v56 = v93;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v55, v56);
      char v54 = &qword_2692D6628;
LABEL_8:
      sub_247FB33D4(v51, v54);
LABEL_9:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v41, v40);
      break;
    case 6u:
      uint64_t v57 = *v20;
      uint64_t v58 = v20[1];
      uint64_t v59 = v20[2];
      uint64_t v60 = v20[3];
      uint64_t v61 = v20[4];
      char v62 = *((unsigned char *)v20 + 40);
      LOBYTE(v101) = 7;
      sub_247FE07AC();
      int64_t v63 = v94;
      char v64 = v98;
      sub_248175B50();
      uint64_t v100 = v57;
      uint64_t v101 = v57;
      uint64_t v65 = v58;
      LOBYTE(v58) = v62;
      uint64_t v102 = v65;
      uint64_t v103 = v59;
      uint64_t v104 = v60;
      uint64_t v105 = v61;
      LOBYTE(v106) = v62;
      sub_247FE0800();
      uint64_t v66 = v96;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v63, v66);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v64, v116);
      uint64_t result = sub_247FE0600(v100, v65, v59, v60, v61, v58);
      break;
    case 7u:
      LOBYTE(v101) = 6;
      sub_247FE0854();
      uint64_t v67 = v88;
      uint64_t v68 = v116;
      long long v69 = v98;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v67, v91);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v69, v68);
      break;
    default:
      sub_247FEFA88((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RepairModel);
      LOBYTE(v101) = 0;
      sub_247FE0C3C();
      uint64_t v23 = v116;
      uint64_t v24 = v98;
      sub_248175B50();
      sub_247FEFAF0(&qword_2692D66B0, (void (*)(uint64_t))type metadata accessor for RepairModel);
      uint64_t v25 = v71;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v12, v25);
      sub_247FEFB38((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for RepairModel);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v24, v23);
      break;
  }
  return result;
}

uint64_t MachRepairMessage.hashValue.getter()
{
  sub_248175E50();
  MachRepairMessage.hash(into:)(v1);
  return sub_248175EC0();
}

uint64_t MachRepairMessage.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D66F8);
  uint64_t v106 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v118 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6700);
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v111 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6708);
  uint64_t v90 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v117 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6710);
  uint64_t v100 = *(void *)(v101 - 8);
  MEMORY[0x270FA5388](v101);
  uint64_t v110 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6718);
  uint64_t v116 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v109 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6720);
  uint64_t v98 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v115 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6728);
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v108 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6730);
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v107 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6738);
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  unsigned int v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = type metadata accessor for MachRepairMessage();
  uint64_t v13 = MEMORY[0x270FA5388](v119);
  uint64_t v89 = (_OWORD *)((char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v92 = (char *)&v83 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v91 = (char *)&v83 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v83 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v83 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v83 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)&v83 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v83 - v31;
  uint64_t v33 = a1[3];
  uint64_t v120 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  sub_247FE0758();
  uint64_t v34 = v129;
  sub_248175F20();
  if (v34)
  {
LABEL_21:
    uint64_t v45 = (uint64_t)v120;
    return __swift_destroy_boxed_opaque_existential_1(v45);
  }
  uint64_t v86 = v30;
  uint64_t v84 = v27;
  uint64_t v87 = v24;
  uint64_t v85 = v21;
  uint64_t v36 = v115;
  uint64_t v35 = v116;
  uint64_t v129 = 0;
  uint64_t v37 = v117;
  uint64_t v38 = v118;
  uint64_t v88 = v32;
  uint64_t v39 = v114;
  uint64_t v40 = sub_248175B30();
  if (*(void *)(v40 + 16) != 1)
  {
    uint64_t v47 = sub_2481758A0();
    swift_allocError();
    uint64_t v49 = v48;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v49 = v119;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v47 - 8) + 104))(v49, *MEMORY[0x263F8DCB0], v47);
    swift_willThrow();
LABEL_20:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v12, v39);
    goto LABEL_21;
  }
  switch(*(unsigned char *)(v40 + 32))
  {
    case 1:
      LOBYTE(v121) = 1;
      sub_247FE0B94();
      uint64_t v50 = v108;
      uint64_t v51 = v129;
      sub_248175A50();
      if (v51) {
        goto LABEL_20;
      }
      sub_247FE0E80();
      uint64_t v52 = v96;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v95 + 8))(v50, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v12, v39);
      uint64_t v53 = *((void *)&v121 + 1);
      uint64_t v54 = v126;
      uint64_t v55 = v84;
      *uint64_t v84 = v121;
      v55[1] = v53;
      long long v56 = v123;
      *((_OWORD *)v55 + 1) = v122;
      *((_OWORD *)v55 + 2) = v56;
      long long v57 = v125;
      *((_OWORD *)v55 + 3) = v124;
      *((_OWORD *)v55 + 4) = v57;
      v55[10] = v54;
      *(_OWORD *)(v55 + 11) = v127;
      *(_OWORD *)(v55 + 13) = v128;
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = (uint64_t)v55;
      goto LABEL_26;
    case 2:
      LOBYTE(v121) = 2;
      sub_247FE0B40();
      uint64_t v59 = v129;
      sub_248175A50();
      if (v59) {
        goto LABEL_20;
      }
      type metadata accessor for RepairModel();
      sub_247FEFAF0(&qword_2692D6750, (void (*)(uint64_t))type metadata accessor for RepairModel);
      uint64_t v60 = (uint64_t)v87;
      uint64_t v61 = v97;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v98 + 8))(v36, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v12, v39);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = v60;
      goto LABEL_26;
    case 3:
      LOBYTE(v121) = 3;
      sub_247FE0A98();
      char v62 = v109;
      uint64_t v63 = v129;
      sub_248175A50();
      if (v63) {
        goto LABEL_20;
      }
      sub_247FE0E2C();
      uint64_t v64 = v99;
      sub_248175AF0();
      uint64_t v65 = v113;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v62, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v12, v39);
      long long v78 = v122;
      uint64_t v79 = v85;
      *uint64_t v85 = v121;
      v79[1] = v78;
      goto LABEL_25;
    case 4:
      LOBYTE(v121) = 4;
      sub_247FE09A0();
      uint64_t v66 = v110;
      uint64_t v67 = v129;
      sub_248175A50();
      if (v67) {
        goto LABEL_20;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
      sub_247FE0D88();
      uint64_t v68 = v91;
      uint64_t v69 = v101;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v66, v69);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v12, v39);
      goto LABEL_24;
    case 5:
      LOBYTE(v121) = 5;
      sub_247FE08A8();
      uint64_t v70 = v129;
      sub_248175A50();
      if (v70) {
        goto LABEL_20;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628);
      sub_247FE0CE4();
      uint64_t v68 = v92;
      uint64_t v71 = v104;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v37, v71);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v12, v39);
LABEL_24:
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = (uint64_t)v68;
      goto LABEL_26;
    case 6:
      LOBYTE(v121) = 6;
      sub_247FE0854();
      long long v72 = v111;
      uint64_t v73 = v129;
      sub_248175A50();
      if (v73) {
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v102 + 8))(v72, v103);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v12, v39);
      uint64_t v46 = (uint64_t)v88;
      swift_storeEnumTagMultiPayload();
      goto LABEL_27;
    case 7:
      LOBYTE(v121) = 7;
      sub_247FE07AC();
      uint64_t v74 = v129;
      sub_248175A50();
      if (v74) {
        goto LABEL_20;
      }
      sub_247FE0C90();
      uint64_t v76 = v105;
      sub_248175AF0();
      uint64_t v77 = v113;
      (*(void (**)(char *, uint64_t))(v106 + 8))(v38, v76);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v12, v39);
      uint64_t v80 = v123;
      char v81 = BYTE8(v123);
      long long v82 = v122;
      uint64_t v79 = v89;
      *uint64_t v89 = v121;
      v79[1] = v82;
      *((void *)v79 + 4) = v80;
      *((unsigned char *)v79 + 40) = v81;
LABEL_25:
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = (uint64_t)v79;
LABEL_26:
      uint64_t v46 = (uint64_t)v88;
      sub_247FEFA88(v58, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
LABEL_27:
      uint64_t v45 = (uint64_t)v120;
      break;
    default:
      LOBYTE(v121) = 0;
      sub_247FE0C3C();
      uint64_t v41 = v107;
      uint64_t v42 = v129;
      sub_248175A50();
      if (v42) {
        goto LABEL_20;
      }
      type metadata accessor for RepairModel();
      sub_247FEFAF0(&qword_2692D6750, (void (*)(uint64_t))type metadata accessor for RepairModel);
      uint64_t v43 = (uint64_t)v86;
      uint64_t v44 = v94;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v93 + 8))(v41, v44);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v12, v39);
      uint64_t v45 = (uint64_t)v120;
      swift_storeEnumTagMultiPayload();
      uint64_t v46 = (uint64_t)v88;
      sub_247FEFA88(v43, (uint64_t)v88, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      break;
  }
  sub_247FEFA88(v46, v112, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  return __swift_destroy_boxed_opaque_existential_1(v45);
}

uint64_t sub_247FDB074@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return MachRepairMessage.init(from:)(a1, a2);
}

uint64_t sub_247FDB08C(void *a1)
{
  return MachRepairMessage.encode(to:)(a1);
}

uint64_t sub_247FDB0A8()
{
  sub_248175E50();
  MachRepairMessage.hash(into:)(v1);
  return sub_248175EC0();
}

uint64_t sub_247FDB0EC()
{
  sub_248175E50();
  MachRepairMessage.hash(into:)(v1);
  return sub_248175EC0();
}

uint64_t RepairError.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *(void *)v1;
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      sub_248175E70();
      sub_2481751A0();
      sub_248175E70();
      goto LABEL_4;
    case 2:
      sub_248175E70();
      uint64_t result = sub_247FDE2AC(a1, v2);
      break;
    case 3:
      uint64_t v5 = *(void *)(v2 + 16);
      uint64_t v6 = *(void *)(v2 + 24);
      uint64_t v7 = *(void *)(v2 + 32);
      uint64_t v8 = *(void *)(v2 + 40);
      uint64_t v9 = *(void *)(v2 + 48);
      uint64_t v17 = *(void *)(v2 + 72);
      uint64_t v18 = *(void *)(v2 + 56);
      uint64_t v10 = *(void *)(v2 + 88);
      uint64_t v15 = *(void *)(v2 + 104);
      uint64_t v16 = *(void *)(v2 + 96);
      uint64_t v13 = *(void *)(v2 + 80);
      uint64_t v14 = *(void *)(v2 + 112);
      char v11 = *(unsigned char *)(v2 + 64);
      char v12 = *(unsigned char *)(v2 + 120);
      sub_248175E70();
      sub_247FA9804(v5, v6, v7, v8, v9, v18, v11);
      sub_247FA9804(v17, v13, v10, v16, v15, v14, v12);
      SetupError.hash(into:)(a1);
      SetupError.hash(into:)(a1);
      sub_247FA98EC(v5, v6, v7, v8, v9, v18, v11);
      uint64_t result = sub_247FA98EC(v17, v13, v10, v16, v15, v14, v12);
      break;
    case 4:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
LABEL_4:
      uint64_t result = sub_2481751A0();
      break;
  }
  return result;
}

unint64_t sub_247FDB408(char a1)
{
  unint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4364696C61766E69;
      break;
    case 2:
      unint64_t result = 0x656C6C65636E6163;
      break;
    case 3:
      unint64_t result = 0x636E614372657375;
      break;
    case 4:
      unint64_t result = 0x636972656E6567;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x64657473656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247FDB52C(uint64_t a1)
{
  unint64_t v2 = sub_247FE0F9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB568(uint64_t a1)
{
  unint64_t v2 = sub_247FE0F9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FDB5A4(uint64_t a1)
{
  unint64_t v2 = sub_247FE1190();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB5E0(uint64_t a1)
{
  unint64_t v2 = sub_247FE1190();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_247FDB61C()
{
  return sub_247FDB408(*v0);
}

uint64_t sub_247FDB624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FEF508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FDB64C(uint64_t a1)
{
  unint64_t v2 = sub_247FE0EF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB688(uint64_t a1)
{
  unint64_t v2 = sub_247FE0EF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FDB6C4()
{
  unint64_t v1 = 1701080931;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E69616D6F64;
  }
}

uint64_t sub_247FDB718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FEF890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FDB740(uint64_t a1)
{
  unint64_t v2 = sub_247FE10E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB77C(uint64_t a1)
{
  unint64_t v2 = sub_247FE10E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FDB7B8(uint64_t a1)
{
  unint64_t v2 = sub_247FE11E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB7F4(uint64_t a1)
{
  unint64_t v2 = sub_247FE11E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FDB830(uint64_t a1)
{
  unint64_t v2 = sub_247FE0FF0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB86C(uint64_t a1)
{
  unint64_t v2 = sub_247FE0FF0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FDB8A8(uint64_t a1)
{
  unint64_t v2 = sub_247FE0F48();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB8E4(uint64_t a1)
{
  unint64_t v2 = sub_247FE0F48();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FDB920(uint64_t a1)
{
  unint64_t v2 = sub_247FE1238();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB95C(uint64_t a1)
{
  unint64_t v2 = sub_247FE1238();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FDB998(uint64_t a1)
{
  unint64_t v2 = sub_247FE113C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FDB9D4(uint64_t a1)
{
  unint64_t v2 = sub_247FE113C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RepairError.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6770);
  uint64_t v90 = *(void *)(v3 - 8);
  uint64_t v91 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v89 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6778);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v73 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6780);
  uint64_t v81 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v84 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6788);
  uint64_t v87 = *(void *)(v7 - 8);
  uint64_t v88 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v85 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6790);
  uint64_t v71 = *(void *)(v72 - 8);
  MEMORY[0x270FA5388](v72);
  uint64_t v70 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6798);
  uint64_t v77 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v76 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67A0);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  char v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67A8);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67B0);
  uint64_t v96 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)v1;
  uint64_t v17 = *(void *)(v1 + 8);
  uint64_t v94 = *(void *)(v1 + 16);
  uint64_t v95 = v17;
  uint64_t v19 = *(void *)(v1 + 24);
  uint64_t v92 = *(void *)(v1 + 32);
  uint64_t v93 = v19;
  uint64_t v20 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FE0EF4();
  uint64_t v98 = v16;
  sub_248175F60();
  switch(v20)
  {
    case 1:
      LOBYTE(v100) = 4;
      sub_247FE10E8();
      uint64_t v24 = v85;
      uint64_t v22 = v98;
      uint64_t v21 = v99;
      sub_248175B50();
      LOBYTE(v100) = 0;
      uint64_t v25 = v88;
      uint64_t v26 = v97;
      sub_248175BB0();
      if (!v26)
      {
        LOBYTE(v100) = 1;
        sub_248175BD0();
        LOBYTE(v100) = 2;
        sub_248175BB0();
      }
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v24, v25);
      goto LABEL_6;
    case 2:
      LOBYTE(v100) = 5;
      sub_247FE0FF0();
      uint64_t v28 = v84;
      uint64_t v30 = v98;
      uint64_t v29 = v99;
      sub_248175B50();
      uint64_t v100 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
      sub_247FE1044();
      uint64_t v31 = v86;
      sub_248175BE0();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v28, v31);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v30, v29);
      break;
    case 3:
      uint64_t v32 = *(void *)(v18 + 24);
      uint64_t v84 = *(void *)(v18 + 16);
      uint64_t v83 = v32;
      uint64_t v33 = *(void *)(v18 + 40);
      uint64_t v93 = *(void *)(v18 + 32);
      uint64_t v94 = v33;
      uint64_t v34 = *(void *)(v18 + 56);
      uint64_t v95 = *(void *)(v18 + 48);
      int v35 = *(unsigned __int8 *)(v18 + 64);
      uint64_t v36 = *(void *)(v18 + 72);
      uint64_t v37 = *(void *)(v18 + 80);
      uint64_t v39 = *(void *)(v18 + 88);
      uint64_t v38 = *(void *)(v18 + 96);
      uint64_t v41 = *(void *)(v18 + 104);
      uint64_t v40 = *(void *)(v18 + 112);
      int v42 = *(unsigned __int8 *)(v18 + 120);
      LOBYTE(v100) = 7;
      int v43 = v35;
      sub_247FA9804(v84, v32, v93, v33, v95, v34, v35);
      uint64_t v85 = v36;
      uint64_t v86 = v37;
      uint64_t v87 = v39;
      uint64_t v88 = v38;
      uint64_t v92 = v41;
      uint64_t v79 = v40;
      LODWORD(v82) = v42;
      sub_247FA9804(v36, v37, v39, v38, v41, v40, v42);
      sub_247FE0F48();
      uint64_t v44 = v89;
      uint64_t v45 = v98;
      uint64_t v46 = v99;
      sub_248175B50();
      uint64_t v47 = v84;
      uint64_t v100 = v84;
      uint64_t v48 = v83;
      uint64_t v101 = v83;
      uint64_t v102 = v93;
      uint64_t v103 = v94;
      uint64_t v104 = v95;
      uint64_t v105 = v34;
      uint64_t v80 = v34;
      LODWORD(v81) = v43;
      char v106 = v43;
      char v107 = 0;
      sub_247FAAAEC();
      uint64_t v49 = v91;
      uint64_t v50 = v97;
      sub_248175BE0();
      if (v50)
      {
        sub_247FA98EC(v85, v86, v87, v88, v92, v79, v82);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v44, v49);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v45, v46);
        uint64_t v51 = v47;
        uint64_t v52 = v48;
        uint64_t v53 = v93;
        uint64_t v54 = v94;
        uint64_t v55 = v95;
        uint64_t v56 = v80;
        char v57 = v81;
      }
      else
      {
        uint64_t v62 = v47;
        uint64_t v63 = v48;
        uint64_t v100 = v85;
        uint64_t v101 = v86;
        uint64_t v102 = v87;
        uint64_t v103 = v88;
        uint64_t v64 = v79;
        uint64_t v104 = v92;
        uint64_t v105 = v79;
        char v65 = v82;
        char v106 = v82;
        char v107 = 1;
        sub_248175BE0();
        sub_247FA98EC(v62, v63, v93, v94, v95, v80, v81);
        (*(void (**)(char *, uint64_t))(v90 + 8))(v44, v49);
        (*(void (**)(char *, uint64_t))(v96 + 8))(v98, v99);
        uint64_t v51 = v85;
        uint64_t v52 = v86;
        uint64_t v53 = v87;
        uint64_t v54 = v88;
        uint64_t v55 = v92;
        uint64_t v56 = v64;
        char v57 = v65;
      }
      uint64_t result = sub_247FA98EC(v51, v52, v53, v54, v55, v56, v57);
      break;
    case 4:
      if (v94 | v95 | v18 | v93 | v92)
      {
        uint64_t v58 = v94 | v95 | v93 | v92;
        if (v18 != 1 || v58)
        {
          if (v18 != 2 || v58)
          {
            LOBYTE(v100) = 6;
            sub_247FE0F9C();
            uint64_t v69 = v73;
            uint64_t v61 = v98;
            uint64_t v60 = v99;
            sub_248175B50();
            (*(void (**)(char *, uint64_t))(v74 + 8))(v69, v75);
          }
          else
          {
            LOBYTE(v100) = 3;
            sub_247FE113C();
            uint64_t v68 = v70;
            uint64_t v61 = v98;
            uint64_t v60 = v99;
            sub_248175B50();
            (*(void (**)(char *, uint64_t))(v71 + 8))(v68, v72);
          }
        }
        else
        {
          LOBYTE(v100) = 2;
          sub_247FE1190();
          uint64_t v59 = v76;
          uint64_t v61 = v98;
          uint64_t v60 = v99;
          sub_248175B50();
          (*(void (**)(char *, uint64_t))(v77 + 8))(v59, v78);
        }
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v61, v60);
      }
      else
      {
        LOBYTE(v100) = 0;
        sub_247FE1238();
        uint64_t v66 = v98;
        uint64_t v67 = v99;
        sub_248175B50();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v14, v80);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v66, v67);
      }
      break;
    default:
      LOBYTE(v100) = 1;
      sub_247FE11E4();
      uint64_t v22 = v98;
      uint64_t v21 = v99;
      sub_248175B50();
      uint64_t v23 = v83;
      sub_248175BB0();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v23);
LABEL_6:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v22, v21);
      break;
  }
  return result;
}

uint64_t RepairError.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 40);
  long long v3 = v0[1];
  long long v6 = *v0;
  long long v7 = v3;
  uint64_t v8 = v1;
  char v9 = v2;
  sub_248175E50();
  RepairError.hash(into:)((uint64_t)v5);
  return sub_248175EC0();
}

uint64_t RepairError.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v96 = a2;
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6810);
  uint64_t v83 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v100 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6818);
  uint64_t v90 = *(void *)(v99 - 8);
  MEMORY[0x270FA5388](v99);
  uint64_t v94 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6820);
  uint64_t v81 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v95 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6828);
  uint64_t v82 = *(void *)(v89 - 8);
  MEMORY[0x270FA5388](v89);
  uint64_t v101 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6830);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v87 = v7;
  uint64_t v88 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v97 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6838);
  uint64_t v85 = *(void *)(v10 - 8);
  uint64_t v86 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v93 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6840);
  uint64_t v80 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6848);
  uint64_t v84 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6850);
  uint64_t v18 = *(void (***)(char *, uint64_t))(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  uint64_t v102 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_247FE0EF4();
  uint64_t v22 = v103;
  sub_248175F20();
  if (v22)
  {
LABEL_9:
    uint64_t v37 = (uint64_t)v102;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  uint64_t v77 = v17;
  uint64_t v76 = v15;
  uint64_t v78 = v14;
  uint64_t v23 = v97;
  uint64_t v79 = 0;
  uint64_t v25 = v99;
  uint64_t v24 = v100;
  uint64_t v103 = v18;
  uint64_t v26 = v98;
  uint64_t v27 = sub_248175B30();
  uint64_t v28 = v27;
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v38 = sub_2481758A0();
    swift_allocError();
    uint64_t v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v40 = &type metadata for RepairError;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v38 - 8) + 104))(v40, *MEMORY[0x263F8DCB0], v38);
    swift_willThrow();
LABEL_7:
    swift_bridgeObjectRelease();
    v103[1](v20, v26);
    goto LABEL_9;
  }
  switch(*(unsigned char *)(v27 + 32))
  {
    case 1:
      LOBYTE(v104) = 1;
      sub_247FE11E4();
      int v42 = v78;
      int v43 = v20;
      uint64_t v44 = v79;
      sub_248175A50();
      if (v44) {
        goto LABEL_20;
      }
      uint64_t v45 = sub_248175AC0();
      uint64_t v46 = v103;
      uint64_t v31 = v45;
      uint64_t v32 = v67;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v42, v12);
      swift_bridgeObjectRelease();
      v46[1](v43, v26);
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      char v36 = 0;
      uint64_t v37 = (uint64_t)v102;
      goto LABEL_30;
    case 2:
      LOBYTE(v104) = 2;
      sub_247FE1190();
      uint64_t v47 = v93;
      uint64_t v48 = v79;
      sub_248175A50();
      if (v48) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v85 + 8))(v47, v86);
      swift_bridgeObjectRelease();
      v103[1](v20, v26);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      char v36 = 4;
      uint64_t v31 = 1;
      uint64_t v37 = (uint64_t)v102;
      goto LABEL_30;
    case 3:
      LOBYTE(v104) = 3;
      sub_247FE113C();
      uint64_t v49 = v79;
      sub_248175A50();
      if (v49) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v88 + 8))(v23, v87);
      swift_bridgeObjectRelease();
      v103[1](v20, v26);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      char v36 = 4;
      uint64_t v31 = 2;
      uint64_t v37 = (uint64_t)v102;
      goto LABEL_30;
    case 4:
      LOBYTE(v104) = 4;
      sub_247FE10E8();
      uint64_t v50 = v26;
      uint64_t v51 = v79;
      sub_248175A50();
      if (v51) {
        goto LABEL_24;
      }
      uint64_t v99 = v28;
      LOBYTE(v104) = 0;
      uint64_t v60 = v89;
      uint64_t v61 = sub_248175AC0();
      uint64_t v32 = v68;
      uint64_t v100 = (char *)v61;
      LOBYTE(v104) = 1;
      uint64_t v69 = sub_248175AE0();
      uint64_t v70 = v82;
      uint64_t v33 = v69;
      ++v103;
      LOBYTE(v104) = 2;
      uint64_t v71 = sub_248175AC0();
      uint64_t v72 = v60;
      uint64_t v34 = v71;
      uint64_t v35 = v73;
      (*(void (**)(char *, uint64_t))(v70 + 8))(v101, v72);
      swift_bridgeObjectRelease();
      (*v103)(v20, v50);
      char v36 = 1;
      uint64_t v37 = (uint64_t)v102;
      uint64_t v74 = v96;
      uint64_t v31 = (uint64_t)v100;
      goto LABEL_31;
    case 5:
      LOBYTE(v104) = 5;
      sub_247FE0FF0();
      uint64_t v52 = v95;
      int v43 = v20;
      uint64_t v53 = v79;
      sub_248175A50();
      if (v53)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        v103[1](v43, v26);
        goto LABEL_9;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
      sub_247FE12E4();
      uint64_t v62 = v91;
      sub_248175AF0();
      uint64_t v63 = v103;
      (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v62);
      swift_bridgeObjectRelease();
      v63[1](v43, v26);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v31 = v104;
      char v36 = 2;
      uint64_t v37 = (uint64_t)v102;
      goto LABEL_30;
    case 6:
      LOBYTE(v104) = 6;
      sub_247FE0F9C();
      uint64_t v54 = v94;
      uint64_t v55 = v79;
      sub_248175A50();
      if (v55)
      {
        swift_bridgeObjectRelease();
        v103[1](v20, v26);
        uint64_t v37 = (uint64_t)v102;
        return __swift_destroy_boxed_opaque_existential_1(v37);
      }
      (*(void (**)(char *, uint64_t))(v90 + 8))(v54, v25);
      swift_bridgeObjectRelease();
      v103[1](v20, v26);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      char v36 = 4;
      uint64_t v31 = 3;
      uint64_t v37 = (uint64_t)v102;
      uint64_t v74 = v96;
      goto LABEL_31;
    case 7:
      uint64_t v99 = v27;
      LOBYTE(v104) = 7;
      sub_247FE0F48();
      uint64_t v56 = v24;
      uint64_t v57 = v26;
      uint64_t v58 = v20;
      uint64_t v59 = v79;
      sub_248175A50();
      if (v59)
      {
LABEL_24:
        swift_bridgeObjectRelease();
        v103[1](v20, v26);
        goto LABEL_9;
      }
      uint64_t v64 = swift_allocObject();
      LOBYTE(v104) = 0;
      sub_247FAAB40();
      uint64_t v65 = v92;
      sub_248175AF0();
      uint64_t v66 = v103;
      LOBYTE(v104) = 1;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v56, v65);
      swift_bridgeObjectRelease();
      v66[1](v58, v57);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      char v36 = 3;
      uint64_t v37 = (uint64_t)v102;
      uint64_t v31 = v64;
LABEL_30:
      uint64_t v74 = v96;
LABEL_31:
      *(void *)uint64_t v74 = v31;
      *(void *)(v74 + 8) = v32;
      *(void *)(v74 + 16) = v33;
      *(void *)(v74 + 24) = v34;
      *(void *)(v74 + 32) = v35;
      *(unsigned char *)(v74 + 40) = v36;
      break;
    default:
      LOBYTE(v104) = 0;
      sub_247FE1238();
      uint64_t v29 = v77;
      uint64_t v30 = v79;
      sub_248175A50();
      if (v30) {
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v84 + 8))(v29, v76);
      swift_bridgeObjectRelease();
      v103[1](v20, v26);
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      char v36 = 4;
      uint64_t v37 = (uint64_t)v102;
      goto LABEL_30;
  }
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_247FDD648(uint64_t a1)
{
  unint64_t v2 = sub_247FEF9CC();
  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_247FDD684(uint64_t a1)
{
  unint64_t v2 = sub_247FEF9CC();
  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_247FDD6C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RepairError.init(from:)(a1, a2);
}

uint64_t sub_247FDD6D8(void *a1)
{
  return RepairError.encode(to:)(a1);
}

uint64_t sub_247FDD6F4()
{
  uint64_t v1 = *((void *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 40);
  long long v3 = v0[1];
  long long v6 = *v0;
  long long v7 = v3;
  uint64_t v8 = v1;
  char v9 = v2;
  sub_248175E50();
  RepairError.hash(into:)((uint64_t)v5);
  return sub_248175EC0();
}

uint64_t sub_247FDD754()
{
  uint64_t v1 = *((void *)v0 + 4);
  char v2 = *((unsigned char *)v0 + 40);
  long long v3 = v0[1];
  long long v6 = *v0;
  long long v7 = v3;
  uint64_t v8 = v1;
  char v9 = v2;
  sub_248175E50();
  RepairError.hash(into:)((uint64_t)v5);
  return sub_248175EC0();
}

uint64_t static RepairError.errorDomain.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_2692D6618;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static RepairError.errorDomain.setter(uint64_t a1, void *a2)
{
  qword_2692D6618 = a1;
  off_2692D6620 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RepairError.errorDomain.modify())()
{
  return j__swift_endAccess;
}

uint64_t RepairError.errorCode.getter()
{
  uint64_t v1 = *v0;
  uint64_t result = 2001;
  switch(*((unsigned char *)v0 + 40))
  {
    case 1:
      uint64_t result = 2004;
      break;
    case 2:
      uint64_t result = 2005;
      break;
    case 3:
      uint64_t result = 2007;
      break;
    case 4:
      uint64_t v4 = v0[1];
      uint64_t v3 = v0[2];
      uint64_t v5 = v0[3] | v0[4];
      if (v5 | v1 | v3 | v4)
      {
        uint64_t v6 = v5 | v3 | v4;
        if (v1 == 1 && v6 == 0)
        {
          uint64_t result = 2002;
        }
        else
        {
          if (v6) {
            BOOL v8 = 0;
          }
          else {
            BOOL v8 = v1 == 2;
          }
          if (v8) {
            uint64_t result = 2003;
          }
          else {
            uint64_t result = 2006;
          }
        }
      }
      else
      {
        uint64_t result = 2000;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t RepairError.errorUserInfo.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6860);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24817B010;
  *(void *)(inited + 32) = sub_248175160();
  *(void *)(inited + 40) = v1;
  unint64_t v2 = RepairError.description.getter();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  return sub_247FB4638(inited);
}

unint64_t RepairError.description.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  unint64_t result = 0xD000000000000034;
  switch(*((unsigned char *)v0 + 40))
  {
    case 1:
      sub_248175850();
      sub_2481751D0();
      sub_2481751D0();
      sub_2481751D0();
      sub_248175C30();
      sub_2481751D0();
      swift_bridgeObjectRelease();
      sub_2481751D0();
      sub_2481751D0();
      unint64_t result = 0;
      break;
    case 2:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 3:
      uint64_t v7 = *(void *)(v2 + 16);
      uint64_t v8 = *(void *)(v2 + 24);
      uint64_t v9 = *(void *)(v2 + 48);
      uint64_t v10 = *(void *)(v2 + 56);
      uint64_t v23 = v9;
      uint64_t v24 = *(void *)(v2 + 32);
      uint64_t v11 = *(void *)(v2 + 72);
      uint64_t v20 = *(void *)(v2 + 40);
      uint64_t v19 = *(void *)(v2 + 80);
      uint64_t v12 = *(void *)(v2 + 88);
      uint64_t v13 = *(void *)(v2 + 96);
      uint64_t v15 = *(void *)(v2 + 104);
      uint64_t v14 = *(void *)(v2 + 112);
      char v16 = *(unsigned char *)(v2 + 64);
      char v17 = *(unsigned char *)(v2 + 120);
      uint64_t v21 = v8;
      uint64_t v22 = v7;
      sub_247FA9804(v7, v8, v24, v20, v9, v10, v16);
      sub_247FA9804(v11, v19, v12, v13, v15, v14, v17);
      sub_248175850();
      swift_bridgeObjectRelease();
      sub_247FE1388();
      sub_248175DE0();
      sub_2481751D0();
      swift_bridgeObjectRelease();
      sub_2481751D0();
      sub_248175DE0();
      sub_2481751D0();
      swift_bridgeObjectRelease();
      sub_247FA98EC(v11, v19, v12, v13, v15, v14, v17);
      sub_247FA98EC(v22, v21, v24, v20, v23, v10, v16);
      unint64_t result = 0x652064657473654ELL;
      break;
    case 4:
      if (v4 | v1 | v2 | v3 | v5)
      {
        uint64_t v18 = v4 | v1 | v3 | v5;
        if (v2 != 1 || v18)
        {
          if (v2 == 2 && v18 == 0) {
            unint64_t result = 0xD000000000000030;
          }
          else {
            unint64_t result = 0xD000000000000035;
          }
        }
        else
        {
          unint64_t result = 0xD000000000000015;
        }
      }
      else
      {
        unint64_t result = 0x6E776F6E6B6E55;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247FDDDCC()
{
  swift_beginAccess();
  uint64_t v0 = qword_2692D6618;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_247FDDE20()
{
  uint64_t v1 = *v0;
  uint64_t result = 2001;
  switch(*((unsigned char *)v0 + 40))
  {
    case 1:
      uint64_t result = 2004;
      break;
    case 2:
      uint64_t result = 2005;
      break;
    case 3:
      uint64_t result = 2007;
      break;
    case 4:
      uint64_t v4 = v0[1];
      uint64_t v3 = v0[2];
      uint64_t v5 = v0[3] | v0[4];
      if (v5 | v1 | v3 | v4)
      {
        uint64_t v6 = v5 | v3 | v4;
        if (v1 == 1 && v6 == 0)
        {
          uint64_t result = 2002;
        }
        else
        {
          if (v6) {
            BOOL v8 = 0;
          }
          else {
            BOOL v8 = v1 == 2;
          }
          if (v8) {
            uint64_t result = 2003;
          }
          else {
            uint64_t result = 2006;
          }
        }
      }
      else
      {
        uint64_t result = 2000;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_247FDDED0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6860);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24817B010;
  *(void *)(inited + 32) = sub_248175160();
  *(void *)(inited + 40) = v1;
  unint64_t v2 = RepairError.description.getter();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  return sub_247FB4638(inited);
}

void Error.into()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a1 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v44 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v15((char *)&v44 - v16, v3, a1);
  if (!swift_dynamicCast()) {
    goto LABEL_4;
  }
  uint64_t v50 = v8;
  uint64_t v51 = a3;
  uint64_t v45 = v14;
  uint64_t v46 = v15;
  uint64_t v17 = v52;
  uint64_t v18 = v53;
  uint64_t v48 = a2;
  uint64_t v49 = v11;
  uint64_t v20 = (uint64_t)v54;
  uint64_t v19 = v55;
  uint64_t v47 = v3;
  uint64_t v21 = v56;
  uint64_t v22 = v57;
  char v23 = v58;
  sub_24815FBAC((uint64_t)v59);
  uint64_t v24 = v17;
  uint64_t v25 = v18;
  uint64_t v26 = v20;
  uint64_t v14 = v45;
  uint64_t v15 = v46;
  uint64_t v27 = v21;
  uint64_t v11 = v49;
  uint64_t v28 = v22;
  uint64_t v4 = v47;
  char v29 = v23;
  uint64_t v8 = v50;
  a3 = v51;
  sub_247FA98EC(v24, v25, v26, v19, v27, v28, v29);
  char v30 = v60;
  if (v60 == 255)
  {
LABEL_4:
    v15(v14, v4, a1);
    if (swift_dynamicCast())
    {
      uint64_t v31 = v52;
      uint64_t v32 = v53;
      id v33 = v54;
      uint64_t v34 = v55;
      uint64_t v35 = v56;
      char v30 = v57;
    }
    else
    {
      v15(v11, v4, a1);
      uint64_t v36 = sub_248175CB0();
      if (v36)
      {
        uint64_t v37 = (void *)v36;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a1);
      }
      else
      {
        uint64_t v37 = (void *)swift_allocError();
        (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v38, v11, a1);
      }
      uint64_t v39 = (void *)sub_248174720();

      id v40 = objc_msgSend(v39, sel_domain);
      uint64_t v31 = sub_248175160();
      uint64_t v32 = v41;

      id v33 = objc_msgSend(v39, sel_code);
      id v42 = objc_msgSend(v39, sel_localizedDescription);
      uint64_t v34 = sub_248175160();
      uint64_t v35 = v43;

      char v30 = 1;
    }
  }
  else
  {
    uint64_t v31 = v59[0];
    uint64_t v32 = v59[1];
    id v33 = (id)v59[2];
    uint64_t v34 = v59[3];
    uint64_t v35 = v59[4];
  }
  *(void *)a3 = v31;
  *(void *)(a3 + 8) = v32;
  *(void *)(a3 + 16) = v33;
  *(void *)(a3 + 24) = v34;
  *(void *)(a3 + 32) = v35;
  *(unsigned char *)(a3 + 40) = v30;
}

uint64_t sub_247FDE2AC(uint64_t a1, uint64_t a2)
{
  sub_248175EC0();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_248175E70();
    }
    unint64_t v17 = *(void *)(v3 + 8 * v10);
    if (!v17) {
      break;
    }
LABEL_16:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void **)(*(void *)(a2 + 48) + 8 * v12);
    sub_248175160();
    sub_248175E50();
    id v14 = v13;
    sub_2481751A0();
    uint64_t v15 = sub_248175EC0();

    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v15;
  }
  int64_t v18 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v10);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_247FDE454(long long *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IdMSAccount();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  int64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (uint64_t)&v48 - v8;
  uint64_t v9 = *((void *)a1 + 8);
  long long v10 = a1[1];
  long long v62 = *a1;
  long long v63 = v10;
  long long v11 = a1[2];
  long long v12 = a1[3];
  uint64_t v48 = a1;
  long long v64 = v11;
  long long v65 = v12;
  uint64_t v66 = v9;
  uint64_t v53 = sub_248175EC0();
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v49 = a2 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v57 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v56 = a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  int64_t v18 = 0;
  uint64_t v52 = v4;
  while (1)
  {
    uint64_t v60 = v17;
    if (v16)
    {
      uint64_t v59 = (v16 - 1) & v16;
      unint64_t v30 = __clz(__rbit64(v16)) | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1)) {
      goto LABEL_28;
    }
    if (v18 >= v57) {
      break;
    }
    unint64_t v32 = *(void *)(v49 + 8 * v18);
    if (!v32)
    {
      int64_t v33 = v18 + 1;
      if (v18 + 1 >= v57) {
        break;
      }
      unint64_t v32 = *(void *)(v49 + 8 * v33);
      if (!v32)
      {
        while (1)
        {
          int64_t v18 = v33 + 1;
          if (__OFADD__(v33, 1)) {
            break;
          }
          if (v18 >= v57) {
            goto LABEL_26;
          }
          unint64_t v32 = *(void *)(v49 + 8 * v18);
          ++v33;
          if (v32) {
            goto LABEL_18;
          }
        }
        __break(1u);
LABEL_28:
        __break(1u);
        JUMPOUT(0x247FDEAA0);
      }
      ++v18;
    }
LABEL_18:
    uint64_t v59 = (v32 - 1) & v32;
    unint64_t v30 = __clz(__rbit64(v32)) + (v18 << 6);
LABEL_19:
    uint64_t v34 = v54;
    sub_247FEFA20(*(void *)(v56 + 48) + *(void *)(v55 + 72) * v30, v54, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
    sub_247FEFA88(v34, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
    sub_248175E50();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_248174700();
    sub_247FEFAF0(&qword_2692D5898, MEMORY[0x263F06A30]);
    sub_2481750B0();
    uint64_t v35 = &v7[*(int *)(v4 + 24)];
    uint64_t v37 = *(void *)v35;
    uint64_t v36 = *((void *)v35 + 1);
    uint64_t v38 = *((void *)v35 + 2);
    uint64_t v39 = *((void *)v35 + 3);
    uint64_t v40 = *((void *)v35 + 4);
    uint64_t v41 = *((void *)v35 + 5);
    uint64_t v42 = *((void *)v35 + 6);
    uint64_t v43 = *((void *)v35 + 7);
    uint64_t v44 = *((void *)v35 + 8);
    switch(v35[72])
    {
      case 1:
        uint64_t v50 = *((void *)v35 + 4);
        uint64_t v51 = v44;
        uint64_t v58 = v42;
        sub_248175E70();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        sub_248175E80();
        if (v39)
        {
          swift_bridgeObjectRetain();
          sub_2481751A0();
          swift_bridgeObjectRelease();
          char v47 = 1;
          uint64_t v46 = v51;
          uint64_t v21 = v37;
          uint64_t v22 = v36;
          uint64_t v23 = v38;
          uint64_t v24 = v39;
        }
        else
        {
          char v47 = 1;
          uint64_t v46 = v51;
          uint64_t v21 = v37;
          uint64_t v22 = v36;
          uint64_t v23 = v38;
          uint64_t v24 = 0;
        }
        uint64_t v25 = v50;
        uint64_t v26 = v41;
        goto LABEL_5;
      case 2:
        uint64_t v51 = *((void *)v35 + 5);
        uint64_t v19 = v44;
        uint64_t v58 = v42;
        uint64_t v20 = v40;
        sub_248175E70();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        char v47 = 2;
        uint64_t v46 = v19;
        uint64_t v21 = v37;
        uint64_t v22 = v36;
        uint64_t v23 = v38;
        uint64_t v24 = v39;
        uint64_t v25 = v20;
        uint64_t v26 = v51;
LABEL_5:
        sub_247FAC1EC(v21, v22, v23, v24, v25, v26, v58, v43, v46, v47);
        break;
      case 3:
        sub_248175E70();
        break;
      default:
        uint64_t v51 = *((void *)v35 + 8);
        uint64_t v58 = v42;
        sub_248175E70();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        sub_248175EB0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
    uint64_t v4 = v52;
    unint64_t v16 = v59;
    uint64_t v27 = v60;
    uint64_t v28 = *(void *)&v7[*(int *)(v52 + 28)];
    swift_bridgeObjectRetain();
    sub_247FDE2AC((uint64_t)v61, v28);
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_248175EC0();
    sub_247FEFB38((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
    uint64_t v17 = v29 ^ v27;
  }
LABEL_26:
  swift_release();
  return sub_248175E70();
}

uint64_t sub_247FDEAB0(long long *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 8);
  long long v4 = a1[1];
  long long v23 = *a1;
  long long v24 = v4;
  long long v5 = a1[3];
  long long v25 = a1[2];
  long long v26 = v5;
  uint64_t v27 = v3;
  sub_248175EC0();
  uint64_t v20 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v19 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v21 = a2;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_22;
    }
    if (v10 >= v19) {
      break;
    }
    unint64_t v15 = *(void *)(v20 + 8 * v10);
    if (!v15)
    {
      int64_t v16 = v10 + 1;
      if (v10 + 1 >= v19) {
        break;
      }
      unint64_t v15 = *(void *)(v20 + 8 * v16);
      if (!v15)
      {
        while (1)
        {
          int64_t v10 = v16 + 1;
          if (__OFADD__(v16, 1)) {
            break;
          }
          if (v10 >= v19) {
            goto LABEL_20;
          }
          unint64_t v15 = *(void *)(v20 + 8 * v10);
          ++v16;
          if (v15) {
            goto LABEL_17;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
        JUMPOUT(0x247FDEDA8);
      }
      ++v10;
    }
LABEL_17:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_18:
    unint64_t v17 = *(void *)(*(void *)(v21 + 48) + 96 * v13 + 80);
    sub_248175E50();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FEFB98(v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    switch(v17)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
        sub_248175E70();
        break;
      default:
        sub_248175E70();
        swift_bridgeObjectRetain();
        sub_247FDE2AC((uint64_t)v22, v17);
        sub_247FEFBA8(v17);
        break;
    }
    sub_248175E80();
    uint64_t v11 = sub_248175EC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FEFBA8(v17);
    v9 ^= v11;
  }
LABEL_20:
  swift_release();
  return sub_248175E70();
}

uint64_t sub_247FDEDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_248175E70();
  if (v4)
  {
    swift_retain();
    uint64_t v6 = a2 + 120;
    do
    {
      unint64_t v7 = *(void *)(v6 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      switch(v7)
      {
        case 0uLL:
        case 1uLL:
        case 2uLL:
        case 3uLL:
          sub_248175E70();
          break;
        default:
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_247FDE2AC(a1, v7);
          sub_247FEFBA8(v7);
          break;
      }
      v6 += 96;
      sub_248175E80();
      --v4;
    }
    while (v4);
    return swift_release();
  }
  return result;
}

uint64_t _s12AppleIDSetup11RepairErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v77 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  int v12 = *(unsigned __int8 *)(a2 + 40);
  switch(v6)
  {
    case 1:
      if (v12 != 1) {
        goto LABEL_44;
      }
      if ((v2 != v7 || v3 != v8)
        && (v15 = *(void *)a1, v16 = *(void *)(a2 + 32), v17 = sub_248175CE0(), v11 = v16, uint64_t v2 = v15, (v17 & 1) == 0)
        || v4 != v10)
      {
        uint64_t v31 = v2;
        uint64_t v32 = v11;
        sub_247FE42BC(v7, v8, v10, v9, v11, 1);
        sub_247FE42BC(v31, v3, v4, v5, v77, 1);
        sub_247FE0600(v31, v3, v4, v5, v77, 1);
        uint64_t v33 = v7;
        uint64_t v34 = v8;
        uint64_t v35 = v10;
        uint64_t v36 = v9;
        uint64_t v37 = v32;
        char v38 = 1;
        goto LABEL_45;
      }
      uint64_t v18 = v2;
      if (v5 == v9 && v77 == v11)
      {
        char v14 = 1;
      }
      else
      {
        uint64_t v43 = v11;
        char v44 = sub_248175CE0();
        uint64_t v11 = v43;
        char v14 = v44;
      }
      uint64_t v45 = v11;
      sub_247FE42BC(v7, v8, v4, v9, v11, 1);
      sub_247FE42BC(v18, v3, v4, v5, v77, 1);
      sub_247FE0600(v18, v3, v4, v5, v77, 1);
      sub_247FE0600(v7, v8, v4, v9, v45, 1);
      return v14 & 1;
    case 2:
      if (v12 != 2) {
        goto LABEL_44;
      }
      uint64_t v19 = *(void *)(a2 + 32);
      sub_247FE42BC(*(void *)a2, *(void *)(a2 + 8), v10, v9, v11, 2);
      sub_247FE42BC(v2, v3, v4, v5, v77, 2);
      char v20 = sub_24815D598(v2, v7);
      uint64_t v21 = v2;
      char v22 = v20;
      sub_247FE0600(v21, v3, v4, v5, v77, 2);
      sub_247FE0600(v7, v8, v10, v9, v19, 2);
      return v22 & 1;
    case 3:
      if (v12 != 3) {
        goto LABEL_44;
      }
      uint64_t v56 = *(void *)(v2 + 24);
      uint64_t v57 = *(void *)(v2 + 32);
      uint64_t v58 = *(void *)(v2 + 40);
      uint64_t v59 = *(void *)(v2 + 48);
      uint64_t v60 = *(void *)(v2 + 56);
      char v24 = *(unsigned char *)(v2 + 64);
      uint64_t v69 = *(void *)(v2 + 72);
      uint64_t v70 = *(void *)(v2 + 80);
      uint64_t v71 = *(void *)(v2 + 88);
      uint64_t v72 = *(void *)(v2 + 96);
      uint64_t v73 = *(void *)(v2 + 104);
      uint64_t v75 = *(void *)(v2 + 112);
      char v53 = *(unsigned char *)(v2 + 120);
      uint64_t v54 = *(void *)(v7 + 16);
      uint64_t v51 = *(void *)(v7 + 32);
      uint64_t v52 = *(void *)(v7 + 24);
      uint64_t v25 = *(void *)(v7 + 56);
      uint64_t v49 = *(void *)(v7 + 48);
      uint64_t v50 = *(void *)(v7 + 40);
      char v26 = *(unsigned char *)(v7 + 64);
      char v48 = v26;
      uint64_t v47 = *(void *)(v7 + 72);
      uint64_t v68 = *(void *)(v7 + 80);
      uint64_t v67 = *(void *)(v7 + 88);
      uint64_t v66 = *(void *)(v7 + 96);
      uint64_t v65 = *(void *)(v7 + 104);
      uint64_t v64 = *(void *)(v7 + 112);
      char v63 = *(unsigned char *)(v7 + 120);
      uint64_t v85 = *(void *)(v2 + 16);
      uint64_t v55 = v85;
      uint64_t v86 = v56;
      uint64_t v87 = v57;
      uint64_t v88 = v58;
      uint64_t v89 = v59;
      uint64_t v90 = v60;
      char v91 = v24;
      uint64_t v78 = v54;
      uint64_t v79 = v52;
      uint64_t v80 = v51;
      uint64_t v81 = v50;
      uint64_t v82 = v49;
      uint64_t v83 = v25;
      char v84 = v26;
      uint64_t v61 = v11;
      sub_247FE42BC(v7, v8, v10, v9, v11, 3);
      sub_247FE42BC(v2, v3, v4, v5, v77, 3);
      sub_247FA9804(v85, v56, v57, v58, v59, v60, v24);
      sub_247FA9804(v54, v52, v51, v50, v49, v25, v48);
      sub_247FA9804(v69, v70, v71, v72, v73, v75, v53);
      sub_247FA9804(v47, v68, v67, v66, v65, v64, v63);
      if (static SetupError.== infix(_:_:)((uint64_t)&v85, (uint64_t)&v78))
      {
        uint64_t v85 = v69;
        uint64_t v86 = v70;
        uint64_t v87 = v71;
        uint64_t v88 = v72;
        uint64_t v89 = v73;
        uint64_t v90 = v75;
        char v91 = v53;
        uint64_t v78 = v47;
        uint64_t v79 = v68;
        uint64_t v80 = v67;
        uint64_t v81 = v66;
        uint64_t v82 = v65;
        uint64_t v83 = v64;
        char v84 = v63;
        uint64_t v46 = v2;
        char v14 = static SetupError.== infix(_:_:)((uint64_t)&v85, (uint64_t)&v78);
        sub_247FA98EC(v54, v52, v51, v50, v49, v25, v48);
        sub_247FA98EC(v55, v56, v57, v58, v59, v60, v24);
        sub_247FA98EC(v47, v68, v67, v66, v65, v64, v63);
        sub_247FA98EC(v69, v70, v71, v72, v73, v75, v53);
        sub_247FE0600(v46, v3, v4, v5, v77, 3);
        sub_247FE0600(v7, v8, v10, v9, v61, 3);
        return v14 & 1;
      }
      sub_247FA98EC(v47, v68, v67, v66, v65, v64, v63);
      sub_247FA98EC(v69, v70, v71, v72, v73, v75, v53);
      sub_247FA98EC(v54, v52, v51, v50, v49, v25, v48);
      sub_247FA98EC(v55, v56, v57, v58, v59, v60, v24);
      sub_247FE0600(v2, v3, v4, v5, v77, 3);
      uint64_t v33 = v7;
      uint64_t v34 = v8;
      uint64_t v35 = v10;
      uint64_t v36 = v9;
      uint64_t v37 = v61;
      char v38 = 3;
      goto LABEL_45;
    case 4:
      if (v4 | v3 | v2 | v5 | v77)
      {
        uint64_t v27 = v4 | v3 | v5 | v77;
        if (v2 == 1 && !v27)
        {
          if (v12 == 4 && v7 == 1 && !(v10 | v8 | v9 | v11))
          {
            char v14 = 1;
            uint64_t v28 = *(void *)(a2 + 32);
            sub_247FE0600(1, 0, 0, 0, v77, 4);
            sub_247FE0600(1, 0, 0, 0, v28, 4);
            return v14 & 1;
          }
          goto LABEL_44;
        }
        if (v2 != 2 || v27)
        {
          if (v12 == 4 && v7 == 3 && !(v10 | v8 | v9 | v11))
          {
            uint64_t v29 = *(void *)(a2 + 32);
            sub_247FE0600(3, 0, 0, 0, v77, 4);
            uint64_t v30 = 3;
            goto LABEL_43;
          }
        }
        else if (v12 == 4 && v7 == 2 && !(v10 | v8 | v9 | v11))
        {
          uint64_t v29 = *(void *)(a2 + 32);
          sub_247FE0600(2, 0, 0, 0, v77, 4);
          uint64_t v30 = 2;
          goto LABEL_43;
        }
      }
      else if (v12 == 4 && !(v10 | v8 | v7 | v9 | v11))
      {
        uint64_t v29 = *(void *)(a2 + 32);
        sub_247FE0600(0, 0, 0, 0, v77, 4);
        uint64_t v30 = 0;
LABEL_43:
        sub_247FE0600(v30, 0, 0, 0, v29, 4);
        char v14 = 1;
        return v14 & 1;
      }
LABEL_44:
      uint64_t v76 = *(void *)(a2 + 8);
      uint64_t v74 = *(void *)(a2 + 24);
      uint64_t v41 = *(void *)(a2 + 32);
      char v42 = *(unsigned char *)(a2 + 40);
      sub_247FE42BC(*(void *)a2, v76, v10, v74, v11, v12);
      sub_247FE42BC(v2, v3, v4, v5, v77, v6);
      sub_247FE0600(v2, v3, v4, v5, v77, v6);
      uint64_t v33 = v7;
      uint64_t v34 = v76;
      uint64_t v35 = v10;
      uint64_t v36 = v74;
      uint64_t v37 = v41;
      char v38 = v42;
LABEL_45:
      sub_247FE0600(v33, v34, v35, v36, v37, v38);
      char v14 = 0;
      return v14 & 1;
    default:
      if (*(unsigned char *)(a2 + 40)) {
        goto LABEL_44;
      }
      if (v2 == v7 && v3 == v8)
      {
        uint64_t v13 = *(void *)a1;
        char v14 = 1;
      }
      else
      {
        uint64_t v13 = *(void *)a1;
        uint64_t v39 = *(void *)(a2 + 32);
        char v40 = sub_248175CE0();
        uint64_t v11 = v39;
        char v14 = v40;
      }
      uint64_t v62 = v11;
      sub_247FE42BC(v7, v8, v10, v9, v11, 0);
      sub_247FE42BC(v13, v3, v4, v5, v77, 0);
      sub_247FE0600(v13, v3, v4, v5, v77, 0);
      sub_247FE0600(v7, v8, v10, v9, v62, 0);
      return v14 & 1;
  }
}

uint64_t _s12AppleIDSetup17MachRepairMessageO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v135 = a1;
  v136 = (char *)a2;
  *(void *)&long long v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628);
  MEMORY[0x270FA5388](v126);
  uint64_t v131 = (uint64_t)&v124 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  MEMORY[0x270FA5388](v127);
  uint64_t v130 = (uint64_t)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for RepairModel();
  uint64_t v4 = MEMORY[0x270FA5388](v134);
  uint64_t v129 = (unsigned __int8 *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v128 = (unsigned __int8 *)&v124 - v6;
  uint64_t v7 = type metadata accessor for MachRepairMessage();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v132 = (uint64_t)&v124 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v133 = (uint64_t)&v124 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v17 = (uint64_t *)((char *)&v124 - v16);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  char v20 = (unsigned __int8 *)&v124 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  long long v23 = (uint64_t *)((char *)&v124 - v22);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (unsigned __int8 *)&v124 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2692D6A50);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v29 = (char *)&v124 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (uint64_t)&v29[*(int *)(v27 + 56)];
  sub_247FEFA20(v135, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  sub_247FEFA20((uint64_t)v136, v30, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_247FEFA20((uint64_t)v29, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v31 = v23[1];
      uint64_t v32 = v23[3];
      uint64_t v33 = v23[5];
      uint64_t v34 = v23[9];
      uint64_t v35 = v23[10];
      uint64_t v131 = v23[7];
      uint64_t v132 = v34;
      uint64_t v36 = v23[12];
      uint64_t v133 = v23[11];
      uint64_t v134 = v36;
      uint64_t v37 = v23[14];
      uint64_t v135 = v23[13];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v38 = v23[8];
        uint64_t v39 = v23[6];
        uint64_t v40 = v23[4];
        uint64_t v41 = v23[2];
        uint64_t v42 = *v23;
        uint64_t v43 = *(void *)v30;
        uint64_t v44 = *(void *)(v30 + 8);
        uint64_t v45 = *(void *)(v30 + 16);
        v136 = v29;
        uint64_t v46 = v37;
        uint64_t v129 = (unsigned __int8 *)v33;
        uint64_t v130 = v37;
        uint64_t v47 = *(void *)(v30 + 72);
        uint64_t v48 = *(void *)(v30 + 80);
        uint64_t v49 = *(void *)(v30 + 88);
        uint64_t v50 = *(void *)(v30 + 96);
        uint64_t v51 = *(void *)(v30 + 104);
        uint64_t v52 = *(void *)(v30 + 112);
        *(void *)&long long v147 = v42;
        *((void *)&v147 + 1) = v31;
        uint64_t v127 = v31;
        long long v128 = (unsigned __int8 *)v32;
        *(void *)&long long v148 = v41;
        *((void *)&v148 + 1) = v32;
        uint64_t v149 = v40;
        uint64_t v150 = v33;
        uint64_t v151 = v39;
        uint64_t v152 = v131;
        uint64_t v153 = v38;
        uint64_t v154 = v132;
        uint64_t v155 = v35;
        uint64_t v156 = v133;
        uint64_t v157 = v134;
        uint64_t v158 = v135;
        uint64_t v159 = v46;
        *(void *)&long long v137 = v43;
        *((void *)&v137 + 1) = v44;
        *(void *)uint64_t v138 = v45;
        long long v124 = *(_OWORD *)(v30 + 24);
        *(_OWORD *)&v138[8] = v124;
        long long v125 = *(_OWORD *)(v30 + 40);
        long long v139 = v125;
        long long v126 = *(_OWORD *)(v30 + 56);
        long long v140 = v126;
        uint64_t v141 = v47;
        uint64_t v142 = v48;
        uint64_t v143 = v49;
        uint64_t v144 = v50;
        uint64_t v53 = v49;
        uint64_t v54 = v50;
        uint64_t v145 = v51;
        uint64_t v146 = v52;
        char v55 = _s12AppleIDSetup12RepairReportV2eeoiySbAC_ACtFZ_0(&v147, &v137);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FE0708(v53, v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_247FE0708(v133, v134);
        goto LABEL_43;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FE0708(v133, v134);
      goto LABEL_53;
    case 2u:
      sub_247FEFA20((uint64_t)v29, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_247FEFB38((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for RepairModel);
        goto LABEL_53;
      }
      uint64_t v56 = v129;
      sub_247FEFA88(v30, (uint64_t)v129, (uint64_t (*)(void))type metadata accessor for RepairModel);
      if ((*(void *)v20 == *(void *)v56 && *((void *)v20 + 1) == *((void *)v56 + 1)
         || (sub_248175CE0() & 1) != 0)
        && (_s12AppleIDSetup10SetupModelV2eeoiySbAC_ACtFZ_0(&v20[*(int *)(v134 + 20)], &v56[*(int *)(v134 + 20)]) & 1) != 0)
      {
        uint64_t v57 = &v20[*(int *)(v134 + 24)];
        uint64_t v58 = *((void *)v57 + 4);
        char v59 = v57[40];
        long long v60 = *((_OWORD *)v57 + 1);
        long long v147 = *(_OWORD *)v57;
        long long v148 = v60;
        uint64_t v149 = v58;
        LOBYTE(v150) = v59;
        uint64_t v61 = &v56[*(int *)(v134 + 24)];
        uint64_t v62 = *((void *)v61 + 4);
        char v63 = v61[40];
        long long v64 = *((_OWORD *)v61 + 1);
        long long v137 = *(_OWORD *)v61;
        *(_OWORD *)uint64_t v138 = v64;
        *(void *)&v138[16] = v62;
        LOBYTE(v139) = v63;
        if (_s12AppleIDSetup11RepairModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)&v147, (uint64_t)&v137))
        {
          sub_247FEFB38((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for RepairModel);
          uint64_t v65 = (uint64_t)v20;
          goto LABEL_64;
        }
      }
      sub_247FEFB38((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for RepairModel);
      uint64_t v112 = (uint64_t)v20;
      goto LABEL_68;
    case 3u:
      sub_247FEFA20((uint64_t)v29, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v67 = *v17;
      uint64_t v66 = v17[1];
      uint64_t v68 = v17[2];
      uint64_t v69 = v17[3];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_53;
      }
      uint64_t v70 = *(void *)(v30 + 16);
      uint64_t v71 = *(void *)(v30 + 24);
      BOOL v72 = v67 == *(void *)v30 && v66 == *(void *)(v30 + 8);
      if (v72 || (sub_248175CE0() & 1) != 0)
      {
        char v73 = sub_2480BC92C(v70, v71, v68, v69);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        if (v73)
        {
          uint64_t v74 = (uint64_t)v29;
          goto LABEL_66;
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      uint64_t v122 = (uint64_t)v29;
      goto LABEL_70;
    case 4u:
      uint64_t v75 = v133;
      sub_247FEFA20((uint64_t)v29, v133, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        uint64_t v110 = &qword_2692D6630;
        goto LABEL_51;
      }
      uint64_t v76 = v130;
      sub_247FE06A4(v30, v130, &qword_2692D6630);
      if (*(void *)v75 == *(void *)v76 && *(unsigned __int8 *)(v75 + 8) == *(unsigned __int8 *)(v76 + 8))
      {
        if ((uint64_t v77 = *(int *)(v127 + 32),
              uint64_t v78 = v75 + v77,
              uint64_t v79 = v76 + v77,
              *(void *)(v75 + v77) == *(void *)(v76 + v77))
          && *(void *)(v75 + v77 + 8) == *(void *)(v76 + v77 + 8)
          || (sub_248175CE0() & 1) != 0)
        {
          if (_s12AppleIDSetup10SetupModelV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)(v78 + *(int *)(v134 + 20)), (unsigned __int8 *)(v79 + *(int *)(v134 + 20))))
          {
            uint64_t v80 = (long long *)(v78 + *(int *)(v134 + 24));
            uint64_t v81 = *((void *)v80 + 4);
            char v82 = *((unsigned char *)v80 + 40);
            long long v83 = v80[1];
            long long v147 = *v80;
            long long v148 = v83;
            uint64_t v149 = v81;
            LOBYTE(v150) = v82;
            char v84 = (long long *)(v79 + *(int *)(v134 + 24));
            uint64_t v85 = *((void *)v84 + 4);
            char v86 = *((unsigned char *)v84 + 40);
            long long v87 = v84[1];
            long long v137 = *v84;
            *(_OWORD *)uint64_t v138 = v87;
            *(void *)&v138[16] = v85;
            LOBYTE(v139) = v86;
            if (_s12AppleIDSetup11RepairModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)&v147, (uint64_t)&v137))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5C00);
              if (sub_248174A20())
              {
                uint64_t v88 = &qword_2692D6630;
                goto LABEL_40;
              }
            }
          }
        }
      }
      uint64_t v111 = &qword_2692D6630;
      goto LABEL_56;
    case 5u:
      uint64_t v75 = v132;
      sub_247FEFA20((uint64_t)v29, v132, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v110 = &qword_2692D6628;
LABEL_51:
        sub_247FB33D4(v75, v110);
        goto LABEL_53;
      }
      uint64_t v76 = v131;
      sub_247FE06A4(v30, v131, &qword_2692D6628);
      if (*(void *)v75 == *(void *)v76 && *(void *)(v75 + 8) == *(void *)(v76 + 8))
      {
        if ((uint64_t v89 = *(int *)(v126 + 32),
              uint64_t v90 = v75 + v89,
              uint64_t v91 = v76 + v89,
              *(void *)(v75 + v89) == *(void *)(v76 + v89))
          && *(void *)(v75 + v89 + 8) == *(void *)(v76 + v89 + 8)
          || (sub_248175CE0() & 1) != 0)
        {
          if (_s12AppleIDSetup10SetupModelV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)(v90 + *(int *)(v134 + 20)), (unsigned __int8 *)(v91 + *(int *)(v134 + 20))))
          {
            uint64_t v92 = (long long *)(v90 + *(int *)(v134 + 24));
            uint64_t v93 = *((void *)v92 + 4);
            char v94 = *((unsigned char *)v92 + 40);
            long long v95 = v92[1];
            long long v147 = *v92;
            long long v148 = v95;
            uint64_t v149 = v93;
            LOBYTE(v150) = v94;
            uint64_t v96 = (long long *)(v91 + *(int *)(v134 + 24));
            uint64_t v97 = *((void *)v96 + 4);
            char v98 = *((unsigned char *)v96 + 40);
            long long v99 = v96[1];
            long long v137 = *v96;
            *(_OWORD *)uint64_t v138 = v99;
            *(void *)&v138[16] = v97;
            LOBYTE(v139) = v98;
            if (_s12AppleIDSetup11RepairModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)&v147, (uint64_t)&v137))
            {
              uint64_t v88 = &qword_2692D6628;
LABEL_40:
              sub_247FB33D4(v76, v88);
              sub_247FB33D4(v75, v88);
              goto LABEL_65;
            }
          }
        }
      }
      uint64_t v111 = &qword_2692D6628;
LABEL_56:
      sub_247FB33D4(v76, v111);
      sub_247FB33D4(v75, v111);
      goto LABEL_69;
    case 6u:
      sub_247FEFA20((uint64_t)v29, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      uint64_t v101 = *(void *)v10;
      uint64_t v100 = *((void *)v10 + 1);
      v136 = v29;
      uint64_t v103 = *((void *)v10 + 2);
      uint64_t v102 = *((void *)v10 + 3);
      uint64_t v104 = *((void *)v10 + 4);
      char v105 = v10[40];
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        sub_247FE0600(v101, v100, v103, v102, v104, v105);
        uint64_t v29 = v136;
        goto LABEL_53;
      }
      uint64_t v107 = *(void *)v30;
      uint64_t v106 = *(void *)(v30 + 8);
      uint64_t v108 = *(void *)(v30 + 24);
      uint64_t v134 = *(void *)(v30 + 16);
      uint64_t v135 = v106;
      uint64_t v132 = *(void *)(v30 + 32);
      uint64_t v133 = v108;
      char v109 = *(unsigned char *)(v30 + 40);
      *(void *)&long long v147 = v101;
      *((void *)&v147 + 1) = v100;
      *(void *)&long long v148 = v103;
      *((void *)&v148 + 1) = v102;
      uint64_t v149 = v104;
      LOBYTE(v150) = v105;
      *(void *)&long long v137 = v107;
      *((void *)&v137 + 1) = v106;
      *(void *)uint64_t v138 = v134;
      *(void *)&v138[8] = v108;
      *(void *)&v138[16] = v132;
      LOBYTE(v139) = v109;
      char v55 = _s12AppleIDSetup11RepairErrorO2eeoiySbAC_ACtFZ_0((uint64_t)&v147, (uint64_t)&v137);
      sub_247FE0600(v107, v135, v134, v133, v132, v109);
      sub_247FE0600(v101, v100, v103, v102, v104, v105);
LABEL_43:
      sub_247FEFB38((uint64_t)v136, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      return v55 & 1;
    case 7u:
      if (swift_getEnumCaseMultiPayload() == 7) {
        goto LABEL_65;
      }
      goto LABEL_53;
    default:
      sub_247FEFA20((uint64_t)v29, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_247FEFB38((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for RepairModel);
LABEL_53:
        sub_247FB33D4((uint64_t)v29, (uint64_t *)&unk_2692D6A50);
        goto LABEL_71;
      }
      uint64_t v113 = v128;
      sub_247FEFA88(v30, (uint64_t)v128, (uint64_t (*)(void))type metadata accessor for RepairModel);
      if ((*(void *)v25 != *(void *)v113 || *((void *)v25 + 1) != *((void *)v113 + 1))
        && (sub_248175CE0() & 1) == 0)
      {
        goto LABEL_67;
      }
      if ((_s12AppleIDSetup10SetupModelV2eeoiySbAC_ACtFZ_0(&v25[*(int *)(v134 + 20)], &v113[*(int *)(v134 + 20)]) & 1) == 0) {
        goto LABEL_67;
      }
      uint64_t v114 = &v25[*(int *)(v134 + 24)];
      uint64_t v115 = *((void *)v114 + 4);
      char v116 = v114[40];
      long long v117 = *((_OWORD *)v114 + 1);
      long long v147 = *(_OWORD *)v114;
      long long v148 = v117;
      uint64_t v149 = v115;
      LOBYTE(v150) = v116;
      uint64_t v118 = &v113[*(int *)(v134 + 24)];
      uint64_t v119 = *((void *)v118 + 4);
      char v120 = v118[40];
      long long v121 = *((_OWORD *)v118 + 1);
      long long v137 = *(_OWORD *)v118;
      *(_OWORD *)uint64_t v138 = v121;
      *(void *)&v138[16] = v119;
      LOBYTE(v139) = v120;
      if ((_s12AppleIDSetup11RepairModelV5StateO2eeoiySbAE_AEtFZ_0((uint64_t)&v147, (uint64_t)&v137) & 1) == 0)
      {
LABEL_67:
        sub_247FEFB38((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for RepairModel);
        uint64_t v112 = (uint64_t)v25;
LABEL_68:
        sub_247FEFB38(v112, (uint64_t (*)(void))type metadata accessor for RepairModel);
LABEL_69:
        uint64_t v122 = (uint64_t)v29;
LABEL_70:
        sub_247FEFB38(v122, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
LABEL_71:
        char v55 = 0;
        return v55 & 1;
      }
      sub_247FEFB38((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for RepairModel);
      uint64_t v65 = (uint64_t)v25;
LABEL_64:
      sub_247FEFB38(v65, (uint64_t (*)(void))type metadata accessor for RepairModel);
LABEL_65:
      uint64_t v74 = (uint64_t)v29;
LABEL_66:
      sub_247FEFB38(v74, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
      char v55 = 1;
      return v55 & 1;
  }
}

uint64_t type metadata accessor for MachRepairMessage()
{
  uint64_t result = qword_2692D68A0;
  if (!qword_2692D68A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_247FE0600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
LABEL_6:
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_247FE06A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_247FE0708(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_247FE0758()
{
  unint64_t result = qword_2692D6680;
  if (!qword_2692D6680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6680);
  }
  return result;
}

unint64_t sub_247FE07AC()
{
  unint64_t result = qword_2692D6688;
  if (!qword_2692D6688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6688);
  }
  return result;
}

unint64_t sub_247FE0800()
{
  unint64_t result = qword_2692D6690;
  if (!qword_2692D6690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6690);
  }
  return result;
}

unint64_t sub_247FE0854()
{
  unint64_t result = qword_2692D6698;
  if (!qword_2692D6698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6698);
  }
  return result;
}

unint64_t sub_247FE08A8()
{
  unint64_t result = qword_2692D66A0;
  if (!qword_2692D66A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66A0);
  }
  return result;
}

unint64_t sub_247FE08FC()
{
  unint64_t result = qword_2692D66A8;
  if (!qword_2692D66A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D6628);
    sub_247FEFAF0(&qword_2692D66B0, (void (*)(uint64_t))type metadata accessor for RepairModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66A8);
  }
  return result;
}

unint64_t sub_247FE09A0()
{
  unint64_t result = qword_2692D66B8;
  if (!qword_2692D66B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66B8);
  }
  return result;
}

unint64_t sub_247FE09F4()
{
  unint64_t result = qword_2692D66C0;
  if (!qword_2692D66C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D6630);
    sub_247FEFAF0(&qword_2692D66B0, (void (*)(uint64_t))type metadata accessor for RepairModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66C0);
  }
  return result;
}

unint64_t sub_247FE0A98()
{
  unint64_t result = qword_2692D66C8;
  if (!qword_2692D66C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66C8);
  }
  return result;
}

unint64_t sub_247FE0AEC()
{
  unint64_t result = qword_2692D66D0;
  if (!qword_2692D66D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66D0);
  }
  return result;
}

unint64_t sub_247FE0B40()
{
  unint64_t result = qword_2692D66D8;
  if (!qword_2692D66D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66D8);
  }
  return result;
}

unint64_t sub_247FE0B94()
{
  unint64_t result = qword_2692D66E0;
  if (!qword_2692D66E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66E0);
  }
  return result;
}

unint64_t sub_247FE0BE8()
{
  unint64_t result = qword_2692D66E8;
  if (!qword_2692D66E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66E8);
  }
  return result;
}

unint64_t sub_247FE0C3C()
{
  unint64_t result = qword_2692D66F0;
  if (!qword_2692D66F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D66F0);
  }
  return result;
}

unint64_t sub_247FE0C90()
{
  unint64_t result = qword_2692D6740;
  if (!qword_2692D6740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6740);
  }
  return result;
}

unint64_t sub_247FE0CE4()
{
  unint64_t result = qword_2692D6748;
  if (!qword_2692D6748)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D6628);
    sub_247FEFAF0(&qword_2692D6750, (void (*)(uint64_t))type metadata accessor for RepairModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6748);
  }
  return result;
}

unint64_t sub_247FE0D88()
{
  unint64_t result = qword_2692D6758;
  if (!qword_2692D6758)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D6630);
    sub_247FEFAF0(&qword_2692D6750, (void (*)(uint64_t))type metadata accessor for RepairModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6758);
  }
  return result;
}

unint64_t sub_247FE0E2C()
{
  unint64_t result = qword_2692D6760;
  if (!qword_2692D6760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6760);
  }
  return result;
}

unint64_t sub_247FE0E80()
{
  unint64_t result = qword_2692D6768;
  if (!qword_2692D6768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6768);
  }
  return result;
}

unint64_t sub_247FE0EF4()
{
  unint64_t result = qword_2692D67B8;
  if (!qword_2692D67B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D67B8);
  }
  return result;
}

unint64_t sub_247FE0F48()
{
  unint64_t result = qword_2692D67C0;
  if (!qword_2692D67C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D67C0);
  }
  return result;
}

unint64_t sub_247FE0F9C()
{
  unint64_t result = qword_2692D67C8;
  if (!qword_2692D67C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D67C8);
  }
  return result;
}

unint64_t sub_247FE0FF0()
{
  unint64_t result = qword_2692D67D0;
  if (!qword_2692D67D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D67D0);
  }
  return result;
}

unint64_t sub_247FE1044()
{
  unint64_t result = qword_2692D67E0;
  if (!qword_2692D67E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D67D8);
    sub_247FEFAF0(&qword_2692D50D0, type metadata accessor for AIDAServiceType);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D67E0);
  }
  return result;
}

unint64_t sub_247FE10E8()
{
  unint64_t result = qword_2692D67E8;
  if (!qword_2692D67E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D67E8);
  }
  return result;
}

unint64_t sub_247FE113C()
{
  unint64_t result = qword_2692D67F0;
  if (!qword_2692D67F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D67F0);
  }
  return result;
}

unint64_t sub_247FE1190()
{
  unint64_t result = qword_2692D67F8;
  if (!qword_2692D67F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D67F8);
  }
  return result;
}

unint64_t sub_247FE11E4()
{
  unint64_t result = qword_2692D6800;
  if (!qword_2692D6800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6800);
  }
  return result;
}

unint64_t sub_247FE1238()
{
  unint64_t result = qword_2692D6808;
  if (!qword_2692D6808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6808);
  }
  return result;
}

uint64_t sub_247FE128C()
{
  sub_247FA98EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_247FA98EC(*(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(unsigned char *)(v0 + 120));
  return MEMORY[0x270FA0238](v0, 121, 7);
}

unint64_t sub_247FE12E4()
{
  unint64_t result = qword_2692D6858;
  if (!qword_2692D6858)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D67D8);
    sub_247FEFAF0(&qword_2692D5100, type metadata accessor for AIDAServiceType);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6858);
  }
  return result;
}

unint64_t sub_247FE1388()
{
  unint64_t result = qword_2692D97B0;
  if (!qword_2692D97B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D97B0);
  }
  return result;
}

uint64_t sub_247FE13DC(void *a1)
{
  a1[1] = sub_247FEFAF0(&qword_2692D6868, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
  a1[2] = sub_247FEFAF0(&qword_2692D6870, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
  uint64_t result = sub_247FEFAF0(&qword_2692D6878, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
  a1[3] = result;
  return result;
}

uint64_t sub_247FE1488()
{
  return sub_247FEFAF0(&qword_2692D6880, (void (*)(uint64_t))type metadata accessor for MachRepairMessage);
}

unint64_t sub_247FE14D0(void *a1)
{
  a1[1] = sub_247FE0C90();
  a1[2] = sub_247FE0800();
  unint64_t result = sub_247FE1508();
  a1[3] = result;
  return result;
}

unint64_t sub_247FE1508()
{
  unint64_t result = qword_2692D6888;
  if (!qword_2692D6888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6888);
  }
  return result;
}

unint64_t sub_247FE1560()
{
  unint64_t result = qword_2692D6890;
  if (!qword_2692D6890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6890);
  }
  return result;
}

unint64_t sub_247FE15B8()
{
  unint64_t result = qword_2692D6898;
  if (!qword_2692D6898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6898);
  }
  return result;
}

ValueMetadata *type metadata accessor for Constants.MachServiceNames()
{
  return &type metadata for Constants.MachServiceNames;
}

uint64_t *initializeBufferWithCopyOfBuffer for MachRepairMessage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v8 = a2[3];
        a1[2] = a2[2];
        a1[3] = v8;
        uint64_t v9 = a2[5];
        a1[4] = a2[4];
        a1[5] = v9;
        uint64_t v10 = a2;
        uint64_t v11 = a2[6];
        uint64_t v12 = a2[7];
        a1[6] = v11;
        a1[7] = v12;
        uint64_t v13 = v10[9];
        a1[8] = v10[8];
        a1[9] = v13;
        uint64_t v682 = type metadata accessor for RepairModel();
        uint64_t v14 = *(int *)(v682 + 20);
        v782 = a1;
        uint64_t v15 = (char *)a1 + v14;
        v775 = v10;
        uint64_t v16 = (char *)v10 + v14;
        char *v15 = *((unsigned char *)v10 + v14);
        uint64_t v18 = *(void **)((char *)v10 + v14 + 8);
        char v17 = *(void **)((char *)v10 + v14 + 16);
        uint64_t v19 = *(uint64_t *)((char *)v10 + v14 + 24);
        uint64_t v20 = *((unsigned __int16 *)v16 + 18);
        uint64_t v21 = *((unsigned int *)v16 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE4184(v18, v17, v19, v21 | (v20 << 32));
        *((void *)v15 + 1) = v18;
        *((void *)v15 + 2) = v17;
        *((void *)v15 + 3) = v19;
        *((_WORD *)v15 + 18) = v20;
        *((_DWORD *)v15 + 8) = v21;
        unsigned int v22 = v16[88];
        if (v22 <= 0xF9)
        {
          uint64_t v90 = *((void *)v16 + 5);
          uint64_t v91 = *((void *)v16 + 6);
          uint64_t v92 = *((void *)v16 + 7);
          uint64_t v93 = *((void *)v16 + 8);
          uint64_t v94 = *((void *)v16 + 9);
          uint64_t v95 = *((void *)v16 + 10);
          sub_247FA9804(v90, v91, v92, v93, v94, v95, v16[88]);
          *((void *)v15 + 5) = v90;
          *((void *)v15 + 6) = v91;
          *((void *)v15 + 7) = v92;
          *((void *)v15 + 8) = v93;
          *((void *)v15 + 9) = v94;
          *((void *)v15 + 10) = v95;
          v15[88] = v22;
        }
        else
        {
          long long v23 = *(_OWORD *)(v16 + 56);
          *(_OWORD *)(v15 + 40) = *(_OWORD *)(v16 + 40);
          *(_OWORD *)(v15 + 56) = v23;
          *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
          v15[88] = v16[88];
        }
        v15[96] = v16[96];
        v15[97] = v16[97];
        uint64_t v96 = *((void *)v16 + 14);
        *((void *)v15 + 13) = *((void *)v16 + 13);
        *((void *)v15 + 14) = v96;
        uint64_t v97 = *((void *)v16 + 16);
        *((void *)v15 + 15) = *((void *)v16 + 15);
        *((void *)v15 + 16) = v97;
        *((void *)v15 + 17) = *((void *)v16 + 17);
        *((_WORD *)v15 + 72) = *((_WORD *)v16 + 72);
        uint64_t v98 = *((void *)v16 + 20);
        *((void *)v15 + 19) = *((void *)v16 + 19);
        *((void *)v15 + 20) = v98;
        uint64_t v99 = *((void *)v16 + 22);
        uint64_t v766 = *((void *)v16 + 21);
        uint64_t v100 = *((void *)v16 + 23);
        uint64_t v101 = *((void *)v16 + 24);
        uint64_t v103 = *((void *)v16 + 25);
        uint64_t v102 = *((void *)v16 + 26);
        unsigned int v104 = v16[216];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE41AC(v766, v99, v100, v101, v103, v102, v104);
        *((void *)v15 + 21) = v766;
        *((void *)v15 + 22) = v99;
        *((void *)v15 + 23) = v100;
        *((void *)v15 + 24) = v101;
        *((void *)v15 + 25) = v103;
        *((void *)v15 + 26) = v102;
        v15[216] = v104;
        uint64_t v105 = *((void *)v16 + 29);
        if (v105)
        {
          *((void *)v15 + 28) = *((void *)v16 + 28);
          *((void *)v15 + 29) = v105;
          uint64_t v106 = *((void *)v16 + 31);
          *((void *)v15 + 30) = *((void *)v16 + 30);
          *((void *)v15 + 31) = v106;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v159 = *((_OWORD *)v16 + 15);
          *((_OWORD *)v15 + 14) = *((_OWORD *)v16 + 14);
          *((_OWORD *)v15 + 15) = v159;
        }
        uint64_t v160 = *((void *)v16 + 33);
        *((void *)v15 + 32) = *((void *)v16 + 32);
        *((void *)v15 + 33) = v160;
        uint64_t v161 = *((void *)v16 + 35);
        *((void *)v15 + 34) = *((void *)v16 + 34);
        *((void *)v15 + 35) = v161;
        uint64_t v724 = type metadata accessor for SetupModel();
        uint64_t v162 = *(int *)(v724 + 32);
        v163 = &v15[v162];
        v164 = &v16[v162];
        uint64_t v165 = type metadata accessor for IdMSAccount();
        uint64_t v680 = *(void *)(v165 - 8);
        v166 = *(unsigned int (**)(char *, uint64_t, int *))(v680 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v713 = v166;
        v757 = (int *)v165;
        v769 = v164;
        v730 = v163;
        if (v166(v164, 1, (int *)v165))
        {
          uint64_t v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v163, v164, *(void *)(*(void *)(v167 - 8) + 64));
        }
        else
        {
          uint64_t v196 = *((void *)v164 + 1);
          *(void *)v163 = *(void *)v164;
          *((void *)v163 + 1) = v196;
          uint64_t v197 = *((void *)v164 + 3);
          *((void *)v163 + 2) = *((void *)v164 + 2);
          *((void *)v163 + 3) = v197;
          uint64_t v198 = *((void *)v164 + 5);
          *((void *)v163 + 4) = *((void *)v164 + 4);
          *((void *)v163 + 5) = v198;
          uint64_t v199 = *((void *)v164 + 7);
          *((void *)v163 + 6) = *((void *)v164 + 6);
          *((void *)v163 + 7) = v199;
          uint64_t v200 = *((void *)v164 + 8);
          uint64_t v201 = *((void *)v164 + 9);
          *((void *)v163 + 8) = v200;
          *((void *)v163 + 9) = v201;
          uint64_t v202 = *(int *)(v165 + 20);
          v744 = &v163[v202];
          v706 = &v769[v202];
          uint64_t v203 = sub_248174700();
          uint64_t v204 = *(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v204(v744, v706, v203);
          uint64_t v205 = v757[6];
          v206 = &v163[v205];
          uint64_t v207 = &v769[v205];
          uint64_t v208 = *(void *)v207;
          uint64_t v209 = *((void *)v207 + 1);
          uint64_t v211 = *((void *)v207 + 2);
          uint64_t v210 = *((void *)v207 + 3);
          uint64_t v212 = *((void *)v207 + 4);
          uint64_t v213 = *((void *)v207 + 5);
          uint64_t v214 = *((void *)v207 + 6);
          uint64_t v700 = *((void *)v207 + 7);
          uint64_t v707 = *((void *)v207 + 8);
          LOBYTE(v744) = v207[72];
          sub_247FABF8C(*(void *)v207, v209, v211, v210, v212, v213, v214, v700, v707, (char)v744);
          *(void *)v206 = v208;
          *((void *)v206 + 1) = v209;
          *((void *)v206 + 2) = v211;
          *((void *)v206 + 3) = v210;
          *((void *)v206 + 4) = v212;
          *((void *)v206 + 5) = v213;
          *((void *)v206 + 6) = v214;
          *((void *)v206 + 7) = v700;
          *((void *)v206 + 8) = v707;
          v206[72] = (char)v744;
          v163 = v730;
          v164 = v769;
          *(void *)&v730[v757[7]] = *(void *)&v769[v757[7]];
          uint64_t v215 = *(void (**)(char *, void, uint64_t, int *))(v680 + 56);
          swift_bridgeObjectRetain();
          v215(v730, 0, 1, v757);
        }
        unint64_t v216 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v217 = v216[5];
        uint64_t v218 = &v163[v217];
        uint64_t v219 = &v164[v217];
        uint64_t v220 = *((void *)v219 + 1);
        if (v220)
        {
          *(void *)uint64_t v218 = *(void *)v219;
          *((void *)v218 + 1) = v220;
          uint64_t v221 = *((void *)v219 + 3);
          *((void *)v218 + 2) = *((void *)v219 + 2);
          *((void *)v218 + 3) = v221;
          uint64_t v222 = *((void *)v219 + 5);
          *((void *)v218 + 4) = *((void *)v219 + 4);
          *((void *)v218 + 5) = v222;
          uint64_t v223 = *((void *)v219 + 7);
          *((void *)v218 + 6) = *((void *)v219 + 6);
          *((void *)v218 + 7) = v223;
          uint64_t v224 = *((void *)v219 + 9);
          *((void *)v218 + 8) = *((void *)v219 + 8);
          *((void *)v218 + 9) = v224;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v304 = *((_OWORD *)v219 + 3);
          *((_OWORD *)v218 + 2) = *((_OWORD *)v219 + 2);
          *((_OWORD *)v218 + 3) = v304;
          *((_OWORD *)v218 + 4) = *((_OWORD *)v219 + 4);
          long long v305 = *((_OWORD *)v219 + 1);
          *(_OWORD *)uint64_t v218 = *(_OWORD *)v219;
          *((_OWORD *)v218 + 1) = v305;
        }
        v163[v216[6]] = v164[v216[6]];
        uint64_t v306 = v216[7];
        v307 = &v163[v306];
        v308 = &v164[v306];
        uint64_t v309 = *((void *)v308 + 1);
        *(void *)v307 = *(void *)v308;
        *((void *)v307 + 1) = v309;
        *(void *)&v163[v216[8]] = *(void *)&v164[v216[8]];
        v163[v216[9]] = v164[v216[9]];
        uint64_t v310 = v216[10];
        v311 = &v163[v310];
        v312 = &v164[v310];
        v313 = (void *)*((void *)v312 + 1);
        v703 = *(void **)v312;
        v711 = v216;
        v314 = (void *)*((void *)v312 + 2);
        v315 = (void *)*((void *)v312 + 3);
        v747 = (void *)*((void *)v312 + 4);
        uint64_t v693 = *((void *)v312 + 6);
        v697 = (void *)*((void *)v312 + 5);
        v316 = (void *)*((void *)v312 + 8);
        v689 = (void *)*((void *)v312 + 7);
        v317 = (void *)*((void *)v312 + 9);
        char v318 = v312[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247F986A0(v703, v313, v314, v315, v747, v697, v693, v689, v316, v317, v318);
        *(void *)v311 = v703;
        *((void *)v311 + 1) = v313;
        *((void *)v311 + 2) = v314;
        *((void *)v311 + 3) = v315;
        *((void *)v311 + 4) = v747;
        *((void *)v311 + 5) = v697;
        *((void *)v311 + 6) = v693;
        *((void *)v311 + 7) = v689;
        *((void *)v311 + 8) = v316;
        *((void *)v311 + 9) = v317;
        v311[80] = v318;
        uint64_t v319 = v711[11];
        v320 = &v730[v319];
        v321 = &v769[v319];
        if (*(void *)v321)
        {
          uint64_t v322 = *((void *)v321 + 1);
          *(void *)v320 = *(void *)v321;
          *((void *)v320 + 1) = v322;
          swift_retain();
        }
        else
        {
          *(_OWORD *)v320 = *(_OWORD *)v321;
        }
        uint64_t v382 = *(int *)(v724 + 36);
        v383 = &v15[v382];
        v384 = &v16[v382];
        if (v713(&v16[v382], 1, v757))
        {
          uint64_t v385 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v383, v384, *(void *)(*(void *)(v385 - 8) + 64));
        }
        else
        {
          uint64_t v398 = *((void *)v384 + 1);
          *(void *)v383 = *(void *)v384;
          *((void *)v383 + 1) = v398;
          uint64_t v399 = *((void *)v384 + 3);
          *((void *)v383 + 2) = *((void *)v384 + 2);
          *((void *)v383 + 3) = v399;
          uint64_t v400 = *((void *)v384 + 5);
          *((void *)v383 + 4) = *((void *)v384 + 4);
          *((void *)v383 + 5) = v400;
          uint64_t v401 = *((void *)v384 + 7);
          *((void *)v383 + 6) = *((void *)v384 + 6);
          *((void *)v383 + 7) = v401;
          uint64_t v402 = *((void *)v384 + 9);
          *((void *)v383 + 8) = *((void *)v384 + 8);
          *((void *)v383 + 9) = v402;
          uint64_t v403 = v757[5];
          v773 = &v383[v403];
          v749 = &v384[v403];
          uint64_t v404 = sub_248174700();
          v737 = *(void (**)(char *, char *, uint64_t))(*(void *)(v404 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v737(v773, v749, v404);
          uint64_t v405 = v757[6];
          v406 = &v383[v405];
          v407 = &v384[v405];
          uint64_t v408 = *((void *)v407 + 1);
          uint64_t v409 = *((void *)v407 + 2);
          uint64_t v410 = *((void *)v407 + 3);
          uint64_t v411 = *((void *)v407 + 4);
          uint64_t v412 = *((void *)v407 + 5);
          uint64_t v413 = *((void *)v407 + 6);
          uint64_t v414 = *((void *)v407 + 7);
          uint64_t v738 = *(void *)v407;
          uint64_t v750 = *((void *)v407 + 8);
          LOBYTE(v773) = v407[72];
          sub_247FABF8C(*(void *)v407, v408, v409, v410, v411, v412, v413, v414, v750, (char)v773);
          *(void *)v406 = v738;
          *((void *)v406 + 1) = v408;
          *((void *)v406 + 2) = v409;
          *((void *)v406 + 3) = v410;
          *((void *)v406 + 4) = v411;
          *((void *)v406 + 5) = v412;
          *((void *)v406 + 6) = v413;
          *((void *)v406 + 7) = v414;
          *((void *)v406 + 8) = v750;
          v406[72] = (char)v773;
          *(void *)&v383[v757[7]] = *(void *)&v384[v757[7]];
          v415 = *(void (**)(char *, void, uint64_t, int *))(v680 + 56);
          swift_bridgeObjectRetain();
          v415(v383, 0, 1, v757);
        }
        v416 = (int *)type metadata accessor for SignInModel();
        uint64_t v417 = v416[5];
        v418 = &v383[v417];
        v419 = &v384[v417];
        uint64_t v420 = *((void *)v419 + 1);
        if (v420)
        {
          *(void *)v418 = *(void *)v419;
          *((void *)v418 + 1) = v420;
          uint64_t v421 = *((void *)v419 + 3);
          *((void *)v418 + 2) = *((void *)v419 + 2);
          *((void *)v418 + 3) = v421;
          uint64_t v422 = *((void *)v419 + 5);
          *((void *)v418 + 4) = *((void *)v419 + 4);
          *((void *)v418 + 5) = v422;
          uint64_t v423 = *((void *)v419 + 7);
          *((void *)v418 + 6) = *((void *)v419 + 6);
          *((void *)v418 + 7) = v423;
          uint64_t v424 = *((void *)v419 + 9);
          *((void *)v418 + 8) = *((void *)v419 + 8);
          *((void *)v418 + 9) = v424;
          v425 = (uint64_t *)(v419 + 80);
          unint64_t v426 = *((void *)v419 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v426 >> 60 == 15)
          {
            *((_OWORD *)v418 + 5) = *(_OWORD *)v425;
          }
          else
          {
            uint64_t v526 = *v425;
            sub_247FB6C20(*v425, v426);
            *((void *)v418 + 10) = v526;
            *((void *)v418 + 11) = v426;
          }
        }
        else
        {
          long long v514 = *((_OWORD *)v419 + 3);
          *((_OWORD *)v418 + 2) = *((_OWORD *)v419 + 2);
          *((_OWORD *)v418 + 3) = v514;
          long long v515 = *((_OWORD *)v419 + 5);
          *((_OWORD *)v418 + 4) = *((_OWORD *)v419 + 4);
          *((_OWORD *)v418 + 5) = v515;
          long long v516 = *((_OWORD *)v419 + 1);
          *(_OWORD *)v418 = *(_OWORD *)v419;
          *((_OWORD *)v418 + 1) = v516;
        }
        *(void *)&v383[v416[6]] = *(void *)&v384[v416[6]];
        *(void *)&v383[v416[7]] = *(void *)&v384[v416[7]];
        v383[v416[8]] = v384[v416[8]];
        v383[v416[9]] = v384[v416[9]];
        uint64_t v527 = v416[10];
        v528 = &v383[v527];
        v529 = &v384[v527];
        uint64_t v530 = *(void *)&v384[v527 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a1 = v782;
        if (v530)
        {
          *(void *)v528 = *(void *)v529;
          *((void *)v528 + 1) = v530;
          uint64_t v531 = *((void *)v529 + 2);
          uint64_t v532 = *((void *)v529 + 3);
          *((void *)v528 + 2) = v531;
          *((void *)v528 + 3) = v532;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v533 = *((_OWORD *)v529 + 1);
          *(_OWORD *)v528 = *(_OWORD *)v529;
          *((_OWORD *)v528 + 1) = v533;
        }
        uint64_t v534 = v416[11];
        v535 = &v383[v534];
        v536 = &v384[v534];
        uint64_t v537 = *((void *)v536 + 1);
        *(void *)v535 = *(void *)v536;
        *((void *)v535 + 1) = v537;
        uint64_t v538 = v416[12];
        v539 = *(void **)&v384[v538];
        *(void *)&v383[v538] = v539;
        uint64_t v540 = v416[13];
        v541 = &v383[v540];
        v542 = &v384[v540];
        uint64_t v543 = *(void *)v542;
        uint64_t v544 = *((void *)v542 + 1);
        char v545 = v542[16];
        swift_bridgeObjectRetain();
        id v546 = v539;
        sub_247FE42A8(v543, v544, v545);
        *(void *)v541 = v543;
        *((void *)v541 + 1) = v544;
        v541[16] = v545;
        uint64_t v547 = v416[14];
        v548 = &v383[v547];
        v549 = &v384[v547];
        uint64_t v550 = *((void *)v549 + 1);
        *(void *)v548 = *(void *)v549;
        *((void *)v548 + 1) = v550;
        v383[v416[15]] = v384[v416[15]];
        uint64_t v551 = v416[16];
        v552 = &v383[v551];
        v553 = &v384[v551];
        unint64_t v554 = *(void *)&v384[v551 + 8];
        swift_bridgeObjectRetain();
        if (v554 >= 3)
        {
          *(void *)v552 = *(void *)v553;
          *((void *)v552 + 1) = v554;
          uint64_t v556 = *((void *)v553 + 3);
          *((void *)v552 + 2) = *((void *)v553 + 2);
          *((void *)v552 + 3) = v556;
          v552[32] = v553[32];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v555 = *((_OWORD *)v553 + 1);
          *(_OWORD *)v552 = *(_OWORD *)v553;
          *((_OWORD *)v552 + 1) = v555;
          v552[32] = v553[32];
        }
        uint64_t v557 = *(int *)(v682 + 24);
        v558 = (char *)v782 + v557;
        v559 = (char *)v775 + v557;
        unsigned int v560 = v559[40];
        if (v560 <= 0xFA) {
          goto LABEL_139;
        }
        long long v561 = *((_OWORD *)v559 + 1);
        *(_OWORD *)v558 = *(_OWORD *)v559;
        *((_OWORD *)v558 + 1) = v561;
        *(_OWORD *)(v558 + 25) = *(_OWORD *)(v559 + 25);
        goto LABEL_140;
      case 1u:
        uint64_t v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        uint64_t v27 = a2[3];
        a1[2] = a2[2];
        a1[3] = v27;
        uint64_t v28 = a2[5];
        a1[4] = a2[4];
        a1[5] = v28;
        uint64_t v29 = a2[7];
        a1[6] = a2[6];
        a1[7] = v29;
        uint64_t v30 = a2[9];
        a1[8] = a2[8];
        a1[9] = v30;
        a1[10] = a2[10];
        uint64_t v31 = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31)
        {
          a1[11] = a2[11];
          a1[12] = v31;
          uint64_t v32 = a2[14];
          a1[13] = a2[13];
          a1[14] = v32;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v158 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 13) = v158;
        }
        goto LABEL_140;
      case 2u:
        uint64_t v33 = a2[1];
        *a1 = *a2;
        a1[1] = v33;
        uint64_t v34 = a2[3];
        a1[2] = a2[2];
        a1[3] = v34;
        uint64_t v35 = a2[5];
        a1[4] = a2[4];
        a1[5] = v35;
        uint64_t v36 = a2[7];
        a1[6] = a2[6];
        a1[7] = v36;
        uint64_t v37 = a2[9];
        a1[8] = a2[8];
        a1[9] = v37;
        uint64_t v683 = type metadata accessor for RepairModel();
        uint64_t v38 = *(int *)(v683 + 20);
        v783 = a1;
        uint64_t v39 = (char *)a1 + v38;
        v776 = a2;
        uint64_t v40 = (char *)a2 + v38;
        *uint64_t v39 = *((unsigned char *)a2 + v38);
        uint64_t v41 = *(void **)((char *)a2 + v38 + 8);
        uint64_t v42 = *(void **)((char *)a2 + v38 + 16);
        uint64_t v43 = *((void *)v40 + 3);
        uint64_t v44 = *((unsigned __int16 *)v40 + 18);
        uint64_t v45 = *((unsigned int *)v40 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE4184(v41, v42, v43, v45 | (v44 << 32));
        *((void *)v39 + 1) = v41;
        *((void *)v39 + 2) = v42;
        *((void *)v39 + 3) = v43;
        *((_WORD *)v39 + 18) = v44;
        *((_DWORD *)v39 + 8) = v45;
        unsigned int v46 = v40[88];
        if (v46 <= 0xF9)
        {
          uint64_t v107 = *((void *)v40 + 5);
          uint64_t v108 = *((void *)v40 + 6);
          uint64_t v109 = *((void *)v40 + 7);
          uint64_t v110 = *((void *)v40 + 8);
          uint64_t v111 = *((void *)v40 + 9);
          uint64_t v112 = *((void *)v40 + 10);
          sub_247FA9804(v107, v108, v109, v110, v111, v112, v40[88]);
          *((void *)v39 + 5) = v107;
          *((void *)v39 + 6) = v108;
          *((void *)v39 + 7) = v109;
          *((void *)v39 + 8) = v110;
          *((void *)v39 + 9) = v111;
          *((void *)v39 + 10) = v112;
          v39[88] = v46;
        }
        else
        {
          long long v47 = *(_OWORD *)(v40 + 56);
          *(_OWORD *)(v39 + 40) = *(_OWORD *)(v40 + 40);
          *(_OWORD *)(v39 + 56) = v47;
          *(_OWORD *)(v39 + 72) = *(_OWORD *)(v40 + 72);
          v39[88] = v40[88];
        }
        v39[96] = v40[96];
        v39[97] = v40[97];
        uint64_t v113 = *((void *)v40 + 14);
        *((void *)v39 + 13) = *((void *)v40 + 13);
        *((void *)v39 + 14) = v113;
        uint64_t v114 = *((void *)v40 + 16);
        *((void *)v39 + 15) = *((void *)v40 + 15);
        *((void *)v39 + 16) = v114;
        *((void *)v39 + 17) = *((void *)v40 + 17);
        *((_WORD *)v39 + 72) = *((_WORD *)v40 + 72);
        uint64_t v115 = *((void *)v40 + 20);
        *((void *)v39 + 19) = *((void *)v40 + 19);
        *((void *)v39 + 20) = v115;
        uint64_t v116 = *((void *)v40 + 22);
        uint64_t v767 = *((void *)v40 + 21);
        uint64_t v117 = *((void *)v40 + 23);
        uint64_t v118 = *((void *)v40 + 24);
        uint64_t v120 = *((void *)v40 + 25);
        uint64_t v119 = *((void *)v40 + 26);
        unsigned int v121 = v40[216];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE41AC(v767, v116, v117, v118, v120, v119, v121);
        *((void *)v39 + 21) = v767;
        *((void *)v39 + 22) = v116;
        *((void *)v39 + 23) = v117;
        *((void *)v39 + 24) = v118;
        *((void *)v39 + 25) = v120;
        *((void *)v39 + 26) = v119;
        v39[216] = v121;
        uint64_t v122 = *((void *)v40 + 29);
        if (v122)
        {
          *((void *)v39 + 28) = *((void *)v40 + 28);
          *((void *)v39 + 29) = v122;
          uint64_t v123 = *((void *)v40 + 31);
          *((void *)v39 + 30) = *((void *)v40 + 30);
          *((void *)v39 + 31) = v123;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v168 = *((_OWORD *)v40 + 15);
          *((_OWORD *)v39 + 14) = *((_OWORD *)v40 + 14);
          *((_OWORD *)v39 + 15) = v168;
        }
        uint64_t v169 = *((void *)v40 + 33);
        *((void *)v39 + 32) = *((void *)v40 + 32);
        *((void *)v39 + 33) = v169;
        uint64_t v170 = *((void *)v40 + 35);
        *((void *)v39 + 34) = *((void *)v40 + 34);
        *((void *)v39 + 35) = v170;
        uint64_t v725 = type metadata accessor for SetupModel();
        uint64_t v171 = *(int *)(v725 + 32);
        uint64_t v172 = &v39[v171];
        uint64_t v173 = &v40[v171];
        uint64_t v174 = type metadata accessor for IdMSAccount();
        uint64_t v681 = *(void *)(v174 - 8);
        uint64_t v175 = *(unsigned int (**)(char *, uint64_t, int *))(v681 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v714 = v175;
        v758 = (int *)v174;
        v770 = v172;
        v743 = v173;
        if (v175(v173, 1, (int *)v174))
        {
          uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v172, v173, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          uint64_t v225 = *((void *)v173 + 1);
          *(void *)uint64_t v172 = *(void *)v173;
          *((void *)v172 + 1) = v225;
          uint64_t v226 = *((void *)v173 + 3);
          *((void *)v172 + 2) = *((void *)v173 + 2);
          *((void *)v172 + 3) = v226;
          uint64_t v227 = *((void *)v173 + 5);
          *((void *)v172 + 4) = *((void *)v173 + 4);
          *((void *)v172 + 5) = v227;
          uint64_t v228 = *((void *)v173 + 7);
          *((void *)v172 + 6) = *((void *)v173 + 6);
          *((void *)v172 + 7) = v228;
          uint64_t v229 = *((void *)v173 + 9);
          *((void *)v770 + 8) = *((void *)v173 + 8);
          *((void *)v770 + 9) = v229;
          uint64_t v230 = *(int *)(v174 + 20);
          v732 = &v770[v230];
          v708 = &v173[v230];
          uint64_t v231 = sub_248174700();
          uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v232(v732, v708, v231);
          uint64_t v233 = v758[6];
          unint64_t v234 = &v770[v233];
          uint64_t v235 = &v743[v233];
          uint64_t v236 = *((void *)v235 + 1);
          uint64_t v238 = *((void *)v235 + 2);
          uint64_t v237 = *((void *)v235 + 3);
          uint64_t v240 = *((void *)v235 + 4);
          uint64_t v239 = *((void *)v235 + 5);
          uint64_t v242 = *((void *)v235 + 6);
          uint64_t v241 = *((void *)v235 + 7);
          uint64_t v701 = *(void *)v235;
          uint64_t v709 = *((void *)v235 + 8);
          LOBYTE(v732) = v235[72];
          sub_247FABF8C(*(void *)v235, v236, v238, v237, v240, v239, v242, v241, v709, (char)v732);
          *(void *)unint64_t v234 = v701;
          *((void *)v234 + 1) = v236;
          *((void *)v234 + 2) = v238;
          *((void *)v234 + 3) = v237;
          *((void *)v234 + 4) = v240;
          *((void *)v234 + 5) = v239;
          *((void *)v234 + 6) = v242;
          *((void *)v234 + 7) = v241;
          uint64_t v172 = v770;
          *((void *)v234 + 8) = v709;
          v234[72] = (char)v732;
          *(void *)&v770[v758[7]] = *(void *)&v743[v758[7]];
          char v243 = *(void (**)(char *, void, uint64_t, int *))(v681 + 56);
          swift_bridgeObjectRetain();
          uint64_t v173 = v743;
          v243(v770, 0, 1, v758);
        }
        v244 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v245 = v244[5];
        v246 = &v172[v245];
        v247 = &v173[v245];
        uint64_t v248 = *((void *)v247 + 1);
        if (v248)
        {
          *(void *)v246 = *(void *)v247;
          *((void *)v246 + 1) = v248;
          uint64_t v249 = *((void *)v247 + 3);
          *((void *)v246 + 2) = *((void *)v247 + 2);
          *((void *)v246 + 3) = v249;
          uint64_t v250 = *((void *)v247 + 5);
          *((void *)v246 + 4) = *((void *)v247 + 4);
          *((void *)v246 + 5) = v250;
          uint64_t v251 = *((void *)v247 + 7);
          *((void *)v246 + 6) = *((void *)v247 + 6);
          *((void *)v246 + 7) = v251;
          uint64_t v252 = *((void *)v247 + 9);
          *((void *)v246 + 8) = *((void *)v247 + 8);
          *((void *)v246 + 9) = v252;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v323 = *((_OWORD *)v247 + 3);
          *((_OWORD *)v246 + 2) = *((_OWORD *)v247 + 2);
          *((_OWORD *)v246 + 3) = v323;
          *((_OWORD *)v246 + 4) = *((_OWORD *)v247 + 4);
          long long v324 = *((_OWORD *)v247 + 1);
          *(_OWORD *)v246 = *(_OWORD *)v247;
          *((_OWORD *)v246 + 1) = v324;
        }
        v172[v244[6]] = v173[v244[6]];
        uint64_t v325 = v244[7];
        v326 = &v172[v325];
        v327 = &v173[v325];
        uint64_t v328 = *((void *)v327 + 1);
        *(void *)v326 = *(void *)v327;
        *((void *)v326 + 1) = v328;
        *(void *)&v172[v244[8]] = *(void *)&v173[v244[8]];
        v172[v244[9]] = v173[v244[9]];
        uint64_t v329 = v244[10];
        v330 = &v172[v329];
        v331 = &v173[v329];
        v332 = (void *)*((void *)v331 + 1);
        v704 = *(void **)v331;
        v712 = v244;
        v333 = (void *)*((void *)v331 + 2);
        v334 = (void *)*((void *)v331 + 3);
        v698 = (void *)*((void *)v331 + 4);
        v735 = (void *)*((void *)v331 + 5);
        v335 = (void *)*((void *)v331 + 8);
        v690 = (void *)*((void *)v331 + 7);
        uint64_t v694 = *((void *)v331 + 6);
        v336 = (void *)*((void *)v331 + 9);
        char v337 = v331[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247F986A0(v704, v332, v333, v334, v698, v735, v694, v690, v335, v336, v337);
        *(void *)v330 = v704;
        *((void *)v330 + 1) = v332;
        *((void *)v330 + 2) = v333;
        *((void *)v330 + 3) = v334;
        *((void *)v330 + 4) = v698;
        *((void *)v330 + 5) = v735;
        *((void *)v330 + 6) = v694;
        *((void *)v330 + 7) = v690;
        *((void *)v330 + 8) = v335;
        *((void *)v330 + 9) = v336;
        v330[80] = v337;
        uint64_t v338 = v712[11];
        v339 = &v770[v338];
        v340 = &v743[v338];
        if (*(void *)v340)
        {
          uint64_t v341 = *((void *)v340 + 1);
          *(void *)v339 = *(void *)v340;
          *((void *)v339 + 1) = v341;
          swift_retain();
        }
        else
        {
          *(_OWORD *)v339 = *(_OWORD *)v340;
        }
        uint64_t v386 = *(int *)(v725 + 36);
        v387 = &v39[v386];
        v388 = &v40[v386];
        if (v714(&v40[v386], 1, v758))
        {
          uint64_t v389 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v387, v388, *(void *)(*(void *)(v389 - 8) + 64));
        }
        else
        {
          uint64_t v427 = *((void *)v388 + 1);
          *(void *)v387 = *(void *)v388;
          *((void *)v387 + 1) = v427;
          uint64_t v428 = *((void *)v388 + 3);
          *((void *)v387 + 2) = *((void *)v388 + 2);
          *((void *)v387 + 3) = v428;
          uint64_t v429 = *((void *)v388 + 5);
          *((void *)v387 + 4) = *((void *)v388 + 4);
          *((void *)v387 + 5) = v429;
          uint64_t v430 = *((void *)v388 + 7);
          *((void *)v387 + 6) = *((void *)v388 + 6);
          *((void *)v387 + 7) = v430;
          uint64_t v431 = *((void *)v388 + 9);
          *((void *)v387 + 8) = *((void *)v388 + 8);
          *((void *)v387 + 9) = v431;
          uint64_t v432 = v758[5];
          v774 = &v387[v432];
          v751 = &v388[v432];
          uint64_t v433 = sub_248174700();
          v739 = *(void (**)(char *, char *, uint64_t))(*(void *)(v433 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v739(v774, v751, v433);
          uint64_t v434 = v758[6];
          v435 = &v387[v434];
          v436 = &v388[v434];
          uint64_t v437 = *((void *)v436 + 1);
          uint64_t v438 = *((void *)v436 + 2);
          uint64_t v439 = *((void *)v436 + 3);
          uint64_t v440 = *((void *)v436 + 4);
          uint64_t v441 = *((void *)v436 + 5);
          uint64_t v442 = *((void *)v436 + 6);
          uint64_t v443 = *((void *)v436 + 7);
          uint64_t v740 = *(void *)v436;
          uint64_t v752 = *((void *)v436 + 8);
          LOBYTE(v774) = v436[72];
          sub_247FABF8C(*(void *)v436, v437, v438, v439, v440, v441, v442, v443, v752, (char)v774);
          *(void *)v435 = v740;
          *((void *)v435 + 1) = v437;
          *((void *)v435 + 2) = v438;
          *((void *)v435 + 3) = v439;
          *((void *)v435 + 4) = v440;
          *((void *)v435 + 5) = v441;
          *((void *)v435 + 6) = v442;
          *((void *)v435 + 7) = v443;
          *((void *)v435 + 8) = v752;
          v435[72] = (char)v774;
          *(void *)&v387[v758[7]] = *(void *)&v388[v758[7]];
          v444 = *(void (**)(char *, void, uint64_t, int *))(v681 + 56);
          swift_bridgeObjectRetain();
          v444(v387, 0, 1, v758);
        }
        v445 = (int *)type metadata accessor for SignInModel();
        uint64_t v446 = v445[5];
        v447 = &v387[v446];
        v448 = &v388[v446];
        uint64_t v449 = *((void *)v448 + 1);
        if (v449)
        {
          *(void *)v447 = *(void *)v448;
          *((void *)v447 + 1) = v449;
          uint64_t v450 = *((void *)v448 + 3);
          *((void *)v447 + 2) = *((void *)v448 + 2);
          *((void *)v447 + 3) = v450;
          uint64_t v451 = *((void *)v448 + 5);
          *((void *)v447 + 4) = *((void *)v448 + 4);
          *((void *)v447 + 5) = v451;
          uint64_t v452 = *((void *)v448 + 7);
          *((void *)v447 + 6) = *((void *)v448 + 6);
          *((void *)v447 + 7) = v452;
          uint64_t v453 = *((void *)v448 + 9);
          *((void *)v447 + 8) = *((void *)v448 + 8);
          *((void *)v447 + 9) = v453;
          v454 = (uint64_t *)(v448 + 80);
          unint64_t v455 = *((void *)v448 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v455 >> 60 == 15)
          {
            *((_OWORD *)v447 + 5) = *(_OWORD *)v454;
          }
          else
          {
            uint64_t v562 = *v454;
            sub_247FB6C20(*v454, v455);
            *((void *)v447 + 10) = v562;
            *((void *)v447 + 11) = v455;
          }
        }
        else
        {
          long long v517 = *((_OWORD *)v448 + 3);
          *((_OWORD *)v447 + 2) = *((_OWORD *)v448 + 2);
          *((_OWORD *)v447 + 3) = v517;
          long long v518 = *((_OWORD *)v448 + 5);
          *((_OWORD *)v447 + 4) = *((_OWORD *)v448 + 4);
          *((_OWORD *)v447 + 5) = v518;
          long long v519 = *((_OWORD *)v448 + 1);
          *(_OWORD *)v447 = *(_OWORD *)v448;
          *((_OWORD *)v447 + 1) = v519;
        }
        *(void *)&v387[v445[6]] = *(void *)&v388[v445[6]];
        *(void *)&v387[v445[7]] = *(void *)&v388[v445[7]];
        v387[v445[8]] = v388[v445[8]];
        v387[v445[9]] = v388[v445[9]];
        uint64_t v563 = v445[10];
        v564 = &v387[v563];
        v565 = &v388[v563];
        uint64_t v566 = *(void *)&v388[v563 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        a1 = v783;
        if (v566)
        {
          *(void *)v564 = *(void *)v565;
          *((void *)v564 + 1) = v566;
          uint64_t v567 = *((void *)v565 + 2);
          uint64_t v568 = *((void *)v565 + 3);
          *((void *)v564 + 2) = v567;
          *((void *)v564 + 3) = v568;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v569 = *((_OWORD *)v565 + 1);
          *(_OWORD *)v564 = *(_OWORD *)v565;
          *((_OWORD *)v564 + 1) = v569;
        }
        uint64_t v570 = v445[11];
        v571 = &v387[v570];
        v572 = &v388[v570];
        uint64_t v573 = *((void *)v572 + 1);
        *(void *)v571 = *(void *)v572;
        *((void *)v571 + 1) = v573;
        uint64_t v574 = v445[12];
        v575 = *(void **)&v388[v574];
        *(void *)&v387[v574] = v575;
        uint64_t v576 = v445[13];
        v577 = &v387[v576];
        v578 = &v388[v576];
        uint64_t v579 = *(void *)v578;
        uint64_t v580 = *((void *)v578 + 1);
        char v581 = v578[16];
        swift_bridgeObjectRetain();
        id v582 = v575;
        sub_247FE42A8(v579, v580, v581);
        *(void *)v577 = v579;
        *((void *)v577 + 1) = v580;
        v577[16] = v581;
        uint64_t v583 = v445[14];
        v584 = &v387[v583];
        v585 = &v388[v583];
        uint64_t v586 = *((void *)v585 + 1);
        *(void *)v584 = *(void *)v585;
        *((void *)v584 + 1) = v586;
        v387[v445[15]] = v388[v445[15]];
        uint64_t v587 = v445[16];
        v588 = &v387[v587];
        v589 = &v388[v587];
        unint64_t v590 = *(void *)&v388[v587 + 8];
        swift_bridgeObjectRetain();
        if (v590 >= 3)
        {
          *(void *)v588 = *(void *)v589;
          *((void *)v588 + 1) = v590;
          uint64_t v592 = *((void *)v589 + 3);
          *((void *)v588 + 2) = *((void *)v589 + 2);
          *((void *)v588 + 3) = v592;
          v588[32] = v589[32];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v591 = *((_OWORD *)v589 + 1);
          *(_OWORD *)v588 = *(_OWORD *)v589;
          *((_OWORD *)v588 + 1) = v591;
          v588[32] = v589[32];
        }
        uint64_t v593 = *(int *)(v683 + 24);
        v558 = (char *)v783 + v593;
        v559 = (char *)v776 + v593;
        unsigned int v560 = v559[40];
        if (v560 <= 0xFA) {
          goto LABEL_139;
        }
        long long v594 = *((_OWORD *)v559 + 1);
        *(_OWORD *)v558 = *(_OWORD *)v559;
        *((_OWORD *)v558 + 1) = v594;
        *(_OWORD *)(v558 + 25) = *(_OWORD *)(v559 + 25);
        goto LABEL_140;
      case 3u:
        uint64_t v48 = a2[1];
        *a1 = *a2;
        a1[1] = v48;
        uint64_t v49 = a2[3];
        a1[2] = a2[2];
        a1[3] = v49;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v684 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
        uint64_t v50 = *(int *)(v684 + 32);
        v784 = a1;
        uint64_t v51 = (uint64_t *)((char *)a1 + v50);
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = *(uint64_t *)((char *)a2 + v50 + 8);
        v777 = a2;
        *uint64_t v51 = *(uint64_t *)((char *)a2 + v50);
        v51[1] = v53;
        uint64_t v54 = *(uint64_t *)((char *)a2 + v50 + 24);
        v51[2] = *(uint64_t *)((char *)a2 + v50 + 16);
        v51[3] = v54;
        uint64_t v55 = *(uint64_t *)((char *)a2 + v50 + 40);
        v51[4] = *(uint64_t *)((char *)a2 + v50 + 32);
        v51[5] = v55;
        uint64_t v56 = *(uint64_t *)((char *)a2 + v50 + 56);
        v51[6] = *(uint64_t *)((char *)a2 + v50 + 48);
        v51[7] = v56;
        uint64_t v57 = *(uint64_t *)((char *)a2 + v50 + 72);
        v51[8] = *(uint64_t *)((char *)a2 + v50 + 64);
        v51[9] = v57;
        uint64_t v675 = type metadata accessor for RepairModel();
        v676 = v51;
        uint64_t v58 = *(int *)(v675 + 20);
        char v59 = (char *)v51 + v58;
        v678 = v52;
        long long v60 = &v52[v58];
        *((unsigned char *)v51 + v58) = v52[v58];
        uint64_t v61 = *(void **)&v52[v58 + 8];
        uint64_t v62 = *(void **)&v52[v58 + 16];
        uint64_t v63 = *(void *)&v52[v58 + 24];
        uint64_t v64 = *(unsigned __int16 *)&v52[v58 + 36];
        uint64_t v65 = *((unsigned int *)v60 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE4184(v61, v62, v63, v65 | (v64 << 32));
        *((void *)v59 + 1) = v61;
        *((void *)v59 + 2) = v62;
        *((void *)v59 + 3) = v63;
        *((_WORD *)v59 + 18) = v64;
        *((_DWORD *)v59 + 8) = v65;
        unsigned int v66 = v60[88];
        if (v66 <= 0xF9)
        {
          uint64_t v124 = *((void *)v60 + 5);
          uint64_t v125 = *((void *)v60 + 6);
          uint64_t v127 = *((void *)v60 + 7);
          uint64_t v126 = *((void *)v60 + 8);
          uint64_t v128 = *((void *)v60 + 9);
          uint64_t v129 = *((void *)v60 + 10);
          sub_247FA9804(v124, v125, v127, v126, v128, v129, v60[88]);
          *((void *)v59 + 5) = v124;
          *((void *)v59 + 6) = v125;
          *((void *)v59 + 7) = v127;
          *((void *)v59 + 8) = v126;
          *((void *)v59 + 9) = v128;
          *((void *)v59 + 10) = v129;
          v59[88] = v66;
        }
        else
        {
          long long v67 = *(_OWORD *)(v60 + 56);
          *(_OWORD *)(v59 + 40) = *(_OWORD *)(v60 + 40);
          *(_OWORD *)(v59 + 56) = v67;
          *(_OWORD *)(v59 + 72) = *(_OWORD *)(v60 + 72);
          v59[88] = v60[88];
        }
        v59[96] = v60[96];
        v59[97] = v60[97];
        uint64_t v130 = *((void *)v60 + 14);
        *((void *)v59 + 13) = *((void *)v60 + 13);
        *((void *)v59 + 14) = v130;
        uint64_t v131 = *((void *)v60 + 16);
        *((void *)v59 + 15) = *((void *)v60 + 15);
        *((void *)v59 + 16) = v131;
        *((void *)v59 + 17) = *((void *)v60 + 17);
        *((_WORD *)v59 + 72) = *((_WORD *)v60 + 72);
        uint64_t v132 = *((void *)v60 + 20);
        *((void *)v59 + 19) = *((void *)v60 + 19);
        *((void *)v59 + 20) = v132;
        uint64_t v133 = *((void *)v60 + 22);
        uint64_t v768 = *((void *)v60 + 21);
        uint64_t v134 = *((void *)v60 + 23);
        uint64_t v135 = *((void *)v60 + 24);
        uint64_t v136 = *((void *)v60 + 25);
        uint64_t v137 = *((void *)v60 + 26);
        unsigned int v138 = v60[216];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE41AC(v768, v133, v134, v135, v136, v137, v138);
        *((void *)v59 + 21) = v768;
        *((void *)v59 + 22) = v133;
        *((void *)v59 + 23) = v134;
        *((void *)v59 + 24) = v135;
        *((void *)v59 + 25) = v136;
        *((void *)v59 + 26) = v137;
        v59[216] = v138;
        uint64_t v139 = *((void *)v60 + 29);
        if (v139)
        {
          *((void *)v59 + 28) = *((void *)v60 + 28);
          *((void *)v59 + 29) = v139;
          uint64_t v140 = *((void *)v60 + 31);
          *((void *)v59 + 30) = *((void *)v60 + 30);
          *((void *)v59 + 31) = v140;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v177 = *((_OWORD *)v60 + 15);
          *((_OWORD *)v59 + 14) = *((_OWORD *)v60 + 14);
          *((_OWORD *)v59 + 15) = v177;
        }
        uint64_t v178 = *((void *)v60 + 33);
        *((void *)v59 + 32) = *((void *)v60 + 32);
        *((void *)v59 + 33) = v178;
        uint64_t v179 = *((void *)v60 + 35);
        *((void *)v59 + 34) = *((void *)v60 + 34);
        *((void *)v59 + 35) = v179;
        uint64_t v759 = type metadata accessor for SetupModel();
        uint64_t v180 = *(int *)(v759 + 32);
        v181 = &v59[v180];
        uint64_t v182 = &v60[v180];
        uint64_t v183 = type metadata accessor for IdMSAccount();
        uint64_t v674 = *(void *)(v183 - 8);
        v184 = *(unsigned int (**)(char *, uint64_t, int *))(v674 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v731 = v184;
        v771 = (int *)v183;
        if (v184(v182, 1, (int *)v183))
        {
          uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v181, v182, *(void *)(*(void *)(v185 - 8) + 64));
        }
        else
        {
          uint64_t v253 = *((void *)v182 + 1);
          *(void *)v181 = *(void *)v182;
          *((void *)v181 + 1) = v253;
          uint64_t v254 = *((void *)v182 + 3);
          *((void *)v181 + 2) = *((void *)v182 + 2);
          *((void *)v181 + 3) = v254;
          uint64_t v255 = *((void *)v182 + 5);
          *((void *)v181 + 4) = *((void *)v182 + 4);
          *((void *)v181 + 5) = v255;
          uint64_t v256 = *((void *)v182 + 7);
          *((void *)v181 + 6) = *((void *)v182 + 6);
          *((void *)v181 + 7) = v256;
          uint64_t v257 = *((void *)v182 + 9);
          *((void *)v181 + 8) = *((void *)v182 + 8);
          *((void *)v181 + 9) = v257;
          uint64_t v258 = *(int *)(v183 + 20);
          v719 = &v182[v258];
          v726 = &v181[v258];
          uint64_t v259 = sub_248174700();
          v715 = *(void (**)(char *, char *, uint64_t))(*(void *)(v259 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v715(v726, v719, v259);
          uint64_t v260 = v771[6];
          v261 = &v181[v260];
          v262 = &v182[v260];
          uint64_t v263 = *((void *)v262 + 1);
          uint64_t v264 = *((void *)v262 + 3);
          uint64_t v265 = *((void *)v262 + 5);
          uint64_t v696 = *((void *)v262 + 4);
          uint64_t v702 = *((void *)v262 + 2);
          uint64_t v267 = *((void *)v262 + 6);
          uint64_t v266 = *((void *)v262 + 7);
          uint64_t v716 = *(void *)v262;
          uint64_t v720 = *((void *)v262 + 8);
          LOBYTE(v726) = v262[72];
          sub_247FABF8C(*(void *)v262, v263, v702, v264, v696, v265, v267, v266, v720, (char)v726);
          *(void *)v261 = v716;
          *((void *)v261 + 1) = v263;
          *((void *)v261 + 2) = v702;
          *((void *)v261 + 3) = v264;
          *((void *)v261 + 4) = v696;
          *((void *)v261 + 5) = v265;
          *((void *)v261 + 6) = v267;
          *((void *)v261 + 7) = v266;
          *((void *)v261 + 8) = v720;
          v261[72] = (char)v726;
          *(void *)&v181[v771[7]] = *(void *)&v182[v771[7]];
          v268 = *(void (**)(char *, void, uint64_t, int *))(v674 + 56);
          swift_bridgeObjectRetain();
          v268(v181, 0, 1, v771);
        }
        v269 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v270 = v269[5];
        v271 = &v181[v270];
        v272 = &v182[v270];
        uint64_t v273 = *((void *)v272 + 1);
        v710 = v59;
        if (v273)
        {
          *(void *)v271 = *(void *)v272;
          *((void *)v271 + 1) = v273;
          uint64_t v274 = *((void *)v272 + 3);
          *((void *)v271 + 2) = *((void *)v272 + 2);
          *((void *)v271 + 3) = v274;
          uint64_t v275 = *((void *)v272 + 5);
          *((void *)v271 + 4) = *((void *)v272 + 4);
          *((void *)v271 + 5) = v275;
          uint64_t v276 = *((void *)v272 + 7);
          *((void *)v271 + 6) = *((void *)v272 + 6);
          *((void *)v271 + 7) = v276;
          uint64_t v277 = *((void *)v272 + 9);
          *((void *)v271 + 8) = *((void *)v272 + 8);
          *((void *)v271 + 9) = v277;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v342 = *((_OWORD *)v272 + 3);
          *((_OWORD *)v271 + 2) = *((_OWORD *)v272 + 2);
          *((_OWORD *)v271 + 3) = v342;
          *((_OWORD *)v271 + 4) = *((_OWORD *)v272 + 4);
          long long v343 = *((_OWORD *)v272 + 1);
          *(_OWORD *)v271 = *(_OWORD *)v272;
          *((_OWORD *)v271 + 1) = v343;
        }
        v181[v269[6]] = v182[v269[6]];
        uint64_t v344 = v269[7];
        v345 = &v181[v344];
        v346 = &v182[v344];
        uint64_t v347 = *((void *)v346 + 1);
        *(void *)v345 = *(void *)v346;
        *((void *)v345 + 1) = v347;
        *(void *)&v181[v269[8]] = *(void *)&v182[v269[8]];
        v181[v269[9]] = v182[v269[9]];
        uint64_t v348 = v269[10];
        v349 = &v181[v348];
        v350 = &v182[v348];
        v351 = (void *)*((void *)v350 + 2);
        v699 = (void *)*((void *)v350 + 1);
        v705 = *(void **)v350;
        v717 = v269;
        v722 = v181;
        v352 = (void *)*((void *)v350 + 3);
        uint64_t v353 = *((void *)v350 + 6);
        v691 = (void *)*((void *)v350 + 5);
        v695 = (void *)*((void *)v350 + 4);
        v728 = v182;
        v354 = (void *)*((void *)v350 + 7);
        v355 = (void *)*((void *)v350 + 8);
        v356 = (void *)*((void *)v350 + 9);
        char v357 = v350[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247F986A0(v705, v699, v351, v352, v695, v691, v353, v354, v355, v356, v357);
        *(void *)v349 = v705;
        *((void *)v349 + 1) = v699;
        *((void *)v349 + 2) = v351;
        *((void *)v349 + 3) = v352;
        *((void *)v349 + 4) = v695;
        *((void *)v349 + 5) = v691;
        *((void *)v349 + 6) = v353;
        *((void *)v349 + 7) = v354;
        *((void *)v349 + 8) = v355;
        *((void *)v349 + 9) = v356;
        v349[80] = v357;
        uint64_t v358 = v717[11];
        v359 = (void *)((char *)v722 + v358);
        v360 = (void *)((char *)v728 + v358);
        if (*v360)
        {
          uint64_t v361 = v360[1];
          void *v359 = *v360;
          v359[1] = v361;
          swift_retain();
        }
        else
        {
          *(_OWORD *)v359 = *(_OWORD *)v360;
        }
        uint64_t v390 = *(int *)(v759 + 36);
        v391 = &v710[v390];
        v392 = &v60[v390];
        if (v731(&v60[v390], 1, v771))
        {
          uint64_t v393 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v391, v392, *(void *)(*(void *)(v393 - 8) + 64));
        }
        else
        {
          uint64_t v456 = *((void *)v392 + 1);
          *(void *)v391 = *(void *)v392;
          *((void *)v391 + 1) = v456;
          uint64_t v457 = *((void *)v392 + 3);
          *((void *)v391 + 2) = *((void *)v392 + 2);
          *((void *)v391 + 3) = v457;
          uint64_t v458 = *((void *)v392 + 5);
          *((void *)v391 + 4) = *((void *)v392 + 4);
          *((void *)v391 + 5) = v458;
          uint64_t v459 = *((void *)v392 + 7);
          *((void *)v391 + 6) = *((void *)v392 + 6);
          *((void *)v391 + 7) = v459;
          uint64_t v460 = *((void *)v392 + 9);
          *((void *)v391 + 8) = *((void *)v392 + 8);
          *((void *)v391 + 9) = v460;
          uint64_t v461 = v771[5];
          v753 = &v392[v461];
          v762 = &v391[v461];
          uint64_t v462 = sub_248174700();
          v741 = *(void (**)(char *, char *, uint64_t))(*(void *)(v462 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v741(v762, v753, v462);
          uint64_t v463 = v771[6];
          v464 = &v391[v463];
          v465 = &v392[v463];
          uint64_t v466 = *((void *)v465 + 1);
          uint64_t v467 = *((void *)v465 + 2);
          uint64_t v468 = *((void *)v465 + 3);
          uint64_t v469 = *((void *)v465 + 4);
          uint64_t v470 = *((void *)v465 + 5);
          uint64_t v471 = *((void *)v465 + 6);
          uint64_t v472 = *((void *)v465 + 7);
          uint64_t v742 = *(void *)v465;
          uint64_t v754 = *((void *)v465 + 8);
          LOBYTE(v762) = v465[72];
          sub_247FABF8C(*(void *)v465, v466, v467, v468, v469, v470, v471, v472, v754, (char)v762);
          *(void *)v464 = v742;
          *((void *)v464 + 1) = v466;
          *((void *)v464 + 2) = v467;
          *((void *)v464 + 3) = v468;
          *((void *)v464 + 4) = v469;
          *((void *)v464 + 5) = v470;
          *((void *)v464 + 6) = v471;
          *((void *)v464 + 7) = v472;
          *((void *)v464 + 8) = v754;
          v464[72] = (char)v762;
          *(void *)&v391[v771[7]] = *(void *)&v392[v771[7]];
          v473 = *(void (**)(char *, void, uint64_t, int *))(v674 + 56);
          swift_bridgeObjectRetain();
          v473(v391, 0, 1, v771);
        }
        v474 = (int *)type metadata accessor for SignInModel();
        uint64_t v475 = v474[5];
        v476 = &v391[v475];
        v477 = &v392[v475];
        uint64_t v478 = *((void *)v477 + 1);
        if (v478)
        {
          *(void *)v476 = *(void *)v477;
          *((void *)v476 + 1) = v478;
          uint64_t v479 = *((void *)v477 + 3);
          *((void *)v476 + 2) = *((void *)v477 + 2);
          *((void *)v476 + 3) = v479;
          uint64_t v480 = *((void *)v477 + 5);
          *((void *)v476 + 4) = *((void *)v477 + 4);
          *((void *)v476 + 5) = v480;
          uint64_t v481 = *((void *)v477 + 7);
          *((void *)v476 + 6) = *((void *)v477 + 6);
          *((void *)v476 + 7) = v481;
          uint64_t v482 = *((void *)v477 + 9);
          *((void *)v476 + 8) = *((void *)v477 + 8);
          *((void *)v476 + 9) = v482;
          v483 = (uint64_t *)(v477 + 80);
          unint64_t v484 = *((void *)v477 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v484 >> 60 == 15)
          {
            *((_OWORD *)v476 + 5) = *(_OWORD *)v483;
          }
          else
          {
            uint64_t v595 = *v483;
            sub_247FB6C20(*v483, v484);
            *((void *)v476 + 10) = v595;
            *((void *)v476 + 11) = v484;
          }
        }
        else
        {
          long long v520 = *((_OWORD *)v477 + 3);
          *((_OWORD *)v476 + 2) = *((_OWORD *)v477 + 2);
          *((_OWORD *)v476 + 3) = v520;
          long long v521 = *((_OWORD *)v477 + 5);
          *((_OWORD *)v476 + 4) = *((_OWORD *)v477 + 4);
          *((_OWORD *)v476 + 5) = v521;
          long long v522 = *((_OWORD *)v477 + 1);
          *(_OWORD *)v476 = *(_OWORD *)v477;
          *((_OWORD *)v476 + 1) = v522;
        }
        *(void *)&v391[v474[6]] = *(void *)&v392[v474[6]];
        *(void *)&v391[v474[7]] = *(void *)&v392[v474[7]];
        v391[v474[8]] = v392[v474[8]];
        v391[v474[9]] = v392[v474[9]];
        uint64_t v596 = v474[10];
        v597 = &v391[v596];
        v598 = &v392[v596];
        uint64_t v599 = *(void *)&v392[v596 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v599)
        {
          *(void *)v597 = *(void *)v598;
          *((void *)v597 + 1) = v599;
          uint64_t v600 = *((void *)v598 + 2);
          uint64_t v601 = *((void *)v598 + 3);
          *((void *)v597 + 2) = v600;
          *((void *)v597 + 3) = v601;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v602 = *((_OWORD *)v598 + 1);
          *(_OWORD *)v597 = *(_OWORD *)v598;
          *((_OWORD *)v597 + 1) = v602;
        }
        a1 = v784;
        uint64_t v603 = v474[11];
        v604 = &v391[v603];
        v605 = &v392[v603];
        uint64_t v606 = *((void *)v605 + 1);
        *(void *)v604 = *(void *)v605;
        *((void *)v604 + 1) = v606;
        uint64_t v607 = v474[12];
        v608 = *(void **)&v392[v607];
        *(void *)&v391[v607] = v608;
        uint64_t v609 = v474[13];
        v610 = &v391[v609];
        v611 = &v392[v609];
        uint64_t v612 = *(void *)v611;
        uint64_t v613 = *((void *)v611 + 1);
        char v614 = v611[16];
        swift_bridgeObjectRetain();
        id v615 = v608;
        sub_247FE42A8(v612, v613, v614);
        *(void *)v610 = v612;
        *((void *)v610 + 1) = v613;
        v610[16] = v614;
        uint64_t v616 = v474[14];
        v617 = &v391[v616];
        v618 = &v392[v616];
        uint64_t v619 = *((void *)v618 + 1);
        *(void *)v617 = *(void *)v618;
        *((void *)v617 + 1) = v619;
        v391[v474[15]] = v392[v474[15]];
        uint64_t v620 = v474[16];
        v621 = &v391[v620];
        v622 = &v392[v620];
        unint64_t v623 = *(void *)&v392[v620 + 8];
        swift_bridgeObjectRetain();
        if (v623 >= 3)
        {
          *(void *)v621 = *(void *)v622;
          *((void *)v621 + 1) = v623;
          uint64_t v625 = *((void *)v622 + 3);
          *((void *)v621 + 2) = *((void *)v622 + 2);
          *((void *)v621 + 3) = v625;
          v621[32] = v622[32];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v624 = *((_OWORD *)v622 + 1);
          *(_OWORD *)v621 = *(_OWORD *)v622;
          *((_OWORD *)v621 + 1) = v624;
          v621[32] = v622[32];
        }
        uint64_t v626 = *(int *)(v675 + 24);
        v627 = (char *)v676 + v626;
        v628 = &v678[v626];
        unsigned int v629 = v628[40];
        if (v629 <= 0xFA)
        {
          uint64_t v631 = *(void *)v628;
          uint64_t v632 = *((void *)v628 + 1);
          uint64_t v633 = *((void *)v628 + 2);
          uint64_t v634 = *((void *)v628 + 3);
          uint64_t v635 = *((void *)v628 + 4);
          sub_247FE42BC(*(void *)v628, v632, v633, v634, v635, v628[40]);
          *(void *)v627 = v631;
          *((void *)v627 + 1) = v632;
          *((void *)v627 + 2) = v633;
          *((void *)v627 + 3) = v634;
          *((void *)v627 + 4) = v635;
          v627[40] = v629;
        }
        else
        {
          long long v630 = *((_OWORD *)v628 + 1);
          *(_OWORD *)v627 = *(_OWORD *)v628;
          *((_OWORD *)v627 + 1) = v630;
          *(_OWORD *)(v627 + 25) = *(_OWORD *)(v628 + 25);
        }
        *(uint64_t *)((char *)v784 + *(int *)(v684 + 36)) = *(uint64_t *)((char *)v777 + *(int *)(v684 + 36));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628) + 32);
        v785 = a1;
        uint64_t v69 = (uint64_t *)((char *)a1 + v68);
        uint64_t v70 = (char *)a2 + v68;
        uint64_t v778 = *(uint64_t *)((char *)a2 + v68 + 8);
        *uint64_t v69 = *(uint64_t *)((char *)a2 + v68);
        v69[1] = v778;
        uint64_t v765 = *(uint64_t *)((char *)a2 + v68 + 24);
        v69[2] = *(uint64_t *)((char *)a2 + v68 + 16);
        v69[3] = v765;
        uint64_t v71 = *(uint64_t *)((char *)a2 + v68 + 40);
        v69[4] = *(uint64_t *)((char *)a2 + v68 + 32);
        v69[5] = v71;
        uint64_t v72 = *(uint64_t *)((char *)a2 + v68 + 56);
        v69[6] = *(uint64_t *)((char *)a2 + v68 + 48);
        v69[7] = v72;
        uint64_t v73 = *(uint64_t *)((char *)a2 + v68 + 72);
        v69[8] = *(uint64_t *)((char *)a2 + v68 + 64);
        v69[9] = v73;
        uint64_t v679 = type metadata accessor for RepairModel();
        v685 = v69;
        uint64_t v74 = *(int *)(v679 + 20);
        uint64_t v75 = (char *)v69 + v74;
        v686 = v70;
        uint64_t v76 = &v70[v74];
        *((unsigned char *)v69 + v74) = v70[v74];
        uint64_t v77 = *(void **)&v70[v74 + 8];
        uint64_t v78 = *(void **)&v70[v74 + 16];
        uint64_t v79 = *(void *)&v70[v74 + 24];
        uint64_t v80 = *(unsigned __int16 *)&v70[v74 + 36];
        uint64_t v81 = *((unsigned int *)v76 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE4184(v77, v78, v79, v81 | (v80 << 32));
        *((void *)v75 + 1) = v77;
        *((void *)v75 + 2) = v78;
        *((void *)v75 + 3) = v79;
        *((_WORD *)v75 + 18) = v80;
        *((_DWORD *)v75 + 8) = v81;
        unsigned int v82 = v76[88];
        if (v82 <= 0xF9)
        {
          uint64_t v141 = *((void *)v76 + 5);
          uint64_t v142 = *((void *)v76 + 6);
          uint64_t v144 = *((void *)v76 + 7);
          uint64_t v143 = *((void *)v76 + 8);
          uint64_t v145 = *((void *)v76 + 9);
          uint64_t v146 = *((void *)v76 + 10);
          sub_247FA9804(v141, v142, v144, v143, v145, v146, v76[88]);
          *((void *)v75 + 5) = v141;
          *((void *)v75 + 6) = v142;
          *((void *)v75 + 7) = v144;
          *((void *)v75 + 8) = v143;
          *((void *)v75 + 9) = v145;
          *((void *)v75 + 10) = v146;
          v75[88] = v82;
        }
        else
        {
          long long v83 = *(_OWORD *)(v76 + 56);
          *(_OWORD *)(v75 + 40) = *(_OWORD *)(v76 + 40);
          *(_OWORD *)(v75 + 56) = v83;
          *(_OWORD *)(v75 + 72) = *(_OWORD *)(v76 + 72);
          v75[88] = v76[88];
        }
        v75[96] = v76[96];
        v75[97] = v76[97];
        uint64_t v147 = *((void *)v76 + 14);
        *((void *)v75 + 13) = *((void *)v76 + 13);
        *((void *)v75 + 14) = v147;
        uint64_t v148 = *((void *)v76 + 16);
        *((void *)v75 + 15) = *((void *)v76 + 15);
        *((void *)v75 + 16) = v148;
        *((void *)v75 + 17) = *((void *)v76 + 17);
        *((_WORD *)v75 + 72) = *((_WORD *)v76 + 72);
        uint64_t v149 = *((void *)v76 + 20);
        *((void *)v75 + 19) = *((void *)v76 + 19);
        *((void *)v75 + 20) = v149;
        uint64_t v150 = *((void *)v76 + 21);
        uint64_t v779 = *((void *)v76 + 22);
        uint64_t v151 = *((void *)v76 + 23);
        uint64_t v152 = *((void *)v76 + 24);
        uint64_t v153 = *((void *)v76 + 25);
        uint64_t v154 = *((void *)v76 + 26);
        unsigned int v155 = v76[216];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE41AC(v150, v779, v151, v152, v153, v154, v155);
        *((void *)v75 + 21) = v150;
        *((void *)v75 + 22) = v779;
        *((void *)v75 + 23) = v151;
        *((void *)v75 + 24) = v152;
        *((void *)v75 + 25) = v153;
        *((void *)v75 + 26) = v154;
        v75[216] = v155;
        uint64_t v156 = *((void *)v76 + 29);
        if (v156)
        {
          *((void *)v75 + 28) = *((void *)v76 + 28);
          *((void *)v75 + 29) = v156;
          uint64_t v157 = *((void *)v76 + 31);
          *((void *)v75 + 30) = *((void *)v76 + 30);
          *((void *)v75 + 31) = v157;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v186 = *((_OWORD *)v76 + 15);
          *((_OWORD *)v75 + 14) = *((_OWORD *)v76 + 14);
          *((_OWORD *)v75 + 15) = v186;
        }
        uint64_t v187 = *((void *)v76 + 33);
        *((void *)v75 + 32) = *((void *)v76 + 32);
        *((void *)v75 + 33) = v187;
        uint64_t v188 = *((void *)v76 + 35);
        *((void *)v75 + 34) = *((void *)v76 + 34);
        *((void *)v75 + 35) = v188;
        uint64_t v189 = type metadata accessor for SetupModel();
        uint64_t v190 = *(int *)(v189 + 32);
        uint64_t v191 = &v75[v190];
        uint64_t v192 = &v76[v190];
        v193 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v677 = *((void *)v193 - 1);
        uint64_t v194 = *(unsigned int (**)(char *, uint64_t, int *))(v677 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v688 = v194;
        v772 = v193;
        uint64_t v692 = v189;
        v780 = v191;
        if (v194(v192, 1, v193))
        {
          uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v191, v192, *(void *)(*(void *)(v195 - 8) + 64));
        }
        else
        {
          uint64_t v278 = *((void *)v192 + 1);
          *(void *)uint64_t v191 = *(void *)v192;
          *((void *)v191 + 1) = v278;
          uint64_t v279 = *((void *)v192 + 3);
          *((void *)v191 + 2) = *((void *)v192 + 2);
          *((void *)v191 + 3) = v279;
          uint64_t v280 = *((void *)v192 + 5);
          *((void *)v191 + 4) = *((void *)v192 + 4);
          *((void *)v191 + 5) = v280;
          uint64_t v281 = *((void *)v192 + 7);
          *((void *)v191 + 6) = *((void *)v192 + 6);
          *((void *)v191 + 7) = v281;
          uint64_t v282 = *((void *)v192 + 9);
          *((void *)v780 + 8) = *((void *)v192 + 8);
          *((void *)v780 + 9) = v282;
          uint64_t v283 = v193[5];
          v745 = &v192[v283];
          v760 = &v780[v283];
          uint64_t v284 = sub_248174700();
          v733 = *(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v733(v760, v745, v284);
          uint64_t v285 = v193[6];
          v286 = &v780[v285];
          v287 = &v192[v285];
          uint64_t v288 = *((void *)v287 + 1);
          uint64_t v734 = *(void *)v287;
          uint64_t v289 = *((void *)v287 + 3);
          uint64_t v290 = *((void *)v287 + 4);
          uint64_t v291 = *((void *)v287 + 5);
          uint64_t v292 = *((void *)v287 + 6);
          uint64_t v721 = *((void *)v287 + 7);
          uint64_t v727 = *((void *)v287 + 2);
          uint64_t v746 = *((void *)v287 + 8);
          LOBYTE(v760) = v287[72];
          sub_247FABF8C(*(void *)v287, v288, v727, v289, v290, v291, v292, v721, v746, (char)v760);
          *(void *)v286 = v734;
          *((void *)v286 + 1) = v288;
          *((void *)v286 + 2) = v727;
          *((void *)v286 + 3) = v289;
          *((void *)v286 + 4) = v290;
          *((void *)v286 + 5) = v291;
          *((void *)v286 + 6) = v292;
          uint64_t v191 = v780;
          *((void *)v286 + 7) = v721;
          *((void *)v286 + 8) = v746;
          v286[72] = (char)v760;
          *(void *)&v780[v193[7]] = *(void *)&v192[v193[7]];
          v293 = *(void (**)(char *, void, uint64_t, int *))(v677 + 56);
          swift_bridgeObjectRetain();
          v293(v780, 0, 1, v193);
        }
        v294 = v192;
        v295 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v296 = v295[5];
        v297 = &v191[v296];
        v298 = &v192[v296];
        uint64_t v299 = *((void *)v298 + 1);
        v687 = v75;
        if (v299)
        {
          *(void *)v297 = *(void *)v298;
          *((void *)v297 + 1) = v299;
          uint64_t v300 = *((void *)v298 + 3);
          *((void *)v297 + 2) = *((void *)v298 + 2);
          *((void *)v297 + 3) = v300;
          uint64_t v301 = *((void *)v298 + 5);
          *((void *)v297 + 4) = *((void *)v298 + 4);
          *((void *)v297 + 5) = v301;
          uint64_t v302 = *((void *)v298 + 7);
          *((void *)v297 + 6) = *((void *)v298 + 6);
          *((void *)v297 + 7) = v302;
          uint64_t v303 = *((void *)v298 + 9);
          *((void *)v297 + 8) = *((void *)v298 + 8);
          *((void *)v297 + 9) = v303;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v362 = *((_OWORD *)v298 + 3);
          *((_OWORD *)v297 + 2) = *((_OWORD *)v298 + 2);
          *((_OWORD *)v297 + 3) = v362;
          *((_OWORD *)v297 + 4) = *((_OWORD *)v298 + 4);
          long long v363 = *((_OWORD *)v298 + 1);
          *(_OWORD *)v297 = *(_OWORD *)v298;
          *((_OWORD *)v297 + 1) = v363;
        }
        v191[v295[6]] = *((unsigned char *)v294 + v295[6]);
        uint64_t v364 = v295[7];
        v365 = &v191[v364];
        v366 = (void *)((char *)v294 + v364);
        uint64_t v367 = v366[1];
        *(void *)v365 = *v366;
        *((void *)v365 + 1) = v367;
        *(void *)&v191[v295[8]] = *(void *)((char *)v294 + v295[8]);
        v191[v295[9]] = *((unsigned char *)v294 + v295[9]);
        uint64_t v368 = v295[10];
        v369 = &v191[v368];
        v370 = (char *)v294 + v368;
        v371 = (void *)*((void *)v370 + 1);
        v736 = *(void **)v370;
        v372 = (void *)*((void *)v370 + 2);
        v373 = (void *)*((void *)v370 + 5);
        v723 = (void *)*((void *)v370 + 4);
        v729 = (void *)*((void *)v370 + 3);
        v748 = v295;
        v761 = v294;
        uint64_t v374 = *((void *)v370 + 6);
        v718 = (void *)*((void *)v370 + 7);
        v375 = (void *)*((void *)v370 + 8);
        v376 = (void *)*((void *)v370 + 9);
        char v377 = v370[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247F986A0(v736, v371, v372, v729, v723, v373, v374, v718, v375, v376, v377);
        *(void *)v369 = v736;
        *((void *)v369 + 1) = v371;
        *((void *)v369 + 2) = v372;
        *((void *)v369 + 3) = v729;
        *((void *)v369 + 4) = v723;
        *((void *)v369 + 5) = v373;
        *((void *)v369 + 6) = v374;
        *((void *)v369 + 7) = v718;
        *((void *)v369 + 8) = v375;
        *((void *)v369 + 9) = v376;
        v369[80] = v377;
        uint64_t v378 = v748[11];
        v379 = &v780[v378];
        v380 = (void *)((char *)v761 + v378);
        if (*v380)
        {
          uint64_t v381 = v380[1];
          *(void *)v379 = *v380;
          *((void *)v379 + 1) = v381;
          swift_retain();
        }
        else
        {
          *(_OWORD *)v379 = *(_OWORD *)v380;
        }
        uint64_t v394 = *(int *)(v692 + 36);
        v395 = &v687[v394];
        v396 = &v76[v394];
        if (v688(&v76[v394], 1, v772))
        {
          uint64_t v397 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v395, v396, *(void *)(*(void *)(v397 - 8) + 64));
        }
        else
        {
          uint64_t v485 = *((void *)v396 + 1);
          *(void *)v395 = *(void *)v396;
          *((void *)v395 + 1) = v485;
          uint64_t v486 = *((void *)v396 + 3);
          *((void *)v395 + 2) = *((void *)v396 + 2);
          *((void *)v395 + 3) = v486;
          uint64_t v487 = *((void *)v396 + 5);
          *((void *)v395 + 4) = *((void *)v396 + 4);
          *((void *)v395 + 5) = v487;
          uint64_t v488 = *((void *)v396 + 7);
          *((void *)v395 + 6) = *((void *)v396 + 6);
          *((void *)v395 + 7) = v488;
          uint64_t v489 = *((void *)v396 + 9);
          *((void *)v395 + 8) = *((void *)v396 + 8);
          *((void *)v395 + 9) = v489;
          uint64_t v490 = v772[5];
          v781 = &v395[v490];
          v763 = &v396[v490];
          uint64_t v491 = sub_248174700();
          v755 = *(void (**)(char *, char *, uint64_t))(*(void *)(v491 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v755(v781, v763, v491);
          uint64_t v492 = v772[6];
          v493 = &v395[v492];
          v494 = &v396[v492];
          uint64_t v495 = *((void *)v494 + 1);
          uint64_t v496 = *((void *)v494 + 2);
          uint64_t v497 = *((void *)v494 + 3);
          uint64_t v498 = *((void *)v494 + 4);
          uint64_t v499 = *((void *)v494 + 5);
          uint64_t v500 = *((void *)v494 + 6);
          uint64_t v501 = *((void *)v494 + 7);
          uint64_t v756 = *(void *)v494;
          uint64_t v764 = *((void *)v494 + 8);
          LOBYTE(v781) = v494[72];
          sub_247FABF8C(*(void *)v494, v495, v496, v497, v498, v499, v500, v501, v764, (char)v781);
          *(void *)v493 = v756;
          *((void *)v493 + 1) = v495;
          *((void *)v493 + 2) = v496;
          *((void *)v493 + 3) = v497;
          *((void *)v493 + 4) = v498;
          *((void *)v493 + 5) = v499;
          *((void *)v493 + 6) = v500;
          *((void *)v493 + 7) = v501;
          *((void *)v493 + 8) = v764;
          v493[72] = (char)v781;
          *(void *)&v395[v772[7]] = *(void *)&v396[v772[7]];
          v502 = *(void (**)(char *, void, uint64_t, int *))(v677 + 56);
          swift_bridgeObjectRetain();
          v502(v395, 0, 1, v772);
        }
        v503 = (int *)type metadata accessor for SignInModel();
        uint64_t v504 = v503[5];
        v505 = &v395[v504];
        v506 = &v396[v504];
        uint64_t v507 = *((void *)v506 + 1);
        if (v507)
        {
          *(void *)v505 = *(void *)v506;
          *((void *)v505 + 1) = v507;
          uint64_t v508 = *((void *)v506 + 3);
          *((void *)v505 + 2) = *((void *)v506 + 2);
          *((void *)v505 + 3) = v508;
          uint64_t v509 = *((void *)v506 + 5);
          *((void *)v505 + 4) = *((void *)v506 + 4);
          *((void *)v505 + 5) = v509;
          uint64_t v510 = *((void *)v506 + 7);
          *((void *)v505 + 6) = *((void *)v506 + 6);
          *((void *)v505 + 7) = v510;
          uint64_t v511 = *((void *)v506 + 9);
          *((void *)v505 + 8) = *((void *)v506 + 8);
          *((void *)v505 + 9) = v511;
          v512 = (uint64_t *)(v506 + 80);
          unint64_t v513 = *((void *)v506 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v513 >> 60 == 15)
          {
            *((_OWORD *)v505 + 5) = *(_OWORD *)v512;
          }
          else
          {
            uint64_t v636 = *v512;
            sub_247FB6C20(*v512, v513);
            *((void *)v505 + 10) = v636;
            *((void *)v505 + 11) = v513;
          }
        }
        else
        {
          long long v523 = *((_OWORD *)v506 + 3);
          *((_OWORD *)v505 + 2) = *((_OWORD *)v506 + 2);
          *((_OWORD *)v505 + 3) = v523;
          long long v524 = *((_OWORD *)v506 + 5);
          *((_OWORD *)v505 + 4) = *((_OWORD *)v506 + 4);
          *((_OWORD *)v505 + 5) = v524;
          long long v525 = *((_OWORD *)v506 + 1);
          *(_OWORD *)v505 = *(_OWORD *)v506;
          *((_OWORD *)v505 + 1) = v525;
        }
        *(void *)&v395[v503[6]] = *(void *)&v396[v503[6]];
        *(void *)&v395[v503[7]] = *(void *)&v396[v503[7]];
        v395[v503[8]] = v396[v503[8]];
        v395[v503[9]] = v396[v503[9]];
        uint64_t v637 = v503[10];
        v638 = &v395[v637];
        v639 = &v396[v637];
        uint64_t v640 = *(void *)&v396[v637 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v640)
        {
          *(void *)v638 = *(void *)v639;
          *((void *)v638 + 1) = v640;
          uint64_t v641 = *((void *)v639 + 2);
          uint64_t v642 = *((void *)v639 + 3);
          *((void *)v638 + 2) = v641;
          *((void *)v638 + 3) = v642;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v643 = *((_OWORD *)v639 + 1);
          *(_OWORD *)v638 = *(_OWORD *)v639;
          *((_OWORD *)v638 + 1) = v643;
        }
        uint64_t v644 = v503[11];
        v645 = &v395[v644];
        v646 = &v396[v644];
        uint64_t v647 = *((void *)v646 + 1);
        *(void *)v645 = *(void *)v646;
        *((void *)v645 + 1) = v647;
        uint64_t v648 = v503[12];
        v649 = *(void **)&v396[v648];
        *(void *)&v395[v648] = v649;
        uint64_t v650 = v503[13];
        v651 = &v395[v650];
        v652 = &v396[v650];
        uint64_t v653 = *(void *)v652;
        uint64_t v654 = *((void *)v652 + 1);
        char v655 = v652[16];
        swift_bridgeObjectRetain();
        id v656 = v649;
        sub_247FE42A8(v653, v654, v655);
        *(void *)v651 = v653;
        *((void *)v651 + 1) = v654;
        v651[16] = v655;
        uint64_t v657 = v503[14];
        v658 = &v395[v657];
        v659 = &v396[v657];
        uint64_t v660 = *((void *)v659 + 1);
        *(void *)v658 = *(void *)v659;
        *((void *)v658 + 1) = v660;
        v395[v503[15]] = v396[v503[15]];
        uint64_t v661 = v503[16];
        v662 = &v395[v661];
        v663 = &v396[v661];
        unint64_t v664 = *(void *)&v396[v661 + 8];
        swift_bridgeObjectRetain();
        if (v664 >= 3)
        {
          *(void *)v662 = *(void *)v663;
          *((void *)v662 + 1) = v664;
          uint64_t v666 = *((void *)v663 + 3);
          *((void *)v662 + 2) = *((void *)v663 + 2);
          *((void *)v662 + 3) = v666;
          v662[32] = v663[32];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v665 = *((_OWORD *)v663 + 1);
          *(_OWORD *)v662 = *(_OWORD *)v663;
          *((_OWORD *)v662 + 1) = v665;
          v662[32] = v663[32];
        }
        a1 = v785;
        uint64_t v667 = *(int *)(v679 + 24);
        v558 = (char *)v685 + v667;
        v559 = &v686[v667];
        unsigned int v560 = v559[40];
        if (v560 <= 0xFA)
        {
LABEL_139:
          uint64_t v669 = *(void *)v559;
          uint64_t v670 = *((void *)v559 + 1);
          uint64_t v671 = *((void *)v559 + 2);
          uint64_t v672 = *((void *)v559 + 3);
          uint64_t v673 = *((void *)v559 + 4);
          sub_247FE42BC(*(void *)v559, v670, v671, v672, v673, v559[40]);
          *(void *)v558 = v669;
          *((void *)v558 + 1) = v670;
          *((void *)v558 + 2) = v671;
          *((void *)v558 + 3) = v672;
          *((void *)v558 + 4) = v673;
          v558[40] = v560;
        }
        else
        {
          long long v668 = *((_OWORD *)v559 + 1);
          *(_OWORD *)v558 = *(_OWORD *)v559;
          *((_OWORD *)v558 + 1) = v668;
          *(_OWORD *)(v558 + 25) = *(_OWORD *)(v559 + 25);
        }
LABEL_140:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v84 = *a2;
        uint64_t v85 = a2[1];
        uint64_t v86 = a2[2];
        uint64_t v87 = a2[3];
        uint64_t v88 = a2[4];
        char v89 = *((unsigned char *)a2 + 40);
        sub_247FE42BC(*a2, v85, v86, v87, v88, v89);
        *a1 = v84;
        a1[1] = v85;
        a1[2] = v86;
        a1[3] = v87;
        a1[4] = v88;
        *((unsigned char *)a1 + 40) = v89;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

id sub_247FE4184(id result, id a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = (a4 >> 38) & 3;
  if (v4 == 2 || v4 == 1) {
    return result;
  }
  if (!v4) {
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void sub_247FE41AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v9 = (a7 >> 3) & 3;
  if (v9 == 1)
  {
    unsigned __int8 v15 = a7 & 0xE7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2 = a4;
    a3 = a5;
    uint64_t v12 = a6;
    unsigned __int8 v13 = v15;
  }
  else
  {
    if (v9) {
      return;
    }
    uint64_t v12 = a4;
    unsigned __int8 v13 = a5;
  }
  sub_247FE4250(a2, a3, v12, v13);
}

uint64_t sub_247FE4250(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4 >> 5;
  if (v4 == 3) {
    return swift_retain();
  }
  if (v4 == 2 || !(a4 >> 5)) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_247FE42A8(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_247FE42BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  switch(a6)
  {
    case 0:
      goto LABEL_4;
    case 1:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 2:
LABEL_6:
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t destroy for MachRepairMessage(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for RepairModel();
      uint64_t v4 = a1 + *(int *)(v3 + 20);
      sub_247FE51A0(*(void **)(v4 + 8), *(id *)(v4 + 16), *(void *)(v4 + 24), *(unsigned int *)(v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v4 + 36) << 32));
      unsigned int v5 = *(unsigned __int8 *)(v4 + 88);
      if (v5 <= 0xF9) {
        sub_247FA98EC(*(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FE51C8(*(void *)(v4 + 168), *(void *)(v4 + 176), *(void *)(v4 + 184), *(void *)(v4 + 192), *(void *)(v4 + 200), *(void *)(v4 + 208), *(unsigned __int8 *)(v4 + 216));
      if (*(void *)(v4 + 232))
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for SetupModel();
      uint64_t v7 = v4 + *(int *)(v6 + 32);
      uint64_t v8 = type metadata accessor for IdMSAccount();
      int v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
      if (!v9(v7, 1, v8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v7 + *(int *)(v8 + 20);
        uint64_t v11 = sub_248174700();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
        uint64_t v12 = v7 + *(int *)(v8 + 24);
        sub_247FAC1EC(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
        swift_bridgeObjectRelease();
      }
      unsigned __int8 v13 = (int *)type metadata accessor for AuthenticationModel();
      if (*(void *)(v7 + v13[5] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v7 + v13[10];
      sub_247F98958(*(void **)v14, *(void **)(v14 + 8), *(void **)(v14 + 16), *(void **)(v14 + 24), *(void *)(v14 + 32), *(void **)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void **)(v14 + 64), *(void **)(v14 + 72), *(unsigned char *)(v14 + 80));
      if (*(void *)(v7 + v13[11])) {
        swift_release();
      }
      uint64_t v15 = v4 + *(int *)(v6 + 36);
      if (!v9(v15, 1, v8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v16 = v15 + *(int *)(v8 + 20);
        uint64_t v17 = sub_248174700();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
        uint64_t v18 = v15 + *(int *)(v8 + 24);
        sub_247FAC1EC(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(void *)(v18 + 64), *(unsigned char *)(v18 + 72));
        swift_bridgeObjectRelease();
      }
      uint64_t v19 = (int *)type metadata accessor for SignInModel();
      uint64_t v20 = (void *)(v15 + v19[5]);
      if (v20[1])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v21 = v20[11];
        if (v21 >> 60 != 15) {
          sub_247FB6CCC(v20[10], v21);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v15 + v19[10] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();

      sub_247FE52C4(*(void *)(v15 + v19[13]), *(void *)(v15 + v19[13] + 8), *(unsigned char *)(v15 + v19[13] + 16));
      swift_bridgeObjectRelease();
      unint64_t result = *(void *)(v15 + v19[16] + 8);
      if (result >= 3)
      {
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v22 = a1 + *(int *)(v3 + 24);
      goto LABEL_68;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = *(void *)(a1 + 96);
      if (result) {
        goto LABEL_23;
      }
      return result;
    case 3:
LABEL_23:
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_45;
    case 4:
      uint64_t v23 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630) + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = type metadata accessor for RepairModel();
      uint64_t v24 = v23 + *(int *)(v70 + 20);
      sub_247FE51A0(*(void **)(v24 + 8), *(id *)(v24 + 16), *(void *)(v24 + 24), *(unsigned int *)(v24 + 32) | ((unint64_t)*(unsigned __int16 *)(v24 + 36) << 32));
      unsigned int v25 = *(unsigned __int8 *)(v24 + 88);
      if (v25 <= 0xF9) {
        sub_247FA98EC(*(void *)(v24 + 40), *(void *)(v24 + 48), *(void *)(v24 + 56), *(void *)(v24 + 64), *(void *)(v24 + 72), *(void *)(v24 + 80), v25);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FE51C8(*(void *)(v24 + 168), *(void *)(v24 + 176), *(void *)(v24 + 184), *(void *)(v24 + 192), *(void *)(v24 + 200), *(void *)(v24 + 208), *(unsigned __int8 *)(v24 + 216));
      if (*(void *)(v24 + 232))
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = type metadata accessor for SetupModel();
      uint64_t v27 = v24 + *(int *)(v26 + 32);
      uint64_t v28 = type metadata accessor for IdMSAccount();
      uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
      if (!v29(v27, 1, v28))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v30 = v27 + *(int *)(v28 + 20);
        uint64_t v31 = sub_248174700();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
        uint64_t v32 = v27 + *(int *)(v28 + 24);
        sub_247FAC1EC(*(void *)v32, *(void *)(v32 + 8), *(void *)(v32 + 16), *(void *)(v32 + 24), *(void *)(v32 + 32), *(void *)(v32 + 40), *(void *)(v32 + 48), *(void *)(v32 + 56), *(void *)(v32 + 64), *(unsigned char *)(v32 + 72));
        swift_bridgeObjectRelease();
      }
      uint64_t v33 = (int *)type metadata accessor for AuthenticationModel();
      if (*(void *)(v27 + v33[5] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v27 + v33[10];
      sub_247F98958(*(void **)v34, *(void **)(v34 + 8), *(void **)(v34 + 16), *(void **)(v34 + 24), *(void *)(v34 + 32), *(void **)(v34 + 40), *(void *)(v34 + 48), *(void *)(v34 + 56), *(void **)(v34 + 64), *(void **)(v34 + 72), *(unsigned char *)(v34 + 80));
      if (*(void *)(v27 + v33[11])) {
        swift_release();
      }
      uint64_t v35 = v24 + *(int *)(v26 + 36);
      if (!v29(v35, 1, v28))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v36 = v35 + *(int *)(v28 + 20);
        uint64_t v37 = sub_248174700();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
        uint64_t v38 = v35 + *(int *)(v28 + 24);
        sub_247FAC1EC(*(void *)v38, *(void *)(v38 + 8), *(void *)(v38 + 16), *(void *)(v38 + 24), *(void *)(v38 + 32), *(void *)(v38 + 40), *(void *)(v38 + 48), *(void *)(v38 + 56), *(void *)(v38 + 64), *(unsigned char *)(v38 + 72));
        swift_bridgeObjectRelease();
      }
      uint64_t v39 = (int *)type metadata accessor for SignInModel();
      uint64_t v40 = (void *)(v35 + v39[5]);
      if (v40[1])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v41 = v40[11];
        if (v41 >> 60 != 15) {
          sub_247FB6CCC(v40[10], v41);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v35 + v39[10] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();

      sub_247FE52C4(*(void *)(v35 + v39[13]), *(void *)(v35 + v39[13] + 8), *(unsigned char *)(v35 + v39[13] + 16));
      swift_bridgeObjectRelease();
      if (*(void *)(v35 + v39[16] + 8) >= 3uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v42 = v23 + *(int *)(v70 + 24);
      unsigned int v43 = *(unsigned __int8 *)(v42 + 40);
      if (v43 <= 0xFA) {
        sub_247FE0600(*(void *)v42, *(void *)(v42 + 8), *(void *)(v42 + 16), *(void *)(v42 + 24), *(void *)(v42 + 32), v43);
      }
LABEL_45:
      return swift_release();
    case 5:
      uint64_t v44 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628) + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v45 = type metadata accessor for RepairModel();
      uint64_t v46 = v44 + *(int *)(v45 + 20);
      sub_247FE51A0(*(void **)(v46 + 8), *(id *)(v46 + 16), *(void *)(v46 + 24), *(unsigned int *)(v46 + 32) | ((unint64_t)*(unsigned __int16 *)(v46 + 36) << 32));
      unsigned int v47 = *(unsigned __int8 *)(v46 + 88);
      if (v47 <= 0xF9) {
        sub_247FA98EC(*(void *)(v46 + 40), *(void *)(v46 + 48), *(void *)(v46 + 56), *(void *)(v46 + 64), *(void *)(v46 + 72), *(void *)(v46 + 80), v47);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247FE51C8(*(void *)(v46 + 168), *(void *)(v46 + 176), *(void *)(v46 + 184), *(void *)(v46 + 192), *(void *)(v46 + 200), *(void *)(v46 + 208), *(unsigned __int8 *)(v46 + 216));
      if (*(void *)(v46 + 232))
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = type metadata accessor for SetupModel();
      uint64_t v49 = v46 + *(int *)(v48 + 32);
      uint64_t v50 = type metadata accessor for IdMSAccount();
      uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48);
      if (!v51(v49, 1, v50))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v52 = v49 + *(int *)(v50 + 20);
        uint64_t v53 = sub_248174700();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
        uint64_t v54 = v49 + *(int *)(v50 + 24);
        sub_247FAC1EC(*(void *)v54, *(void *)(v54 + 8), *(void *)(v54 + 16), *(void *)(v54 + 24), *(void *)(v54 + 32), *(void *)(v54 + 40), *(void *)(v54 + 48), *(void *)(v54 + 56), *(void *)(v54 + 64), *(unsigned char *)(v54 + 72));
        swift_bridgeObjectRelease();
      }
      uint64_t v55 = (int *)type metadata accessor for AuthenticationModel();
      if (*(void *)(v49 + v55[5] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = v49 + v55[10];
      sub_247F98958(*(void **)v56, *(void **)(v56 + 8), *(void **)(v56 + 16), *(void **)(v56 + 24), *(void *)(v56 + 32), *(void **)(v56 + 40), *(void *)(v56 + 48), *(void *)(v56 + 56), *(void **)(v56 + 64), *(void **)(v56 + 72), *(unsigned char *)(v56 + 80));
      if (*(void *)(v49 + v55[11])) {
        swift_release();
      }
      uint64_t v57 = v46 + *(int *)(v48 + 36);
      if (!v51(v57, 1, v50))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v58 = v57 + *(int *)(v50 + 20);
        uint64_t v59 = sub_248174700();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
        uint64_t v60 = v57 + *(int *)(v50 + 24);
        sub_247FAC1EC(*(void *)v60, *(void *)(v60 + 8), *(void *)(v60 + 16), *(void *)(v60 + 24), *(void *)(v60 + 32), *(void *)(v60 + 40), *(void *)(v60 + 48), *(void *)(v60 + 56), *(void *)(v60 + 64), *(unsigned char *)(v60 + 72));
        swift_bridgeObjectRelease();
      }
      uint64_t v61 = (int *)type metadata accessor for SignInModel();
      uint64_t v62 = (void *)(v57 + v61[5]);
      if (v62[1])
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v63 = v62[11];
        if (v63 >> 60 != 15) {
          sub_247FB6CCC(v62[10], v63);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v57 + v61[10] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();

      sub_247FE52C4(*(void *)(v57 + v61[13]), *(void *)(v57 + v61[13] + 8), *(unsigned char *)(v57 + v61[13] + 16));
      swift_bridgeObjectRelease();
      unint64_t result = *(void *)(v57 + v61[16] + 8);
      if (result >= 3)
      {
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t v22 = v44 + *(int *)(v45 + 24);
LABEL_68:
      unsigned int v64 = *(unsigned __int8 *)(v22 + 40);
      if (v64 > 0xFA) {
        return result;
      }
      uint64_t v65 = *(void *)v22;
      uint64_t v66 = *(void *)(v22 + 8);
      uint64_t v67 = *(void *)(v22 + 16);
      uint64_t v68 = *(void *)(v22 + 24);
      uint64_t v69 = *(void *)(v22 + 32);
LABEL_72:
      return sub_247FE0600(v65, v66, v67, v68, v69, v64);
    case 6:
      uint64_t v65 = *(void *)a1;
      uint64_t v66 = *(void *)(a1 + 8);
      uint64_t v67 = *(void *)(a1 + 16);
      uint64_t v68 = *(void *)(a1 + 24);
      uint64_t v69 = *(void *)(a1 + 32);
      LOBYTE(v64) = *(unsigned char *)(a1 + 40);
      goto LABEL_72;
    default:
      return result;
  }
}

void sub_247FE51A0(void *a1, id a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = (a4 >> 38) & 3;
  if (v4 == 2 || v4 == 1)
  {
  }
  else if (!v4)
  {
    swift_bridgeObjectRelease();
  }
}

void sub_247FE51C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  int v9 = (a7 >> 3) & 3;
  if (v9 == 1)
  {
    unsigned __int8 v15 = a7 & 0xE7;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = a4;
    a3 = a5;
    uint64_t v12 = a6;
    unsigned __int8 v13 = v15;
  }
  else
  {
    if (v9) {
      return;
    }
    uint64_t v12 = a4;
    unsigned __int8 v13 = a5;
  }
  sub_247FE526C(a2, a3, v12, v13);
}

uint64_t sub_247FE526C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v4 = a4 >> 5;
  if (v4 == 3) {
    return swift_release();
  }
  if (v4 == 2 || !(a4 >> 5)) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_247FE52C4(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeWithCopy for MachRepairMessage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      uint64_t v8 = a2[5];
      a1[4] = a2[4];
      a1[5] = v8;
      int v9 = a2;
      uint64_t v10 = a2[6];
      uint64_t v11 = a2[7];
      a1[6] = v10;
      a1[7] = v11;
      uint64_t v12 = v9[9];
      a1[8] = v9[8];
      a1[9] = v12;
      uint64_t v678 = type metadata accessor for RepairModel();
      uint64_t v13 = *(int *)(v678 + 20);
      uint64_t v778 = a1;
      uint64_t v14 = (char *)a1 + v13;
      v771 = v9;
      unsigned __int8 v15 = (char *)v9 + v13;
      *uint64_t v14 = *((unsigned char *)v9 + v13);
      uint64_t v17 = *(void **)((char *)v9 + v13 + 8);
      uint64_t v16 = *(void **)((char *)v9 + v13 + 16);
      uint64_t v18 = *(uint64_t *)((char *)v9 + v13 + 24);
      uint64_t v19 = *((unsigned __int16 *)v15 + 18);
      uint64_t v20 = *((unsigned int *)v15 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FE4184(v17, v16, v18, v20 | (v19 << 32));
      *((void *)v14 + 1) = v17;
      *((void *)v14 + 2) = v16;
      *((void *)v14 + 3) = v18;
      *((_WORD *)v14 + 18) = v19;
      *((_DWORD *)v14 + 8) = v20;
      unsigned int v21 = v15[88];
      if (v21 <= 0xF9)
      {
        uint64_t v87 = *((void *)v15 + 5);
        uint64_t v88 = *((void *)v15 + 6);
        uint64_t v89 = *((void *)v15 + 7);
        uint64_t v90 = *((void *)v15 + 8);
        uint64_t v91 = *((void *)v15 + 9);
        uint64_t v92 = *((void *)v15 + 10);
        sub_247FA9804(v87, v88, v89, v90, v91, v92, v15[88]);
        *((void *)v14 + 5) = v87;
        *((void *)v14 + 6) = v88;
        *((void *)v14 + 7) = v89;
        *((void *)v14 + 8) = v90;
        *((void *)v14 + 9) = v91;
        *((void *)v14 + 10) = v92;
        v14[88] = v21;
      }
      else
      {
        long long v22 = *(_OWORD *)(v15 + 56);
        *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
        *(_OWORD *)(v14 + 56) = v22;
        *(_OWORD *)(v14 + 72) = *(_OWORD *)(v15 + 72);
        v14[88] = v15[88];
      }
      v14[96] = v15[96];
      v14[97] = v15[97];
      uint64_t v93 = *((void *)v15 + 14);
      *((void *)v14 + 13) = *((void *)v15 + 13);
      *((void *)v14 + 14) = v93;
      uint64_t v94 = *((void *)v15 + 16);
      *((void *)v14 + 15) = *((void *)v15 + 15);
      *((void *)v14 + 16) = v94;
      *((void *)v14 + 17) = *((void *)v15 + 17);
      *((_WORD *)v14 + 72) = *((_WORD *)v15 + 72);
      uint64_t v95 = *((void *)v15 + 20);
      *((void *)v14 + 19) = *((void *)v15 + 19);
      *((void *)v14 + 20) = v95;
      uint64_t v96 = *((void *)v15 + 22);
      uint64_t v759 = *((void *)v15 + 21);
      uint64_t v97 = *((void *)v15 + 23);
      uint64_t v98 = *((void *)v15 + 24);
      uint64_t v100 = *((void *)v15 + 25);
      uint64_t v99 = *((void *)v15 + 26);
      unsigned int v101 = v15[216];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FE41AC(v759, v96, v97, v98, v100, v99, v101);
      *((void *)v14 + 21) = v759;
      *((void *)v14 + 22) = v96;
      *((void *)v14 + 23) = v97;
      *((void *)v14 + 24) = v98;
      *((void *)v14 + 25) = v100;
      *((void *)v14 + 26) = v99;
      v14[216] = v101;
      uint64_t v102 = *((void *)v15 + 29);
      if (v102)
      {
        *((void *)v14 + 28) = *((void *)v15 + 28);
        *((void *)v14 + 29) = v102;
        uint64_t v103 = *((void *)v15 + 31);
        *((void *)v14 + 30) = *((void *)v15 + 30);
        *((void *)v14 + 31) = v103;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
      }
      else
      {
        long long v156 = *((_OWORD *)v15 + 15);
        *((_OWORD *)v14 + 14) = *((_OWORD *)v15 + 14);
        *((_OWORD *)v14 + 15) = v156;
      }
      uint64_t v157 = *((void *)v15 + 33);
      *((void *)v14 + 32) = *((void *)v15 + 32);
      *((void *)v14 + 33) = v157;
      uint64_t v158 = *((void *)v15 + 35);
      *((void *)v14 + 34) = *((void *)v15 + 34);
      *((void *)v14 + 35) = v158;
      uint64_t v726 = type metadata accessor for SetupModel();
      uint64_t v159 = *(int *)(v726 + 32);
      uint64_t v160 = &v14[v159];
      uint64_t v161 = &v15[v159];
      uint64_t v162 = type metadata accessor for IdMSAccount();
      uint64_t v676 = *(void *)(v162 - 8);
      v163 = *(unsigned int (**)(char *, uint64_t, int *))(v676 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v712 = v163;
      v753 = (int *)v162;
      v762 = v161;
      v731 = v160;
      if (v163(v161, 1, (int *)v162))
      {
        uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v160, v161, *(void *)(*(void *)(v164 - 8) + 64));
      }
      else
      {
        uint64_t v192 = *((void *)v161 + 1);
        *(void *)uint64_t v160 = *(void *)v161;
        *((void *)v160 + 1) = v192;
        uint64_t v193 = *((void *)v161 + 3);
        *((void *)v160 + 2) = *((void *)v161 + 2);
        *((void *)v160 + 3) = v193;
        uint64_t v194 = *((void *)v161 + 5);
        *((void *)v160 + 4) = *((void *)v161 + 4);
        *((void *)v160 + 5) = v194;
        uint64_t v195 = *((void *)v161 + 7);
        *((void *)v160 + 6) = *((void *)v161 + 6);
        *((void *)v160 + 7) = v195;
        uint64_t v196 = *((void *)v161 + 8);
        uint64_t v197 = *((void *)v161 + 9);
        *((void *)v160 + 8) = v196;
        *((void *)v160 + 9) = v197;
        uint64_t v198 = *(int *)(v162 + 20);
        v743 = &v160[v198];
        uint64_t v702 = &v762[v198];
        uint64_t v199 = sub_248174700();
        uint64_t v200 = *(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v200(v743, v702, v199);
        uint64_t v201 = v753[6];
        uint64_t v202 = &v160[v201];
        uint64_t v203 = &v762[v201];
        uint64_t v204 = *(void *)v203;
        uint64_t v205 = *((void *)v203 + 1);
        uint64_t v207 = *((void *)v203 + 2);
        uint64_t v206 = *((void *)v203 + 3);
        uint64_t v208 = *((void *)v203 + 4);
        uint64_t v209 = *((void *)v203 + 5);
        uint64_t v210 = *((void *)v203 + 6);
        uint64_t v694 = *((void *)v203 + 7);
        uint64_t v703 = *((void *)v203 + 8);
        LOBYTE(v743) = v203[72];
        sub_247FABF8C(*(void *)v203, v205, v207, v206, v208, v209, v210, v694, v703, (char)v743);
        *(void *)uint64_t v202 = v204;
        *((void *)v202 + 1) = v205;
        *((void *)v202 + 2) = v207;
        *((void *)v202 + 3) = v206;
        *((void *)v202 + 4) = v208;
        *((void *)v202 + 5) = v209;
        *((void *)v202 + 6) = v210;
        *((void *)v202 + 7) = v694;
        *((void *)v202 + 8) = v703;
        v202[72] = (char)v743;
        uint64_t v160 = v731;
        uint64_t v161 = v762;
        *(void *)&v731[v753[7]] = *(void *)&v762[v753[7]];
        uint64_t v211 = *(void (**)(char *, void, uint64_t, int *))(v676 + 56);
        swift_bridgeObjectRetain();
        v211(v731, 0, 1, v753);
      }
      uint64_t v212 = (int *)type metadata accessor for AuthenticationModel();
      uint64_t v213 = v212[5];
      uint64_t v214 = &v160[v213];
      uint64_t v215 = &v161[v213];
      uint64_t v216 = *((void *)v215 + 1);
      if (v216)
      {
        *(void *)uint64_t v214 = *(void *)v215;
        *((void *)v214 + 1) = v216;
        uint64_t v217 = *((void *)v215 + 3);
        *((void *)v214 + 2) = *((void *)v215 + 2);
        *((void *)v214 + 3) = v217;
        uint64_t v218 = *((void *)v215 + 5);
        *((void *)v214 + 4) = *((void *)v215 + 4);
        *((void *)v214 + 5) = v218;
        uint64_t v219 = *((void *)v215 + 7);
        *((void *)v214 + 6) = *((void *)v215 + 6);
        *((void *)v214 + 7) = v219;
        uint64_t v220 = *((void *)v215 + 9);
        *((void *)v214 + 8) = *((void *)v215 + 8);
        *((void *)v214 + 9) = v220;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v300 = *((_OWORD *)v215 + 3);
        *((_OWORD *)v214 + 2) = *((_OWORD *)v215 + 2);
        *((_OWORD *)v214 + 3) = v300;
        *((_OWORD *)v214 + 4) = *((_OWORD *)v215 + 4);
        long long v301 = *((_OWORD *)v215 + 1);
        *(_OWORD *)uint64_t v214 = *(_OWORD *)v215;
        *((_OWORD *)v214 + 1) = v301;
      }
      v160[v212[6]] = v161[v212[6]];
      uint64_t v302 = v212[7];
      uint64_t v303 = &v160[v302];
      long long v304 = &v161[v302];
      uint64_t v305 = *((void *)v304 + 1);
      *(void *)uint64_t v303 = *(void *)v304;
      *((void *)v303 + 1) = v305;
      *(void *)&v160[v212[8]] = *(void *)&v161[v212[8]];
      v160[v212[9]] = v161[v212[9]];
      uint64_t v306 = v212[10];
      v307 = &v160[v306];
      v308 = &v161[v306];
      uint64_t v309 = (void *)*((void *)v308 + 1);
      v698 = *(void **)v308;
      v708 = v212;
      uint64_t v310 = (void *)*((void *)v308 + 2);
      v311 = (void *)*((void *)v308 + 3);
      v744 = (void *)*((void *)v308 + 4);
      uint64_t v686 = *((void *)v308 + 6);
      v690 = (void *)*((void *)v308 + 5);
      v312 = (void *)*((void *)v308 + 8);
      uint64_t v684 = (void *)*((void *)v308 + 7);
      v313 = (void *)*((void *)v308 + 9);
      char v314 = v308[80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247F986A0(v698, v309, v310, v311, v744, v690, v686, v684, v312, v313, v314);
      *(void *)v307 = v698;
      *((void *)v307 + 1) = v309;
      *((void *)v307 + 2) = v310;
      *((void *)v307 + 3) = v311;
      *((void *)v307 + 4) = v744;
      *((void *)v307 + 5) = v690;
      *((void *)v307 + 6) = v686;
      *((void *)v307 + 7) = v684;
      *((void *)v307 + 8) = v312;
      *((void *)v307 + 9) = v313;
      v307[80] = v314;
      uint64_t v315 = v708[11];
      v316 = &v731[v315];
      v317 = &v762[v315];
      if (*(void *)v317)
      {
        uint64_t v318 = *((void *)v317 + 1);
        *(void *)v316 = *(void *)v317;
        *((void *)v316 + 1) = v318;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v316 = *(_OWORD *)v317;
      }
      uint64_t v377 = *(int *)(v726 + 36);
      uint64_t v378 = &v14[v377];
      v379 = &v15[v377];
      if (v712(&v15[v377], 1, v753))
      {
        uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v378, v379, *(void *)(*(void *)(v380 - 8) + 64));
      }
      else
      {
        uint64_t v393 = *((void *)v379 + 1);
        *(void *)uint64_t v378 = *(void *)v379;
        *((void *)v378 + 1) = v393;
        uint64_t v394 = *((void *)v379 + 3);
        *((void *)v378 + 2) = *((void *)v379 + 2);
        *((void *)v378 + 3) = v394;
        uint64_t v395 = *((void *)v379 + 5);
        *((void *)v378 + 4) = *((void *)v379 + 4);
        *((void *)v378 + 5) = v395;
        uint64_t v396 = *((void *)v379 + 7);
        *((void *)v378 + 6) = *((void *)v379 + 6);
        *((void *)v378 + 7) = v396;
        uint64_t v397 = *((void *)v379 + 9);
        *((void *)v378 + 8) = *((void *)v379 + 8);
        *((void *)v378 + 9) = v397;
        uint64_t v398 = v753[5];
        uint64_t v767 = &v378[v398];
        v745 = &v379[v398];
        uint64_t v399 = sub_248174700();
        v735 = *(void (**)(char *, char *, uint64_t))(*(void *)(v399 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v735(v767, v745, v399);
        uint64_t v400 = v753[6];
        uint64_t v401 = &v378[v400];
        uint64_t v402 = &v379[v400];
        uint64_t v403 = *((void *)v402 + 1);
        uint64_t v404 = *((void *)v402 + 2);
        uint64_t v405 = *((void *)v402 + 3);
        uint64_t v406 = *((void *)v402 + 4);
        uint64_t v407 = *((void *)v402 + 5);
        uint64_t v408 = *((void *)v402 + 6);
        uint64_t v409 = *((void *)v402 + 7);
        uint64_t v736 = *(void *)v402;
        uint64_t v746 = *((void *)v402 + 8);
        LOBYTE(v767) = v402[72];
        sub_247FABF8C(*(void *)v402, v403, v404, v405, v406, v407, v408, v409, v746, (char)v767);
        *(void *)uint64_t v401 = v736;
        *((void *)v401 + 1) = v403;
        *((void *)v401 + 2) = v404;
        *((void *)v401 + 3) = v405;
        *((void *)v401 + 4) = v406;
        *((void *)v401 + 5) = v407;
        *((void *)v401 + 6) = v408;
        *((void *)v401 + 7) = v409;
        *((void *)v401 + 8) = v746;
        v401[72] = (char)v767;
        *(void *)&v378[v753[7]] = *(void *)&v379[v753[7]];
        uint64_t v410 = *(void (**)(char *, void, uint64_t, int *))(v676 + 56);
        swift_bridgeObjectRetain();
        v410(v378, 0, 1, v753);
      }
      uint64_t v411 = (int *)type metadata accessor for SignInModel();
      uint64_t v412 = v411[5];
      uint64_t v413 = &v378[v412];
      uint64_t v414 = &v379[v412];
      uint64_t v415 = *((void *)v414 + 1);
      if (v415)
      {
        *(void *)uint64_t v413 = *(void *)v414;
        *((void *)v413 + 1) = v415;
        uint64_t v416 = *((void *)v414 + 3);
        *((void *)v413 + 2) = *((void *)v414 + 2);
        *((void *)v413 + 3) = v416;
        uint64_t v417 = *((void *)v414 + 5);
        *((void *)v413 + 4) = *((void *)v414 + 4);
        *((void *)v413 + 5) = v417;
        uint64_t v418 = *((void *)v414 + 7);
        *((void *)v413 + 6) = *((void *)v414 + 6);
        *((void *)v413 + 7) = v418;
        uint64_t v419 = *((void *)v414 + 9);
        *((void *)v413 + 8) = *((void *)v414 + 8);
        *((void *)v413 + 9) = v419;
        uint64_t v420 = (uint64_t *)(v414 + 80);
        unint64_t v421 = *((void *)v414 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v421 >> 60 == 15)
        {
          *((_OWORD *)v413 + 5) = *(_OWORD *)v420;
        }
        else
        {
          uint64_t v521 = *v420;
          sub_247FB6C20(*v420, v421);
          *((void *)v413 + 10) = v521;
          *((void *)v413 + 11) = v421;
        }
      }
      else
      {
        long long v509 = *((_OWORD *)v414 + 3);
        *((_OWORD *)v413 + 2) = *((_OWORD *)v414 + 2);
        *((_OWORD *)v413 + 3) = v509;
        long long v510 = *((_OWORD *)v414 + 5);
        *((_OWORD *)v413 + 4) = *((_OWORD *)v414 + 4);
        *((_OWORD *)v413 + 5) = v510;
        long long v511 = *((_OWORD *)v414 + 1);
        *(_OWORD *)uint64_t v413 = *(_OWORD *)v414;
        *((_OWORD *)v413 + 1) = v511;
      }
      *(void *)&v378[v411[6]] = *(void *)&v379[v411[6]];
      *(void *)&v378[v411[7]] = *(void *)&v379[v411[7]];
      v378[v411[8]] = v379[v411[8]];
      v378[v411[9]] = v379[v411[9]];
      uint64_t v522 = v411[10];
      long long v523 = &v378[v522];
      long long v524 = &v379[v522];
      uint64_t v525 = *(void *)&v379[v522 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v778;
      if (v525)
      {
        *(void *)long long v523 = *(void *)v524;
        *((void *)v523 + 1) = v525;
        uint64_t v526 = *((void *)v524 + 2);
        uint64_t v527 = *((void *)v524 + 3);
        *((void *)v523 + 2) = v526;
        *((void *)v523 + 3) = v527;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v528 = *((_OWORD *)v524 + 1);
        *(_OWORD *)long long v523 = *(_OWORD *)v524;
        *((_OWORD *)v523 + 1) = v528;
      }
      uint64_t v529 = v411[11];
      uint64_t v530 = &v378[v529];
      uint64_t v531 = &v379[v529];
      uint64_t v532 = *((void *)v531 + 1);
      *(void *)uint64_t v530 = *(void *)v531;
      *((void *)v530 + 1) = v532;
      uint64_t v533 = v411[12];
      uint64_t v534 = *(void **)&v379[v533];
      *(void *)&v378[v533] = v534;
      uint64_t v535 = v411[13];
      v536 = &v378[v535];
      uint64_t v537 = &v379[v535];
      uint64_t v538 = *(void *)v537;
      uint64_t v539 = *((void *)v537 + 1);
      char v540 = v537[16];
      swift_bridgeObjectRetain();
      id v541 = v534;
      sub_247FE42A8(v538, v539, v540);
      *(void *)v536 = v538;
      *((void *)v536 + 1) = v539;
      v536[16] = v540;
      uint64_t v542 = v411[14];
      uint64_t v543 = &v378[v542];
      uint64_t v544 = &v379[v542];
      uint64_t v545 = *((void *)v544 + 1);
      *(void *)uint64_t v543 = *(void *)v544;
      *((void *)v543 + 1) = v545;
      v378[v411[15]] = v379[v411[15]];
      uint64_t v546 = v411[16];
      uint64_t v547 = &v378[v546];
      v548 = &v379[v546];
      unint64_t v549 = *(void *)&v379[v546 + 8];
      swift_bridgeObjectRetain();
      if (v549 >= 3)
      {
        *(void *)uint64_t v547 = *(void *)v548;
        *((void *)v547 + 1) = v549;
        uint64_t v551 = *((void *)v548 + 3);
        *((void *)v547 + 2) = *((void *)v548 + 2);
        *((void *)v547 + 3) = v551;
        v547[32] = v548[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v550 = *((_OWORD *)v548 + 1);
        *(_OWORD *)uint64_t v547 = *(_OWORD *)v548;
        *((_OWORD *)v547 + 1) = v550;
        v547[32] = v548[32];
      }
      uint64_t v552 = *(int *)(v678 + 24);
      v553 = (char *)v778 + v552;
      unint64_t v554 = (char *)v771 + v552;
      unsigned int v555 = v554[40];
      if (v555 <= 0xFA) {
        goto LABEL_136;
      }
      long long v556 = *((_OWORD *)v554 + 1);
      *(_OWORD *)v553 = *(_OWORD *)v554;
      *((_OWORD *)v553 + 1) = v556;
      *(_OWORD *)(v553 + 25) = *(_OWORD *)(v554 + 25);
      goto LABEL_137;
    case 1u:
      uint64_t v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      uint64_t v24 = a2[3];
      a1[2] = a2[2];
      a1[3] = v24;
      uint64_t v25 = a2[5];
      a1[4] = a2[4];
      a1[5] = v25;
      uint64_t v26 = a2[7];
      a1[6] = a2[6];
      a1[7] = v26;
      uint64_t v27 = a2[9];
      a1[8] = a2[8];
      a1[9] = v27;
      a1[10] = a2[10];
      uint64_t v28 = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28)
      {
        a1[11] = a2[11];
        a1[12] = v28;
        uint64_t v29 = a2[14];
        a1[13] = a2[13];
        a1[14] = v29;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
      }
      else
      {
        long long v155 = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 13) = v155;
      }
      goto LABEL_137;
    case 2u:
      uint64_t v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      uint64_t v31 = a2[3];
      a1[2] = a2[2];
      a1[3] = v31;
      uint64_t v32 = a2[5];
      a1[4] = a2[4];
      a1[5] = v32;
      uint64_t v33 = a2[7];
      a1[6] = a2[6];
      a1[7] = v33;
      uint64_t v34 = a2[9];
      a1[8] = a2[8];
      a1[9] = v34;
      uint64_t v679 = type metadata accessor for RepairModel();
      uint64_t v35 = *(int *)(v679 + 20);
      uint64_t v779 = a1;
      uint64_t v36 = (char *)a1 + v35;
      v772 = a2;
      uint64_t v37 = (char *)a2 + v35;
      *uint64_t v36 = *((unsigned char *)a2 + v35);
      uint64_t v38 = *(void **)((char *)a2 + v35 + 8);
      uint64_t v39 = *(void **)((char *)a2 + v35 + 16);
      uint64_t v40 = *((void *)v37 + 3);
      uint64_t v41 = *((unsigned __int16 *)v37 + 18);
      uint64_t v42 = *((unsigned int *)v37 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FE4184(v38, v39, v40, v42 | (v41 << 32));
      *((void *)v36 + 1) = v38;
      *((void *)v36 + 2) = v39;
      *((void *)v36 + 3) = v40;
      *((_WORD *)v36 + 18) = v41;
      *((_DWORD *)v36 + 8) = v42;
      unsigned int v43 = v37[88];
      if (v43 <= 0xF9)
      {
        uint64_t v104 = *((void *)v37 + 5);
        uint64_t v105 = *((void *)v37 + 6);
        uint64_t v106 = *((void *)v37 + 7);
        uint64_t v107 = *((void *)v37 + 8);
        uint64_t v108 = *((void *)v37 + 9);
        uint64_t v109 = *((void *)v37 + 10);
        sub_247FA9804(v104, v105, v106, v107, v108, v109, v37[88]);
        *((void *)v36 + 5) = v104;
        *((void *)v36 + 6) = v105;
        *((void *)v36 + 7) = v106;
        *((void *)v36 + 8) = v107;
        *((void *)v36 + 9) = v108;
        *((void *)v36 + 10) = v109;
        v36[88] = v43;
      }
      else
      {
        long long v44 = *(_OWORD *)(v37 + 56);
        *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
        *(_OWORD *)(v36 + 56) = v44;
        *(_OWORD *)(v36 + 72) = *(_OWORD *)(v37 + 72);
        v36[88] = v37[88];
      }
      v36[96] = v37[96];
      v36[97] = v37[97];
      uint64_t v110 = *((void *)v37 + 14);
      *((void *)v36 + 13) = *((void *)v37 + 13);
      *((void *)v36 + 14) = v110;
      uint64_t v111 = *((void *)v37 + 16);
      *((void *)v36 + 15) = *((void *)v37 + 15);
      *((void *)v36 + 16) = v111;
      *((void *)v36 + 17) = *((void *)v37 + 17);
      *((_WORD *)v36 + 72) = *((_WORD *)v37 + 72);
      uint64_t v112 = *((void *)v37 + 20);
      *((void *)v36 + 19) = *((void *)v37 + 19);
      *((void *)v36 + 20) = v112;
      uint64_t v113 = *((void *)v37 + 22);
      uint64_t v760 = *((void *)v37 + 21);
      uint64_t v114 = *((void *)v37 + 23);
      uint64_t v115 = *((void *)v37 + 24);
      uint64_t v117 = *((void *)v37 + 25);
      uint64_t v116 = *((void *)v37 + 26);
      unsigned int v118 = v37[216];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FE41AC(v760, v113, v114, v115, v117, v116, v118);
      *((void *)v36 + 21) = v760;
      *((void *)v36 + 22) = v113;
      *((void *)v36 + 23) = v114;
      *((void *)v36 + 24) = v115;
      *((void *)v36 + 25) = v117;
      *((void *)v36 + 26) = v116;
      v36[216] = v118;
      uint64_t v119 = *((void *)v37 + 29);
      if (v119)
      {
        *((void *)v36 + 28) = *((void *)v37 + 28);
        *((void *)v36 + 29) = v119;
        uint64_t v120 = *((void *)v37 + 31);
        *((void *)v36 + 30) = *((void *)v37 + 30);
        *((void *)v36 + 31) = v120;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
      }
      else
      {
        long long v165 = *((_OWORD *)v37 + 15);
        *((_OWORD *)v36 + 14) = *((_OWORD *)v37 + 14);
        *((_OWORD *)v36 + 15) = v165;
      }
      uint64_t v166 = *((void *)v37 + 33);
      *((void *)v36 + 32) = *((void *)v37 + 32);
      *((void *)v36 + 33) = v166;
      uint64_t v167 = *((void *)v37 + 35);
      *((void *)v36 + 34) = *((void *)v37 + 34);
      *((void *)v36 + 35) = v167;
      uint64_t v727 = type metadata accessor for SetupModel();
      uint64_t v168 = *(int *)(v727 + 32);
      uint64_t v169 = &v36[v168];
      uint64_t v170 = &v37[v168];
      uint64_t v171 = type metadata accessor for IdMSAccount();
      uint64_t v677 = *(void *)(v171 - 8);
      uint64_t v172 = *(unsigned int (**)(char *, uint64_t, int *))(v677 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v713 = v172;
      uint64_t v754 = (int *)v171;
      v763 = v169;
      v741 = v170;
      if (v172(v170, 1, (int *)v171))
      {
        uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v169, v170, *(void *)(*(void *)(v173 - 8) + 64));
      }
      else
      {
        uint64_t v221 = *((void *)v170 + 1);
        *(void *)uint64_t v169 = *(void *)v170;
        *((void *)v169 + 1) = v221;
        uint64_t v222 = *((void *)v170 + 3);
        *((void *)v169 + 2) = *((void *)v170 + 2);
        *((void *)v169 + 3) = v222;
        uint64_t v223 = *((void *)v170 + 5);
        *((void *)v169 + 4) = *((void *)v170 + 4);
        *((void *)v169 + 5) = v223;
        uint64_t v224 = *((void *)v170 + 7);
        *((void *)v169 + 6) = *((void *)v170 + 6);
        *((void *)v169 + 7) = v224;
        uint64_t v225 = *((void *)v170 + 9);
        *((void *)v763 + 8) = *((void *)v170 + 8);
        *((void *)v763 + 9) = v225;
        uint64_t v226 = *(int *)(v171 + 20);
        v733 = &v763[v226];
        v704 = &v170[v226];
        uint64_t v227 = sub_248174700();
        uint64_t v228 = *(void (**)(char *, char *, uint64_t))(*(void *)(v227 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v228(v733, v704, v227);
        uint64_t v229 = v754[6];
        uint64_t v230 = &v763[v229];
        uint64_t v231 = &v741[v229];
        uint64_t v232 = *((void *)v231 + 1);
        uint64_t v234 = *((void *)v231 + 2);
        uint64_t v233 = *((void *)v231 + 3);
        uint64_t v236 = *((void *)v231 + 4);
        uint64_t v235 = *((void *)v231 + 5);
        uint64_t v238 = *((void *)v231 + 6);
        uint64_t v237 = *((void *)v231 + 7);
        uint64_t v695 = *(void *)v231;
        uint64_t v705 = *((void *)v231 + 8);
        LOBYTE(v733) = v231[72];
        sub_247FABF8C(*(void *)v231, v232, v234, v233, v236, v235, v238, v237, v705, (char)v733);
        *(void *)uint64_t v230 = v695;
        *((void *)v230 + 1) = v232;
        *((void *)v230 + 2) = v234;
        *((void *)v230 + 3) = v233;
        *((void *)v230 + 4) = v236;
        *((void *)v230 + 5) = v235;
        *((void *)v230 + 6) = v238;
        *((void *)v230 + 7) = v237;
        uint64_t v169 = v763;
        *((void *)v230 + 8) = v705;
        v230[72] = (char)v733;
        *(void *)&v763[v754[7]] = *(void *)&v741[v754[7]];
        uint64_t v239 = *(void (**)(char *, void, uint64_t, int *))(v677 + 56);
        swift_bridgeObjectRetain();
        uint64_t v170 = v741;
        v239(v763, 0, 1, v754);
      }
      uint64_t v240 = (int *)type metadata accessor for AuthenticationModel();
      uint64_t v241 = v240[5];
      uint64_t v242 = &v169[v241];
      char v243 = &v170[v241];
      uint64_t v244 = *((void *)v243 + 1);
      if (v244)
      {
        *(void *)uint64_t v242 = *(void *)v243;
        *((void *)v242 + 1) = v244;
        uint64_t v245 = *((void *)v243 + 3);
        *((void *)v242 + 2) = *((void *)v243 + 2);
        *((void *)v242 + 3) = v245;
        uint64_t v246 = *((void *)v243 + 5);
        *((void *)v242 + 4) = *((void *)v243 + 4);
        *((void *)v242 + 5) = v246;
        uint64_t v247 = *((void *)v243 + 7);
        *((void *)v242 + 6) = *((void *)v243 + 6);
        *((void *)v242 + 7) = v247;
        uint64_t v248 = *((void *)v243 + 9);
        *((void *)v242 + 8) = *((void *)v243 + 8);
        *((void *)v242 + 9) = v248;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v319 = *((_OWORD *)v243 + 3);
        *((_OWORD *)v242 + 2) = *((_OWORD *)v243 + 2);
        *((_OWORD *)v242 + 3) = v319;
        *((_OWORD *)v242 + 4) = *((_OWORD *)v243 + 4);
        long long v320 = *((_OWORD *)v243 + 1);
        *(_OWORD *)uint64_t v242 = *(_OWORD *)v243;
        *((_OWORD *)v242 + 1) = v320;
      }
      v169[v240[6]] = v170[v240[6]];
      uint64_t v321 = v240[7];
      uint64_t v322 = &v169[v321];
      long long v323 = &v170[v321];
      uint64_t v324 = *((void *)v323 + 1);
      *(void *)uint64_t v322 = *(void *)v323;
      *((void *)v322 + 1) = v324;
      *(void *)&v169[v240[8]] = *(void *)&v170[v240[8]];
      v169[v240[9]] = v170[v240[9]];
      uint64_t v325 = v240[10];
      v326 = &v169[v325];
      v327 = &v170[v325];
      uint64_t v328 = (void *)*((void *)v327 + 1);
      v699 = *(void **)v327;
      uint64_t v709 = v240;
      uint64_t v329 = (void *)*((void *)v327 + 2);
      v330 = (void *)*((void *)v327 + 3);
      v691 = (void *)*((void *)v327 + 4);
      uint64_t v734 = (void *)*((void *)v327 + 5);
      v331 = (void *)*((void *)v327 + 8);
      v685 = (void *)*((void *)v327 + 7);
      uint64_t v687 = *((void *)v327 + 6);
      v332 = (void *)*((void *)v327 + 9);
      char v333 = v327[80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247F986A0(v699, v328, v329, v330, v691, v734, v687, v685, v331, v332, v333);
      *(void *)v326 = v699;
      *((void *)v326 + 1) = v328;
      *((void *)v326 + 2) = v329;
      *((void *)v326 + 3) = v330;
      *((void *)v326 + 4) = v691;
      *((void *)v326 + 5) = v734;
      *((void *)v326 + 6) = v687;
      *((void *)v326 + 7) = v685;
      *((void *)v326 + 8) = v331;
      *((void *)v326 + 9) = v332;
      v326[80] = v333;
      uint64_t v334 = v709[11];
      v335 = &v763[v334];
      v336 = &v741[v334];
      if (*(void *)v336)
      {
        uint64_t v337 = *((void *)v336 + 1);
        *(void *)v335 = *(void *)v336;
        *((void *)v335 + 1) = v337;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v335 = *(_OWORD *)v336;
      }
      uint64_t v381 = *(int *)(v727 + 36);
      uint64_t v382 = &v36[v381];
      v383 = &v37[v381];
      if (v713(&v37[v381], 1, v754))
      {
        uint64_t v384 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v382, v383, *(void *)(*(void *)(v384 - 8) + 64));
      }
      else
      {
        uint64_t v422 = *((void *)v383 + 1);
        *(void *)uint64_t v382 = *(void *)v383;
        *((void *)v382 + 1) = v422;
        uint64_t v423 = *((void *)v383 + 3);
        *((void *)v382 + 2) = *((void *)v383 + 2);
        *((void *)v382 + 3) = v423;
        uint64_t v424 = *((void *)v383 + 5);
        *((void *)v382 + 4) = *((void *)v383 + 4);
        *((void *)v382 + 5) = v424;
        uint64_t v425 = *((void *)v383 + 7);
        *((void *)v382 + 6) = *((void *)v383 + 6);
        *((void *)v382 + 7) = v425;
        uint64_t v426 = *((void *)v383 + 9);
        *((void *)v382 + 8) = *((void *)v383 + 8);
        *((void *)v382 + 9) = v426;
        uint64_t v427 = v754[5];
        uint64_t v768 = &v382[v427];
        v747 = &v383[v427];
        uint64_t v428 = sub_248174700();
        v737 = *(void (**)(char *, char *, uint64_t))(*(void *)(v428 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v737(v768, v747, v428);
        uint64_t v429 = v754[6];
        uint64_t v430 = &v382[v429];
        uint64_t v431 = &v383[v429];
        uint64_t v432 = *((void *)v431 + 1);
        uint64_t v433 = *((void *)v431 + 2);
        uint64_t v434 = *((void *)v431 + 3);
        uint64_t v435 = *((void *)v431 + 4);
        uint64_t v436 = *((void *)v431 + 5);
        uint64_t v437 = *((void *)v431 + 6);
        uint64_t v438 = *((void *)v431 + 7);
        uint64_t v738 = *(void *)v431;
        uint64_t v748 = *((void *)v431 + 8);
        LOBYTE(v768) = v431[72];
        sub_247FABF8C(*(void *)v431, v432, v433, v434, v435, v436, v437, v438, v748, (char)v768);
        *(void *)uint64_t v430 = v738;
        *((void *)v430 + 1) = v432;
        *((void *)v430 + 2) = v433;
        *((void *)v430 + 3) = v434;
        *((void *)v430 + 4) = v435;
        *((void *)v430 + 5) = v436;
        *((void *)v430 + 6) = v437;
        *((void *)v430 + 7) = v438;
        *((void *)v430 + 8) = v748;
        v430[72] = (char)v768;
        *(void *)&v382[v754[7]] = *(void *)&v383[v754[7]];
        uint64_t v439 = *(void (**)(char *, void, uint64_t, int *))(v677 + 56);
        swift_bridgeObjectRetain();
        v439(v382, 0, 1, v754);
      }
      uint64_t v440 = (int *)type metadata accessor for SignInModel();
      uint64_t v441 = v440[5];
      uint64_t v442 = &v382[v441];
      uint64_t v443 = &v383[v441];
      uint64_t v444 = *((void *)v443 + 1);
      if (v444)
      {
        *(void *)uint64_t v442 = *(void *)v443;
        *((void *)v442 + 1) = v444;
        uint64_t v445 = *((void *)v443 + 3);
        *((void *)v442 + 2) = *((void *)v443 + 2);
        *((void *)v442 + 3) = v445;
        uint64_t v446 = *((void *)v443 + 5);
        *((void *)v442 + 4) = *((void *)v443 + 4);
        *((void *)v442 + 5) = v446;
        uint64_t v447 = *((void *)v443 + 7);
        *((void *)v442 + 6) = *((void *)v443 + 6);
        *((void *)v442 + 7) = v447;
        uint64_t v448 = *((void *)v443 + 9);
        *((void *)v442 + 8) = *((void *)v443 + 8);
        *((void *)v442 + 9) = v448;
        uint64_t v449 = (uint64_t *)(v443 + 80);
        unint64_t v450 = *((void *)v443 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v450 >> 60 == 15)
        {
          *((_OWORD *)v442 + 5) = *(_OWORD *)v449;
        }
        else
        {
          uint64_t v557 = *v449;
          sub_247FB6C20(*v449, v450);
          *((void *)v442 + 10) = v557;
          *((void *)v442 + 11) = v450;
        }
      }
      else
      {
        long long v512 = *((_OWORD *)v443 + 3);
        *((_OWORD *)v442 + 2) = *((_OWORD *)v443 + 2);
        *((_OWORD *)v442 + 3) = v512;
        long long v513 = *((_OWORD *)v443 + 5);
        *((_OWORD *)v442 + 4) = *((_OWORD *)v443 + 4);
        *((_OWORD *)v442 + 5) = v513;
        long long v514 = *((_OWORD *)v443 + 1);
        *(_OWORD *)uint64_t v442 = *(_OWORD *)v443;
        *((_OWORD *)v442 + 1) = v514;
      }
      *(void *)&v382[v440[6]] = *(void *)&v383[v440[6]];
      *(void *)&v382[v440[7]] = *(void *)&v383[v440[7]];
      v382[v440[8]] = v383[v440[8]];
      v382[v440[9]] = v383[v440[9]];
      uint64_t v558 = v440[10];
      v559 = &v382[v558];
      unsigned int v560 = &v383[v558];
      uint64_t v561 = *(void *)&v383[v558 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v779;
      if (v561)
      {
        *(void *)v559 = *(void *)v560;
        *((void *)v559 + 1) = v561;
        uint64_t v562 = *((void *)v560 + 2);
        uint64_t v563 = *((void *)v560 + 3);
        *((void *)v559 + 2) = v562;
        *((void *)v559 + 3) = v563;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v564 = *((_OWORD *)v560 + 1);
        *(_OWORD *)v559 = *(_OWORD *)v560;
        *((_OWORD *)v559 + 1) = v564;
      }
      uint64_t v565 = v440[11];
      uint64_t v566 = &v382[v565];
      uint64_t v567 = &v383[v565];
      uint64_t v568 = *((void *)v567 + 1);
      *(void *)uint64_t v566 = *(void *)v567;
      *((void *)v566 + 1) = v568;
      uint64_t v569 = v440[12];
      uint64_t v570 = *(void **)&v383[v569];
      *(void *)&v382[v569] = v570;
      uint64_t v571 = v440[13];
      v572 = &v382[v571];
      uint64_t v573 = &v383[v571];
      uint64_t v574 = *(void *)v573;
      uint64_t v575 = *((void *)v573 + 1);
      char v576 = v573[16];
      swift_bridgeObjectRetain();
      id v577 = v570;
      sub_247FE42A8(v574, v575, v576);
      *(void *)v572 = v574;
      *((void *)v572 + 1) = v575;
      v572[16] = v576;
      uint64_t v578 = v440[14];
      uint64_t v579 = &v382[v578];
      uint64_t v580 = &v383[v578];
      uint64_t v581 = *((void *)v580 + 1);
      *(void *)uint64_t v579 = *(void *)v580;
      *((void *)v579 + 1) = v581;
      v382[v440[15]] = v383[v440[15]];
      uint64_t v582 = v440[16];
      uint64_t v583 = &v382[v582];
      v584 = &v383[v582];
      unint64_t v585 = *(void *)&v383[v582 + 8];
      swift_bridgeObjectRetain();
      if (v585 >= 3)
      {
        *(void *)uint64_t v583 = *(void *)v584;
        *((void *)v583 + 1) = v585;
        uint64_t v587 = *((void *)v584 + 3);
        *((void *)v583 + 2) = *((void *)v584 + 2);
        *((void *)v583 + 3) = v587;
        v583[32] = v584[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v586 = *((_OWORD *)v584 + 1);
        *(_OWORD *)uint64_t v583 = *(_OWORD *)v584;
        *((_OWORD *)v583 + 1) = v586;
        v583[32] = v584[32];
      }
      uint64_t v588 = *(int *)(v679 + 24);
      v553 = (char *)v779 + v588;
      unint64_t v554 = (char *)v772 + v588;
      unsigned int v555 = v554[40];
      if (v555 <= 0xFA) {
        goto LABEL_136;
      }
      long long v589 = *((_OWORD *)v554 + 1);
      *(_OWORD *)v553 = *(_OWORD *)v554;
      *((_OWORD *)v553 + 1) = v589;
      *(_OWORD *)(v553 + 25) = *(_OWORD *)(v554 + 25);
      goto LABEL_137;
    case 3u:
      uint64_t v45 = a2[1];
      *a1 = *a2;
      a1[1] = v45;
      uint64_t v46 = a2[3];
      a1[2] = a2[2];
      a1[3] = v46;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      goto LABEL_137;
    case 4u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      uint64_t v680 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
      uint64_t v47 = *(int *)(v680 + 32);
      v780 = a1;
      uint64_t v48 = (uint64_t *)((char *)a1 + v47);
      uint64_t v49 = (char *)a2 + v47;
      uint64_t v50 = *(uint64_t *)((char *)a2 + v47 + 8);
      v773 = a2;
      *uint64_t v48 = *(uint64_t *)((char *)a2 + v47);
      v48[1] = v50;
      uint64_t v51 = *(uint64_t *)((char *)a2 + v47 + 24);
      v48[2] = *(uint64_t *)((char *)a2 + v47 + 16);
      v48[3] = v51;
      uint64_t v52 = *(uint64_t *)((char *)a2 + v47 + 40);
      v48[4] = *(uint64_t *)((char *)a2 + v47 + 32);
      v48[5] = v52;
      uint64_t v53 = *(uint64_t *)((char *)a2 + v47 + 56);
      v48[6] = *(uint64_t *)((char *)a2 + v47 + 48);
      v48[7] = v53;
      uint64_t v54 = *(uint64_t *)((char *)a2 + v47 + 72);
      v48[8] = *(uint64_t *)((char *)a2 + v47 + 64);
      v48[9] = v54;
      uint64_t v671 = type metadata accessor for RepairModel();
      uint64_t v672 = v48;
      uint64_t v55 = *(int *)(v671 + 20);
      uint64_t v56 = (char *)v48 + v55;
      uint64_t v674 = v49;
      uint64_t v57 = &v49[v55];
      *((unsigned char *)v48 + v55) = v49[v55];
      uint64_t v58 = *(void **)&v49[v55 + 8];
      uint64_t v59 = *(void **)&v49[v55 + 16];
      uint64_t v60 = *(void *)&v49[v55 + 24];
      uint64_t v61 = *(unsigned __int16 *)&v49[v55 + 36];
      uint64_t v62 = *((unsigned int *)v57 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FE4184(v58, v59, v60, v62 | (v61 << 32));
      *((void *)v56 + 1) = v58;
      *((void *)v56 + 2) = v59;
      *((void *)v56 + 3) = v60;
      *((_WORD *)v56 + 18) = v61;
      *((_DWORD *)v56 + 8) = v62;
      unsigned int v63 = v57[88];
      if (v63 <= 0xF9)
      {
        uint64_t v121 = *((void *)v57 + 5);
        uint64_t v122 = *((void *)v57 + 6);
        uint64_t v124 = *((void *)v57 + 7);
        uint64_t v123 = *((void *)v57 + 8);
        uint64_t v125 = *((void *)v57 + 9);
        uint64_t v126 = *((void *)v57 + 10);
        sub_247FA9804(v121, v122, v124, v123, v125, v126, v57[88]);
        *((void *)v56 + 5) = v121;
        *((void *)v56 + 6) = v122;
        *((void *)v56 + 7) = v124;
        *((void *)v56 + 8) = v123;
        *((void *)v56 + 9) = v125;
        *((void *)v56 + 10) = v126;
        v56[88] = v63;
      }
      else
      {
        long long v64 = *(_OWORD *)(v57 + 56);
        *(_OWORD *)(v56 + 40) = *(_OWORD *)(v57 + 40);
        *(_OWORD *)(v56 + 56) = v64;
        *(_OWORD *)(v56 + 72) = *(_OWORD *)(v57 + 72);
        v56[88] = v57[88];
      }
      v56[96] = v57[96];
      v56[97] = v57[97];
      uint64_t v127 = *((void *)v57 + 14);
      *((void *)v56 + 13) = *((void *)v57 + 13);
      *((void *)v56 + 14) = v127;
      uint64_t v128 = *((void *)v57 + 16);
      *((void *)v56 + 15) = *((void *)v57 + 15);
      *((void *)v56 + 16) = v128;
      *((void *)v56 + 17) = *((void *)v57 + 17);
      *((_WORD *)v56 + 72) = *((_WORD *)v57 + 72);
      uint64_t v129 = *((void *)v57 + 20);
      *((void *)v56 + 19) = *((void *)v57 + 19);
      *((void *)v56 + 20) = v129;
      uint64_t v130 = *((void *)v57 + 22);
      uint64_t v761 = *((void *)v57 + 21);
      uint64_t v131 = *((void *)v57 + 23);
      uint64_t v132 = *((void *)v57 + 24);
      uint64_t v133 = *((void *)v57 + 25);
      uint64_t v134 = *((void *)v57 + 26);
      unsigned int v135 = v57[216];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FE41AC(v761, v130, v131, v132, v133, v134, v135);
      *((void *)v56 + 21) = v761;
      *((void *)v56 + 22) = v130;
      *((void *)v56 + 23) = v131;
      *((void *)v56 + 24) = v132;
      *((void *)v56 + 25) = v133;
      *((void *)v56 + 26) = v134;
      v56[216] = v135;
      uint64_t v136 = *((void *)v57 + 29);
      if (v136)
      {
        *((void *)v56 + 28) = *((void *)v57 + 28);
        *((void *)v56 + 29) = v136;
        uint64_t v137 = *((void *)v57 + 31);
        *((void *)v56 + 30) = *((void *)v57 + 30);
        *((void *)v56 + 31) = v137;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
      }
      else
      {
        long long v174 = *((_OWORD *)v57 + 15);
        *((_OWORD *)v56 + 14) = *((_OWORD *)v57 + 14);
        *((_OWORD *)v56 + 15) = v174;
      }
      uint64_t v175 = *((void *)v57 + 33);
      *((void *)v56 + 32) = *((void *)v57 + 32);
      *((void *)v56 + 33) = v175;
      uint64_t v176 = *((void *)v57 + 35);
      *((void *)v56 + 34) = *((void *)v57 + 34);
      *((void *)v56 + 35) = v176;
      uint64_t v755 = type metadata accessor for SetupModel();
      uint64_t v177 = *(int *)(v755 + 32);
      uint64_t v178 = &v56[v177];
      uint64_t v179 = &v57[v177];
      uint64_t v180 = type metadata accessor for IdMSAccount();
      uint64_t v670 = *(void *)(v180 - 8);
      v181 = *(unsigned int (**)(char *, uint64_t, int *))(v670 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v732 = v181;
      uint64_t v764 = (int *)v180;
      if (v181(v179, 1, (int *)v180))
      {
        uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v178, v179, *(void *)(*(void *)(v182 - 8) + 64));
      }
      else
      {
        uint64_t v249 = *((void *)v179 + 1);
        *(void *)uint64_t v178 = *(void *)v179;
        *((void *)v178 + 1) = v249;
        uint64_t v250 = *((void *)v179 + 3);
        *((void *)v178 + 2) = *((void *)v179 + 2);
        *((void *)v178 + 3) = v250;
        uint64_t v251 = *((void *)v179 + 5);
        *((void *)v178 + 4) = *((void *)v179 + 4);
        *((void *)v178 + 5) = v251;
        uint64_t v252 = *((void *)v179 + 7);
        *((void *)v178 + 6) = *((void *)v179 + 6);
        *((void *)v178 + 7) = v252;
        uint64_t v253 = *((void *)v179 + 9);
        *((void *)v178 + 8) = *((void *)v179 + 8);
        *((void *)v178 + 9) = v253;
        uint64_t v254 = *(int *)(v180 + 20);
        uint64_t v720 = &v179[v254];
        v729 = &v178[v254];
        uint64_t v255 = sub_248174700();
        v714 = *(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v714(v729, v720, v255);
        uint64_t v256 = v764[6];
        uint64_t v257 = &v178[v256];
        uint64_t v258 = &v179[v256];
        uint64_t v259 = *((void *)v258 + 1);
        uint64_t v260 = *((void *)v258 + 3);
        uint64_t v706 = *((void *)v258 + 2);
        uint64_t v715 = *(void *)v258;
        uint64_t v261 = *((void *)v258 + 5);
        uint64_t v696 = *((void *)v258 + 4);
        uint64_t v263 = *((void *)v258 + 6);
        uint64_t v262 = *((void *)v258 + 7);
        uint64_t v721 = *((void *)v258 + 8);
        LOBYTE(v729) = v258[72];
        sub_247FABF8C(*(void *)v258, v259, v706, v260, v696, v261, v263, v262, v721, (char)v729);
        *(void *)uint64_t v257 = v715;
        *((void *)v257 + 1) = v259;
        *((void *)v257 + 2) = v706;
        *((void *)v257 + 3) = v260;
        *((void *)v257 + 4) = v696;
        *((void *)v257 + 5) = v261;
        *((void *)v257 + 6) = v263;
        *((void *)v257 + 7) = v262;
        *((void *)v257 + 8) = v721;
        v257[72] = (char)v729;
        *(void *)&v178[v764[7]] = *(void *)&v179[v764[7]];
        uint64_t v264 = *(void (**)(char *, void, uint64_t, int *))(v670 + 56);
        swift_bridgeObjectRetain();
        v264(v178, 0, 1, v764);
      }
      uint64_t v265 = (int *)type metadata accessor for AuthenticationModel();
      uint64_t v266 = v265[5];
      uint64_t v267 = &v178[v266];
      v268 = &v179[v266];
      uint64_t v269 = *((void *)v268 + 1);
      uint64_t v683 = v56;
      if (v269)
      {
        *(void *)uint64_t v267 = *(void *)v268;
        *((void *)v267 + 1) = v269;
        uint64_t v270 = *((void *)v268 + 3);
        *((void *)v267 + 2) = *((void *)v268 + 2);
        *((void *)v267 + 3) = v270;
        uint64_t v271 = *((void *)v268 + 5);
        *((void *)v267 + 4) = *((void *)v268 + 4);
        *((void *)v267 + 5) = v271;
        uint64_t v272 = *((void *)v268 + 7);
        *((void *)v267 + 6) = *((void *)v268 + 6);
        *((void *)v267 + 7) = v272;
        uint64_t v273 = *((void *)v268 + 9);
        *((void *)v267 + 8) = *((void *)v268 + 8);
        *((void *)v267 + 9) = v273;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v338 = *((_OWORD *)v268 + 3);
        *((_OWORD *)v267 + 2) = *((_OWORD *)v268 + 2);
        *((_OWORD *)v267 + 3) = v338;
        *((_OWORD *)v267 + 4) = *((_OWORD *)v268 + 4);
        long long v339 = *((_OWORD *)v268 + 1);
        *(_OWORD *)uint64_t v267 = *(_OWORD *)v268;
        *((_OWORD *)v267 + 1) = v339;
      }
      v178[v265[6]] = v179[v265[6]];
      uint64_t v340 = v265[7];
      uint64_t v341 = &v178[v340];
      long long v342 = &v179[v340];
      uint64_t v343 = *((void *)v342 + 1);
      *(void *)uint64_t v341 = *(void *)v342;
      *((void *)v341 + 1) = v343;
      *(void *)&v178[v265[8]] = *(void *)&v179[v265[8]];
      v178[v265[9]] = v179[v265[9]];
      uint64_t v344 = v265[10];
      v345 = &v178[v344];
      v346 = &v179[v344];
      uint64_t v347 = (void *)*((void *)v346 + 2);
      uint64_t v700 = (void *)*((void *)v346 + 1);
      v710 = *(void **)v346;
      v718 = v265;
      uint64_t v724 = v178;
      uint64_t v348 = (void *)*((void *)v346 + 3);
      uint64_t v349 = *((void *)v346 + 6);
      v688 = (void *)*((void *)v346 + 5);
      uint64_t v692 = (void *)*((void *)v346 + 4);
      v730 = v179;
      v350 = (void *)*((void *)v346 + 7);
      v351 = (void *)*((void *)v346 + 8);
      v352 = (void *)*((void *)v346 + 9);
      char v353 = v346[80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247F986A0(v710, v700, v347, v348, v692, v688, v349, v350, v351, v352, v353);
      *(void *)v345 = v710;
      *((void *)v345 + 1) = v700;
      *((void *)v345 + 2) = v347;
      *((void *)v345 + 3) = v348;
      *((void *)v345 + 4) = v692;
      *((void *)v345 + 5) = v688;
      *((void *)v345 + 6) = v349;
      *((void *)v345 + 7) = v350;
      *((void *)v345 + 8) = v351;
      *((void *)v345 + 9) = v352;
      v345[80] = v353;
      uint64_t v354 = v718[11];
      v355 = (void *)((char *)v724 + v354);
      v356 = (void *)((char *)v730 + v354);
      if (*v356)
      {
        uint64_t v357 = v356[1];
        void *v355 = *v356;
        v355[1] = v357;
        swift_retain();
      }
      else
      {
        *(_OWORD *)v355 = *(_OWORD *)v356;
      }
      uint64_t v385 = *(int *)(v755 + 36);
      uint64_t v386 = &v683[v385];
      v387 = &v57[v385];
      if (v732(&v57[v385], 1, v764))
      {
        uint64_t v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v386, v387, *(void *)(*(void *)(v388 - 8) + 64));
      }
      else
      {
        uint64_t v451 = *((void *)v387 + 1);
        *(void *)uint64_t v386 = *(void *)v387;
        *((void *)v386 + 1) = v451;
        uint64_t v452 = *((void *)v387 + 3);
        *((void *)v386 + 2) = *((void *)v387 + 2);
        *((void *)v386 + 3) = v452;
        uint64_t v453 = *((void *)v387 + 5);
        *((void *)v386 + 4) = *((void *)v387 + 4);
        *((void *)v386 + 5) = v453;
        uint64_t v454 = *((void *)v387 + 7);
        *((void *)v386 + 6) = *((void *)v387 + 6);
        *((void *)v386 + 7) = v454;
        uint64_t v455 = *((void *)v387 + 9);
        *((void *)v386 + 8) = *((void *)v387 + 8);
        *((void *)v386 + 9) = v455;
        uint64_t v456 = v764[5];
        v749 = &v387[v456];
        v757 = &v386[v456];
        uint64_t v457 = sub_248174700();
        v739 = *(void (**)(char *, char *, uint64_t))(*(void *)(v457 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v739(v757, v749, v457);
        uint64_t v458 = v764[6];
        uint64_t v459 = &v386[v458];
        uint64_t v460 = &v387[v458];
        uint64_t v461 = *((void *)v460 + 1);
        uint64_t v462 = *((void *)v460 + 2);
        uint64_t v463 = *((void *)v460 + 3);
        uint64_t v464 = *((void *)v460 + 4);
        uint64_t v465 = *((void *)v460 + 5);
        uint64_t v466 = *((void *)v460 + 6);
        uint64_t v467 = *((void *)v460 + 7);
        uint64_t v740 = *(void *)v460;
        uint64_t v750 = *((void *)v460 + 8);
        LOBYTE(v757) = v460[72];
        sub_247FABF8C(*(void *)v460, v461, v462, v463, v464, v465, v466, v467, v750, (char)v757);
        *(void *)uint64_t v459 = v740;
        *((void *)v459 + 1) = v461;
        *((void *)v459 + 2) = v462;
        *((void *)v459 + 3) = v463;
        *((void *)v459 + 4) = v464;
        *((void *)v459 + 5) = v465;
        *((void *)v459 + 6) = v466;
        *((void *)v459 + 7) = v467;
        *((void *)v459 + 8) = v750;
        v459[72] = (char)v757;
        *(void *)&v386[v764[7]] = *(void *)&v387[v764[7]];
        uint64_t v468 = *(void (**)(char *, void, uint64_t, int *))(v670 + 56);
        swift_bridgeObjectRetain();
        v468(v386, 0, 1, v764);
      }
      uint64_t v469 = (int *)type metadata accessor for SignInModel();
      uint64_t v470 = v469[5];
      uint64_t v471 = &v386[v470];
      uint64_t v472 = &v387[v470];
      uint64_t v473 = *((void *)v472 + 1);
      if (v473)
      {
        *(void *)uint64_t v471 = *(void *)v472;
        *((void *)v471 + 1) = v473;
        uint64_t v474 = *((void *)v472 + 3);
        *((void *)v471 + 2) = *((void *)v472 + 2);
        *((void *)v471 + 3) = v474;
        uint64_t v475 = *((void *)v472 + 5);
        *((void *)v471 + 4) = *((void *)v472 + 4);
        *((void *)v471 + 5) = v475;
        uint64_t v476 = *((void *)v472 + 7);
        *((void *)v471 + 6) = *((void *)v472 + 6);
        *((void *)v471 + 7) = v476;
        uint64_t v477 = *((void *)v472 + 9);
        *((void *)v471 + 8) = *((void *)v472 + 8);
        *((void *)v471 + 9) = v477;
        uint64_t v478 = (uint64_t *)(v472 + 80);
        unint64_t v479 = *((void *)v472 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v479 >> 60 == 15)
        {
          *((_OWORD *)v471 + 5) = *(_OWORD *)v478;
        }
        else
        {
          uint64_t v590 = *v478;
          sub_247FB6C20(*v478, v479);
          *((void *)v471 + 10) = v590;
          *((void *)v471 + 11) = v479;
        }
      }
      else
      {
        long long v515 = *((_OWORD *)v472 + 3);
        *((_OWORD *)v471 + 2) = *((_OWORD *)v472 + 2);
        *((_OWORD *)v471 + 3) = v515;
        long long v516 = *((_OWORD *)v472 + 5);
        *((_OWORD *)v471 + 4) = *((_OWORD *)v472 + 4);
        *((_OWORD *)v471 + 5) = v516;
        long long v517 = *((_OWORD *)v472 + 1);
        *(_OWORD *)uint64_t v471 = *(_OWORD *)v472;
        *((_OWORD *)v471 + 1) = v517;
      }
      *(void *)&v386[v469[6]] = *(void *)&v387[v469[6]];
      *(void *)&v386[v469[7]] = *(void *)&v387[v469[7]];
      v386[v469[8]] = v387[v469[8]];
      v386[v469[9]] = v387[v469[9]];
      uint64_t v591 = v469[10];
      uint64_t v592 = &v386[v591];
      uint64_t v593 = &v387[v591];
      uint64_t v594 = *(void *)&v387[v591 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v594)
      {
        *(void *)uint64_t v592 = *(void *)v593;
        *((void *)v592 + 1) = v594;
        uint64_t v595 = *((void *)v593 + 2);
        uint64_t v596 = *((void *)v593 + 3);
        *((void *)v592 + 2) = v595;
        *((void *)v592 + 3) = v596;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v597 = *((_OWORD *)v593 + 1);
        *(_OWORD *)uint64_t v592 = *(_OWORD *)v593;
        *((_OWORD *)v592 + 1) = v597;
      }
      a1 = v780;
      uint64_t v598 = v469[11];
      uint64_t v599 = &v386[v598];
      uint64_t v600 = &v387[v598];
      uint64_t v601 = *((void *)v600 + 1);
      *(void *)uint64_t v599 = *(void *)v600;
      *((void *)v599 + 1) = v601;
      uint64_t v602 = v469[12];
      uint64_t v603 = *(void **)&v387[v602];
      *(void *)&v386[v602] = v603;
      uint64_t v604 = v469[13];
      v605 = &v386[v604];
      uint64_t v606 = &v387[v604];
      uint64_t v607 = *(void *)v606;
      uint64_t v608 = *((void *)v606 + 1);
      char v609 = v606[16];
      swift_bridgeObjectRetain();
      id v610 = v603;
      sub_247FE42A8(v607, v608, v609);
      *(void *)v605 = v607;
      *((void *)v605 + 1) = v608;
      v605[16] = v609;
      uint64_t v611 = v469[14];
      uint64_t v612 = &v386[v611];
      uint64_t v613 = &v387[v611];
      uint64_t v614 = *((void *)v613 + 1);
      *(void *)uint64_t v612 = *(void *)v613;
      *((void *)v612 + 1) = v614;
      v386[v469[15]] = v387[v469[15]];
      uint64_t v615 = v469[16];
      uint64_t v616 = &v386[v615];
      v617 = &v387[v615];
      unint64_t v618 = *(void *)&v387[v615 + 8];
      swift_bridgeObjectRetain();
      if (v618 >= 3)
      {
        *(void *)uint64_t v616 = *(void *)v617;
        *((void *)v616 + 1) = v618;
        uint64_t v620 = *((void *)v617 + 3);
        *((void *)v616 + 2) = *((void *)v617 + 2);
        *((void *)v616 + 3) = v620;
        v616[32] = v617[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v619 = *((_OWORD *)v617 + 1);
        *(_OWORD *)uint64_t v616 = *(_OWORD *)v617;
        *((_OWORD *)v616 + 1) = v619;
        v616[32] = v617[32];
      }
      uint64_t v621 = *(int *)(v671 + 24);
      v622 = (char *)v672 + v621;
      unint64_t v623 = &v674[v621];
      unsigned int v624 = v623[40];
      if (v624 <= 0xFA)
      {
        uint64_t v626 = *(void *)v623;
        uint64_t v627 = *((void *)v623 + 1);
        uint64_t v628 = *((void *)v623 + 2);
        uint64_t v629 = *((void *)v623 + 3);
        uint64_t v630 = *((void *)v623 + 4);
        sub_247FE42BC(*(void *)v623, v627, v628, v629, v630, v623[40]);
        *(void *)v622 = v626;
        *((void *)v622 + 1) = v627;
        *((void *)v622 + 2) = v628;
        *((void *)v622 + 3) = v629;
        *((void *)v622 + 4) = v630;
        v622[40] = v624;
      }
      else
      {
        long long v625 = *((_OWORD *)v623 + 1);
        *(_OWORD *)v622 = *(_OWORD *)v623;
        *((_OWORD *)v622 + 1) = v625;
        *(_OWORD *)(v622 + 25) = *(_OWORD *)(v623 + 25);
      }
      *(uint64_t *)((char *)v780 + *(int *)(v680 + 36)) = *(uint64_t *)((char *)v773 + *(int *)(v680 + 36));
      swift_retain();
      goto LABEL_137;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v65 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628) + 32);
      v781 = a1;
      uint64_t v66 = (uint64_t *)((char *)a1 + v65);
      uint64_t v67 = (char *)a2 + v65;
      uint64_t v774 = *(uint64_t *)((char *)a2 + v65 + 8);
      *uint64_t v66 = *(uint64_t *)((char *)a2 + v65);
      v66[1] = v774;
      uint64_t v758 = *(uint64_t *)((char *)a2 + v65 + 24);
      v66[2] = *(uint64_t *)((char *)a2 + v65 + 16);
      v66[3] = v758;
      uint64_t v68 = *(uint64_t *)((char *)a2 + v65 + 40);
      v66[4] = *(uint64_t *)((char *)a2 + v65 + 32);
      void v66[5] = v68;
      uint64_t v69 = *(uint64_t *)((char *)a2 + v65 + 56);
      v66[6] = *(uint64_t *)((char *)a2 + v65 + 48);
      v66[7] = v69;
      uint64_t v70 = *(uint64_t *)((char *)a2 + v65 + 72);
      v66[8] = *(uint64_t *)((char *)a2 + v65 + 64);
      v66[9] = v70;
      uint64_t v675 = type metadata accessor for RepairModel();
      uint64_t v681 = v66;
      uint64_t v71 = *(int *)(v675 + 20);
      uint64_t v72 = (char *)v66 + v71;
      uint64_t v682 = v67;
      uint64_t v73 = &v67[v71];
      *((unsigned char *)v66 + v71) = v67[v71];
      uint64_t v75 = *(void **)&v67[v71 + 8];
      uint64_t v74 = *(void **)&v67[v71 + 16];
      uint64_t v76 = *(void *)&v67[v71 + 24];
      uint64_t v77 = *(unsigned __int16 *)&v67[v71 + 36];
      uint64_t v78 = *((unsigned int *)v73 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FE4184(v75, v74, v76, v78 | (v77 << 32));
      *((void *)v72 + 1) = v75;
      *((void *)v72 + 2) = v74;
      *((void *)v72 + 3) = v76;
      *((_WORD *)v72 + 18) = v77;
      *((_DWORD *)v72 + 8) = v78;
      unsigned int v79 = v73[88];
      if (v79 <= 0xF9)
      {
        uint64_t v138 = *((void *)v73 + 5);
        uint64_t v139 = *((void *)v73 + 6);
        uint64_t v141 = *((void *)v73 + 7);
        uint64_t v140 = *((void *)v73 + 8);
        uint64_t v143 = *((void *)v73 + 9);
        uint64_t v142 = *((void *)v73 + 10);
        sub_247FA9804(v138, v139, v141, v140, v143, v142, v73[88]);
        *((void *)v72 + 5) = v138;
        *((void *)v72 + 6) = v139;
        *((void *)v72 + 7) = v141;
        *((void *)v72 + 8) = v140;
        *((void *)v72 + 9) = v143;
        *((void *)v72 + 10) = v142;
        v72[88] = v79;
      }
      else
      {
        long long v80 = *(_OWORD *)(v73 + 56);
        *(_OWORD *)(v72 + 40) = *(_OWORD *)(v73 + 40);
        *(_OWORD *)(v72 + 56) = v80;
        *(_OWORD *)(v72 + 72) = *(_OWORD *)(v73 + 72);
        v72[88] = v73[88];
      }
      v72[96] = v73[96];
      v72[97] = v73[97];
      uint64_t v144 = *((void *)v73 + 14);
      *((void *)v72 + 13) = *((void *)v73 + 13);
      *((void *)v72 + 14) = v144;
      uint64_t v145 = *((void *)v73 + 16);
      *((void *)v72 + 15) = *((void *)v73 + 15);
      *((void *)v72 + 16) = v145;
      *((void *)v72 + 17) = *((void *)v73 + 17);
      *((_WORD *)v72 + 72) = *((_WORD *)v73 + 72);
      uint64_t v146 = *((void *)v73 + 20);
      *((void *)v72 + 19) = *((void *)v73 + 19);
      *((void *)v72 + 20) = v146;
      uint64_t v147 = *((void *)v73 + 21);
      uint64_t v775 = *((void *)v73 + 22);
      uint64_t v148 = *((void *)v73 + 23);
      uint64_t v149 = *((void *)v73 + 24);
      uint64_t v150 = *((void *)v73 + 25);
      uint64_t v151 = *((void *)v73 + 26);
      unsigned int v152 = v73[216];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247FE41AC(v147, v775, v148, v149, v150, v151, v152);
      *((void *)v72 + 21) = v147;
      *((void *)v72 + 22) = v775;
      *((void *)v72 + 23) = v148;
      *((void *)v72 + 24) = v149;
      *((void *)v72 + 25) = v150;
      *((void *)v72 + 26) = v151;
      v72[216] = v152;
      uint64_t v153 = *((void *)v73 + 29);
      if (v153)
      {
        *((void *)v72 + 28) = *((void *)v73 + 28);
        *((void *)v72 + 29) = v153;
        uint64_t v154 = *((void *)v73 + 31);
        *((void *)v72 + 30) = *((void *)v73 + 30);
        *((void *)v72 + 31) = v154;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
      }
      else
      {
        long long v183 = *((_OWORD *)v73 + 15);
        *((_OWORD *)v72 + 14) = *((_OWORD *)v73 + 14);
        *((_OWORD *)v72 + 15) = v183;
      }
      uint64_t v184 = *((void *)v73 + 33);
      *((void *)v72 + 32) = *((void *)v73 + 32);
      *((void *)v72 + 33) = v184;
      uint64_t v185 = *((void *)v73 + 35);
      *((void *)v72 + 34) = *((void *)v73 + 34);
      *((void *)v72 + 35) = v185;
      uint64_t v742 = type metadata accessor for SetupModel();
      uint64_t v186 = *(int *)(v742 + 32);
      uint64_t v187 = &v72[v186];
      uint64_t v188 = &v73[v186];
      uint64_t v189 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v673 = *((void *)v189 - 1);
      uint64_t v190 = *(unsigned int (**)(char *, uint64_t, int *))(v673 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v728 = v190;
      uint64_t v756 = v189;
      v776 = v188;
      if (v190(v188, 1, v189))
      {
        uint64_t v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v187, v188, *(void *)(*(void *)(v191 - 8) + 64));
      }
      else
      {
        uint64_t v274 = *((void *)v188 + 1);
        *(void *)uint64_t v187 = *(void *)v188;
        *((void *)v187 + 1) = v274;
        uint64_t v275 = *((void *)v188 + 3);
        *((void *)v187 + 2) = *((void *)v188 + 2);
        *((void *)v187 + 3) = v275;
        uint64_t v276 = *((void *)v188 + 5);
        *((void *)v187 + 4) = *((void *)v188 + 4);
        *((void *)v187 + 5) = v276;
        uint64_t v277 = *((void *)v188 + 7);
        *((void *)v187 + 6) = *((void *)v188 + 6);
        *((void *)v187 + 7) = v277;
        uint64_t v278 = *((void *)v188 + 8);
        uint64_t v279 = *((void *)v188 + 9);
        *((void *)v187 + 8) = v278;
        *((void *)v187 + 9) = v279;
        uint64_t v280 = v189[5];
        uint64_t v765 = &v187[v280];
        v722 = &v776[v280];
        uint64_t v281 = sub_248174700();
        uint64_t v716 = *(void (**)(char *, char *, uint64_t))(*(void *)(v281 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v716(v765, v722, v281);
        uint64_t v282 = v189[6];
        uint64_t v283 = &v187[v282];
        uint64_t v284 = &v776[v282];
        uint64_t v285 = *((void *)v284 + 1);
        uint64_t v286 = *((void *)v284 + 2);
        uint64_t v287 = *((void *)v284 + 3);
        uint64_t v288 = *((void *)v284 + 4);
        uint64_t v707 = *((void *)v284 + 5);
        uint64_t v717 = *(void *)v284;
        uint64_t v289 = *((void *)v284 + 6);
        uint64_t v697 = *((void *)v284 + 7);
        uint64_t v723 = *((void *)v284 + 8);
        LOBYTE(v765) = v284[72];
        sub_247FABF8C(*(void *)v284, v285, v286, v287, v288, v707, v289, v697, v723, (char)v765);
        *(void *)uint64_t v283 = v717;
        *((void *)v283 + 1) = v285;
        *((void *)v283 + 2) = v286;
        *((void *)v283 + 3) = v287;
        *((void *)v283 + 4) = v288;
        *((void *)v283 + 5) = v707;
        *((void *)v283 + 6) = v289;
        uint64_t v188 = v776;
        *((void *)v283 + 7) = v697;
        *((void *)v283 + 8) = v723;
        v283[72] = (char)v765;
        *(void *)&v187[v189[7]] = *(void *)&v776[v189[7]];
        uint64_t v290 = *(void (**)(char *, void, uint64_t, int *))(v673 + 56);
        swift_bridgeObjectRetain();
        v290(v187, 0, 1, v189);
      }
      uint64_t v291 = (int *)type metadata accessor for AuthenticationModel();
      uint64_t v292 = v291[5];
      v293 = &v187[v292];
      v294 = &v188[v292];
      uint64_t v295 = *((void *)v294 + 1);
      if (v295)
      {
        *(void *)v293 = *(void *)v294;
        *((void *)v293 + 1) = v295;
        uint64_t v296 = *((void *)v294 + 3);
        *((void *)v293 + 2) = *((void *)v294 + 2);
        *((void *)v293 + 3) = v296;
        uint64_t v297 = *((void *)v294 + 5);
        *((void *)v293 + 4) = *((void *)v294 + 4);
        *((void *)v293 + 5) = v297;
        uint64_t v298 = *((void *)v294 + 7);
        *((void *)v293 + 6) = *((void *)v294 + 6);
        *((void *)v293 + 7) = v298;
        uint64_t v299 = *((void *)v294 + 9);
        *((void *)v293 + 8) = *((void *)v294 + 8);
        *((void *)v293 + 9) = v299;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v358 = *((_OWORD *)v294 + 3);
        *((_OWORD *)v293 + 2) = *((_OWORD *)v294 + 2);
        *((_OWORD *)v293 + 3) = v358;
        *((_OWORD *)v293 + 4) = *((_OWORD *)v294 + 4);
        long long v359 = *((_OWORD *)v294 + 1);
        *(_OWORD *)v293 = *(_OWORD *)v294;
        *((_OWORD *)v293 + 1) = v359;
      }
      v187[v291[6]] = v188[v291[6]];
      uint64_t v360 = v291[7];
      uint64_t v361 = &v187[v360];
      long long v362 = &v188[v360];
      uint64_t v363 = *((void *)v362 + 1);
      *(void *)uint64_t v361 = *(void *)v362;
      *((void *)v361 + 1) = v363;
      *(void *)&v187[v291[8]] = *(void *)&v188[v291[8]];
      v187[v291[9]] = v188[v291[9]];
      uint64_t v364 = v291[10];
      v365 = &v187[v364];
      v366 = &v188[v364];
      uint64_t v367 = (void *)*((void *)v366 + 1);
      v711 = *(void **)v366;
      v719 = v291;
      uint64_t v368 = (void *)*((void *)v366 + 2);
      v369 = (void *)*((void *)v366 + 3);
      uint64_t v725 = v187;
      uint64_t v693 = (void *)*((void *)v366 + 4);
      uint64_t v766 = (void *)*((void *)v366 + 5);
      uint64_t v701 = *((void *)v366 + 6);
      v370 = (void *)*((void *)v366 + 8);
      v689 = (void *)*((void *)v366 + 7);
      v371 = (void *)*((void *)v366 + 9);
      char v372 = v366[80];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247F986A0(v711, v367, v368, v369, v693, v766, v701, v689, v370, v371, v372);
      *(void *)v365 = v711;
      *((void *)v365 + 1) = v367;
      *((void *)v365 + 2) = v368;
      *((void *)v365 + 3) = v369;
      *((void *)v365 + 4) = v693;
      *((void *)v365 + 5) = v766;
      *((void *)v365 + 6) = v701;
      *((void *)v365 + 7) = v689;
      *((void *)v365 + 8) = v370;
      *((void *)v365 + 9) = v371;
      v365[80] = v372;
      uint64_t v373 = v719[11];
      uint64_t v374 = (void *)((char *)v725 + v373);
      v375 = &v776[v373];
      if (*(void *)v375)
      {
        uint64_t v376 = *((void *)v375 + 1);
        *uint64_t v374 = *(void *)v375;
        v374[1] = v376;
        swift_retain();
      }
      else
      {
        *(_OWORD *)uint64_t v374 = *(_OWORD *)v375;
      }
      uint64_t v389 = *(int *)(v742 + 36);
      uint64_t v390 = &v72[v389];
      v391 = &v73[v389];
      if (v728(&v73[v389], 1, v756))
      {
        uint64_t v392 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v390, v391, *(void *)(*(void *)(v392 - 8) + 64));
      }
      else
      {
        uint64_t v480 = *((void *)v391 + 1);
        *(void *)uint64_t v390 = *(void *)v391;
        *((void *)v390 + 1) = v480;
        uint64_t v481 = *((void *)v391 + 3);
        *((void *)v390 + 2) = *((void *)v391 + 2);
        *((void *)v390 + 3) = v481;
        uint64_t v482 = *((void *)v391 + 5);
        *((void *)v390 + 4) = *((void *)v391 + 4);
        *((void *)v390 + 5) = v482;
        uint64_t v483 = *((void *)v391 + 7);
        *((void *)v390 + 6) = *((void *)v391 + 6);
        *((void *)v390 + 7) = v483;
        uint64_t v484 = *((void *)v391 + 9);
        *((void *)v390 + 8) = *((void *)v391 + 8);
        *((void *)v390 + 9) = v484;
        uint64_t v485 = v756[5];
        v769 = &v391[v485];
        v777 = &v390[v485];
        uint64_t v486 = sub_248174700();
        v751 = *(void (**)(char *, char *, uint64_t))(*(void *)(v486 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v751(v777, v769, v486);
        uint64_t v487 = v756[6];
        uint64_t v488 = &v390[v487];
        uint64_t v489 = &v391[v487];
        uint64_t v490 = *((void *)v489 + 1);
        uint64_t v752 = *(void *)v489;
        uint64_t v491 = *((void *)v489 + 2);
        uint64_t v492 = *((void *)v489 + 3);
        uint64_t v493 = *((void *)v489 + 4);
        uint64_t v494 = *((void *)v489 + 5);
        uint64_t v495 = *((void *)v489 + 6);
        uint64_t v496 = *((void *)v489 + 7);
        uint64_t v770 = *((void *)v489 + 8);
        LOBYTE(v777) = v489[72];
        sub_247FABF8C(*(void *)v489, v490, v491, v492, v493, v494, v495, v496, v770, (char)v777);
        *(void *)uint64_t v488 = v752;
        *((void *)v488 + 1) = v490;
        *((void *)v488 + 2) = v491;
        *((void *)v488 + 3) = v492;
        *((void *)v488 + 4) = v493;
        *((void *)v488 + 5) = v494;
        *((void *)v488 + 6) = v495;
        *((void *)v488 + 7) = v496;
        *((void *)v488 + 8) = v770;
        v488[72] = (char)v777;
        *(void *)&v390[v756[7]] = *(void *)&v391[v756[7]];
        uint64_t v497 = *(void (**)(char *, void, uint64_t, int *))(v673 + 56);
        swift_bridgeObjectRetain();
        v497(v390, 0, 1, v756);
      }
      uint64_t v498 = (int *)type metadata accessor for SignInModel();
      uint64_t v499 = v498[5];
      uint64_t v500 = &v390[v499];
      uint64_t v501 = &v391[v499];
      uint64_t v502 = *((void *)v501 + 1);
      if (v502)
      {
        *(void *)uint64_t v500 = *(void *)v501;
        *((void *)v500 + 1) = v502;
        uint64_t v503 = *((void *)v501 + 3);
        *((void *)v500 + 2) = *((void *)v501 + 2);
        *((void *)v500 + 3) = v503;
        uint64_t v504 = *((void *)v501 + 5);
        *((void *)v500 + 4) = *((void *)v501 + 4);
        *((void *)v500 + 5) = v504;
        uint64_t v505 = *((void *)v501 + 7);
        *((void *)v500 + 6) = *((void *)v501 + 6);
        *((void *)v500 + 7) = v505;
        uint64_t v506 = *((void *)v501 + 9);
        *((void *)v500 + 8) = *((void *)v501 + 8);
        *((void *)v500 + 9) = v506;
        uint64_t v507 = (uint64_t *)(v501 + 80);
        unint64_t v508 = *((void *)v501 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v508 >> 60 == 15)
        {
          *((_OWORD *)v500 + 5) = *(_OWORD *)v507;
        }
        else
        {
          uint64_t v631 = *v507;
          sub_247FB6C20(*v507, v508);
          *((void *)v500 + 10) = v631;
          *((void *)v500 + 11) = v508;
        }
      }
      else
      {
        long long v518 = *((_OWORD *)v501 + 3);
        *((_OWORD *)v500 + 2) = *((_OWORD *)v501 + 2);
        *((_OWORD *)v500 + 3) = v518;
        long long v519 = *((_OWORD *)v501 + 5);
        *((_OWORD *)v500 + 4) = *((_OWORD *)v501 + 4);
        *((_OWORD *)v500 + 5) = v519;
        long long v520 = *((_OWORD *)v501 + 1);
        *(_OWORD *)uint64_t v500 = *(_OWORD *)v501;
        *((_OWORD *)v500 + 1) = v520;
      }
      *(void *)&v390[v498[6]] = *(void *)&v391[v498[6]];
      *(void *)&v390[v498[7]] = *(void *)&v391[v498[7]];
      v390[v498[8]] = v391[v498[8]];
      v390[v498[9]] = v391[v498[9]];
      uint64_t v632 = v498[10];
      uint64_t v633 = &v390[v632];
      uint64_t v634 = &v391[v632];
      uint64_t v635 = *(void *)&v391[v632 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v635)
      {
        *(void *)uint64_t v633 = *(void *)v634;
        *((void *)v633 + 1) = v635;
        uint64_t v636 = *((void *)v634 + 2);
        uint64_t v637 = *((void *)v634 + 3);
        *((void *)v633 + 2) = v636;
        *((void *)v633 + 3) = v637;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v638 = *((_OWORD *)v634 + 1);
        *(_OWORD *)uint64_t v633 = *(_OWORD *)v634;
        *((_OWORD *)v633 + 1) = v638;
      }
      uint64_t v639 = v498[11];
      uint64_t v640 = &v390[v639];
      uint64_t v641 = &v391[v639];
      uint64_t v642 = *((void *)v641 + 1);
      *(void *)uint64_t v640 = *(void *)v641;
      *((void *)v640 + 1) = v642;
      uint64_t v643 = v498[12];
      uint64_t v644 = *(void **)&v391[v643];
      *(void *)&v390[v643] = v644;
      uint64_t v645 = v498[13];
      v646 = &v390[v645];
      uint64_t v647 = &v391[v645];
      uint64_t v648 = *(void *)v647;
      uint64_t v649 = *((void *)v647 + 1);
      char v650 = v647[16];
      swift_bridgeObjectRetain();
      id v651 = v644;
      sub_247FE42A8(v648, v649, v650);
      *(void *)v646 = v648;
      *((void *)v646 + 1) = v649;
      v646[16] = v650;
      uint64_t v652 = v498[14];
      uint64_t v653 = &v390[v652];
      uint64_t v654 = &v391[v652];
      uint64_t v655 = *((void *)v654 + 1);
      *(void *)uint64_t v653 = *(void *)v654;
      *((void *)v653 + 1) = v655;
      v390[v498[15]] = v391[v498[15]];
      uint64_t v656 = v498[16];
      uint64_t v657 = &v390[v656];
      v658 = &v391[v656];
      unint64_t v659 = *(void *)&v391[v656 + 8];
      swift_bridgeObjectRetain();
      if (v659 >= 3)
      {
        *(void *)uint64_t v657 = *(void *)v658;
        *((void *)v657 + 1) = v659;
        uint64_t v661 = *((void *)v658 + 3);
        *((void *)v657 + 2) = *((void *)v658 + 2);
        *((void *)v657 + 3) = v661;
        v657[32] = v658[32];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v660 = *((_OWORD *)v658 + 1);
        *(_OWORD *)uint64_t v657 = *(_OWORD *)v658;
        *((_OWORD *)v657 + 1) = v660;
        v657[32] = v658[32];
      }
      a1 = v781;
      uint64_t v662 = *(int *)(v675 + 24);
      v553 = (char *)v681 + v662;
      unint64_t v554 = &v682[v662];
      unsigned int v555 = v554[40];
      if (v555 <= 0xFA)
      {
LABEL_136:
        uint64_t v664 = *(void *)v554;
        uint64_t v665 = *((void *)v554 + 1);
        uint64_t v666 = *((void *)v554 + 2);
        uint64_t v667 = *((void *)v554 + 3);
        uint64_t v668 = *((void *)v554 + 4);
        sub_247FE42BC(*(void *)v554, v665, v666, v667, v668, v554[40]);
        *(void *)v553 = v664;
        *((void *)v553 + 1) = v665;
        *((void *)v553 + 2) = v666;
        *((void *)v553 + 3) = v667;
        *((void *)v553 + 4) = v668;
        v553[40] = v555;
      }
      else
      {
        long long v663 = *((_OWORD *)v554 + 1);
        *(_OWORD *)v553 = *(_OWORD *)v554;
        *((_OWORD *)v553 + 1) = v663;
        *(_OWORD *)(v553 + 25) = *(_OWORD *)(v554 + 25);
      }
      goto LABEL_137;
    case 6u:
      uint64_t v81 = *a2;
      uint64_t v82 = a2[1];
      uint64_t v83 = a2[2];
      uint64_t v84 = a2[3];
      uint64_t v85 = a2[4];
      char v86 = *((unsigned char *)a2 + 40);
      sub_247FE42BC(*a2, v82, v83, v84, v85, v86);
      *a1 = v81;
      a1[1] = v82;
      a1[2] = v83;
      a1[3] = v84;
      a1[4] = v85;
      *((unsigned char *)a1 + 40) = v86;
LABEL_137:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for MachRepairMessage(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  if ((void *)a1 != a2)
  {
    sub_247FEFB38(a1, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v3 = *a2;
        v3[1] = a2[1];
        v3[2] = a2[2];
        v3[3] = a2[3];
        v3[4] = a2[4];
        v3[5] = a2[5];
        v3[6] = a2[6];
        v3[7] = a2[7];
        v3[8] = a2[8];
        v3[9] = a2[9];
        uint64_t v546 = type metadata accessor for RepairModel();
        uint64_t v6 = *(int *)(v546 + 20);
        uint64_t v644 = v3;
        uint64_t v7 = (char *)v3 + v6;
        long long v638 = a2;
        uint64_t v8 = (char *)a2 + v6;
        *((unsigned char *)v3 + v6) = *((unsigned char *)a2 + v6);
        uint64_t v10 = *(void **)((char *)a2 + v6 + 8);
        int v9 = *(void **)((char *)a2 + v6 + 16);
        uint64_t v11 = *(void *)((char *)a2 + v6 + 24);
        uint64_t v12 = *(unsigned __int16 *)((char *)a2 + v6 + 36);
        uint64_t v13 = *(unsigned int *)((char *)a2 + v6 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE4184(v10, v9, v11, v13 | (v12 << 32));
        *((void *)v7 + 1) = v10;
        *((void *)v7 + 2) = v9;
        *((void *)v7 + 3) = v11;
        *((_WORD *)v7 + 18) = v12;
        *((_DWORD *)v7 + 8) = v13;
        unsigned int v14 = v8[88];
        if (v14 <= 0xF9)
        {
          uint64_t v68 = *((void *)v8 + 5);
          uint64_t v69 = *((void *)v8 + 6);
          uint64_t v70 = *((void *)v8 + 7);
          uint64_t v71 = *((void *)v8 + 8);
          uint64_t v72 = *((void *)v8 + 9);
          uint64_t v73 = *((void *)v8 + 10);
          sub_247FA9804(v68, v69, v70, v71, v72, v73, v8[88]);
          *((void *)v7 + 5) = v68;
          *((void *)v7 + 6) = v69;
          *((void *)v7 + 7) = v70;
          *((void *)v7 + 8) = v71;
          *((void *)v7 + 9) = v72;
          *((void *)v7 + 10) = v73;
          v7[88] = v14;
        }
        else
        {
          long long v15 = *(_OWORD *)(v8 + 40);
          long long v16 = *(_OWORD *)(v8 + 56);
          long long v17 = *(_OWORD *)(v8 + 72);
          v7[88] = v8[88];
          *(_OWORD *)(v7 + 56) = v16;
          *(_OWORD *)(v7 + 72) = v17;
          *(_OWORD *)(v7 + 40) = v15;
        }
        v7[96] = v8[96];
        v7[97] = v8[97];
        *((void *)v7 + 13) = *((void *)v8 + 13);
        *((void *)v7 + 14) = *((void *)v8 + 14);
        *((void *)v7 + 15) = *((void *)v8 + 15);
        *((void *)v7 + 16) = *((void *)v8 + 16);
        uint64_t v74 = *((void *)v8 + 17);
        v7[144] = v8[144];
        *((void *)v7 + 17) = v74;
        v7[145] = v8[145];
        *((void *)v7 + 19) = *((void *)v8 + 19);
        *((void *)v7 + 20) = *((void *)v8 + 20);
        uint64_t v75 = *((void *)v8 + 22);
        uint64_t v629 = *((void *)v8 + 21);
        uint64_t v76 = *((void *)v8 + 23);
        uint64_t v77 = *((void *)v8 + 24);
        uint64_t v79 = *((void *)v8 + 25);
        uint64_t v78 = *((void *)v8 + 26);
        unsigned int v80 = v8[216];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE41AC(v629, v75, v76, v77, v79, v78, v80);
        *((void *)v7 + 21) = v629;
        *((void *)v7 + 22) = v75;
        *((void *)v7 + 23) = v76;
        *((void *)v7 + 24) = v77;
        *((void *)v7 + 25) = v79;
        *((void *)v7 + 26) = v78;
        v7[216] = v80;
        if (*((void *)v8 + 29))
        {
          *((void *)v7 + 28) = *((void *)v8 + 28);
          *((void *)v7 + 29) = *((void *)v8 + 29);
          *((void *)v7 + 30) = *((void *)v8 + 30);
          *((void *)v7 + 31) = *((void *)v8 + 31);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v121 = *((_OWORD *)v8 + 15);
          *((_OWORD *)v7 + 14) = *((_OWORD *)v8 + 14);
          *((_OWORD *)v7 + 15) = v121;
        }
        *((void *)v7 + 32) = *((void *)v8 + 32);
        *((void *)v7 + 33) = *((void *)v8 + 33);
        *((void *)v7 + 34) = *((void *)v8 + 34);
        *((void *)v7 + 35) = *((void *)v8 + 35);
        uint64_t v594 = type metadata accessor for SetupModel();
        uint64_t v122 = *(int *)(v594 + 32);
        uint64_t v123 = &v7[v122];
        uint64_t v124 = &v8[v122];
        uint64_t v125 = type metadata accessor for IdMSAccount();
        uint64_t v544 = *(void *)(v125 - 8);
        uint64_t v126 = *(unsigned int (**)(char *, uint64_t, int *))(v544 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v582 = v126;
        v622 = (int *)v125;
        uint64_t v632 = v124;
        uint64_t v600 = v123;
        if (v126(v124, 1, (int *)v125))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v123 = *(void *)v124;
          *((void *)v123 + 1) = *((void *)v124 + 1);
          *((void *)v123 + 2) = *((void *)v124 + 2);
          *((void *)v123 + 3) = *((void *)v124 + 3);
          *((void *)v123 + 4) = *((void *)v124 + 4);
          *((void *)v123 + 5) = *((void *)v124 + 5);
          *((void *)v123 + 6) = *((void *)v124 + 6);
          *((void *)v123 + 7) = *((void *)v124 + 7);
          *((void *)v123 + 8) = *((void *)v124 + 8);
          *((void *)v123 + 9) = *((void *)v124 + 9);
          uint64_t v149 = *(int *)(v125 + 20);
          uint64_t v612 = &v123[v149];
          v572 = &v124[v149];
          uint64_t v150 = sub_248174700();
          uint64_t v151 = *(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v151(v612, v572, v150);
          uint64_t v152 = v622[6];
          uint64_t v153 = &v123[v152];
          uint64_t v154 = &v124[v152];
          uint64_t v155 = *(void *)v154;
          uint64_t v156 = *((void *)v154 + 1);
          uint64_t v158 = *((void *)v154 + 2);
          uint64_t v157 = *((void *)v154 + 3);
          uint64_t v159 = *((void *)v154 + 4);
          uint64_t v160 = *((void *)v154 + 5);
          uint64_t v161 = *((void *)v154 + 6);
          uint64_t v564 = *((void *)v154 + 7);
          uint64_t v573 = *((void *)v154 + 8);
          LOBYTE(v612) = v154[72];
          sub_247FABF8C(*(void *)v154, v156, v158, v157, v159, v160, v161, v564, v573, (char)v612);
          *(void *)uint64_t v153 = v155;
          *((void *)v153 + 1) = v156;
          *((void *)v153 + 2) = v158;
          *((void *)v153 + 3) = v157;
          *((void *)v153 + 4) = v159;
          *((void *)v153 + 5) = v160;
          *((void *)v153 + 6) = v161;
          *((void *)v153 + 7) = v564;
          *((void *)v153 + 8) = v573;
          v153[72] = (char)v612;
          uint64_t v123 = v600;
          uint64_t v124 = v632;
          *(void *)&v600[v622[7]] = *(void *)&v632[v622[7]];
          uint64_t v162 = *(void (**)(char *, void, uint64_t, int *))(v544 + 56);
          swift_bridgeObjectRetain();
          v162(v600, 0, 1, v622);
        }
        v163 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v164 = v163[5];
        long long v165 = &v123[v164];
        uint64_t v166 = &v124[v164];
        if (*((void *)v166 + 1))
        {
          *(void *)long long v165 = *(void *)v166;
          *((void *)v165 + 1) = *((void *)v166 + 1);
          *((void *)v165 + 2) = *((void *)v166 + 2);
          *((void *)v165 + 3) = *((void *)v166 + 3);
          *((void *)v165 + 4) = *((void *)v166 + 4);
          *((void *)v165 + 5) = *((void *)v166 + 5);
          *((void *)v165 + 6) = *((void *)v166 + 6);
          *((void *)v165 + 7) = *((void *)v166 + 7);
          *((void *)v165 + 8) = *((void *)v166 + 8);
          *((void *)v165 + 9) = *((void *)v166 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)long long v165 = *(_OWORD *)v166;
          long long v215 = *((_OWORD *)v166 + 1);
          long long v216 = *((_OWORD *)v166 + 2);
          long long v217 = *((_OWORD *)v166 + 4);
          *((_OWORD *)v165 + 3) = *((_OWORD *)v166 + 3);
          *((_OWORD *)v165 + 4) = v217;
          *((_OWORD *)v165 + 1) = v215;
          *((_OWORD *)v165 + 2) = v216;
        }
        v123[v163[6]] = v124[v163[6]];
        uint64_t v218 = v163[7];
        uint64_t v219 = &v123[v218];
        uint64_t v220 = &v124[v218];
        *(void *)uint64_t v219 = *(void *)v220;
        *((void *)v219 + 1) = *((void *)v220 + 1);
        *(void *)&v123[v163[8]] = *(void *)&v124[v163[8]];
        v123[v163[9]] = v124[v163[9]];
        uint64_t v221 = v163[10];
        uint64_t v222 = &v123[v221];
        uint64_t v223 = &v124[v221];
        uint64_t v224 = (void *)*((void *)v223 + 1);
        uint64_t v568 = *(void **)v223;
        uint64_t v579 = v163;
        uint64_t v225 = (void *)*((void *)v223 + 2);
        uint64_t v226 = (void *)*((void *)v223 + 3);
        uint64_t v613 = (void *)*((void *)v223 + 4);
        uint64_t v554 = *((void *)v223 + 6);
        unsigned int v560 = (void *)*((void *)v223 + 5);
        uint64_t v227 = (void *)*((void *)v223 + 8);
        uint64_t v551 = (void *)*((void *)v223 + 7);
        uint64_t v228 = (void *)*((void *)v223 + 9);
        char v229 = v223[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247F986A0(v568, v224, v225, v226, v613, v560, v554, v551, v227, v228, v229);
        *(void *)uint64_t v222 = v568;
        *((void *)v222 + 1) = v224;
        *((void *)v222 + 2) = v225;
        *((void *)v222 + 3) = v226;
        *((void *)v222 + 4) = v613;
        *((void *)v222 + 5) = v560;
        *((void *)v222 + 6) = v554;
        *((void *)v222 + 7) = v551;
        *((void *)v222 + 8) = v227;
        *((void *)v222 + 9) = v228;
        v222[80] = v229;
        uint64_t v230 = v579[11];
        uint64_t v231 = &v600[v230];
        uint64_t v232 = &v632[v230];
        if (*(void *)v232)
        {
          uint64_t v233 = *((void *)v232 + 1);
          *(void *)uint64_t v231 = *(void *)v232;
          *((void *)v231 + 1) = v233;
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
        }
        uint64_t v293 = *(int *)(v594 + 36);
        v294 = &v7[v293];
        uint64_t v295 = &v8[v293];
        if (v582(&v8[v293], 1, v622))
        {
          uint64_t v296 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v294, v295, *(void *)(*(void *)(v296 - 8) + 64));
        }
        else
        {
          *(void *)v294 = *(void *)v295;
          *((void *)v294 + 1) = *((void *)v295 + 1);
          *((void *)v294 + 2) = *((void *)v295 + 2);
          *((void *)v294 + 3) = *((void *)v295 + 3);
          *((void *)v294 + 4) = *((void *)v295 + 4);
          *((void *)v294 + 5) = *((void *)v295 + 5);
          *((void *)v294 + 6) = *((void *)v295 + 6);
          *((void *)v294 + 7) = *((void *)v295 + 7);
          *((void *)v294 + 8) = *((void *)v295 + 8);
          *((void *)v294 + 9) = *((void *)v295 + 9);
          uint64_t v309 = v622[5];
          uint64_t v636 = &v294[v309];
          uint64_t v614 = &v295[v309];
          uint64_t v310 = sub_248174700();
          v605 = *(void (**)(char *, char *, uint64_t))(*(void *)(v310 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v605(v636, v614, v310);
          uint64_t v311 = v622[6];
          v312 = &v294[v311];
          v313 = &v295[v311];
          uint64_t v314 = *((void *)v313 + 1);
          uint64_t v315 = *((void *)v313 + 2);
          uint64_t v316 = *((void *)v313 + 3);
          uint64_t v317 = *((void *)v313 + 4);
          uint64_t v318 = *((void *)v313 + 5);
          uint64_t v319 = *((void *)v313 + 6);
          uint64_t v320 = *((void *)v313 + 7);
          uint64_t v606 = *(void *)v313;
          uint64_t v615 = *((void *)v313 + 8);
          LOBYTE(v636) = v313[72];
          sub_247FABF8C(*(void *)v313, v314, v315, v316, v317, v318, v319, v320, v615, (char)v636);
          *(void *)v312 = v606;
          *((void *)v312 + 1) = v314;
          *((void *)v312 + 2) = v315;
          *((void *)v312 + 3) = v316;
          *((void *)v312 + 4) = v317;
          *((void *)v312 + 5) = v318;
          *((void *)v312 + 6) = v319;
          *((void *)v312 + 7) = v320;
          *((void *)v312 + 8) = v615;
          v312[72] = (char)v636;
          *(void *)&v294[v622[7]] = *(void *)&v295[v622[7]];
          uint64_t v321 = *(void (**)(char *, void, uint64_t, int *))(v544 + 56);
          swift_bridgeObjectRetain();
          v321(v294, 0, 1, v622);
        }
        uint64_t v322 = (int *)type metadata accessor for SignInModel();
        uint64_t v323 = v322[5];
        uint64_t v324 = &v294[v323];
        uint64_t v325 = &v295[v323];
        if (*((void *)v325 + 1))
        {
          *(void *)uint64_t v324 = *(void *)v325;
          *((void *)v324 + 1) = *((void *)v325 + 1);
          *((void *)v324 + 2) = *((void *)v325 + 2);
          *((void *)v324 + 3) = *((void *)v325 + 3);
          *((void *)v324 + 4) = *((void *)v325 + 4);
          *((void *)v324 + 5) = *((void *)v325 + 5);
          *((void *)v324 + 6) = *((void *)v325 + 6);
          *((void *)v324 + 7) = *((void *)v325 + 7);
          *((void *)v324 + 8) = *((void *)v325 + 8);
          *((void *)v324 + 9) = *((void *)v325 + 9);
          v326 = (uint64_t *)(v325 + 80);
          unint64_t v327 = *((void *)v325 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v327 >> 60 == 15)
          {
            *((_OWORD *)v324 + 5) = *(_OWORD *)v326;
          }
          else
          {
            uint64_t v401 = *v326;
            sub_247FB6C20(*v326, v327);
            *((void *)v324 + 10) = v401;
            *((void *)v324 + 11) = v327;
          }
        }
        else
        {
          long long v385 = *((_OWORD *)v325 + 1);
          *(_OWORD *)uint64_t v324 = *(_OWORD *)v325;
          *((_OWORD *)v324 + 1) = v385;
          long long v386 = *((_OWORD *)v325 + 2);
          long long v387 = *((_OWORD *)v325 + 3);
          long long v388 = *((_OWORD *)v325 + 5);
          *((_OWORD *)v324 + 4) = *((_OWORD *)v325 + 4);
          *((_OWORD *)v324 + 5) = v388;
          *((_OWORD *)v324 + 2) = v386;
          *((_OWORD *)v324 + 3) = v387;
        }
        *(void *)&v294[v322[6]] = *(void *)&v295[v322[6]];
        *(void *)&v294[v322[7]] = *(void *)&v295[v322[7]];
        v294[v322[8]] = v295[v322[8]];
        v294[v322[9]] = v295[v322[9]];
        uint64_t v402 = v322[10];
        uint64_t v403 = &v294[v402];
        uint64_t v404 = &v295[v402];
        uint64_t v405 = *(void *)&v295[v402 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v405)
        {
          *(void *)uint64_t v403 = *(void *)v404;
          *((void *)v403 + 1) = *((void *)v404 + 1);
          *((void *)v403 + 2) = *((void *)v404 + 2);
          *((void *)v403 + 3) = *((void *)v404 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v406 = *((_OWORD *)v404 + 1);
          *(_OWORD *)uint64_t v403 = *(_OWORD *)v404;
          *((_OWORD *)v403 + 1) = v406;
        }
        uint64_t v407 = v322[11];
        uint64_t v408 = &v294[v407];
        uint64_t v409 = &v295[v407];
        *(void *)uint64_t v408 = *(void *)v409;
        *((void *)v408 + 1) = *((void *)v409 + 1);
        uint64_t v410 = v322[12];
        uint64_t v411 = *(void **)&v295[v410];
        *(void *)&v294[v410] = v411;
        uint64_t v412 = v322[13];
        uint64_t v413 = &v294[v412];
        uint64_t v414 = &v295[v412];
        uint64_t v415 = *(void *)v414;
        uint64_t v416 = *((void *)v414 + 1);
        char v417 = v414[16];
        swift_bridgeObjectRetain();
        id v418 = v411;
        sub_247FE42A8(v415, v416, v417);
        *(void *)uint64_t v413 = v415;
        *((void *)v413 + 1) = v416;
        v413[16] = v417;
        uint64_t v419 = v322[14];
        uint64_t v420 = &v294[v419];
        unint64_t v421 = &v295[v419];
        *(void *)uint64_t v420 = *(void *)v421;
        *((void *)v420 + 1) = *((void *)v421 + 1);
        v294[v322[15]] = v295[v322[15]];
        uint64_t v422 = v322[16];
        uint64_t v423 = &v294[v422];
        uint64_t v424 = &v295[v422];
        unint64_t v425 = *(void *)&v295[v422 + 8];
        swift_bridgeObjectRetain();
        if (v425 >= 3)
        {
          *(void *)uint64_t v423 = *(void *)v424;
          *((void *)v423 + 1) = *((void *)v424 + 1);
          *((void *)v423 + 2) = *((void *)v424 + 2);
          *((void *)v423 + 3) = *((void *)v424 + 3);
          v423[32] = v424[32];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v426 = *(_OWORD *)v424;
          long long v427 = *((_OWORD *)v424 + 1);
          v423[32] = v424[32];
          *(_OWORD *)uint64_t v423 = v426;
          *((_OWORD *)v423 + 1) = v427;
        }
        uint64_t v3 = v644;
        uint64_t v428 = *(int *)(v546 + 24);
        uint64_t v429 = (char *)v644 + v428;
        uint64_t v430 = (char *)v638 + v428;
        unsigned int v431 = v430[40];
        if (v431 <= 0xFA) {
          goto LABEL_138;
        }
        long long v432 = *(_OWORD *)v430;
        long long v433 = *((_OWORD *)v430 + 1);
        *(_OWORD *)(v429 + 25) = *(_OWORD *)(v430 + 25);
        *(_OWORD *)uint64_t v429 = v432;
        *((_OWORD *)v429 + 1) = v433;
        goto LABEL_139;
      case 1u:
        *uint64_t v3 = *a2;
        v3[1] = a2[1];
        v3[2] = a2[2];
        v3[3] = a2[3];
        v3[4] = a2[4];
        v3[5] = a2[5];
        v3[6] = a2[6];
        v3[7] = a2[7];
        v3[8] = a2[8];
        v3[9] = a2[9];
        v3[10] = a2[10];
        uint64_t v18 = a2;
        uint64_t v19 = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19)
        {
          v3[11] = v18[11];
          v3[12] = v18[12];
          v3[13] = v18[13];
          v3[14] = v18[14];
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v120 = *(_OWORD *)(v18 + 13);
          *(_OWORD *)(v3 + 11) = *(_OWORD *)(v18 + 11);
          *(_OWORD *)(v3 + 13) = v120;
        }
        goto LABEL_139;
      case 2u:
        *uint64_t v3 = *a2;
        v3[1] = a2[1];
        v3[2] = a2[2];
        v3[3] = a2[3];
        v3[4] = a2[4];
        v3[5] = a2[5];
        v3[6] = a2[6];
        v3[7] = a2[7];
        v3[8] = a2[8];
        v3[9] = a2[9];
        uint64_t v547 = type metadata accessor for RepairModel();
        uint64_t v20 = *(int *)(v547 + 20);
        uint64_t v645 = v3;
        unsigned int v21 = (char *)v3 + v20;
        uint64_t v639 = a2;
        long long v22 = (char *)a2 + v20;
        *((unsigned char *)v3 + v20) = *((unsigned char *)a2 + v20);
        uint64_t v23 = *(void **)((char *)a2 + v20 + 8);
        uint64_t v24 = *(void **)((char *)a2 + v20 + 16);
        uint64_t v25 = *(void *)((char *)a2 + v20 + 24);
        uint64_t v26 = *(unsigned __int16 *)((char *)a2 + v20 + 36);
        uint64_t v27 = *(unsigned int *)((char *)a2 + v20 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE4184(v23, v24, v25, v27 | (v26 << 32));
        *((void *)v21 + 1) = v23;
        *((void *)v21 + 2) = v24;
        *((void *)v21 + 3) = v25;
        *((_WORD *)v21 + 18) = v26;
        *((_DWORD *)v21 + 8) = v27;
        unsigned int v28 = v22[88];
        if (v28 <= 0xF9)
        {
          uint64_t v81 = *((void *)v22 + 5);
          uint64_t v82 = *((void *)v22 + 6);
          uint64_t v83 = *((void *)v22 + 7);
          uint64_t v84 = *((void *)v22 + 8);
          uint64_t v85 = *((void *)v22 + 9);
          uint64_t v86 = *((void *)v22 + 10);
          sub_247FA9804(v81, v82, v83, v84, v85, v86, v22[88]);
          *((void *)v21 + 5) = v81;
          *((void *)v21 + 6) = v82;
          *((void *)v21 + 7) = v83;
          *((void *)v21 + 8) = v84;
          *((void *)v21 + 9) = v85;
          *((void *)v21 + 10) = v86;
          v21[88] = v28;
        }
        else
        {
          long long v29 = *(_OWORD *)(v22 + 40);
          long long v30 = *(_OWORD *)(v22 + 56);
          long long v31 = *(_OWORD *)(v22 + 72);
          v21[88] = v22[88];
          *(_OWORD *)(v21 + 56) = v30;
          *(_OWORD *)(v21 + 72) = v31;
          *(_OWORD *)(v21 + 40) = v29;
        }
        v21[96] = v22[96];
        v21[97] = v22[97];
        *((void *)v21 + 13) = *((void *)v22 + 13);
        *((void *)v21 + 14) = *((void *)v22 + 14);
        *((void *)v21 + 15) = *((void *)v22 + 15);
        *((void *)v21 + 16) = *((void *)v22 + 16);
        uint64_t v87 = *((void *)v22 + 17);
        v21[144] = v22[144];
        *((void *)v21 + 17) = v87;
        v21[145] = v22[145];
        *((void *)v21 + 19) = *((void *)v22 + 19);
        *((void *)v21 + 20) = *((void *)v22 + 20);
        uint64_t v88 = *((void *)v22 + 22);
        uint64_t v630 = *((void *)v22 + 21);
        uint64_t v89 = *((void *)v22 + 23);
        uint64_t v90 = *((void *)v22 + 24);
        uint64_t v92 = *((void *)v22 + 25);
        uint64_t v91 = *((void *)v22 + 26);
        unsigned int v93 = v22[216];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE41AC(v630, v88, v89, v90, v92, v91, v93);
        *((void *)v21 + 21) = v630;
        *((void *)v21 + 22) = v88;
        *((void *)v21 + 23) = v89;
        *((void *)v21 + 24) = v90;
        *((void *)v21 + 25) = v92;
        *((void *)v21 + 26) = v91;
        v21[216] = v93;
        if (*((void *)v22 + 29))
        {
          *((void *)v21 + 28) = *((void *)v22 + 28);
          *((void *)v21 + 29) = *((void *)v22 + 29);
          *((void *)v21 + 30) = *((void *)v22 + 30);
          *((void *)v21 + 31) = *((void *)v22 + 31);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v128 = *((_OWORD *)v22 + 15);
          *((_OWORD *)v21 + 14) = *((_OWORD *)v22 + 14);
          *((_OWORD *)v21 + 15) = v128;
        }
        *((void *)v21 + 32) = *((void *)v22 + 32);
        *((void *)v21 + 33) = *((void *)v22 + 33);
        *((void *)v21 + 34) = *((void *)v22 + 34);
        *((void *)v21 + 35) = *((void *)v22 + 35);
        uint64_t v595 = type metadata accessor for SetupModel();
        uint64_t v129 = *(int *)(v595 + 32);
        uint64_t v130 = &v21[v129];
        uint64_t v131 = &v22[v129];
        uint64_t v132 = type metadata accessor for IdMSAccount();
        uint64_t v545 = *(void *)(v132 - 8);
        uint64_t v133 = *(unsigned int (**)(char *, uint64_t, int *))(v545 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v583 = v133;
        unint64_t v623 = (int *)v132;
        uint64_t v633 = v130;
        uint64_t v611 = v131;
        if (v133(v131, 1, (int *)v132))
        {
          uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v130, v131, *(void *)(*(void *)(v134 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v130 = *(void *)v131;
          *((void *)v130 + 1) = *((void *)v131 + 1);
          *((void *)v130 + 2) = *((void *)v131 + 2);
          *((void *)v130 + 3) = *((void *)v131 + 3);
          *((void *)v130 + 4) = *((void *)v131 + 4);
          *((void *)v130 + 5) = *((void *)v131 + 5);
          *((void *)v130 + 6) = *((void *)v131 + 6);
          *((void *)v130 + 7) = *((void *)v131 + 7);
          *((void *)v130 + 8) = *((void *)v131 + 8);
          *((void *)v130 + 9) = *((void *)v131 + 9);
          uint64_t v167 = *(int *)(v132 + 20);
          uint64_t v603 = &v130[v167];
          uint64_t v574 = &v131[v167];
          uint64_t v168 = sub_248174700();
          uint64_t v169 = *(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v169(v603, v574, v168);
          uint64_t v170 = v623[6];
          uint64_t v171 = &v130[v170];
          uint64_t v172 = &v611[v170];
          uint64_t v173 = *((void *)v172 + 1);
          uint64_t v175 = *((void *)v172 + 2);
          uint64_t v174 = *((void *)v172 + 3);
          uint64_t v177 = *((void *)v172 + 4);
          uint64_t v176 = *((void *)v172 + 5);
          uint64_t v179 = *((void *)v172 + 6);
          uint64_t v178 = *((void *)v172 + 7);
          uint64_t v565 = *(void *)v172;
          uint64_t v575 = *((void *)v172 + 8);
          LOBYTE(v603) = v172[72];
          sub_247FABF8C(*(void *)v172, v173, v175, v174, v177, v176, v179, v178, v575, (char)v603);
          *(void *)uint64_t v171 = v565;
          *((void *)v171 + 1) = v173;
          *((void *)v171 + 2) = v175;
          *((void *)v171 + 3) = v174;
          *((void *)v171 + 4) = v177;
          *((void *)v171 + 5) = v176;
          *((void *)v171 + 6) = v179;
          *((void *)v171 + 7) = v178;
          uint64_t v130 = v633;
          *((void *)v171 + 8) = v575;
          v171[72] = (char)v603;
          *(void *)&v633[v623[7]] = *(void *)&v611[v623[7]];
          uint64_t v180 = *(void (**)(char *, void, uint64_t, int *))(v545 + 56);
          swift_bridgeObjectRetain();
          uint64_t v131 = v611;
          v180(v633, 0, 1, v623);
        }
        v181 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v182 = v181[5];
        long long v183 = &v130[v182];
        uint64_t v184 = &v131[v182];
        if (*((void *)v184 + 1))
        {
          *(void *)long long v183 = *(void *)v184;
          *((void *)v183 + 1) = *((void *)v184 + 1);
          *((void *)v183 + 2) = *((void *)v184 + 2);
          *((void *)v183 + 3) = *((void *)v184 + 3);
          *((void *)v183 + 4) = *((void *)v184 + 4);
          *((void *)v183 + 5) = *((void *)v184 + 5);
          *((void *)v183 + 6) = *((void *)v184 + 6);
          *((void *)v183 + 7) = *((void *)v184 + 7);
          *((void *)v183 + 8) = *((void *)v184 + 8);
          *((void *)v183 + 9) = *((void *)v184 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)long long v183 = *(_OWORD *)v184;
          long long v234 = *((_OWORD *)v184 + 1);
          long long v235 = *((_OWORD *)v184 + 2);
          long long v236 = *((_OWORD *)v184 + 4);
          *((_OWORD *)v183 + 3) = *((_OWORD *)v184 + 3);
          *((_OWORD *)v183 + 4) = v236;
          *((_OWORD *)v183 + 1) = v234;
          *((_OWORD *)v183 + 2) = v235;
        }
        v130[v181[6]] = v131[v181[6]];
        uint64_t v237 = v181[7];
        uint64_t v238 = &v130[v237];
        uint64_t v239 = &v131[v237];
        *(void *)uint64_t v238 = *(void *)v239;
        *((void *)v238 + 1) = *((void *)v239 + 1);
        *(void *)&v130[v181[8]] = *(void *)&v131[v181[8]];
        v130[v181[9]] = v131[v181[9]];
        uint64_t v240 = v181[10];
        uint64_t v241 = &v130[v240];
        uint64_t v242 = &v131[v240];
        char v243 = (void *)*((void *)v242 + 1);
        uint64_t v569 = *(void **)v242;
        uint64_t v580 = v181;
        uint64_t v244 = (void *)*((void *)v242 + 2);
        uint64_t v245 = (void *)*((void *)v242 + 3);
        uint64_t v561 = (void *)*((void *)v242 + 4);
        uint64_t v604 = (void *)*((void *)v242 + 5);
        uint64_t v246 = (void *)*((void *)v242 + 8);
        uint64_t v552 = (void *)*((void *)v242 + 7);
        uint64_t v555 = *((void *)v242 + 6);
        uint64_t v247 = (void *)*((void *)v242 + 9);
        char v248 = v242[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247F986A0(v569, v243, v244, v245, v561, v604, v555, v552, v246, v247, v248);
        *(void *)uint64_t v241 = v569;
        *((void *)v241 + 1) = v243;
        *((void *)v241 + 2) = v244;
        *((void *)v241 + 3) = v245;
        *((void *)v241 + 4) = v561;
        *((void *)v241 + 5) = v604;
        *((void *)v241 + 6) = v555;
        *((void *)v241 + 7) = v552;
        *((void *)v241 + 8) = v246;
        *((void *)v241 + 9) = v247;
        v241[80] = v248;
        uint64_t v249 = v580[11];
        uint64_t v250 = &v633[v249];
        uint64_t v251 = &v611[v249];
        if (*(void *)v251)
        {
          uint64_t v252 = *((void *)v251 + 1);
          *(void *)uint64_t v250 = *(void *)v251;
          *((void *)v250 + 1) = v252;
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v250 = *(_OWORD *)v251;
        }
        uint64_t v297 = *(int *)(v595 + 36);
        uint64_t v298 = &v21[v297];
        uint64_t v299 = &v22[v297];
        if (v583(&v22[v297], 1, v623))
        {
          uint64_t v300 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v298, v299, *(void *)(*(void *)(v300 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v298 = *(void *)v299;
          *((void *)v298 + 1) = *((void *)v299 + 1);
          *((void *)v298 + 2) = *((void *)v299 + 2);
          *((void *)v298 + 3) = *((void *)v299 + 3);
          *((void *)v298 + 4) = *((void *)v299 + 4);
          *((void *)v298 + 5) = *((void *)v299 + 5);
          *((void *)v298 + 6) = *((void *)v299 + 6);
          *((void *)v298 + 7) = *((void *)v299 + 7);
          *((void *)v298 + 8) = *((void *)v299 + 8);
          *((void *)v298 + 9) = *((void *)v299 + 9);
          uint64_t v328 = v623[5];
          uint64_t v637 = &v298[v328];
          uint64_t v616 = &v299[v328];
          uint64_t v329 = sub_248174700();
          uint64_t v607 = *(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v607(v637, v616, v329);
          uint64_t v330 = v623[6];
          v331 = &v298[v330];
          v332 = &v299[v330];
          uint64_t v333 = *((void *)v332 + 1);
          uint64_t v334 = *((void *)v332 + 2);
          uint64_t v335 = *((void *)v332 + 3);
          uint64_t v336 = *((void *)v332 + 4);
          uint64_t v337 = *((void *)v332 + 5);
          uint64_t v338 = *((void *)v332 + 6);
          uint64_t v339 = *((void *)v332 + 7);
          uint64_t v608 = *(void *)v332;
          uint64_t v617 = *((void *)v332 + 8);
          LOBYTE(v637) = v332[72];
          sub_247FABF8C(*(void *)v332, v333, v334, v335, v336, v337, v338, v339, v617, (char)v637);
          *(void *)v331 = v608;
          *((void *)v331 + 1) = v333;
          *((void *)v331 + 2) = v334;
          *((void *)v331 + 3) = v335;
          *((void *)v331 + 4) = v336;
          *((void *)v331 + 5) = v337;
          *((void *)v331 + 6) = v338;
          *((void *)v331 + 7) = v339;
          *((void *)v331 + 8) = v617;
          v331[72] = (char)v637;
          *(void *)&v298[v623[7]] = *(void *)&v299[v623[7]];
          uint64_t v340 = *(void (**)(char *, void, uint64_t, int *))(v545 + 56);
          swift_bridgeObjectRetain();
          v340(v298, 0, 1, v623);
        }
        uint64_t v341 = (int *)type metadata accessor for SignInModel();
        uint64_t v342 = v341[5];
        uint64_t v343 = &v298[v342];
        uint64_t v344 = &v299[v342];
        if (*((void *)v344 + 1))
        {
          *(void *)uint64_t v343 = *(void *)v344;
          *((void *)v343 + 1) = *((void *)v344 + 1);
          *((void *)v343 + 2) = *((void *)v344 + 2);
          *((void *)v343 + 3) = *((void *)v344 + 3);
          *((void *)v343 + 4) = *((void *)v344 + 4);
          *((void *)v343 + 5) = *((void *)v344 + 5);
          *((void *)v343 + 6) = *((void *)v344 + 6);
          *((void *)v343 + 7) = *((void *)v344 + 7);
          *((void *)v343 + 8) = *((void *)v344 + 8);
          *((void *)v343 + 9) = *((void *)v344 + 9);
          v345 = (uint64_t *)(v344 + 80);
          unint64_t v346 = *((void *)v344 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v346 >> 60 == 15)
          {
            *((_OWORD *)v343 + 5) = *(_OWORD *)v345;
          }
          else
          {
            uint64_t v434 = *v345;
            sub_247FB6C20(*v345, v346);
            *((void *)v343 + 10) = v434;
            *((void *)v343 + 11) = v346;
          }
        }
        else
        {
          long long v389 = *((_OWORD *)v344 + 1);
          *(_OWORD *)uint64_t v343 = *(_OWORD *)v344;
          *((_OWORD *)v343 + 1) = v389;
          long long v390 = *((_OWORD *)v344 + 2);
          long long v391 = *((_OWORD *)v344 + 3);
          long long v392 = *((_OWORD *)v344 + 5);
          *((_OWORD *)v343 + 4) = *((_OWORD *)v344 + 4);
          *((_OWORD *)v343 + 5) = v392;
          *((_OWORD *)v343 + 2) = v390;
          *((_OWORD *)v343 + 3) = v391;
        }
        *(void *)&v298[v341[6]] = *(void *)&v299[v341[6]];
        *(void *)&v298[v341[7]] = *(void *)&v299[v341[7]];
        v298[v341[8]] = v299[v341[8]];
        v298[v341[9]] = v299[v341[9]];
        uint64_t v435 = v341[10];
        uint64_t v436 = &v298[v435];
        uint64_t v437 = &v299[v435];
        uint64_t v438 = *(void *)&v299[v435 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v438)
        {
          *(void *)uint64_t v436 = *(void *)v437;
          *((void *)v436 + 1) = *((void *)v437 + 1);
          *((void *)v436 + 2) = *((void *)v437 + 2);
          *((void *)v436 + 3) = *((void *)v437 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v439 = *((_OWORD *)v437 + 1);
          *(_OWORD *)uint64_t v436 = *(_OWORD *)v437;
          *((_OWORD *)v436 + 1) = v439;
        }
        uint64_t v440 = v341[11];
        uint64_t v441 = &v298[v440];
        uint64_t v442 = &v299[v440];
        *(void *)uint64_t v441 = *(void *)v442;
        *((void *)v441 + 1) = *((void *)v442 + 1);
        uint64_t v443 = v341[12];
        uint64_t v444 = *(void **)&v299[v443];
        *(void *)&v298[v443] = v444;
        uint64_t v445 = v341[13];
        uint64_t v446 = &v298[v445];
        uint64_t v447 = &v299[v445];
        uint64_t v448 = *(void *)v447;
        uint64_t v449 = *((void *)v447 + 1);
        char v450 = v447[16];
        swift_bridgeObjectRetain();
        id v451 = v444;
        sub_247FE42A8(v448, v449, v450);
        *(void *)uint64_t v446 = v448;
        *((void *)v446 + 1) = v449;
        v446[16] = v450;
        uint64_t v452 = v341[14];
        uint64_t v453 = &v298[v452];
        uint64_t v454 = &v299[v452];
        *(void *)uint64_t v453 = *(void *)v454;
        *((void *)v453 + 1) = *((void *)v454 + 1);
        v298[v341[15]] = v299[v341[15]];
        uint64_t v455 = v341[16];
        uint64_t v456 = &v298[v455];
        uint64_t v457 = &v299[v455];
        unint64_t v458 = *(void *)&v299[v455 + 8];
        swift_bridgeObjectRetain();
        if (v458 >= 3)
        {
          *(void *)uint64_t v456 = *(void *)v457;
          *((void *)v456 + 1) = *((void *)v457 + 1);
          *((void *)v456 + 2) = *((void *)v457 + 2);
          *((void *)v456 + 3) = *((void *)v457 + 3);
          v456[32] = v457[32];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v459 = *(_OWORD *)v457;
          long long v460 = *((_OWORD *)v457 + 1);
          v456[32] = v457[32];
          *(_OWORD *)uint64_t v456 = v459;
          *((_OWORD *)v456 + 1) = v460;
        }
        uint64_t v3 = v645;
        uint64_t v461 = *(int *)(v547 + 24);
        uint64_t v429 = (char *)v645 + v461;
        uint64_t v430 = (char *)v639 + v461;
        unsigned int v431 = v430[40];
        if (v431 <= 0xFA) {
          goto LABEL_138;
        }
        long long v462 = *(_OWORD *)v430;
        long long v463 = *((_OWORD *)v430 + 1);
        *(_OWORD *)(v429 + 25) = *(_OWORD *)(v430 + 25);
        *(_OWORD *)uint64_t v429 = v462;
        *((_OWORD *)v429 + 1) = v463;
        goto LABEL_139;
      case 3u:
        *uint64_t v3 = *a2;
        v3[1] = a2[1];
        v3[2] = a2[2];
        v3[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        goto LABEL_139;
      case 4u:
        *uint64_t v3 = *a2;
        *((unsigned char *)v3 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v548 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
        uint64_t v32 = *(int *)(v548 + 32);
        v646 = v3;
        uint64_t v33 = (void *)((char *)v3 + v32);
        uint64_t v34 = (char *)a2 + v32;
        *uint64_t v33 = *(void *)((char *)a2 + v32);
        uint64_t v640 = a2;
        v33[1] = *(void *)((char *)a2 + v32 + 8);
        _OWORD v33[2] = *(void *)((char *)a2 + v32 + 16);
        v33[3] = *(void *)((char *)a2 + v32 + 24);
        v33[4] = *(void *)((char *)a2 + v32 + 32);
        v33[5] = *(void *)((char *)a2 + v32 + 40);
        v33[6] = *(void *)((char *)a2 + v32 + 48);
        v33[7] = *(void *)((char *)a2 + v32 + 56);
        v33[8] = *(void *)((char *)a2 + v32 + 64);
        v33[9] = *(void *)((char *)a2 + v32 + 72);
        uint64_t v539 = type metadata accessor for RepairModel();
        char v540 = v33;
        uint64_t v35 = *(int *)(v539 + 20);
        uint64_t v36 = (char *)v33 + v35;
        uint64_t v542 = v34;
        uint64_t v37 = &v34[v35];
        *((unsigned char *)v33 + v35) = v34[v35];
        uint64_t v38 = *(void **)&v34[v35 + 8];
        uint64_t v39 = *(void **)&v34[v35 + 16];
        uint64_t v40 = *(void *)&v34[v35 + 24];
        uint64_t v41 = *(unsigned __int16 *)&v34[v35 + 36];
        uint64_t v42 = *((unsigned int *)v37 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE4184(v38, v39, v40, v42 | (v41 << 32));
        *((void *)v36 + 1) = v38;
        *((void *)v36 + 2) = v39;
        *((void *)v36 + 3) = v40;
        *((_WORD *)v36 + 18) = v41;
        *((_DWORD *)v36 + 8) = v42;
        unsigned int v43 = v37[88];
        if (v43 <= 0xF9)
        {
          uint64_t v94 = *((void *)v37 + 5);
          uint64_t v95 = *((void *)v37 + 6);
          uint64_t v97 = *((void *)v37 + 7);
          uint64_t v96 = *((void *)v37 + 8);
          uint64_t v98 = *((void *)v37 + 9);
          uint64_t v99 = *((void *)v37 + 10);
          sub_247FA9804(v94, v95, v97, v96, v98, v99, v37[88]);
          *((void *)v36 + 5) = v94;
          *((void *)v36 + 6) = v95;
          *((void *)v36 + 7) = v97;
          *((void *)v36 + 8) = v96;
          *((void *)v36 + 9) = v98;
          *((void *)v36 + 10) = v99;
          v36[88] = v43;
        }
        else
        {
          long long v44 = *(_OWORD *)(v37 + 40);
          long long v45 = *(_OWORD *)(v37 + 56);
          long long v46 = *(_OWORD *)(v37 + 72);
          v36[88] = v37[88];
          *(_OWORD *)(v36 + 56) = v45;
          *(_OWORD *)(v36 + 72) = v46;
          *(_OWORD *)(v36 + 40) = v44;
        }
        v36[96] = v37[96];
        v36[97] = v37[97];
        *((void *)v36 + 13) = *((void *)v37 + 13);
        *((void *)v36 + 14) = *((void *)v37 + 14);
        *((void *)v36 + 15) = *((void *)v37 + 15);
        *((void *)v36 + 16) = *((void *)v37 + 16);
        uint64_t v100 = *((void *)v37 + 17);
        v36[144] = v37[144];
        *((void *)v36 + 17) = v100;
        v36[145] = v37[145];
        *((void *)v36 + 19) = *((void *)v37 + 19);
        *((void *)v36 + 20) = *((void *)v37 + 20);
        uint64_t v101 = *((void *)v37 + 22);
        uint64_t v631 = *((void *)v37 + 21);
        uint64_t v102 = *((void *)v37 + 23);
        uint64_t v103 = *((void *)v37 + 24);
        uint64_t v104 = *((void *)v37 + 25);
        uint64_t v105 = *((void *)v37 + 26);
        unsigned int v106 = v37[216];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE41AC(v631, v101, v102, v103, v104, v105, v106);
        *((void *)v36 + 21) = v631;
        *((void *)v36 + 22) = v101;
        *((void *)v36 + 23) = v102;
        *((void *)v36 + 24) = v103;
        *((void *)v36 + 25) = v104;
        *((void *)v36 + 26) = v105;
        v36[216] = v106;
        if (*((void *)v37 + 29))
        {
          *((void *)v36 + 28) = *((void *)v37 + 28);
          *((void *)v36 + 29) = *((void *)v37 + 29);
          *((void *)v36 + 30) = *((void *)v37 + 30);
          *((void *)v36 + 31) = *((void *)v37 + 31);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v135 = *((_OWORD *)v37 + 15);
          *((_OWORD *)v36 + 14) = *((_OWORD *)v37 + 14);
          *((_OWORD *)v36 + 15) = v135;
        }
        *((void *)v36 + 32) = *((void *)v37 + 32);
        *((void *)v36 + 33) = *((void *)v37 + 33);
        *((void *)v36 + 34) = *((void *)v37 + 34);
        *((void *)v36 + 35) = *((void *)v37 + 35);
        uint64_t v624 = type metadata accessor for SetupModel();
        uint64_t v136 = *(int *)(v624 + 32);
        uint64_t v137 = &v36[v136];
        uint64_t v138 = &v37[v136];
        uint64_t v139 = type metadata accessor for IdMSAccount();
        uint64_t v538 = *(void *)(v139 - 8);
        uint64_t v140 = *(unsigned int (**)(char *, uint64_t, int *))(v538 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v601 = v140;
        uint64_t v634 = (int *)v139;
        if (v140(v138, 1, (int *)v139))
        {
          uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v137, v138, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v137 = *(void *)v138;
          *((void *)v137 + 1) = *((void *)v138 + 1);
          *((void *)v137 + 2) = *((void *)v138 + 2);
          *((void *)v137 + 3) = *((void *)v138 + 3);
          *((void *)v137 + 4) = *((void *)v138 + 4);
          *((void *)v137 + 5) = *((void *)v138 + 5);
          *((void *)v137 + 6) = *((void *)v138 + 6);
          *((void *)v137 + 7) = *((void *)v138 + 7);
          *((void *)v137 + 8) = *((void *)v138 + 8);
          *((void *)v137 + 9) = *((void *)v138 + 9);
          uint64_t v185 = *(int *)(v139 + 20);
          uint64_t v588 = &v138[v185];
          uint64_t v596 = &v137[v185];
          uint64_t v186 = sub_248174700();
          v584 = *(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v584(v596, v588, v186);
          uint64_t v187 = v634[6];
          uint64_t v188 = &v137[v187];
          uint64_t v189 = &v138[v187];
          uint64_t v190 = *((void *)v189 + 1);
          uint64_t v191 = *((void *)v189 + 3);
          uint64_t v192 = *((void *)v189 + 5);
          uint64_t v558 = *((void *)v189 + 4);
          uint64_t v566 = *((void *)v189 + 2);
          uint64_t v194 = *((void *)v189 + 6);
          uint64_t v193 = *((void *)v189 + 7);
          uint64_t v585 = *(void *)v189;
          uint64_t v589 = *((void *)v189 + 8);
          LOBYTE(v596) = v189[72];
          sub_247FABF8C(*(void *)v189, v190, v566, v191, v558, v192, v194, v193, v589, (char)v596);
          *(void *)uint64_t v188 = v585;
          *((void *)v188 + 1) = v190;
          *((void *)v188 + 2) = v566;
          *((void *)v188 + 3) = v191;
          *((void *)v188 + 4) = v558;
          *((void *)v188 + 5) = v192;
          *((void *)v188 + 6) = v194;
          *((void *)v188 + 7) = v193;
          *((void *)v188 + 8) = v589;
          v188[72] = (char)v596;
          *(void *)&v137[v634[7]] = *(void *)&v138[v634[7]];
          uint64_t v195 = *(void (**)(char *, void, uint64_t, int *))(v538 + 56);
          swift_bridgeObjectRetain();
          v195(v137, 0, 1, v634);
        }
        uint64_t v196 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v197 = v196[5];
        uint64_t v198 = &v137[v197];
        uint64_t v199 = &v138[v197];
        char v576 = v36;
        if (*((void *)v199 + 1))
        {
          *(void *)uint64_t v198 = *(void *)v199;
          *((void *)v198 + 1) = *((void *)v199 + 1);
          *((void *)v198 + 2) = *((void *)v199 + 2);
          *((void *)v198 + 3) = *((void *)v199 + 3);
          *((void *)v198 + 4) = *((void *)v199 + 4);
          *((void *)v198 + 5) = *((void *)v199 + 5);
          *((void *)v198 + 6) = *((void *)v199 + 6);
          *((void *)v198 + 7) = *((void *)v199 + 7);
          *((void *)v198 + 8) = *((void *)v199 + 8);
          *((void *)v198 + 9) = *((void *)v199 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v198 = *(_OWORD *)v199;
          long long v253 = *((_OWORD *)v199 + 1);
          long long v254 = *((_OWORD *)v199 + 2);
          long long v255 = *((_OWORD *)v199 + 4);
          *((_OWORD *)v198 + 3) = *((_OWORD *)v199 + 3);
          *((_OWORD *)v198 + 4) = v255;
          *((_OWORD *)v198 + 1) = v253;
          *((_OWORD *)v198 + 2) = v254;
        }
        v137[v196[6]] = v138[v196[6]];
        uint64_t v256 = v196[7];
        uint64_t v257 = &v137[v256];
        uint64_t v258 = &v138[v256];
        *(void *)uint64_t v257 = *(void *)v258;
        *((void *)v257 + 1) = *((void *)v258 + 1);
        *(void *)&v137[v196[8]] = *(void *)&v138[v196[8]];
        v137[v196[9]] = v138[v196[9]];
        uint64_t v259 = v196[10];
        uint64_t v260 = &v137[v259];
        uint64_t v261 = &v138[v259];
        uint64_t v262 = (void *)*((void *)v261 + 2);
        uint64_t v562 = (void *)*((void *)v261 + 1);
        uint64_t v570 = *(void **)v261;
        uint64_t v587 = v196;
        uint64_t v592 = v137;
        uint64_t v263 = (void *)*((void *)v261 + 3);
        uint64_t v264 = *((void *)v261 + 6);
        v553 = (void *)*((void *)v261 + 5);
        long long v556 = (void *)*((void *)v261 + 4);
        uint64_t v598 = v138;
        uint64_t v265 = (void *)*((void *)v261 + 7);
        uint64_t v266 = (void *)*((void *)v261 + 8);
        uint64_t v267 = (void *)*((void *)v261 + 9);
        char v268 = v261[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247F986A0(v570, v562, v262, v263, v556, v553, v264, v265, v266, v267, v268);
        *(void *)uint64_t v260 = v570;
        *((void *)v260 + 1) = v562;
        *((void *)v260 + 2) = v262;
        *((void *)v260 + 3) = v263;
        *((void *)v260 + 4) = v556;
        *((void *)v260 + 5) = v553;
        *((void *)v260 + 6) = v264;
        *((void *)v260 + 7) = v265;
        *((void *)v260 + 8) = v266;
        *((void *)v260 + 9) = v267;
        v260[80] = v268;
        uint64_t v269 = v587[11];
        uint64_t v270 = (void *)((char *)v592 + v269);
        uint64_t v271 = (void *)((char *)v598 + v269);
        if (*v271)
        {
          uint64_t v272 = v271[1];
          *uint64_t v270 = *v271;
          v270[1] = v272;
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v270 = *(_OWORD *)v271;
        }
        uint64_t v301 = *(int *)(v624 + 36);
        uint64_t v302 = &v576[v301];
        uint64_t v303 = &v37[v301];
        if (v601(&v37[v301], 1, v634))
        {
          uint64_t v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v302, v303, *(void *)(*(void *)(v304 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v302 = *(void *)v303;
          *((void *)v302 + 1) = *((void *)v303 + 1);
          *((void *)v302 + 2) = *((void *)v303 + 2);
          *((void *)v302 + 3) = *((void *)v303 + 3);
          *((void *)v302 + 4) = *((void *)v303 + 4);
          *((void *)v302 + 5) = *((void *)v303 + 5);
          *((void *)v302 + 6) = *((void *)v303 + 6);
          *((void *)v302 + 7) = *((void *)v303 + 7);
          *((void *)v302 + 8) = *((void *)v303 + 8);
          *((void *)v302 + 9) = *((void *)v303 + 9);
          uint64_t v347 = v634[5];
          unint64_t v618 = &v303[v347];
          uint64_t v626 = &v302[v347];
          uint64_t v348 = sub_248174700();
          char v609 = *(void (**)(char *, char *, uint64_t))(*(void *)(v348 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v609(v626, v618, v348);
          uint64_t v349 = v634[6];
          v350 = &v302[v349];
          v351 = &v303[v349];
          uint64_t v352 = *((void *)v351 + 1);
          uint64_t v353 = *((void *)v351 + 2);
          uint64_t v354 = *((void *)v351 + 3);
          uint64_t v355 = *((void *)v351 + 4);
          uint64_t v356 = *((void *)v351 + 5);
          uint64_t v357 = *((void *)v351 + 6);
          uint64_t v358 = *((void *)v351 + 7);
          uint64_t v610 = *(void *)v351;
          uint64_t v619 = *((void *)v351 + 8);
          LOBYTE(v626) = v351[72];
          sub_247FABF8C(*(void *)v351, v352, v353, v354, v355, v356, v357, v358, v619, (char)v626);
          *(void *)v350 = v610;
          *((void *)v350 + 1) = v352;
          *((void *)v350 + 2) = v353;
          *((void *)v350 + 3) = v354;
          *((void *)v350 + 4) = v355;
          *((void *)v350 + 5) = v356;
          *((void *)v350 + 6) = v357;
          *((void *)v350 + 7) = v358;
          *((void *)v350 + 8) = v619;
          v350[72] = (char)v626;
          *(void *)&v302[v634[7]] = *(void *)&v303[v634[7]];
          long long v359 = *(void (**)(char *, void, uint64_t, int *))(v538 + 56);
          swift_bridgeObjectRetain();
          v359(v302, 0, 1, v634);
        }
        uint64_t v360 = (int *)type metadata accessor for SignInModel();
        uint64_t v361 = v360[5];
        long long v362 = &v302[v361];
        uint64_t v363 = &v303[v361];
        if (*((void *)v363 + 1))
        {
          *(void *)long long v362 = *(void *)v363;
          *((void *)v362 + 1) = *((void *)v363 + 1);
          *((void *)v362 + 2) = *((void *)v363 + 2);
          *((void *)v362 + 3) = *((void *)v363 + 3);
          *((void *)v362 + 4) = *((void *)v363 + 4);
          *((void *)v362 + 5) = *((void *)v363 + 5);
          *((void *)v362 + 6) = *((void *)v363 + 6);
          *((void *)v362 + 7) = *((void *)v363 + 7);
          *((void *)v362 + 8) = *((void *)v363 + 8);
          *((void *)v362 + 9) = *((void *)v363 + 9);
          uint64_t v364 = (uint64_t *)(v363 + 80);
          unint64_t v365 = *((void *)v363 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v365 >> 60 == 15)
          {
            *((_OWORD *)v362 + 5) = *(_OWORD *)v364;
          }
          else
          {
            uint64_t v464 = *v364;
            sub_247FB6C20(*v364, v365);
            *((void *)v362 + 10) = v464;
            *((void *)v362 + 11) = v365;
          }
        }
        else
        {
          long long v393 = *((_OWORD *)v363 + 1);
          *(_OWORD *)long long v362 = *(_OWORD *)v363;
          *((_OWORD *)v362 + 1) = v393;
          long long v394 = *((_OWORD *)v363 + 2);
          long long v395 = *((_OWORD *)v363 + 3);
          long long v396 = *((_OWORD *)v363 + 5);
          *((_OWORD *)v362 + 4) = *((_OWORD *)v363 + 4);
          *((_OWORD *)v362 + 5) = v396;
          *((_OWORD *)v362 + 2) = v394;
          *((_OWORD *)v362 + 3) = v395;
        }
        *(void *)&v302[v360[6]] = *(void *)&v303[v360[6]];
        *(void *)&v302[v360[7]] = *(void *)&v303[v360[7]];
        v302[v360[8]] = v303[v360[8]];
        v302[v360[9]] = v303[v360[9]];
        uint64_t v465 = v360[10];
        uint64_t v466 = &v302[v465];
        uint64_t v467 = &v303[v465];
        uint64_t v468 = *(void *)&v303[v465 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v468)
        {
          *(void *)uint64_t v466 = *(void *)v467;
          *((void *)v466 + 1) = *((void *)v467 + 1);
          *((void *)v466 + 2) = *((void *)v467 + 2);
          *((void *)v466 + 3) = *((void *)v467 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v469 = *((_OWORD *)v467 + 1);
          *(_OWORD *)uint64_t v466 = *(_OWORD *)v467;
          *((_OWORD *)v466 + 1) = v469;
        }
        uint64_t v470 = v360[11];
        uint64_t v471 = &v302[v470];
        uint64_t v472 = &v303[v470];
        *(void *)uint64_t v471 = *(void *)v472;
        *((void *)v471 + 1) = *((void *)v472 + 1);
        uint64_t v473 = v360[12];
        uint64_t v474 = *(void **)&v303[v473];
        *(void *)&v302[v473] = v474;
        uint64_t v475 = v360[13];
        uint64_t v476 = &v302[v475];
        uint64_t v477 = &v303[v475];
        uint64_t v478 = *(void *)v477;
        uint64_t v479 = *((void *)v477 + 1);
        char v480 = v477[16];
        swift_bridgeObjectRetain();
        id v481 = v474;
        sub_247FE42A8(v478, v479, v480);
        *(void *)uint64_t v476 = v478;
        *((void *)v476 + 1) = v479;
        v476[16] = v480;
        uint64_t v482 = v360[14];
        uint64_t v483 = &v302[v482];
        uint64_t v484 = &v303[v482];
        *(void *)uint64_t v483 = *(void *)v484;
        *((void *)v483 + 1) = *((void *)v484 + 1);
        v302[v360[15]] = v303[v360[15]];
        uint64_t v485 = v360[16];
        uint64_t v486 = &v302[v485];
        uint64_t v487 = &v303[v485];
        unint64_t v488 = *(void *)&v303[v485 + 8];
        swift_bridgeObjectRetain();
        if (v488 >= 3)
        {
          *(void *)uint64_t v486 = *(void *)v487;
          *((void *)v486 + 1) = *((void *)v487 + 1);
          *((void *)v486 + 2) = *((void *)v487 + 2);
          *((void *)v486 + 3) = *((void *)v487 + 3);
          v486[32] = v487[32];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v489 = *(_OWORD *)v487;
          long long v490 = *((_OWORD *)v487 + 1);
          v486[32] = v487[32];
          *(_OWORD *)uint64_t v486 = v489;
          *((_OWORD *)v486 + 1) = v490;
        }
        uint64_t v3 = v646;
        uint64_t v491 = *(int *)(v539 + 24);
        uint64_t v492 = (char *)v540 + v491;
        uint64_t v493 = &v542[v491];
        unsigned int v494 = v493[40];
        if (v494 <= 0xFA)
        {
          uint64_t v497 = *(void *)v493;
          uint64_t v498 = *((void *)v493 + 1);
          uint64_t v499 = *((void *)v493 + 2);
          uint64_t v500 = *((void *)v493 + 3);
          uint64_t v501 = *((void *)v493 + 4);
          sub_247FE42BC(*(void *)v493, v498, v499, v500, v501, v493[40]);
          *(void *)uint64_t v492 = v497;
          *((void *)v492 + 1) = v498;
          *((void *)v492 + 2) = v499;
          *((void *)v492 + 3) = v500;
          *((void *)v492 + 4) = v501;
          v492[40] = v494;
        }
        else
        {
          long long v495 = *(_OWORD *)v493;
          long long v496 = *((_OWORD *)v493 + 1);
          *(_OWORD *)(v492 + 25) = *(_OWORD *)(v493 + 25);
          *(_OWORD *)uint64_t v492 = v495;
          *((_OWORD *)v492 + 1) = v496;
        }
        *(void *)((char *)v646 + *(int *)(v548 + 36)) = *(void *)((char *)v640 + *(int *)(v548 + 36));
        swift_retain();
        goto LABEL_139;
      case 5u:
        *uint64_t v3 = *a2;
        v3[1] = a2[1];
        uint64_t v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628) + 32);
        uint64_t v647 = v3;
        uint64_t v48 = (void *)((char *)v3 + v47);
        uint64_t v49 = (char *)a2 + v47;
        *uint64_t v48 = *(void *)((char *)a2 + v47);
        v48[1] = *(void *)((char *)a2 + v47 + 8);
        v48[2] = *(void *)((char *)a2 + v47 + 16);
        v48[3] = *(void *)((char *)a2 + v47 + 24);
        v48[4] = *(void *)((char *)a2 + v47 + 32);
        v48[5] = *(void *)((char *)a2 + v47 + 40);
        v48[6] = *(void *)((char *)a2 + v47 + 48);
        v48[7] = *(void *)((char *)a2 + v47 + 56);
        v48[8] = *(void *)((char *)a2 + v47 + 64);
        v48[9] = *(void *)((char *)a2 + v47 + 72);
        uint64_t v543 = type metadata accessor for RepairModel();
        unint64_t v549 = v48;
        uint64_t v50 = *(int *)(v543 + 20);
        uint64_t v51 = (char *)v48 + v50;
        long long v550 = v49;
        uint64_t v52 = &v49[v50];
        *((unsigned char *)v48 + v50) = v49[v50];
        uint64_t v53 = *(void **)&v49[v50 + 8];
        uint64_t v54 = *(void **)&v49[v50 + 16];
        uint64_t v55 = *(void *)&v49[v50 + 24];
        uint64_t v56 = *(unsigned __int16 *)&v49[v50 + 36];
        uint64_t v57 = *((unsigned int *)v52 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE4184(v53, v54, v55, v57 | (v56 << 32));
        *((void *)v51 + 1) = v53;
        *((void *)v51 + 2) = v54;
        *((void *)v51 + 3) = v55;
        *((_WORD *)v51 + 18) = v56;
        *((_DWORD *)v51 + 8) = v57;
        unsigned int v58 = v52[88];
        if (v58 <= 0xF9)
        {
          uint64_t v107 = *((void *)v52 + 5);
          uint64_t v108 = *((void *)v52 + 6);
          uint64_t v110 = *((void *)v52 + 7);
          uint64_t v109 = *((void *)v52 + 8);
          uint64_t v111 = *((void *)v52 + 9);
          uint64_t v112 = *((void *)v52 + 10);
          sub_247FA9804(v107, v108, v110, v109, v111, v112, v52[88]);
          *((void *)v51 + 5) = v107;
          *((void *)v51 + 6) = v108;
          *((void *)v51 + 7) = v110;
          *((void *)v51 + 8) = v109;
          *((void *)v51 + 9) = v111;
          *((void *)v51 + 10) = v112;
          v51[88] = v58;
        }
        else
        {
          long long v59 = *(_OWORD *)(v52 + 40);
          long long v60 = *(_OWORD *)(v52 + 56);
          long long v61 = *(_OWORD *)(v52 + 72);
          v51[88] = v52[88];
          *(_OWORD *)(v51 + 56) = v60;
          *(_OWORD *)(v51 + 72) = v61;
          *(_OWORD *)(v51 + 40) = v59;
        }
        v51[96] = v52[96];
        v51[97] = v52[97];
        *((void *)v51 + 13) = *((void *)v52 + 13);
        *((void *)v51 + 14) = *((void *)v52 + 14);
        *((void *)v51 + 15) = *((void *)v52 + 15);
        *((void *)v51 + 16) = *((void *)v52 + 16);
        uint64_t v113 = *((void *)v52 + 17);
        v51[144] = v52[144];
        *((void *)v51 + 17) = v113;
        v51[145] = v52[145];
        *((void *)v51 + 19) = *((void *)v52 + 19);
        *((void *)v51 + 20) = *((void *)v52 + 20);
        uint64_t v114 = *((void *)v52 + 21);
        uint64_t v641 = *((void *)v52 + 22);
        uint64_t v115 = *((void *)v52 + 23);
        uint64_t v116 = *((void *)v52 + 24);
        uint64_t v117 = *((void *)v52 + 25);
        uint64_t v118 = *((void *)v52 + 26);
        unsigned int v119 = v52[216];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247FE41AC(v114, v641, v115, v116, v117, v118, v119);
        *((void *)v51 + 21) = v114;
        *((void *)v51 + 22) = v641;
        *((void *)v51 + 23) = v115;
        *((void *)v51 + 24) = v116;
        *((void *)v51 + 25) = v117;
        *((void *)v51 + 26) = v118;
        v51[216] = v119;
        if (*((void *)v52 + 29))
        {
          *((void *)v51 + 28) = *((void *)v52 + 28);
          *((void *)v51 + 29) = *((void *)v52 + 29);
          *((void *)v51 + 30) = *((void *)v52 + 30);
          *((void *)v51 + 31) = *((void *)v52 + 31);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
        }
        else
        {
          long long v142 = *((_OWORD *)v52 + 15);
          *((_OWORD *)v51 + 14) = *((_OWORD *)v52 + 14);
          *((_OWORD *)v51 + 15) = v142;
        }
        *((void *)v51 + 32) = *((void *)v52 + 32);
        *((void *)v51 + 33) = *((void *)v52 + 33);
        *((void *)v51 + 34) = *((void *)v52 + 34);
        *((void *)v51 + 35) = *((void *)v52 + 35);
        uint64_t v625 = type metadata accessor for SetupModel();
        uint64_t v143 = *(int *)(v625 + 32);
        uint64_t v144 = &v51[v143];
        uint64_t v145 = &v52[v143];
        uint64_t v146 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v541 = *((void *)v146 - 1);
        uint64_t v147 = *(unsigned int (**)(char *, uint64_t, int *))(v541 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v602 = v147;
        uint64_t v635 = v146;
        uint64_t v642 = v145;
        if (v147(v145, 1, v146))
        {
          uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v144, v145, *(void *)(*(void *)(v148 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v144 = *(void *)v145;
          *((void *)v144 + 1) = *((void *)v145 + 1);
          *((void *)v144 + 2) = *((void *)v145 + 2);
          *((void *)v144 + 3) = *((void *)v145 + 3);
          *((void *)v144 + 4) = *((void *)v145 + 4);
          *((void *)v144 + 5) = *((void *)v145 + 5);
          *((void *)v144 + 6) = *((void *)v145 + 6);
          *((void *)v144 + 7) = *((void *)v145 + 7);
          *((void *)v144 + 8) = *((void *)v145 + 8);
          *((void *)v144 + 9) = *((void *)v145 + 9);
          uint64_t v200 = v146[5];
          long long v597 = &v144[v200];
          uint64_t v590 = &v145[v200];
          uint64_t v201 = sub_248174700();
          id v577 = *(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v577(v597, v590, v201);
          uint64_t v202 = v146[6];
          uint64_t v203 = &v144[v202];
          uint64_t v204 = &v145[v202];
          uint64_t v205 = *((void *)v204 + 1);
          uint64_t v206 = *((void *)v204 + 2);
          uint64_t v207 = *((void *)v204 + 3);
          uint64_t v208 = *((void *)v204 + 4);
          uint64_t v567 = *((void *)v204 + 5);
          uint64_t v578 = *(void *)v204;
          uint64_t v209 = *((void *)v204 + 6);
          uint64_t v559 = *((void *)v204 + 7);
          uint64_t v591 = *((void *)v204 + 8);
          LOBYTE(v597) = v204[72];
          sub_247FABF8C(*(void *)v204, v205, v206, v207, v208, v567, v209, v559, v591, (char)v597);
          *(void *)uint64_t v203 = v578;
          *((void *)v203 + 1) = v205;
          *((void *)v203 + 2) = v206;
          *((void *)v203 + 3) = v207;
          *((void *)v203 + 4) = v208;
          *((void *)v203 + 5) = v567;
          *((void *)v203 + 6) = v209;
          uint64_t v145 = v642;
          *((void *)v203 + 7) = v559;
          *((void *)v203 + 8) = v591;
          v203[72] = (char)v597;
          *(void *)&v144[v146[7]] = *(void *)&v642[v146[7]];
          uint64_t v210 = *(void (**)(char *, void, uint64_t, int *))(v541 + 56);
          swift_bridgeObjectRetain();
          v210(v144, 0, 1, v146);
        }
        uint64_t v211 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v212 = v211[5];
        uint64_t v213 = &v144[v212];
        uint64_t v214 = &v145[v212];
        long long v586 = v51;
        if (*((void *)v214 + 1))
        {
          *(void *)uint64_t v213 = *(void *)v214;
          *((void *)v213 + 1) = *((void *)v214 + 1);
          *((void *)v213 + 2) = *((void *)v214 + 2);
          *((void *)v213 + 3) = *((void *)v214 + 3);
          *((void *)v213 + 4) = *((void *)v214 + 4);
          *((void *)v213 + 5) = *((void *)v214 + 5);
          *((void *)v213 + 6) = *((void *)v214 + 6);
          *((void *)v213 + 7) = *((void *)v214 + 7);
          *((void *)v213 + 8) = *((void *)v214 + 8);
          *((void *)v213 + 9) = *((void *)v214 + 9);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v213 = *(_OWORD *)v214;
          long long v273 = *((_OWORD *)v214 + 1);
          long long v274 = *((_OWORD *)v214 + 2);
          long long v275 = *((_OWORD *)v214 + 4);
          *((_OWORD *)v213 + 3) = *((_OWORD *)v214 + 3);
          *((_OWORD *)v213 + 4) = v275;
          *((_OWORD *)v213 + 1) = v273;
          *((_OWORD *)v213 + 2) = v274;
        }
        v144[v211[6]] = v145[v211[6]];
        uint64_t v276 = v211[7];
        uint64_t v277 = &v144[v276];
        uint64_t v278 = &v145[v276];
        *(void *)uint64_t v277 = *(void *)v278;
        *((void *)v277 + 1) = *((void *)v278 + 1);
        *(void *)&v144[v211[8]] = *(void *)&v145[v211[8]];
        v144[v211[9]] = v145[v211[9]];
        uint64_t v279 = v211[10];
        uint64_t v280 = &v144[v279];
        uint64_t v281 = &v145[v279];
        uint64_t v282 = (void *)*((void *)v281 + 1);
        uint64_t v593 = v211;
        uint64_t v599 = v144;
        uint64_t v283 = (void *)*((void *)v281 + 2);
        uint64_t v284 = (void *)*((void *)v281 + 3);
        uint64_t v285 = (void *)*((void *)v281 + 5);
        uint64_t v571 = *((void *)v281 + 6);
        uint64_t v581 = *(void **)v281;
        uint64_t v286 = (void *)*((void *)v281 + 8);
        uint64_t v557 = (void *)*((void *)v281 + 7);
        uint64_t v563 = (void *)*((void *)v281 + 4);
        uint64_t v287 = (void *)*((void *)v281 + 9);
        char v288 = v281[80];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_247F986A0(v581, v282, v283, v284, v563, v285, v571, v557, v286, v287, v288);
        *(void *)uint64_t v280 = v581;
        *((void *)v280 + 1) = v282;
        *((void *)v280 + 2) = v283;
        *((void *)v280 + 3) = v284;
        *((void *)v280 + 4) = v563;
        *((void *)v280 + 5) = v285;
        *((void *)v280 + 6) = v571;
        *((void *)v280 + 7) = v557;
        *((void *)v280 + 8) = v286;
        *((void *)v280 + 9) = v287;
        v280[80] = v288;
        uint64_t v289 = v593[11];
        uint64_t v290 = (void *)((char *)v599 + v289);
        uint64_t v291 = &v642[v289];
        if (*(void *)v291)
        {
          uint64_t v292 = *((void *)v291 + 1);
          *uint64_t v290 = *(void *)v291;
          v290[1] = v292;
          swift_retain();
        }
        else
        {
          *(_OWORD *)uint64_t v290 = *(_OWORD *)v291;
        }
        uint64_t v3 = v647;
        uint64_t v305 = *(int *)(v625 + 36);
        uint64_t v306 = &v586[v305];
        v307 = &v52[v305];
        if (v602(&v52[v305], 1, v635))
        {
          uint64_t v308 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v306, v307, *(void *)(*(void *)(v308 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v306 = *(void *)v307;
          *((void *)v306 + 1) = *((void *)v307 + 1);
          *((void *)v306 + 2) = *((void *)v307 + 2);
          *((void *)v306 + 3) = *((void *)v307 + 3);
          *((void *)v306 + 4) = *((void *)v307 + 4);
          *((void *)v306 + 5) = *((void *)v307 + 5);
          *((void *)v306 + 6) = *((void *)v307 + 6);
          *((void *)v306 + 7) = *((void *)v307 + 7);
          *((void *)v306 + 8) = *((void *)v307 + 8);
          *((void *)v306 + 9) = *((void *)v307 + 9);
          uint64_t v366 = v635[5];
          uint64_t v643 = &v306[v366];
          uint64_t v627 = &v307[v366];
          uint64_t v367 = sub_248174700();
          uint64_t v620 = *(void (**)(char *, char *, uint64_t))(*(void *)(v367 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v620(v643, v627, v367);
          uint64_t v368 = v635[6];
          v369 = &v306[v368];
          v370 = &v307[v368];
          uint64_t v371 = *((void *)v370 + 1);
          uint64_t v372 = *((void *)v370 + 2);
          uint64_t v373 = *((void *)v370 + 3);
          uint64_t v374 = *((void *)v370 + 4);
          uint64_t v375 = *((void *)v370 + 5);
          uint64_t v376 = *((void *)v370 + 6);
          uint64_t v377 = *((void *)v370 + 7);
          uint64_t v621 = *(void *)v370;
          uint64_t v628 = *((void *)v370 + 8);
          LOBYTE(v643) = v370[72];
          sub_247FABF8C(*(void *)v370, v371, v372, v373, v374, v375, v376, v377, v628, (char)v643);
          *(void *)v369 = v621;
          *((void *)v369 + 1) = v371;
          *((void *)v369 + 2) = v372;
          *((void *)v369 + 3) = v373;
          *((void *)v369 + 4) = v374;
          *((void *)v369 + 5) = v375;
          uint64_t v3 = v647;
          *((void *)v369 + 6) = v376;
          *((void *)v369 + 7) = v377;
          *((void *)v369 + 8) = v628;
          v369[72] = (char)v643;
          *(void *)&v306[v635[7]] = *(void *)&v307[v635[7]];
          uint64_t v378 = *(void (**)(char *, void, uint64_t, int *))(v541 + 56);
          swift_bridgeObjectRetain();
          v378(v306, 0, 1, v635);
        }
        v379 = (int *)type metadata accessor for SignInModel();
        uint64_t v380 = v379[5];
        uint64_t v381 = &v306[v380];
        uint64_t v382 = &v307[v380];
        if (*((void *)v382 + 1))
        {
          *(void *)uint64_t v381 = *(void *)v382;
          *((void *)v381 + 1) = *((void *)v382 + 1);
          *((void *)v381 + 2) = *((void *)v382 + 2);
          *((void *)v381 + 3) = *((void *)v382 + 3);
          *((void *)v381 + 4) = *((void *)v382 + 4);
          *((void *)v381 + 5) = *((void *)v382 + 5);
          *((void *)v381 + 6) = *((void *)v382 + 6);
          *((void *)v381 + 7) = *((void *)v382 + 7);
          *((void *)v381 + 8) = *((void *)v382 + 8);
          *((void *)v381 + 9) = *((void *)v382 + 9);
          v383 = (uint64_t *)(v382 + 80);
          unint64_t v384 = *((void *)v382 + 11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v384 >> 60 == 15)
          {
            *((_OWORD *)v381 + 5) = *(_OWORD *)v383;
          }
          else
          {
            uint64_t v502 = *v383;
            sub_247FB6C20(*v383, v384);
            *((void *)v381 + 10) = v502;
            *((void *)v381 + 11) = v384;
          }
          uint64_t v3 = v647;
        }
        else
        {
          long long v397 = *((_OWORD *)v382 + 1);
          *(_OWORD *)uint64_t v381 = *(_OWORD *)v382;
          *((_OWORD *)v381 + 1) = v397;
          long long v398 = *((_OWORD *)v382 + 2);
          long long v399 = *((_OWORD *)v382 + 3);
          long long v400 = *((_OWORD *)v382 + 5);
          *((_OWORD *)v381 + 4) = *((_OWORD *)v382 + 4);
          *((_OWORD *)v381 + 5) = v400;
          *((_OWORD *)v381 + 2) = v398;
          *((_OWORD *)v381 + 3) = v399;
        }
        *(void *)&v306[v379[6]] = *(void *)&v307[v379[6]];
        *(void *)&v306[v379[7]] = *(void *)&v307[v379[7]];
        v306[v379[8]] = v307[v379[8]];
        v306[v379[9]] = v307[v379[9]];
        uint64_t v503 = v379[10];
        uint64_t v504 = &v306[v503];
        uint64_t v505 = &v307[v503];
        uint64_t v506 = *(void *)&v307[v503 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v506)
        {
          *(void *)uint64_t v504 = *(void *)v505;
          *((void *)v504 + 1) = *((void *)v505 + 1);
          *((void *)v504 + 2) = *((void *)v505 + 2);
          *((void *)v504 + 3) = *((void *)v505 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v507 = *((_OWORD *)v505 + 1);
          *(_OWORD *)uint64_t v504 = *(_OWORD *)v505;
          *((_OWORD *)v504 + 1) = v507;
        }
        uint64_t v508 = v379[11];
        long long v509 = &v306[v508];
        long long v510 = &v307[v508];
        *(void *)long long v509 = *(void *)v510;
        *((void *)v509 + 1) = *((void *)v510 + 1);
        uint64_t v511 = v379[12];
        long long v512 = *(void **)&v307[v511];
        *(void *)&v306[v511] = v512;
        uint64_t v513 = v379[13];
        long long v514 = &v306[v513];
        long long v515 = &v307[v513];
        uint64_t v516 = *(void *)v515;
        uint64_t v517 = *((void *)v515 + 1);
        char v518 = v515[16];
        swift_bridgeObjectRetain();
        id v519 = v512;
        sub_247FE42A8(v516, v517, v518);
        *(void *)long long v514 = v516;
        *((void *)v514 + 1) = v517;
        v514[16] = v518;
        uint64_t v520 = v379[14];
        uint64_t v521 = &v306[v520];
        uint64_t v522 = &v307[v520];
        *(void *)uint64_t v521 = *(void *)v522;
        *((void *)v521 + 1) = *((void *)v522 + 1);
        v306[v379[15]] = v307[v379[15]];
        uint64_t v523 = v379[16];
        long long v524 = &v306[v523];
        uint64_t v525 = &v307[v523];
        unint64_t v526 = *(void *)&v307[v523 + 8];
        swift_bridgeObjectRetain();
        if (v526 >= 3)
        {
          *(void *)long long v524 = *(void *)v525;
          *((void *)v524 + 1) = *((void *)v525 + 1);
          *((void *)v524 + 2) = *((void *)v525 + 2);
          *((void *)v524 + 3) = *((void *)v525 + 3);
          v524[32] = v525[32];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v527 = *(_OWORD *)v525;
          long long v528 = *((_OWORD *)v525 + 1);
          v524[32] = v525[32];
          *(_OWORD *)long long v524 = v527;
          *((_OWORD *)v524 + 1) = v528;
        }
        uint64_t v529 = *(int *)(v543 + 24);
        uint64_t v429 = (char *)v549 + v529;
        uint64_t v430 = &v550[v529];
        unsigned int v431 = v430[40];
        if (v431 <= 0xFA)
        {
LABEL_138:
          uint64_t v532 = *(void *)v430;
          uint64_t v533 = *((void *)v430 + 1);
          uint64_t v534 = *((void *)v430 + 2);
          uint64_t v535 = *((void *)v430 + 3);
          uint64_t v536 = *((void *)v430 + 4);
          sub_247FE42BC(*(void *)v430, v533, v534, v535, v536, v430[40]);
          *(void *)uint64_t v429 = v532;
          *((void *)v429 + 1) = v533;
          *((void *)v429 + 2) = v534;
          *((void *)v429 + 3) = v535;
          *((void *)v429 + 4) = v536;
          v429[40] = v431;
        }
        else
        {
          long long v530 = *(_OWORD *)v430;
          long long v531 = *((_OWORD *)v430 + 1);
          *(_OWORD *)(v429 + 25) = *(_OWORD *)(v430 + 25);
          *(_OWORD *)uint64_t v429 = v530;
          *((_OWORD *)v429 + 1) = v531;
        }
        goto LABEL_139;
      case 6u:
        uint64_t v62 = *a2;
        uint64_t v63 = a2[1];
        uint64_t v64 = a2[2];
        uint64_t v65 = a2[3];
        uint64_t v66 = a2[4];
        char v67 = *((unsigned char *)a2 + 40);
        sub_247FE42BC(v62, v63, v64, v65, v66, v67);
        *uint64_t v3 = v62;
        v3[1] = v63;
        v3[2] = v64;
        v3[3] = v65;
        v3[4] = v66;
        *((unsigned char *)v3 + 40) = v67;
LABEL_139:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v3, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return v3;
}

_OWORD *initializeWithTake for MachRepairMessage(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      long long v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      a1[4] = a2[4];
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v333 = type metadata accessor for RepairModel();
      uint64_t v8 = *(int *)(v333 + 20);
      int v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      *int v9 = *((unsigned char *)a2 + v8);
      *(_OWORD *)(v9 + 22) = *(_OWORD *)((char *)a2 + v8 + 22);
      *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
      v9[88] = *((unsigned char *)a2 + v8 + 88);
      *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
      *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
      *(_OWORD *)(v9 + 40) = *(_OWORD *)((char *)a2 + v8 + 40);
      long long v11 = *(_OWORD *)((char *)a2 + v8 + 96);
      long long v12 = *(_OWORD *)((char *)a2 + v8 + 112);
      long long v13 = *(_OWORD *)((char *)a2 + v8 + 144);
      *((_OWORD *)v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 128);
      *((_OWORD *)v9 + 9) = v13;
      *((_OWORD *)v9 + 6) = v11;
      *((_OWORD *)v9 + 7) = v12;
      long long v14 = *(_OWORD *)((char *)a2 + v8 + 160);
      long long v15 = *(_OWORD *)((char *)a2 + v8 + 176);
      long long v16 = *(_OWORD *)((char *)a2 + v8 + 208);
      *((_OWORD *)v9 + 12) = *(_OWORD *)((char *)a2 + v8 + 192);
      *((_OWORD *)v9 + 13) = v16;
      *((_OWORD *)v9 + 10) = v14;
      *((_OWORD *)v9 + 11) = v15;
      long long v17 = *(_OWORD *)((char *)a2 + v8 + 224);
      long long v18 = *(_OWORD *)((char *)a2 + v8 + 240);
      long long v19 = *(_OWORD *)((char *)a2 + v8 + 272);
      *((_OWORD *)v9 + 16) = *(_OWORD *)((char *)a2 + v8 + 256);
      *((_OWORD *)v9 + 17) = v19;
      *((_OWORD *)v9 + 14) = v17;
      *((_OWORD *)v9 + 15) = v18;
      uint64_t v20 = type metadata accessor for SetupModel();
      uint64_t v21 = *(int *)(v20 + 32);
      long long v22 = &v9[v21];
      uint64_t v23 = &v10[v21];
      uint64_t v24 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v326 = *((void *)v24 - 1);
      uint64_t v329 = *(unsigned int (**)(char *, uint64_t, int *))(v326 + 48);
      if (v329(v23, 1, v24))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        long long v91 = *((_OWORD *)v23 + 3);
        *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
        *((_OWORD *)v22 + 3) = v91;
        *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
        long long v92 = *((_OWORD *)v23 + 1);
        *(_OWORD *)long long v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v92;
        uint64_t v93 = v24[5];
        uint64_t v324 = v20;
        uint64_t v94 = &v22[v93];
        uint64_t v95 = &v23[v93];
        uint64_t v96 = sub_248174700();
        uint64_t v97 = v94;
        uint64_t v20 = v324;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v97, v95, v96);
        uint64_t v98 = v24[6];
        uint64_t v99 = &v22[v98];
        uint64_t v100 = &v23[v98];
        long long v101 = *((_OWORD *)v100 + 3);
        *((_OWORD *)v99 + 2) = *((_OWORD *)v100 + 2);
        *((_OWORD *)v99 + 3) = v101;
        *(_OWORD *)(v99 + 57) = *(_OWORD *)(v100 + 57);
        long long v102 = *((_OWORD *)v100 + 1);
        *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
        *((_OWORD *)v99 + 1) = v102;
        *(void *)&v22[v24[7]] = *(void *)&v23[v24[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v326 + 56))(v22, 0, 1, v24);
      }
      uint64_t v103 = (int *)type metadata accessor for AuthenticationModel();
      uint64_t v104 = v103[5];
      uint64_t v105 = &v22[v104];
      unsigned int v106 = &v23[v104];
      long long v107 = *((_OWORD *)v106 + 3);
      *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
      *((_OWORD *)v105 + 3) = v107;
      *((_OWORD *)v105 + 4) = *((_OWORD *)v106 + 4);
      long long v108 = *((_OWORD *)v106 + 1);
      *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
      *((_OWORD *)v105 + 1) = v108;
      v22[v103[6]] = v23[v103[6]];
      *(_OWORD *)&v22[v103[7]] = *(_OWORD *)&v23[v103[7]];
      *(void *)&v22[v103[8]] = *(void *)&v23[v103[8]];
      v22[v103[9]] = v23[v103[9]];
      uint64_t v109 = v103[10];
      uint64_t v110 = &v22[v109];
      uint64_t v111 = &v23[v109];
      long long v112 = *((_OWORD *)v111 + 1);
      *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v112;
      v110[80] = v111[80];
      long long v113 = *((_OWORD *)v111 + 4);
      long long v114 = *((_OWORD *)v111 + 2);
      *((_OWORD *)v110 + 3) = *((_OWORD *)v111 + 3);
      *((_OWORD *)v110 + 4) = v113;
      *((_OWORD *)v110 + 2) = v114;
      uint64_t v115 = v103[11];
      uint64_t v116 = &v22[v115];
      uint64_t v117 = &v23[v115];
      uint64_t v118 = *(void *)v117;
      if (*(void *)v117)
      {
        uint64_t v119 = *((void *)v117 + 1);
        *(void *)uint64_t v116 = v118;
        *((void *)v116 + 1) = v119;
      }
      else
      {
        *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
      }
      uint64_t v205 = *(int *)(v20 + 36);
      uint64_t v206 = &v9[v205];
      uint64_t v207 = &v10[v205];
      if (!v329(&v10[v205], 1, v24)) {
        goto LABEL_35;
      }
      goto LABEL_25;
    case 2u:
      long long v26 = a2[3];
      a1[2] = a2[2];
      a1[3] = v26;
      a1[4] = a2[4];
      long long v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      uint64_t v333 = type metadata accessor for RepairModel();
      uint64_t v28 = *(int *)(v333 + 20);
      long long v29 = (char *)a1 + v28;
      long long v30 = (char *)a2 + v28;
      *long long v29 = *((unsigned char *)a2 + v28);
      *(_OWORD *)(v29 + 22) = *(_OWORD *)((char *)a2 + v28 + 22);
      *(_OWORD *)(v29 + 8) = *(_OWORD *)((char *)a2 + v28 + 8);
      v29[88] = *((unsigned char *)a2 + v28 + 88);
      *(_OWORD *)(v29 + 72) = *(_OWORD *)((char *)a2 + v28 + 72);
      *(_OWORD *)(v29 + 56) = *(_OWORD *)((char *)a2 + v28 + 56);
      *(_OWORD *)(v29 + 40) = *(_OWORD *)((char *)a2 + v28 + 40);
      long long v31 = *(_OWORD *)((char *)a2 + v28 + 96);
      long long v32 = *(_OWORD *)((char *)a2 + v28 + 112);
      long long v33 = *(_OWORD *)((char *)a2 + v28 + 144);
      *((_OWORD *)v29 + 8) = *(_OWORD *)((char *)a2 + v28 + 128);
      *((_OWORD *)v29 + 9) = v33;
      *((_OWORD *)v29 + 6) = v31;
      *((_OWORD *)v29 + 7) = v32;
      long long v34 = *(_OWORD *)((char *)a2 + v28 + 160);
      long long v35 = *(_OWORD *)((char *)a2 + v28 + 176);
      long long v36 = *(_OWORD *)((char *)a2 + v28 + 208);
      *((_OWORD *)v29 + 12) = *(_OWORD *)((char *)a2 + v28 + 192);
      *((_OWORD *)v29 + 13) = v36;
      *((_OWORD *)v29 + 10) = v34;
      *((_OWORD *)v29 + 11) = v35;
      long long v37 = *(_OWORD *)((char *)a2 + v28 + 224);
      long long v38 = *(_OWORD *)((char *)a2 + v28 + 240);
      long long v39 = *(_OWORD *)((char *)a2 + v28 + 272);
      *((_OWORD *)v29 + 16) = *(_OWORD *)((char *)a2 + v28 + 256);
      *((_OWORD *)v29 + 17) = v39;
      *((_OWORD *)v29 + 14) = v37;
      *((_OWORD *)v29 + 15) = v38;
      uint64_t v40 = type metadata accessor for SetupModel();
      uint64_t v41 = *(int *)(v40 + 32);
      uint64_t v42 = &v29[v41];
      unsigned int v43 = &v30[v41];
      uint64_t v24 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v326 = *((void *)v24 - 1);
      uint64_t v330 = *(unsigned int (**)(char *, uint64_t, int *))(v326 + 48);
      if (v330(v43, 1, v24))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        long long v120 = *((_OWORD *)v43 + 3);
        *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
        *((_OWORD *)v42 + 3) = v120;
        *((_OWORD *)v42 + 4) = *((_OWORD *)v43 + 4);
        long long v121 = *((_OWORD *)v43 + 1);
        *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v121;
        uint64_t v122 = v24[5];
        uint64_t v325 = v40;
        uint64_t v123 = &v42[v122];
        uint64_t v124 = &v43[v122];
        uint64_t v125 = sub_248174700();
        uint64_t v126 = v123;
        uint64_t v40 = v325;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v126, v124, v125);
        uint64_t v127 = v24[6];
        long long v128 = &v42[v127];
        uint64_t v129 = &v43[v127];
        long long v130 = *((_OWORD *)v129 + 3);
        *((_OWORD *)v128 + 2) = *((_OWORD *)v129 + 2);
        *((_OWORD *)v128 + 3) = v130;
        *(_OWORD *)(v128 + 57) = *(_OWORD *)(v129 + 57);
        long long v131 = *((_OWORD *)v129 + 1);
        *(_OWORD *)long long v128 = *(_OWORD *)v129;
        *((_OWORD *)v128 + 1) = v131;
        *(void *)&v42[v24[7]] = *(void *)&v43[v24[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v326 + 56))(v42, 0, 1, v24);
      }
      uint64_t v132 = (int *)type metadata accessor for AuthenticationModel();
      uint64_t v133 = v132[5];
      uint64_t v134 = &v42[v133];
      long long v135 = &v43[v133];
      long long v136 = *((_OWORD *)v135 + 3);
      *((_OWORD *)v134 + 2) = *((_OWORD *)v135 + 2);
      *((_OWORD *)v134 + 3) = v136;
      *((_OWORD *)v134 + 4) = *((_OWORD *)v135 + 4);
      long long v137 = *((_OWORD *)v135 + 1);
      *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
      *((_OWORD *)v134 + 1) = v137;
      v42[v132[6]] = v43[v132[6]];
      *(_OWORD *)&v42[v132[7]] = *(_OWORD *)&v43[v132[7]];
      *(void *)&v42[v132[8]] = *(void *)&v43[v132[8]];
      v42[v132[9]] = v43[v132[9]];
      uint64_t v138 = v132[10];
      uint64_t v139 = &v42[v138];
      uint64_t v140 = &v43[v138];
      long long v141 = *((_OWORD *)v140 + 1);
      *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
      *((_OWORD *)v139 + 1) = v141;
      v139[80] = v140[80];
      long long v142 = *((_OWORD *)v140 + 4);
      long long v143 = *((_OWORD *)v140 + 2);
      *((_OWORD *)v139 + 3) = *((_OWORD *)v140 + 3);
      *((_OWORD *)v139 + 4) = v142;
      *((_OWORD *)v139 + 2) = v143;
      uint64_t v144 = v132[11];
      uint64_t v145 = &v42[v144];
      uint64_t v146 = &v43[v144];
      uint64_t v147 = *(void *)v146;
      if (*(void *)v146)
      {
        uint64_t v148 = *((void *)v146 + 1);
        *(void *)uint64_t v145 = v147;
        *((void *)v145 + 1) = v148;
      }
      else
      {
        *(_OWORD *)uint64_t v145 = *(_OWORD *)v146;
      }
      uint64_t v209 = *(int *)(v40 + 36);
      uint64_t v206 = &v29[v209];
      uint64_t v207 = &v30[v209];
      if (v330(&v30[v209], 1, v24))
      {
LABEL_25:
        uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
      }
      else
      {
LABEL_35:
        long long v218 = *((_OWORD *)v207 + 3);
        *((_OWORD *)v206 + 2) = *((_OWORD *)v207 + 2);
        *((_OWORD *)v206 + 3) = v218;
        *((_OWORD *)v206 + 4) = *((_OWORD *)v207 + 4);
        long long v219 = *((_OWORD *)v207 + 1);
        *(_OWORD *)uint64_t v206 = *(_OWORD *)v207;
        *((_OWORD *)v206 + 1) = v219;
        uint64_t v220 = v24[5];
        uint64_t v221 = &v206[v220];
        uint64_t v222 = &v207[v220];
        uint64_t v223 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 32))(v221, v222, v223);
        uint64_t v224 = v24[6];
        uint64_t v225 = &v206[v224];
        uint64_t v226 = &v207[v224];
        long long v227 = *((_OWORD *)v226 + 3);
        *((_OWORD *)v225 + 2) = *((_OWORD *)v226 + 2);
        *((_OWORD *)v225 + 3) = v227;
        *(_OWORD *)(v225 + 57) = *(_OWORD *)(v226 + 57);
        long long v228 = *((_OWORD *)v226 + 1);
        *(_OWORD *)uint64_t v225 = *(_OWORD *)v226;
        *((_OWORD *)v225 + 1) = v228;
        *(void *)&v206[v24[7]] = *(void *)&v207[v24[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v326 + 56))(v206, 0, 1, v24);
      }
      char v229 = (int *)type metadata accessor for SignInModel();
      uint64_t v230 = v229[5];
      uint64_t v231 = &v206[v230];
      uint64_t v232 = &v207[v230];
      long long v233 = *((_OWORD *)v232 + 3);
      *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
      *((_OWORD *)v231 + 3) = v233;
      long long v234 = *((_OWORD *)v232 + 5);
      *((_OWORD *)v231 + 4) = *((_OWORD *)v232 + 4);
      *((_OWORD *)v231 + 5) = v234;
      long long v235 = *((_OWORD *)v232 + 1);
      *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
      *((_OWORD *)v231 + 1) = v235;
      *(void *)&v206[v229[6]] = *(void *)&v207[v229[6]];
      *(void *)&v206[v229[7]] = *(void *)&v207[v229[7]];
      v206[v229[8]] = v207[v229[8]];
      v206[v229[9]] = v207[v229[9]];
      uint64_t v236 = v229[10];
      uint64_t v237 = &v206[v236];
      uint64_t v238 = &v207[v236];
      long long v239 = *((_OWORD *)v238 + 1);
      *(_OWORD *)uint64_t v237 = *(_OWORD *)v238;
      *((_OWORD *)v237 + 1) = v239;
      *(_OWORD *)&v206[v229[11]] = *(_OWORD *)&v207[v229[11]];
      *(void *)&v206[v229[12]] = *(void *)&v207[v229[12]];
      uint64_t v240 = v229[13];
      uint64_t v241 = &v206[v240];
      uint64_t v242 = &v207[v240];
      v241[16] = v242[16];
      *(_OWORD *)uint64_t v241 = *(_OWORD *)v242;
      *(_OWORD *)&v206[v229[14]] = *(_OWORD *)&v207[v229[14]];
      v206[v229[15]] = v207[v229[15]];
      uint64_t v243 = v229[16];
      uint64_t v244 = &v206[v243];
      uint64_t v245 = &v207[v243];
      long long v246 = *((_OWORD *)v245 + 1);
      *(_OWORD *)uint64_t v244 = *(_OWORD *)v245;
      *((_OWORD *)v244 + 1) = v246;
      v244[32] = v245[32];
      uint64_t v247 = *(int *)(v333 + 24);
      char v248 = (_OWORD *)((char *)a1 + v247);
      uint64_t v249 = (_OWORD *)((char *)a2 + v247);
      long long v250 = v249[1];
      *char v248 = *v249;
      v248[1] = v250;
      *(_OWORD *)((char *)v248 + 25) = *(_OWORD *)((char *)v249 + 25);
      goto LABEL_42;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
      uint64_t v45 = *(int *)(v334 + 32);
      long long v46 = (_OWORD *)((char *)a1 + v45);
      uint64_t v47 = (char *)a2 + v45;
      long long v48 = *(_OWORD *)((char *)a2 + v45 + 48);
      _OWORD v46[2] = *(_OWORD *)((char *)a2 + v45 + 32);
      v46[3] = v48;
      v46[4] = *(_OWORD *)((char *)a2 + v45 + 64);
      long long v49 = *(_OWORD *)((char *)a2 + v45 + 16);
      *long long v46 = *(_OWORD *)((char *)a2 + v45);
      v46[1] = v49;
      uint64_t v323 = type metadata accessor for RepairModel();
      unint64_t v327 = v47;
      uint64_t v50 = *(int *)(v323 + 20);
      v331 = v46;
      uint64_t v51 = (char *)v46 + v50;
      uint64_t v52 = &v47[v50];
      *uint64_t v51 = v47[v50];
      *(_OWORD *)(v51 + 22) = *(_OWORD *)&v47[v50 + 22];
      *(_OWORD *)(v51 + 8) = *(_OWORD *)&v47[v50 + 8];
      v51[88] = v47[v50 + 88];
      *(_OWORD *)(v51 + 72) = *(_OWORD *)&v47[v50 + 72];
      *(_OWORD *)(v51 + 56) = *(_OWORD *)&v47[v50 + 56];
      *(_OWORD *)(v51 + 40) = *(_OWORD *)&v47[v50 + 40];
      long long v53 = *(_OWORD *)&v47[v50 + 96];
      long long v54 = *(_OWORD *)&v47[v50 + 112];
      long long v55 = *(_OWORD *)&v47[v50 + 144];
      *((_OWORD *)v51 + 8) = *(_OWORD *)&v47[v50 + 128];
      *((_OWORD *)v51 + 9) = v55;
      *((_OWORD *)v51 + 6) = v53;
      *((_OWORD *)v51 + 7) = v54;
      long long v56 = *(_OWORD *)&v47[v50 + 160];
      long long v57 = *(_OWORD *)&v47[v50 + 176];
      long long v58 = *(_OWORD *)&v47[v50 + 208];
      *((_OWORD *)v51 + 12) = *(_OWORD *)&v47[v50 + 192];
      *((_OWORD *)v51 + 13) = v58;
      *((_OWORD *)v51 + 10) = v56;
      *((_OWORD *)v51 + 11) = v57;
      long long v59 = *(_OWORD *)&v47[v50 + 224];
      long long v60 = *(_OWORD *)&v47[v50 + 240];
      long long v61 = *(_OWORD *)&v47[v50 + 272];
      *((_OWORD *)v51 + 16) = *(_OWORD *)&v47[v50 + 256];
      *((_OWORD *)v51 + 17) = v61;
      *((_OWORD *)v51 + 14) = v59;
      *((_OWORD *)v51 + 15) = v60;
      uint64_t v321 = type metadata accessor for SetupModel();
      uint64_t v62 = *(int *)(v321 + 32);
      uint64_t v63 = &v51[v62];
      uint64_t v64 = &v52[v62];
      uint64_t v65 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v66 = *((void *)v65 - 1);
      uint64_t v319 = *(unsigned int (**)(char *, uint64_t, int *))(v66 + 48);
      if (v319(v64, 1, v65))
      {
        uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        long long v149 = *((_OWORD *)v64 + 3);
        *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
        *((_OWORD *)v63 + 3) = v149;
        *((_OWORD *)v63 + 4) = *((_OWORD *)v64 + 4);
        long long v150 = *((_OWORD *)v64 + 1);
        *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
        *((_OWORD *)v63 + 1) = v150;
        uint64_t v151 = v65[5];
        uint64_t v152 = &v63[v151];
        uint64_t v318 = &v64[v151];
        uint64_t v153 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v152, v318, v153);
        uint64_t v154 = v65[6];
        uint64_t v155 = &v63[v154];
        uint64_t v156 = &v64[v154];
        long long v157 = *((_OWORD *)v156 + 3);
        *((_OWORD *)v155 + 2) = *((_OWORD *)v156 + 2);
        *((_OWORD *)v155 + 3) = v157;
        *(_OWORD *)(v155 + 57) = *(_OWORD *)(v156 + 57);
        long long v158 = *((_OWORD *)v156 + 1);
        *(_OWORD *)uint64_t v155 = *(_OWORD *)v156;
        *((_OWORD *)v155 + 1) = v158;
        *(void *)&v63[v65[7]] = *(void *)&v64[v65[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v66 + 56))(v63, 0, 1, v65);
      }
      uint64_t v159 = (int *)type metadata accessor for AuthenticationModel();
      uint64_t v160 = v159[5];
      uint64_t v161 = &v63[v160];
      uint64_t v162 = &v64[v160];
      long long v163 = *((_OWORD *)v162 + 3);
      *((_OWORD *)v161 + 2) = *((_OWORD *)v162 + 2);
      *((_OWORD *)v161 + 3) = v163;
      *((_OWORD *)v161 + 4) = *((_OWORD *)v162 + 4);
      long long v164 = *((_OWORD *)v162 + 1);
      *(_OWORD *)uint64_t v161 = *(_OWORD *)v162;
      *((_OWORD *)v161 + 1) = v164;
      v63[v159[6]] = v64[v159[6]];
      *(_OWORD *)&v63[v159[7]] = *(_OWORD *)&v64[v159[7]];
      *(void *)&v63[v159[8]] = *(void *)&v64[v159[8]];
      v63[v159[9]] = v64[v159[9]];
      uint64_t v165 = v159[10];
      uint64_t v166 = &v63[v165];
      uint64_t v167 = &v64[v165];
      long long v168 = *((_OWORD *)v167 + 1);
      *(_OWORD *)uint64_t v166 = *(_OWORD *)v167;
      *((_OWORD *)v166 + 1) = v168;
      v166[80] = v167[80];
      long long v169 = *((_OWORD *)v167 + 4);
      long long v170 = *((_OWORD *)v167 + 2);
      *((_OWORD *)v166 + 3) = *((_OWORD *)v167 + 3);
      *((_OWORD *)v166 + 4) = v169;
      *((_OWORD *)v166 + 2) = v170;
      uint64_t v171 = v159[11];
      uint64_t v172 = &v63[v171];
      uint64_t v173 = (uint64_t *)&v64[v171];
      uint64_t v174 = *v173;
      if (*v173)
      {
        uint64_t v175 = v173[1];
        *(void *)uint64_t v172 = v174;
        *((void *)v172 + 1) = v175;
      }
      else
      {
        *(_OWORD *)uint64_t v172 = *(_OWORD *)v173;
      }
      uint64_t v210 = *(int *)(v321 + 36);
      uint64_t v211 = &v51[v210];
      uint64_t v212 = &v52[v210];
      if (v319(&v52[v210], 1, v65))
      {
        uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
      }
      else
      {
        long long v251 = *((_OWORD *)v212 + 3);
        *((_OWORD *)v211 + 2) = *((_OWORD *)v212 + 2);
        *((_OWORD *)v211 + 3) = v251;
        *((_OWORD *)v211 + 4) = *((_OWORD *)v212 + 4);
        long long v252 = *((_OWORD *)v212 + 1);
        *(_OWORD *)uint64_t v211 = *(_OWORD *)v212;
        *((_OWORD *)v211 + 1) = v252;
        uint64_t v253 = v65[5];
        long long v254 = &v211[v253];
        long long v255 = &v212[v253];
        uint64_t v256 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
        uint64_t v257 = v65[6];
        uint64_t v258 = &v211[v257];
        uint64_t v259 = &v212[v257];
        long long v260 = *((_OWORD *)v259 + 3);
        *((_OWORD *)v258 + 2) = *((_OWORD *)v259 + 2);
        *((_OWORD *)v258 + 3) = v260;
        *(_OWORD *)(v258 + 57) = *(_OWORD *)(v259 + 57);
        long long v261 = *((_OWORD *)v259 + 1);
        *(_OWORD *)uint64_t v258 = *(_OWORD *)v259;
        *((_OWORD *)v258 + 1) = v261;
        *(void *)&v211[v65[7]] = *(void *)&v212[v65[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v66 + 56))(v211, 0, 1, v65);
      }
      uint64_t v262 = (int *)type metadata accessor for SignInModel();
      uint64_t v263 = v262[5];
      uint64_t v264 = &v211[v263];
      uint64_t v265 = &v212[v263];
      long long v266 = *((_OWORD *)v265 + 3);
      *((_OWORD *)v264 + 2) = *((_OWORD *)v265 + 2);
      *((_OWORD *)v264 + 3) = v266;
      long long v267 = *((_OWORD *)v265 + 5);
      *((_OWORD *)v264 + 4) = *((_OWORD *)v265 + 4);
      *((_OWORD *)v264 + 5) = v267;
      long long v268 = *((_OWORD *)v265 + 1);
      *(_OWORD *)uint64_t v264 = *(_OWORD *)v265;
      *((_OWORD *)v264 + 1) = v268;
      *(void *)&v211[v262[6]] = *(void *)&v212[v262[6]];
      *(void *)&v211[v262[7]] = *(void *)&v212[v262[7]];
      v211[v262[8]] = v212[v262[8]];
      v211[v262[9]] = v212[v262[9]];
      uint64_t v269 = v262[10];
      uint64_t v270 = &v211[v269];
      uint64_t v271 = &v212[v269];
      long long v272 = *((_OWORD *)v271 + 1);
      *(_OWORD *)uint64_t v270 = *(_OWORD *)v271;
      *((_OWORD *)v270 + 1) = v272;
      *(_OWORD *)&v211[v262[11]] = *(_OWORD *)&v212[v262[11]];
      *(void *)&v211[v262[12]] = *(void *)&v212[v262[12]];
      uint64_t v273 = v262[13];
      long long v274 = &v211[v273];
      long long v275 = &v212[v273];
      v274[16] = v275[16];
      *(_OWORD *)long long v274 = *(_OWORD *)v275;
      *(_OWORD *)&v211[v262[14]] = *(_OWORD *)&v212[v262[14]];
      v211[v262[15]] = v212[v262[15]];
      uint64_t v276 = v262[16];
      uint64_t v277 = &v211[v276];
      uint64_t v278 = &v212[v276];
      long long v279 = *((_OWORD *)v278 + 1);
      *(_OWORD *)uint64_t v277 = *(_OWORD *)v278;
      *((_OWORD *)v277 + 1) = v279;
      v277[32] = v278[32];
      uint64_t v280 = *(int *)(v323 + 24);
      uint64_t v281 = (_OWORD *)((char *)v331 + v280);
      uint64_t v282 = &v327[v280];
      long long v283 = *((_OWORD *)v282 + 1);
      *uint64_t v281 = *(_OWORD *)v282;
      v281[1] = v283;
      *(_OWORD *)((char *)v281 + 25) = *(_OWORD *)(v282 + 25);
      *(void *)((char *)a1 + *(int *)(v334 + 36)) = *(void *)((char *)a2 + *(int *)(v334 + 36));
      goto LABEL_42;
    case 5u:
      *a1 = *a2;
      uint64_t v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628) + 32);
      uint64_t v69 = (_OWORD *)((char *)a1 + v68);
      uint64_t v70 = (char *)a2 + v68;
      long long v71 = *(_OWORD *)((char *)a2 + v68 + 48);
      v69[2] = *(_OWORD *)((char *)a2 + v68 + 32);
      v69[3] = v71;
      v69[4] = *(_OWORD *)((char *)a2 + v68 + 64);
      long long v72 = *(_OWORD *)((char *)a2 + v68 + 16);
      *uint64_t v69 = *(_OWORD *)((char *)a2 + v68);
      v69[1] = v72;
      uint64_t v335 = type metadata accessor for RepairModel();
      uint64_t v73 = *(int *)(v335 + 20);
      uint64_t v74 = (char *)v69 + v73;
      uint64_t v75 = &v70[v73];
      *uint64_t v74 = v70[v73];
      *(_OWORD *)(v74 + 22) = *(_OWORD *)&v70[v73 + 22];
      *(_OWORD *)(v74 + 8) = *(_OWORD *)&v70[v73 + 8];
      v74[88] = v70[v73 + 88];
      *(_OWORD *)(v74 + 72) = *(_OWORD *)&v70[v73 + 72];
      *(_OWORD *)(v74 + 56) = *(_OWORD *)&v70[v73 + 56];
      *(_OWORD *)(v74 + 40) = *(_OWORD *)&v70[v73 + 40];
      long long v76 = *(_OWORD *)&v70[v73 + 96];
      long long v77 = *(_OWORD *)&v70[v73 + 112];
      long long v78 = *(_OWORD *)&v70[v73 + 144];
      *((_OWORD *)v74 + 8) = *(_OWORD *)&v70[v73 + 128];
      *((_OWORD *)v74 + 9) = v78;
      *((_OWORD *)v74 + 6) = v76;
      *((_OWORD *)v74 + 7) = v77;
      long long v79 = *(_OWORD *)&v70[v73 + 160];
      long long v80 = *(_OWORD *)&v70[v73 + 176];
      long long v81 = *(_OWORD *)&v70[v73 + 208];
      *((_OWORD *)v74 + 12) = *(_OWORD *)&v70[v73 + 192];
      *((_OWORD *)v74 + 13) = v81;
      *((_OWORD *)v74 + 10) = v79;
      *((_OWORD *)v74 + 11) = v80;
      long long v82 = *(_OWORD *)&v70[v73 + 224];
      long long v83 = *(_OWORD *)&v70[v73 + 240];
      long long v84 = *(_OWORD *)&v70[v73 + 272];
      *((_OWORD *)v74 + 16) = *(_OWORD *)&v70[v73 + 256];
      *((_OWORD *)v74 + 17) = v84;
      *((_OWORD *)v74 + 14) = v82;
      *((_OWORD *)v74 + 15) = v83;
      uint64_t v332 = type metadata accessor for SetupModel();
      uint64_t v85 = *(int *)(v332 + 32);
      uint64_t v86 = &v74[v85];
      uint64_t v87 = &v75[v85];
      uint64_t v88 = (int *)type metadata accessor for IdMSAccount();
      uint64_t v89 = *((void *)v88 - 1);
      uint64_t v328 = *(unsigned int (**)(char *, uint64_t, int *))(v89 + 48);
      if (v328(v87, 1, v88))
      {
        uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        long long v176 = *((_OWORD *)v87 + 3);
        *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
        *((_OWORD *)v86 + 3) = v176;
        *((_OWORD *)v86 + 4) = *((_OWORD *)v87 + 4);
        long long v177 = *((_OWORD *)v87 + 1);
        *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
        *((_OWORD *)v86 + 1) = v177;
        uint64_t v178 = v88[5];
        uint64_t v320 = &v86[v178];
        uint64_t v322 = v70;
        uint64_t v179 = v69;
        uint64_t v180 = &v87[v178];
        uint64_t v181 = sub_248174700();
        uint64_t v182 = v180;
        uint64_t v69 = v179;
        uint64_t v70 = v322;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v320, v182, v181);
        uint64_t v183 = v88[6];
        uint64_t v184 = &v86[v183];
        uint64_t v185 = &v87[v183];
        long long v186 = *((_OWORD *)v185 + 3);
        *((_OWORD *)v184 + 2) = *((_OWORD *)v185 + 2);
        *((_OWORD *)v184 + 3) = v186;
        *(_OWORD *)(v184 + 57) = *(_OWORD *)(v185 + 57);
        long long v187 = *((_OWORD *)v185 + 1);
        *(_OWORD *)uint64_t v184 = *(_OWORD *)v185;
        *((_OWORD *)v184 + 1) = v187;
        *(void *)&v86[v88[7]] = *(void *)&v87[v88[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
      }
      uint64_t v188 = (int *)type metadata accessor for AuthenticationModel();
      uint64_t v189 = v188[5];
      uint64_t v190 = &v86[v189];
      uint64_t v191 = &v87[v189];
      long long v192 = *((_OWORD *)v191 + 3);
      *((_OWORD *)v190 + 2) = *((_OWORD *)v191 + 2);
      *((_OWORD *)v190 + 3) = v192;
      *((_OWORD *)v190 + 4) = *((_OWORD *)v191 + 4);
      long long v193 = *((_OWORD *)v191 + 1);
      *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
      *((_OWORD *)v190 + 1) = v193;
      v86[v188[6]] = v87[v188[6]];
      *(_OWORD *)&v86[v188[7]] = *(_OWORD *)&v87[v188[7]];
      *(void *)&v86[v188[8]] = *(void *)&v87[v188[8]];
      v86[v188[9]] = v87[v188[9]];
      uint64_t v194 = v188[10];
      uint64_t v195 = &v86[v194];
      uint64_t v196 = &v87[v194];
      long long v197 = *((_OWORD *)v196 + 1);
      *(_OWORD *)uint64_t v195 = *(_OWORD *)v196;
      *((_OWORD *)v195 + 1) = v197;
      v195[80] = v196[80];
      long long v198 = *((_OWORD *)v196 + 4);
      long long v199 = *((_OWORD *)v196 + 2);
      *((_OWORD *)v195 + 3) = *((_OWORD *)v196 + 3);
      *((_OWORD *)v195 + 4) = v198;
      *((_OWORD *)v195 + 2) = v199;
      uint64_t v200 = v188[11];
      uint64_t v201 = &v86[v200];
      uint64_t v202 = (uint64_t *)&v87[v200];
      uint64_t v203 = *v202;
      if (*v202)
      {
        uint64_t v204 = v202[1];
        *(void *)uint64_t v201 = v203;
        *((void *)v201 + 1) = v204;
      }
      else
      {
        *(_OWORD *)uint64_t v201 = *(_OWORD *)v202;
      }
      uint64_t v214 = *(int *)(v332 + 36);
      long long v215 = &v74[v214];
      long long v216 = &v75[v214];
      if (v328(&v75[v214], 1, v88))
      {
        uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
        memcpy(v215, v216, *(void *)(*(void *)(v217 - 8) + 64));
      }
      else
      {
        long long v284 = *((_OWORD *)v216 + 3);
        *((_OWORD *)v215 + 2) = *((_OWORD *)v216 + 2);
        *((_OWORD *)v215 + 3) = v284;
        *((_OWORD *)v215 + 4) = *((_OWORD *)v216 + 4);
        long long v285 = *((_OWORD *)v216 + 1);
        *(_OWORD *)long long v215 = *(_OWORD *)v216;
        *((_OWORD *)v215 + 1) = v285;
        uint64_t v286 = v88[5];
        uint64_t v287 = &v215[v286];
        char v288 = &v216[v286];
        uint64_t v289 = sub_248174700();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 32))(v287, v288, v289);
        uint64_t v290 = v88[6];
        uint64_t v291 = &v215[v290];
        uint64_t v292 = &v216[v290];
        long long v293 = *((_OWORD *)v292 + 3);
        *((_OWORD *)v291 + 2) = *((_OWORD *)v292 + 2);
        *((_OWORD *)v291 + 3) = v293;
        *(_OWORD *)(v291 + 57) = *(_OWORD *)(v292 + 57);
        long long v294 = *((_OWORD *)v292 + 1);
        *(_OWORD *)uint64_t v291 = *(_OWORD *)v292;
        *((_OWORD *)v291 + 1) = v294;
        *(void *)&v215[v88[7]] = *(void *)&v216[v88[7]];
        (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(v215, 0, 1, v88);
      }
      uint64_t v295 = (int *)type metadata accessor for SignInModel();
      uint64_t v296 = v295[5];
      uint64_t v297 = &v215[v296];
      uint64_t v298 = &v216[v296];
      long long v299 = *((_OWORD *)v298 + 3);
      *((_OWORD *)v297 + 2) = *((_OWORD *)v298 + 2);
      *((_OWORD *)v297 + 3) = v299;
      long long v300 = *((_OWORD *)v298 + 5);
      *((_OWORD *)v297 + 4) = *((_OWORD *)v298 + 4);
      *((_OWORD *)v297 + 5) = v300;
      long long v301 = *((_OWORD *)v298 + 1);
      *(_OWORD *)uint64_t v297 = *(_OWORD *)v298;
      *((_OWORD *)v297 + 1) = v301;
      *(void *)&v215[v295[6]] = *(void *)&v216[v295[6]];
      *(void *)&v215[v295[7]] = *(void *)&v216[v295[7]];
      v215[v295[8]] = v216[v295[8]];
      v215[v295[9]] = v216[v295[9]];
      uint64_t v302 = v295[10];
      uint64_t v303 = &v215[v302];
      uint64_t v304 = &v216[v302];
      long long v305 = *((_OWORD *)v304 + 1);
      *(_OWORD *)uint64_t v303 = *(_OWORD *)v304;
      *((_OWORD *)v303 + 1) = v305;
      *(_OWORD *)&v215[v295[11]] = *(_OWORD *)&v216[v295[11]];
      *(void *)&v215[v295[12]] = *(void *)&v216[v295[12]];
      uint64_t v306 = v295[13];
      v307 = &v215[v306];
      uint64_t v308 = &v216[v306];
      v307[16] = v308[16];
      *(_OWORD *)v307 = *(_OWORD *)v308;
      *(_OWORD *)&v215[v295[14]] = *(_OWORD *)&v216[v295[14]];
      v215[v295[15]] = v216[v295[15]];
      uint64_t v309 = v295[16];
      uint64_t v310 = &v215[v309];
      uint64_t v311 = &v216[v309];
      long long v312 = *((_OWORD *)v311 + 1);
      *(_OWORD *)uint64_t v310 = *(_OWORD *)v311;
      *((_OWORD *)v310 + 1) = v312;
      v310[32] = v311[32];
      uint64_t v313 = *(int *)(v335 + 24);
      uint64_t v314 = (_OWORD *)((char *)v69 + v313);
      uint64_t v315 = &v70[v313];
      long long v316 = *((_OWORD *)v315 + 1);
      _OWORD *v314 = *(_OWORD *)v315;
      v314[1] = v316;
      *(_OWORD *)((char *)v314 + 25) = *(_OWORD *)(v315 + 25);
LABEL_42:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for MachRepairMessage(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_247FEFB38((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for MachRepairMessage);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        long long v6 = a2[3];
        a1[2] = a2[2];
        a1[3] = v6;
        a1[4] = a2[4];
        long long v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        uint64_t v333 = type metadata accessor for RepairModel();
        uint64_t v8 = *(int *)(v333 + 20);
        int v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        *int v9 = *((unsigned char *)a2 + v8);
        *(_OWORD *)(v9 + 22) = *(_OWORD *)((char *)a2 + v8 + 22);
        *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
        v9[88] = *((unsigned char *)a2 + v8 + 88);
        *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
        *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
        *(_OWORD *)(v9 + 40) = *(_OWORD *)((char *)a2 + v8 + 40);
        long long v11 = *(_OWORD *)((char *)a2 + v8 + 96);
        long long v12 = *(_OWORD *)((char *)a2 + v8 + 112);
        long long v13 = *(_OWORD *)((char *)a2 + v8 + 144);
        *((_OWORD *)v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 128);
        *((_OWORD *)v9 + 9) = v13;
        *((_OWORD *)v9 + 6) = v11;
        *((_OWORD *)v9 + 7) = v12;
        long long v14 = *(_OWORD *)((char *)a2 + v8 + 160);
        long long v15 = *(_OWORD *)((char *)a2 + v8 + 176);
        long long v16 = *(_OWORD *)((char *)a2 + v8 + 208);
        *((_OWORD *)v9 + 12) = *(_OWORD *)((char *)a2 + v8 + 192);
        *((_OWORD *)v9 + 13) = v16;
        *((_OWORD *)v9 + 10) = v14;
        *((_OWORD *)v9 + 11) = v15;
        long long v17 = *(_OWORD *)((char *)a2 + v8 + 224);
        long long v18 = *(_OWORD *)((char *)a2 + v8 + 240);
        long long v19 = *(_OWORD *)((char *)a2 + v8 + 272);
        *((_OWORD *)v9 + 16) = *(_OWORD *)((char *)a2 + v8 + 256);
        *((_OWORD *)v9 + 17) = v19;
        *((_OWORD *)v9 + 14) = v17;
        *((_OWORD *)v9 + 15) = v18;
        uint64_t v20 = type metadata accessor for SetupModel();
        uint64_t v21 = *(int *)(v20 + 32);
        long long v22 = &v9[v21];
        uint64_t v23 = &v10[v21];
        uint64_t v24 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v326 = *((void *)v24 - 1);
        uint64_t v329 = *(unsigned int (**)(char *, uint64_t, int *))(v326 + 48);
        if (v329(v23, 1, v24))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          long long v91 = *((_OWORD *)v23 + 3);
          *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
          *((_OWORD *)v22 + 3) = v91;
          *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
          long long v92 = *((_OWORD *)v23 + 1);
          *(_OWORD *)long long v22 = *(_OWORD *)v23;
          *((_OWORD *)v22 + 1) = v92;
          uint64_t v93 = v24[5];
          uint64_t v324 = v20;
          uint64_t v94 = &v22[v93];
          uint64_t v95 = &v23[v93];
          uint64_t v96 = sub_248174700();
          uint64_t v97 = v94;
          uint64_t v20 = v324;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v97, v95, v96);
          uint64_t v98 = v24[6];
          uint64_t v99 = &v22[v98];
          uint64_t v100 = &v23[v98];
          long long v101 = *((_OWORD *)v100 + 3);
          *((_OWORD *)v99 + 2) = *((_OWORD *)v100 + 2);
          *((_OWORD *)v99 + 3) = v101;
          *(_OWORD *)(v99 + 57) = *(_OWORD *)(v100 + 57);
          long long v102 = *((_OWORD *)v100 + 1);
          *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
          *((_OWORD *)v99 + 1) = v102;
          *(void *)&v22[v24[7]] = *(void *)&v23[v24[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v326 + 56))(v22, 0, 1, v24);
        }
        uint64_t v103 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v104 = v103[5];
        uint64_t v105 = &v22[v104];
        unsigned int v106 = &v23[v104];
        long long v107 = *((_OWORD *)v106 + 3);
        *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
        *((_OWORD *)v105 + 3) = v107;
        *((_OWORD *)v105 + 4) = *((_OWORD *)v106 + 4);
        long long v108 = *((_OWORD *)v106 + 1);
        *(_OWORD *)uint64_t v105 = *(_OWORD *)v106;
        *((_OWORD *)v105 + 1) = v108;
        v22[v103[6]] = v23[v103[6]];
        *(_OWORD *)&v22[v103[7]] = *(_OWORD *)&v23[v103[7]];
        *(void *)&v22[v103[8]] = *(void *)&v23[v103[8]];
        v22[v103[9]] = v23[v103[9]];
        uint64_t v109 = v103[10];
        uint64_t v110 = &v22[v109];
        uint64_t v111 = &v23[v109];
        long long v112 = *((_OWORD *)v111 + 1);
        *(_OWORD *)uint64_t v110 = *(_OWORD *)v111;
        *((_OWORD *)v110 + 1) = v112;
        v110[80] = v111[80];
        long long v113 = *((_OWORD *)v111 + 4);
        long long v114 = *((_OWORD *)v111 + 2);
        *((_OWORD *)v110 + 3) = *((_OWORD *)v111 + 3);
        *((_OWORD *)v110 + 4) = v113;
        *((_OWORD *)v110 + 2) = v114;
        uint64_t v115 = v103[11];
        uint64_t v116 = &v22[v115];
        uint64_t v117 = &v23[v115];
        uint64_t v118 = *(void *)v117;
        if (*(void *)v117)
        {
          uint64_t v119 = *((void *)v117 + 1);
          *(void *)uint64_t v116 = v118;
          *((void *)v116 + 1) = v119;
        }
        else
        {
          *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
        }
        uint64_t v205 = *(int *)(v20 + 36);
        uint64_t v206 = &v9[v205];
        uint64_t v207 = &v10[v205];
        if (!v329(&v10[v205], 1, v24)) {
          goto LABEL_36;
        }
        goto LABEL_26;
      case 2u:
        long long v26 = a2[3];
        a1[2] = a2[2];
        a1[3] = v26;
        a1[4] = a2[4];
        long long v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        uint64_t v333 = type metadata accessor for RepairModel();
        uint64_t v28 = *(int *)(v333 + 20);
        long long v29 = (char *)a1 + v28;
        long long v30 = (char *)a2 + v28;
        *long long v29 = *((unsigned char *)a2 + v28);
        *(_OWORD *)(v29 + 22) = *(_OWORD *)((char *)a2 + v28 + 22);
        *(_OWORD *)(v29 + 8) = *(_OWORD *)((char *)a2 + v28 + 8);
        v29[88] = *((unsigned char *)a2 + v28 + 88);
        *(_OWORD *)(v29 + 72) = *(_OWORD *)((char *)a2 + v28 + 72);
        *(_OWORD *)(v29 + 56) = *(_OWORD *)((char *)a2 + v28 + 56);
        *(_OWORD *)(v29 + 40) = *(_OWORD *)((char *)a2 + v28 + 40);
        long long v31 = *(_OWORD *)((char *)a2 + v28 + 96);
        long long v32 = *(_OWORD *)((char *)a2 + v28 + 112);
        long long v33 = *(_OWORD *)((char *)a2 + v28 + 144);
        *((_OWORD *)v29 + 8) = *(_OWORD *)((char *)a2 + v28 + 128);
        *((_OWORD *)v29 + 9) = v33;
        *((_OWORD *)v29 + 6) = v31;
        *((_OWORD *)v29 + 7) = v32;
        long long v34 = *(_OWORD *)((char *)a2 + v28 + 160);
        long long v35 = *(_OWORD *)((char *)a2 + v28 + 176);
        long long v36 = *(_OWORD *)((char *)a2 + v28 + 208);
        *((_OWORD *)v29 + 12) = *(_OWORD *)((char *)a2 + v28 + 192);
        *((_OWORD *)v29 + 13) = v36;
        *((_OWORD *)v29 + 10) = v34;
        *((_OWORD *)v29 + 11) = v35;
        long long v37 = *(_OWORD *)((char *)a2 + v28 + 224);
        long long v38 = *(_OWORD *)((char *)a2 + v28 + 240);
        long long v39 = *(_OWORD *)((char *)a2 + v28 + 272);
        *((_OWORD *)v29 + 16) = *(_OWORD *)((char *)a2 + v28 + 256);
        *((_OWORD *)v29 + 17) = v39;
        *((_OWORD *)v29 + 14) = v37;
        *((_OWORD *)v29 + 15) = v38;
        uint64_t v40 = type metadata accessor for SetupModel();
        uint64_t v41 = *(int *)(v40 + 32);
        uint64_t v42 = &v29[v41];
        unsigned int v43 = &v30[v41];
        uint64_t v24 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v326 = *((void *)v24 - 1);
        uint64_t v330 = *(unsigned int (**)(char *, uint64_t, int *))(v326 + 48);
        if (v330(v43, 1, v24))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          long long v120 = *((_OWORD *)v43 + 3);
          *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
          *((_OWORD *)v42 + 3) = v120;
          *((_OWORD *)v42 + 4) = *((_OWORD *)v43 + 4);
          long long v121 = *((_OWORD *)v43 + 1);
          *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
          *((_OWORD *)v42 + 1) = v121;
          uint64_t v122 = v24[5];
          uint64_t v325 = v40;
          uint64_t v123 = &v42[v122];
          uint64_t v124 = &v43[v122];
          uint64_t v125 = sub_248174700();
          uint64_t v126 = v123;
          uint64_t v40 = v325;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(v126, v124, v125);
          uint64_t v127 = v24[6];
          long long v128 = &v42[v127];
          uint64_t v129 = &v43[v127];
          long long v130 = *((_OWORD *)v129 + 3);
          *((_OWORD *)v128 + 2) = *((_OWORD *)v129 + 2);
          *((_OWORD *)v128 + 3) = v130;
          *(_OWORD *)(v128 + 57) = *(_OWORD *)(v129 + 57);
          long long v131 = *((_OWORD *)v129 + 1);
          *(_OWORD *)long long v128 = *(_OWORD *)v129;
          *((_OWORD *)v128 + 1) = v131;
          *(void *)&v42[v24[7]] = *(void *)&v43[v24[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v326 + 56))(v42, 0, 1, v24);
        }
        uint64_t v132 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v133 = v132[5];
        uint64_t v134 = &v42[v133];
        long long v135 = &v43[v133];
        long long v136 = *((_OWORD *)v135 + 3);
        *((_OWORD *)v134 + 2) = *((_OWORD *)v135 + 2);
        *((_OWORD *)v134 + 3) = v136;
        *((_OWORD *)v134 + 4) = *((_OWORD *)v135 + 4);
        long long v137 = *((_OWORD *)v135 + 1);
        *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
        *((_OWORD *)v134 + 1) = v137;
        v42[v132[6]] = v43[v132[6]];
        *(_OWORD *)&v42[v132[7]] = *(_OWORD *)&v43[v132[7]];
        *(void *)&v42[v132[8]] = *(void *)&v43[v132[8]];
        v42[v132[9]] = v43[v132[9]];
        uint64_t v138 = v132[10];
        uint64_t v139 = &v42[v138];
        uint64_t v140 = &v43[v138];
        long long v141 = *((_OWORD *)v140 + 1);
        *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
        *((_OWORD *)v139 + 1) = v141;
        v139[80] = v140[80];
        long long v142 = *((_OWORD *)v140 + 4);
        long long v143 = *((_OWORD *)v140 + 2);
        *((_OWORD *)v139 + 3) = *((_OWORD *)v140 + 3);
        *((_OWORD *)v139 + 4) = v142;
        *((_OWORD *)v139 + 2) = v143;
        uint64_t v144 = v132[11];
        uint64_t v145 = &v42[v144];
        uint64_t v146 = &v43[v144];
        uint64_t v147 = *(void *)v146;
        if (*(void *)v146)
        {
          uint64_t v148 = *((void *)v146 + 1);
          *(void *)uint64_t v145 = v147;
          *((void *)v145 + 1) = v148;
        }
        else
        {
          *(_OWORD *)uint64_t v145 = *(_OWORD *)v146;
        }
        uint64_t v209 = *(int *)(v40 + 36);
        uint64_t v206 = &v29[v209];
        uint64_t v207 = &v30[v209];
        if (v330(&v30[v209], 1, v24))
        {
LABEL_26:
          uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
        }
        else
        {
LABEL_36:
          long long v218 = *((_OWORD *)v207 + 3);
          *((_OWORD *)v206 + 2) = *((_OWORD *)v207 + 2);
          *((_OWORD *)v206 + 3) = v218;
          *((_OWORD *)v206 + 4) = *((_OWORD *)v207 + 4);
          long long v219 = *((_OWORD *)v207 + 1);
          *(_OWORD *)uint64_t v206 = *(_OWORD *)v207;
          *((_OWORD *)v206 + 1) = v219;
          uint64_t v220 = v24[5];
          uint64_t v221 = &v206[v220];
          uint64_t v222 = &v207[v220];
          uint64_t v223 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v223 - 8) + 32))(v221, v222, v223);
          uint64_t v224 = v24[6];
          uint64_t v225 = &v206[v224];
          uint64_t v226 = &v207[v224];
          long long v227 = *((_OWORD *)v226 + 3);
          *((_OWORD *)v225 + 2) = *((_OWORD *)v226 + 2);
          *((_OWORD *)v225 + 3) = v227;
          *(_OWORD *)(v225 + 57) = *(_OWORD *)(v226 + 57);
          long long v228 = *((_OWORD *)v226 + 1);
          *(_OWORD *)uint64_t v225 = *(_OWORD *)v226;
          *((_OWORD *)v225 + 1) = v228;
          *(void *)&v206[v24[7]] = *(void *)&v207[v24[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v326 + 56))(v206, 0, 1, v24);
        }
        char v229 = (int *)type metadata accessor for SignInModel();
        uint64_t v230 = v229[5];
        uint64_t v231 = &v206[v230];
        uint64_t v232 = &v207[v230];
        long long v233 = *((_OWORD *)v232 + 3);
        *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
        *((_OWORD *)v231 + 3) = v233;
        long long v234 = *((_OWORD *)v232 + 5);
        *((_OWORD *)v231 + 4) = *((_OWORD *)v232 + 4);
        *((_OWORD *)v231 + 5) = v234;
        long long v235 = *((_OWORD *)v232 + 1);
        *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
        *((_OWORD *)v231 + 1) = v235;
        *(void *)&v206[v229[6]] = *(void *)&v207[v229[6]];
        *(void *)&v206[v229[7]] = *(void *)&v207[v229[7]];
        v206[v229[8]] = v207[v229[8]];
        v206[v229[9]] = v207[v229[9]];
        uint64_t v236 = v229[10];
        uint64_t v237 = &v206[v236];
        uint64_t v238 = &v207[v236];
        long long v239 = *((_OWORD *)v238 + 1);
        *(_OWORD *)uint64_t v237 = *(_OWORD *)v238;
        *((_OWORD *)v237 + 1) = v239;
        *(_OWORD *)&v206[v229[11]] = *(_OWORD *)&v207[v229[11]];
        *(void *)&v206[v229[12]] = *(void *)&v207[v229[12]];
        uint64_t v240 = v229[13];
        uint64_t v241 = &v206[v240];
        uint64_t v242 = &v207[v240];
        v241[16] = v242[16];
        *(_OWORD *)uint64_t v241 = *(_OWORD *)v242;
        *(_OWORD *)&v206[v229[14]] = *(_OWORD *)&v207[v229[14]];
        v206[v229[15]] = v207[v229[15]];
        uint64_t v243 = v229[16];
        uint64_t v244 = &v206[v243];
        uint64_t v245 = &v207[v243];
        long long v246 = *((_OWORD *)v245 + 1);
        *(_OWORD *)uint64_t v244 = *(_OWORD *)v245;
        *((_OWORD *)v244 + 1) = v246;
        v244[32] = v245[32];
        uint64_t v247 = *(int *)(v333 + 24);
        char v248 = (_OWORD *)((char *)a1 + v247);
        uint64_t v249 = (_OWORD *)((char *)a2 + v247);
        long long v250 = v249[1];
        *char v248 = *v249;
        v248[1] = v250;
        *(_OWORD *)((char *)v248 + 25) = *(_OWORD *)((char *)v249 + 25);
        goto LABEL_43;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
        uint64_t v45 = *(int *)(v334 + 32);
        long long v46 = (_OWORD *)((char *)a1 + v45);
        uint64_t v47 = (char *)a2 + v45;
        long long v48 = *(_OWORD *)((char *)a2 + v45 + 48);
        _OWORD v46[2] = *(_OWORD *)((char *)a2 + v45 + 32);
        v46[3] = v48;
        v46[4] = *(_OWORD *)((char *)a2 + v45 + 64);
        long long v49 = *(_OWORD *)((char *)a2 + v45 + 16);
        *long long v46 = *(_OWORD *)((char *)a2 + v45);
        v46[1] = v49;
        uint64_t v323 = type metadata accessor for RepairModel();
        unint64_t v327 = v47;
        uint64_t v50 = *(int *)(v323 + 20);
        v331 = v46;
        uint64_t v51 = (char *)v46 + v50;
        uint64_t v52 = &v47[v50];
        *uint64_t v51 = v47[v50];
        *(_OWORD *)(v51 + 22) = *(_OWORD *)&v47[v50 + 22];
        *(_OWORD *)(v51 + 8) = *(_OWORD *)&v47[v50 + 8];
        v51[88] = v47[v50 + 88];
        *(_OWORD *)(v51 + 72) = *(_OWORD *)&v47[v50 + 72];
        *(_OWORD *)(v51 + 56) = *(_OWORD *)&v47[v50 + 56];
        *(_OWORD *)(v51 + 40) = *(_OWORD *)&v47[v50 + 40];
        long long v53 = *(_OWORD *)&v47[v50 + 96];
        long long v54 = *(_OWORD *)&v47[v50 + 112];
        long long v55 = *(_OWORD *)&v47[v50 + 144];
        *((_OWORD *)v51 + 8) = *(_OWORD *)&v47[v50 + 128];
        *((_OWORD *)v51 + 9) = v55;
        *((_OWORD *)v51 + 6) = v53;
        *((_OWORD *)v51 + 7) = v54;
        long long v56 = *(_OWORD *)&v47[v50 + 160];
        long long v57 = *(_OWORD *)&v47[v50 + 176];
        long long v58 = *(_OWORD *)&v47[v50 + 208];
        *((_OWORD *)v51 + 12) = *(_OWORD *)&v47[v50 + 192];
        *((_OWORD *)v51 + 13) = v58;
        *((_OWORD *)v51 + 10) = v56;
        *((_OWORD *)v51 + 11) = v57;
        long long v59 = *(_OWORD *)&v47[v50 + 224];
        long long v60 = *(_OWORD *)&v47[v50 + 240];
        long long v61 = *(_OWORD *)&v47[v50 + 272];
        *((_OWORD *)v51 + 16) = *(_OWORD *)&v47[v50 + 256];
        *((_OWORD *)v51 + 17) = v61;
        *((_OWORD *)v51 + 14) = v59;
        *((_OWORD *)v51 + 15) = v60;
        uint64_t v321 = type metadata accessor for SetupModel();
        uint64_t v62 = *(int *)(v321 + 32);
        uint64_t v63 = &v51[v62];
        uint64_t v64 = &v52[v62];
        uint64_t v65 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v66 = *((void *)v65 - 1);
        uint64_t v319 = *(unsigned int (**)(char *, uint64_t, int *))(v66 + 48);
        if (v319(v64, 1, v65))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          long long v149 = *((_OWORD *)v64 + 3);
          *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
          *((_OWORD *)v63 + 3) = v149;
          *((_OWORD *)v63 + 4) = *((_OWORD *)v64 + 4);
          long long v150 = *((_OWORD *)v64 + 1);
          *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
          *((_OWORD *)v63 + 1) = v150;
          uint64_t v151 = v65[5];
          uint64_t v152 = &v63[v151];
          uint64_t v318 = &v64[v151];
          uint64_t v153 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v152, v318, v153);
          uint64_t v154 = v65[6];
          uint64_t v155 = &v63[v154];
          uint64_t v156 = &v64[v154];
          long long v157 = *((_OWORD *)v156 + 3);
          *((_OWORD *)v155 + 2) = *((_OWORD *)v156 + 2);
          *((_OWORD *)v155 + 3) = v157;
          *(_OWORD *)(v155 + 57) = *(_OWORD *)(v156 + 57);
          long long v158 = *((_OWORD *)v156 + 1);
          *(_OWORD *)uint64_t v155 = *(_OWORD *)v156;
          *((_OWORD *)v155 + 1) = v158;
          *(void *)&v63[v65[7]] = *(void *)&v64[v65[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v66 + 56))(v63, 0, 1, v65);
        }
        uint64_t v159 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v160 = v159[5];
        uint64_t v161 = &v63[v160];
        uint64_t v162 = &v64[v160];
        long long v163 = *((_OWORD *)v162 + 3);
        *((_OWORD *)v161 + 2) = *((_OWORD *)v162 + 2);
        *((_OWORD *)v161 + 3) = v163;
        *((_OWORD *)v161 + 4) = *((_OWORD *)v162 + 4);
        long long v164 = *((_OWORD *)v162 + 1);
        *(_OWORD *)uint64_t v161 = *(_OWORD *)v162;
        *((_OWORD *)v161 + 1) = v164;
        v63[v159[6]] = v64[v159[6]];
        *(_OWORD *)&v63[v159[7]] = *(_OWORD *)&v64[v159[7]];
        *(void *)&v63[v159[8]] = *(void *)&v64[v159[8]];
        v63[v159[9]] = v64[v159[9]];
        uint64_t v165 = v159[10];
        uint64_t v166 = &v63[v165];
        uint64_t v167 = &v64[v165];
        long long v168 = *((_OWORD *)v167 + 1);
        *(_OWORD *)uint64_t v166 = *(_OWORD *)v167;
        *((_OWORD *)v166 + 1) = v168;
        v166[80] = v167[80];
        long long v169 = *((_OWORD *)v167 + 4);
        long long v170 = *((_OWORD *)v167 + 2);
        *((_OWORD *)v166 + 3) = *((_OWORD *)v167 + 3);
        *((_OWORD *)v166 + 4) = v169;
        *((_OWORD *)v166 + 2) = v170;
        uint64_t v171 = v159[11];
        uint64_t v172 = &v63[v171];
        uint64_t v173 = (uint64_t *)&v64[v171];
        uint64_t v174 = *v173;
        if (*v173)
        {
          uint64_t v175 = v173[1];
          *(void *)uint64_t v172 = v174;
          *((void *)v172 + 1) = v175;
        }
        else
        {
          *(_OWORD *)uint64_t v172 = *(_OWORD *)v173;
        }
        uint64_t v210 = *(int *)(v321 + 36);
        uint64_t v211 = &v51[v210];
        uint64_t v212 = &v52[v210];
        if (v319(&v52[v210], 1, v65))
        {
          uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
        }
        else
        {
          long long v251 = *((_OWORD *)v212 + 3);
          *((_OWORD *)v211 + 2) = *((_OWORD *)v212 + 2);
          *((_OWORD *)v211 + 3) = v251;
          *((_OWORD *)v211 + 4) = *((_OWORD *)v212 + 4);
          long long v252 = *((_OWORD *)v212 + 1);
          *(_OWORD *)uint64_t v211 = *(_OWORD *)v212;
          *((_OWORD *)v211 + 1) = v252;
          uint64_t v253 = v65[5];
          long long v254 = &v211[v253];
          long long v255 = &v212[v253];
          uint64_t v256 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
          uint64_t v257 = v65[6];
          uint64_t v258 = &v211[v257];
          uint64_t v259 = &v212[v257];
          long long v260 = *((_OWORD *)v259 + 3);
          *((_OWORD *)v258 + 2) = *((_OWORD *)v259 + 2);
          *((_OWORD *)v258 + 3) = v260;
          *(_OWORD *)(v258 + 57) = *(_OWORD *)(v259 + 57);
          long long v261 = *((_OWORD *)v259 + 1);
          *(_OWORD *)uint64_t v258 = *(_OWORD *)v259;
          *((_OWORD *)v258 + 1) = v261;
          *(void *)&v211[v65[7]] = *(void *)&v212[v65[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v66 + 56))(v211, 0, 1, v65);
        }
        uint64_t v262 = (int *)type metadata accessor for SignInModel();
        uint64_t v263 = v262[5];
        uint64_t v264 = &v211[v263];
        uint64_t v265 = &v212[v263];
        long long v266 = *((_OWORD *)v265 + 3);
        *((_OWORD *)v264 + 2) = *((_OWORD *)v265 + 2);
        *((_OWORD *)v264 + 3) = v266;
        long long v267 = *((_OWORD *)v265 + 5);
        *((_OWORD *)v264 + 4) = *((_OWORD *)v265 + 4);
        *((_OWORD *)v264 + 5) = v267;
        long long v268 = *((_OWORD *)v265 + 1);
        *(_OWORD *)uint64_t v264 = *(_OWORD *)v265;
        *((_OWORD *)v264 + 1) = v268;
        *(void *)&v211[v262[6]] = *(void *)&v212[v262[6]];
        *(void *)&v211[v262[7]] = *(void *)&v212[v262[7]];
        v211[v262[8]] = v212[v262[8]];
        v211[v262[9]] = v212[v262[9]];
        uint64_t v269 = v262[10];
        uint64_t v270 = &v211[v269];
        uint64_t v271 = &v212[v269];
        long long v272 = *((_OWORD *)v271 + 1);
        *(_OWORD *)uint64_t v270 = *(_OWORD *)v271;
        *((_OWORD *)v270 + 1) = v272;
        *(_OWORD *)&v211[v262[11]] = *(_OWORD *)&v212[v262[11]];
        *(void *)&v211[v262[12]] = *(void *)&v212[v262[12]];
        uint64_t v273 = v262[13];
        long long v274 = &v211[v273];
        long long v275 = &v212[v273];
        v274[16] = v275[16];
        *(_OWORD *)long long v274 = *(_OWORD *)v275;
        *(_OWORD *)&v211[v262[14]] = *(_OWORD *)&v212[v262[14]];
        v211[v262[15]] = v212[v262[15]];
        uint64_t v276 = v262[16];
        uint64_t v277 = &v211[v276];
        uint64_t v278 = &v212[v276];
        long long v279 = *((_OWORD *)v278 + 1);
        *(_OWORD *)uint64_t v277 = *(_OWORD *)v278;
        *((_OWORD *)v277 + 1) = v279;
        v277[32] = v278[32];
        uint64_t v280 = *(int *)(v323 + 24);
        uint64_t v281 = (_OWORD *)((char *)v331 + v280);
        uint64_t v282 = &v327[v280];
        long long v283 = *((_OWORD *)v282 + 1);
        *uint64_t v281 = *(_OWORD *)v282;
        v281[1] = v283;
        *(_OWORD *)((char *)v281 + 25) = *(_OWORD *)(v282 + 25);
        *(void *)((char *)a1 + *(int *)(v334 + 36)) = *(void *)((char *)a2 + *(int *)(v334 + 36));
        goto LABEL_43;
      case 5u:
        *a1 = *a2;
        uint64_t v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628) + 32);
        uint64_t v69 = (_OWORD *)((char *)a1 + v68);
        uint64_t v70 = (char *)a2 + v68;
        long long v71 = *(_OWORD *)((char *)a2 + v68 + 48);
        v69[2] = *(_OWORD *)((char *)a2 + v68 + 32);
        v69[3] = v71;
        v69[4] = *(_OWORD *)((char *)a2 + v68 + 64);
        long long v72 = *(_OWORD *)((char *)a2 + v68 + 16);
        *uint64_t v69 = *(_OWORD *)((char *)a2 + v68);
        v69[1] = v72;
        uint64_t v335 = type metadata accessor for RepairModel();
        uint64_t v73 = *(int *)(v335 + 20);
        uint64_t v74 = (char *)v69 + v73;
        uint64_t v75 = &v70[v73];
        *uint64_t v74 = v70[v73];
        *(_OWORD *)(v74 + 22) = *(_OWORD *)&v70[v73 + 22];
        *(_OWORD *)(v74 + 8) = *(_OWORD *)&v70[v73 + 8];
        v74[88] = v70[v73 + 88];
        *(_OWORD *)(v74 + 72) = *(_OWORD *)&v70[v73 + 72];
        *(_OWORD *)(v74 + 56) = *(_OWORD *)&v70[v73 + 56];
        *(_OWORD *)(v74 + 40) = *(_OWORD *)&v70[v73 + 40];
        long long v76 = *(_OWORD *)&v70[v73 + 96];
        long long v77 = *(_OWORD *)&v70[v73 + 112];
        long long v78 = *(_OWORD *)&v70[v73 + 144];
        *((_OWORD *)v74 + 8) = *(_OWORD *)&v70[v73 + 128];
        *((_OWORD *)v74 + 9) = v78;
        *((_OWORD *)v74 + 6) = v76;
        *((_OWORD *)v74 + 7) = v77;
        long long v79 = *(_OWORD *)&v70[v73 + 160];
        long long v80 = *(_OWORD *)&v70[v73 + 176];
        long long v81 = *(_OWORD *)&v70[v73 + 208];
        *((_OWORD *)v74 + 12) = *(_OWORD *)&v70[v73 + 192];
        *((_OWORD *)v74 + 13) = v81;
        *((_OWORD *)v74 + 10) = v79;
        *((_OWORD *)v74 + 11) = v80;
        long long v82 = *(_OWORD *)&v70[v73 + 224];
        long long v83 = *(_OWORD *)&v70[v73 + 240];
        long long v84 = *(_OWORD *)&v70[v73 + 272];
        *((_OWORD *)v74 + 16) = *(_OWORD *)&v70[v73 + 256];
        *((_OWORD *)v74 + 17) = v84;
        *((_OWORD *)v74 + 14) = v82;
        *((_OWORD *)v74 + 15) = v83;
        uint64_t v332 = type metadata accessor for SetupModel();
        uint64_t v85 = *(int *)(v332 + 32);
        uint64_t v86 = &v74[v85];
        uint64_t v87 = &v75[v85];
        uint64_t v88 = (int *)type metadata accessor for IdMSAccount();
        uint64_t v89 = *((void *)v88 - 1);
        uint64_t v328 = *(unsigned int (**)(char *, uint64_t, int *))(v89 + 48);
        if (v328(v87, 1, v88))
        {
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          long long v176 = *((_OWORD *)v87 + 3);
          *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
          *((_OWORD *)v86 + 3) = v176;
          *((_OWORD *)v86 + 4) = *((_OWORD *)v87 + 4);
          long long v177 = *((_OWORD *)v87 + 1);
          *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
          *((_OWORD *)v86 + 1) = v177;
          uint64_t v178 = v88[5];
          uint64_t v320 = &v86[v178];
          uint64_t v322 = v70;
          uint64_t v179 = v69;
          uint64_t v180 = &v87[v178];
          uint64_t v181 = sub_248174700();
          uint64_t v182 = v180;
          uint64_t v69 = v179;
          uint64_t v70 = v322;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v320, v182, v181);
          uint64_t v183 = v88[6];
          uint64_t v184 = &v86[v183];
          uint64_t v185 = &v87[v183];
          long long v186 = *((_OWORD *)v185 + 3);
          *((_OWORD *)v184 + 2) = *((_OWORD *)v185 + 2);
          *((_OWORD *)v184 + 3) = v186;
          *(_OWORD *)(v184 + 57) = *(_OWORD *)(v185 + 57);
          long long v187 = *((_OWORD *)v185 + 1);
          *(_OWORD *)uint64_t v184 = *(_OWORD *)v185;
          *((_OWORD *)v184 + 1) = v187;
          *(void *)&v86[v88[7]] = *(void *)&v87[v88[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(v86, 0, 1, v88);
        }
        uint64_t v188 = (int *)type metadata accessor for AuthenticationModel();
        uint64_t v189 = v188[5];
        uint64_t v190 = &v86[v189];
        uint64_t v191 = &v87[v189];
        long long v192 = *((_OWORD *)v191 + 3);
        *((_OWORD *)v190 + 2) = *((_OWORD *)v191 + 2);
        *((_OWORD *)v190 + 3) = v192;
        *((_OWORD *)v190 + 4) = *((_OWORD *)v191 + 4);
        long long v193 = *((_OWORD *)v191 + 1);
        *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
        *((_OWORD *)v190 + 1) = v193;
        v86[v188[6]] = v87[v188[6]];
        *(_OWORD *)&v86[v188[7]] = *(_OWORD *)&v87[v188[7]];
        *(void *)&v86[v188[8]] = *(void *)&v87[v188[8]];
        v86[v188[9]] = v87[v188[9]];
        uint64_t v194 = v188[10];
        uint64_t v195 = &v86[v194];
        uint64_t v196 = &v87[v194];
        long long v197 = *((_OWORD *)v196 + 1);
        *(_OWORD *)uint64_t v195 = *(_OWORD *)v196;
        *((_OWORD *)v195 + 1) = v197;
        v195[80] = v196[80];
        long long v198 = *((_OWORD *)v196 + 4);
        long long v199 = *((_OWORD *)v196 + 2);
        *((_OWORD *)v195 + 3) = *((_OWORD *)v196 + 3);
        *((_OWORD *)v195 + 4) = v198;
        *((_OWORD *)v195 + 2) = v199;
        uint64_t v200 = v188[11];
        uint64_t v201 = &v86[v200];
        uint64_t v202 = (uint64_t *)&v87[v200];
        uint64_t v203 = *v202;
        if (*v202)
        {
          uint64_t v204 = v202[1];
          *(void *)uint64_t v201 = v203;
          *((void *)v201 + 1) = v204;
        }
        else
        {
          *(_OWORD *)uint64_t v201 = *(_OWORD *)v202;
        }
        uint64_t v214 = *(int *)(v332 + 36);
        long long v215 = &v74[v214];
        long long v216 = &v75[v214];
        if (v328(&v75[v214], 1, v88))
        {
          uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
          memcpy(v215, v216, *(void *)(*(void *)(v217 - 8) + 64));
        }
        else
        {
          long long v284 = *((_OWORD *)v216 + 3);
          *((_OWORD *)v215 + 2) = *((_OWORD *)v216 + 2);
          *((_OWORD *)v215 + 3) = v284;
          *((_OWORD *)v215 + 4) = *((_OWORD *)v216 + 4);
          long long v285 = *((_OWORD *)v216 + 1);
          *(_OWORD *)long long v215 = *(_OWORD *)v216;
          *((_OWORD *)v215 + 1) = v285;
          uint64_t v286 = v88[5];
          uint64_t v287 = &v215[v286];
          char v288 = &v216[v286];
          uint64_t v289 = sub_248174700();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v289 - 8) + 32))(v287, v288, v289);
          uint64_t v290 = v88[6];
          uint64_t v291 = &v215[v290];
          uint64_t v292 = &v216[v290];
          long long v293 = *((_OWORD *)v292 + 3);
          *((_OWORD *)v291 + 2) = *((_OWORD *)v292 + 2);
          *((_OWORD *)v291 + 3) = v293;
          *(_OWORD *)(v291 + 57) = *(_OWORD *)(v292 + 57);
          long long v294 = *((_OWORD *)v292 + 1);
          *(_OWORD *)uint64_t v291 = *(_OWORD *)v292;
          *((_OWORD *)v291 + 1) = v294;
          *(void *)&v215[v88[7]] = *(void *)&v216[v88[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v89 + 56))(v215, 0, 1, v88);
        }
        uint64_t v295 = (int *)type metadata accessor for SignInModel();
        uint64_t v296 = v295[5];
        uint64_t v297 = &v215[v296];
        uint64_t v298 = &v216[v296];
        long long v299 = *((_OWORD *)v298 + 3);
        *((_OWORD *)v297 + 2) = *((_OWORD *)v298 + 2);
        *((_OWORD *)v297 + 3) = v299;
        long long v300 = *((_OWORD *)v298 + 5);
        *((_OWORD *)v297 + 4) = *((_OWORD *)v298 + 4);
        *((_OWORD *)v297 + 5) = v300;
        long long v301 = *((_OWORD *)v298 + 1);
        *(_OWORD *)uint64_t v297 = *(_OWORD *)v298;
        *((_OWORD *)v297 + 1) = v301;
        *(void *)&v215[v295[6]] = *(void *)&v216[v295[6]];
        *(void *)&v215[v295[7]] = *(void *)&v216[v295[7]];
        v215[v295[8]] = v216[v295[8]];
        v215[v295[9]] = v216[v295[9]];
        uint64_t v302 = v295[10];
        uint64_t v303 = &v215[v302];
        uint64_t v304 = &v216[v302];
        long long v305 = *((_OWORD *)v304 + 1);
        *(_OWORD *)uint64_t v303 = *(_OWORD *)v304;
        *((_OWORD *)v303 + 1) = v305;
        *(_OWORD *)&v215[v295[11]] = *(_OWORD *)&v216[v295[11]];
        *(void *)&v215[v295[12]] = *(void *)&v216[v295[12]];
        uint64_t v306 = v295[13];
        v307 = &v215[v306];
        uint64_t v308 = &v216[v306];
        v307[16] = v308[16];
        *(_OWORD *)v307 = *(_OWORD *)v308;
        *(_OWORD *)&v215[v295[14]] = *(_OWORD *)&v216[v295[14]];
        v215[v295[15]] = v216[v295[15]];
        uint64_t v309 = v295[16];
        uint64_t v310 = &v215[v309];
        uint64_t v311 = &v216[v309];
        long long v312 = *((_OWORD *)v311 + 1);
        *(_OWORD *)uint64_t v310 = *(_OWORD *)v311;
        *((_OWORD *)v310 + 1) = v312;
        v310[32] = v311[32];
        uint64_t v313 = *(int *)(v335 + 24);
        uint64_t v314 = (_OWORD *)((char *)v69 + v313);
        uint64_t v315 = &v70[v313];
        long long v316 = *((_OWORD *)v315 + 1);
        _OWORD *v314 = *(_OWORD *)v315;
        v314[1] = v316;
        *(_OWORD *)((char *)v314 + 25) = *(_OWORD *)(v315 + 25);
LABEL_43:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for MachRepairMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for MachRepairMessage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_247FED740()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_247FED750()
{
  type metadata accessor for RepairModel();
  if (v0 <= 0x3F)
  {
    sub_247FED8A4(319, &qword_2692D68B0, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for _Coordinated.ValueUpdate);
    if (v1 <= 0x3F)
    {
      sub_247FED8A4(319, &qword_2692D68B8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for _Coordinated.ValueUpdate.Response);
      if (v2 <= 0x3F) {
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_247FED8A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for RepairModel();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t destroy for RepairError(uint64_t a1)
{
  return sub_247FE0600(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for RepairError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_247FE42BC(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for RepairError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_247FE42BC(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_247FE0600(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RepairError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_247FE0600(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RepairError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_247FEDB20(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 3u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_247FEDB38(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RepairError()
{
  return &type metadata for RepairError;
}

ValueMetadata *type metadata accessor for RepairError.CodingKeys()
{
  return &type metadata for RepairError.CodingKeys;
}

ValueMetadata *type metadata accessor for RepairError.UnknownCodingKeys()
{
  return &type metadata for RepairError.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for RepairError.InvalidContextCodingKeys()
{
  return &type metadata for RepairError.InvalidContextCodingKeys;
}

ValueMetadata *type metadata accessor for RepairError.CancelledCodingKeys()
{
  return &type metadata for RepairError.CancelledCodingKeys;
}

ValueMetadata *type metadata accessor for RepairError.UserCancelledCodingKeys()
{
  return &type metadata for RepairError.UserCancelledCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RepairError.GenericCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FEDC94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairError.GenericCodingKeys()
{
  return &type metadata for RepairError.GenericCodingKeys;
}

ValueMetadata *type metadata accessor for RepairError.MissingRequiredAccountsCodingKeys()
{
  return &type metadata for RepairError.MissingRequiredAccountsCodingKeys;
}

ValueMetadata *type metadata accessor for RepairError.BleClientInterceptedCodingKeys()
{
  return &type metadata for RepairError.BleClientInterceptedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for RepairError.NestedCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FEDDB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairError.NestedCodingKeys()
{
  return &type metadata for RepairError.NestedCodingKeys;
}

uint64_t getEnumTagSinglePayload for AISDeviceClass(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12AppleIDSetup11RepairErrorO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FEDF4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MachRepairMessage.CodingKeys()
{
  return &type metadata for MachRepairMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for MachRepairMessage.RepairCodingKeys()
{
  return &type metadata for MachRepairMessage.RepairCodingKeys;
}

ValueMetadata *type metadata accessor for MachRepairMessage.RepairReportCodingKeys()
{
  return &type metadata for MachRepairMessage.RepairReportCodingKeys;
}

ValueMetadata *type metadata accessor for MachRepairMessage.GenerateSymptomReportCodingKeys()
{
  return &type metadata for MachRepairMessage.GenerateSymptomReportCodingKeys;
}

ValueMetadata *type metadata accessor for MachRepairMessage.SymptomReportCodingKeys()
{
  return &type metadata for MachRepairMessage.SymptomReportCodingKeys;
}

ValueMetadata *type metadata accessor for MachRepairMessage.CoordinatedModelUpdateCodingKeys()
{
  return &type metadata for MachRepairMessage.CoordinatedModelUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for MachRepairMessage.CoordinatedModelResponseCodingKeys()
{
  return &type metadata for MachRepairMessage.CoordinatedModelResponseCodingKeys;
}

ValueMetadata *type metadata accessor for MachRepairMessage.ReceiptCodingKeys()
{
  return &type metadata for MachRepairMessage.ReceiptCodingKeys;
}

unsigned char *_s12AppleIDSetup11RepairErrorO24InvalidContextCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x247FEE090);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MachRepairMessage.FailureCodingKeys()
{
  return &type metadata for MachRepairMessage.FailureCodingKeys;
}

unint64_t sub_247FEE0CC()
{
  unint64_t result = qword_2692D68C0;
  if (!qword_2692D68C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D68C0);
  }
  return result;
}

unint64_t sub_247FEE124()
{
  unint64_t result = qword_2692D68C8;
  if (!qword_2692D68C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D68C8);
  }
  return result;
}

unint64_t sub_247FEE17C()
{
  unint64_t result = qword_2692D68D0;
  if (!qword_2692D68D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D68D0);
  }
  return result;
}

unint64_t sub_247FEE1D4()
{
  unint64_t result = qword_2692D68D8;
  if (!qword_2692D68D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D68D8);
  }
  return result;
}

unint64_t sub_247FEE22C()
{
  unint64_t result = qword_2692D68E0;
  if (!qword_2692D68E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D68E0);
  }
  return result;
}

unint64_t sub_247FEE284()
{
  unint64_t result = qword_2692D68E8;
  if (!qword_2692D68E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D68E8);
  }
  return result;
}

unint64_t sub_247FEE2DC()
{
  unint64_t result = qword_2692D68F0;
  if (!qword_2692D68F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D68F0);
  }
  return result;
}

unint64_t sub_247FEE334()
{
  unint64_t result = qword_2692D68F8;
  if (!qword_2692D68F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D68F8);
  }
  return result;
}

unint64_t sub_247FEE38C()
{
  unint64_t result = qword_2692D6900;
  if (!qword_2692D6900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6900);
  }
  return result;
}

unint64_t sub_247FEE3E4()
{
  unint64_t result = qword_2692D6908;
  if (!qword_2692D6908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6908);
  }
  return result;
}

unint64_t sub_247FEE43C()
{
  unint64_t result = qword_2692D6910;
  if (!qword_2692D6910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6910);
  }
  return result;
}

unint64_t sub_247FEE494()
{
  unint64_t result = qword_2692D6918;
  if (!qword_2692D6918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6918);
  }
  return result;
}

unint64_t sub_247FEE4EC()
{
  unint64_t result = qword_2692D6920;
  if (!qword_2692D6920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6920);
  }
  return result;
}

unint64_t sub_247FEE544()
{
  unint64_t result = qword_2692D6928;
  if (!qword_2692D6928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6928);
  }
  return result;
}

unint64_t sub_247FEE59C()
{
  unint64_t result = qword_2692D6930;
  if (!qword_2692D6930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6930);
  }
  return result;
}

unint64_t sub_247FEE5F4()
{
  unint64_t result = qword_2692D6938;
  if (!qword_2692D6938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6938);
  }
  return result;
}

unint64_t sub_247FEE64C()
{
  unint64_t result = qword_2692D6940;
  if (!qword_2692D6940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6940);
  }
  return result;
}

unint64_t sub_247FEE6A4()
{
  unint64_t result = qword_2692D6948;
  if (!qword_2692D6948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6948);
  }
  return result;
}

unint64_t sub_247FEE6FC()
{
  unint64_t result = qword_2692D6950;
  if (!qword_2692D6950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6950);
  }
  return result;
}

unint64_t sub_247FEE754()
{
  unint64_t result = qword_2692D6958;
  if (!qword_2692D6958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6958);
  }
  return result;
}

unint64_t sub_247FEE7AC()
{
  unint64_t result = qword_2692D6960;
  if (!qword_2692D6960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6960);
  }
  return result;
}

unint64_t sub_247FEE804()
{
  unint64_t result = qword_2692D6968;
  if (!qword_2692D6968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6968);
  }
  return result;
}

unint64_t sub_247FEE85C()
{
  unint64_t result = qword_2692D6970;
  if (!qword_2692D6970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6970);
  }
  return result;
}

unint64_t sub_247FEE8B4()
{
  unint64_t result = qword_2692D6978;
  if (!qword_2692D6978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6978);
  }
  return result;
}

unint64_t sub_247FEE90C()
{
  unint64_t result = qword_2692D6980;
  if (!qword_2692D6980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6980);
  }
  return result;
}

unint64_t sub_247FEE964()
{
  unint64_t result = qword_2692D6988;
  if (!qword_2692D6988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6988);
  }
  return result;
}

unint64_t sub_247FEE9BC()
{
  unint64_t result = qword_2692D6990;
  if (!qword_2692D6990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6990);
  }
  return result;
}

unint64_t sub_247FEEA14()
{
  unint64_t result = qword_2692D6998;
  if (!qword_2692D6998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6998);
  }
  return result;
}

unint64_t sub_247FEEA6C()
{
  unint64_t result = qword_2692D69A0;
  if (!qword_2692D69A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69A0);
  }
  return result;
}

unint64_t sub_247FEEAC4()
{
  unint64_t result = qword_2692D69A8;
  if (!qword_2692D69A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69A8);
  }
  return result;
}

unint64_t sub_247FEEB1C()
{
  unint64_t result = qword_2692D69B0;
  if (!qword_2692D69B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69B0);
  }
  return result;
}

unint64_t sub_247FEEB74()
{
  unint64_t result = qword_2692D69B8;
  if (!qword_2692D69B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69B8);
  }
  return result;
}

unint64_t sub_247FEEBCC()
{
  unint64_t result = qword_2692D69C0;
  if (!qword_2692D69C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69C0);
  }
  return result;
}

unint64_t sub_247FEEC24()
{
  unint64_t result = qword_2692D69C8;
  if (!qword_2692D69C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69C8);
  }
  return result;
}

unint64_t sub_247FEEC7C()
{
  unint64_t result = qword_2692D69D0;
  if (!qword_2692D69D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69D0);
  }
  return result;
}

unint64_t sub_247FEECD4()
{
  unint64_t result = qword_2692D69D8;
  if (!qword_2692D69D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69D8);
  }
  return result;
}

unint64_t sub_247FEED2C()
{
  unint64_t result = qword_2692D69E0;
  if (!qword_2692D69E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69E0);
  }
  return result;
}

unint64_t sub_247FEED84()
{
  unint64_t result = qword_2692D69E8;
  if (!qword_2692D69E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69E8);
  }
  return result;
}

unint64_t sub_247FEEDDC()
{
  unint64_t result = qword_2692D69F0;
  if (!qword_2692D69F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69F0);
  }
  return result;
}

unint64_t sub_247FEEE34()
{
  unint64_t result = qword_2692D69F8;
  if (!qword_2692D69F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D69F8);
  }
  return result;
}

unint64_t sub_247FEEE8C()
{
  unint64_t result = qword_2692D6A00;
  if (!qword_2692D6A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A00);
  }
  return result;
}

unint64_t sub_247FEEEE4()
{
  unint64_t result = qword_2692D6A08;
  if (!qword_2692D6A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A08);
  }
  return result;
}

unint64_t sub_247FEEF3C()
{
  unint64_t result = qword_2692D6A10;
  if (!qword_2692D6A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A10);
  }
  return result;
}

unint64_t sub_247FEEF94()
{
  unint64_t result = qword_2692D6A18;
  if (!qword_2692D6A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A18);
  }
  return result;
}

unint64_t sub_247FEEFEC()
{
  unint64_t result = qword_2692D6A20;
  if (!qword_2692D6A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A20);
  }
  return result;
}

unint64_t sub_247FEF044()
{
  unint64_t result = qword_2692D6A28;
  if (!qword_2692D6A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A28);
  }
  return result;
}

unint64_t sub_247FEF09C()
{
  unint64_t result = qword_2692D6A30;
  if (!qword_2692D6A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A30);
  }
  return result;
}

unint64_t sub_247FEF0F4()
{
  unint64_t result = qword_2692D6A38;
  if (!qword_2692D6A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A38);
  }
  return result;
}

unint64_t sub_247FEF14C()
{
  unint64_t result = qword_2692D6A40;
  if (!qword_2692D6A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A40);
  }
  return result;
}

uint64_t sub_247FEF1A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726961706572 && a2 == 0xE600000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6552726961706572 && a2 == 0xEC00000074726F70 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000248190BA0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x526D6F74706D7973 && a2 == 0xED000074726F7065 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000248190BC0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000248190BE0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x74706965636572 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_247FEF508(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4364696C61766E69 && a2 == 0xEE00747865746E6FLL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C6C65636E6163 && a2 == 0xE900000000000064 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x636E614372657375 && a2 == 0xED000064656C6C65 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x636972656E6567 && a2 == 0xE700000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000248190C00 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000248190C20 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64657473656ELL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_247FEF890(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701080931 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000248190C40)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_247FEF9CC()
{
  unint64_t result = qword_2692D6A48;
  if (!qword_2692D6A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6A48);
  }
  return result;
}

uint64_t sub_247FEFA20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_247FEFA88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_247FEFAF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247FEFB38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_247FEFB98(unint64_t result)
{
  if (result >= 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_247FEFBA8(unint64_t result)
{
  if (result >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_247FEFBB8()
{
  unint64_t result = qword_2692D5C18;
  if (!qword_2692D5C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D5C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D5C18);
  }
  return result;
}

unint64_t static AISLogger.subsystem.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_247FEFC40(uint64_t a1)
{
  return sub_247FEFDE0(a1, qword_26B13B730);
}

uint64_t static AISLogger.common.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FEFE7C(&qword_26B13B728, (uint64_t)qword_26B13B730, a1);
}

uint64_t sub_247FEFC80(uint64_t a1)
{
  return sub_247FEFDE0(a1, qword_26B13B708);
}

uint64_t static AISLogger.daemon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FEFE7C(&qword_26B13B700, (uint64_t)qword_26B13B708, a1);
}

uint64_t sub_247FEFCC0(uint64_t a1)
{
  return sub_247FEFDE0(a1, qword_2692D6A60);
}

uint64_t static AISLogger.xpc.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FEFE7C(&qword_2692D4D68, (uint64_t)qword_2692D6A60, a1);
}

uint64_t sub_247FEFCFC(uint64_t a1)
{
  return sub_247FEFDE0(a1, qword_2692D6A78);
}

uint64_t static AISLogger.setup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FEFE7C(&qword_2692D4D70, (uint64_t)qword_2692D6A78, a1);
}

uint64_t sub_247FEFD3C(uint64_t a1)
{
  return sub_247FEFDE0(a1, qword_2692D6A90);
}

uint64_t static AISLogger.repair.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FEFE7C(&qword_2692D4D78, (uint64_t)qword_2692D6A90, a1);
}

uint64_t sub_247FEFD7C(uint64_t a1)
{
  return sub_247FEFDE0(a1, qword_2692D6AA8);
}

uint64_t static AISLogger.signpost.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FEFE7C(&qword_2692D4D80, (uint64_t)qword_2692D6AA8, a1);
}

uint64_t sub_247FEFDC0(uint64_t a1)
{
  return sub_247FEFDE0(a1, qword_2692D6AC0);
}

uint64_t sub_247FEFDE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_248174B90();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_248174B80();
}

uint64_t static AISLogger.signOut.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FEFE7C(&qword_2692D4D88, (uint64_t)qword_2692D6AC0, a1);
}

uint64_t sub_247FEFE7C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_248174B90();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  BOOL v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t RedactedValue.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t RedactedValue.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*RedactedValue.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t RedactedValue.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t RedactedValue.description.getter()
{
  return 0x657463616465723CLL;
}

uint64_t RedactedValue.debugDescription.getter()
{
  return sub_247FF0348();
}

uint64_t sub_247FEFFFC()
{
  return 0x657463616465723CLL;
}

uint64_t sub_247FF0018()
{
  return sub_247FF0348();
}

uint64_t OSActivity.__allocating_init(_:)(char *a1, uint64_t a2, char a3)
{
  uint64_t v5 = swift_allocObject();
  OSActivity.init(_:)(a1, v6, a3);
  return v5;
}

uint64_t OSActivity.init(_:)(char *a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = 0;
  *(void *)(v4 + 32) = 0;
  if (a3)
  {
    if ((unint64_t)a1 >> 32)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    unsigned int v8 = a1 >> 11;
    if (a1 >> 11 == 27)
    {
      __break(1u);
    }
    else
    {
      unsigned int v8 = a1 >> 16;
      if (a1 >> 16 > 0x10)
      {
        __break(1u);
      }
      else if ((a1 & 0xFFFFFF80) == 0)
      {
        if (a1 > 0xFF)
        {
          __break(1u);
          goto LABEL_21;
        }
        unsigned int v9 = ((_BYTE)a1 + 1);
LABEL_11:
        *(void *)description = (v9 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v9) & 0x38)) & 0x38));
        if (qword_2692D4D90 == -1)
        {
LABEL_12:
          uint64_t v6 = qword_2692D6AD8;
          BOOL v7 = description;
          goto LABEL_13;
        }
LABEL_21:
        swift_once();
        goto LABEL_12;
      }
      int v3 = (a1 & 0x3F) << 8;
      if (a1 < 0x800)
      {
        unsigned int v9 = (v3 | (a1 >> 6)) + 33217;
        goto LABEL_11;
      }
    }
    unsigned int v12 = (v3 | (a1 >> 6) & 0x3F) << 8;
    unsigned int v13 = (((v12 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
    unsigned int v14 = (v12 | (a1 >> 12)) + 8487393;
    if (v8) {
      unsigned int v9 = v13;
    }
    else {
      unsigned int v9 = v14;
    }
    goto LABEL_11;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (qword_2692D4D90 != -1) {
LABEL_16:
  }
    swift_once();
  uint64_t v6 = qword_2692D6AD8;
  BOOL v7 = a1;
LABEL_13:
  *(void *)(v4 + 16) = _os_activity_create(&dword_247F93000, v7, v6, OS_ACTIVITY_FLAG_DEFAULT);
  swift_beginAccess();
  long long v10 = swift_unknownObjectRetain();
  os_activity_scope_enter(v10, (os_activity_scope_state_t)(v4 + 24));
  swift_endAccess();
  swift_unknownObjectRelease();
  return v4;
}

Swift::Void __swiftcall OSActivity.close()()
{
  swift_beginAccess();
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 24));
  swift_endAccess();
}

uint64_t sub_247FF02B4()
{
  qword_2692D6AD8 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t OSActivity.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t OSActivity.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t sub_247FF0348()
{
  return 0x657463616465723CLL;
}

ValueMetadata *type metadata accessor for AISLogger()
{
  return &type metadata for AISLogger;
}

uint64_t sub_247FF03C0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_247FF0450(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_247FF0508(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_247FF0534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_247FF0584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_247FF05D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_247FF0624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_247FF0674(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_247FF07D0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x247FF09E8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        long long v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for RedactedValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for OSActivity()
{
  return self;
}

uint64_t method lookup function for OSActivity(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for OSActivity);
}

uint64_t dispatch thunk of OSActivity.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_247FF0A78()
{
  uint64_t result = sub_248175160();
  qword_26930EEB8 = result;
  qword_26930EEC0 = v1;
  return result;
}

uint64_t AISAuthenticationResponse.payload.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_247FF0AB8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR___AISAuthenticationResponse_payload);
  if (*(void *)(v1 + 16)
    && (unint64_t v2 = sub_247FB64A4(0x6F54534D44494B41, 0xEB000000006E656BLL), (v3 & 1) != 0)
    && (sub_247FB8B14(*(void *)(v1 + 56) + 32 * v2, (uint64_t)v6),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B13BE58),
        swift_dynamicCast()))
  {
    return v5;
  }
  else
  {
    return sub_247FB4770(MEMORY[0x263F8EE78]);
  }
}

uint64_t sub_247FF0B68()
{
  return sub_247FF0BFC(0xD000000000000024, 0x8000000248190CC0);
}

uint64_t sub_247FF0B84()
{
  return sub_247FF0BFC(0xD000000000000015, 0x8000000248190CF0);
}

uint64_t sub_247FF0BA0()
{
  return sub_247FF0D90(0x69746E6564494B41, 0xEF6E656B6F547974);
}

uint64_t sub_247FF0BC4()
{
  return sub_247FF0BFC(0xD00000000000001FLL, 0x8000000248190D10);
}

uint64_t sub_247FF0BE0()
{
  return sub_247FF0BFC(0xD000000000000021, 0x8000000248190D30);
}

uint64_t sub_247FF0BFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_247FF0AB8();
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_247FB64A4(a1, a2), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 16 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_247FF0C78()
{
  return sub_247FF0D90(0x495344746C414B41, 0xE900000000000044);
}

double sub_247FF0C94@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR___AISAuthenticationResponse_payload);
  if (qword_2692D4D98 != -1)
  {
    swift_once();
    if (*(void *)(v3 + 16)) {
      goto LABEL_3;
    }
LABEL_10:
    double result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
    return result;
  }
  if (!*(void *)(v3 + 16)) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v4 = qword_26930EEC0;
  uint64_t v5 = qword_26930EEB8;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_247FB64A4(v5, v4);
  if (v7)
  {
    sub_247FB8B14(*(void *)(v3 + 56) + 32 * v6, (uint64_t)a1);
  }
  else
  {
    *a1 = 0u;
    a1[1] = 0u;
  }
  swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_247FF0D74()
{
  return sub_247FF0D90(0x616E726573554B41, 0xEA0000000000656DLL);
}

uint64_t sub_247FF0D90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR___AISAuthenticationResponse_payload);
  if (!*(void *)(v3 + 16)) {
    return 0;
  }
  unint64_t v4 = sub_247FB64A4(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  sub_247FB8B14(*(void *)(v3 + 56) + 32 * v4, (uint64_t)v8);
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

id AISAuthenticationResponse.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR___AISAuthenticationResponse_payload] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id AISAuthenticationResponse.init(with:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR___AISAuthenticationResponse_payload] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for AISAuthenticationResponse();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_247FF0F18()
{
  return 0;
}

id AISAuthenticationResponse.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void AISAuthenticationResponse.init()()
{
}

id AISAuthenticationResponse.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AISAuthenticationResponse();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AISAuthenticationResponse()
{
  return self;
}

uint64_t method lookup function for AISAuthenticationResponse(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISAuthenticationResponse);
}

uint64_t dispatch thunk of AISAuthenticationResponse.psToken.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of AISAuthenticationResponse.petToken.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AISAuthenticationResponse.identityToken.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AISAuthenticationResponse.familyToken.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AISAuthenticationResponse.familyRepairToken.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AISAuthenticationResponse.altDSID.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AISAuthenticationResponse.dsid.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AISAuthenticationResponse.username.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AISAuthenticationResponse.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

double RepairCommand.Request.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  objc_super v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload
    || (type metadata accessor for V1Command.Request(0),
        int v6 = swift_getEnumCaseMultiPayload(),
        objc_super v5 = type metadata accessor for V1Command.Request,
        v6 != 4))
  {
    sub_247FF3E44(a1, v5);
    *(void *)&long long v11 = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(void *)(a2 + 80) = 0;
    *(unsigned char *)(a2 + 88) = -4;
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 80);
    char v8 = *(unsigned char *)(a1 + 88);
    long long v9 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v9;
    long long v10 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(a2 + 48) = v10;
    long long v11 = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(a2 + 64) = v11;
    *(void *)(a2 + 80) = v7;
    *(unsigned char *)(a2 + 88) = v8;
  }
  return *(double *)&v11;
}

uint64_t RepairCommand.Request.into()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 80);
  char v4 = *(unsigned char *)(v1 + 88);
  long long v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(void *)(a1 + 80) = v3;
  *(unsigned char *)(a1 + 88) = v4;
  type metadata accessor for V1Command.Request(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t RepairCommand.Request.hash(into:)(uint64_t a1)
{
  int v3 = *(unsigned __int8 *)(v1 + 88) >> 6;
  if (v3)
  {
    if (v3 == 1)
    {
      unint64_t v4 = *(void *)(v1 + 80);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      switch(v4)
      {
        case 0uLL:
        case 1uLL:
        case 2uLL:
        case 3uLL:
          sub_248175E70();
          break;
        default:
          sub_248175E70();
          swift_bridgeObjectRetain();
          sub_247FDE2AC(a1, v4);
          sub_247FEFBA8(v4);
          break;
      }
      return sub_248175E80();
    }
    else
    {
      return sub_248175E70();
    }
  }
  else
  {
    sub_248175E70();
    return sub_2481751A0();
  }
}

unint64_t sub_247FF15DC()
{
  uint64_t v1 = 0x7953726961706572;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656873696E6966;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_247FF1648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FF5B8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FF1670(uint64_t a1)
{
  unint64_t v2 = sub_247FF3C4C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF16AC(uint64_t a1)
{
  unint64_t v2 = sub_247FF3C4C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FF16E8(uint64_t a1)
{
  unint64_t v2 = sub_247FF3CA0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF1724(uint64_t a1)
{
  unint64_t v2 = sub_247FF3CA0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FF1760(uint64_t a1)
{
  unint64_t v2 = sub_247FF3D9C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF179C(uint64_t a1)
{
  unint64_t v2 = sub_247FF3D9C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FF17D8(uint64_t a1)
{
  unint64_t v2 = sub_247FF3CF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF1814(uint64_t a1)
{
  unint64_t v2 = sub_247FF3CF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RepairCommand.Request.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6B68);
  uint64_t v34 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  MEMORY[0x270FA5388](v3);
  long long v32 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6B70);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  long long v33 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6B78);
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6B80);
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  unsigned int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1[1];
  uint64_t v38 = *v1;
  uint64_t v39 = v13;
  uint64_t v30 = v1[2];
  uint64_t v29 = v1[3];
  uint64_t v28 = v1[4];
  uint64_t v27 = v1[5];
  uint64_t v26 = v1[6];
  uint64_t v25 = v1[7];
  uint64_t v24 = v1[8];
  uint64_t v23 = v1[9];
  uint64_t v22 = v1[10];
  unsigned int v14 = *((unsigned __int8 *)v1 + 88);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FF3C4C();
  sub_248175F60();
  if (!(v14 >> 6))
  {
    LOBYTE(v41) = 0;
    sub_247FF3D9C();
    uint64_t v17 = v40;
    sub_248175B50();
    sub_248175BB0();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  }
  if (v14 >> 6 == 1)
  {
    char v15 = v14 & 0x3F;
    LOBYTE(v41) = 1;
    sub_247FF3CF4();
    long long v16 = v33;
    uint64_t v17 = v40;
    sub_248175B50();
    uint64_t v41 = v38;
    uint64_t v42 = v39;
    uint64_t v43 = v30;
    uint64_t v44 = v29;
    uint64_t v45 = v28;
    uint64_t v46 = v27;
    uint64_t v47 = v26;
    uint64_t v48 = v25;
    uint64_t v49 = v24;
    uint64_t v50 = v23;
    uint64_t v51 = v22;
    char v52 = v15;
    sub_247FF3D48();
    uint64_t v18 = v37;
    sub_248175BE0();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  }
  LOBYTE(v41) = 2;
  sub_247FF3CA0();
  uint64_t v20 = v32;
  uint64_t v21 = v40;
  sub_248175B50();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v21);
}

uint64_t RepairCommand.Request.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 10);
  char v2 = *((unsigned char *)v0 + 88);
  long long v3 = v0[1];
  long long v7 = *v0;
  long long v8 = v3;
  long long v4 = v0[3];
  long long v9 = v0[2];
  long long v10 = v4;
  long long v11 = v0[4];
  uint64_t v12 = v1;
  char v13 = v2;
  sub_248175E50();
  RepairCommand.Request.hash(into:)((uint64_t)v6);
  return sub_248175EC0();
}

uint64_t RepairCommand.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6BB0);
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v45 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6BB8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6BC0);
  uint64_t v40 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6BC8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unsigned int v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_247FF3C4C();
  uint64_t v16 = v55;
  sub_248175F20();
  if (v16) {
    goto LABEL_9;
  }
  uint64_t v17 = v45;
  uint64_t v55 = v12;
  uint64_t v18 = sub_248175B30();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v28 = sub_2481758A0();
    swift_allocError();
    uint64_t v29 = v14;
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v31 = &type metadata for RepairCommand.Request;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v29, v11);
LABEL_9:
    uint64_t v37 = (uint64_t)v46;
    return __swift_destroy_boxed_opaque_existential_1(v37);
  }
  if (*(unsigned char *)(v18 + 32))
  {
    if (*(unsigned char *)(v18 + 32) == 1)
    {
      LOBYTE(v47) = 1;
      sub_247FF3CF4();
      sub_248175A50();
      sub_247FF3DF0();
      uint64_t v19 = v42;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v11);
      uint64_t v20 = v47;
      uint64_t v21 = v48;
      long long v22 = v49;
      long long v23 = v50;
      long long v24 = v51;
      long long v25 = v52;
      uint64_t v26 = v53;
      char v27 = v54 | 0x40;
    }
    else
    {
      LOBYTE(v47) = 2;
      sub_247FF3CA0();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v11);
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v26 = 0;
      long long v22 = 0uLL;
      char v27 = 0x80;
      long long v23 = 0uLL;
      long long v24 = 0uLL;
      long long v25 = 0uLL;
    }
    uint64_t v37 = (uint64_t)v46;
    uint64_t v32 = v44;
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_247FF3D9C();
    sub_248175A50();
    uint64_t v32 = v44;
    uint64_t v45 = v14;
    uint64_t v33 = sub_248175AC0();
    uint64_t v34 = v55;
    uint64_t v20 = v33;
    uint64_t v21 = v36;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v45, v11);
    uint64_t v26 = 0;
    char v27 = 0;
    long long v22 = 0uLL;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
    long long v25 = 0uLL;
    uint64_t v37 = (uint64_t)v46;
  }
  *(void *)uint64_t v32 = v20;
  *(void *)(v32 + 8) = v21;
  *(_OWORD *)(v32 + 16) = v22;
  *(_OWORD *)(v32 + 32) = v23;
  *(_OWORD *)(v32 + 48) = v24;
  *(_OWORD *)(v32 + 64) = v25;
  *(void *)(v32 + 80) = v26;
  *(unsigned char *)(v32 + 88) = v27;
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

uint64_t sub_247FF23D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 80);
  char v4 = *(unsigned char *)(v1 + 88);
  long long v5 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(void *)(a1 + 80) = v3;
  *(unsigned char *)(a1 + 88) = v4;
  type metadata accessor for V1Command.Request(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

double sub_247FF245C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  long long v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload
    || (type metadata accessor for V1Command.Request(0),
        int v6 = swift_getEnumCaseMultiPayload(),
        long long v5 = type metadata accessor for V1Command.Request,
        v6 != 4))
  {
    sub_247FF3E44(a1, v5);
    *(void *)&long long v11 = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(void *)(a2 + 80) = 0;
    *(unsigned char *)(a2 + 88) = -4;
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 80);
    char v8 = *(unsigned char *)(a1 + 88);
    long long v9 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a1;
    *(_OWORD *)(a2 + 16) = v9;
    long long v10 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(a2 + 48) = v10;
    long long v11 = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(a2 + 64) = v11;
    *(void *)(a2 + 80) = v7;
    *(unsigned char *)(a2 + 88) = v8;
  }
  return *(double *)&v11;
}

uint64_t sub_247FF2528@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return RepairCommand.Request.init(from:)(a1, a2);
}

uint64_t sub_247FF2540(void *a1)
{
  return RepairCommand.Request.encode(to:)(a1);
}

uint64_t sub_247FF255C()
{
  uint64_t v1 = *((void *)v0 + 10);
  char v2 = *((unsigned char *)v0 + 88);
  long long v3 = v0[1];
  long long v7 = *v0;
  long long v8 = v3;
  long long v4 = v0[3];
  long long v9 = v0[2];
  long long v10 = v4;
  long long v11 = v0[4];
  uint64_t v12 = v1;
  char v13 = v2;
  sub_248175E50();
  RepairCommand.Request.hash(into:)((uint64_t)v6);
  return sub_248175EC0();
}

uint64_t sub_247FF25CC()
{
  uint64_t v1 = *((void *)v0 + 10);
  char v2 = *((unsigned char *)v0 + 88);
  long long v3 = v0[1];
  long long v7 = *v0;
  long long v8 = v3;
  long long v4 = v0[3];
  long long v9 = v0[2];
  long long v10 = v4;
  long long v11 = v0[4];
  uint64_t v12 = v1;
  char v13 = v2;
  sub_248175E50();
  RepairCommand.Request.hash(into:)((uint64_t)v6);
  return sub_248175EC0();
}

uint64_t RepairCommand.Response.init(from:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  long long v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload == 1
    && (type metadata accessor for V1Command.Response(0),
        uint64_t result = swift_getEnumCaseMultiPayload(),
        long long v5 = type metadata accessor for V1Command.Response,
        result == 4))
  {
    long long v7 = a1[1];
    *(_OWORD *)a2 = *a1;
    *(_OWORD *)(a2 + 16) = v7;
  }
  else
  {
    uint64_t result = sub_247FF3E44((uint64_t)a1, v5);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0xF000000000000007;
  }
  return result;
}

uint64_t RepairCommand.Response.into()@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t RepairCommand.Response.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[3];
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      sub_248175E70();
      return sub_248175E80();
    }
    else
    {
      return sub_248175E70();
    }
  }
  else
  {
    uint64_t v7 = v1[1];
    uint64_t v6 = v1[2];
    sub_248175E70();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    sub_247FDEDB8(a1, v4);
    return sub_247FF40F8(v3, v7, v6, v4);
  }
}

uint64_t sub_247FF2820(uint64_t a1)
{
  unint64_t v2 = sub_247FF414C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF285C(uint64_t a1)
{
  unint64_t v2 = sub_247FF414C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FF2898(uint64_t a1)
{
  unint64_t v2 = sub_247FF41A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF28D4(uint64_t a1)
{
  unint64_t v2 = sub_247FF41A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FF2910(uint64_t a1)
{
  unint64_t v2 = sub_247FF4248();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF294C(uint64_t a1)
{
  unint64_t v2 = sub_247FF4248();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_247FF2988(uint64_t a1)
{
  unint64_t v2 = sub_247FF41F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF29C4(uint64_t a1)
{
  unint64_t v2 = sub_247FF41F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RepairCommand.Response.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6BD8);
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  char v27 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6BE0);
  uint64_t v28 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6BE8);
  uint64_t v26 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  long long v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6BF0);
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  MEMORY[0x270FA5388](v9);
  long long v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1[1];
  uint64_t v33 = *v1;
  unint64_t v13 = v1[3];
  uint64_t v25 = v1[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FF414C();
  sub_248175F60();
  if (v13 >> 62)
  {
    if (v13 >> 62 == 1)
    {
      LOBYTE(v36) = 1;
      sub_247FF41F4();
      uint64_t v14 = v35;
      sub_248175B50();
      uint64_t v15 = v30;
      sub_248175BC0();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v15);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v11, v14);
    }
    else
    {
      LOBYTE(v36) = 2;
      sub_247FF41A0();
      long long v22 = v27;
      uint64_t v23 = v35;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v22, v32);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v11, v23);
    }
  }
  else
  {
    LOBYTE(v36) = 0;
    sub_247FF4248();
    uint64_t v17 = v12;
    swift_bridgeObjectRetain();
    uint64_t v18 = v25;
    swift_retain();
    swift_retain();
    uint64_t v19 = v35;
    sub_248175B50();
    uint64_t v20 = v33;
    uint64_t v36 = v33;
    uint64_t v37 = v17;
    uint64_t v38 = v18;
    unint64_t v39 = v13;
    sub_247FE0AEC();
    uint64_t v21 = v29;
    sub_248175BE0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v21);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v19);
    return sub_247FF40F8(v20, v17, v18, v13);
  }
}

uint64_t RepairCommand.Response.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  sub_248175E50();
  if (v4 >> 62)
  {
    sub_248175E70();
    if (v4 >> 62 == 1) {
      sub_248175E80();
    }
  }
  else
  {
    sub_248175E70();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    sub_247FDEDB8((uint64_t)v6, v4);
    sub_247FF40F8(v1, v2, v3, v4);
  }
  return sub_248175EC0();
}

uint64_t RepairCommand.Response.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6C18);
  uint64_t v42 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v41 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6C20);
  uint64_t v39 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6C28);
  uint64_t v37 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6C30);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_247FF414C();
  uint64_t v14 = v48;
  sub_248175F20();
  if (v14) {
    goto LABEL_9;
  }
  uint64_t v35 = v6;
  uint64_t v15 = v41;
  uint64_t v16 = v42;
  uint64_t v48 = v10;
  uint64_t v17 = sub_248175B30();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v25 = sub_2481758A0();
    swift_allocError();
    uint64_t v26 = v12;
    uint64_t v27 = v9;
    uint64_t v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    *uint64_t v29 = &type metadata for RepairCommand.Response;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v29, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v27);
LABEL_9:
    uint64_t v20 = (uint64_t)v43;
    return __swift_destroy_boxed_opaque_existential_1(v20);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    if (*(unsigned char *)(v17 + 32) == 1)
    {
      LOBYTE(v44) = 1;
      sub_247FF41F4();
      sub_248175A50();
      uint64_t v18 = v36;
      char v19 = sub_248175AD0();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v5, v18);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
      uint64_t v20 = (uint64_t)v43;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v19 & 1;
      unint64_t v24 = 0x4000000000000000;
    }
    else
    {
      LOBYTE(v44) = 2;
      sub_247FF41A0();
      sub_248175A50();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
      uint64_t v23 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      unint64_t v24 = 0x8000000000000000;
      uint64_t v20 = (uint64_t)v43;
    }
    uint64_t v31 = v40;
  }
  else
  {
    LOBYTE(v44) = 0;
    sub_247FF4248();
    uint64_t v30 = v8;
    sub_248175A50();
    uint64_t v31 = v40;
    sub_247FE0E2C();
    uint64_t v32 = v35;
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
    uint64_t v23 = v44;
    uint64_t v21 = v45;
    uint64_t v22 = v46;
    unint64_t v24 = v47;
    uint64_t v20 = (uint64_t)v43;
  }
  *uint64_t v31 = v23;
  v31[1] = v21;
  v31[2] = v22;
  v31[3] = v24;
  return __swift_destroy_boxed_opaque_existential_1(v20);
}

uint64_t sub_247FF3530@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  type metadata accessor for V1Command.Response(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_247FF3594@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload == 1
    && (type metadata accessor for V1Command.Response(0),
        uint64_t result = swift_getEnumCaseMultiPayload(),
        uint64_t v5 = type metadata accessor for V1Command.Response,
        result == 4))
  {
    long long v7 = a1[1];
    *(_OWORD *)a2 = *a1;
    *(_OWORD *)(a2 + 16) = v7;
  }
  else
  {
    uint64_t result = sub_247FF3E44((uint64_t)a1, v5);
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + 24) = 0xF000000000000007;
  }
  return result;
}

uint64_t sub_247FF3634@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RepairCommand.Response.init(from:)(a1, a2);
}

uint64_t sub_247FF364C(void *a1)
{
  return RepairCommand.Response.encode(to:)(a1);
}

uint64_t sub_247FF366C(uint64_t a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = v1[3];
  if (v4 >> 62)
  {
    if (v4 >> 62 == 1)
    {
      sub_248175E70();
      return sub_248175E80();
    }
    else
    {
      return sub_248175E70();
    }
  }
  else
  {
    uint64_t v7 = v1[1];
    uint64_t v6 = v1[2];
    sub_248175E70();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    sub_247FDEDB8(a1, v4);
    return sub_247FF40F8(v3, v7, v6, v4);
  }
}

uint64_t sub_247FF3750()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  sub_248175E50();
  if (v4 >> 62)
  {
    sub_248175E70();
    if (v4 >> 62 == 1) {
      sub_248175E80();
    }
  }
  else
  {
    sub_248175E70();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    sub_247FDEDB8((uint64_t)v6, v4);
    sub_247FF40F8(v1, v2, v3, v4);
  }
  return sub_248175EC0();
}

uint64_t _s12AppleIDSetup13RepairCommandV7RequestO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v10 = *(void *)(a1 + 72);
  unint64_t v12 = *(void *)(a1 + 80);
  unsigned int v13 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v15 = *(void *)a2;
  uint64_t v14 = *(void *)(a2 + 8);
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v19 = *(void *)(a2 + 40);
  uint64_t v20 = *(void *)(a2 + 48);
  uint64_t v21 = *(void *)(a2 + 56);
  uint64_t v23 = *(void *)(a2 + 64);
  uint64_t v22 = *(void *)(a2 + 72);
  unint64_t v24 = *(void *)(a2 + 80);
  unsigned int v25 = *(unsigned __int8 *)(a2 + 88);
  v76[0] = *(void *)a1;
  v76[1] = v2;
  void v76[2] = v5;
  v76[3] = v4;
  v76[4] = v7;
  v76[5] = v6;
  v76[6] = v9;
  v76[7] = v8;
  v76[8] = v11;
  v76[9] = v10;
  v76[10] = v12;
  char v77 = v13;
  uint64_t v78 = v15;
  uint64_t v79 = v14;
  uint64_t v80 = v17;
  uint64_t v81 = v16;
  uint64_t v82 = v18;
  uint64_t v83 = v19;
  uint64_t v84 = v20;
  uint64_t v85 = v21;
  uint64_t v86 = v23;
  uint64_t v87 = v22;
  unint64_t v88 = v24;
  char v89 = v25;
  uint64_t v72 = v9;
  uint64_t v73 = v8;
  if (v13 >> 6)
  {
    if (v13 >> 6 == 1)
    {
      if ((v25 & 0xC0) == 0x40)
      {
        uint64_t v56 = v10;
        uint64_t v58 = v11;
        uint64_t v60 = v5;
        uint64_t v62 = v4;
        uint64_t v64 = v7;
        uint64_t v66 = v6;
        uint64_t v68 = v2;
        uint64_t v70 = v3;
        uint64_t v52 = v19;
        uint64_t v54 = v21;
        uint64_t v49 = v20;
        uint64_t v50 = v18;
        if (v3 == v15 && v2 == v14
          || (v26 = sub_248175CE0(), uint64_t v18 = v50, v19 = v52, v20 = v49, v21 = v54, (v26 & 1) != 0))
        {
          unint64_t v74 = v24;
          unint64_t v75 = v12;
          sub_247FF49AC(v15, v14, v17, v16, v18, v19, v20, v21, v23, v22, v24, v25);
          sub_247FF49AC(v70, v68, v60, v62, v64, v66, v72, v73, v58, v56, v12, v13);
          sub_247FF49AC(v15, v14, v17, v16, v50, v52, v49, v54, v23, v22, v24, v25);
          sub_247FF49AC(v70, v68, v60, v62, v64, v66, v72, v73, v58, v56, v12, v13);
          char v47 = _s12AppleIDSetup7SymptomV4KindO2eeoiySbAE_AEtFZ_0(&v75, &v74);
          sub_247FF5D04((uint64_t)v76);
          sub_247FF4AC0(v15, v14, v17, v16, v50, v52, v49, v54, v23, v22, v24, v25);
          sub_247FF4AC0(v70, v68, v60, v62, v64, v66, v72, v73, v58, v56, v12, v13);
          if ((v47 & 1) != 0 && ((v25 ^ v13) & 0x3F) == 0)
          {
            char v27 = 1;
            return v27 & 1;
          }
LABEL_20:
          char v27 = 0;
          return v27 & 1;
        }
        sub_247FF49AC(v15, v14, v17, v16, v50, v52, v49, v54, v23, v22, v24, v25);
        sub_247FF49AC(v70, v68, v60, v62, v64, v66, v72, v73, v58, v56, v12, v13);
LABEL_19:
        sub_247FF5D04((uint64_t)v76);
        goto LABEL_20;
      }
    }
    else if ((v25 & 0xC0) == 0x80 && !(v14 | v15 | v17 | v16 | v18 | v19 | v20 | v21 | v23 | v22 | v24) && v25 == 128)
    {
      sub_247FF5D04((uint64_t)v76);
      char v27 = 1;
      return v27 & 1;
    }
LABEL_18:
    unsigned __int8 v46 = v25;
    uint64_t v44 = v22;
    unint64_t v45 = v24;
    uint64_t v43 = v23;
    uint64_t v28 = v15;
    uint64_t v29 = v14;
    uint64_t v30 = v5;
    uint64_t v31 = v10;
    uint64_t v32 = v17;
    uint64_t v33 = v4;
    uint64_t v34 = v16;
    uint64_t v35 = v7;
    uint64_t v36 = v6;
    uint64_t v37 = v2;
    uint64_t v38 = v3;
    uint64_t v39 = v11;
    sub_247FF49AC(v28, v29, v32, v34, v18, v19, v20, v21, v43, v44, v45, v46);
    sub_247FF49AC(v38, v37, v30, v33, v35, v36, v72, v73, v39, v31, v12, v13);
    goto LABEL_19;
  }
  if (v25 >= 0x40) {
    goto LABEL_18;
  }
  unint64_t v48 = v12;
  uint64_t v57 = v10;
  uint64_t v59 = v11;
  uint64_t v61 = v5;
  uint64_t v63 = v4;
  uint64_t v65 = v7;
  uint64_t v67 = v6;
  uint64_t v69 = v2;
  uint64_t v71 = v3;
  if (v3 == v15 && v2 == v14)
  {
    char v27 = 1;
  }
  else
  {
    uint64_t v51 = v18;
    uint64_t v53 = v19;
    uint64_t v55 = v21;
    uint64_t v41 = v20;
    char v42 = sub_248175CE0();
    uint64_t v18 = v51;
    uint64_t v19 = v53;
    uint64_t v20 = v41;
    uint64_t v21 = v55;
    char v27 = v42;
  }
  sub_247FF49AC(v15, v14, v17, v16, v18, v19, v20, v21, v23, v22, v24, v25);
  sub_247FF49AC(v71, v69, v61, v63, v65, v67, v72, v73, v59, v57, v48, v13);
  sub_247FF5D04((uint64_t)v76);
  return v27 & 1;
}

unint64_t sub_247FF3C4C()
{
  unint64_t result = qword_2692D6B88;
  if (!qword_2692D6B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6B88);
  }
  return result;
}

unint64_t sub_247FF3CA0()
{
  unint64_t result = qword_2692D6B90;
  if (!qword_2692D6B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6B90);
  }
  return result;
}

unint64_t sub_247FF3CF4()
{
  unint64_t result = qword_2692D6B98;
  if (!qword_2692D6B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6B98);
  }
  return result;
}

unint64_t sub_247FF3D48()
{
  unint64_t result = qword_2692D6BA0;
  if (!qword_2692D6BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6BA0);
  }
  return result;
}

unint64_t sub_247FF3D9C()
{
  unint64_t result = qword_2692D6BA8;
  if (!qword_2692D6BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6BA8);
  }
  return result;
}

unint64_t sub_247FF3DF0()
{
  unint64_t result = qword_2692D6BD0;
  if (!qword_2692D6BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6BD0);
  }
  return result;
}

uint64_t sub_247FF3E44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s12AppleIDSetup13RepairCommandV8ResponseO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  unint64_t v4 = a1[3];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  unint64_t v8 = a2[3];
  if (!(v4 >> 62))
  {
    if (v8 >> 62)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    }
    BOOL v11 = v3 == v6 && v2 == v7;
    if (!v11 && (sub_248175CE0() & 1) == 0)
    {
      sub_247FF4F40(v3, v2, v5, v4);
      goto LABEL_25;
    }
    sub_247FF4F40(v6, v7, v9, v8);
    sub_247FF4F40(v3, v2, v5, v4);
    sub_247FF4F40(v3, v2, v5, v4);
    sub_247FF4F40(v6, v7, v9, v8);
    char v12 = sub_2480BC92C(v9, v8, v5, v4);
    sub_247FF40F8(v3, v2, v5, v4);
    sub_247FF40F8(v6, v7, v9, v8);
    sub_247FF40F8(v6, v7, v9, v8);
    sub_247FF40F8(v3, v2, v5, v4);
    if ((v12 & 1) == 0) {
      goto LABEL_26;
    }
LABEL_22:
    char v10 = 1;
    return v10 & 1;
  }
  if (v4 >> 62 != 1)
  {
    if (v8 >> 62 != 2 || (v7 | v6 | v9) != 0 || v8 != 0x8000000000000000) {
      goto LABEL_25;
    }
    sub_247FF40F8(*a1, v2, v5, v4);
    sub_247FF40F8(0, 0, 0, 0x8000000000000000);
    goto LABEL_22;
  }
  if (v8 >> 62 != 1)
  {
LABEL_25:
    sub_247FF4F40(v6, v7, v9, v8);
    sub_247FF40F8(v3, v2, v5, v4);
    sub_247FF40F8(v6, v7, v9, v8);
LABEL_26:
    char v10 = 0;
    return v10 & 1;
  }
  sub_247FF40F8(*a1, v2, v5, v4);
  sub_247FF40F8(v6, v7, v9, v8);
  char v10 = ((v3 & 1) == 0) ^ v6;
  return v10 & 1;
}

uint64_t sub_247FF40F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!(a4 >> 62))
  {
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_247FF414C()
{
  unint64_t result = qword_2692D6BF8;
  if (!qword_2692D6BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6BF8);
  }
  return result;
}

unint64_t sub_247FF41A0()
{
  unint64_t result = qword_2692D6C00;
  if (!qword_2692D6C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C00);
  }
  return result;
}

unint64_t sub_247FF41F4()
{
  unint64_t result = qword_2692D6C08;
  if (!qword_2692D6C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C08);
  }
  return result;
}

unint64_t sub_247FF4248()
{
  unint64_t result = qword_2692D6C10;
  if (!qword_2692D6C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C10);
  }
  return result;
}

unint64_t sub_247FF42A0()
{
  unint64_t result = qword_2692D6C38;
  if (!qword_2692D6C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C38);
  }
  return result;
}

unint64_t sub_247FF42F4(uint64_t a1)
{
  unint64_t result = sub_247FF431C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_247FF431C()
{
  unint64_t result = qword_2692D6C40;
  if (!qword_2692D6C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C40);
  }
  return result;
}

unint64_t sub_247FF4374()
{
  unint64_t result = qword_2692D6C48;
  if (!qword_2692D6C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C48);
  }
  return result;
}

unint64_t sub_247FF43C8(uint64_t a1)
{
  unint64_t result = sub_247FF43F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_247FF43F0()
{
  unint64_t result = qword_2692D6C50;
  if (!qword_2692D6C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C50);
  }
  return result;
}

uint64_t sub_247FF4444(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FF4714(a1, a2, a3, (uint64_t (*)(void))sub_247FF4484, (uint64_t (*)(void))sub_247FF44D8, (uint64_t (*)(void))sub_247FF452C);
}

unint64_t sub_247FF4484()
{
  unint64_t result = qword_2692D6C58;
  if (!qword_2692D6C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C58);
  }
  return result;
}

unint64_t sub_247FF44D8()
{
  unint64_t result = qword_2692D6C60;
  if (!qword_2692D6C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C60);
  }
  return result;
}

unint64_t sub_247FF452C()
{
  unint64_t result = qword_2692D6C68;
  if (!qword_2692D6C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C68);
  }
  return result;
}

unint64_t sub_247FF4584()
{
  unint64_t result = qword_2692D6C70;
  if (!qword_2692D6C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C70);
  }
  return result;
}

unint64_t sub_247FF45DC(uint64_t a1)
{
  unint64_t result = sub_247FF4604();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_247FF4604()
{
  unint64_t result = qword_2692D6C78;
  if (!qword_2692D6C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C78);
  }
  return result;
}

unint64_t sub_247FF4658(uint64_t a1)
{
  unint64_t result = sub_247FF4680();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_247FF4680()
{
  unint64_t result = qword_2692D6C80;
  if (!qword_2692D6C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C80);
  }
  return result;
}

uint64_t sub_247FF46D4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_247FF4714(a1, a2, a3, (uint64_t (*)(void))sub_247FF4768, (uint64_t (*)(void))sub_247FF47BC, (uint64_t (*)(void))sub_247FF4810);
}

uint64_t sub_247FF4714(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_247FF4768()
{
  unint64_t result = qword_2692D6C88;
  if (!qword_2692D6C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C88);
  }
  return result;
}

unint64_t sub_247FF47BC()
{
  unint64_t result = qword_2692D6C90;
  if (!qword_2692D6C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C90);
  }
  return result;
}

unint64_t sub_247FF4810()
{
  unint64_t result = qword_2692D6C98;
  if (!qword_2692D6C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6C98);
  }
  return result;
}

unint64_t sub_247FF4868()
{
  unint64_t result = qword_2692D6CA0;
  if (!qword_2692D6CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CA0);
  }
  return result;
}

unint64_t sub_247FF48C0()
{
  unint64_t result = qword_2692D6CA8;
  if (!qword_2692D6CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CA8);
  }
  return result;
}

unint64_t sub_247FF4918()
{
  unint64_t result = qword_2692D6CB0;
  if (!qword_2692D6CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CB0);
  }
  return result;
}

unint64_t sub_247FF496C(uint64_t a1)
{
  unint64_t result = sub_247FF4374();
  *(void *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for RepairCommand()
{
  return &type metadata for RepairCommand;
}

void sub_247FF49AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unsigned __int8 a12)
{
  int v12 = a12 >> 6;
  if (v12 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FEFB98(a11);
  }
  else if (!v12)
  {
    swift_bridgeObjectRetain();
  }
}

void destroy for RepairCommand.Request(uint64_t a1)
{
}

void sub_247FF4AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, unsigned __int8 a12)
{
  int v12 = a12 >> 6;
  if (v12 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FEFBA8(a11);
  }
  else if (!v12)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for RepairCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  unint64_t v14 = *(void *)(a2 + 80);
  unsigned __int8 v15 = *(unsigned char *)(a2 + 88);
  sub_247FF49AC(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v15;
  return a1;
}

uint64_t assignWithCopy for RepairCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v24 = *(void *)(a2 + 72);
  unint64_t v25 = *(void *)(a2 + 80);
  unsigned __int8 v26 = *(unsigned char *)(a2 + 88);
  sub_247FF49AC(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  unint64_t v21 = *(void *)(a1 + 80);
  unsigned __int8 v22 = *(unsigned char *)(a1 + 88);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v24;
  *(void *)(a1 + 80) = v25;
  *(unsigned char *)(a1 + 88) = v26;
  sub_247FF4AC0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for RepairCommand.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 80);
  char v4 = *(unsigned char *)(a2 + 88);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  unint64_t v14 = *(void *)(a1 + 80);
  unsigned __int8 v15 = *(unsigned char *)(a1 + 88);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v3;
  *(unsigned char *)(a1 + 88) = v4;
  sub_247FF4AC0(v5, v7, v6, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairCommand.Request(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 88) & 0x3C | (*(unsigned __int8 *)(a1 + 88) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RepairCommand.Request(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 62;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2)
    {
      *(void *)(result + 80) = 0;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(unsigned char *)(result + 88) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_247FF4EBC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 88);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_247FF4EDC(uint64_t result)
{
  *(unsigned char *)(result + 88) &= 0x3Fu;
  return result;
}

uint64_t sub_247FF4EEC(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(unsigned char *)(result + 88) = *(unsigned char *)(result + 88) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(unsigned char *)(result + 88) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairCommand.Request()
{
  return &type metadata for RepairCommand.Request;
}

uint64_t sub_247FF4F40(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!(a4 >> 62))
  {
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for RepairCommand.Response(uint64_t a1)
{
  return sub_247FF40F8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24));
}

uint64_t *initializeWithCopy for RepairCommand.Response(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  sub_247FF4F40(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *assignWithCopy for RepairCommand.Response(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  sub_247FF4F40(*a2, v4, v5, v6);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  unint64_t v10 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_247FF40F8(v7, v8, v9, v10);
  return a1;
}

uint64_t *assignWithTake for RepairCommand.Response(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v6 = a1[3];
  long long v7 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v7;
  sub_247FF40F8(v3, v5, v4, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairCommand.Response(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)(a1 + 24) >> 57) >> 5) | (4
                                                           * ((*(void *)(a1 + 24) >> 57) & 0x18 | *(void *)(a1 + 24) & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RepairCommand.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 126;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_247FF5154(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_247FF5170(uint64_t result)
{
  *(void *)(result + 24) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_247FF5180(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    result[3] = result[3] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *uint64_t result = (a2 - 2);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairCommand.Response()
{
  return &type metadata for RepairCommand.Response;
}

ValueMetadata *type metadata accessor for RepairCommand.Response.CodingKeys()
{
  return &type metadata for RepairCommand.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for RepairCommand.Response.GenerateSymptomReportCodingKeys()
{
  return &type metadata for RepairCommand.Response.GenerateSymptomReportCodingKeys;
}

ValueMetadata *type metadata accessor for RepairCommand.Response.RepairSymptomCodingKeys()
{
  return &type metadata for RepairCommand.Response.RepairSymptomCodingKeys;
}

ValueMetadata *type metadata accessor for RepairCommand.Response.FinishedCodingKeys()
{
  return &type metadata for RepairCommand.Response.FinishedCodingKeys;
}

unsigned char *_s12AppleIDSetup13RepairCommandV8ResponseO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FF52D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairCommand.Request.CodingKeys()
{
  return &type metadata for RepairCommand.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for RepairCommand.Request.GenerateSymptomReportCodingKeys()
{
  return &type metadata for RepairCommand.Request.GenerateSymptomReportCodingKeys;
}

unsigned char *_s12AppleIDSetup13RepairCommandV8ResponseO31GenerateSymptomReportCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x247FF53B4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairCommand.Request.RepairSymptomCodingKeys()
{
  return &type metadata for RepairCommand.Request.RepairSymptomCodingKeys;
}

ValueMetadata *type metadata accessor for RepairCommand.Request.FinishedCodingKeys()
{
  return &type metadata for RepairCommand.Request.FinishedCodingKeys;
}

unint64_t sub_247FF5400()
{
  unint64_t result = qword_2692D6CB8;
  if (!qword_2692D6CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CB8);
  }
  return result;
}

unint64_t sub_247FF5458()
{
  unint64_t result = qword_2692D6CC0;
  if (!qword_2692D6CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CC0);
  }
  return result;
}

unint64_t sub_247FF54B0()
{
  unint64_t result = qword_2692D6CC8;
  if (!qword_2692D6CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CC8);
  }
  return result;
}

unint64_t sub_247FF5508()
{
  unint64_t result = qword_2692D6CD0;
  if (!qword_2692D6CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CD0);
  }
  return result;
}

unint64_t sub_247FF5560()
{
  unint64_t result = qword_2692D6CD8;
  if (!qword_2692D6CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CD8);
  }
  return result;
}

unint64_t sub_247FF55B8()
{
  unint64_t result = qword_2692D6CE0;
  if (!qword_2692D6CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CE0);
  }
  return result;
}

unint64_t sub_247FF5610()
{
  unint64_t result = qword_2692D6CE8;
  if (!qword_2692D6CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CE8);
  }
  return result;
}

unint64_t sub_247FF5668()
{
  unint64_t result = qword_2692D6CF0;
  if (!qword_2692D6CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CF0);
  }
  return result;
}

unint64_t sub_247FF56C0()
{
  unint64_t result = qword_2692D6CF8;
  if (!qword_2692D6CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6CF8);
  }
  return result;
}

unint64_t sub_247FF5718()
{
  unint64_t result = qword_2692D6D00;
  if (!qword_2692D6D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D00);
  }
  return result;
}

unint64_t sub_247FF5770()
{
  unint64_t result = qword_2692D6D08;
  if (!qword_2692D6D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D08);
  }
  return result;
}

unint64_t sub_247FF57C8()
{
  unint64_t result = qword_2692D6D10;
  if (!qword_2692D6D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D10);
  }
  return result;
}

unint64_t sub_247FF5820()
{
  unint64_t result = qword_2692D6D18;
  if (!qword_2692D6D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D18);
  }
  return result;
}

unint64_t sub_247FF5878()
{
  unint64_t result = qword_2692D6D20;
  if (!qword_2692D6D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D20);
  }
  return result;
}

unint64_t sub_247FF58D0()
{
  unint64_t result = qword_2692D6D28;
  if (!qword_2692D6D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D28);
  }
  return result;
}

unint64_t sub_247FF5928()
{
  unint64_t result = qword_2692D6D30;
  if (!qword_2692D6D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D30);
  }
  return result;
}

unint64_t sub_247FF5980()
{
  unint64_t result = qword_2692D6D38;
  if (!qword_2692D6D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D38);
  }
  return result;
}

unint64_t sub_247FF59D8()
{
  unint64_t result = qword_2692D6D40;
  if (!qword_2692D6D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D40);
  }
  return result;
}

unint64_t sub_247FF5A30()
{
  unint64_t result = qword_2692D6D48;
  if (!qword_2692D6D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D48);
  }
  return result;
}

unint64_t sub_247FF5A88()
{
  unint64_t result = qword_2692D6D50;
  if (!qword_2692D6D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D50);
  }
  return result;
}

unint64_t sub_247FF5AE0()
{
  unint64_t result = qword_2692D6D58;
  if (!qword_2692D6D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D58);
  }
  return result;
}

unint64_t sub_247FF5B38()
{
  unint64_t result = qword_2692D6D60;
  if (!qword_2692D6D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D60);
  }
  return result;
}

uint64_t sub_247FF5B8C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000248190BA0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7953726961706572 && a2 == 0xED00006D6F74706DLL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_247FF5D04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v4 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 128);
  uint64_t v6 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 152);
  long long v12 = *(_OWORD *)(a1 + 160);
  unint64_t v9 = *(void *)(a1 + 176);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 184);
  sub_247FF4AC0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  sub_247FF4AC0(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t static AISAnalytics.shared.getter()
{
  type metadata accessor for AISAnalytics();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for AISAnalytics()
{
  return self;
}

uint64_t sub_247FF5E34(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_247FF5EDC((uint64_t)v3, v1, v2);
}

uint64_t sub_247FF5E74(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t AISAnalytics.deinit()
{
  return v0;
}

uint64_t AISAnalytics.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t sub_247FF5EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v34[3] = a2;
  v34[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v34);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  uint64_t v7 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  sub_247FF649C((uint64_t)v34, (uint64_t)&v32);
  uint64_t v8 = swift_allocObject();
  sub_247FB8480(&v32, v8 + 16);
  uint64_t v30 = sub_247FF6538;
  uint64_t v31 = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_248095C74;
  uint64_t v29 = &block_descriptor_6;
  unint64_t v9 = _Block_copy(aBlock);
  swift_release();
  int v10 = AnalyticsSendEventLazy();
  _Block_release(v9);

  if (!v10)
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_248174B90();
    __swift_project_value_buffer(v21, (uint64_t)qword_26B13B730);
    sub_247FF649C((uint64_t)v34, (uint64_t)aBlock);
    long long v12 = sub_248174B70();
    os_log_type_t v22 = sub_2481755C0();
    if (os_log_type_enabled(v12, v22))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(void *)&long long v32 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v29);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
      uint64_t v27 = sub_247FB6D24(v23, v24, (uint64_t *)&v32);
      sub_248175730();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      _os_log_impl(&dword_247F93000, v12, v22, "Failed to send Core Analytics event: %s", (uint8_t *)v14, 0xCu);
      goto LABEL_10;
    }
    unint64_t v25 = (long long *)aBlock;
LABEL_13:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    goto LABEL_14;
  }
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_248174B90();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B13B730);
  sub_247FF649C((uint64_t)v34, (uint64_t)aBlock);
  sub_247FF649C((uint64_t)v34, (uint64_t)&v32);
  long long v12 = sub_248174B70();
  os_log_type_t v13 = sub_2481755C0();
  if (!os_log_type_enabled(v12, v13))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    unint64_t v25 = &v32;
    goto LABEL_13;
  }
  uint64_t v14 = swift_slowAlloc();
  uint64_t v15 = swift_slowAlloc();
  uint64_t v27 = v15;
  *(_DWORD *)uint64_t v14 = 136315394;
  __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v29);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  sub_247FB6D24(v16, v17, &v27);
  sub_248175730();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  *(_WORD *)(v14 + 12) = 2080;
  __swift_project_boxed_opaque_existential_1(&v32, v33);
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_247FF65A4();
  uint64_t v18 = sub_248175020();
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  sub_247FB6D24(v18, v20, &v27);
  sub_248175730();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  _os_log_impl(&dword_247F93000, v12, v13, "Sent Core Analytics event:  %s %s", (uint8_t *)v14, 0x16u);
LABEL_10:
  swift_arrayDestroy();
  MEMORY[0x24C574E00](v15, -1, -1);
  MEMORY[0x24C574E00](v14, -1, -1);
LABEL_14:

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t dispatch thunk of AISAnalyticsProtocol.reportEvent(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for AISAnalytics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISAnalytics);
}

uint64_t dispatch thunk of AISAnalytics.reportEvent(event:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_247FF649C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_247FF6500()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_247FF6538()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_247FF65A4()
{
  unint64_t result = qword_2692D6D68;
  if (!qword_2692D6D68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2692D6D68);
  }
  return result;
}

uint64_t String.localized.getter()
{
  uint64_t v0 = sub_248174900();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_248175110();
  MEMORY[0x270FA5388](v1 - 8);
  swift_bridgeObjectRetain();
  sub_248175120();
  type metadata accessor for AISChildSetupFlowResult();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_2481748F0();
  return sub_248175180();
}

uint64_t String.rebrand.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v9 = &type metadata for AppleAccountFeature;
  unint64_t v10 = sub_247FF683C();
  char v4 = sub_2481749B0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v7);
  if ((v4 & 1) != 0 && (uint64_t v7 = a1, v8 = a2, sub_247FF6890(), (sub_248175750() & 1) == 0))
  {
    uint64_t v7 = 0x444E41524245525FLL;
    unint64_t v8 = 0xE800000000000000;
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_248175230();
    sub_2481751C0();
    return v6;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t sub_247FF683C()
{
  unint64_t result = qword_2692D6D70;
  if (!qword_2692D6D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D70);
  }
  return result;
}

unint64_t sub_247FF6890()
{
  unint64_t result = qword_2692D6D78;
  if (!qword_2692D6D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D78);
  }
  return result;
}

uint64_t AuthenticateCommand.Request.account.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_247FF7054(v1, a1, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
}

uint64_t AuthenticateCommand.Request.account.setter(uint64_t a1)
{
  return sub_247FF6920(a1, v1);
}

uint64_t sub_247FF6920(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IdMSAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AuthenticateCommand.Request.account.modify())()
{
  return nullsub_1;
}

void AuthenticateCommand.Request.deviceInfo.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  LOBYTE(v3) = *(unsigned char *)(v3 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v3;
  sub_247FF6A2C(v4, v5, v6, v7, v8, v9);
}

uint64_t type metadata accessor for AuthenticateCommand.Request(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_2692D6EA0);
}

void sub_247FF6A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FF6AA4(a5, a6);
  }
}

uint64_t sub_247FF6AA4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 AuthenticateCommand.Request.deviceInfo.setter(long long *a1)
{
  long long v8 = a1[1];
  long long v9 = *a1;
  __n128 v7 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  char v4 = *((unsigned char *)a1 + 64);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
  sub_247FF6B84(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40));
  *(_OWORD *)uint64_t v5 = v9;
  *(_OWORD *)(v5 + 16) = v8;
  __n128 result = v7;
  *(__n128 *)(v5 + 32) = v7;
  *(void *)(v5 + 48) = v2;
  *(void *)(v5 + 56) = v3;
  *(unsigned char *)(v5 + 64) = v4;
  return result;
}

void sub_247FF6B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247FF6BFC(a5, a6);
  }
}

uint64_t sub_247FF6BFC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*AuthenticateCommand.Request.deviceInfo.modify())()
{
  return nullsub_1;
}

__n128 AuthenticateCommand.Request.init(account:deviceInfo:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  long long v11 = a2[1];
  long long v12 = *a2;
  __n128 v10 = (__n128)a2[2];
  uint64_t v5 = *((void *)a2 + 6);
  uint64_t v6 = *((void *)a2 + 7);
  char v7 = *((unsigned char *)a2 + 64);
  uint64_t v8 = a3 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
  sub_247FF6FEC(a1, a3, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  *(_OWORD *)uint64_t v8 = v12;
  *(_OWORD *)(v8 + 16) = v11;
  __n128 result = v10;
  *(__n128 *)(v8 + 32) = v10;
  *(void *)(v8 + 48) = v5;
  *(void *)(v8 + 56) = v6;
  *(unsigned char *)(v8 + 64) = v7;
  return result;
}

uint64_t AuthenticateCommand.Request.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AuthenticateCommand.Request(0);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  __n128 v10 = (char *)&v17 - v9;
  long long v11 = (char *)&v17 + *(int *)(v8 + 20) - v9;
  type metadata accessor for V1Command(0);
  *(_OWORD *)long long v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  v11[64] = 0;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  os_log_type_t v13 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload
    || (type metadata accessor for V1Command.Request(0),
        int v14 = swift_getEnumCaseMultiPayload(),
        os_log_type_t v13 = type metadata accessor for V1Command.Request,
        v14 != 3))
  {
    sub_247FF6F8C(a1, v13);
    sub_247FF6B84(0, 0, 0, 0, 0, 0);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    return v16(a2, 1, 1, v4);
  }
  else
  {
    sub_247FF6FEC(a1, (uint64_t)v7, type metadata accessor for AuthenticateCommand.Request);
    sub_247FF6FEC((uint64_t)v7, (uint64_t)v10, type metadata accessor for AuthenticateCommand.Request);
    sub_247FF7054((uint64_t)v10, a2, type metadata accessor for AuthenticateCommand.Request);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a2, 0, 1, v4);
    return sub_247FF6F8C((uint64_t)v10, type metadata accessor for AuthenticateCommand.Request);
  }
}

uint64_t sub_247FF6F8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_247FF6FEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_247FF7054(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t AuthenticateCommand.Request.into()@<X0>(uint64_t a1@<X8>)
{
  return sub_247FF8BE0(type metadata accessor for AuthenticateCommand.Request, (void (*)(void))type metadata accessor for V1Command.Request, a1);
}

uint64_t AuthenticateCommand.Request.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_247FF9C80(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v5 = v1 + *(int *)(v4 + 24);
  uint64_t v7 = *(void *)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v11 = *(void *)(v5 + 56);
  switch(*(unsigned char *)(v5 + 72))
  {
    case 1:
      uint64_t v16 = *(void *)(v5 + 64);
      uint64_t v17 = *(void *)(v5 + 32);
      uint64_t v18 = *(void *)(v5 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v8)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        char v12 = 1;
        goto LABEL_6;
      }
      sub_248175E80();
      sub_247FAC1EC(v7, v6, v9, 0, v17, v10, v18, v11, v16, 1);
      break;
    case 2:
      uint64_t v16 = *(void *)(v5 + 64);
      uint64_t v17 = *(void *)(v5 + 32);
      uint64_t v18 = *(void *)(v5 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      char v12 = 2;
LABEL_6:
      sub_247FAC1EC(v7, v6, v9, v8, v17, v10, v18, v11, v16, v12);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v13 = *(void *)(v1 + *(int *)(v4 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC(a1, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = v2 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
  if (*(void *)(v14 + 8))
  {
    long long v19 = *(_OWORD *)(v14 + 40);
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    sub_248175E80();
    if ((void)v19) {
      SetupReport.LocaleInfo.hash(into:)();
    }
  }
  return sub_248175E80();
}

uint64_t sub_247FF7528()
{
  if (*v0) {
    return 0x6E49656369766564;
  }
  else {
    return 0x746E756F636361;
  }
}

uint64_t sub_247FF7568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_247FFBEF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_247FF7590(uint64_t a1)
{
  unint64_t v2 = sub_247FF9C2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF75CC(uint64_t a1)
{
  unint64_t v2 = sub_247FF9C2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticateCommand.Request.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6D80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FF9C2C();
  sub_248175F60();
  LOBYTE(v15) = 0;
  type metadata accessor for IdMSAccount();
  sub_247FF9C80(&qword_2692D5098, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v9 = (long long *)(v3 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20));
    char v10 = *((unsigned char *)v9 + 64);
    long long v11 = v9[1];
    long long v15 = *v9;
    long long v16 = v11;
    long long v12 = v9[3];
    long long v17 = v9[2];
    long long v18 = v12;
    char v19 = v10;
    v14[15] = 1;
    sub_247FF9CC8();
    sub_248175B90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AuthenticateCommand.Request.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_247FF9C80(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v3 = v0 + *(int *)(v2 + 24);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v9 = *(void *)(v3 + 56);
  switch(*(unsigned char *)(v3 + 72))
  {
    case 1:
      uint64_t v16 = *(void *)(v3 + 32);
      uint64_t v17 = *(void *)(v3 + 64);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_248175E80();
      if (v6)
      {
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        sub_247FAC1EC(v4, v5, v7, v6, v16, v8, v10, v9, v17, 1);
      }
      else
      {
        sub_247FAC1EC(v4, v5, v7, 0, v16, v8, v10, v9, v17, 1);
      }
      break;
    case 2:
      uint64_t v18 = *(void *)(v3 + 40);
      uint64_t v19 = *(void *)(v3 + 48);
      uint64_t v11 = *(void *)(v3 + 64);
      uint64_t v12 = *(void *)(v3 + 32);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FAC1EC(v4, v5, v7, v6, v12, v18, v19, v9, v11, 2);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v13 = *(void *)(v0 + *(int *)(v2 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v21, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = v1 + *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
  if (*(void *)(v14 + 8))
  {
    long long v20 = *(_OWORD *)(v14 + 40);
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    sub_248175E80();
    if ((void)v20) {
      SetupReport.LocaleInfo.hash(into:)();
    }
  }
  sub_248175E80();
  return sub_248175EC0();
}

void AuthenticateCommand.Request.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = type metadata accessor for IdMSAccount();
  MEMORY[0x270FA5388](v4);
  *(void *)&long long v25 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6D98);
  *(void *)&long long v23 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AuthenticateCommand.Request(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = &v11[*(int *)(v9 + 28)];
  v12[64] = 0;
  *((_OWORD *)v12 + 2) = 0u;
  *((_OWORD *)v12 + 3) = 0u;
  *(_OWORD *)uint64_t v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FF9C2C();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_247FF6B84(*(void *)v12, *((void *)v12 + 1), *((void *)v12 + 2), *((void *)v12 + 3), *((void *)v12 + 4), *((void *)v12 + 5));
  }
  else
  {
    uint64_t v13 = v23;
    LOBYTE(v26) = 0;
    sub_247FF9C80(&qword_2692D50E0, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
    uint64_t v14 = v24;
    sub_248175AF0();
    uint64_t v15 = v14;
    uint64_t v16 = (uint64_t)v11;
    sub_247FF6FEC(v25, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
    char v32 = 1;
    sub_247FF9D1C();
    sub_248175AA0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v15);
    long long v24 = v27;
    long long v25 = v26;
    long long v23 = v28;
    uint64_t v17 = v29;
    uint64_t v18 = v30;
    char v19 = v31;
    sub_247FF6B84(*(void *)v12, *((void *)v12 + 1), *((void *)v12 + 2), *((void *)v12 + 3), *((void *)v12 + 4), *((void *)v12 + 5));
    long long v20 = v24;
    *(_OWORD *)uint64_t v12 = v25;
    *((_OWORD *)v12 + 1) = v20;
    *((_OWORD *)v12 + 2) = v23;
    *((void *)v12 + 6) = v17;
    *((void *)v12 + 7) = v18;
    v12[64] = v19;
    sub_247FF7054(v16, v22, type metadata accessor for AuthenticateCommand.Request);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_247FF6F8C(v16, type metadata accessor for AuthenticateCommand.Request);
  }
}

uint64_t sub_247FF800C@<X0>(uint64_t a1@<X8>)
{
  return sub_247FF9394(type metadata accessor for AuthenticateCommand.Request, (void (*)(void))type metadata accessor for V1Command.Request, a1);
}

void sub_247FF8040(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_247FF8058(void *a1)
{
  return AuthenticateCommand.Request.encode(to:)(a1);
}

uint64_t sub_247FF8078(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_247FF9C80(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v6 = v2 + *(int *)(v5 + 24);
  uint64_t v8 = *(void *)v6;
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = *(void *)(v6 + 40);
  uint64_t v12 = *(void *)(v6 + 56);
  switch(*(unsigned char *)(v6 + 72))
  {
    case 1:
      uint64_t v17 = *(void *)(v6 + 64);
      uint64_t v18 = *(void *)(v6 + 32);
      uint64_t v19 = *(void *)(v6 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v10)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        char v13 = 1;
        goto LABEL_6;
      }
      sub_248175E80();
      sub_247FAC1EC(v8, v7, v9, 0, v18, v11, v19, v12, v17, 1);
      break;
    case 2:
      uint64_t v17 = *(void *)(v6 + 64);
      uint64_t v18 = *(void *)(v6 + 32);
      uint64_t v19 = *(void *)(v6 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      char v13 = 2;
LABEL_6:
      sub_247FAC1EC(v8, v7, v9, v10, v18, v11, v19, v12, v17, v13);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v14 = *(void *)(v2 + *(int *)(v5 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC(a1, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v3 + *(int *)(a2 + 20);
  if (*(void *)(v15 + 8))
  {
    long long v21 = *(_OWORD *)(v15 + 40);
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    sub_248175E80();
    if ((void)v21) {
      SetupReport.LocaleInfo.hash(into:)();
    }
  }
  return sub_248175E80();
}

uint64_t sub_247FF84B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_247FF9C80(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v5 = v2 + *(int *)(v4 + 24);
  uint64_t v7 = *(void *)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v12 = *(void *)(v5 + 48);
  uint64_t v11 = *(void *)(v5 + 56);
  switch(*(unsigned char *)(v5 + 72))
  {
    case 1:
      uint64_t v18 = *(void *)(v5 + 32);
      uint64_t v19 = *(void *)(v5 + 64);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_248175E80();
      if (v8)
      {
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        sub_247FAC1EC(v7, v6, v9, v8, v18, v10, v12, v11, v19, 1);
      }
      else
      {
        sub_247FAC1EC(v7, v6, v9, 0, v18, v10, v12, v11, v19, 1);
      }
      break;
    case 2:
      uint64_t v20 = *(void *)(v5 + 40);
      uint64_t v21 = *(void *)(v5 + 48);
      uint64_t v13 = *(void *)(v5 + 64);
      uint64_t v14 = *(void *)(v5 + 32);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FAC1EC(v7, v6, v9, v8, v14, v20, v21, v11, v13, 2);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v15 = *(void *)(v2 + *(int *)(v4 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v24, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v3 + *(int *)(a2 + 20);
  if (*(void *)(v16 + 8))
  {
    long long v23 = *(_OWORD *)(v16 + 40);
    sub_248175E80();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    sub_248175E80();
    if ((void)v23) {
      SetupReport.LocaleInfo.hash(into:)();
    }
  }
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t AuthenticateCommand.Response.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t AuthenticateCommand.Response.result.setter(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*AuthenticateCommand.Response.result.modify())()
{
  return nullsub_1;
}

uint64_t AuthenticateCommand.Response.init(result:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t AuthenticateCommand.Response.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload == 1
    && (type metadata accessor for V1Command.Response(0),
        int v6 = swift_getEnumCaseMultiPayload(),
        uint64_t v5 = type metadata accessor for V1Command.Response,
        v6 == 3))
  {
    sub_247FF6FEC(a1, a2, type metadata accessor for AuthenticateCommand.Response);
    uint64_t v7 = type metadata accessor for AuthenticateCommand.Response(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  else
  {
    sub_247FF6F8C(a1, v5);
    uint64_t v12 = type metadata accessor for AuthenticateCommand.Response(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t AuthenticateCommand.Response.into()@<X0>(uint64_t a1@<X8>)
{
  return sub_247FF8BE0(type metadata accessor for AuthenticateCommand.Response, (void (*)(void))type metadata accessor for V1Command.Response, a1);
}

uint64_t sub_247FF8BE0@<X0>(uint64_t (*a1)(void)@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  sub_247FF6FEC(v3, a3, a1);
  a2(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static AuthenticateCommand.Response.== infix(_:_:)()
{
  sub_247FF9DC8();
  sub_247FF9E1C();
  sub_247FF9E70();
  return sub_248174A50();
}

uint64_t AuthenticateCommand.Response.hash(into:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  sub_247FFA068((unint64_t *)&qword_2692D6DC0, (void (*)(void))sub_247FF9EC4, (void (*)(void))sub_247FF9F18);
  return sub_2481750B0();
}

uint64_t sub_247FF8D70()
{
  return 0x746C75736572;
}

uint64_t sub_247FF8D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_248175CE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_247FF8E14(uint64_t a1)
{
  unint64_t v2 = sub_247FF9F6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_247FF8E50(uint64_t a1)
{
  unint64_t v2 = sub_247FF9F6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AuthenticateCommand.Response.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DD8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FF9F6C();
  sub_248175F60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  sub_247FFA068(&qword_2692D6DE8, (void (*)(void))sub_247FF9FC0, (void (*)(void))sub_247FFA014);
  sub_248175BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t AuthenticateCommand.Response.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t AuthenticateCommand.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  uint64_t v14 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v17 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6E00);
  uint64_t v16 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AuthenticateCommand.Response(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FF9F6C();
  sub_248175F20();
  if (!v2)
  {
    sub_247FFA068(&qword_2692D6E08, (void (*)(void))sub_247FFA0F0, (void (*)(void))sub_247FFA144);
    sub_248175AF0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v17, v4);
    sub_247FF6FEC((uint64_t)v11, v15, type metadata accessor for AuthenticateCommand.Response);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_247FF9364@<X0>(uint64_t a1@<X8>)
{
  return sub_247FF9394(type metadata accessor for AuthenticateCommand.Response, (void (*)(void))type metadata accessor for V1Command.Response, a1);
}

uint64_t sub_247FF9394@<X0>(uint64_t (*a1)(void)@<X2>, void (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  sub_247FF6FEC(v3, a3, a1);
  a2(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_247FF9410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for V1Command(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for V1Command.Response(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_247FF6FEC(a1, a3, type metadata accessor for AuthenticateCommand.Response);
      uint64_t v6 = 0;
      goto LABEL_7;
    }
    uint64_t v7 = type metadata accessor for V1Command.Response;
  }
  else
  {
    uint64_t v7 = type metadata accessor for V1Command;
  }
  sub_247FF6F8C(a1, v7);
  uint64_t v6 = 1;
LABEL_7:
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v8(a3, v6, 1, a2);
}

uint64_t sub_247FF9514@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AuthenticateCommand.Response.init(from:)(a1, a2);
}

uint64_t sub_247FF952C(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DD8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247FF9F6C();
  sub_248175F60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  sub_247FFA068(&qword_2692D6DE8, (void (*)(void))sub_247FF9FC0, (void (*)(void))sub_247FFA014);
  sub_248175BE0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_247FF96B8()
{
  sub_247FF9DC8();
  sub_247FF9E1C();
  sub_247FF9E70();
  return sub_248174A50();
}

uint64_t sub_247FF972C()
{
  return sub_248175EC0();
}

uint64_t sub_247FF97CC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  sub_247FFA068((unint64_t *)&qword_2692D6DC0, (void (*)(void))sub_247FF9EC4, (void (*)(void))sub_247FF9F18);
  return sub_2481750B0();
}

uint64_t sub_247FF9868()
{
  return sub_248175EC0();
}

BOOL _s12AppleIDSetup19AuthenticateCommandV7RequestV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_248175CE0(), BOOL result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = type metadata accessor for IdMSAccount();
    if (sub_2481746E0())
    {
      uint64_t v8 = (char *)a1 + *(int *)(v7 + 24);
      uint64_t v9 = *((void *)v8 + 8);
      char v10 = v8[72];
      long long v11 = *((_OWORD *)v8 + 1);
      long long v49 = *(_OWORD *)v8;
      long long v50 = v11;
      long long v12 = *((_OWORD *)v8 + 3);
      long long v51 = *((_OWORD *)v8 + 2);
      long long v52 = v12;
      uint64_t v53 = v9;
      LOBYTE(v54) = v10;
      uint64_t v13 = (char *)a2 + *(int *)(v7 + 24);
      uint64_t v14 = *((void *)v13 + 8);
      char v15 = v13[72];
      long long v16 = *((_OWORD *)v13 + 1);
      long long v63 = *(_OWORD *)v13;
      long long v64 = v16;
      long long v17 = *((_OWORD *)v13 + 3);
      long long v65 = *((_OWORD *)v13 + 2);
      long long v66 = v17;
      uint64_t v67 = v14;
      char v68 = v15;
      if ((_s12AppleIDSetup11IdMSAccountV10CredentialO2eeoiySbAE_AEtFZ_0((uint64_t)&v49, (uint64_t)&v63) & 1) != 0
        && (sub_24815D598(*(void *)((char *)a1 + *(int *)(v7 + 28)), *(void *)((char *)a2 + *(int *)(v7 + 28))) & 1) != 0)
      {
        uint64_t v18 = *(int *)(type metadata accessor for AuthenticateCommand.Request(0) + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = *(void *)((char *)a1 + v18);
        uint64_t v21 = *(void *)((char *)a1 + v18 + 8);
        uint64_t v22 = *(void *)((char *)a1 + v18 + 16);
        uint64_t v23 = *(void *)((char *)a1 + v18 + 24);
        uint64_t v25 = *(void *)((char *)a1 + v18 + 32);
        uint64_t v24 = *(void *)((char *)a1 + v18 + 40);
        uint64_t v27 = *(void *)((char *)a1 + v18 + 48);
        uint64_t v26 = *(void *)((char *)a1 + v18 + 56);
        char v28 = v19[64];
        uint64_t v29 = (char *)a2 + v18;
        uint64_t v31 = *(void *)v29;
        uint64_t v30 = *((void *)v29 + 1);
        uint64_t v33 = *((void *)v29 + 2);
        uint64_t v32 = *((void *)v29 + 3);
        uint64_t v34 = *((void *)v29 + 4);
        uint64_t v35 = *((void *)v29 + 5);
        uint64_t v36 = *((void *)v29 + 6);
        uint64_t v37 = *((void *)v29 + 7);
        char v38 = v29[64];
        if (v21)
        {
          *(void *)&long long v49 = v20;
          *((void *)&v49 + 1) = v21;
          *(void *)&long long v50 = v22;
          *((void *)&v50 + 1) = v23;
          *(void *)&long long v51 = v25;
          *((void *)&v51 + 1) = v24;
          *(void *)&long long v52 = v27;
          *((void *)&v52 + 1) = v26;
          LOBYTE(v53) = v28;
          uint64_t v47 = v20;
          uint64_t v48 = v22;
          char v46 = v28;
          if (v30)
          {
            *(void *)&long long v63 = v31;
            *((void *)&v63 + 1) = v30;
            *(void *)&long long v64 = v33;
            *((void *)&v64 + 1) = v32;
            *(void *)&long long v65 = v34;
            *((void *)&v65 + 1) = v35;
            *(void *)&long long v66 = v36;
            *((void *)&v66 + 1) = v37;
            LOBYTE(v67) = v38 & 1;
            sub_247FF6A2C(v20, v21, v22, v23, v25, v24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_247FF6AA4(v25, v24);
            char v44 = _s12AppleIDSetup11IdMSAccountV10DeviceInfoV2eeoiySbAE_AEtFZ_0((uint64_t)&v49, (uint64_t)&v63);
            long long v39 = v51;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_247FF6BFC(v39, *((uint64_t *)&v39 + 1));
            sub_247FF6B84(v47, v21, v48, v23, v25, v24);
            return (v44 & 1) != 0;
          }
          uint64_t v43 = v36;
          uint64_t v45 = v37;
          uint64_t v41 = v34;
          uint64_t v42 = v35;
          uint64_t v40 = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_247FF6AA4(v25, v24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_247FF6AA4(v25, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_247FF6BFC(v25, v24);
          uint64_t v32 = v40;
          uint64_t v34 = v41;
          uint64_t v35 = v42;
          uint64_t v36 = v43;
          uint64_t v37 = v45;
          char v28 = v46;
          uint64_t v20 = v47;
          uint64_t v22 = v48;
        }
        else if (!v30)
        {
          return 1;
        }
        *(void *)&long long v49 = v20;
        *((void *)&v49 + 1) = v21;
        *(void *)&long long v50 = v22;
        *((void *)&v50 + 1) = v23;
        *(void *)&long long v51 = v25;
        *((void *)&v51 + 1) = v24;
        *(void *)&long long v52 = v27;
        *((void *)&v52 + 1) = v26;
        LOBYTE(v53) = v28;
        uint64_t v54 = v31;
        uint64_t v55 = v30;
        uint64_t v56 = v33;
        uint64_t v57 = v32;
        uint64_t v58 = v34;
        uint64_t v59 = v35;
        uint64_t v60 = v36;
        uint64_t v61 = v37;
        char v62 = v38;
        sub_247FF6A2C(v31, v30, v33, v32, v34, v35);
        sub_247FFBFF4((uint64_t *)&v49);
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_247FF9C2C()
{
  unint64_t result = qword_2692D6D88;
  if (!qword_2692D6D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D88);
  }
  return result;
}

uint64_t sub_247FF9C80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_247FF9CC8()
{
  unint64_t result = qword_2692D6D90;
  if (!qword_2692D6D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6D90);
  }
  return result;
}

unint64_t sub_247FF9D1C()
{
  unint64_t result = qword_2692D6DA0;
  if (!qword_2692D6DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DA0);
  }
  return result;
}

uint64_t type metadata accessor for AuthenticateCommand.Response(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_2692D6EB0);
}

uint64_t sub_247FF9D90(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_247FF9DC8()
{
  unint64_t result = qword_2692D6DB0;
  if (!qword_2692D6DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DB0);
  }
  return result;
}

unint64_t sub_247FF9E1C()
{
  unint64_t result = qword_2692D6DB8;
  if (!qword_2692D6DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DB8);
  }
  return result;
}

unint64_t sub_247FF9E70()
{
  unint64_t result = qword_26B13BAA8[0];
  if (!qword_26B13BAA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B13BAA8);
  }
  return result;
}

unint64_t sub_247FF9EC4()
{
  unint64_t result = qword_2692D6DC8;
  if (!qword_2692D6DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DC8);
  }
  return result;
}

unint64_t sub_247FF9F18()
{
  unint64_t result = qword_2692D6DD0;
  if (!qword_2692D6DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DD0);
  }
  return result;
}

unint64_t sub_247FF9F6C()
{
  unint64_t result = qword_2692D6DE0;
  if (!qword_2692D6DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DE0);
  }
  return result;
}

unint64_t sub_247FF9FC0()
{
  unint64_t result = qword_2692D6DF0;
  if (!qword_2692D6DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DF0);
  }
  return result;
}

unint64_t sub_247FFA014()
{
  unint64_t result = qword_2692D6DF8;
  if (!qword_2692D6DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6DF8);
  }
  return result;
}

uint64_t sub_247FFA068(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D6DA8);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_247FFA0F0()
{
  unint64_t result = qword_2692D6E10;
  if (!qword_2692D6E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6E10);
  }
  return result;
}

unint64_t sub_247FFA144()
{
  unint64_t result = qword_2692D6E18;
  if (!qword_2692D6E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6E18);
  }
  return result;
}

unint64_t sub_247FFA19C()
{
  unint64_t result = qword_2692D6E20;
  if (!qword_2692D6E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6E20);
  }
  return result;
}

uint64_t sub_247FFA1F0(uint64_t a1)
{
  uint64_t result = sub_247FF9C80(&qword_2692D6E28, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_247FFA24C()
{
  unint64_t result = qword_2692D6E30;
  if (!qword_2692D6E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6E30);
  }
  return result;
}

uint64_t sub_247FFA2A0(uint64_t a1)
{
  uint64_t result = sub_247FF9C80(&qword_2692D6E38, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_247FFA2F8(void *a1)
{
  a1[1] = sub_247FF9C80(&qword_2692D6E40, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
  a1[2] = sub_247FF9C80(&qword_2692D6E48, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
  uint64_t result = sub_247FF9C80(&qword_2692D6E50, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
  a1[3] = result;
  return result;
}

uint64_t sub_247FFA3A4()
{
  return sub_247FF9C80(&qword_2692D6E58, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
}

uint64_t sub_247FFA3EC(uint64_t a1)
{
  uint64_t result = sub_247FF9C80(&qword_2692D6E60, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_247FFA444(uint64_t a1)
{
  uint64_t result = sub_247FF9C80(&qword_2692D6E68, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_247FFA49C(void *a1)
{
  a1[1] = sub_247FF9C80(&qword_2692D6E70, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
  a1[2] = sub_247FF9C80(&qword_2692D6E78, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
  uint64_t result = sub_247FF9C80(&qword_2692D6E80, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
  a1[3] = result;
  return result;
}

uint64_t sub_247FFA548()
{
  return sub_247FF9C80(&qword_2692D6E88, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
}

uint64_t sub_247FFA590()
{
  return sub_247FF9C80(&qword_2692D6E90, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
}

uint64_t sub_247FFA5D8()
{
  return sub_247FF9C80(&qword_2692D6E98, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
}

unint64_t sub_247FFA620(uint64_t a1)
{
  unint64_t result = sub_247FFA24C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_247FFA648()
{
  return sub_247FF9C80(&qword_2692D6E28, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Request);
}

uint64_t sub_247FFA690()
{
  return sub_247FF9C80(&qword_2692D6E60, (void (*)(uint64_t))type metadata accessor for AuthenticateCommand.Response);
}

ValueMetadata *type metadata accessor for AuthenticateCommand()
{
  return &type metadata for AuthenticateCommand;
}

uint64_t *initializeBufferWithCopyOfBuffer for AuthenticateCommand.Request(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (uint64_t *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = type metadata accessor for IdMSAccount();
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v40 = (char *)v4 + v12;
    uint64_t v41 = v11;
    char v38 = (char *)a2 + v12;
    uint64_t v13 = sub_248174700();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v40, v38, v13);
    uint64_t v14 = *(int *)(v11 + 24);
    char v15 = (char *)v4 + v14;
    long long v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    uint64_t v19 = *((void *)v16 + 2);
    uint64_t v20 = *((void *)v16 + 3);
    uint64_t v21 = *((void *)v16 + 4);
    uint64_t v22 = *((void *)v16 + 5);
    uint64_t v23 = *((void *)v16 + 7);
    uint64_t v37 = *((void *)v16 + 6);
    uint64_t v39 = *((void *)v16 + 8);
    LOBYTE(v40) = v16[72];
    sub_247FABF8C(*(void *)v16, v18, v19, v20, v21, v22, v37, v23, v39, (char)v40);
    *(void *)char v15 = v17;
    *((void *)v15 + 1) = v18;
    *((void *)v15 + 2) = v19;
    *((void *)v15 + 3) = v20;
    *((void *)v15 + 4) = v21;
    *((void *)v15 + 5) = v22;
    *((void *)v15 + 6) = v37;
    *((void *)v15 + 7) = v23;
    *((void *)v15 + 8) = v39;
    v15[72] = (char)v40;
    *(uint64_t *)((char *)v4 + *(int *)(v41 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v41 + 28));
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v24 + 8);
    swift_bridgeObjectRetain();
    if (v27)
    {
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      uint64_t v28 = *((void *)v26 + 3);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = v28;
      uint64_t v29 = *((void *)v26 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29)
      {
        *((void *)v25 + 4) = *((void *)v26 + 4);
        *((void *)v25 + 5) = v29;
        uint64_t v30 = *((void *)v26 + 7);
        *((void *)v25 + 6) = *((void *)v26 + 6);
        *((void *)v25 + 7) = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v34 = *((_OWORD *)v26 + 3);
        *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
        *((_OWORD *)v25 + 3) = v34;
      }
      v25[64] = v26[64];
    }
    else
    {
      long long v32 = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = v32;
      v25[64] = v26[64];
      long long v33 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v33;
    }
  }
  return v4;
}

uint64_t destroy for AuthenticateCommand.Request(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for IdMSAccount();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_248174700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_247FAC1EC(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t result = *(void *)(v8 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = *(void *)(v8 + 40);
    if (result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *initializeWithCopy for AuthenticateCommand.Request(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = type metadata accessor for IdMSAccount();
  uint64_t v11 = *(int *)(v10 + 20);
  char v38 = (char *)a1 + v11;
  uint64_t v39 = v10;
  uint64_t v36 = (char *)a2 + v11;
  uint64_t v12 = sub_248174700();
  long long v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v38, v36, v12);
  uint64_t v13 = *(int *)(v10 + 24);
  uint64_t v14 = (char *)a1 + v13;
  char v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 1);
  uint64_t v17 = *((void *)v15 + 2);
  uint64_t v18 = *((void *)v15 + 3);
  uint64_t v19 = *((void *)v15 + 4);
  uint64_t v20 = *((void *)v15 + 5);
  uint64_t v22 = *((void *)v15 + 6);
  uint64_t v21 = *((void *)v15 + 7);
  uint64_t v35 = *(void *)v15;
  uint64_t v37 = *((void *)v15 + 8);
  LOBYTE(v38) = v15[72];
  sub_247FABF8C(*(void *)v15, v16, v17, v18, v19, v20, v22, v21, v37, (char)v38);
  *(void *)uint64_t v14 = v35;
  *((void *)v14 + 1) = v16;
  *((void *)v14 + 2) = v17;
  *((void *)v14 + 3) = v18;
  *((void *)v14 + 4) = v19;
  *((void *)v14 + 5) = v20;
  *((void *)v14 + 6) = v22;
  *((void *)v14 + 7) = v21;
  *((void *)v14 + 8) = v37;
  v14[72] = (char)v38;
  *(void *)((char *)a1 + *(int *)(v39 + 28)) = *(void *)((char *)a2 + *(int *)(v39 + 28));
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)((char *)a2 + v23 + 8);
  swift_bridgeObjectRetain();
  if (v26)
  {
    *(void *)uint64_t v24 = *(void *)v25;
    *((void *)v24 + 1) = v26;
    uint64_t v27 = *((void *)v25 + 3);
    *((void *)v24 + 2) = *((void *)v25 + 2);
    *((void *)v24 + 3) = v27;
    uint64_t v28 = *((void *)v25 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28)
    {
      *((void *)v24 + 4) = *((void *)v25 + 4);
      *((void *)v24 + 5) = v28;
      uint64_t v29 = *((void *)v25 + 7);
      *((void *)v24 + 6) = *((void *)v25 + 6);
      *((void *)v24 + 7) = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v32 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v32;
    }
    v24[64] = v25[64];
  }
  else
  {
    long long v30 = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = v30;
    v24[64] = v25[64];
    long long v31 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v31;
  }
  return a1;
}

void *assignWithCopy for AuthenticateCommand.Request(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for IdMSAccount();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = v5;
  uint64_t v53 = v5;
  uint64_t v8 = (char *)a1 + v6;
  uint64_t v9 = (char *)a2 + v6;
  uint64_t v10 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *((void *)v13 + 1);
  uint64_t v16 = *((void *)v13 + 2);
  uint64_t v17 = *((void *)v13 + 3);
  uint64_t v18 = *((void *)v13 + 4);
  uint64_t v19 = *((void *)v13 + 5);
  uint64_t v20 = *((void *)v13 + 7);
  uint64_t v50 = *((void *)v13 + 6);
  uint64_t v51 = *((void *)v13 + 8);
  char v52 = v13[72];
  sub_247FABF8C(*(void *)v13, v15, v16, v17, v18, v19, v50, v20, v51, v52);
  uint64_t v21 = *(void *)v12;
  uint64_t v22 = *((void *)v12 + 1);
  uint64_t v23 = *((void *)v12 + 2);
  uint64_t v24 = *((void *)v12 + 3);
  uint64_t v25 = *((void *)v12 + 4);
  uint64_t v26 = *((void *)v12 + 5);
  uint64_t v27 = *((void *)v12 + 6);
  uint64_t v28 = *((void *)v12 + 7);
  uint64_t v29 = *((void *)v12 + 8);
  char v30 = v12[72];
  *(void *)uint64_t v12 = v14;
  *((void *)v12 + 1) = v15;
  *((void *)v12 + 2) = v16;
  *((void *)v12 + 3) = v17;
  *((void *)v12 + 4) = v18;
  *((void *)v12 + 5) = v19;
  *((void *)v12 + 6) = v50;
  *((void *)v12 + 7) = v20;
  *((void *)v12 + 8) = v51;
  v12[72] = v52;
  sub_247FAC1EC(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  *(void *)((char *)a1 + *(int *)(v53 + 28)) = *(void *)((char *)a2 + *(int *)(v53 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = (uint64_t)a1 + v31;
  long long v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)((char *)a1 + v31 + 8);
  uint64_t v35 = *((void *)v33 + 1);
  if (v34)
  {
    if (v35)
    {
      *(void *)uint64_t v32 = *(void *)v33;
      *(void *)(v32 + 8) = *((void *)v33 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v32 + 16) = *((void *)v33 + 2);
      *(void *)(v32 + 24) = *((void *)v33 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v36 = (_OWORD *)(v32 + 32);
      uint64_t v37 = v33 + 32;
      uint64_t v38 = *((void *)v33 + 5);
      if (*(void *)(v32 + 40))
      {
        if (v38)
        {
          *(void *)(v32 + 32) = *((void *)v33 + 4);
          *(void *)(v32 + 40) = *((void *)v33 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v32 + 48) = *((void *)v33 + 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v32 + 56) = *((void *)v33 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_247FFB0A0(v32 + 32);
          long long v47 = *((_OWORD *)v33 + 3);
          *uint64_t v36 = *v37;
          *(_OWORD *)(v32 + 48) = v47;
        }
        goto LABEL_15;
      }
      if (!v38)
      {
        long long v48 = *((_OWORD *)v33 + 3);
        *uint64_t v36 = *v37;
        *(_OWORD *)(v32 + 48) = v48;
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    sub_247FFB0F4(v32);
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    long long v42 = *((_OWORD *)v33 + 2);
    long long v41 = *((_OWORD *)v33 + 3);
    long long v43 = *((_OWORD *)v33 + 1);
    *(unsigned char *)(v32 + 64) = v33[64];
    *(_OWORD *)(v32 + 32) = v42;
    *(_OWORD *)(v32 + 48) = v41;
    *(_OWORD *)(v32 + 16) = v43;
  }
  else
  {
    if (v35)
    {
      *(void *)uint64_t v32 = *(void *)v33;
      *(void *)(v32 + 8) = *((void *)v33 + 1);
      *(void *)(v32 + 16) = *((void *)v33 + 2);
      *(void *)(v32 + 24) = *((void *)v33 + 3);
      uint64_t v39 = *((void *)v33 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v39)
      {
        long long v40 = *((_OWORD *)v33 + 3);
        *(_OWORD *)(v32 + 32) = *((_OWORD *)v33 + 2);
        *(_OWORD *)(v32 + 48) = v40;
LABEL_15:
        *(unsigned char *)(v32 + 64) = v33[64];
        return a1;
      }
LABEL_11:
      *(void *)(v32 + 32) = *((void *)v33 + 4);
      *(void *)(v32 + 40) = *((void *)v33 + 5);
      *(void *)(v32 + 48) = *((void *)v33 + 6);
      *(void *)(v32 + 56) = *((void *)v33 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    long long v44 = *((_OWORD *)v33 + 1);
    long long v45 = *((_OWORD *)v33 + 2);
    long long v46 = *((_OWORD *)v33 + 3);
    *(unsigned char *)(v32 + 64) = v33[64];
    *(_OWORD *)(v32 + 32) = v45;
    *(_OWORD *)(v32 + 48) = v46;
    *(_OWORD *)(v32 + 16) = v44;
  }
  return a1;
}

uint64_t sub_247FFB0A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_247FFB0F4(uint64_t a1)
{
  return a1;
}

_OWORD *initializeWithTake for AuthenticateCommand.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v9 = v8[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = v8[6];
  uint64_t v14 = (_OWORD *)((char *)a1 + v13);
  uint64_t v15 = (_OWORD *)((char *)a2 + v13);
  long long v16 = v15[3];
  void v14[2] = v15[2];
  v14[3] = v16;
  *(_OWORD *)((char *)v14 + 57) = *(_OWORD *)((char *)v15 + 57);
  long long v17 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v17;
  *(void *)((char *)a1 + v8[7]) = *(void *)((char *)a2 + v8[7]);
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  long long v21 = *((_OWORD *)v20 + 3);
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  *((_OWORD *)v19 + 3) = v21;
  v19[64] = v20[64];
  long long v22 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v22;
  return a1;
}

void *assignWithTake for AuthenticateCommand.Request(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[6];
  long long v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *((void *)v18 + 8);
  char v20 = v18[72];
  uint64_t v21 = *(void *)v17;
  uint64_t v22 = *((void *)v17 + 1);
  uint64_t v23 = *((void *)v17 + 2);
  uint64_t v24 = *((void *)v17 + 3);
  uint64_t v25 = *((void *)v17 + 4);
  uint64_t v26 = *((void *)v17 + 5);
  uint64_t v27 = *((void *)v17 + 6);
  uint64_t v28 = *((void *)v17 + 7);
  uint64_t v29 = *((void *)v17 + 8);
  char v30 = v17[72];
  long long v31 = *((_OWORD *)v18 + 1);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v31;
  long long v32 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v32;
  *((void *)v17 + 8) = v19;
  v17[72] = v20;
  sub_247FAC1EC(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  *(void *)((char *)a1 + v11[7]) = *(void *)((char *)a2 + v11[7]);
  swift_bridgeObjectRelease();
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (uint64_t)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  if (*(void *)((char *)a1 + v33 + 8))
  {
    uint64_t v36 = *((void *)v35 + 1);
    if (v36)
    {
      *(void *)uint64_t v34 = *(void *)v35;
      *(void *)(v34 + 8) = v36;
      swift_bridgeObjectRelease();
      uint64_t v37 = *((void *)v35 + 3);
      *(void *)(v34 + 16) = *((void *)v35 + 2);
      *(void *)(v34 + 24) = v37;
      swift_bridgeObjectRelease();
      if (*(void *)(v34 + 40))
      {
        uint64_t v38 = *((void *)v35 + 5);
        if (v38)
        {
          *(void *)(v34 + 32) = *((void *)v35 + 4);
          *(void *)(v34 + 40) = v38;
          swift_bridgeObjectRelease();
          *(void *)(v34 + 48) = *((void *)v35 + 6);
          swift_bridgeObjectRelease();
          *(void *)(v34 + 56) = *((void *)v35 + 7);
          swift_bridgeObjectRelease();
LABEL_10:
          *(unsigned char *)(v34 + 64) = v35[64];
          return a1;
        }
        sub_247FFB0A0(v34 + 32);
      }
      long long v41 = *((_OWORD *)v35 + 3);
      *(_OWORD *)(v34 + 32) = *((_OWORD *)v35 + 2);
      *(_OWORD *)(v34 + 48) = v41;
      goto LABEL_10;
    }
    sub_247FFB0F4(v34);
  }
  long long v39 = *((_OWORD *)v35 + 3);
  *(_OWORD *)(v34 + 32) = *((_OWORD *)v35 + 2);
  *(_OWORD *)(v34 + 48) = v39;
  *(unsigned char *)(v34 + 64) = v35[64];
  long long v40 = *((_OWORD *)v35 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v40;
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateCommand.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247FFB460);
}

uint64_t sub_247FFB460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IdMSAccount();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AuthenticateCommand.Request(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247FFB544);
}

uint64_t sub_247FFB544(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for IdMSAccount();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_247FFB604()
{
  uint64_t result = type metadata accessor for IdMSAccount();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AuthenticateCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t destroy for AuthenticateCommand.Response(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for AuthenticateCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AuthenticateCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AuthenticateCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AuthenticateCommand.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AuthenticateCommand.Response(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_247FFB924);
}

uint64_t sub_247FFB924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AuthenticateCommand.Response(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_247FFB9A8);
}

uint64_t sub_247FFB9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6DA8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_247FFBA1C()
{
  sub_247FFBAA8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_247FFBAA8()
{
  if (!qword_26B13BE30)
  {
    sub_247FF9E70();
    unint64_t v0 = sub_248174A60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B13BE30);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AuthenticateCommand.Response.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x247FFBBA8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateCommand.Response.CodingKeys()
{
  return &type metadata for AuthenticateCommand.Response.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AuthenticateCommand.Request.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x247FFBCACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthenticateCommand.Request.CodingKeys()
{
  return &type metadata for AuthenticateCommand.Request.CodingKeys;
}

unint64_t sub_247FFBCE8()
{
  unint64_t result = qword_2692D6EC0;
  if (!qword_2692D6EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6EC0);
  }
  return result;
}

unint64_t sub_247FFBD40()
{
  unint64_t result = qword_2692D6EC8;
  if (!qword_2692D6EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6EC8);
  }
  return result;
}

unint64_t sub_247FFBD98()
{
  unint64_t result = qword_2692D6ED0;
  if (!qword_2692D6ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6ED0);
  }
  return result;
}

unint64_t sub_247FFBDF0()
{
  unint64_t result = qword_2692D6ED8;
  if (!qword_2692D6ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6ED8);
  }
  return result;
}

unint64_t sub_247FFBE48()
{
  unint64_t result = qword_2692D6EE0;
  if (!qword_2692D6EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6EE0);
  }
  return result;
}

unint64_t sub_247FFBEA0()
{
  unint64_t result = qword_2692D6EE8;
  if (!qword_2692D6EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6EE8);
  }
  return result;
}

uint64_t sub_247FFBEF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E49656369766564 && a2 == 0xEA00000000006F66)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t *sub_247FFBFF4(uint64_t *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[14];
  sub_247FF6B84(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_247FF6B84(v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_247FFC09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247FFC298(a1, a2, a3, (uint64_t)&unk_26FC3E498, &qword_2692D6FE0);
}

uint64_t sub_247FFC0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_2481753D0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_2481753C0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_247FB33D4(a1, &qword_2692D9520);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_248175340();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_247FFC270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247FFC298(a1, a2, a3, (uint64_t)&unk_26FC3E448, &qword_2692D6FB0);
}

uint64_t sub_247FFC298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_2481753D0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_2481753C0();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_247FB33D4(a1, &qword_2692D9520);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_248175340();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t AutomaticRepairModelExchange.setupExchange.getter@<X0>(void *a1@<X8>)
{
  memcpy(v4, v1, 0x2B8uLL);
  memcpy(a1, v1, 0x2B8uLL);
  return sub_247FFC498((uint64_t)v4);
}

uint64_t sub_247FFC498(uint64_t a1)
{
  id v2 = *(id *)(a1 + 160);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *AutomaticRepairModelExchange.setupExchange.setter(const void *a1)
{
  memcpy(v4, v1, 0x2B8uLL);
  sub_247FFC788((uint64_t)v4);
  return memcpy(v1, a1, 0x2B8uLL);
}

uint64_t sub_247FFC788(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 160);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return a1;
}

uint64_t (*AutomaticRepairModelExchange.setupExchange.modify())()
{
  return nullsub_1;
}

void *AutomaticRepairModelExchange.queue.getter()
{
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = v1;
  return v1;
}

void AutomaticRepairModelExchange.queue.setter(uint64_t a1)
{
  *(void *)(v1 + 160) = a1;
}

void (*AutomaticRepairModelExchange.queue.modify(void *a1))(uint64_t a1, char a2)
{
  id v2 = *(void **)(v1 + 160);
  *a1 = v2;
  a1[1] = v1;
  id v3 = v2;
  return sub_247FFCAE8;
}

void sub_247FFCAE8(uint64_t a1, char a2)
{
  id v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(v2 + 160);
  if (a2)
  {
    id v5 = v3;

    *(void *)(v2 + 160) = v3;
  }
  else
  {

    *(void *)(v2 + 160) = v3;
  }
}

uint64_t sub_247FFCB60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  id v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v5;
  *id v5 = v3;
  v5[1] = sub_247FD79D0;
  return v7(a2);
}

uint64_t sub_247FFCC38(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 696) = &unk_2692D6F88;
  *(void *)(a2 + 704) = v5;
  return result;
}

uint64_t sub_247FFCCAC(uint64_t a1, int *a2)
{
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_247FD79D0;
  return v5();
}

uint64_t AutomaticRepairModelExchange.receiveInitial.getter()
{
  uint64_t v1 = *(void *)(v0 + 696);
  swift_retain();
  return v1;
}

uint64_t AutomaticRepairModelExchange.receiveInitial.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 696) = a1;
  *(void *)(v2 + 704) = a2;
  return result;
}

uint64_t (*AutomaticRepairModelExchange.receiveInitial.modify())()
{
  return nullsub_1;
}

uint64_t sub_247FFCE14(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 712) = &unk_2692D6F78;
  *(void *)(a2 + 720) = v5;
  return result;
}

uint64_t AutomaticRepairModelExchange.receiveRepairing.getter()
{
  uint64_t v1 = *(void *)(v0 + 712);
  swift_retain();
  return v1;
}

uint64_t AutomaticRepairModelExchange.receiveRepairing.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 712) = a1;
  *(void *)(v2 + 720) = a2;
  return result;
}

uint64_t (*AutomaticRepairModelExchange.receiveRepairing.modify())()
{
  return nullsub_1;
}

uint64_t sub_247FFCF18(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 728) = &unk_2692D6F68;
  *(void *)(a2 + 736) = v5;
  return result;
}

uint64_t AutomaticRepairModelExchange.receiveFinished.getter()
{
  uint64_t v1 = *(void *)(v0 + 728);
  swift_retain();
  return v1;
}

uint64_t AutomaticRepairModelExchange.receiveFinished.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 728) = a1;
  *(void *)(v2 + 736) = a2;
  return result;
}

uint64_t (*AutomaticRepairModelExchange.receiveFinished.modify())()
{
  return nullsub_1;
}

uint64_t sub_247FFD01C()
{
  return sub_24800179C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247FFD050(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_247FD79D0;
  return v9(a2, a3);
}

uint64_t sub_247FFD134(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 744) = &unk_2692D6F50;
  *(void *)(a2 + 752) = v5;
  return result;
}

uint64_t sub_247FFD1A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_247FD79D0;
  return v6();
}

uint64_t AutomaticRepairModelExchange.receiveRepairError.getter()
{
  uint64_t v1 = *(void *)(v0 + 744);
  swift_retain();
  return v1;
}

uint64_t AutomaticRepairModelExchange.receiveRepairError.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 744) = a1;
  *(void *)(v2 + 752) = a2;
  return result;
}

uint64_t (*AutomaticRepairModelExchange.receiveRepairError.modify())()
{
  return nullsub_1;
}

uint64_t sub_247FFD31C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  uint64_t result = swift_release();
  *(void *)(a2 + 760) = &unk_2692D6F30;
  *(void *)(a2 + 768) = v5;
  return result;
}

uint64_t AutomaticRepairModelExchange.receiveDismiss.getter()
{
  uint64_t v1 = *(void *)(v0 + 760);
  swift_retain();
  return v1;
}

uint64_t AutomaticRepairModelExchange.receiveDismiss.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *(void *)(v2 + 760) = a1;
  *(void *)(v2 + 768) = a2;
  return result;
}

uint64_t (*AutomaticRepairModelExchange.receiveDismiss.modify())()
{
  return nullsub_1;
}

void *AutomaticRepairModelExchange.init(setupExchange:)@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  uint64_t result = memcpy(a2, __src, 0x2B8uLL);
  a2[87] = &unk_2692D6EF0;
  a2[88] = 0;
  a2[89] = &unk_2692D6EF8;
  a2[90] = 0;
  a2[91] = &unk_2692D6F00;
  a2[92] = 0;
  a2[93] = &unk_2692D6F08;
  a2[94] = 0;
  a2[95] = &unk_2692D6F10;
  a2[96] = 0;
  return result;
}

uint64_t AutomaticRepairModelExchange.receiveModelUpdate(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  memcpy(v20, v4, sizeof(v20));
  uint64_t v14 = sub_2481753D0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_247FFDAF0(a1, (uint64_t)&v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8]);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 808) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = 0;
  v16[3] = 0;
  memcpy(v16 + 4, v20, 0x308uLL);
  sub_247FFDB6C((uint64_t)&v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], (uint64_t)v16 + v15);
  long long v17 = (void *)((char *)v16 + ((v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v17 = a2;
  v17[1] = a3;
  sub_247FFDD14((uint64_t)v20);
  swift_retain();
  sub_247FFC0C4((uint64_t)v13, (uint64_t)&unk_2692D6F20, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_247FFD6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[102] = a7;
  v7[101] = a6;
  v7[100] = a5;
  v7[99] = a4;
  v7[103] = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6628);
  v7[104] = swift_task_alloc();
  v7[105] = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6FC0);
  v7[106] = swift_task_alloc();
  type metadata accessor for RepairModel();
  v7[107] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_247FFD7C8, 0, 0);
}

uint64_t sub_247FFD7C8()
{
  uint64_t v1 = *(unsigned char **)(v0 + 848);
  uint64_t v2 = *(void *)(v0 + 840);
  uint64_t v3 = *(void *)(v0 + 800);
  memcpy((void *)(v0 + 16), *(const void **)(v0 + 792), 0x308uLL);
  char v4 = *(unsigned char *)(v3 + 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  sub_2480016D0(v3 + *(int *)(v5 + 32), (uint64_t)&v1[*(int *)(v2 + 28)], (uint64_t (*)(void))type metadata accessor for RepairModel);
  *uint64_t v1 = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 864) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_247FFD8CC;
  uint64_t v7 = *(void *)(v0 + 856);
  uint64_t v8 = *(void *)(v0 + 848);
  return sub_247FFDFF8(v7, v8);
}

uint64_t sub_247FFD8CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 848);
  swift_task_dealloc();
  sub_247FB33D4(v1, &qword_2692D6FC0);
  return MEMORY[0x270FA2498](sub_247FFD9EC, 0, 0);
}

uint64_t sub_247FFD9EC()
{
  uint64_t v1 = (uint64_t *)v0[100];
  if (*((unsigned char *)v1 + 8) == 1)
  {
    uint64_t v2 = (void *)v0[104];
    uint64_t v3 = (void (*)(void *))v0[101];
    uint64_t v4 = *v1;
    sub_2480016D0(v0[107], (uint64_t)v2 + *(int *)(v0[103] + 32), (uint64_t (*)(void))type metadata accessor for RepairModel);
    uint64_t v5 = sub_24814B9D8();
    *uint64_t v2 = v4;
    v2[1] = v5;
    v3(v2);
    sub_247FB33D4((uint64_t)v2, &qword_2692D6628);
  }
  sub_248001660(v0[107]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_247FFDAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_247FFDB6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_247FFDBD4(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 808) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + 32;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_247FD79D0;
  return sub_247FFD6C4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_247FFDD14(uint64_t a1)
{
  id v2 = *(id *)(a1 + 160);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_247FFDFF8(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 4656) = v2;
  uint64_t v4 = (_OWORD *)(v2 + 696);
  *(void *)(v3 + 4648) = a2;
  *(void *)(v3 + 4640) = a1;
  type metadata accessor for SetupModel();
  *(void *)(v3 + 4664) = swift_task_alloc();
  *(void *)(v3 + 4672) = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6FD0);
  *(void *)(v3 + 4680) = swift_task_alloc();
  long long v5 = v4[1];
  *(_OWORD *)(v3 + 4688) = *v4;
  *(_OWORD *)(v3 + 4704) = v5;
  long long v6 = v4[3];
  *(_OWORD *)(v3 + 4720) = v4[2];
  *(_OWORD *)(v3 + 4736) = v6;
  *(_OWORD *)(v3 + 4752) = v4[4];
  return MEMORY[0x270FA2498](sub_247FFE0E8, 0, 0);
}

uint64_t sub_247FFE0E8()
{
  uint64_t v1 = *(char **)(v0 + 4648);
  uint64_t v2 = *(void *)(v0 + 4640);
  char v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6FC0);
  sub_2480016D0((uint64_t)&v1[*(int *)(v4 + 28)], v2, (uint64_t (*)(void))type metadata accessor for RepairModel);
  uint64_t v5 = type metadata accessor for RepairModel();
  uint64_t v6 = *(int *)(v5 + 24);
  *(_DWORD *)(v0 + 4636) = v6;
  uint64_t v7 = v2 + v6;
  uint64_t v8 = *(void *)(v2 + v6);
  *(void *)(v0 + 4768) = v8;
  uint64_t v9 = *(void *)(v7 + 8);
  *(void *)(v0 + 4776) = v9;
  uint64_t v10 = *(void *)(v7 + 16);
  *(void *)(v0 + 4784) = v10;
  uint64_t v11 = *(void *)(v7 + 24);
  *(void *)(v0 + 4792) = v11;
  uint64_t v12 = *(void *)(v7 + 32);
  *(void *)(v0 + 4800) = v12;
  int v13 = *(unsigned __int8 *)(v7 + 40);
  *(unsigned char *)(v0 + 4633) = v13;
  switch(v13)
  {
    case 251:
      if (v3) {
        goto LABEL_15;
      }
      uint64_t v14 = v0 + 16;
      long long v46 = *(_OWORD *)(v0 + 4704);
      long long v51 = *(_OWORD *)(v0 + 4688);
      long long v36 = *(_OWORD *)(v0 + 4736);
      long long v41 = *(_OWORD *)(v0 + 4720);
      long long v31 = *(_OWORD *)(v0 + 4752);
      memcpy((void *)(v0 + 16), *(const void **)(v0 + 4656), 0x2B8uLL);
      *(_OWORD *)(v0 + 712) = v51;
      *(_OWORD *)(v0 + 728) = v46;
      *(_OWORD *)(v0 + 744) = v41;
      *(_OWORD *)(v0 + 760) = v36;
      *(_OWORD *)(v0 + 776) = v31;
      char v52 = (uint64_t (*)(uint64_t))(v31 + *(int *)v31);
      uint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 4848) = v15;
      void *v15 = v0;
      v15[1] = sub_247FFEF94;
      goto LABEL_19;
    case 252:
      if (v3)
      {
        LOBYTE(v13) = -4;
LABEL_14:
        uint64_t v27 = *(void *)(v0 + 4640) + v6;
        sub_2480016BC(v8, v9, v10, v11, v12, v13);
        *(void *)(v27 + 32) = 0;
        *(_OWORD *)uint64_t v27 = 0u;
        *(_OWORD *)(v27 + 16) = 0u;
        *(unsigned char *)(v27 + 40) = -5;
LABEL_15:
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
        return v28();
      }
      else
      {
        uint64_t v14 = v0 + 2344;
        long long v49 = *(_OWORD *)(v0 + 4704);
        long long v55 = *(_OWORD *)(v0 + 4688);
        long long v44 = *(_OWORD *)(v0 + 4736);
        long long v34 = *(_OWORD *)(v0 + 4720);
        long long v39 = *(_OWORD *)(v0 + 4752);
        memcpy((void *)(v0 + 2344), *(const void **)(v0 + 4656), 0x2B8uLL);
        *(_OWORD *)(v0 + 3040) = v55;
        *(_OWORD *)(v0 + 3056) = v49;
        *(_OWORD *)(v0 + 3072) = v34;
        *(_OWORD *)(v0 + 3088) = v44;
        *(_OWORD *)(v0 + 3104) = v39;
        char v52 = (uint64_t (*)(uint64_t))(v34 + *(int *)v34);
        uint64_t v29 = (void *)swift_task_alloc();
        *(void *)(v0 + 4832) = v29;
        *uint64_t v29 = v0;
        v29[1] = sub_247FFEC30;
LABEL_19:
        return v52(v14);
      }
    case 253:
      if (v3) {
        goto LABEL_15;
      }
      uint64_t v14 = v0 + 3120;
      long long v47 = *(_OWORD *)(v0 + 4720);
      long long v53 = *(_OWORD *)(v0 + 4688);
      long long v42 = *(_OWORD *)(v0 + 4736);
      long long v32 = *(_OWORD *)(v0 + 4704);
      long long v37 = *(_OWORD *)(v0 + 4752);
      memcpy((void *)(v0 + 3120), *(const void **)(v0 + 4656), 0x2B8uLL);
      *(_OWORD *)(v0 + 3816) = v53;
      *(_OWORD *)(v0 + 3832) = v32;
      *(_OWORD *)(v0 + 3848) = v47;
      *(_OWORD *)(v0 + 3864) = v42;
      *(_OWORD *)(v0 + 3880) = v37;
      char v52 = (uint64_t (*)(uint64_t))(v32 + *(int *)v32);
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 4824) = v16;
      void *v16 = v0;
      v16[1] = sub_247FFEB04;
      goto LABEL_19;
    case 254:
      long long v17 = *(unsigned char **)(v0 + 4680);
      uint64_t v18 = *(void *)(v0 + 4672);
      uint64_t v19 = *(const void **)(v0 + 4656);
      uint64_t v20 = *(void *)(v0 + 4640);
      uint64_t v21 = *(int *)(v5 + 20);
      *(_DWORD *)(v0 + 4856) = v21;
      sub_2480016D0(v20 + v21, (uint64_t)&v17[*(int *)(v18 + 28)], (uint64_t (*)(void))type metadata accessor for SetupModel);
      unsigned char *v17 = v3;
      memcpy((void *)(v0 + 3896), v19, 0x2B8uLL);
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 4816) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_247FFE970;
      uint64_t v23 = *(void *)(v0 + 4680);
      uint64_t v24 = *(void *)(v0 + 4664);
      return sub_24814BE08(v24, v23);
    case 255:
      if (v3) {
        goto LABEL_15;
      }
      uint64_t v14 = v0 + 1568;
      long long v48 = *(_OWORD *)(v0 + 4720);
      long long v54 = *(_OWORD *)(v0 + 4704);
      long long v43 = *(_OWORD *)(v0 + 4736);
      long long v33 = *(_OWORD *)(v0 + 4688);
      long long v38 = *(_OWORD *)(v0 + 4752);
      memcpy((void *)(v0 + 1568), *(const void **)(v0 + 4656), 0x2B8uLL);
      *(_OWORD *)(v0 + 2264) = v33;
      *(_OWORD *)(v0 + 2280) = v54;
      *(_OWORD *)(v0 + 2296) = v48;
      *(_OWORD *)(v0 + 2312) = v43;
      *(_OWORD *)(v0 + 2328) = v38;
      char v52 = (uint64_t (*)(uint64_t))(v33 + *(int *)v33);
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 4808) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_247FFE844;
      goto LABEL_19;
    default:
      if (v3) {
        goto LABEL_14;
      }
      long long v45 = *(_OWORD *)(v0 + 4704);
      long long v50 = *(_OWORD *)(v0 + 4688);
      long long v56 = *(_OWORD *)(v0 + 4736);
      long long v35 = *(_OWORD *)(v0 + 4752);
      long long v40 = *(_OWORD *)(v0 + 4720);
      memcpy((void *)(v0 + 792), *(const void **)(v0 + 4656), 0x2B8uLL);
      *(_OWORD *)(v0 + 1488) = v50;
      *(_OWORD *)(v0 + 1504) = v45;
      *(_OWORD *)(v0 + 1520) = v40;
      *(_OWORD *)(v0 + 1536) = v56;
      *(_OWORD *)(v0 + 1552) = v35;
      *(void *)(v0 + 4592) = v8;
      *(void *)(v0 + 4600) = v9;
      *(void *)(v0 + 4608) = v10;
      *(void *)(v0 + 4616) = v11;
      *(void *)(v0 + 4624) = v12;
      *(unsigned char *)(v0 + 4632) = v13;
      sub_247FE42BC(v8, v9, v10, v11, v12, v13);
      uint64_t v57 = (uint64_t (*)(uint64_t, uint64_t))(v56 + *(int *)v56);
      char v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 4840) = v30;
      *char v30 = v0;
      v30[1] = sub_247FFEDCC;
      return v57(v0 + 792, v0 + 4592);
  }
}

uint64_t sub_247FFE844()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FFE970()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FFEA6C, 0, 0);
}

uint64_t sub_247FFEA6C()
{
  uint64_t v1 = *(void *)(v0 + 4664);
  uint64_t v2 = *(void *)(v0 + 4640) + *(int *)(v0 + 4856);
  sub_247FB33D4(*(void *)(v0 + 4680), &qword_2692D6FD0);
  sub_248001738(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_247FFEB04()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_247FFEC30()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FFED2C, 0, 0);
}

uint64_t sub_247FFED2C()
{
  uint64_t v1 = *(void *)(v0 + 4640) + *(int *)(v0 + 4636);
  sub_2480016BC(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  *(void *)(v1 + 32) = 0;
  *(_OWORD *)uint64_t v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(unsigned char *)(v1 + 40) = -5;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_247FFEDCC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_247FFEEC8, 0, 0);
}

uint64_t sub_247FFEEC8()
{
  uint64_t v1 = *(void *)(v0 + 4640) + *(int *)(v0 + 4636);
  sub_2480016BC(*(void *)(v0 + 4768), *(void *)(v0 + 4776), *(void *)(v0 + 4784), *(void *)(v0 + 4792), *(void *)(v0 + 4800), *(unsigned char *)(v0 + 4633));
  uint64_t v2 = *(void *)(v0 + 4640) + *(int *)(v0 + 4636);
  sub_2480016BC(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  *(void *)(v2 + 32) = 0;
  *(_OWORD *)uint64_t v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(unsigned char *)(v2 + 40) = -5;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_247FFEF94()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_247FFF0C0()
{
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = v1;
  return v1;
}

uint64_t sub_247FFF0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D9520);
  MEMORY[0x270FA5388](v11 - 8);
  int v13 = &v20[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  memcpy(v20, v4, sizeof(v20));
  uint64_t v14 = sub_2481753D0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  sub_247FFDAF0(a1, (uint64_t)&v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8]);
  unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 808) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = 0;
  v16[3] = 0;
  memcpy(v16 + 4, v20, 0x308uLL);
  sub_247FFDB6C((uint64_t)&v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], (uint64_t)v16 + v15);
  long long v17 = (void *)((char *)v16 + ((v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v17 = a2;
  v17[1] = a3;
  sub_247FFDD14((uint64_t)v20);
  swift_retain();
  sub_247FFC0C4((uint64_t)v13, (uint64_t)&unk_2692D6F98, (uint64_t)v16);
  return swift_release();
}

id sub_247FFF2E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v2 = *(void **)(a1 + 160);
  *a2 = v2;
  return v2;
}

void sub_247FFF2F0(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 160);
  id v5 = *a1;

  *(void *)(a2 + 160) = v3;
}

uint64_t sub_247FFF32C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 696);
  uint64_t v4 = *(void *)(a1 + 704);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *a2 = &unk_2692D6F90;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_247FFF3A0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 712);
  uint64_t v4 = *(void *)(a1 + 720);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *a2 = &unk_2692D6F80;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_247FFF414@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 728);
  uint64_t v4 = *(void *)(a1 + 736);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *a2 = &unk_2692D6F70;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_247FFF488@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 744);
  uint64_t v4 = *(void *)(a1 + 752);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *a2 = &unk_2692D6F60;
  a2[1] = v5;
  return swift_retain();
}

uint64_t sub_247FFF4FC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 760);
  uint64_t v4 = *(void *)(a1 + 768);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *a2 = &unk_2692D6F40;
  a2[1] = v5;
  return swift_retain();
}

uint64_t destroy for AutomaticRepairModelExchange(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for AutomaticRepairModelExchange(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v3 = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = v3;
  long long v18 = *(_OWORD *)(a2 + 160);
  long long v4 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = v18;
  *(_OWORD *)(a1 + 176) = v4;
  long long v5 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v5;
  long long v6 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v6;
  long long v7 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v7;
  long long v8 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v8;
  long long v9 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v9;
  long long v10 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v10;
  long long v11 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v11;
  long long v12 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v12;
  long long v13 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v13;
  long long v14 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v14;
  long long v19 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v19;
  long long v20 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v20;
  long long v21 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v21;
  long long v22 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v22;
  long long v23 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v23;
  long long v24 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v24;
  long long v25 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v25;
  uint64_t v15 = *(void *)(a2 + 768);
  long long v26 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v26;
  *(void *)(a1 + 768) = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v16 = (id)v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AutomaticRepairModelExchange(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_retain();
  swift_release();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_retain();
  swift_release();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_retain();
  swift_release();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_retain();
  swift_release();
  long long v14 = (void *)a1[20];
  uint64_t v15 = (void *)a2[20];
  a1[20] = v15;
  id v16 = v15;

  uint64_t v17 = a2[22];
  a1[21] = a2[21];
  a1[22] = v17;
  swift_retain();
  swift_release();
  uint64_t v18 = a2[24];
  a1[23] = a2[23];
  a1[24] = v18;
  swift_retain();
  swift_release();
  uint64_t v19 = a2[26];
  a1[25] = a2[25];
  a1[26] = v19;
  swift_retain();
  swift_release();
  uint64_t v20 = a2[28];
  a1[27] = a2[27];
  a1[28] = v20;
  swift_retain();
  swift_release();
  uint64_t v21 = a2[30];
  a1[29] = a2[29];
  a1[30] = v21;
  swift_retain();
  swift_release();
  uint64_t v22 = a2[32];
  a1[31] = a2[31];
  a1[32] = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = a2[34];
  a1[33] = a2[33];
  a1[34] = v23;
  swift_retain();
  swift_release();
  uint64_t v24 = a2[36];
  a1[35] = a2[35];
  a1[36] = v24;
  swift_retain();
  swift_release();
  uint64_t v25 = a2[38];
  a1[37] = a2[37];
  a1[38] = v25;
  swift_retain();
  swift_release();
  uint64_t v26 = a2[40];
  a1[39] = a2[39];
  a1[40] = v26;
  swift_retain();
  swift_release();
  uint64_t v27 = a2[42];
  a1[41] = a2[41];
  a1[42] = v27;
  swift_retain();
  swift_release();
  uint64_t v28 = a2[44];
  a1[43] = a2[43];
  a1[44] = v28;
  swift_retain();
  swift_release();
  uint64_t v29 = a2[46];
  a1[45] = a2[45];
  a1[46] = v29;
  swift_retain();
  swift_release();
  uint64_t v30 = a2[48];
  a1[47] = a2[47];
  a1[48] = v30;
  swift_retain();
  swift_release();
  uint64_t v31 = a2[50];
  a1[49] = a2[49];
  a1[50] = v31;
  swift_retain();
  swift_release();
  uint64_t v32 = a2[52];
  a1[51] = a2[51];
  a1[52] = v32;
  swift_retain();
  swift_release();
  uint64_t v33 = a2[54];
  a1[53] = a2[53];
  a1[54] = v33;
  swift_retain();
  swift_release();
  uint64_t v34 = a2[56];
  a1[55] = a2[55];
  a1[56] = v34;
  swift_retain();
  swift_release();
  uint64_t v35 = a2[58];
  a1[57] = a2[57];
  a1[58] = v35;
  swift_retain();
  swift_release();
  uint64_t v36 = a2[60];
  a1[59] = a2[59];
  a1[60] = v36;
  swift_retain();
  swift_release();
  uint64_t v37 = a2[62];
  a1[61] = a2[61];
  a1[62] = v37;
  swift_retain();
  swift_release();
  uint64_t v38 = a2[64];
  a1[63] = a2[63];
  a1[64] = v38;
  swift_retain();
  swift_release();
  uint64_t v39 = a2[66];
  a1[65] = a2[65];
  a1[66] = v39;
  swift_retain();
  swift_release();
  uint64_t v40 = a2[68];
  a1[67] = a2[67];
  a1[68] = v40;
  swift_retain();
  swift_release();
  uint64_t v41 = a2[70];
  a1[69] = a2[69];
  a1[70] = v41;
  swift_retain();
  swift_release();
  uint64_t v42 = a2[72];
  a1[71] = a2[71];
  a1[72] = v42;
  swift_retain();
  swift_release();
  uint64_t v43 = a2[74];
  a1[73] = a2[73];
  a1[74] = v43;
  swift_retain();
  swift_release();
  uint64_t v44 = a2[76];
  a1[75] = a2[75];
  a1[76] = v44;
  swift_retain();
  swift_release();
  uint64_t v45 = a2[78];
  a1[77] = a2[77];
  a1[78] = v45;
  swift_retain();
  swift_release();
  uint64_t v46 = a2[80];
  a1[79] = a2[79];
  a1[80] = v46;
  swift_retain();
  swift_release();
  uint64_t v47 = a2[82];
  a1[81] = a2[81];
  a1[82] = v47;
  swift_retain();
  swift_release();
  uint64_t v48 = a2[84];
  a1[83] = a2[83];
  a1[84] = v48;
  swift_retain();
  swift_release();
  uint64_t v49 = a2[86];
  a1[85] = a2[85];
  a1[86] = v49;
  swift_retain();
  swift_release();
  uint64_t v50 = a2[88];
  a1[87] = a2[87];
  a1[88] = v50;
  swift_retain();
  swift_release();
  uint64_t v51 = a2[90];
  a1[89] = a2[89];
  a1[90] = v51;
  swift_retain();
  swift_release();
  uint64_t v52 = a2[92];
  a1[91] = a2[91];
  a1[92] = v52;
  swift_retain();
  swift_release();
  uint64_t v53 = a2[94];
  a1[93] = a2[93];
  a1[94] = v53;
  swift_retain();
  swift_release();
  uint64_t v54 = a2[96];
  a1[95] = a2[95];
  a1[96] = v54;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy776_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x308uLL);
}

uint64_t assignWithTake for AutomaticRepairModelExchange(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 264);
  uint64_t v5 = (_OWORD *)(a2 + 264);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  swift_release();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  uint64_t v6 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_release();
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  swift_release();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_release();
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  swift_release();
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  swift_release();
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  swift_release();
  *uint64_t v4 = *v5;
  swift_release();
  v4[1] = v5[1];
  swift_release();
  v4[2] = v5[2];
  swift_release();
  v4[3] = v5[3];
  swift_release();
  v4[4] = v5[4];
  swift_release();
  v4[5] = v5[5];
  swift_release();
  v4[6] = v5[6];
  swift_release();
  v4[7] = v5[7];
  swift_release();
  v4[8] = v5[8];
  swift_release();
  v4[9] = v5[9];
  swift_release();
  v4[10] = v5[10];
  swift_release();
  v4[11] = v5[11];
  swift_release();
  v4[12] = v5[12];
  swift_release();
  v4[13] = v5[13];
  swift_release();
  v4[14] = v5[14];
  swift_release();
  v4[15] = v5[15];
  swift_release();
  v4[16] = v5[16];
  swift_release();
  v4[17] = v5[17];
  swift_release();
  v4[18] = v5[18];
  swift_release();
  v4[19] = v5[19];
  swift_release();
  v4[20] = v5[20];
  swift_release();
  v4[21] = v5[21];
  swift_release();
  v4[22] = v5[22];
  swift_release();
  v4[23] = v5[23];
  swift_release();
  v4[24] = v5[24];
  swift_release();
  v4[25] = v5[25];
  swift_release();
  v4[26] = v5[26];
  swift_release();
  v4[27] = v5[27];
  swift_release();
  v4[28] = v5[28];
  swift_release();
  v4[29] = v5[29];
  swift_release();
  v4[30] = v5[30];
  swift_release();
  v4[31] = v5[31];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AutomaticRepairModelExchange(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 776)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AutomaticRepairModelExchange(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 776) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 776) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomaticRepairModelExchange()
{
  return &type metadata for AutomaticRepairModelExchange;
}

uint64_t sub_24800052C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_248000564(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692D6F28 + dword_2692D6F28);
  return v6(a1, v4);
}

uint64_t sub_248000618(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692D6F38 + dword_2692D6F38);
  return v8(a1, a2, v6);
}

uint64_t sub_2480006E0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692D6F48 + dword_2692D6F48);
  return v8(a1, a2, v6);
}

uint64_t sub_2480007A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(int **)(v3 + 16);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_247FD79D0;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_2692D6F58 + dword_2692D6F58);
  return v10(a1, a2, a3, v8);
}

uint64_t sub_248000874(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692D6F38 + dword_2692D6F38);
  return v8(a1, a2, v6);
}

uint64_t sub_24800093C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692D6F38 + dword_2692D6F38);
  return v8(a1, a2, v6);
}

uint64_t sub_248000A04(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_247FD79D0;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2692D6F38 + dword_2692D6F38);
  return v8(a1, a2, v6);
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630);
  uint64_t v27 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v25 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v26 = (v27 + 808) & ~v27;
  uint64_t v2 = v0 + v26 + *(int *)(v1 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for RepairModel();
  uint64_t v3 = v2 + *(int *)(v24 + 20);
  sub_247FE51A0(*(void **)(v3 + 8), *(id *)(v3 + 16), *(void *)(v3 + 24), *(unsigned int *)(v3 + 32) | ((unint64_t)*(unsigned __int16 *)(v3 + 36) << 32));
  unsigned int v4 = *(unsigned __int8 *)(v3 + 88);
  if (v4 <= 0xF9) {
    sub_247FA98EC(*(void *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v3 + 168), *(void *)(v3 + 176), *(void *)(v3 + 184), *(void *)(v3 + 192), *(void *)(v3 + 200), *(void *)(v3 + 208), *(unsigned __int8 *)(v3 + 216));
  if (*(void *)(v3 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for SetupModel();
  uint64_t v6 = v3 + *(int *)(v5 + 32);
  uint64_t v7 = type metadata accessor for IdMSAccount();
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6 + *(int *)(v7 + 20);
    uint64_t v10 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = v6 + *(int *)(v7 + 24);
    sub_247FAC1EC(*(void *)v11, *(void *)(v11 + 8), *(void *)(v11 + 16), *(void *)(v11 + 24), *(void *)(v11 + 32), *(void *)(v11 + 40), *(void *)(v11 + 48), *(void *)(v11 + 56), *(void *)(v11 + 64), *(unsigned char *)(v11 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v6 + v12[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v6 + v12[10];
  sub_247F98958(*(void **)v13, *(void **)(v13 + 8), *(void **)(v13 + 16), *(void **)(v13 + 24), *(void *)(v13 + 32), *(void **)(v13 + 40), *(void *)(v13 + 48), *(void *)(v13 + 56), *(void **)(v13 + 64), *(void **)(v13 + 72), *(unsigned char *)(v13 + 80));
  if (*(void *)(v6 + v12[11])) {
    swift_release();
  }
  uint64_t v14 = v3 + *(int *)(v5 + 36);
  if (!v8(v14, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v14 + *(int *)(v7 + 20);
    uint64_t v16 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
    uint64_t v17 = v14 + *(int *)(v7 + 24);
    sub_247FAC1EC(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(void *)(v17 + 64), *(unsigned char *)(v17 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = (int *)type metadata accessor for SignInModel();
  uint64_t v19 = (void *)(v14 + v18[5]);
  if (v19[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v20 = v19[11];
    if (v20 >> 60 != 15) {
      sub_247FB6CCC(v19[10], v20);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + v18[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v14 + v18[13]), *(void *)(v14 + v18[13] + 8), *(unsigned char *)(v14 + v18[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + v18[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = v2 + *(int *)(v24 + 24);
  unsigned int v22 = *(unsigned __int8 *)(v21 + 40);
  if (v22 <= 0xFA) {
    sub_247FE0600(*(void *)v21, *(void *)(v21 + 8), *(void *)(v21 + 16), *(void *)(v21 + 24), *(void *)(v21 + 32), v22);
  }
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v25 + v26 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v27 | 7);
}

uint64_t sub_2480011BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2692D6630) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 808) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + 32;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = (uint64_t *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_247FCB950;
  return sub_247FFD6C4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_2480012FC(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  unint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_2480013DC;
  return v5(v2 + 32);
}

uint64_t sub_2480013DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_2480014F0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692D6FA0 + dword_2692D6FA0);
  return v6(a1, v4);
}

uint64_t sub_2480015A8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247FD79D0;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692D8930 + dword_2692D8930);
  return v6(a1, v4);
}

uint64_t sub_248001660(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RepairModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2480016BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 <= 0xFAu) {
    return sub_247FE0600(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

uint64_t sub_2480016D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_248001738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SetupModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24800179C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2480017A4(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_247FCB950;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2692D8948 + dword_2692D8948);
  return v6(a1, v4);
}

BOOL AISAppleIDSignInFlowType.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

BOOL sub_2480018B4(void *a1, void *a2)
{
  return *a1 == *a2;
}

unint64_t sub_2480018CC()
{
  unint64_t result = qword_2692D6FE8;
  if (!qword_2692D6FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D6FE8);
  }
  return result;
}

uint64_t sub_248001920()
{
  return sub_248175EC0();
}

uint64_t sub_248001968()
{
  return sub_248175E70();
}

uint64_t sub_248001994()
{
  return sub_248175EC0();
}

void *sub_2480019D8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result != 1 && *result != 0;
  *(void *)a2 = *result == 1;
  *(unsigned char *)(a2 + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for AISAppleIDSignInFlowType()
{
  return &type metadata for AISAppleIDSignInFlowType;
}

uint64_t RepairContext.Builder.MissingExpectedValue.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_248001A48()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *RepairContext.Builder.init()@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  *(_WORD *)(a1 + 116) = 192;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(void *)(a1 + 152) = 1;
  *(unsigned char *)(a1 + 160) = 2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 200) = &type metadata for AutomaticRepairModelExchange;
  *(void *)(a1 + 208) = &protocol witness table for AutomaticRepairModelExchange;
  unint64_t result = (void *)swift_allocObject();
  *(void *)(a1 + 176) = result;
  result[2] = &unk_2692DC090;
  result[3] = 0;
  result[4] = &unk_2692DC098;
  result[5] = 0;
  result[6] = &unk_2692DC0A0;
  result[7] = 0;
  result[8] = &unk_2692DC0A8;
  result[9] = 0;
  result[10] = &unk_2692DC0B0;
  result[11] = 0;
  result[12] = &unk_2692DC0B8;
  result[13] = 0;
  result[14] = &unk_2692DC0C0;
  result[15] = 0;
  result[16] = &unk_2692DC0C8;
  result[17] = 0;
  result[18] = &unk_2692DC0D0;
  result[19] = 0;
  result[21] = 0;
  result[22] = 0;
  result[20] = &unk_2692DC0D8;
  result[23] = &unk_2692DC0E0;
  result[24] = 0;
  result[25] = &unk_2692DC0E8;
  result[26] = 0;
  result[27] = &unk_2692DC0F0;
  result[28] = 0;
  result[29] = &unk_2692DC0F8;
  result[30] = 0;
  result[31] = &unk_2692DC100;
  result[32] = 0;
  result[33] = &unk_2692DC108;
  result[34] = 0;
  result[35] = &unk_2692DC110;
  result[36] = 0;
  result[37] = &unk_2692DC118;
  result[38] = 0;
  result[39] = &unk_2692DC120;
  result[40] = 0;
  result[41] = &unk_2692DC128;
  result[42] = 0;
  result[43] = &unk_2692DC130;
  result[44] = 0;
  result[45] = &unk_2692DC138;
  result[46] = 0;
  result[47] = &unk_2692DC140;
  result[48] = 0;
  result[49] = &unk_2692DC148;
  result[50] = 0;
  result[51] = &unk_2692DC150;
  result[52] = 0;
  result[53] = &unk_2692DC158;
  result[54] = 0;
  result[55] = &unk_2692DC160;
  result[56] = 0;
  result[57] = &unk_2692DC168;
  result[58] = 0;
  result[59] = &unk_2692DC170;
  result[60] = 0;
  result[61] = &unk_2692DC178;
  result[62] = 0;
  result[63] = &unk_2692DC180;
  result[64] = 0;
  result[65] = &unk_2692DC188;
  result[66] = 0;
  result[67] = &unk_2692DC190;
  result[68] = 0;
  result[69] = &unk_2692DC198;
  result[70] = 0;
  result[71] = &unk_2692DC1A0;
  result[72] = 0;
  result[73] = &unk_2692DC1A8;
  result[74] = 0;
  result[75] = &unk_2692DC1B0;
  result[76] = 0;
  result[77] = &unk_2692DC1B8;
  result[78] = 0;
  result[79] = &unk_2692DC1C0;
  result[80] = 0;
  result[81] = &unk_2692DC1C8;
  result[82] = 0;
  result[83] = &unk_2692DC1D0;
  result[84] = 0;
  result[85] = &unk_2692DC1D8;
  result[86] = 0;
  result[87] = &unk_2692DC1E0;
  result[88] = 0;
  result[89] = &unk_2692D6EF0;
  result[90] = 0;
  result[91] = &unk_2692D6EF8;
  result[92] = 0;
  result[93] = &unk_2692D6F00;
  result[94] = 0;
  result[95] = &unk_2692D6F08;
  result[96] = 0;
  result[97] = &unk_2692D6F10;
  result[98] = 0;
  *(void *)(a1 + 216) = 0;
  *(unsigned char *)(a1 + 224) = 0;
  return result;
}

__n128 RepairContext.Builder.accountID(_:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v22 = *a1;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[5];
  uint64_t v20 = a1[4];
  uint64_t v21 = a1[2];
  uint64_t v7 = a1[7];
  uint64_t v8 = a1[9];
  uint64_t v18 = a1[8];
  uint64_t v19 = a1[6];
  uint64_t v16 = *(void *)(v2 + 8);
  uint64_t v17 = *(void *)v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247F982A0(v17, v16);
  *(void *)uint64_t v2 = v22;
  *(void *)(v2 + 8) = v4;
  *(void *)(v2 + 16) = v21;
  *(void *)(v2 + 24) = v5;
  *(void *)(v2 + 32) = v20;
  *(void *)(v2 + 40) = v6;
  *(void *)(v2 + 48) = v19;
  *(void *)(v2 + 56) = v7;
  *(void *)(v2 + 64) = v18;
  *(void *)(v2 + 72) = v8;
  long long v9 = *(_OWORD *)(v2 + 208);
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(v2 + 192);
  *(_OWORD *)(a2 + 208) = v9;
  *(unsigned char *)(a2 + 224) = *(unsigned char *)(v2 + 224);
  long long v10 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(a2 + 144) = v10;
  long long v11 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(a2 + 160) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(a2 + 176) = v11;
  long long v12 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(a2 + 112) = v12;
  long long v13 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a2 + 80) = v13;
  long long v14 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v14;
  __n128 result = *(__n128 *)(v2 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v2 + 32);
  *(__n128 *)(a2 + 48) = result;
  return result;
}

__n128 RepairContext.Builder._proximityRepairClient(for:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = *((unsigned int *)a1 + 6);
  unint64_t v18 = *((unsigned __int16 *)a1 + 8) | ((unint64_t)*((unsigned __int8 *)a1 + 20) << 32);
  uint64_t v19 = *a1;
  unint64_t v6 = v5 | ((unint64_t)*((unsigned __int8 *)a1 + 28) << 32) | ((unint64_t)*((unsigned __int8 *)a1 + 29) << 40);
  uint64_t v7 = *(void **)(v2 + 88);
  uint64_t v8 = *(void **)(v2 + 96);
  uint64_t v9 = *(void *)(v2 + 104);
  unint64_t v10 = *(unsigned int *)(v2 + 112) | ((unint64_t)*(unsigned __int16 *)(v2 + 116) << 32);
  swift_bridgeObjectRetain();
  sub_247FE51A0(v7, v8, v9, v10);
  *(void *)(v2 + 88) = v19;
  *(void *)(v2 + 96) = v4;
  *(void *)(v2 + 104) = v18;
  *(_WORD *)(v2 + 116) = WORD2(v6);
  *(_DWORD *)(v2 + 112) = v5;
  long long v11 = *(_OWORD *)(v2 + 208);
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(v2 + 192);
  *(_OWORD *)(a2 + 208) = v11;
  *(unsigned char *)(a2 + 224) = *(unsigned char *)(v2 + 224);
  long long v12 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(a2 + 144) = v12;
  long long v13 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(a2 + 160) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(a2 + 176) = v13;
  long long v14 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v14;
  long long v15 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(a2 + 48) = v15;
  __n128 result = *(__n128 *)(v2 + 112);
  long long v17 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a2 + 80) = v17;
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v2 + 96);
  *(__n128 *)(a2 + 112) = result;
  return result;
}

__n128 RepairContext.Builder._proximityRepairClientIntercept()@<Q0>(uint64_t a1@<X8>)
{
  sub_247FE51A0(*(void **)(v1 + 88), *(id *)(v1 + 96), *(void *)(v1 + 104), *(unsigned int *)(v1 + 112) | ((unint64_t)*(unsigned __int16 *)(v1 + 116) << 32));
  *(void *)(v1 + 96) = 0;
  *(void *)(v1 + 104) = 0;
  *(void *)(v1 + 88) = 2;
  *(_WORD *)(v1 + 116) = 192;
  *(_DWORD *)(v1 + 112) = 0;
  long long v3 = *(_OWORD *)(v1 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(v1 + 192);
  *(_OWORD *)(a1 + 208) = v3;
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(v1 + 224);
  long long v4 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(a1 + 144) = v4;
  long long v5 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 176) = v5;
  long long v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  __n128 result = *(__n128 *)(v1 + 112);
  long long v9 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 96);
  *(__n128 *)(a1 + 112) = result;
  return result;
}

__n128 RepairContext.Builder._enableProximityRepair(withTargetAuthTag:withCodeType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a3;
  char v9 = *((unsigned char *)a3 + 8);
  sub_247FE51A0(*(void **)(v4 + 88), *(id *)(v4 + 96), *(void *)(v4 + 104), *(unsigned int *)(v4 + 112) | ((unint64_t)*(unsigned __int16 *)(v4 + 116) << 32));
  *(void *)(v4 + 96) = 0;
  *(void *)(v4 + 104) = 0;
  *(void *)(v4 + 88) = 1;
  *(_WORD *)(v4 + 116) = 192;
  *(_DWORD *)(v4 + 112) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v4 + 136) = a1;
  *(void *)(v4 + 144) = a2;
  *(void *)(v4 + 152) = v8;
  *(unsigned char *)(v4 + 160) = v9;
  long long v10 = *(_OWORD *)(v4 + 208);
  *(_OWORD *)(a4 + 192) = *(_OWORD *)(v4 + 192);
  *(_OWORD *)(a4 + 208) = v10;
  *(unsigned char *)(a4 + 224) = *(unsigned char *)(v4 + 224);
  long long v11 = *(_OWORD *)(v4 + 112);
  long long v12 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(a4 + 80) = v12;
  *(_OWORD *)(a4 + 96) = *(_OWORD *)(v4 + 96);
  *(_OWORD *)(a4 + 112) = v11;
  long long v13 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v4;
  *(_OWORD *)(a4 + 16) = v13;
  long long v14 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(a4 + 48) = v14;
  long long v15 = *(_OWORD *)(v4 + 144);
  *(_OWORD *)(a4 + 128) = *(_OWORD *)(v4 + 128);
  *(_OWORD *)(a4 + 144) = v15;
  __n128 result = *(__n128 *)(v4 + 176);
  *(_OWORD *)(a4 + 160) = *(_OWORD *)(v4 + 160);
  *(__n128 *)(a4 + 176) = result;
  return result;
}

__n128 RepairContext.Builder._context(_:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;

  *(void *)(v3 + 168) = a1;
  sub_248003B48(v3 + 176, (uint64_t)v28);
  if (v29)
  {
    id v6 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6FF8);
    if (swift_dynamicCast())
    {
      memcpy(__dst, __src, 0x308uLL);
      if (qword_2692D4D70 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_248174B90();
      __swift_project_value_buffer(v7, (uint64_t)qword_2692D6A78);
      uint64_t v8 = sub_248174B70();
      os_log_type_t v9 = sub_2481755C0();
      if (os_log_type_enabled(v8, v9))
      {
        long long v10 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        v24[0] = v23;
        *(_DWORD *)long long v10 = 136315138;
        swift_beginAccess();
        memcpy(v26, __dst, sizeof(v26));
        memcpy(v25, __dst, sizeof(v25));
        sub_247FFDD14((uint64_t)v26);
        uint64_t v11 = sub_248175190();
        *(void *)uint64_t v25 = sub_247FB6D24(v11, v12, v24);
        sub_248175730();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_247F93000, v8, v9, "Applying main queue override on exchange: %s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C574E00](v23, -1, -1);
        MEMORY[0x24C574E00](v10, -1, -1);
      }

      sub_248003BB0();
      uint64_t v13 = sub_248175630();
      swift_beginAccess();
      long long v14 = *(void **)&__dst[10];
      *(void *)&__dst[10] = v13;

      *(_OWORD *)uint64_t v25 = __dst[0];
      *(_OWORD *)&v25[16] = __dst[1];
      *(_OWORD *)&v25[32] = __dst[2];
      *(_OWORD *)&v25[48] = __dst[3];
      *(_OWORD *)&v25[64] = __dst[4];
      *(_OWORD *)&v25[80] = __dst[5];
      *(_OWORD *)&v25[96] = __dst[6];
      *(_OWORD *)&v25[112] = __dst[7];
      *(_OWORD *)&v25[128] = __dst[8];
      *(_OWORD *)&v25[144] = __dst[9];
      *(_OWORD *)&v25[168] = *(_OWORD *)((char *)&__dst[10] + 8);
      *(_OWORD *)&v25[184] = *(_OWORD *)((char *)&__dst[11] + 8);
      *(_OWORD *)&v25[200] = *(_OWORD *)((char *)&__dst[12] + 8);
      *(_OWORD *)&v25[216] = *(_OWORD *)((char *)&__dst[13] + 8);
      *(_OWORD *)&v25[232] = *(_OWORD *)((char *)&__dst[14] + 8);
      *(_OWORD *)&v25[248] = *(_OWORD *)((char *)&__dst[15] + 8);
      *(void *)&v25[160] = v13;
      *(void *)&v25[264] = *((void *)&__dst[16] + 1);
      *(_OWORD *)&v25[272] = __dst[17];
      *(_OWORD *)&v25[288] = __dst[18];
      *(_OWORD *)&v25[304] = __dst[19];
      *(_OWORD *)&v25[320] = __dst[20];
      *(_OWORD *)&v25[336] = __dst[21];
      *(_OWORD *)&v25[352] = __dst[22];
      *(_OWORD *)&v25[368] = __dst[23];
      *(_OWORD *)&v25[384] = __dst[24];
      *(_OWORD *)&v25[400] = __dst[25];
      *(_OWORD *)&v25[416] = __dst[26];
      *(_OWORD *)&v25[432] = __dst[27];
      *(_OWORD *)&v25[448] = __dst[28];
      *(_OWORD *)&v25[464] = __dst[29];
      *(_OWORD *)&v25[480] = __dst[30];
      *(_OWORD *)&v25[496] = __dst[31];
      *(_OWORD *)&v25[512] = __dst[32];
      *(_OWORD *)&v25[528] = __dst[33];
      *(_OWORD *)&v25[544] = __dst[34];
      *(_OWORD *)&v25[560] = __dst[35];
      *(_OWORD *)&v25[576] = __dst[36];
      *(_OWORD *)&v25[592] = __dst[37];
      *(_OWORD *)&v25[608] = __dst[38];
      *(_OWORD *)&v25[624] = __dst[39];
      *(_OWORD *)&v25[640] = __dst[40];
      *(_OWORD *)&v25[656] = __dst[41];
      *(_OWORD *)&v25[672] = __dst[42];
      *(_OWORD *)&v25[688] = __dst[43];
      *(_OWORD *)&v25[704] = __dst[44];
      *(_OWORD *)&v25[720] = __dst[45];
      *(_OWORD *)&v25[736] = __dst[46];
      *(_OWORD *)&v25[752] = __dst[47];
      *(void *)&v25[768] = *(void *)&__dst[48];
      v24[3] = (uint64_t)&type metadata for AutomaticRepairModelExchange;
      v24[4] = (uint64_t)&protocol witness table for AutomaticRepairModelExchange;
      v24[0] = swift_allocObject();
      memcpy((void *)(v24[0] + 16), v25, 0x308uLL);
      sub_247FFDD14((uint64_t)v25);
      sub_247FB33D4(v3 + 176, &qword_2692D6FF0);
      sub_248003BF0((uint64_t)v24, v3 + 176);
      memcpy(v26, __dst, sizeof(v26));
      sub_248003C58((uint64_t)v26);
    }
  }
  else
  {
    id v15 = a1;
    sub_247FB33D4((uint64_t)v28, &qword_2692D6FF0);
  }
  long long v16 = *(_OWORD *)(v3 + 208);
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(v3 + 192);
  *(_OWORD *)(a2 + 208) = v16;
  *(unsigned char *)(a2 + 224) = *(unsigned char *)(v3 + 224);
  long long v17 = *(_OWORD *)(v3 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(v3 + 128);
  *(_OWORD *)(a2 + 144) = v17;
  long long v18 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a2 + 160) = *(_OWORD *)(v3 + 160);
  *(_OWORD *)(a2 + 176) = v18;
  long long v19 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a2 + 80) = v19;
  long long v20 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a2 + 112) = v20;
  long long v21 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v21;
  __n128 result = *(__n128 *)(v3 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v3 + 32);
  *(__n128 *)(a2 + 48) = result;
  return result;
}

id RepairContext.Builder._builderError(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(v2 + 216) = a1;
  *(unsigned char *)(a2 + 224) = *(unsigned char *)(v2 + 224);
  long long v5 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(a2 + 144) = v5;
  long long v6 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(a2 + 160) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(a2 + 176) = v6;
  long long v7 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a2 + 80) = v7;
  long long v8 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(a2 + 112) = v8;
  long long v9 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v9;
  long long v10 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(a2 + 48) = v10;
  long long v11 = *(_OWORD *)(v2 + 208);
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(v2 + 192);
  *(_OWORD *)(a2 + 208) = v11;
  return a1;
}

__n128 RepairContext.Builder.modelExchange<A>(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v16[3] = a2;
  v16[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_1, a1, a2);
  sub_247FB33D4(v4 + 176, &qword_2692D6FF0);
  sub_248003BF0((uint64_t)v16, v4 + 176);
  long long v9 = *(_OWORD *)(v4 + 208);
  *(_OWORD *)(a4 + 192) = *(_OWORD *)(v4 + 192);
  *(_OWORD *)(a4 + 208) = v9;
  *(unsigned char *)(a4 + 224) = *(unsigned char *)(v4 + 224);
  long long v10 = *(_OWORD *)(v4 + 144);
  *(_OWORD *)(a4 + 128) = *(_OWORD *)(v4 + 128);
  *(_OWORD *)(a4 + 144) = v10;
  long long v11 = *(_OWORD *)(v4 + 176);
  *(_OWORD *)(a4 + 160) = *(_OWORD *)(v4 + 160);
  *(_OWORD *)(a4 + 176) = v11;
  long long v12 = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(a4 + 80) = v12;
  long long v13 = *(_OWORD *)(v4 + 112);
  *(_OWORD *)(a4 + 96) = *(_OWORD *)(v4 + 96);
  *(_OWORD *)(a4 + 112) = v13;
  long long v14 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)a4 = *(_OWORD *)v4;
  *(_OWORD *)(a4 + 16) = v14;
  __n128 result = *(__n128 *)(v4 + 48);
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(v4 + 32);
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 RepairContext.Builder.shouldSkipConfirmation(_:)@<Q0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v2 + 224) = a1;
  *(unsigned char *)(a2 + 224) = a1;
  long long v3 = *(_OWORD *)(v2 + 208);
  *(_OWORD *)(a2 + 192) = *(_OWORD *)(v2 + 192);
  *(_OWORD *)(a2 + 208) = v3;
  long long v4 = *(_OWORD *)(v2 + 144);
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(v2 + 128);
  *(_OWORD *)(a2 + 144) = v4;
  long long v5 = *(_OWORD *)(v2 + 176);
  *(_OWORD *)(a2 + 160) = *(_OWORD *)(v2 + 160);
  *(_OWORD *)(a2 + 176) = v5;
  long long v6 = *(_OWORD *)(v2 + 80);
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v2 + 64);
  *(_OWORD *)(a2 + 80) = v6;
  long long v7 = *(_OWORD *)(v2 + 112);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v2 + 96);
  *(_OWORD *)(a2 + 112) = v7;
  long long v8 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v8;
  __n128 result = *(__n128 *)(v2 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v2 + 32);
  *(__n128 *)(a2 + 48) = result;
  return result;
}

__n128 RepairContext.Builder._fixedPin(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = a2;
  long long v7 = *(_OWORD *)(v3 + 208);
  *(_OWORD *)(a3 + 192) = *(_OWORD *)(v3 + 192);
  *(_OWORD *)(a3 + 208) = v7;
  *(unsigned char *)(a3 + 224) = *(unsigned char *)(v3 + 224);
  long long v8 = *(_OWORD *)(v3 + 176);
  *(_OWORD *)(a3 + 160) = *(_OWORD *)(v3 + 160);
  *(_OWORD *)(a3 + 176) = v8;
  long long v9 = *(_OWORD *)(v3 + 80);
  *(_OWORD *)(a3 + 64) = *(_OWORD *)(v3 + 64);
  *(_OWORD *)(a3 + 80) = v9;
  long long v10 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a3 = *(_OWORD *)v3;
  *(_OWORD *)(a3 + 16) = v10;
  long long v11 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a3 + 48) = v11;
  long long v12 = *(_OWORD *)(v3 + 112);
  *(_OWORD *)(a3 + 96) = *(_OWORD *)(v3 + 96);
  *(_OWORD *)(a3 + 112) = v12;
  __n128 result = *(__n128 *)(v3 + 144);
  *(_OWORD *)(a3 + 128) = *(_OWORD *)(v3 + 128);
  *(__n128 *)(a3 + 144) = result;
  return result;
}

uint64_t RepairContext.Builder.build()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7000);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (uint64_t *)&v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for RepairModel();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  long long v11 = (uint64_t *)&v32[-v10 - 8];
  MEMORY[0x270FA5388](v9);
  id v15 = &v32[-v14 - 8];
  long long v16 = *(void **)(v1 + 216);
  if (v16)
  {
    id v17 = v16;
    sub_248003F74(v1);
    return swift_willThrow();
  }
  uint64_t v37 = v12;
  long long v19 = *(_OWORD *)(v1 + 208);
  v35[1] = *(_OWORD *)(v1 + 192);
  v35[2] = v19;
  char v36 = *(unsigned char *)(v1 + 224);
  long long v20 = *(_OWORD *)(v1 + 144);
  v33[8] = *(_OWORD *)(v1 + 128);
  v33[9] = v20;
  long long v21 = *(_OWORD *)(v1 + 176);
  long long v34 = *(_OWORD *)(v1 + 160);
  v35[0] = v21;
  long long v22 = *(_OWORD *)(v1 + 80);
  v33[4] = *(_OWORD *)(v1 + 64);
  v33[5] = v22;
  long long v23 = *(_OWORD *)(v1 + 112);
  v33[6] = *(_OWORD *)(v1 + 96);
  v33[7] = v23;
  long long v24 = *(_OWORD *)(v1 + 16);
  v33[0] = *(_OWORD *)v1;
  v33[1] = v24;
  long long v25 = *(_OWORD *)(v1 + 48);
  _OWORD v33[2] = *(_OWORD *)(v1 + 32);
  v33[3] = v25;
  if (*((void *)&v34 + 1))
  {
    uint64_t v26 = v13;
    id v27 = *((id *)&v34 + 1);
    AISRepairContext.into(relaxed:)(0, (uint64_t)v6);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v26 + 48))(v6, 1, v7) == 1)
    {
      sub_247FB33D4((uint64_t)v6, &qword_2692D7000);
      sub_248003FF0();
      swift_allocError();
      *uint64_t v28 = 0;
      swift_willThrow();

      return sub_248003F74((uint64_t)v33);
    }
  }
  else
  {
    sub_248003F3C((uint64_t)v33, (uint64_t)v32);
    sub_248003338(v11);
    if (v2) {
      return sub_248003F74((uint64_t)v33);
    }
    long long v6 = v11;
  }
  sub_248009340((uint64_t)v6, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for RepairModel);
  uint64_t v29 = v37;
  sub_248009340((uint64_t)v15, v37, (uint64_t (*)(void))type metadata accessor for RepairModel);
  sub_248003B48((uint64_t)v35, (uint64_t)v32);
  sub_248003F74((uint64_t)v33);
  sub_248009340(v29, a1, (uint64_t (*)(void))type metadata accessor for RepairModel);
  uint64_t v30 = type metadata accessor for RepairContext();
  return sub_248003BF0((uint64_t)v32, a1 + *(int *)(v30 + 20));
}

uint64_t AISRepairContext.into(relaxed:)@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7010);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SetupModel();
  uint64_t v67 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2692D4D70 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_248174B90();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_2692D6A78);
  id v13 = v2;
  uint64_t v66 = v12;
  uint64_t v14 = sub_248174B70();
  os_log_type_t v15 = sub_2481755B0();
  BOOL v16 = os_log_type_enabled(v14, v15);
  LODWORD(v68) = a1;
  if (v16)
  {
    uint64_t v63 = v8;
    long long v64 = v10;
    uint64_t v65 = a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    uint64_t v70 = v62;
    *(_DWORD *)uint64_t v17 = 67109634;
    LODWORD(v69) = a1 & 1;
    sub_248175730();
    *(_WORD *)(v17 + 8) = 2080;
    id v18 = objc_msgSend(v13, sel_altDSID);
    uint64_t v19 = sub_248175160();
    unint64_t v21 = v20;

    uint64_t v69 = sub_247FB6D24(v19, v21, &v70);
    sub_248175730();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 18) = 2080;
    uint64_t v22 = (uint64_t)&property descriptor for AuthenticationModel.ServerRedirect.configuration;
    id v23 = objc_msgSend(v13, sel_userProfileIdentifier);
    if (v23)
    {
      long long v24 = v23;
      uint64_t v25 = sub_248175160();
      unint64_t v27 = v26;
    }
    else
    {
      unint64_t v27 = 0xE600000000000000;
      uint64_t v25 = 0x3E6C6C756E3CLL;
    }
    uint64_t v69 = sub_247FB6D24(v25, v27, &v70);
    sub_248175730();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_247F93000, v14, v15, "Converting objc setup context with properties (relaxed: %{BOOL}d): {\n  altDSID: %s,\n  userProfileIdentifier: %s\n}", (uint8_t *)v17, 0x1Cu);
    uint64_t v28 = v62;
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v28, -1, -1);
    MEMORY[0x24C574E00](v17, -1, -1);

    uint64_t v10 = v64;
    a2 = v65;
    uint64_t v8 = v63;
  }
  else
  {
    uint64_t v22 = 0x1F7C78000;
  }
  AISSetupContext.into(relaxed:)(v68 & 1, v7);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v67 + 48))(v7, 1, v8) == 1)
  {
    sub_247FB33D4((uint64_t)v7, &qword_2692D7010);
    uint64_t v29 = sub_248174B70();
    os_log_type_t v30 = sub_2481755D0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_247F93000, v29, v30, "Unable to convert setup model", v31, 2u);
      MEMORY[0x24C574E00](v31, -1, -1);
    }

    uint64_t v32 = type metadata accessor for RepairModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a2, 1, 1, v32);
  }
  else
  {
    uint64_t v34 = v22;
    sub_248009340((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SetupModel);
    v10[96] = 1;
    id v35 = objc_msgSend(v13, sel_altDSID);
    uint64_t v36 = sub_248175160();
    uint64_t v37 = v10;
    uint64_t v39 = v38;

    swift_bridgeObjectRelease();
    *((void *)v37 + 19) = v36;
    *((void *)v37 + 20) = v39;
    uint64_t v40 = (uint64_t)v37;
    id v41 = [v13 (SEL)(v22 + 1997)];
    if (v41)
    {
      uint64_t v42 = v41;
      uint64_t v68 = sub_248175160();
      uint64_t v44 = v43;

      uint64_t v45 = sub_248174B70();
      os_log_type_t v46 = sub_2481755B0();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl(&dword_247F93000, v45, v46, "Client provided a profile identifier. Setting it.", v47, 2u);
        MEMORY[0x24C574E00](v47, -1, -1);
      }

      uint64_t v48 = *(int *)(v8 + 36);
      uint64_t v49 = v40 + v48 + *(int *)(type metadata accessor for SignInModel() + 52);
      sub_247FE52C4(*(void *)v49, *(void *)(v49 + 8), *(unsigned char *)(v49 + 16));
      *(void *)uint64_t v49 = v68;
      *(void *)(v49 + 8) = v44;
      *(unsigned char *)(v49 + 16) = 0;
    }
    id v50 = objc_msgSend(v13, (SEL)&selRef_stringFromPersonNameComponents_);
    uint64_t v51 = sub_248175160();
    uint64_t v53 = v52;

    id v54 = [v13 (SEL)(v34 + 1997)];
    if (v54)
    {
      long long v55 = v54;
      uint64_t v56 = sub_248175160();
      uint64_t v58 = v57;
    }
    else
    {
      uint64_t v56 = 0;
      uint64_t v58 = 0;
    }
    uint64_t v59 = type metadata accessor for RepairModel();
    sub_2480040C8(v40, a2 + *(int *)(v59 + 20));
    *(void *)a2 = v51;
    *(void *)(a2 + 8) = v53;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(void *)(a2 + 64) = v56;
    *(void *)(a2 + 72) = v58;
    uint64_t v60 = a2 + *(int *)(v59 + 24);
    *(void *)(v60 + 32) = 0;
    *(_OWORD *)uint64_t v60 = 0u;
    *(_OWORD *)(v60 + 16) = 0u;
    *(unsigned char *)(v60 + 40) = -1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(a2, 0, 1, v59);
    return sub_2480071C0(v40, (uint64_t (*)(void))type metadata accessor for SetupModel);
  }
}

double sub_248003338@<D0>(uint64_t *a1@<X8>)
{
  char v77 = a1;
  uint64_t v2 = (int *)type metadata accessor for AuthenticationModel();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v60 = &v51[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void **)(v1 + 88);
  uint64_t v7 = *(void **)(v1 + 96);
  uint64_t v9 = *(void *)(v1 + 104);
  uint64_t v10 = *(unsigned __int16 *)(v1 + 116);
  unint64_t v11 = *(unsigned int *)(v1 + 112) | (unint64_t)(v10 << 32);
  BOOL v52 = (v10 >> 6) >= 2u;
  uint64_t v12 = *(void *)v1;
  uint64_t v13 = *(void *)(v1 + 8);
  uint64_t v14 = *(void *)(v1 + 16);
  uint64_t v15 = *(void *)(v1 + 24);
  uint64_t v16 = *(void *)(v1 + 32);
  uint64_t v17 = *(void *)(v1 + 40);
  uint64_t v18 = *(void *)(v1 + 48);
  uint64_t v19 = *(void *)(v1 + 56);
  uint64_t v20 = *(void *)(v1 + 64);
  uint64_t v21 = *(void *)(v1 + 72);
  if (v13)
  {
    uint64_t v76 = *(void *)v1;
    unint64_t v67 = v13;
    uint64_t v75 = v14;
    uint64_t v74 = v15;
    uint64_t v73 = v16;
    uint64_t v72 = v17;
    uint64_t v71 = v18;
    uint64_t v70 = v19;
    uint64_t v69 = v20;
    uint64_t v68 = v21;
  }
  else
  {
    uint64_t v76 = 0;
    uint64_t v75 = 0;
    uint64_t v74 = 0;
    uint64_t v73 = 0;
    uint64_t v72 = 0;
    uint64_t v71 = 0;
    uint64_t v70 = 0;
    uint64_t v69 = 0;
    uint64_t v68 = 0;
    unint64_t v67 = 0xE000000000000000;
  }
  int v59 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v66 = v59 ^ 1u | 0x200;
  uint64_t v22 = *(void *)(v1 + 128);
  uint64_t v65 = *(void *)(v1 + 120);
  uint64_t v57 = v22;
  uint64_t v23 = *(void *)(v1 + 144);
  uint64_t v61 = *(void *)(v1 + 136);
  uint64_t v58 = v23;
  uint64_t v64 = *(void *)(v1 + 152);
  int v63 = *(unsigned __int8 *)(v1 + 160);
  int v62 = *(unsigned __int8 *)(v1 + 224);
  sub_247F9819C(v12, v13);
  uint64_t v53 = v8;
  sub_247FE4184(v8, v7, v9, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_248003F74(v1);
  uint64_t v24 = type metadata accessor for IdMSAccount();
  uint64_t v56 = v9;
  uint64_t v25 = v24;
  uint64_t v26 = *(void *)(v24 - 8);
  id v54 = v7;
  unint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  unint64_t v55 = v11;
  uint64_t v28 = (uint64_t)v60;
  v27(v60, 1, 1, v24);
  v27(v4, 1, 1, v25);
  uint64_t v29 = &v4[v2[5]];
  uint64_t v29[3] = 0u;
  v29[4] = 0u;
  v29[1] = 0u;
  _OWORD v29[2] = 0u;
  *uint64_t v29 = 0u;
  os_log_type_t v30 = &v4[v2[7]];
  *os_log_type_t v30 = 0;
  v30[1] = 0;
  uint64_t v31 = v2[8];
  *(void *)&v4[v31] = MEMORY[0x263F8EE78];
  uint64_t v32 = v2[9];
  v4[v32] = 0;
  uint64_t v33 = &v4[v2[11]];
  *uint64_t v33 = 0;
  v33[1] = 0;
  sub_247F9805C(v28, (uint64_t)v4);
  v4[v2[6]] = 1;
  uint64_t v34 = &v4[v2[10]];
  *((_OWORD *)v34 + 3) = 0u;
  *((_OWORD *)v34 + 4) = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  *((_OWORD *)v34 + 2) = 0u;
  *(_OWORD *)uint64_t v34 = 0u;
  v34[80] = 12;
  swift_bridgeObjectRelease();
  *os_log_type_t v30 = 0;
  v30[1] = 0;
  v4[v32] = 0;
  swift_bridgeObjectRelease();
  *(void *)&v4[v31] = MEMORY[0x263F8EE78];
  uint64_t v35 = type metadata accessor for RepairModel();
  uint64_t v36 = v77;
  uint64_t v37 = (char *)v77 + *(int *)(v35 + 20);
  uint64_t v38 = type metadata accessor for SetupModel();
  sub_248009340((uint64_t)v4, (uint64_t)&v37[*(int *)(v38 + 32)], (uint64_t (*)(void))type metadata accessor for AuthenticationModel);
  v27((unsigned char *)v28, 1, 1, v25);
  memset(v83, 0, sizeof(v83));
  v81[0] = 0;
  v81[1] = 0;
  char v82 = 1;
  char v80 = 0;
  memset(v79, 0, sizeof(v79));
  uint64_t v39 = (uint64_t)&v37[*(int *)(v38 + 36)];
  memset(v78, 0, sizeof(v78));
  SignInModel.init(account:srpResults:requiredServices:desiredServices:shouldBackgroundDesiredServices:suppressCloudDataProtectionSetup:deviceUserKind:state:peerDeviceLocaleInfo:serverDeviceModel:)(v28, v83, MEMORY[0x263F8EE88], MEMORY[0x263F8EE88], 0, 0, v81, v79, v39, v78, 0, 0);
  *uint64_t v37 = v59;
  uint64_t v40 = v54;
  *((void *)v37 + 1) = v53;
  *((void *)v37 + 2) = v40;
  *((void *)v37 + 3) = v56;
  int v41 = v55;
  *((_WORD *)v37 + 18) = WORD2(v55);
  *((_DWORD *)v37 + 8) = v41;
  *(_OWORD *)(v37 + 40) = 0u;
  *(_OWORD *)(v37 + 56) = 0u;
  *(_OWORD *)(v37 + 72) = 0u;
  v37[88] = -1;
  v37[96] = 1;
  v37[97] = v52;
  *(_DWORD *)(v37 + 98) = v79[0];
  *((_WORD *)v37 + 51) = WORD2(v79[0]);
  uint64_t v42 = v58;
  *((void *)v37 + 13) = v61;
  *((void *)v37 + 14) = v42;
  uint64_t v43 = v57;
  *((void *)v37 + 15) = v65;
  *((void *)v37 + 16) = v43;
  *((void *)v37 + 17) = v64;
  v37[144] = v63;
  v37[145] = v62;
  *(_DWORD *)(v37 + 146) = v78[0];
  *((_WORD *)v37 + 75) = WORD2(v78[0]);
  *((void *)v37 + 19) = 0;
  *((void *)v37 + 20) = 0;
  *((void *)v37 + 21) = v66;
  *((void *)v37 + 22) = 0;
  *((void *)v37 + 23) = 0;
  *((void *)v37 + 24) = 0;
  *(_OWORD *)(v37 + 200) = xmmword_24817D830;
  v37[216] = 0;
  *(_DWORD *)(v37 + 217) = v83[0];
  *((_DWORD *)v37 + 55) = *(_DWORD *)((char *)v83 + 3);
  double result = 0.0;
  *((_OWORD *)v37 + 16) = 0u;
  *((_OWORD *)v37 + 17) = 0u;
  *((_OWORD *)v37 + 14) = 0u;
  *((_OWORD *)v37 + 15) = 0u;
  unint64_t v45 = v67;
  *uint64_t v36 = v76;
  v36[1] = v45;
  uint64_t v46 = v74;
  v36[2] = v75;
  v36[3] = v46;
  uint64_t v47 = v72;
  v36[4] = v73;
  v36[5] = v47;
  uint64_t v48 = v70;
  v36[6] = v71;
  v36[7] = v48;
  uint64_t v49 = v68;
  v36[8] = v69;
  v36[9] = v49;
  id v50 = (char *)v36 + *(int *)(v35 + 24);
  *((void *)v50 + 4) = 0;
  *(_OWORD *)id v50 = 0u;
  *((_OWORD *)v50 + 1) = 0u;
  v50[40] = -1;
  return result;
}

uint64_t sub_248003978@<X0>(uint64_t a1@<X8>)
{
  return RepairContext.Builder.build()(a1);
}

uint64_t sub_248003990()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 792, 7);
}

uint64_t sub_248003B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_248003BB0()
{
  unint64_t result = qword_26B13BEA0;
  if (!qword_26B13BEA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B13BEA0);
  }
  return result;
}

uint64_t sub_248003BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D6FF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_248003C58(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 160);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_248003F3C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_248003F74(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for RepairContext()
{
  uint64_t result = qword_2692D7020;
  if (!qword_2692D7020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_248003FF0()
{
  unint64_t result = qword_2692D7008;
  if (!qword_2692D7008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7008);
  }
  return result;
}

uint64_t sub_248004044(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_248004070(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_248004098@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_2480040C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SetupModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_UNKNOWN **sub_24800412C()
{
  return &protocol witness table for RepairContext.Builder;
}

void *initializeBufferWithCopyOfBuffer for RepairContext(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    uint64_t v20 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v206 = a2[1];
    *a1 = *a2;
    a1[1] = v206;
    uint64_t v204 = a2[3];
    a1[2] = a2[2];
    a1[3] = v204;
    uint64_t v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    uint64_t v7 = a2[7];
    a1[6] = a2[6];
    a1[7] = v7;
    uint64_t v8 = a2[9];
    a1[8] = a2[8];
    a1[9] = v8;
    uint64_t v181 = type metadata accessor for RepairModel();
    uint64_t v9 = *(int *)(v181 + 20);
    uint64_t v202 = a2;
    uint64_t v203 = a1;
    uint64_t v10 = (char *)a1 + v9;
    unint64_t v11 = (char *)a2 + v9;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v13 = *(void **)((char *)a2 + v9 + 8);
    uint64_t v12 = *(void **)((char *)a2 + v9 + 16);
    uint64_t v14 = *(void *)((char *)a2 + v9 + 24);
    uint64_t v15 = *(unsigned __int16 *)((char *)a2 + v9 + 36);
    uint64_t v16 = *((unsigned int *)v11 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FE4184(v13, v12, v14, v16 | (v15 << 32));
    *((void *)v10 + 1) = v13;
    *((void *)v10 + 2) = v12;
    *((void *)v10 + 3) = v14;
    *((_WORD *)v10 + 18) = v15;
    *((_DWORD *)v10 + 8) = v16;
    unsigned int v17 = v11[88];
    if (v17 <= 0xF9)
    {
      uint64_t v21 = *((void *)v11 + 5);
      uint64_t v22 = *((void *)v11 + 6);
      uint64_t v23 = *((void *)v11 + 7);
      uint64_t v24 = *((void *)v11 + 8);
      uint64_t v25 = *((void *)v11 + 9);
      uint64_t v26 = *((void *)v11 + 10);
      sub_247FA9804(v21, v22, v23, v24, v25, v26, v11[88]);
      *((void *)v10 + 5) = v21;
      *((void *)v10 + 6) = v22;
      *((void *)v10 + 7) = v23;
      *((void *)v10 + 8) = v24;
      *((void *)v10 + 9) = v25;
      *((void *)v10 + 10) = v26;
      v10[88] = v17;
    }
    else
    {
      long long v18 = *(_OWORD *)(v11 + 56);
      *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
      *(_OWORD *)(v10 + 56) = v18;
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
      v10[88] = v11[88];
    }
    v10[96] = v11[96];
    v10[97] = v11[97];
    uint64_t v27 = *((void *)v11 + 14);
    *((void *)v10 + 13) = *((void *)v11 + 13);
    *((void *)v10 + 14) = v27;
    uint64_t v28 = *((void *)v11 + 16);
    *((void *)v10 + 15) = *((void *)v11 + 15);
    *((void *)v10 + 16) = v28;
    *((void *)v10 + 17) = *((void *)v11 + 17);
    *((_WORD *)v10 + 72) = *((_WORD *)v11 + 72);
    uint64_t v29 = *((void *)v11 + 20);
    *((void *)v10 + 19) = *((void *)v11 + 19);
    *((void *)v10 + 20) = v29;
    uint64_t v30 = *((void *)v11 + 21);
    uint64_t v31 = *((void *)v11 + 22);
    uint64_t v32 = *((void *)v11 + 24);
    uint64_t v207 = *((void *)v11 + 23);
    uint64_t v33 = *((void *)v11 + 25);
    uint64_t v34 = *((void *)v11 + 26);
    unsigned int v35 = v11[216];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247FE41AC(v30, v31, v207, v32, v33, v34, v35);
    *((void *)v10 + 21) = v30;
    *((void *)v10 + 22) = v31;
    *((void *)v10 + 23) = v207;
    *((void *)v10 + 24) = v32;
    *((void *)v10 + 25) = v33;
    *((void *)v10 + 26) = v34;
    v10[216] = v35;
    uint64_t v36 = *((void *)v11 + 29);
    if (v36)
    {
      *((void *)v10 + 28) = *((void *)v11 + 28);
      *((void *)v10 + 29) = v36;
      uint64_t v37 = *((void *)v11 + 31);
      *((void *)v10 + 30) = *((void *)v11 + 30);
      *((void *)v10 + 31) = v37;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
    }
    else
    {
      long long v38 = *((_OWORD *)v11 + 15);
      *((_OWORD *)v10 + 14) = *((_OWORD *)v11 + 14);
      *((_OWORD *)v10 + 15) = v38;
    }
    uint64_t v39 = *((void *)v11 + 33);
    *((void *)v10 + 32) = *((void *)v11 + 32);
    *((void *)v10 + 33) = v39;
    uint64_t v40 = *((void *)v11 + 35);
    *((void *)v10 + 34) = *((void *)v11 + 34);
    *((void *)v10 + 35) = v40;
    uint64_t v41 = type metadata accessor for SetupModel();
    uint64_t v42 = *(int *)(v41 + 32);
    uint64_t v43 = &v10[v42];
    uint64_t v44 = &v11[v42];
    uint64_t v45 = type metadata accessor for IdMSAccount();
    uint64_t v180 = *(void *)(v45 - 8);
    uint64_t v46 = *(unsigned int (**)(char *, uint64_t, int *))(v180 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v184 = v46;
    uint64_t v205 = (int *)v45;
    uint64_t v185 = v41;
    uint64_t v208 = v43;
    if (v46(v44, 1, (int *)v45))
    {
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      uint64_t v48 = *((void *)v44 + 1);
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = v48;
      uint64_t v49 = *((void *)v44 + 3);
      *((void *)v43 + 2) = *((void *)v44 + 2);
      *((void *)v43 + 3) = v49;
      uint64_t v50 = *((void *)v44 + 5);
      *((void *)v43 + 4) = *((void *)v44 + 4);
      *((void *)v43 + 5) = v50;
      uint64_t v51 = *((void *)v44 + 7);
      *((void *)v43 + 6) = *((void *)v44 + 6);
      *((void *)v43 + 7) = v51;
      uint64_t v52 = *((void *)v44 + 9);
      *((void *)v208 + 8) = *((void *)v44 + 8);
      *((void *)v208 + 9) = v52;
      uint64_t v53 = *(int *)(v45 + 20);
      long long v198 = &v208[v53];
      long long v193 = &v44[v53];
      uint64_t v54 = sub_248174700();
      uint64_t v190 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v190(v198, v193, v54);
      uint64_t v55 = *(int *)(v45 + 24);
      uint64_t v56 = &v208[v55];
      uint64_t v57 = &v44[v55];
      uint64_t v58 = *(void *)v57;
      uint64_t v59 = *((void *)v57 + 1);
      uint64_t v60 = *((void *)v57 + 2);
      uint64_t v61 = *((void *)v57 + 3);
      uint64_t v62 = *((void *)v57 + 4);
      uint64_t v63 = *((void *)v57 + 5);
      uint64_t v188 = *((void *)v57 + 7);
      uint64_t v191 = *((void *)v57 + 6);
      uint64_t v194 = *((void *)v57 + 8);
      LOBYTE(v198) = v57[72];
      sub_247FABF8C(*(void *)v57, v59, v60, v61, v62, v63, v191, v188, v194, (char)v198);
      *(void *)uint64_t v56 = v58;
      *((void *)v56 + 1) = v59;
      *((void *)v56 + 2) = v60;
      *((void *)v56 + 3) = v61;
      *((void *)v56 + 4) = v62;
      *((void *)v56 + 5) = v63;
      uint64_t v43 = v208;
      *((void *)v56 + 6) = v191;
      *((void *)v56 + 7) = v188;
      *((void *)v56 + 8) = v194;
      v56[72] = (char)v198;
      *(void *)&v208[v205[7]] = *(void *)&v44[v205[7]];
      uint64_t v64 = *(void (**)(char *, void, uint64_t, int *))(v180 + 56);
      swift_bridgeObjectRetain();
      v64(v208, 0, 1, v205);
    }
    uint64_t v65 = v44;
    uint64_t v66 = (int *)type metadata accessor for AuthenticationModel();
    uint64_t v67 = v66[5];
    uint64_t v68 = &v43[v67];
    uint64_t v69 = &v44[v67];
    uint64_t v70 = *((void *)v69 + 1);
    uint64_t v183 = v10;
    if (v70)
    {
      *(void *)uint64_t v68 = *(void *)v69;
      *((void *)v68 + 1) = v70;
      uint64_t v71 = *((void *)v69 + 3);
      *((void *)v68 + 2) = *((void *)v69 + 2);
      *((void *)v68 + 3) = v71;
      uint64_t v72 = *((void *)v69 + 5);
      *((void *)v68 + 4) = *((void *)v69 + 4);
      *((void *)v68 + 5) = v72;
      uint64_t v73 = *((void *)v69 + 7);
      *((void *)v68 + 6) = *((void *)v69 + 6);
      *((void *)v68 + 7) = v73;
      uint64_t v74 = *((void *)v69 + 9);
      *((void *)v68 + 8) = *((void *)v69 + 8);
      *((void *)v68 + 9) = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v75 = *((_OWORD *)v69 + 3);
      *((_OWORD *)v68 + 2) = *((_OWORD *)v69 + 2);
      *((_OWORD *)v68 + 3) = v75;
      *((_OWORD *)v68 + 4) = *((_OWORD *)v69 + 4);
      long long v76 = *((_OWORD *)v69 + 1);
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      *((_OWORD *)v68 + 1) = v76;
    }
    v43[v66[6]] = *((unsigned char *)v65 + v66[6]);
    uint64_t v77 = v66[7];
    uint64_t v78 = &v43[v77];
    uint64_t v79 = (void *)((char *)v65 + v77);
    uint64_t v80 = v79[1];
    *(void *)uint64_t v78 = *v79;
    *((void *)v78 + 1) = v80;
    *(void *)&v43[v66[8]] = *(void *)((char *)v65 + v66[8]);
    v43[v66[9]] = *((unsigned char *)v65 + v66[9]);
    uint64_t v81 = v66[10];
    char v82 = &v43[v81];
    uint64_t v83 = (char *)v65 + v81;
    uint64_t v84 = (void *)*((void *)v83 + 1);
    uint64_t v85 = (void *)*((void *)v83 + 2);
    uint64_t v189 = (void *)*((void *)v83 + 3);
    long long v192 = *(void **)v83;
    uint64_t v86 = (void *)*((void *)v83 + 4);
    uint64_t v87 = (void *)*((void *)v83 + 5);
    uint64_t v195 = v66;
    long long v199 = v65;
    unint64_t v88 = (void *)*((void *)v83 + 8);
    long long v186 = (void *)*((void *)v83 + 7);
    uint64_t v187 = *((void *)v83 + 6);
    char v89 = (void *)*((void *)v83 + 9);
    char v90 = v83[80];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247F986A0(v192, v84, v85, v189, v86, v87, v187, v186, v88, v89, v90);
    *(void *)char v82 = v192;
    *((void *)v82 + 1) = v84;
    *((void *)v82 + 2) = v85;
    *((void *)v82 + 3) = v189;
    *((void *)v82 + 4) = v86;
    *((void *)v82 + 5) = v87;
    *((void *)v82 + 6) = v187;
    *((void *)v82 + 7) = v186;
    *((void *)v82 + 8) = v88;
    *((void *)v82 + 9) = v89;
    v82[80] = v90;
    uint64_t v91 = v195[11];
    long long v92 = &v208[v91];
    uint64_t v93 = (void *)((char *)v199 + v91);
    if (*v93)
    {
      uint64_t v94 = v93[1];
      *(void *)long long v92 = *v93;
      *((void *)v92 + 1) = v94;
      swift_retain();
    }
    else
    {
      *(_OWORD *)long long v92 = *(_OWORD *)v93;
    }
    uint64_t v95 = *(int *)(v185 + 36);
    uint64_t v96 = &v183[v95];
    uint64_t v97 = &v11[v95];
    if (v184(&v11[v95], 1, v205))
    {
      uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
      memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      uint64_t v99 = *((void *)v97 + 1);
      *(void *)uint64_t v96 = *(void *)v97;
      *((void *)v96 + 1) = v99;
      uint64_t v100 = *((void *)v97 + 3);
      *((void *)v96 + 2) = *((void *)v97 + 2);
      *((void *)v96 + 3) = v100;
      uint64_t v101 = *((void *)v97 + 5);
      *((void *)v96 + 4) = *((void *)v97 + 4);
      *((void *)v96 + 5) = v101;
      uint64_t v102 = *((void *)v97 + 7);
      *((void *)v96 + 6) = *((void *)v97 + 6);
      *((void *)v96 + 7) = v102;
      uint64_t v103 = *((void *)v97 + 9);
      *((void *)v96 + 8) = *((void *)v97 + 8);
      *((void *)v96 + 9) = v103;
      uint64_t v104 = v205[5];
      uint64_t v209 = &v96[v104];
      uint64_t v200 = &v97[v104];
      uint64_t v105 = sub_248174700();
      uint64_t v196 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v196(v209, v200, v105);
      uint64_t v106 = v205[6];
      long long v107 = &v96[v106];
      long long v108 = &v97[v106];
      uint64_t v109 = *((void *)v108 + 1);
      uint64_t v197 = *(void *)v108;
      uint64_t v110 = *((void *)v108 + 2);
      uint64_t v111 = *((void *)v108 + 3);
      uint64_t v112 = *((void *)v108 + 4);
      uint64_t v113 = *((void *)v108 + 5);
      uint64_t v114 = *((void *)v108 + 6);
      uint64_t v115 = *((void *)v108 + 7);
      uint64_t v201 = *((void *)v108 + 8);
      LOBYTE(v209) = v108[72];
      sub_247FABF8C(*(void *)v108, v109, v110, v111, v112, v113, v114, v115, v201, (char)v209);
      *(void *)long long v107 = v197;
      *((void *)v107 + 1) = v109;
      *((void *)v107 + 2) = v110;
      *((void *)v107 + 3) = v111;
      *((void *)v107 + 4) = v112;
      *((void *)v107 + 5) = v113;
      *((void *)v107 + 6) = v114;
      *((void *)v107 + 7) = v115;
      *((void *)v107 + 8) = v201;
      v107[72] = (char)v209;
      *(void *)&v96[v205[7]] = *(void *)&v97[v205[7]];
      uint64_t v116 = *(void (**)(char *, void, uint64_t, int *))(v180 + 56);
      swift_bridgeObjectRetain();
      v116(v96, 0, 1, v205);
    }
    uint64_t v117 = (int *)type metadata accessor for SignInModel();
    uint64_t v118 = v117[5];
    uint64_t v119 = &v96[v118];
    long long v120 = &v97[v118];
    uint64_t v121 = *((void *)v120 + 1);
    if (v121)
    {
      *(void *)uint64_t v119 = *(void *)v120;
      *((void *)v119 + 1) = v121;
      uint64_t v122 = *((void *)v120 + 3);
      *((void *)v119 + 2) = *((void *)v120 + 2);
      *((void *)v119 + 3) = v122;
      uint64_t v123 = *((void *)v120 + 5);
      *((void *)v119 + 4) = *((void *)v120 + 4);
      *((void *)v119 + 5) = v123;
      uint64_t v124 = *((void *)v120 + 7);
      *((void *)v119 + 6) = *((void *)v120 + 6);
      *((void *)v119 + 7) = v124;
      uint64_t v125 = *((void *)v120 + 9);
      *((void *)v119 + 8) = *((void *)v120 + 8);
      *((void *)v119 + 9) = v125;
      uint64_t v126 = (uint64_t *)(v120 + 80);
      unint64_t v127 = *((void *)v120 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v127 >> 60 == 15)
      {
        *((_OWORD *)v119 + 5) = *(_OWORD *)v126;
      }
      else
      {
        uint64_t v131 = *v126;
        sub_247FB6C20(*v126, v127);
        *((void *)v119 + 10) = v131;
        *((void *)v119 + 11) = v127;
      }
    }
    else
    {
      long long v128 = *((_OWORD *)v120 + 3);
      *((_OWORD *)v119 + 2) = *((_OWORD *)v120 + 2);
      *((_OWORD *)v119 + 3) = v128;
      long long v129 = *((_OWORD *)v120 + 5);
      *((_OWORD *)v119 + 4) = *((_OWORD *)v120 + 4);
      *((_OWORD *)v119 + 5) = v129;
      long long v130 = *((_OWORD *)v120 + 1);
      *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
      *((_OWORD *)v119 + 1) = v130;
    }
    *(void *)&v96[v117[6]] = *(void *)&v97[v117[6]];
    *(void *)&v96[v117[7]] = *(void *)&v97[v117[7]];
    v96[v117[8]] = v97[v117[8]];
    v96[v117[9]] = v97[v117[9]];
    uint64_t v132 = v117[10];
    uint64_t v133 = &v96[v132];
    uint64_t v134 = &v97[v132];
    uint64_t v135 = *(void *)&v97[v132 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v135)
    {
      *(void *)uint64_t v133 = *(void *)v134;
      *((void *)v133 + 1) = v135;
      uint64_t v136 = *((void *)v134 + 2);
      uint64_t v137 = *((void *)v134 + 3);
      *((void *)v133 + 2) = v136;
      *((void *)v133 + 3) = v137;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v138 = *((_OWORD *)v134 + 1);
      *(_OWORD *)uint64_t v133 = *(_OWORD *)v134;
      *((_OWORD *)v133 + 1) = v138;
    }
    uint64_t v139 = v117[11];
    uint64_t v140 = &v96[v139];
    long long v141 = &v97[v139];
    uint64_t v142 = *((void *)v141 + 1);
    *(void *)uint64_t v140 = *(void *)v141;
    *((void *)v140 + 1) = v142;
    uint64_t v143 = v117[12];
    uint64_t v144 = *(void **)&v97[v143];
    *(void *)&v96[v143] = v144;
    uint64_t v145 = v117[13];
    uint64_t v146 = &v96[v145];
    uint64_t v147 = &v97[v145];
    uint64_t v148 = *(void *)v147;
    uint64_t v149 = *((void *)v147 + 1);
    char v150 = v147[16];
    swift_bridgeObjectRetain();
    id v151 = v144;
    sub_247FE42A8(v148, v149, v150);
    *(void *)uint64_t v146 = v148;
    *((void *)v146 + 1) = v149;
    v146[16] = v150;
    uint64_t v152 = v117[14];
    uint64_t v153 = &v96[v152];
    uint64_t v154 = &v97[v152];
    uint64_t v155 = *((void *)v154 + 1);
    *(void *)uint64_t v153 = *(void *)v154;
    *((void *)v153 + 1) = v155;
    v96[v117[15]] = v97[v117[15]];
    uint64_t v156 = v117[16];
    long long v157 = &v96[v156];
    long long v158 = &v97[v156];
    unint64_t v159 = *(void *)&v97[v156 + 8];
    swift_bridgeObjectRetain();
    if (v159 >= 3)
    {
      *(void *)long long v157 = *(void *)v158;
      *((void *)v157 + 1) = v159;
      uint64_t v161 = *((void *)v158 + 3);
      *((void *)v157 + 2) = *((void *)v158 + 2);
      *((void *)v157 + 3) = v161;
      v157[32] = v158[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v160 = *((_OWORD *)v158 + 1);
      *(_OWORD *)long long v157 = *(_OWORD *)v158;
      *((_OWORD *)v157 + 1) = v160;
      v157[32] = v158[32];
    }
    uint64_t v162 = v202;
    uint64_t v20 = v203;
    uint64_t v163 = *(int *)(v181 + 24);
    long long v164 = (char *)v203 + v163;
    uint64_t v165 = (char *)v202 + v163;
    unsigned int v166 = v165[40];
    if (v166 <= 0xFA)
    {
      uint64_t v168 = *(void *)v165;
      uint64_t v169 = *((void *)v165 + 1);
      uint64_t v170 = *((void *)v165 + 2);
      uint64_t v171 = *((void *)v165 + 3);
      uint64_t v172 = *((void *)v165 + 4);
      sub_247FE42BC(*(void *)v165, v169, v170, v171, v172, v165[40]);
      *(void *)long long v164 = v168;
      *((void *)v164 + 1) = v169;
      uint64_t v162 = v202;
      uint64_t v20 = v203;
      *((void *)v164 + 2) = v170;
      *((void *)v164 + 3) = v171;
      *((void *)v164 + 4) = v172;
      v164[40] = v166;
    }
    else
    {
      long long v167 = *((_OWORD *)v165 + 1);
      *(_OWORD *)long long v164 = *(_OWORD *)v165;
      *((_OWORD *)v164 + 1) = v167;
      *(_OWORD *)(v164 + 25) = *(_OWORD *)(v165 + 25);
    }
    uint64_t v173 = *(int *)(a3 + 20);
    uint64_t v174 = (uint64_t)v20 + v173;
    uint64_t v175 = (uint64_t)v162 + v173;
    uint64_t v176 = *(void *)((char *)v162 + v173 + 24);
    if (v176)
    {
      uint64_t v177 = *(void *)(v175 + 32);
      *(void *)(v174 + 24) = v176;
      *(void *)(v174 + 32) = v177;
      (**(void (***)(void))(v176 - 8))();
    }
    else
    {
      long long v178 = *(_OWORD *)(v175 + 16);
      *(_OWORD *)uint64_t v174 = *(_OWORD *)v175;
      *(_OWORD *)(v174 + 16) = v178;
      *(void *)(v174 + 32) = *(void *)(v175 + 32);
    }
  }
  return v20;
}

uint64_t destroy for RepairContext(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for RepairModel();
  uint64_t v4 = a1 + *(int *)(v3 + 20);
  sub_247FE51A0(*(void **)(v4 + 8), *(id *)(v4 + 16), *(void *)(v4 + 24), *(unsigned int *)(v4 + 32) | ((unint64_t)*(unsigned __int16 *)(v4 + 36) << 32));
  unsigned int v5 = *(unsigned __int8 *)(v4 + 88);
  if (v5 <= 0xF9) {
    sub_247FA98EC(*(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void *)(v4 + 72), *(void *)(v4 + 80), v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FE51C8(*(void *)(v4 + 168), *(void *)(v4 + 176), *(void *)(v4 + 184), *(void *)(v4 + 192), *(void *)(v4 + 200), *(void *)(v4 + 208), *(unsigned __int8 *)(v4 + 216));
  if (*(void *)(v4 + 232))
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for SetupModel();
  uint64_t v7 = v4 + *(int *)(v6 + 32);
  uint64_t v8 = type metadata accessor for IdMSAccount();
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + *(int *)(v8 + 20);
    uint64_t v11 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = v7 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void *)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(unsigned char *)(v12 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = (int *)type metadata accessor for AuthenticationModel();
  if (*(void *)(v7 + v13[5] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7 + v13[10];
  sub_247F98958(*(void **)v14, *(void **)(v14 + 8), *(void **)(v14 + 16), *(void **)(v14 + 24), *(void *)(v14 + 32), *(void **)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(void **)(v14 + 64), *(void **)(v14 + 72), *(unsigned char *)(v14 + 80));
  if (*(void *)(v7 + v13[11])) {
    swift_release();
  }
  uint64_t v15 = v4 + *(int *)(v6 + 36);
  if (!v9(v15, 1, v8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v15 + *(int *)(v8 + 20);
    uint64_t v17 = sub_248174700();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    uint64_t v18 = v15 + *(int *)(v8 + 24);
    sub_247FAC1EC(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(void *)(v18 + 64), *(unsigned char *)(v18 + 72));
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = (int *)type metadata accessor for SignInModel();
  uint64_t v20 = (void *)(v15 + v19[5]);
  if (v20[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = v20[11];
    if (v21 >> 60 != 15) {
      sub_247FB6CCC(v20[10], v21);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[10] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  sub_247FE52C4(*(void *)(v15 + v19[13]), *(void *)(v15 + v19[13] + 8), *(unsigned char *)(v15 + v19[13] + 16));
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + v19[16] + 8) >= 3uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = a1 + *(int *)(v3 + 24);
  unsigned int v23 = *(unsigned __int8 *)(v22 + 40);
  if (v23 <= 0xFA) {
    sub_247FE0600(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(void *)(v22 + 24), *(void *)(v22 + 32), v23);
  }
  uint64_t result = a1 + *(int *)(a2 + 20);
  if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

void *initializeWithCopy for RepairContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v177 = type metadata accessor for RepairModel();
  uint64_t v10 = *(int *)(v177 + 20);
  uint64_t v179 = a2;
  uint64_t v180 = a1;
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v14 = *(void **)((char *)a2 + v10 + 8);
  uint64_t v13 = *(void **)((char *)a2 + v10 + 16);
  uint64_t v15 = *(void *)((char *)a2 + v10 + 24);
  uint64_t v16 = *(unsigned __int16 *)((char *)a2 + v10 + 36);
  uint64_t v17 = *((unsigned int *)v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE4184(v14, v13, v15, v17 | (v16 << 32));
  *((void *)v11 + 1) = v14;
  *((void *)v11 + 2) = v13;
  *((void *)v11 + 3) = v15;
  *((_WORD *)v11 + 18) = v16;
  *((_DWORD *)v11 + 8) = v17;
  unsigned int v18 = v12[88];
  if (v18 <= 0xF9)
  {
    uint64_t v20 = *((void *)v12 + 5);
    uint64_t v21 = *((void *)v12 + 6);
    uint64_t v22 = *((void *)v12 + 7);
    uint64_t v23 = *((void *)v12 + 8);
    uint64_t v24 = *((void *)v12 + 9);
    uint64_t v25 = *((void *)v12 + 10);
    sub_247FA9804(v20, v21, v22, v23, v24, v25, v12[88]);
    *((void *)v11 + 5) = v20;
    *((void *)v11 + 6) = v21;
    *((void *)v11 + 7) = v22;
    *((void *)v11 + 8) = v23;
    *((void *)v11 + 9) = v24;
    *((void *)v11 + 10) = v25;
    v11[88] = v18;
  }
  else
  {
    long long v19 = *(_OWORD *)(v12 + 56);
    *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
    *(_OWORD *)(v11 + 56) = v19;
    *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
    v11[88] = v12[88];
  }
  v11[96] = v12[96];
  v11[97] = v12[97];
  uint64_t v26 = *((void *)v12 + 14);
  *((void *)v11 + 13) = *((void *)v12 + 13);
  *((void *)v11 + 14) = v26;
  uint64_t v27 = *((void *)v12 + 16);
  *((void *)v11 + 15) = *((void *)v12 + 15);
  *((void *)v11 + 16) = v27;
  *((void *)v11 + 17) = *((void *)v12 + 17);
  *((_WORD *)v11 + 72) = *((_WORD *)v12 + 72);
  uint64_t v28 = *((void *)v12 + 20);
  *((void *)v11 + 19) = *((void *)v12 + 19);
  *((void *)v11 + 20) = v28;
  uint64_t v29 = *((void *)v12 + 21);
  uint64_t v30 = *((void *)v12 + 22);
  uint64_t v31 = *((void *)v12 + 24);
  uint64_t v201 = *((void *)v12 + 23);
  uint64_t v33 = *((void *)v12 + 25);
  uint64_t v32 = *((void *)v12 + 26);
  unsigned int v34 = v12[216];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FE41AC(v29, v30, v201, v31, v33, v32, v34);
  *((void *)v11 + 21) = v29;
  *((void *)v11 + 22) = v30;
  *((void *)v11 + 23) = v201;
  *((void *)v11 + 24) = v31;
  *((void *)v11 + 25) = v33;
  *((void *)v11 + 26) = v32;
  v11[216] = v34;
  uint64_t v35 = *((void *)v12 + 29);
  if (v35)
  {
    *((void *)v11 + 28) = *((void *)v12 + 28);
    *((void *)v11 + 29) = v35;
    uint64_t v36 = *((void *)v12 + 31);
    *((void *)v11 + 30) = *((void *)v12 + 30);
    *((void *)v11 + 31) = v36;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v37 = *((_OWORD *)v12 + 15);
    *((_OWORD *)v11 + 14) = *((_OWORD *)v12 + 14);
    *((_OWORD *)v11 + 15) = v37;
  }
  uint64_t v38 = *((void *)v12 + 33);
  *((void *)v11 + 32) = *((void *)v12 + 32);
  *((void *)v11 + 33) = v38;
  uint64_t v39 = *((void *)v12 + 35);
  *((void *)v11 + 34) = *((void *)v12 + 34);
  *((void *)v11 + 35) = v39;
  uint64_t v192 = type metadata accessor for SetupModel();
  uint64_t v40 = *(int *)(v192 + 32);
  uint64_t v41 = &v11[v40];
  uint64_t v42 = &v12[v40];
  uint64_t v43 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v176 = *((void *)v43 - 1);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, int *))(v176 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v191 = v44;
  long long v193 = v43;
  uint64_t v194 = v41;
  uint64_t v202 = v42;
  if (v44(v42, 1, v43))
  {
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v46;
    uint64_t v47 = *((void *)v42 + 3);
    *((void *)v41 + 2) = *((void *)v42 + 2);
    *((void *)v41 + 3) = v47;
    uint64_t v48 = *((void *)v42 + 5);
    *((void *)v41 + 4) = *((void *)v42 + 4);
    *((void *)v41 + 5) = v48;
    uint64_t v49 = *((void *)v42 + 7);
    *((void *)v41 + 6) = *((void *)v42 + 6);
    *((void *)v41 + 7) = v49;
    uint64_t v50 = *((void *)v42 + 8);
    uint64_t v51 = *((void *)v42 + 9);
    *((void *)v41 + 8) = v50;
    *((void *)v41 + 9) = v51;
    uint64_t v52 = v43[5];
    uint64_t v197 = &v41[v52];
    uint64_t v188 = &v202[v52];
    uint64_t v53 = sub_248174700();
    uint64_t v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v185(v197, v188, v53);
    uint64_t v54 = v43[6];
    uint64_t v55 = &v41[v54];
    uint64_t v56 = &v202[v54];
    uint64_t v57 = *(void *)v56;
    uint64_t v58 = *((void *)v56 + 1);
    uint64_t v59 = *((void *)v56 + 2);
    uint64_t v60 = *((void *)v56 + 3);
    uint64_t v61 = *((void *)v56 + 4);
    uint64_t v62 = *((void *)v56 + 5);
    uint64_t v183 = *((void *)v56 + 7);
    uint64_t v186 = *((void *)v56 + 6);
    uint64_t v189 = *((void *)v56 + 8);
    LOBYTE(v197) = v56[72];
    sub_247FABF8C(*(void *)v56, v58, v59, v60, v61, v62, v186, v183, v189, (char)v197);
    *(void *)uint64_t v55 = v57;
    *((void *)v55 + 1) = v58;
    *((void *)v55 + 2) = v59;
    *((void *)v55 + 3) = v60;
    uint64_t v41 = v194;
    *((void *)v55 + 4) = v61;
    *((void *)v55 + 5) = v62;
    uint64_t v42 = v202;
    *((void *)v55 + 6) = v186;
    *((void *)v55 + 7) = v183;
    *((void *)v55 + 8) = v189;
    v55[72] = (char)v197;
    *(void *)&v194[v43[7]] = *(void *)&v202[v43[7]];
    uint64_t v63 = *(void (**)(char *, void, uint64_t, int *))(v176 + 56);
    swift_bridgeObjectRetain();
    v63(v194, 0, 1, v43);
  }
  uint64_t v64 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v65 = v64[5];
  uint64_t v66 = &v41[v65];
  uint64_t v67 = &v42[v65];
  uint64_t v68 = *((void *)v67 + 1);
  if (v68)
  {
    *(void *)uint64_t v66 = *(void *)v67;
    *((void *)v66 + 1) = v68;
    uint64_t v69 = *((void *)v67 + 3);
    *((void *)v66 + 2) = *((void *)v67 + 2);
    *((void *)v66 + 3) = v69;
    uint64_t v70 = *((void *)v67 + 5);
    *((void *)v66 + 4) = *((void *)v67 + 4);
    *((void *)v66 + 5) = v70;
    uint64_t v71 = *((void *)v67 + 7);
    *((void *)v66 + 6) = *((void *)v67 + 6);
    *((void *)v66 + 7) = v71;
    uint64_t v72 = *((void *)v67 + 9);
    *((void *)v66 + 8) = *((void *)v67 + 8);
    *((void *)v66 + 9) = v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v73 = *((_OWORD *)v67 + 3);
    *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
    *((_OWORD *)v66 + 3) = v73;
    *((_OWORD *)v66 + 4) = *((_OWORD *)v67 + 4);
    long long v74 = *((_OWORD *)v67 + 1);
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    *((_OWORD *)v66 + 1) = v74;
  }
  v41[v64[6]] = v42[v64[6]];
  uint64_t v75 = v64[7];
  long long v76 = &v41[v75];
  uint64_t v77 = &v42[v75];
  uint64_t v78 = *((void *)v77 + 1);
  *(void *)long long v76 = *(void *)v77;
  *((void *)v76 + 1) = v78;
  *(void *)&v41[v64[8]] = *(void *)&v42[v64[8]];
  v41[v64[9]] = v42[v64[9]];
  uint64_t v79 = v64[10];
  uint64_t v80 = &v41[v79];
  uint64_t v81 = &v42[v79];
  char v82 = (void *)*((void *)v81 + 1);
  uint64_t v187 = *(void **)v81;
  uint64_t v190 = v64;
  uint64_t v83 = (void *)*((void *)v81 + 2);
  uint64_t v84 = (void *)*((void *)v81 + 3);
  uint64_t v184 = (void *)*((void *)v81 + 4);
  long long v198 = (void *)*((void *)v81 + 5);
  uint64_t v85 = (void *)*((void *)v81 + 8);
  uint64_t v181 = (void *)*((void *)v81 + 7);
  uint64_t v182 = *((void *)v81 + 6);
  uint64_t v86 = (void *)*((void *)v81 + 9);
  char v87 = v81[80];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247F986A0(v187, v82, v83, v84, v184, v198, v182, v181, v85, v86, v87);
  *(void *)uint64_t v80 = v187;
  *((void *)v80 + 1) = v82;
  *((void *)v80 + 2) = v83;
  *((void *)v80 + 3) = v84;
  *((void *)v80 + 4) = v184;
  *((void *)v80 + 5) = v198;
  *((void *)v80 + 6) = v182;
  *((void *)v80 + 7) = v181;
  *((void *)v80 + 8) = v85;
  *((void *)v80 + 9) = v86;
  v80[80] = v87;
  uint64_t v88 = v190[11];
  char v89 = &v194[v88];
  char v90 = &v202[v88];
  if (*(void *)v90)
  {
    uint64_t v91 = *((void *)v90 + 1);
    *(void *)char v89 = *(void *)v90;
    *((void *)v89 + 1) = v91;
    swift_retain();
  }
  else
  {
    *(_OWORD *)char v89 = *(_OWORD *)v90;
  }
  uint64_t v92 = *(int *)(v192 + 36);
  uint64_t v93 = &v11[v92];
  uint64_t v94 = &v12[v92];
  if (v191(&v12[v92], 1, v193))
  {
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    uint64_t v96 = *((void *)v94 + 1);
    *(void *)uint64_t v93 = *(void *)v94;
    *((void *)v93 + 1) = v96;
    uint64_t v97 = *((void *)v94 + 3);
    *((void *)v93 + 2) = *((void *)v94 + 2);
    *((void *)v93 + 3) = v97;
    uint64_t v98 = *((void *)v94 + 5);
    *((void *)v93 + 4) = *((void *)v94 + 4);
    *((void *)v93 + 5) = v98;
    uint64_t v99 = *((void *)v94 + 7);
    *((void *)v93 + 6) = *((void *)v94 + 6);
    *((void *)v93 + 7) = v99;
    uint64_t v100 = *((void *)v94 + 9);
    *((void *)v93 + 8) = *((void *)v94 + 8);
    *((void *)v93 + 9) = v100;
    uint64_t v101 = v193[5];
    long long v199 = &v94[v101];
    uint64_t v203 = &v93[v101];
    uint64_t v102 = sub_248174700();
    uint64_t v195 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v195(v203, v199, v102);
    uint64_t v103 = v193[6];
    uint64_t v104 = &v93[v103];
    uint64_t v105 = &v94[v103];
    uint64_t v106 = *((void *)v105 + 1);
    uint64_t v107 = *((void *)v105 + 2);
    uint64_t v108 = *((void *)v105 + 3);
    uint64_t v109 = *((void *)v105 + 4);
    uint64_t v110 = *((void *)v105 + 5);
    uint64_t v111 = *((void *)v105 + 6);
    uint64_t v112 = *((void *)v105 + 7);
    uint64_t v196 = *(void *)v105;
    uint64_t v200 = *((void *)v105 + 8);
    LOBYTE(v203) = v105[72];
    sub_247FABF8C(*(void *)v105, v106, v107, v108, v109, v110, v111, v112, v200, (char)v203);
    *(void *)uint64_t v104 = v196;
    *((void *)v104 + 1) = v106;
    *((void *)v104 + 2) = v107;
    *((void *)v104 + 3) = v108;
    *((void *)v104 + 4) = v109;
    *((void *)v104 + 5) = v110;
    *((void *)v104 + 6) = v111;
    *((void *)v104 + 7) = v112;
    *((void *)v104 + 8) = v200;
    v104[72] = (char)v203;
    *(void *)&v93[v193[7]] = *(void *)&v94[v193[7]];
    uint64_t v113 = *(void (**)(char *, void, uint64_t, int *))(v176 + 56);
    swift_bridgeObjectRetain();
    v113(v93, 0, 1, v193);
  }
  uint64_t v114 = (int *)type metadata accessor for SignInModel();
  uint64_t v115 = v114[5];
  uint64_t v116 = &v93[v115];
  uint64_t v117 = &v94[v115];
  uint64_t v118 = *((void *)v117 + 1);
  if (v118)
  {
    *(void *)uint64_t v116 = *(void *)v117;
    *((void *)v116 + 1) = v118;
    uint64_t v119 = *((void *)v117 + 3);
    *((void *)v116 + 2) = *((void *)v117 + 2);
    *((void *)v116 + 3) = v119;
    uint64_t v120 = *((void *)v117 + 5);
    *((void *)v116 + 4) = *((void *)v117 + 4);
    *((void *)v116 + 5) = v120;
    uint64_t v121 = *((void *)v117 + 7);
    *((void *)v116 + 6) = *((void *)v117 + 6);
    *((void *)v116 + 7) = v121;
    uint64_t v122 = *((void *)v117 + 9);
    *((void *)v116 + 8) = *((void *)v117 + 8);
    *((void *)v116 + 9) = v122;
    uint64_t v123 = (uint64_t *)(v117 + 80);
    unint64_t v124 = *((void *)v117 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v124 >> 60 == 15)
    {
      *((_OWORD *)v116 + 5) = *(_OWORD *)v123;
    }
    else
    {
      uint64_t v128 = *v123;
      sub_247FB6C20(*v123, v124);
      *((void *)v116 + 10) = v128;
      *((void *)v116 + 11) = v124;
    }
  }
  else
  {
    long long v125 = *((_OWORD *)v117 + 3);
    *((_OWORD *)v116 + 2) = *((_OWORD *)v117 + 2);
    *((_OWORD *)v116 + 3) = v125;
    long long v126 = *((_OWORD *)v117 + 5);
    *((_OWORD *)v116 + 4) = *((_OWORD *)v117 + 4);
    *((_OWORD *)v116 + 5) = v126;
    long long v127 = *((_OWORD *)v117 + 1);
    *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
    *((_OWORD *)v116 + 1) = v127;
  }
  *(void *)&v93[v114[6]] = *(void *)&v94[v114[6]];
  *(void *)&v93[v114[7]] = *(void *)&v94[v114[7]];
  v93[v114[8]] = v94[v114[8]];
  v93[v114[9]] = v94[v114[9]];
  uint64_t v129 = v114[10];
  long long v130 = &v93[v129];
  uint64_t v131 = &v94[v129];
  uint64_t v132 = *(void *)&v94[v129 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v132)
  {
    *(void *)long long v130 = *(void *)v131;
    *((void *)v130 + 1) = v132;
    uint64_t v133 = *((void *)v131 + 2);
    uint64_t v134 = *((void *)v131 + 3);
    *((void *)v130 + 2) = v133;
    *((void *)v130 + 3) = v134;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v135 = *((_OWORD *)v131 + 1);
    *(_OWORD *)long long v130 = *(_OWORD *)v131;
    *((_OWORD *)v130 + 1) = v135;
  }
  uint64_t v136 = v114[11];
  uint64_t v137 = &v93[v136];
  long long v138 = &v94[v136];
  uint64_t v139 = *((void *)v138 + 1);
  *(void *)uint64_t v137 = *(void *)v138;
  *((void *)v137 + 1) = v139;
  uint64_t v140 = v114[12];
  long long v141 = *(void **)&v94[v140];
  *(void *)&v93[v140] = v141;
  uint64_t v142 = v114[13];
  uint64_t v143 = &v93[v142];
  uint64_t v144 = &v94[v142];
  uint64_t v145 = *(void *)v144;
  uint64_t v146 = *((void *)v144 + 1);
  char v147 = v144[16];
  swift_bridgeObjectRetain();
  id v148 = v141;
  sub_247FE42A8(v145, v146, v147);
  *(void *)uint64_t v143 = v145;
  *((void *)v143 + 1) = v146;
  v143[16] = v147;
  uint64_t v149 = v114[14];
  char v150 = &v93[v149];
  id v151 = &v94[v149];
  uint64_t v152 = *((void *)v151 + 1);
  *(void *)char v150 = *(void *)v151;
  *((void *)v150 + 1) = v152;
  v93[v114[15]] = v94[v114[15]];
  uint64_t v153 = v114[16];
  uint64_t v154 = &v93[v153];
  uint64_t v155 = &v94[v153];
  unint64_t v156 = *(void *)&v94[v153 + 8];
  swift_bridgeObjectRetain();
  if (v156 >= 3)
  {
    *(void *)uint64_t v154 = *(void *)v155;
    *((void *)v154 + 1) = v156;
    uint64_t v158 = *((void *)v155 + 3);
    *((void *)v154 + 2) = *((void *)v155 + 2);
    *((void *)v154 + 3) = v158;
    v154[32] = v155[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v157 = *((_OWORD *)v155 + 1);
    *(_OWORD *)uint64_t v154 = *(_OWORD *)v155;
    *((_OWORD *)v154 + 1) = v157;
    v154[32] = v155[32];
  }
  uint64_t v159 = *(int *)(v177 + 24);
  long long v160 = (char *)v180 + v159;
  uint64_t v161 = (char *)v179 + v159;
  unsigned int v162 = v161[40];
  if (v162 <= 0xFA)
  {
    uint64_t v164 = *(void *)v161;
    uint64_t v165 = *((void *)v161 + 1);
    uint64_t v166 = *((void *)v161 + 2);
    uint64_t v167 = *((void *)v161 + 3);
    uint64_t v168 = *((void *)v161 + 4);
    sub_247FE42BC(*(void *)v161, v165, v166, v167, v168, v161[40]);
    *(void *)long long v160 = v164;
    *((void *)v160 + 1) = v165;
    *((void *)v160 + 2) = v166;
    *((void *)v160 + 3) = v167;
    *((void *)v160 + 4) = v168;
    v160[40] = v162;
  }
  else
  {
    long long v163 = *((_OWORD *)v161 + 1);
    *(_OWORD *)long long v160 = *(_OWORD *)v161;
    *((_OWORD *)v160 + 1) = v163;
    *(_OWORD *)(v160 + 25) = *(_OWORD *)(v161 + 25);
  }
  uint64_t v169 = *(int *)(a3 + 20);
  uint64_t v170 = (char *)v180 + v169;
  uint64_t v171 = (char *)v179 + v169;
  uint64_t v172 = *(void *)((char *)v179 + v169 + 24);
  if (v172)
  {
    uint64_t v173 = *((void *)v171 + 4);
    *((void *)v170 + 3) = v172;
    *((void *)v170 + 4) = v173;
    (**(void (***)(void))(v172 - 8))();
  }
  else
  {
    long long v174 = *((_OWORD *)v171 + 1);
    *(_OWORD *)uint64_t v170 = *(_OWORD *)v171;
    *((_OWORD *)v170 + 1) = v174;
    *((void *)v170 + 4) = *((void *)v171 + 4);
  }
  return v180;
}

void *assignWithCopy for RepairContext(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v288 = type metadata accessor for RepairModel();
  uint64_t v5 = *(int *)(v288 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  *((unsigned char *)a1 + v5) = *((unsigned char *)a2 + v5);
  uint64_t v8 = *(void **)((char *)a2 + v5 + 8);
  uint64_t v9 = *(void **)((char *)a2 + v5 + 16);
  uint64_t v10 = *(void *)((char *)a2 + v5 + 24);
  uint64_t v11 = *(unsigned __int16 *)((char *)a2 + v5 + 36);
  uint64_t v12 = *(unsigned int *)((char *)a2 + v5 + 32);
  sub_247FE4184(v8, v9, v10, v12 | (v11 << 32));
  uint64_t v13 = (void *)*((void *)v6 + 1);
  uint64_t v14 = (void *)*((void *)v6 + 2);
  uint64_t v15 = *((void *)v6 + 3);
  unint64_t v16 = *((unsigned int *)v6 + 8) | ((unint64_t)*((unsigned __int16 *)v6 + 18) << 32);
  *((void *)v6 + 1) = v8;
  *((void *)v6 + 2) = v9;
  *((void *)v6 + 3) = v10;
  *((_DWORD *)v6 + 8) = v12;
  uint64_t v17 = v7;
  *((_WORD *)v6 + 18) = v11;
  sub_247FE51A0(v13, v14, v15, v16);
  unsigned int v18 = v6 + 40;
  long long v19 = (long long *)(v7 + 40);
  unsigned int v20 = v7[88];
  uint64_t v290 = a1;
  v307 = a2;
  if (v6[88] <= 0xF9u)
  {
    if (v20 <= 0xF9)
    {
      uint64_t v33 = *((void *)v7 + 5);
      uint64_t v34 = *((void *)v7 + 6);
      uint64_t v35 = *((void *)v7 + 7);
      uint64_t v36 = *((void *)v7 + 8);
      uint64_t v37 = *((void *)v7 + 9);
      uint64_t v38 = *((void *)v17 + 10);
      sub_247FA9804(*((void *)v17 + 5), *((void *)v17 + 6), *((void *)v17 + 7), *((void *)v17 + 8), *((void *)v17 + 9), v38, v20);
      uint64_t v39 = *((void *)v6 + 5);
      uint64_t v40 = *((void *)v6 + 6);
      uint64_t v41 = *((void *)v6 + 7);
      uint64_t v42 = *((void *)v6 + 8);
      uint64_t v43 = *((void *)v6 + 9);
      uint64_t v44 = *((void *)v6 + 10);
      *((void *)v6 + 5) = v33;
      *((void *)v6 + 6) = v34;
      *((void *)v6 + 7) = v35;
      *((void *)v6 + 8) = v36;
      *((void *)v6 + 9) = v37;
      *((void *)v6 + 10) = v38;
      char v45 = v6[88];
      v6[88] = v20;
      sub_247FA98EC(v39, v40, v41, v42, v43, v44, v45);
    }
    else
    {
      sub_247FAEE24((uint64_t)(v6 + 40));
      long long v25 = *(_OWORD *)(v7 + 56);
      long long v24 = *(_OWORD *)(v7 + 72);
      long long v26 = *v19;
      v6[88] = v7[88];
      *(_OWORD *)(v6 + 56) = v25;
      *(_OWORD *)(v6 + 72) = v24;
      *unsigned int v18 = v26;
    }
  }
  else if (v20 <= 0xF9)
  {
    uint64_t v27 = *((void *)v7 + 5);
    uint64_t v28 = *((void *)v7 + 6);
    uint64_t v29 = *((void *)v7 + 7);
    uint64_t v30 = *((void *)v7 + 8);
    uint64_t v31 = *((void *)v7 + 9);
    uint64_t v32 = *((void *)v17 + 10);
    sub_247FA9804(*((void *)v17 + 5), *((void *)v17 + 6), *((void *)v17 + 7), *((void *)v17 + 8), *((void *)v17 + 9), v32, v20);
    *((void *)v6 + 5) = v27;
    *((void *)v6 + 6) = v28;
    *((void *)v6 + 7) = v29;
    *((void *)v6 + 8) = v30;
    *((void *)v6 + 9) = v31;
    *((void *)v6 + 10) = v32;
    v6[88] = v20;
  }
  else
  {
    long long v21 = *v19;
    long long v22 = *(_OWORD *)(v7 + 56);
    long long v23 = *(_OWORD *)(v7 + 72);
    v6[88] = v7[88];
    *(_OWORD *)(v6 + 56) = v22;
    *(_OWORD *)(v6 + 72) = v23;
    *unsigned int v18 = v21;
  }
  v6[96] = v17[96];
  v6[97] = v17[97];
  *((void *)v6 + 13) = *((void *)v17 + 13);
  *((void *)v6 + 14) = *((void *)v17 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v6 + 15) = *((void *)v17 + 15);
  *((void *)v6 + 16) = *((void *)v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = *((void *)v17 + 17);
  v6[144] = v17[144];
  *((void *)v6 + 17) = v46;
  v6[145] = v17[145];
  *((void *)v6 + 19) = *((void *)v17 + 19);
  *((void *)v6 + 20) = *((void *)v17 + 20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = *((void *)v17 + 21);
  uint64_t v48 = *((void *)v17 + 22);
  uint64_t v49 = *((void *)v17 + 23);
  uint64_t v50 = *((void *)v17 + 24);
  uint64_t v51 = *((void *)v17 + 25);
  uint64_t v52 = *((void *)v17 + 26);
  unsigned __int8 v53 = v17[216];
  sub_247FE41AC(v47, v48, v49, v50, v51, v52, v53);
  uint64_t v54 = *((void *)v6 + 21);
  uint64_t v55 = *((void *)v6 + 22);
  uint64_t v56 = *((void *)v6 + 23);
  uint64_t v57 = *((void *)v6 + 24);
  uint64_t v58 = *((void *)v6 + 25);
  uint64_t v59 = *((void *)v6 + 26);
  *((void *)v6 + 21) = v47;
  *((void *)v6 + 22) = v48;
  *((void *)v6 + 23) = v49;
  *((void *)v6 + 24) = v50;
  *((void *)v6 + 25) = v51;
  *((void *)v6 + 26) = v52;
  unsigned int v60 = v6[216];
  v6[216] = v53;
  sub_247FE51C8(v54, v55, v56, v57, v58, v59, v60);
  uint64_t v61 = v6 + 224;
  uint64_t v62 = v17 + 224;
  uint64_t v63 = *((void *)v17 + 29);
  if (*((void *)v6 + 29))
  {
    if (v63)
    {
      *((void *)v6 + 28) = *((void *)v17 + 28);
      *((void *)v6 + 29) = *((void *)v17 + 29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v6 + 30) = *((void *)v17 + 30);
      swift_retain();
      swift_release();
      *((void *)v6 + 31) = *((void *)v17 + 31);
      swift_retain();
      swift_release();
    }
    else
    {
      sub_24800716C((uint64_t)(v6 + 224));
      long long v64 = *((_OWORD *)v17 + 15);
      *uint64_t v61 = *v62;
      *((_OWORD *)v6 + 15) = v64;
    }
  }
  else if (v63)
  {
    *((void *)v6 + 28) = *((void *)v17 + 28);
    *((void *)v6 + 29) = *((void *)v17 + 29);
    *((void *)v6 + 30) = *((void *)v17 + 30);
    *((void *)v6 + 31) = *((void *)v17 + 31);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  else
  {
    long long v65 = *((_OWORD *)v17 + 15);
    *uint64_t v61 = *v62;
    *((_OWORD *)v6 + 15) = v65;
  }
  *((void *)v6 + 32) = *((void *)v17 + 32);
  *((void *)v6 + 33) = *((void *)v17 + 33);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v6 + 34) = *((void *)v17 + 34);
  *((void *)v6 + 35) = *((void *)v17 + 35);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v302 = type metadata accessor for SetupModel();
  uint64_t v66 = *(int *)(v302 + 32);
  uint64_t v67 = &v6[v66];
  uint64_t v68 = &v17[v66];
  uint64_t v69 = type metadata accessor for IdMSAccount();
  uint64_t v287 = *(void *)(v69 - 8);
  uint64_t v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v287 + 48);
  int v71 = v70(v67, 1, v69);
  uint64_t v315 = (int *)v69;
  long long v301 = (uint64_t (*)(char *, uint64_t, int *))v70;
  int v72 = v70(v68, 1, v69);
  uint64_t v303 = v17;
  uint64_t v308 = v68;
  long long v312 = v67;
  if (v71)
  {
    if (!v72)
    {
      *(void *)uint64_t v67 = *(void *)v68;
      *((void *)v67 + 1) = *((void *)v68 + 1);
      *((void *)v67 + 2) = *((void *)v68 + 2);
      *((void *)v67 + 3) = *((void *)v68 + 3);
      *((void *)v67 + 4) = *((void *)v68 + 4);
      *((void *)v67 + 5) = *((void *)v68 + 5);
      *((void *)v67 + 6) = *((void *)v68 + 6);
      *((void *)v67 + 7) = *((void *)v68 + 7);
      *((void *)v67 + 8) = *((void *)v68 + 8);
      *((void *)v67 + 9) = *((void *)v68 + 9);
      uint64_t v73 = *(int *)(v69 + 20);
      long long v294 = &v68[v73];
      uint64_t v298 = &v67[v73];
      uint64_t v74 = sub_248174700();
      uint64_t v292 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v292(v298, v294, v74);
      uint64_t v75 = *(int *)(v69 + 24);
      long long v76 = &v67[v75];
      uint64_t v77 = &v68[v75];
      uint64_t v79 = *(void *)v77;
      uint64_t v78 = *((void *)v77 + 1);
      uint64_t v80 = *((void *)v77 + 2);
      uint64_t v81 = *((void *)v77 + 3);
      uint64_t v82 = *((void *)v77 + 4);
      uint64_t v83 = *((void *)v77 + 5);
      uint64_t v85 = *((void *)v77 + 6);
      uint64_t v84 = *((void *)v77 + 7);
      uint64_t v295 = *((void *)v77 + 8);
      LOBYTE(v298) = v77[72];
      sub_247FABF8C(*(void *)v77, v78, v80, v81, v82, v83, v85, v84, v295, (char)v298);
      *(void *)long long v76 = v79;
      *((void *)v76 + 1) = v78;
      *((void *)v76 + 2) = v80;
      *((void *)v76 + 3) = v81;
      *((void *)v76 + 4) = v82;
      *((void *)v76 + 5) = v83;
      *((void *)v76 + 6) = v85;
      *((void *)v76 + 7) = v84;
      *((void *)v76 + 8) = v295;
      v76[72] = (char)v298;
      uint64_t v68 = v308;
      uint64_t v67 = v312;
      *(void *)&v312[v315[7]] = *(void *)&v308[v315[7]];
      uint64_t v86 = *(void (**)(char *, void, uint64_t, int *))(v287 + 56);
      swift_bridgeObjectRetain();
      v86(v312, 0, 1, v315);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v72)
  {
    sub_2480071C0((uint64_t)v67, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_20:
    uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v67, v68, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_21;
  }
  *(void *)uint64_t v67 = *(void *)v68;
  *((void *)v67 + 1) = *((void *)v68 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v67 + 2) = *((void *)v68 + 2);
  *((void *)v67 + 3) = *((void *)v68 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v67 + 4) = *((void *)v68 + 4);
  *((void *)v67 + 5) = *((void *)v68 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v67 + 6) = *((void *)v68 + 6);
  *((void *)v67 + 7) = *((void *)v68 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v67 + 8) = *((void *)v68 + 8);
  *((void *)v67 + 9) = *((void *)v68 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v97 = *(int *)(v69 + 20);
  uint64_t v98 = &v67[v97];
  uint64_t v99 = &v68[v97];
  uint64_t v100 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 24))(v98, v99, v100);
  uint64_t v101 = *(int *)(v69 + 24);
  uint64_t v102 = &v67[v101];
  uint64_t v103 = &v68[v101];
  uint64_t v104 = *(void *)v103;
  uint64_t v105 = *((void *)v103 + 1);
  uint64_t v107 = *((void *)v103 + 2);
  uint64_t v106 = *((void *)v103 + 3);
  uint64_t v109 = *((void *)v103 + 4);
  uint64_t v108 = *((void *)v103 + 5);
  uint64_t v296 = *((void *)v103 + 7);
  uint64_t v299 = *((void *)v103 + 6);
  uint64_t v110 = *((void *)v103 + 8);
  char v111 = v103[72];
  sub_247FABF8C(*(void *)v103, v105, v107, v106, v109, v108, v299, v296, v110, v111);
  uint64_t v112 = *(void *)v102;
  uint64_t v113 = *((void *)v102 + 1);
  uint64_t v114 = *((void *)v102 + 2);
  uint64_t v115 = *((void *)v102 + 3);
  uint64_t v116 = *((void *)v102 + 4);
  uint64_t v117 = *((void *)v102 + 5);
  uint64_t v118 = *((void *)v102 + 6);
  uint64_t v119 = *((void *)v102 + 7);
  uint64_t v120 = *((void *)v102 + 8);
  char v121 = v102[72];
  *(void *)uint64_t v102 = v104;
  *((void *)v102 + 1) = v105;
  *((void *)v102 + 2) = v107;
  *((void *)v102 + 3) = v106;
  *((void *)v102 + 4) = v109;
  *((void *)v102 + 5) = v108;
  *((void *)v102 + 6) = v299;
  *((void *)v102 + 7) = v296;
  *((void *)v102 + 8) = v110;
  v102[72] = v111;
  uint64_t v68 = v308;
  uint64_t v67 = v312;
  sub_247FAC1EC(v112, v113, v114, v115, v116, v117, v118, v119, v120, v121);
  *(void *)&v312[v315[7]] = *(void *)&v308[v315[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_21:
  uint64_t v88 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v89 = v88[5];
  char v90 = &v67[v89];
  uint64_t v91 = &v68[v89];
  uint64_t v92 = *(void *)&v67[v89 + 8];
  uint64_t v93 = *(void *)&v68[v89 + 8];
  if (v92)
  {
    if (v93)
    {
      *(void *)char v90 = *(void *)v91;
      *((void *)v90 + 1) = *((void *)v91 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v90 + 2) = *((void *)v91 + 2);
      *((void *)v90 + 3) = *((void *)v91 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v90 + 4) = *((void *)v91 + 4);
      *((void *)v90 + 5) = *((void *)v91 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v90 + 6) = *((void *)v91 + 6);
      *((void *)v90 + 7) = *((void *)v91 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v90 + 8) = *((void *)v91 + 8);
      *((void *)v90 + 9) = *((void *)v91 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FACD88((uint64_t)v90);
      *(_OWORD *)char v90 = *(_OWORD *)v91;
      long long v94 = *((_OWORD *)v91 + 4);
      long long v96 = *((_OWORD *)v91 + 1);
      long long v95 = *((_OWORD *)v91 + 2);
      *((_OWORD *)v90 + 3) = *((_OWORD *)v91 + 3);
      *((_OWORD *)v90 + 4) = v94;
      *((_OWORD *)v90 + 1) = v96;
      *((_OWORD *)v90 + 2) = v95;
    }
  }
  else if (v93)
  {
    *(void *)char v90 = *(void *)v91;
    *((void *)v90 + 1) = *((void *)v91 + 1);
    *((void *)v90 + 2) = *((void *)v91 + 2);
    *((void *)v90 + 3) = *((void *)v91 + 3);
    *((void *)v90 + 4) = *((void *)v91 + 4);
    *((void *)v90 + 5) = *((void *)v91 + 5);
    *((void *)v90 + 6) = *((void *)v91 + 6);
    *((void *)v90 + 7) = *((void *)v91 + 7);
    *((void *)v90 + 8) = *((void *)v91 + 8);
    *((void *)v90 + 9) = *((void *)v91 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)char v90 = *(_OWORD *)v91;
    long long v122 = *((_OWORD *)v91 + 1);
    long long v123 = *((_OWORD *)v91 + 2);
    long long v124 = *((_OWORD *)v91 + 4);
    *((_OWORD *)v90 + 3) = *((_OWORD *)v91 + 3);
    *((_OWORD *)v90 + 4) = v124;
    *((_OWORD *)v90 + 1) = v122;
    *((_OWORD *)v90 + 2) = v123;
  }
  v67[v88[6]] = v68[v88[6]];
  uint64_t v125 = v88[7];
  long long v126 = &v67[v125];
  long long v127 = &v68[v125];
  *(void *)long long v126 = *(void *)v127;
  *((void *)v126 + 1) = *((void *)v127 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v67[v88[8]] = *(void *)&v68[v88[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67[v88[9]] = v68[v88[9]];
  uint64_t v128 = v88[10];
  uint64_t v129 = &v67[v128];
  long long v130 = &v68[v128];
  uint64_t v131 = *(void **)v130;
  uint64_t v132 = (void *)*((void *)v130 + 1);
  uint64_t v133 = (void *)*((void *)v130 + 2);
  uint64_t v134 = (void *)*((void *)v130 + 3);
  long long v300 = v88;
  long long v135 = (void *)*((void *)v130 + 4);
  uint64_t v136 = (void *)*((void *)v130 + 5);
  uint64_t v138 = *((void *)v130 + 6);
  uint64_t v137 = (void *)*((void *)v130 + 7);
  uint64_t v291 = (void *)*((void *)v130 + 8);
  long long v293 = (void *)*((void *)v130 + 9);
  char v297 = v130[80];
  sub_247F986A0(*(void **)v130, v132, v133, v134, v135, v136, v138, v137, v291, v293, v297);
  uint64_t v139 = *(void **)v129;
  uint64_t v140 = (void *)*((void *)v129 + 1);
  long long v141 = (void *)*((void *)v129 + 2);
  uint64_t v142 = (void *)*((void *)v129 + 3);
  uint64_t v143 = *((void *)v129 + 4);
  uint64_t v144 = (void *)*((void *)v129 + 5);
  uint64_t v145 = *((void *)v129 + 6);
  uint64_t v146 = *((void *)v129 + 7);
  char v147 = (void *)*((void *)v129 + 8);
  id v148 = (void *)*((void *)v129 + 9);
  char v149 = v129[80];
  *(void *)uint64_t v129 = v131;
  *((void *)v129 + 1) = v132;
  *((void *)v129 + 2) = v133;
  *((void *)v129 + 3) = v134;
  *((void *)v129 + 4) = v135;
  *((void *)v129 + 5) = v136;
  *((void *)v129 + 6) = v138;
  *((void *)v129 + 7) = v137;
  *((void *)v129 + 8) = v291;
  *((void *)v129 + 9) = v293;
  v129[80] = v297;
  sub_247F98958(v139, v140, v141, v142, v143, v144, v145, v146, v147, v148, v149);
  uint64_t v150 = v300[11];
  id v151 = &v312[v150];
  uint64_t v152 = &v308[v150];
  uint64_t v153 = *(void *)&v308[v150];
  if (*(void *)v151)
  {
    uint64_t v154 = v303;
    if (v153)
    {
      uint64_t v155 = *((void *)v152 + 1);
      *(void *)id v151 = v153;
      *((void *)v151 + 1) = v155;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else
  {
    uint64_t v154 = v303;
    if (v153)
    {
      uint64_t v156 = *((void *)v152 + 1);
      *(void *)id v151 = v153;
      *((void *)v151 + 1) = v156;
      swift_retain();
      goto LABEL_36;
    }
  }
  *(_OWORD *)id v151 = *(_OWORD *)v152;
LABEL_36:
  uint64_t v157 = *(int *)(v302 + 36);
  uint64_t v158 = &v6[v157];
  uint64_t v159 = &v154[v157];
  int v160 = v301(&v6[v157], 1, v315);
  int v161 = v301(v159, 1, v315);
  if (v160)
  {
    if (!v161)
    {
      *(void *)uint64_t v158 = *(void *)v159;
      *((void *)v158 + 1) = *((void *)v159 + 1);
      *((void *)v158 + 2) = *((void *)v159 + 2);
      *((void *)v158 + 3) = *((void *)v159 + 3);
      *((void *)v158 + 4) = *((void *)v159 + 4);
      *((void *)v158 + 5) = *((void *)v159 + 5);
      *((void *)v158 + 6) = *((void *)v159 + 6);
      *((void *)v158 + 7) = *((void *)v159 + 7);
      *((void *)v158 + 8) = *((void *)v159 + 8);
      *((void *)v158 + 9) = *((void *)v159 + 9);
      uint64_t v162 = v315[5];
      uint64_t v309 = &v159[v162];
      uint64_t v313 = &v158[v162];
      uint64_t v163 = sub_248174700();
      uint64_t v304 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v304(v313, v309, v163);
      uint64_t v164 = v315[6];
      uint64_t v165 = &v158[v164];
      uint64_t v166 = &v159[v164];
      uint64_t v167 = *((void *)v166 + 1);
      uint64_t v305 = *(void *)v166;
      uint64_t v168 = *((void *)v166 + 2);
      uint64_t v169 = *((void *)v166 + 3);
      uint64_t v170 = *((void *)v166 + 4);
      uint64_t v171 = *((void *)v166 + 5);
      uint64_t v172 = *((void *)v166 + 6);
      uint64_t v173 = *((void *)v166 + 7);
      uint64_t v310 = *((void *)v166 + 8);
      LOBYTE(v313) = v166[72];
      sub_247FABF8C(*(void *)v166, v167, v168, v169, v170, v171, v172, v173, v310, (char)v313);
      *(void *)uint64_t v165 = v305;
      *((void *)v165 + 1) = v167;
      *((void *)v165 + 2) = v168;
      *((void *)v165 + 3) = v169;
      *((void *)v165 + 4) = v170;
      *((void *)v165 + 5) = v171;
      *((void *)v165 + 6) = v172;
      *((void *)v165 + 7) = v173;
      *((void *)v165 + 8) = v310;
      v165[72] = (char)v313;
      *(void *)&v158[v315[7]] = *(void *)&v159[v315[7]];
      long long v174 = *(void (**)(char *, void, uint64_t, int *))(v287 + 56);
      swift_bridgeObjectRetain();
      v174(v158, 0, 1, v315);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v161)
  {
    sub_2480071C0((uint64_t)v158, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_41:
    uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v158, v159, *(void *)(*(void *)(v175 - 8) + 64));
    goto LABEL_42;
  }
  *(void *)uint64_t v158 = *(void *)v159;
  *((void *)v158 + 1) = *((void *)v159 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v158 + 2) = *((void *)v159 + 2);
  *((void *)v158 + 3) = *((void *)v159 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v158 + 4) = *((void *)v159 + 4);
  *((void *)v158 + 5) = *((void *)v159 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v158 + 6) = *((void *)v159 + 6);
  *((void *)v158 + 7) = *((void *)v159 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v158 + 8) = *((void *)v159 + 8);
  *((void *)v158 + 9) = *((void *)v159 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v190 = v315[5];
  uint64_t v191 = &v158[v190];
  uint64_t v192 = &v159[v190];
  uint64_t v193 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 24))(v191, v192, v193);
  uint64_t v194 = v315[6];
  uint64_t v195 = &v158[v194];
  uint64_t v196 = &v159[v194];
  uint64_t v197 = *((void *)v196 + 1);
  uint64_t v306 = *(void *)v196;
  uint64_t v198 = *((void *)v196 + 2);
  uint64_t v199 = *((void *)v196 + 3);
  uint64_t v200 = *((void *)v196 + 4);
  uint64_t v201 = *((void *)v196 + 5);
  uint64_t v202 = *((void *)v196 + 6);
  uint64_t v203 = *((void *)v196 + 7);
  uint64_t v311 = *((void *)v196 + 8);
  char v314 = v196[72];
  sub_247FABF8C(*(void *)v196, v197, v198, v199, v200, v201, v202, v203, v311, v314);
  uint64_t v204 = *(void *)v195;
  uint64_t v205 = *((void *)v195 + 1);
  uint64_t v206 = *((void *)v195 + 2);
  uint64_t v207 = *((void *)v195 + 3);
  uint64_t v208 = *((void *)v195 + 4);
  uint64_t v209 = *((void *)v195 + 5);
  uint64_t v210 = *((void *)v195 + 6);
  uint64_t v211 = *((void *)v195 + 7);
  uint64_t v212 = *((void *)v195 + 8);
  char v213 = v195[72];
  *(void *)uint64_t v195 = v306;
  *((void *)v195 + 1) = v197;
  *((void *)v195 + 2) = v198;
  *((void *)v195 + 3) = v199;
  *((void *)v195 + 4) = v200;
  *((void *)v195 + 5) = v201;
  *((void *)v195 + 6) = v202;
  *((void *)v195 + 7) = v203;
  *((void *)v195 + 8) = v311;
  v195[72] = v314;
  sub_247FAC1EC(v204, v205, v206, v207, v208, v209, v210, v211, v212, v213);
  *(void *)&v158[v315[7]] = *(void *)&v159[v315[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_42:
  uint64_t v176 = (int *)type metadata accessor for SignInModel();
  uint64_t v177 = v176[5];
  uint64_t v178 = (uint64_t)&v158[v177];
  uint64_t v179 = &v159[v177];
  uint64_t v180 = *(void *)&v158[v177 + 8];
  uint64_t v181 = *(void *)&v159[v177 + 8];
  if (!v180)
  {
    if (!v181)
    {
      long long v214 = *((_OWORD *)v179 + 1);
      *(_OWORD *)uint64_t v178 = *(_OWORD *)v179;
      *(_OWORD *)(v178 + 16) = v214;
      long long v215 = *((_OWORD *)v179 + 2);
      long long v216 = *((_OWORD *)v179 + 3);
      long long v217 = *((_OWORD *)v179 + 5);
      *(_OWORD *)(v178 + 64) = *((_OWORD *)v179 + 4);
      *(_OWORD *)(v178 + 80) = v217;
      *(_OWORD *)(v178 + 32) = v215;
      *(_OWORD *)(v178 + 48) = v216;
      goto LABEL_59;
    }
    *(void *)uint64_t v178 = *(void *)v179;
    *(void *)(v178 + 8) = *((void *)v179 + 1);
    *(void *)(v178 + 16) = *((void *)v179 + 2);
    *(void *)(v178 + 24) = *((void *)v179 + 3);
    *(void *)(v178 + 32) = *((void *)v179 + 4);
    *(void *)(v178 + 40) = *((void *)v179 + 5);
    *(void *)(v178 + 48) = *((void *)v179 + 6);
    *(void *)(v178 + 56) = *((void *)v179 + 7);
    *(void *)(v178 + 64) = *((void *)v179 + 8);
    *(void *)(v178 + 72) = *((void *)v179 + 9);
    uint64_t v185 = v179 + 80;
    unint64_t v183 = *((void *)v179 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v183 >> 60 == 15)
    {
      *(_OWORD *)(v178 + 80) = *v185;
      goto LABEL_59;
    }
    uint64_t v184 = *(void *)v185;
    goto LABEL_57;
  }
  if (!v181)
  {
    sub_248007274(v178);
    long long v186 = *((_OWORD *)v179 + 1);
    *(_OWORD *)uint64_t v178 = *(_OWORD *)v179;
    *(_OWORD *)(v178 + 16) = v186;
    long long v187 = *((_OWORD *)v179 + 5);
    long long v189 = *((_OWORD *)v179 + 2);
    long long v188 = *((_OWORD *)v179 + 3);
    *(_OWORD *)(v178 + 64) = *((_OWORD *)v179 + 4);
    *(_OWORD *)(v178 + 80) = v187;
    *(_OWORD *)(v178 + 32) = v189;
    *(_OWORD *)(v178 + 48) = v188;
    goto LABEL_59;
  }
  *(void *)uint64_t v178 = *(void *)v179;
  *(void *)(v178 + 8) = *((void *)v179 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v178 + 16) = *((void *)v179 + 2);
  *(void *)(v178 + 24) = *((void *)v179 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v178 + 32) = *((void *)v179 + 4);
  *(void *)(v178 + 40) = *((void *)v179 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v178 + 48) = *((void *)v179 + 6);
  *(void *)(v178 + 56) = *((void *)v179 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v178 + 64) = *((void *)v179 + 8);
  *(void *)(v178 + 72) = *((void *)v179 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v182 = (uint64_t *)(v179 + 80);
  unint64_t v183 = *((void *)v179 + 11);
  if (*(void *)(v178 + 88) >> 60 == 15)
  {
    if (v183 >> 60 != 15)
    {
      uint64_t v184 = *v182;
LABEL_57:
      sub_247FB6C20(v184, v183);
      *(void *)(v178 + 80) = v184;
      *(void *)(v178 + 88) = v183;
      goto LABEL_59;
    }
LABEL_53:
    *(_OWORD *)(v178 + 80) = *(_OWORD *)v182;
    goto LABEL_59;
  }
  if (v183 >> 60 == 15)
  {
    sub_248007220(v178 + 80);
    goto LABEL_53;
  }
  uint64_t v218 = *v182;
  sub_247FB6C20(v218, v183);
  uint64_t v219 = *(void *)(v178 + 80);
  unint64_t v220 = *(void *)(v178 + 88);
  *(void *)(v178 + 80) = v218;
  *(void *)(v178 + 88) = v183;
  sub_247FB6CCC(v219, v220);
LABEL_59:
  *(void *)&v158[v176[6]] = *(void *)&v159[v176[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v158[v176[7]] = *(void *)&v159[v176[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v158[v176[8]] = v159[v176[8]];
  v158[v176[9]] = v159[v176[9]];
  uint64_t v221 = v176[10];
  uint64_t v222 = &v158[v221];
  uint64_t v223 = &v159[v221];
  uint64_t v224 = *(void *)&v158[v221 + 8];
  uint64_t v225 = *(void *)&v159[v221 + 8];
  if (v224)
  {
    if (v225)
    {
      *(void *)uint64_t v222 = *(void *)v223;
      *((void *)v222 + 1) = *((void *)v223 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v222 + 2) = *((void *)v223 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v222 + 3) = *((void *)v223 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FFB0A0((uint64_t)v222);
      long long v226 = *((_OWORD *)v223 + 1);
      *(_OWORD *)uint64_t v222 = *(_OWORD *)v223;
      *((_OWORD *)v222 + 1) = v226;
    }
  }
  else if (v225)
  {
    *(void *)uint64_t v222 = *(void *)v223;
    *((void *)v222 + 1) = *((void *)v223 + 1);
    *((void *)v222 + 2) = *((void *)v223 + 2);
    *((void *)v222 + 3) = *((void *)v223 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v227 = *((_OWORD *)v223 + 1);
    *(_OWORD *)uint64_t v222 = *(_OWORD *)v223;
    *((_OWORD *)v222 + 1) = v227;
  }
  uint64_t v228 = v176[11];
  char v229 = &v158[v228];
  uint64_t v230 = &v159[v228];
  *(void *)char v229 = *(void *)v230;
  *((void *)v229 + 1) = *((void *)v230 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v231 = v176[12];
  uint64_t v232 = *(void **)&v158[v231];
  long long v233 = *(void **)&v159[v231];
  *(void *)&v158[v231] = v233;
  id v234 = v233;

  uint64_t v235 = v176[13];
  uint64_t v236 = &v158[v235];
  uint64_t v237 = &v159[v235];
  uint64_t v238 = *(void *)v237;
  uint64_t v239 = *((void *)v237 + 1);
  char v240 = v237[16];
  sub_247FE42A8(*(void *)v237, v239, v240);
  uint64_t v241 = *(void *)v236;
  uint64_t v242 = *((void *)v236 + 1);
  *(void *)uint64_t v236 = v238;
  *((void *)v236 + 1) = v239;
  char v243 = v236[16];
  v236[16] = v240;
  sub_247FE52C4(v241, v242, v243);
  uint64_t v244 = v176[14];
  uint64_t v245 = &v158[v244];
  long long v246 = &v159[v244];
  *(void *)uint64_t v245 = *(void *)v246;
  *((void *)v245 + 1) = *((void *)v246 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v158[v176[15]] = v159[v176[15]];
  uint64_t v247 = v176[16];
  uint64_t v248 = (uint64_t)&v158[v247];
  uint64_t v249 = &v159[v247];
  unint64_t v250 = *(void *)&v158[v247 + 8];
  unint64_t v251 = *(void *)&v159[v247 + 8];
  if (v250 >= 3)
  {
    if (v251 >= 3)
    {
      *(void *)uint64_t v248 = *(void *)v249;
      *(void *)(v248 + 8) = *((void *)v249 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v248 + 16) = *((void *)v249 + 2);
      *(void *)(v248 + 24) = *((void *)v249 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v254 = v249[32];
    }
    else
    {
      sub_247FB33D4(v248, &qword_2692D7018);
      char v254 = v249[32];
      long long v255 = *((_OWORD *)v249 + 1);
      *(_OWORD *)uint64_t v248 = *(_OWORD *)v249;
      *(_OWORD *)(v248 + 16) = v255;
    }
    *(unsigned char *)(v248 + 32) = v254;
  }
  else if (v251 >= 3)
  {
    *(void *)uint64_t v248 = *(void *)v249;
    *(void *)(v248 + 8) = *((void *)v249 + 1);
    *(void *)(v248 + 16) = *((void *)v249 + 2);
    *(void *)(v248 + 24) = *((void *)v249 + 3);
    *(unsigned char *)(v248 + 32) = v249[32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v252 = *(_OWORD *)v249;
    long long v253 = *((_OWORD *)v249 + 1);
    *(unsigned char *)(v248 + 32) = v249[32];
    *(_OWORD *)uint64_t v248 = v252;
    *(_OWORD *)(v248 + 16) = v253;
  }
  uint64_t v256 = *(int *)(v288 + 24);
  uint64_t v257 = (uint64_t)v290 + v256;
  uint64_t v258 = (char *)v307 + v256;
  unsigned int v259 = *((unsigned __int8 *)v307 + v256 + 40);
  if (*((unsigned __int8 *)v290 + v256 + 40) <= 0xFAu)
  {
    if (v259 <= 0xFA)
    {
      uint64_t v269 = *(void *)v258;
      uint64_t v270 = *((void *)v258 + 1);
      uint64_t v271 = *((void *)v258 + 2);
      uint64_t v272 = *((void *)v258 + 3);
      uint64_t v273 = *((void *)v258 + 4);
      sub_247FE42BC(v269, v270, v271, v272, v273, v259);
      uint64_t v274 = *(void *)v257;
      uint64_t v275 = *(void *)(v257 + 8);
      uint64_t v276 = *(void *)(v257 + 16);
      uint64_t v277 = *(void *)(v257 + 24);
      uint64_t v278 = *(void *)(v257 + 32);
      *(void *)uint64_t v257 = v269;
      *(void *)(v257 + 8) = v270;
      *(void *)(v257 + 16) = v271;
      *(void *)(v257 + 24) = v272;
      *(void *)(v257 + 32) = v273;
      char v279 = *(unsigned char *)(v257 + 40);
      *(unsigned char *)(v257 + 40) = v259;
      sub_247FE0600(v274, v275, v276, v277, v278, v279);
    }
    else
    {
      sub_2480072C8(v257);
      long long v262 = *(_OWORD *)(v258 + 25);
      long long v263 = *((_OWORD *)v258 + 1);
      *(_OWORD *)uint64_t v257 = *(_OWORD *)v258;
      *(_OWORD *)(v257 + 16) = v263;
      *(_OWORD *)(v257 + 25) = v262;
    }
  }
  else if (v259 <= 0xFA)
  {
    uint64_t v264 = *(void *)v258;
    uint64_t v265 = *((void *)v258 + 1);
    uint64_t v266 = *((void *)v258 + 2);
    uint64_t v267 = *((void *)v258 + 3);
    uint64_t v268 = *((void *)v258 + 4);
    sub_247FE42BC(v264, v265, v266, v267, v268, v259);
    *(void *)uint64_t v257 = v264;
    *(void *)(v257 + 8) = v265;
    *(void *)(v257 + 16) = v266;
    *(void *)(v257 + 24) = v267;
    *(void *)(v257 + 32) = v268;
    *(unsigned char *)(v257 + 40) = v259;
  }
  else
  {
    long long v260 = *(_OWORD *)v258;
    long long v261 = *((_OWORD *)v258 + 1);
    *(_OWORD *)(v257 + 25) = *(_OWORD *)(v258 + 25);
    *(_OWORD *)uint64_t v257 = v260;
    *(_OWORD *)(v257 + 16) = v261;
  }
  uint64_t v280 = *(int *)(a3 + 20);
  uint64_t v281 = (uint64_t)v290 + v280;
  uint64_t v282 = (char *)v307 + v280;
  uint64_t v283 = *(void *)((char *)v307 + v280 + 24);
  if (!*(void *)((char *)v290 + v280 + 24))
  {
    if (v283)
    {
      *(void *)(v281 + 24) = v283;
      *(void *)(v281 + 32) = *((void *)v282 + 4);
      (**(void (***)(uint64_t, char *))(v283 - 8))(v281, v282);
      return v290;
    }
LABEL_87:
    long long v284 = *(_OWORD *)v282;
    long long v285 = *((_OWORD *)v282 + 1);
    *(void *)(v281 + 32) = *((void *)v282 + 4);
    *(_OWORD *)uint64_t v281 = v284;
    *(_OWORD *)(v281 + 16) = v285;
    return v290;
  }
  if (!v283)
  {
    __swift_destroy_boxed_opaque_existential_1(v281);
    goto LABEL_87;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v281, (uint64_t *)v282);
  return v290;
}

uint64_t sub_24800716C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2480071C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_248007220(uint64_t a1)
{
  return a1;
}

uint64_t sub_248007274(uint64_t a1)
{
  return a1;
}

uint64_t sub_2480072C8(uint64_t a1)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

_OWORD *initializeWithTake for RepairContext(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v102 = type metadata accessor for RepairModel();
  uint64_t v8 = *(int *)(v102 + 20);
  int v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  *int v9 = *((unsigned char *)a2 + v8);
  *(_OWORD *)(v9 + 22) = *(_OWORD *)((char *)a2 + v8 + 22);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 8);
  v9[88] = *((unsigned char *)a2 + v8 + 88);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)((char *)a2 + v8 + 72);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)((char *)a2 + v8 + 56);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)((char *)a2 + v8 + 40);
  long long v11 = *(_OWORD *)((char *)a2 + v8 + 96);
  long long v12 = *(_OWORD *)((char *)a2 + v8 + 112);
  long long v13 = *(_OWORD *)((char *)a2 + v8 + 144);
  *((_OWORD *)v9 + 8) = *(_OWORD *)((char *)a2 + v8 + 128);
  *((_OWORD *)v9 + 9) = v13;
  *((_OWORD *)v9 + 6) = v11;
  *((_OWORD *)v9 + 7) = v12;
  long long v14 = *(_OWORD *)((char *)a2 + v8 + 160);
  long long v15 = *(_OWORD *)((char *)a2 + v8 + 176);
  long long v16 = *(_OWORD *)((char *)a2 + v8 + 208);
  *((_OWORD *)v9 + 12) = *(_OWORD *)((char *)a2 + v8 + 192);
  *((_OWORD *)v9 + 13) = v16;
  *((_OWORD *)v9 + 10) = v14;
  *((_OWORD *)v9 + 11) = v15;
  long long v17 = *(_OWORD *)((char *)a2 + v8 + 224);
  long long v18 = *(_OWORD *)((char *)a2 + v8 + 240);
  long long v19 = *(_OWORD *)((char *)a2 + v8 + 272);
  *((_OWORD *)v9 + 16) = *(_OWORD *)((char *)a2 + v8 + 256);
  *((_OWORD *)v9 + 17) = v19;
  *((_OWORD *)v9 + 14) = v17;
  *((_OWORD *)v9 + 15) = v18;
  uint64_t v20 = type metadata accessor for SetupModel();
  uint64_t v21 = *(int *)(v20 + 32);
  long long v22 = &v9[v21];
  long long v23 = &v10[v21];
  long long v24 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v100 = *((void *)v24 - 1);
  uint64_t v101 = *(unsigned int (**)(char *, uint64_t, int *))(v100 + 48);
  if (v101(v23, 1, v24))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    long long v26 = *((_OWORD *)v23 + 3);
    *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
    *((_OWORD *)v22 + 3) = v26;
    *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
    long long v27 = *((_OWORD *)v23 + 1);
    *(_OWORD *)long long v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v27;
    uint64_t v28 = v24[5];
    uint64_t v98 = v20;
    uint64_t v99 = a3;
    uint64_t v29 = &v22[v28];
    uint64_t v30 = &v23[v28];
    uint64_t v31 = sub_248174700();
    uint64_t v32 = v29;
    uint64_t v33 = v30;
    uint64_t v20 = v98;
    a3 = v99;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v32, v33, v31);
    uint64_t v34 = v24[6];
    uint64_t v35 = &v22[v34];
    uint64_t v36 = &v23[v34];
    long long v37 = *((_OWORD *)v36 + 3);
    *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
    *((_OWORD *)v35 + 3) = v37;
    *(_OWORD *)(v35 + 57) = *(_OWORD *)(v36 + 57);
    long long v38 = *((_OWORD *)v36 + 1);
    *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v38;
    *(void *)&v22[v24[7]] = *(void *)&v23[v24[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v100 + 56))(v22, 0, 1, v24);
  }
  uint64_t v39 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v40 = v39[5];
  uint64_t v41 = &v22[v40];
  uint64_t v42 = &v23[v40];
  long long v43 = *((_OWORD *)v42 + 3);
  *((_OWORD *)v41 + 2) = *((_OWORD *)v42 + 2);
  *((_OWORD *)v41 + 3) = v43;
  *((_OWORD *)v41 + 4) = *((_OWORD *)v42 + 4);
  long long v44 = *((_OWORD *)v42 + 1);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *((_OWORD *)v41 + 1) = v44;
  v22[v39[6]] = v23[v39[6]];
  *(_OWORD *)&v22[v39[7]] = *(_OWORD *)&v23[v39[7]];
  *(void *)&v22[v39[8]] = *(void *)&v23[v39[8]];
  v22[v39[9]] = v23[v39[9]];
  uint64_t v45 = v39[10];
  uint64_t v46 = &v22[v45];
  uint64_t v47 = &v23[v45];
  long long v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v48;
  v46[80] = v47[80];
  long long v49 = *((_OWORD *)v47 + 4);
  long long v50 = *((_OWORD *)v47 + 2);
  *((_OWORD *)v46 + 3) = *((_OWORD *)v47 + 3);
  *((_OWORD *)v46 + 4) = v49;
  *((_OWORD *)v46 + 2) = v50;
  uint64_t v51 = v39[11];
  uint64_t v52 = &v22[v51];
  unsigned __int8 v53 = &v23[v51];
  uint64_t v54 = *(void *)v53;
  if (*(void *)v53)
  {
    uint64_t v55 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = v54;
    *((void *)v52 + 1) = v55;
  }
  else
  {
    *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
  }
  uint64_t v56 = *(int *)(v20 + 36);
  uint64_t v57 = &v9[v56];
  uint64_t v58 = &v10[v56];
  if (v101(&v10[v56], 1, v24))
  {
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    long long v60 = *((_OWORD *)v58 + 3);
    *((_OWORD *)v57 + 2) = *((_OWORD *)v58 + 2);
    *((_OWORD *)v57 + 3) = v60;
    *((_OWORD *)v57 + 4) = *((_OWORD *)v58 + 4);
    long long v61 = *((_OWORD *)v58 + 1);
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    *((_OWORD *)v57 + 1) = v61;
    uint64_t v62 = v24[5];
    uint64_t v63 = &v57[v62];
    long long v64 = &v58[v62];
    uint64_t v65 = sub_248174700();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
    uint64_t v66 = v24[6];
    uint64_t v67 = &v57[v66];
    uint64_t v68 = &v58[v66];
    long long v69 = *((_OWORD *)v68 + 3);
    *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
    *((_OWORD *)v67 + 3) = v69;
    *(_OWORD *)(v67 + 57) = *(_OWORD *)(v68 + 57);
    long long v70 = *((_OWORD *)v68 + 1);
    *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
    *((_OWORD *)v67 + 1) = v70;
    *(void *)&v57[v24[7]] = *(void *)&v58[v24[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v100 + 56))(v57, 0, 1, v24);
  }
  int v71 = (int *)type metadata accessor for SignInModel();
  uint64_t v72 = v71[5];
  uint64_t v73 = &v57[v72];
  uint64_t v74 = &v58[v72];
  long long v75 = *((_OWORD *)v74 + 3);
  *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
  *((_OWORD *)v73 + 3) = v75;
  long long v76 = *((_OWORD *)v74 + 5);
  *((_OWORD *)v73 + 4) = *((_OWORD *)v74 + 4);
  *((_OWORD *)v73 + 5) = v76;
  long long v77 = *((_OWORD *)v74 + 1);
  *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
  *((_OWORD *)v73 + 1) = v77;
  *(void *)&v57[v71[6]] = *(void *)&v58[v71[6]];
  *(void *)&v57[v71[7]] = *(void *)&v58[v71[7]];
  v57[v71[8]] = v58[v71[8]];
  v57[v71[9]] = v58[v71[9]];
  uint64_t v78 = v71[10];
  uint64_t v79 = &v57[v78];
  uint64_t v80 = &v58[v78];
  long long v81 = *((_OWORD *)v80 + 1);
  *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
  *((_OWORD *)v79 + 1) = v81;
  *(_OWORD *)&v57[v71[11]] = *(_OWORD *)&v58[v71[11]];
  *(void *)&v57[v71[12]] = *(void *)&v58[v71[12]];
  uint64_t v82 = v71[13];
  uint64_t v83 = &v57[v82];
  uint64_t v84 = &v58[v82];
  v83[16] = v84[16];
  *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
  *(_OWORD *)&v57[v71[14]] = *(_OWORD *)&v58[v71[14]];
  v57[v71[15]] = v58[v71[15]];
  uint64_t v85 = v71[16];
  uint64_t v86 = &v57[v85];
  uint64_t v87 = &v58[v85];
  long long v88 = *((_OWORD *)v87 + 1);
  *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
  *((_OWORD *)v86 + 1) = v88;
  v86[32] = v87[32];
  uint64_t v89 = *(int *)(v102 + 24);
  char v90 = (_OWORD *)((char *)a1 + v89);
  uint64_t v91 = (_OWORD *)((char *)a2 + v89);
  long long v92 = v91[1];
  *char v90 = *v91;
  v90[1] = v92;
  *(_OWORD *)((char *)v90 + 25) = *(_OWORD *)((char *)v91 + 25);
  uint64_t v93 = *(int *)(a3 + 20);
  long long v94 = (char *)a1 + v93;
  long long v95 = (char *)a2 + v93;
  *((void *)v94 + 4) = *((void *)v95 + 4);
  long long v96 = *((_OWORD *)v95 + 1);
  *(_OWORD *)long long v94 = *(_OWORD *)v95;
  *((_OWORD *)v94 + 1) = v96;
  return a1;
}

void *assignWithTake for RepairContext(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  swift_bridgeObjectRelease();
  uint64_t v236 = type metadata accessor for RepairModel();
  uint64_t v10 = *(int *)(v236 + 20);
  long long v11 = (char *)a1 + v10;
  uint64_t v238 = a2;
  long long v12 = (char *)a2 + v10;
  *long long v11 = *((unsigned char *)a2 + v10);
  uint64_t v13 = *(void *)((char *)a2 + v10 + 24);
  __int16 v14 = *((_WORD *)v12 + 18);
  int v15 = *((_DWORD *)v12 + 8);
  long long v16 = (void *)*((void *)v11 + 1);
  long long v17 = (void *)*((void *)v11 + 2);
  uint64_t v18 = *((void *)v11 + 3);
  unint64_t v19 = *((unsigned int *)v11 + 8) | ((unint64_t)*((unsigned __int16 *)v11 + 18) << 32);
  *(_OWORD *)(v11 + 8) = *(_OWORD *)(v12 + 8);
  *((void *)v11 + 3) = v13;
  *((_DWORD *)v11 + 8) = v15;
  *((_WORD *)v11 + 18) = v14;
  sub_247FE51A0(v16, v17, v18, v19);
  unsigned int v20 = v11[88];
  if (v20 > 0xF9) {
    goto LABEL_4;
  }
  unsigned int v21 = v12[88];
  if (v21 > 0xF9)
  {
    sub_247FAEE24((uint64_t)(v11 + 40));
LABEL_4:
    long long v22 = *(_OWORD *)(v12 + 56);
    *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
    *(_OWORD *)(v11 + 56) = v22;
    *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
    v11[88] = v12[88];
    goto LABEL_6;
  }
  uint64_t v23 = *((void *)v11 + 5);
  uint64_t v24 = *((void *)v11 + 6);
  uint64_t v25 = *((void *)v11 + 7);
  uint64_t v26 = *((void *)v11 + 8);
  uint64_t v27 = *((void *)v11 + 9);
  uint64_t v28 = *((void *)v11 + 10);
  *(_OWORD *)(v11 + 40) = *(_OWORD *)(v12 + 40);
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(v12 + 56);
  *(_OWORD *)(v11 + 72) = *(_OWORD *)(v12 + 72);
  v11[88] = v21;
  sub_247FA98EC(v23, v24, v25, v26, v27, v28, v20);
LABEL_6:
  v11[96] = v12[96];
  v11[97] = v12[97];
  uint64_t v29 = *((void *)v12 + 14);
  *((void *)v11 + 13) = *((void *)v12 + 13);
  *((void *)v11 + 14) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *((void *)v12 + 16);
  *((void *)v11 + 15) = *((void *)v12 + 15);
  *((void *)v11 + 16) = v30;
  swift_bridgeObjectRelease();
  *((void *)v11 + 17) = *((void *)v12 + 17);
  v11[144] = v12[144];
  v11[145] = v12[145];
  uint64_t v31 = *((void *)v12 + 20);
  *((void *)v11 + 19) = *((void *)v12 + 19);
  *((void *)v11 + 20) = v31;
  swift_bridgeObjectRelease();
  char v32 = v12[216];
  uint64_t v33 = *((void *)v11 + 21);
  uint64_t v34 = *((void *)v11 + 22);
  uint64_t v35 = *((void *)v11 + 23);
  uint64_t v36 = *((void *)v11 + 24);
  uint64_t v37 = *((void *)v11 + 25);
  uint64_t v38 = *((void *)v11 + 26);
  *(_OWORD *)(v11 + 168) = *(_OWORD *)(v12 + 168);
  *(_OWORD *)(v11 + 184) = *(_OWORD *)(v12 + 184);
  *(_OWORD *)(v11 + 200) = *(_OWORD *)(v12 + 200);
  unsigned int v39 = v11[216];
  v11[216] = v32;
  sub_247FE51C8(v33, v34, v35, v36, v37, v38, v39);
  if (*((void *)v11 + 29))
  {
    uint64_t v40 = *((void *)v12 + 29);
    if (v40)
    {
      *((void *)v11 + 28) = *((void *)v12 + 28);
      *((void *)v11 + 29) = v40;
      swift_bridgeObjectRelease();
      *((void *)v11 + 30) = *((void *)v12 + 30);
      swift_release();
      *((void *)v11 + 31) = *((void *)v12 + 31);
      swift_release();
      goto LABEL_11;
    }
    sub_24800716C((uint64_t)(v11 + 224));
  }
  long long v41 = *((_OWORD *)v12 + 15);
  *((_OWORD *)v11 + 14) = *((_OWORD *)v12 + 14);
  *((_OWORD *)v11 + 15) = v41;
LABEL_11:
  uint64_t v42 = *((void *)v12 + 33);
  *((void *)v11 + 32) = *((void *)v12 + 32);
  *((void *)v11 + 33) = v42;
  swift_bridgeObjectRelease();
  uint64_t v43 = *((void *)v12 + 35);
  *((void *)v11 + 34) = *((void *)v12 + 34);
  *((void *)v11 + 35) = v43;
  swift_bridgeObjectRelease();
  uint64_t v240 = type metadata accessor for SetupModel();
  uint64_t v44 = *(int *)(v240 + 32);
  uint64_t v45 = &v11[v44];
  uint64_t v46 = &v12[v44];
  uint64_t v47 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v48 = *((void *)v47 - 1);
  long long v49 = *(uint64_t (**)(char *, uint64_t, int *))(v48 + 48);
  int v50 = v49(v45, 1, v47);
  uint64_t v239 = v49;
  int v51 = v49(v46, 1, v47);
  uint64_t v235 = v48;
  if (v50)
  {
    if (!v51)
    {
      long long v52 = *((_OWORD *)v46 + 3);
      *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
      *((_OWORD *)v45 + 3) = v52;
      *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
      long long v53 = *((_OWORD *)v46 + 1);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v53;
      uint64_t v54 = v47[5];
      uint64_t v55 = &v45[v54];
      uint64_t v56 = &v46[v54];
      uint64_t v57 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      uint64_t v58 = v47[6];
      uint64_t v59 = &v45[v58];
      long long v60 = &v46[v58];
      long long v61 = *((_OWORD *)v60 + 3);
      *((_OWORD *)v59 + 2) = *((_OWORD *)v60 + 2);
      *((_OWORD *)v59 + 3) = v61;
      *(_OWORD *)(v59 + 57) = *(_OWORD *)(v60 + 57);
      long long v62 = *((_OWORD *)v60 + 1);
      *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
      *((_OWORD *)v59 + 1) = v62;
      *(void *)&v45[v47[7]] = *(void *)&v46[v47[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v48 + 56))(v45, 0, 1, v47);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v51)
  {
    sub_2480071C0((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_16:
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v45, v46, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v182 = *((void *)v46 + 1);
  *(void *)uint64_t v45 = *(void *)v46;
  *((void *)v45 + 1) = v182;
  swift_bridgeObjectRelease();
  uint64_t v183 = *((void *)v46 + 3);
  *((void *)v45 + 2) = *((void *)v46 + 2);
  *((void *)v45 + 3) = v183;
  swift_bridgeObjectRelease();
  uint64_t v184 = *((void *)v46 + 5);
  *((void *)v45 + 4) = *((void *)v46 + 4);
  *((void *)v45 + 5) = v184;
  swift_bridgeObjectRelease();
  uint64_t v185 = *((void *)v46 + 7);
  *((void *)v45 + 6) = *((void *)v46 + 6);
  *((void *)v45 + 7) = v185;
  swift_bridgeObjectRelease();
  uint64_t v186 = *((void *)v46 + 9);
  *((void *)v45 + 8) = *((void *)v46 + 8);
  *((void *)v45 + 9) = v186;
  swift_bridgeObjectRelease();
  uint64_t v187 = v47[5];
  long long v188 = &v45[v187];
  long long v189 = &v46[v187];
  uint64_t v190 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v190 - 8) + 40))(v188, v189, v190);
  uint64_t v191 = v47[6];
  uint64_t v192 = &v45[v191];
  uint64_t v193 = &v46[v191];
  uint64_t v194 = *((void *)v193 + 8);
  char v195 = v193[72];
  uint64_t v196 = *(void *)v192;
  uint64_t v197 = *((void *)v192 + 1);
  uint64_t v198 = *((void *)v192 + 2);
  uint64_t v199 = *((void *)v192 + 3);
  uint64_t v200 = *((void *)v192 + 4);
  uint64_t v201 = *((void *)v192 + 5);
  uint64_t v202 = *((void *)v192 + 6);
  uint64_t v203 = *((void *)v192 + 7);
  uint64_t v204 = *((void *)v192 + 8);
  char v205 = v192[72];
  long long v206 = *((_OWORD *)v193 + 1);
  *(_OWORD *)uint64_t v192 = *(_OWORD *)v193;
  *((_OWORD *)v192 + 1) = v206;
  long long v207 = *((_OWORD *)v193 + 3);
  *((_OWORD *)v192 + 2) = *((_OWORD *)v193 + 2);
  *((_OWORD *)v192 + 3) = v207;
  *((void *)v192 + 8) = v194;
  v192[72] = v195;
  sub_247FAC1EC(v196, v197, v198, v199, v200, v201, v202, v203, v204, v205);
  *(void *)&v45[v47[7]] = *(void *)&v46[v47[7]];
  swift_bridgeObjectRelease();
LABEL_17:
  long long v64 = (int *)type metadata accessor for AuthenticationModel();
  uint64_t v65 = v64[5];
  uint64_t v66 = &v45[v65];
  uint64_t v67 = &v46[v65];
  if (*(void *)&v45[v65 + 8])
  {
    uint64_t v68 = *((void *)v67 + 1);
    if (v68)
    {
      *(void *)uint64_t v66 = *(void *)v67;
      *((void *)v66 + 1) = v68;
      swift_bridgeObjectRelease();
      uint64_t v69 = *((void *)v67 + 3);
      *((void *)v66 + 2) = *((void *)v67 + 2);
      *((void *)v66 + 3) = v69;
      swift_bridgeObjectRelease();
      uint64_t v70 = *((void *)v67 + 5);
      *((void *)v66 + 4) = *((void *)v67 + 4);
      *((void *)v66 + 5) = v70;
      swift_bridgeObjectRelease();
      uint64_t v71 = *((void *)v67 + 7);
      *((void *)v66 + 6) = *((void *)v67 + 6);
      *((void *)v66 + 7) = v71;
      swift_bridgeObjectRelease();
      uint64_t v72 = *((void *)v67 + 9);
      *((void *)v66 + 8) = *((void *)v67 + 8);
      *((void *)v66 + 9) = v72;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    sub_247FACD88((uint64_t)v66);
  }
  long long v73 = *((_OWORD *)v67 + 3);
  *((_OWORD *)v66 + 2) = *((_OWORD *)v67 + 2);
  *((_OWORD *)v66 + 3) = v73;
  *((_OWORD *)v66 + 4) = *((_OWORD *)v67 + 4);
  long long v74 = *((_OWORD *)v67 + 1);
  *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
  *((_OWORD *)v66 + 1) = v74;
LABEL_22:
  v45[v64[6]] = v46[v64[6]];
  uint64_t v75 = v64[7];
  long long v76 = &v45[v75];
  long long v77 = &v46[v75];
  uint64_t v79 = *(void *)v77;
  uint64_t v78 = *((void *)v77 + 1);
  *(void *)long long v76 = v79;
  *((void *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  *(void *)&v45[v64[8]] = *(void *)&v46[v64[8]];
  swift_bridgeObjectRelease();
  v45[v64[9]] = v46[v64[9]];
  uint64_t v80 = v64[10];
  long long v81 = &v45[v80];
  uint64_t v82 = &v46[v80];
  char v83 = v82[80];
  uint64_t v84 = *(void **)v81;
  uint64_t v85 = (void *)*((void *)v81 + 1);
  uint64_t v86 = (void *)*((void *)v81 + 2);
  uint64_t v87 = (void *)*((void *)v81 + 3);
  uint64_t v88 = *((void *)v81 + 4);
  uint64_t v89 = (void *)*((void *)v81 + 5);
  uint64_t v90 = *((void *)v81 + 6);
  uint64_t v91 = *((void *)v81 + 7);
  long long v92 = (void *)*((void *)v81 + 8);
  uint64_t v93 = (void *)*((void *)v81 + 9);
  char v94 = v81[80];
  long long v95 = *((_OWORD *)v82 + 1);
  *(_OWORD *)long long v81 = *(_OWORD *)v82;
  *((_OWORD *)v81 + 1) = v95;
  long long v96 = *((_OWORD *)v82 + 3);
  *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
  *((_OWORD *)v81 + 3) = v96;
  *((_OWORD *)v81 + 4) = *((_OWORD *)v82 + 4);
  v81[80] = v83;
  sub_247F98958(v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94);
  uint64_t v97 = v64[11];
  uint64_t v98 = &v45[v97];
  uint64_t v99 = &v46[v97];
  uint64_t v100 = *(void *)&v46[v97];
  if (*(void *)v98)
  {
    if (v100)
    {
      uint64_t v101 = *((void *)v99 + 1);
      *(void *)uint64_t v98 = v100;
      *((void *)v98 + 1) = v101;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v100)
  {
    uint64_t v102 = *((void *)v99 + 1);
    *(void *)uint64_t v98 = v100;
    *((void *)v98 + 1) = v102;
    goto LABEL_29;
  }
  *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
LABEL_29:
  uint64_t v103 = *(int *)(v240 + 36);
  uint64_t v104 = &v11[v103];
  uint64_t v105 = &v12[v103];
  int v106 = v239(&v11[v103], 1, v47);
  int v107 = v239(v105, 1, v47);
  if (v106)
  {
    if (!v107)
    {
      long long v108 = *((_OWORD *)v105 + 3);
      *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
      *((_OWORD *)v104 + 3) = v108;
      *((_OWORD *)v104 + 4) = *((_OWORD *)v105 + 4);
      long long v109 = *((_OWORD *)v105 + 1);
      *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
      *((_OWORD *)v104 + 1) = v109;
      uint64_t v110 = v47[5];
      char v111 = &v104[v110];
      uint64_t v112 = &v105[v110];
      uint64_t v113 = sub_248174700();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
      uint64_t v114 = v47[6];
      uint64_t v115 = &v104[v114];
      uint64_t v116 = &v105[v114];
      long long v117 = *((_OWORD *)v116 + 3);
      *((_OWORD *)v115 + 2) = *((_OWORD *)v116 + 2);
      *((_OWORD *)v115 + 3) = v117;
      *(_OWORD *)(v115 + 57) = *(_OWORD *)(v116 + 57);
      long long v118 = *((_OWORD *)v116 + 1);
      *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
      *((_OWORD *)v115 + 1) = v118;
      *(void *)&v104[v47[7]] = *(void *)&v105[v47[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v235 + 56))(v104, 0, 1, v47);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v107)
  {
    sub_2480071C0((uint64_t)v104, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
LABEL_34:
    uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
    memcpy(v104, v105, *(void *)(*(void *)(v119 - 8) + 64));
    goto LABEL_35;
  }
  uint64_t v208 = *((void *)v105 + 1);
  *(void *)uint64_t v104 = *(void *)v105;
  *((void *)v104 + 1) = v208;
  swift_bridgeObjectRelease();
  uint64_t v209 = *((void *)v105 + 3);
  *((void *)v104 + 2) = *((void *)v105 + 2);
  *((void *)v104 + 3) = v209;
  swift_bridgeObjectRelease();
  uint64_t v210 = *((void *)v105 + 5);
  *((void *)v104 + 4) = *((void *)v105 + 4);
  *((void *)v104 + 5) = v210;
  swift_bridgeObjectRelease();
  uint64_t v211 = *((void *)v105 + 7);
  *((void *)v104 + 6) = *((void *)v105 + 6);
  *((void *)v104 + 7) = v211;
  swift_bridgeObjectRelease();
  uint64_t v212 = *((void *)v105 + 9);
  *((void *)v104 + 8) = *((void *)v105 + 8);
  *((void *)v104 + 9) = v212;
  swift_bridgeObjectRelease();
  uint64_t v213 = v47[5];
  long long v214 = &v104[v213];
  long long v215 = &v105[v213];
  uint64_t v216 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 40))(v214, v215, v216);
  uint64_t v217 = v47[6];
  uint64_t v218 = &v104[v217];
  uint64_t v219 = &v105[v217];
  uint64_t v220 = *((void *)v219 + 8);
  char v221 = v219[72];
  uint64_t v222 = *(void *)v218;
  uint64_t v223 = *((void *)v218 + 1);
  uint64_t v224 = *((void *)v218 + 2);
  uint64_t v225 = *((void *)v218 + 3);
  uint64_t v226 = *((void *)v218 + 4);
  uint64_t v227 = *((void *)v218 + 5);
  uint64_t v228 = *((void *)v218 + 6);
  uint64_t v229 = *((void *)v218 + 7);
  uint64_t v230 = *((void *)v218 + 8);
  char v231 = v218[72];
  long long v232 = *((_OWORD *)v219 + 1);
  *(_OWORD *)uint64_t v218 = *(_OWORD *)v219;
  *((_OWORD *)v218 + 1) = v232;
  long long v233 = *((_OWORD *)v219 + 3);
  *((_OWORD *)v218 + 2) = *((_OWORD *)v219 + 2);
  *((_OWORD *)v218 + 3) = v233;
  *((void *)v218 + 8) = v220;
  v218[72] = v221;
  sub_247FAC1EC(v222, v223, v224, v225, v226, v227, v228, v229, v230, v231);
  *(void *)&v104[v47[7]] = *(void *)&v105[v47[7]];
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v120 = (int *)type metadata accessor for SignInModel();
  uint64_t v121 = v120[5];
  uint64_t v122 = (uint64_t)&v104[v121];
  long long v123 = &v105[v121];
  if (!*(void *)&v104[v121 + 8])
  {
LABEL_42:
    long long v132 = *((_OWORD *)v123 + 3);
    *(_OWORD *)(v122 + 32) = *((_OWORD *)v123 + 2);
    *(_OWORD *)(v122 + 48) = v132;
    long long v133 = *((_OWORD *)v123 + 5);
    *(_OWORD *)(v122 + 64) = *((_OWORD *)v123 + 4);
    *(_OWORD *)(v122 + 80) = v133;
    long long v134 = *((_OWORD *)v123 + 1);
    *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
    *(_OWORD *)(v122 + 16) = v134;
    goto LABEL_43;
  }
  uint64_t v124 = *((void *)v123 + 1);
  if (!v124)
  {
    sub_248007274(v122);
    goto LABEL_42;
  }
  *(void *)uint64_t v122 = *(void *)v123;
  *(void *)(v122 + 8) = v124;
  swift_bridgeObjectRelease();
  uint64_t v125 = *((void *)v123 + 3);
  *(void *)(v122 + 16) = *((void *)v123 + 2);
  *(void *)(v122 + 24) = v125;
  swift_bridgeObjectRelease();
  uint64_t v126 = *((void *)v123 + 5);
  *(void *)(v122 + 32) = *((void *)v123 + 4);
  *(void *)(v122 + 40) = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = *((void *)v123 + 7);
  *(void *)(v122 + 48) = *((void *)v123 + 6);
  *(void *)(v122 + 56) = v127;
  swift_bridgeObjectRelease();
  uint64_t v128 = *((void *)v123 + 9);
  *(void *)(v122 + 64) = *((void *)v123 + 8);
  *(void *)(v122 + 72) = v128;
  swift_bridgeObjectRelease();
  uint64_t v129 = v123 + 80;
  unint64_t v130 = *(void *)(v122 + 88);
  if (v130 >> 60 == 15)
  {
LABEL_40:
    *(_OWORD *)(v122 + 80) = *v129;
    goto LABEL_43;
  }
  unint64_t v131 = *((void *)v123 + 11);
  if (v131 >> 60 == 15)
  {
    sub_248007220(v122 + 80);
    goto LABEL_40;
  }
  uint64_t v234 = *(void *)(v122 + 80);
  *(void *)(v122 + 80) = *(void *)v129;
  *(void *)(v122 + 88) = v131;
  sub_247FB6CCC(v234, v130);
LABEL_43:
  *(void *)&v104[v120[6]] = *(void *)&v105[v120[6]];
  swift_bridgeObjectRelease();
  *(void *)&v104[v120[7]] = *(void *)&v105[v120[7]];
  swift_bridgeObjectRelease();
  v104[v120[8]] = v105[v120[8]];
  v104[v120[9]] = v105[v120[9]];
  uint64_t v135 = v120[10];
  uint64_t v136 = &v104[v135];
  uint64_t v137 = &v105[v135];
  if (*(void *)&v104[v135 + 8])
  {
    uint64_t v138 = *((void *)v137 + 1);
    if (v138)
    {
      *(void *)uint64_t v136 = *(void *)v137;
      *((void *)v136 + 1) = v138;
      swift_bridgeObjectRelease();
      *((void *)v136 + 2) = *((void *)v137 + 2);
      swift_bridgeObjectRelease();
      *((void *)v136 + 3) = *((void *)v137 + 3);
      swift_bridgeObjectRelease();
      goto LABEL_48;
    }
    sub_247FFB0A0((uint64_t)v136);
  }
  long long v139 = *((_OWORD *)v137 + 1);
  *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
  *((_OWORD *)v136 + 1) = v139;
LABEL_48:
  uint64_t v140 = v120[11];
  long long v141 = &v104[v140];
  uint64_t v142 = &v105[v140];
  uint64_t v144 = *(void *)v142;
  uint64_t v143 = *((void *)v142 + 1);
  *(void *)long long v141 = v144;
  *((void *)v141 + 1) = v143;
  swift_bridgeObjectRelease();
  uint64_t v145 = v120[12];
  uint64_t v146 = *(void **)&v104[v145];
  *(void *)&v104[v145] = *(void *)&v105[v145];

  uint64_t v147 = v120[13];
  id v148 = &v104[v147];
  char v149 = &v105[v147];
  char v150 = v149[16];
  uint64_t v151 = *(void *)v148;
  uint64_t v152 = *((void *)v148 + 1);
  *(_OWORD *)id v148 = *(_OWORD *)v149;
  char v153 = v148[16];
  v148[16] = v150;
  sub_247FE52C4(v151, v152, v153);
  uint64_t v154 = v120[14];
  uint64_t v155 = &v104[v154];
  uint64_t v156 = &v105[v154];
  uint64_t v158 = *(void *)v156;
  uint64_t v157 = *((void *)v156 + 1);
  *(void *)uint64_t v155 = v158;
  *((void *)v155 + 1) = v157;
  swift_bridgeObjectRelease();
  v104[v120[15]] = v105[v120[15]];
  uint64_t v159 = v120[16];
  uint64_t v160 = (uint64_t)&v104[v159];
  int v161 = &v105[v159];
  if (*(void *)&v104[v159 + 8] < 3uLL)
  {
LABEL_51:
    long long v163 = *((_OWORD *)v161 + 1);
    *(_OWORD *)uint64_t v160 = *(_OWORD *)v161;
    *(_OWORD *)(v160 + 16) = v163;
    goto LABEL_53;
  }
  unint64_t v162 = *((void *)v161 + 1);
  if (v162 < 3)
  {
    sub_247FB33D4(v160, &qword_2692D7018);
    goto LABEL_51;
  }
  *(void *)uint64_t v160 = *(void *)v161;
  *(void *)(v160 + 8) = v162;
  swift_bridgeObjectRelease();
  uint64_t v164 = *((void *)v161 + 3);
  *(void *)(v160 + 16) = *((void *)v161 + 2);
  *(void *)(v160 + 24) = v164;
  swift_bridgeObjectRelease();
LABEL_53:
  *(unsigned char *)(v160 + 32) = v161[32];
  uint64_t v165 = *(int *)(v236 + 24);
  uint64_t v166 = (uint64_t)a1 + v165;
  uint64_t v167 = (char *)v238 + v165;
  unsigned int v168 = *((unsigned __int8 *)a1 + v165 + 40);
  if (v168 > 0xFA)
  {
LABEL_56:
    long long v170 = *((_OWORD *)v167 + 1);
    *(_OWORD *)uint64_t v166 = *(_OWORD *)v167;
    *(_OWORD *)(v166 + 16) = v170;
    *(_OWORD *)(v166 + 25) = *(_OWORD *)(v167 + 25);
    goto LABEL_58;
  }
  unsigned int v169 = v167[40];
  if (v169 > 0xFA)
  {
    sub_2480072C8(v166);
    goto LABEL_56;
  }
  uint64_t v171 = *((void *)v167 + 4);
  uint64_t v172 = *(void *)v166;
  uint64_t v173 = *(void *)(v166 + 8);
  uint64_t v174 = *(void *)(v166 + 16);
  uint64_t v175 = *(void *)(v166 + 24);
  uint64_t v176 = *(void *)(v166 + 32);
  long long v177 = *((_OWORD *)v167 + 1);
  *(_OWORD *)uint64_t v166 = *(_OWORD *)v167;
  *(_OWORD *)(v166 + 16) = v177;
  *(void *)(v166 + 32) = v171;
  *(unsigned char *)(v166 + 40) = v169;
  sub_247FE0600(v172, v173, v174, v175, v176, v168);
LABEL_58:
  uint64_t v178 = *(int *)(a3 + 20);
  uint64_t v179 = (char *)a1 + v178;
  if (*(void *)((char *)a1 + v178 + 24)) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v178);
  }
  long long v180 = *(_OWORD *)((char *)v238 + v178 + 16);
  *(_OWORD *)uint64_t v179 = *(_OWORD *)((char *)v238 + v178);
  *((_OWORD *)v179 + 1) = v180;
  *((void *)v179 + 4) = *(void *)((char *)v238 + v178 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24800866C);
}

uint64_t sub_24800866C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for RepairModel();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for RepairContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_248008750);
}

uint64_t sub_248008750(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for RepairModel();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = a2;
  }
  return result;
}

uint64_t sub_248008810()
{
  uint64_t result = type metadata accessor for RepairModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void destroy for RepairContext.Builder(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_247FE51A0(*(void **)(a1 + 88), *(id *)(a1 + 96), *(void *)(a1 + 104), *(unsigned int *)(a1 + 112) | ((unint64_t)*(unsigned __int16 *)(a1 + 116) << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 200)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 176);
  }
  uint64_t v2 = *(void **)(a1 + 216);
}

uint64_t initializeWithCopy for RepairContext.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    uint64_t v5 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v5;
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    uint64_t v8 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  int v11 = *(void **)(a2 + 88);
  long long v12 = *(void **)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v14 = *(unsigned __int16 *)(a2 + 116);
  uint64_t v15 = *(unsigned int *)(a2 + 112);
  sub_247FE4184(v11, v12, v13, v15 | (v14 << 32));
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 104) = v13;
  *(_WORD *)(a1 + 116) = v14;
  *(_DWORD *)(a1 + 112) = v15;
  uint64_t v16 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v16;
  uint64_t v17 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v17;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v18 = *(void **)(a2 + 168);
  *(void *)(a1 + 168) = v18;
  uint64_t v19 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v20 = v18;
  if (v19)
  {
    uint64_t v21 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = v19;
    *(void *)(a1 + 208) = v21;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v19 - 8))(a1 + 176, a2 + 176, v19);
  }
  else
  {
    long long v22 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v22;
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
  }
  uint64_t v23 = *(void **)(a2 + 216);
  id v24 = v23;
  *(void *)(a1 + 216) = v23;
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  return a1;
}

uint64_t assignWithCopy for RepairContext.Builder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FACD88(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v5 = *(_OWORD *)(a2 + 64);
      long long v7 = *(_OWORD *)(a2 + 16);
      long long v6 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v5;
      *(_OWORD *)(a1 + 16) = v7;
      *(_OWORD *)(a1 + 32) = v6;
    }
  }
  else if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v8 = *(_OWORD *)(a2 + 16);
    long long v9 = *(_OWORD *)(a2 + 32);
    long long v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = v9;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  int v11 = *(void **)(a2 + 88);
  long long v12 = *(void **)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  uint64_t v14 = *(unsigned __int16 *)(a2 + 116);
  uint64_t v15 = *(unsigned int *)(a2 + 112);
  sub_247FE4184(v11, v12, v13, v15 | (v14 << 32));
  uint64_t v16 = *(void **)(a1 + 88);
  uint64_t v17 = *(void **)(a1 + 96);
  uint64_t v18 = *(void *)(a1 + 104);
  unint64_t v19 = *(unsigned int *)(a1 + 112) | ((unint64_t)*(unsigned __int16 *)(a1 + 116) << 32);
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 104) = v13;
  *(_DWORD *)(a1 + 112) = v15;
  *(_WORD *)(a1 + 116) = v14;
  sub_247FE51A0(v16, v17, v18, v19);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v20;
  uint64_t v21 = *(void **)(a1 + 168);
  long long v22 = *(void **)(a2 + 168);
  *(void *)(a1 + 168) = v22;
  id v23 = v22;

  uint64_t v24 = *(void *)(a2 + 200);
  if (!*(void *)(a1 + 200))
  {
    if (v24)
    {
      *(void *)(a1 + 200) = v24;
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      (**(void (***)(uint64_t, uint64_t))(v24 - 8))(a1 + 176, a2 + 176);
      goto LABEL_15;
    }
LABEL_14:
    long long v25 = *(_OWORD *)(a2 + 176);
    long long v26 = *(_OWORD *)(a2 + 192);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(_OWORD *)(a1 + 176) = v25;
    *(_OWORD *)(a1 + 192) = v26;
    goto LABEL_15;
  }
  if (!v24)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 176);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 176), (uint64_t *)(a2 + 176));
LABEL_15:
  uint64_t v27 = *(void **)(a1 + 216);
  uint64_t v28 = *(void **)(a2 + 216);
  id v29 = v28;
  *(void *)(a1 + 216) = v28;

  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  return a1;
}

__n128 __swift_memcpy225_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(unsigned char *)(a1 + 224) = *((unsigned char *)a2 + 224);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for RepairContext.Builder(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8))
  {
    uint64_t v4 = *(void *)(a2 + 8);
    if (v4)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRelease();
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_247FACD88(a1);
  }
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
LABEL_6:
  uint64_t v11 = *(unsigned int *)(a1 + 112);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v12 = *(void *)(a2 + 104);
  __int16 v13 = *(_WORD *)(a2 + 116);
  int v14 = *(_DWORD *)(a2 + 112);
  uint64_t v15 = *(void **)(a1 + 88);
  uint64_t v16 = *(void **)(a1 + 96);
  uint64_t v17 = *(void *)(a1 + 104);
  unint64_t v18 = v11 | ((unint64_t)*(unsigned __int16 *)(a1 + 116) << 32);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = v12;
  *(_DWORD *)(a1 + 112) = v14;
  *(_WORD *)(a1 + 116) = v13;
  sub_247FE51A0(v15, v16, v17, v18);
  uint64_t v19 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v20;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v21 = *(void **)(a1 + 168);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);

  if (*(void *)(a1 + 200)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 176);
  }
  long long v22 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v22;
  uint64_t v23 = *(void *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v24 = *(void **)(a1 + 216);
  *(void *)(a1 + 216) = v23;

  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairContext.Builder(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 225)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 104) >> 24) & 0xFFFF0000 | WORD1(*(void *)(a1 + 104));
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for RepairContext.Builder(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 224) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 225) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 88) = 0;
      *(void *)(result + 96) = 0;
      *(void *)(result + 104) = (-65536 * a2) | ((unint64_t)(-a2 >> 16) << 40);
      *(_WORD *)(result + 116) = 0;
      *(_DWORD *)(result + 112) = 0;
      return result;
    }
    *(unsigned char *)(result + 225) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairContext.Builder()
{
  return &type metadata for RepairContext.Builder;
}

void *initializeBufferWithCopyOfBuffer for RepairContext.Builder.MissingExpectedValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for BLEDevice()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for RepairContext.Builder.MissingExpectedValue(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for RepairContext.Builder.MissingExpectedValue(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RepairContext.Builder.MissingExpectedValue(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RepairContext.Builder.MissingExpectedValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairContext.Builder.MissingExpectedValue()
{
  return &type metadata for RepairContext.Builder.MissingExpectedValue;
}

unsigned char *storeEnumTagSinglePayload for RepairContext.Builder.Failure(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2480092B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RepairContext.Builder.Failure()
{
  return &type metadata for RepairContext.Builder.Failure;
}

unint64_t sub_2480092EC()
{
  unint64_t result = qword_2692D7030;
  if (!qword_2692D7030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7030);
  }
  return result;
}

uint64_t sub_248009340(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void __swiftcall IdMSAccount.ID.init(altDsid:username:dsid:name:deviceUserId:)(AppleIDSetup::IdMSAccount::ID *__return_ptr retstr, Swift::String altDsid, Swift::String_optional username, Swift::String_optional dsid, Swift::String_optional name, Swift::String_optional deviceUserId)
{
  retstr->altDsid = altDsid;
  retstr->username = username;
  retstr->dsid = dsid;
  retstr->name = name;
  retstr->deviceUserId = deviceUserId;
}

uint64_t IdMSAccount.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 IdMSAccount.id.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  __n128 v5 = (__n128)a1[3];
  long long v6 = a1[2];
  uint64_t v2 = *((void *)a1 + 8);
  uint64_t v3 = *((void *)a1 + 9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = v8;
  *(_OWORD *)(v1 + 16) = v7;
  __n128 result = v5;
  *(_OWORD *)(v1 + 32) = v6;
  *(__n128 *)(v1 + 48) = v5;
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  return result;
}

uint64_t (*IdMSAccount.id.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.name.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for IdMSAccount() + 20);
  uint64_t v4 = sub_248174700();
  __n128 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t IdMSAccount.name.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for IdMSAccount() + 20);
  uint64_t v4 = sub_248174700();
  __n128 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*IdMSAccount.name.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.credential.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for IdMSAccount() + 24);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v11 = *(void *)(v3 + 56);
  uint64_t v12 = *(void *)(v3 + 64);
  LOBYTE(v3) = *(unsigned char *)(v3 + 72);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v12;
  *(unsigned char *)(a1 + 72) = v3;
  return sub_247FABF8C(v4, v5, v6, v7, v8, v9, v10, v11, v12, v3);
}

__n128 IdMSAccount.credential.setter(long long *a1)
{
  long long v9 = *a1;
  long long v7 = a1[2];
  long long v8 = a1[1];
  __n128 v6 = (__n128)a1[3];
  uint64_t v2 = *((void *)a1 + 8);
  char v3 = *((unsigned char *)a1 + 72);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for IdMSAccount() + 24);
  sub_247FAC1EC(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(unsigned char *)(v4 + 72));
  *(_OWORD *)uint64_t v4 = v9;
  *(_OWORD *)(v4 + 16) = v8;
  __n128 result = v6;
  *(_OWORD *)(v4 + 32) = v7;
  *(__n128 *)(v4 + 48) = v6;
  *(void *)(v4 + 64) = v2;
  *(unsigned char *)(v4 + 72) = v3;
  return result;
}

uint64_t (*IdMSAccount.credential.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.services.getter()
{
  type metadata accessor for IdMSAccount();
  return swift_bridgeObjectRetain();
}

uint64_t IdMSAccount.services.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for IdMSAccount() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*IdMSAccount.services.modify())()
{
  return nullsub_1;
}

__n128 IdMSAccount.init(id:name:credential:services:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 8);
  long long v20 = a3[1];
  long long v21 = *a3;
  __n128 v18 = (__n128)a3[3];
  long long v19 = a3[2];
  uint64_t v9 = *((void *)a3 + 8);
  char v10 = *((unsigned char *)a3 + 72);
  *(void *)a5 = *(void *)a1;
  *(void *)(a5 + 8) = v8;
  long long v11 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a5 + 32) = v11;
  long long v12 = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(a5 + 48) = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a5 + 64) = v12;
  __int16 v13 = (int *)type metadata accessor for IdMSAccount();
  uint64_t v14 = a5 + v13[5];
  uint64_t v15 = sub_248174700();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, a2, v15);
  uint64_t v16 = a5 + v13[6];
  *(_OWORD *)uint64_t v16 = v21;
  *(_OWORD *)(v16 + 16) = v20;
  __n128 result = v18;
  *(_OWORD *)(v16 + 32) = v19;
  *(__n128 *)(v16 + 48) = v18;
  *(void *)(v16 + 64) = v9;
  *(unsigned char *)(v16 + 72) = v10;
  *(void *)(a5 + v13[7]) = a4;
  return result;
}

uint64_t IdMSAccount.description.getter()
{
  strcpy((char *)v1, "IdMSAccount(");
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  IdMSAccount.ID.description.getter();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  return v1[0];
}

uint64_t IdMSAccount.debugDescription.getter()
{
  return 0;
}

uint64_t static IdMSAccount.ID.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_248175CE0();
  }
}

uint64_t IdMSAccount.hash(into:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_24801BFD8(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v4 = v1 + *(int *)(v3 + 24);
  uint64_t v6 = *(void *)v4;
  uint64_t v5 = *(void *)(v4 + 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v4 + 40);
  uint64_t v10 = *(void *)(v4 + 56);
  switch(*(unsigned char *)(v4 + 72))
  {
    case 1:
      uint64_t v14 = *(void *)(v4 + 64);
      uint64_t v15 = *(void *)(v4 + 32);
      uint64_t v16 = *(void *)(v4 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v7)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        char v11 = 1;
        goto LABEL_6;
      }
      sub_248175E80();
      sub_247FAC1EC(v6, v5, v8, 0, v15, v9, v16, v10, v14, 1);
      break;
    case 2:
      uint64_t v14 = *(void *)(v4 + 64);
      uint64_t v15 = *(void *)(v4 + 32);
      uint64_t v16 = *(void *)(v4 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      char v11 = 2;
LABEL_6:
      sub_247FAC1EC(v6, v5, v8, v7, v15, v9, v16, v10, v14, v11);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v12 = *(void *)(v1 + *(int *)(v3 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC(a1, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24800A0CC()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x69746E6564657263;
      break;
    case 3:
      uint64_t result = 0x7365636976726573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24800A14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248016E08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24800A174(uint64_t a1)
{
  unint64_t v2 = sub_248016028();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800A1B0(uint64_t a1)
{
  unint64_t v2 = sub_248016028();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IdMSAccount.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7038);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016028();
  sub_248175F60();
  uint64_t v9 = *(void *)(v3 + 8);
  *(void *)&long long v21 = *(void *)v3;
  *((void *)&v21 + 1) = v9;
  long long v10 = *(_OWORD *)(v3 + 32);
  long long v22 = *(_OWORD *)(v3 + 16);
  long long v23 = v10;
  long long v11 = *(_OWORD *)(v3 + 64);
  long long v24 = *(_OWORD *)(v3 + 48);
  long long v25 = v11;
  char v20 = 0;
  sub_24801607C();
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v12 = type metadata accessor for IdMSAccount();
    LOBYTE(v21) = 1;
    sub_248174700();
    sub_24801BFD8(&qword_2692D7050, MEMORY[0x263F06A30]);
    sub_248175BE0();
    __int16 v13 = (long long *)(v3 + *(int *)(v12 + 24));
    uint64_t v14 = *((void *)v13 + 8);
    char v15 = *((unsigned char *)v13 + 72);
    long long v16 = v13[1];
    long long v21 = *v13;
    long long v22 = v16;
    long long v17 = v13[3];
    long long v23 = v13[2];
    long long v24 = v17;
    *(void *)&long long v25 = v14;
    BYTE8(v25) = v15;
    char v20 = 2;
    sub_2480160D0();
    sub_248175BE0();
    *(void *)&long long v21 = *(void *)(v3 + *(int *)(v12 + 28));
    char v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
    sub_2480161CC((unint64_t *)&qword_2692D67E0, &qword_2692D50D0);
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IdMSAccount.hashValue.getter()
{
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_24801BFD8(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 40);
  uint64_t v9 = *(void *)(v2 + 48);
  uint64_t v8 = *(void *)(v2 + 56);
  switch(*(unsigned char *)(v2 + 72))
  {
    case 1:
      uint64_t v19 = *(void *)(v2 + 32);
      uint64_t v20 = *(void *)(v2 + 64);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_248175E80();
      if (v5)
      {
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        uint64_t v18 = v20;
        uint64_t v10 = v3;
        uint64_t v11 = v4;
        uint64_t v12 = v6;
        uint64_t v13 = v5;
      }
      else
      {
        uint64_t v18 = v20;
        uint64_t v10 = v3;
        uint64_t v11 = v4;
        uint64_t v12 = v6;
        uint64_t v13 = 0;
      }
      sub_247FAC1EC(v10, v11, v12, v13, v19, v7, v9, v8, v18, 1);
      break;
    case 2:
      uint64_t v21 = *(void *)(v2 + 40);
      uint64_t v22 = *(void *)(v2 + 48);
      uint64_t v14 = *(void *)(v2 + 64);
      uint64_t v15 = *(void *)(v2 + 32);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FAC1EC(v3, v4, v6, v5, v15, v21, v22, v8, v14, 2);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v16 = *(void *)(v0 + *(int *)(v1 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v23, v16);
  swift_bridgeObjectRelease();
  return sub_248175EC0();
}

uint64_t IdMSAccount.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = sub_248174700();
  uint64_t v31 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7060);
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IdMSAccount();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_248016028();
  uint64_t v33 = v8;
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  uint64_t v27 = v9;
  uint64_t v28 = v4;
  uint64_t v13 = v31;
  char v40 = 0;
  sub_248016124();
  uint64_t v14 = v32;
  sub_248175AF0();
  uint64_t v15 = *((void *)&v35 + 1);
  uint64_t v16 = (uint64_t)v11;
  *(void *)uint64_t v11 = v35;
  *((void *)v11 + 1) = v15;
  long long v17 = v37;
  *((_OWORD *)v11 + 1) = v36;
  *((_OWORD *)v11 + 2) = v17;
  long long v18 = v39;
  *((_OWORD *)v11 + 3) = v38;
  *((_OWORD *)v11 + 4) = v18;
  LOBYTE(v35) = 1;
  sub_24801BFD8(&qword_2692D7070, MEMORY[0x263F06A30]);
  uint64_t v19 = v28;
  sub_248175AF0();
  uint64_t v20 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v16 + *(int *)(v27 + 20), v6, v19);
  char v40 = 2;
  sub_248016178();
  sub_248175AF0();
  uint64_t v21 = v39;
  char v22 = BYTE8(v39);
  uint64_t v23 = v16 + *(int *)(v20 + 24);
  long long v24 = v36;
  *(_OWORD *)uint64_t v23 = v35;
  *(_OWORD *)(v23 + 16) = v24;
  long long v25 = v38;
  *(_OWORD *)(v23 + 32) = v37;
  *(_OWORD *)(v23 + 48) = v25;
  *(void *)(v23 + 64) = v21;
  *(unsigned char *)(v23 + 72) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D67D8);
  char v40 = 3;
  sub_2480161CC((unint64_t *)&qword_2692D6858, &qword_2692D5100);
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v14);
  *(void *)(v16 + *(int *)(v20 + 28)) = v35;
  sub_248016260(v16, v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return sub_2480162C4(v16);
}

uint64_t sub_24800AD88()
{
  strcpy((char *)v1, "IdMSAccount(");
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  IdMSAccount.ID.description.getter();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  return v1[0];
}

uint64_t sub_24800AEA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return IdMSAccount.init(from:)(a1, a2);
}

uint64_t sub_24800AEBC(void *a1)
{
  return IdMSAccount.encode(to:)(a1);
}

uint64_t sub_24800AEE0(uint64_t a1, uint64_t a2)
{
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_248174700();
  sub_24801BFD8(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = *(void *)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v8 = *(void *)(v4 + 16);
  uint64_t v7 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v4 + 40);
  uint64_t v11 = *(void *)(v4 + 48);
  uint64_t v10 = *(void *)(v4 + 56);
  switch(*(unsigned char *)(v4 + 72))
  {
    case 1:
      uint64_t v21 = *(void *)(v4 + 32);
      uint64_t v22 = *(void *)(v4 + 64);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_248175E80();
      if (v7)
      {
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        uint64_t v20 = v22;
        uint64_t v12 = v5;
        uint64_t v13 = v6;
        uint64_t v14 = v8;
        uint64_t v15 = v7;
      }
      else
      {
        uint64_t v20 = v22;
        uint64_t v12 = v5;
        uint64_t v13 = v6;
        uint64_t v14 = v8;
        uint64_t v15 = 0;
      }
      sub_247FAC1EC(v12, v13, v14, v15, v21, v9, v11, v10, v20, 1);
      break;
    case 2:
      uint64_t v23 = *(void *)(v4 + 40);
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v16 = *(void *)(v4 + 64);
      uint64_t v17 = *(void *)(v4 + 32);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FAC1EC(v5, v6, v8, v7, v17, v23, v24, v10, v16, 2);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v18 = *(void *)(v2 + *(int *)(a2 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v25, v18);
  swift_bridgeObjectRelease();
  return sub_248175EC0();
}

uint64_t IdMSAccount.Credential.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  switch(*(unsigned char *)(v0 + 72))
  {
    case 1:
      sub_248175E70();
      sub_2481751A0();
      if (v1)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        goto LABEL_5;
      }
      uint64_t result = sub_248175E80();
      break;
    case 2:
      sub_248175E70();
      uint64_t result = sub_2481751A0();
      break;
    case 3:
      uint64_t result = sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
LABEL_5:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

unint64_t sub_24800B494()
{
  unint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F696E61706D6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x7773736150776172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24800B534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248016FA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24800B55C(uint64_t a1)
{
  unint64_t v2 = sub_24801657C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800B598(uint64_t a1)
{
  unint64_t v2 = sub_24801657C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24800B5D4(uint64_t a1)
{
  unint64_t v2 = sub_248016678();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800B610(uint64_t a1)
{
  unint64_t v2 = sub_248016678();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24800B64C(uint64_t a1)
{
  unint64_t v2 = sub_248016720();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800B688(uint64_t a1)
{
  unint64_t v2 = sub_248016720();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24800B6C4()
{
  if (*v0) {
    return 0x61746144736D6469;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_24800B710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248017188(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24800B738(uint64_t a1)
{
  unint64_t v2 = sub_248016624();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800B774(uint64_t a1)
{
  unint64_t v2 = sub_248016624();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24800B7B0(uint64_t a1)
{
  unint64_t v2 = sub_2480165D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800B7EC(uint64_t a1)
{
  unint64_t v2 = sub_2480165D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IdMSAccount.Credential.encode(to:)(void *a1)
{
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7080);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v33 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7088);
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v34 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7090);
  uint64_t v31 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7098);
  uint64_t v30 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D70A0);
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1[1];
  uint64_t v41 = *v1;
  uint64_t v42 = v13;
  uint64_t v14 = v1[2];
  uint64_t v39 = v1[3];
  uint64_t v40 = v14;
  uint64_t v29 = v1[4];
  uint64_t v28 = v1[5];
  uint64_t v27 = v1[6];
  uint64_t v26 = v1[7];
  uint64_t v25 = v1[8];
  uint64_t v15 = *((unsigned __int8 *)v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24801657C();
  sub_248175F60();
  switch(v15)
  {
    case 1:
      LOBYTE(v45) = 2;
      sub_248016624();
      uint64_t v19 = v34;
      uint64_t v20 = v44;
      sub_248175B50();
      LOBYTE(v45) = 0;
      uint64_t v21 = v38;
      uint64_t v22 = v54;
      sub_248175BB0();
      if (!v22)
      {
        LOBYTE(v45) = 1;
        sub_248175B60();
      }
      uint64_t v23 = v36;
      goto LABEL_7;
    case 2:
      LOBYTE(v45) = 3;
      sub_2480165D0();
      uint64_t v19 = v33;
      uint64_t v20 = v44;
      sub_248175B50();
      uint64_t v21 = v37;
      sub_248175BB0();
      uint64_t v23 = v35;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v21);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v12, v20);
      break;
    case 3:
      LOBYTE(v45) = 0;
      sub_248016720();
      uint64_t v24 = v44;
      sub_248175B50();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v7);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v12, v24);
      break;
    default:
      LOBYTE(v45) = 1;
      sub_248016678();
      uint64_t v16 = v44;
      sub_248175B50();
      uint64_t v45 = v41;
      uint64_t v46 = v42;
      uint64_t v47 = v40;
      uint64_t v48 = v39;
      uint64_t v49 = v29;
      uint64_t v50 = v28;
      uint64_t v51 = v27;
      uint64_t v52 = v26;
      uint64_t v53 = v25;
      sub_2480166CC();
      uint64_t v17 = v32;
      sub_248175BE0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v17);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v12, v16);
      break;
  }
  return result;
}

uint64_t IdMSAccount.Credential.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 72);
  sub_248175E50();
  switch(v2)
  {
    case 1:
      sub_248175E70();
      sub_2481751A0();
      if (v1)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        goto LABEL_5;
      }
      sub_248175E80();
      break;
    case 2:
      sub_248175E70();
      sub_2481751A0();
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      break;
  }
  return sub_248175EC0();
}

uint64_t IdMSAccount.Credential.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D70D8);
  uint64_t v63 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v67 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D70E0);
  uint64_t v64 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v66 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D70E8);
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D70F0);
  uint64_t v58 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D70F8);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_24801657C();
  uint64_t v16 = v78;
  sub_248175F20();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  }
  uint64_t v57 = v8;
  uint64_t v18 = v66;
  uint64_t v17 = v67;
  uint64_t v78 = v12;
  uint64_t v19 = sub_248175B30();
  uint64_t v20 = v19;
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v23 = sub_2481758A0();
    swift_allocError();
    uint64_t v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D52B0);
    void *v25 = &type metadata for IdMSAccount.Credential;
    sub_248175A60();
    sub_248175880();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v14, v11);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  }
  uint64_t v21 = v14;
  switch(*(unsigned char *)(v19 + 32))
  {
    case 1:
      uint64_t v27 = v78;
      LOBYTE(v69) = 1;
      sub_248016678();
      uint64_t v28 = v14;
      sub_248175A50();
      sub_248016774();
      uint64_t v42 = v62;
      sub_248175AF0();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v7, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v11);
      uint64_t v64 = 0;
      char v41 = 0;
      uint64_t v32 = v69;
      uint64_t v33 = v70;
      uint64_t v34 = v71;
      uint64_t v35 = v72;
      uint64_t v36 = v73;
      uint64_t v37 = v74;
      uint64_t v38 = v75;
      uint64_t v39 = v76;
      uint64_t v40 = v77;
      goto LABEL_10;
    case 2:
      uint64_t v29 = v78;
      LOBYTE(v69) = 2;
      sub_248016624();
      sub_248175A50();
      uint64_t v67 = v14;
      LOBYTE(v69) = 0;
      uint64_t v43 = v60;
      uint64_t v44 = sub_248175AC0();
      uint64_t v62 = v20;
      uint64_t v63 = v48;
      uint64_t v61 = v44;
      uint64_t v67 = (char *)v11;
      LOBYTE(v69) = 1;
      uint64_t v49 = sub_248175A70();
      uint64_t v50 = (void (**)(char *, uint64_t))(v64 + 8);
      uint64_t v64 = 0;
      uint64_t v34 = v49;
      uint64_t v35 = v54;
      (*v50)(v18, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v29 + 8))(v14, v67);
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      char v41 = 1;
      uint64_t v55 = (uint64_t)v68;
      uint64_t v56 = v65;
      uint64_t v32 = v61;
      uint64_t v33 = v63;
      goto LABEL_11;
    case 3:
      uint64_t v30 = v78;
      LOBYTE(v69) = 3;
      sub_2480165D0();
      uint64_t v31 = v17;
      sub_248175A50();
      uint64_t v45 = v21;
      uint64_t v46 = v59;
      uint64_t v47 = sub_248175AC0();
      uint64_t v64 = 0;
      uint64_t v52 = v51;
      uint64_t v53 = v47;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v31, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v45, v11);
      uint64_t v33 = v52;
      uint64_t v32 = v53;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      char v41 = 2;
      goto LABEL_10;
    default:
      uint64_t v22 = v78;
      LOBYTE(v69) = 0;
      sub_248016720();
      sub_248175A50();
      uint64_t v64 = 0;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v11);
      uint64_t v32 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      char v41 = 3;
LABEL_10:
      uint64_t v55 = (uint64_t)v68;
      uint64_t v56 = v65;
LABEL_11:
      *(void *)uint64_t v56 = v32;
      *(void *)(v56 + 8) = v33;
      *(void *)(v56 + 16) = v34;
      *(void *)(v56 + 24) = v35;
      *(void *)(v56 + 32) = v36;
      *(void *)(v56 + 40) = v37;
      *(void *)(v56 + 48) = v38;
      *(void *)(v56 + 56) = v39;
      *(void *)(v56 + 64) = v40;
      *(unsigned char *)(v56 + 72) = v41;
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(v55);
      break;
  }
  return result;
}

uint64_t sub_24800C924@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return IdMSAccount.Credential.init(from:)(a1, a2);
}

uint64_t sub_24800C93C(void *a1)
{
  return IdMSAccount.Credential.encode(to:)(a1);
}

uint64_t sub_24800C960()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 72);
  sub_248175E50();
  switch(v2)
  {
    case 1:
      sub_248175E70();
      sub_2481751A0();
      if (v1)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        goto LABEL_5;
      }
      sub_248175E80();
      break;
    case 2:
      sub_248175E70();
      sub_2481751A0();
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      break;
  }
  return sub_248175EC0();
}

uint64_t IdMSAccount.ID.altDsid.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.ID.altDsid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IdMSAccount.ID.altDsid.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.ID.username.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.ID.username.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IdMSAccount.ID.username.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.ID.dsid.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.ID.dsid.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*IdMSAccount.ID.dsid.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.ID.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.ID.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*IdMSAccount.ID.name.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.ID.deviceUserId.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.ID.deviceUserId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*IdMSAccount.ID.deviceUserId.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.ID.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t IdMSAccount.ID.description.getter()
{
  if (*(void *)(v0 + 72))
  {
    sub_248175850();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751D0();
    swift_bridgeObjectRelease();
    sub_2481751D0();
    swift_bridgeObjectRetain();
    sub_2481751D0();
    swift_bridgeObjectRelease();
    sub_2481751D0();
    swift_bridgeObjectRetain();
    sub_2481751D0();
    swift_bridgeObjectRelease();
    sub_2481751D0();
    sub_2481751D0();
  }
  else
  {
    sub_248175850();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_2481751D0();
    swift_bridgeObjectRelease();
    sub_2481751D0();
    swift_bridgeObjectRetain();
    sub_2481751D0();
    swift_bridgeObjectRelease();
    sub_2481751D0();
    swift_bridgeObjectRetain();
    sub_2481751D0();
    swift_bridgeObjectRelease();
  }
  sub_2481751D0();
  return 3825960;
}

uint64_t IdMSAccount.ID.debugDescription.getter()
{
  return IdMSAccount.ID.description.getter();
}

uint64_t sub_24800D0DC()
{
  uint64_t result = 0x64697344746C61;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656D616E72657375;
      break;
    case 2:
      uint64_t result = 1684632420;
      break;
    case 3:
      uint64_t result = 1701667182;
      break;
    case 4:
      uint64_t result = 0x7355656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24800D180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24801729C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24800D1A8(uint64_t a1)
{
  unint64_t v2 = sub_2480167C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800D1E4(uint64_t a1)
{
  unint64_t v2 = sub_2480167C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IdMSAccount.ID.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7108);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v13[7] = v1[3];
  v13[8] = v7;
  uint64_t v8 = v1[4];
  v13[5] = v1[5];
  v13[6] = v8;
  uint64_t v9 = v1[6];
  void v13[3] = v1[7];
  v13[4] = v9;
  uint64_t v10 = v1[8];
  v13[1] = v1[9];
  v13[2] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480167C8();
  sub_248175F60();
  char v18 = 0;
  uint64_t v11 = v13[9];
  sub_248175BB0();
  if (!v11)
  {
    char v17 = 1;
    sub_248175B60();
    char v16 = 2;
    sub_248175B60();
    char v15 = 3;
    sub_248175B60();
    char v14 = 4;
    sub_248175B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdMSAccount.ID.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t IdMSAccount.ID.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7118);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480167C8();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v40 = 0;
    uint64_t v9 = sub_248175AC0();
    uint64_t v12 = v11;
    uint64_t v35 = v9;
    char v39 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_248175A70();
    uint64_t v15 = v14;
    uint64_t v32 = v13;
    uint64_t v33 = a2;
    uint64_t v34 = v12;
    char v38 = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_248175A70();
    uint64_t v18 = v17;
    uint64_t v31 = v16;
    char v37 = 3;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_248175A70();
    uint64_t v21 = v20;
    uint64_t v30 = v19;
    char v36 = 4;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_248175A70();
    uint64_t v24 = v23;
    uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v29 = v22;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = v33;
    uint64_t v27 = v34;
    *uint64_t v33 = v35;
    v26[1] = v27;
    v26[2] = v32;
    v26[3] = v15;
    v26[4] = v31;
    v26[5] = v18;
    v26[6] = v30;
    v26[7] = v21;
    v26[8] = v29;
    v26[9] = v24;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24800D86C()
{
  return IdMSAccount.ID.description.getter();
}

uint64_t sub_24800D8B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IdMSAccount.ID.init(from:)(a1, a2);
}

uint64_t sub_24800D8C8(void *a1)
{
  return IdMSAccount.ID.encode(to:)(a1);
}

uint64_t sub_24800D8E0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_248175CE0();
  }
}

uint64_t sub_24800D910()
{
  return sub_248175EC0();
}

uint64_t sub_24800D95C()
{
  return sub_2481751A0();
}

uint64_t sub_24800D964()
{
  return sub_248175EC0();
}

uint64_t IdMSAccount.SRPResults.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 56);
  *(void *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 IdMSAccount.SRPResults.id.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  __n128 v5 = (__n128)a1[3];
  long long v6 = a1[2];
  uint64_t v2 = *((void *)a1 + 8);
  uint64_t v3 = *((void *)a1 + 9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = v8;
  *(_OWORD *)(v1 + 16) = v7;
  __n128 result = v5;
  *(_OWORD *)(v1 + 32) = v6;
  *(__n128 *)(v1 + 48) = v5;
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  return result;
}

uint64_t (*IdMSAccount.SRPResults.id.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.SRPResults.archivedData.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  sub_247FB8458(v1, *(void *)(v0 + 88));
  return v1;
}

uint64_t IdMSAccount.SRPResults.archivedData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_247FB846C(*(void *)(v2 + 80), *(void *)(v2 + 88));
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return result;
}

uint64_t (*IdMSAccount.SRPResults.archivedData.modify())()
{
  return nullsub_1;
}

__n128 IdMSAccount.SRPResults.init(id:archivedData:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)a4 = *(void *)a1;
  *(void *)(a4 + 8) = v4;
  long long v5 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a4 + 32) = v5;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v7 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(a4 + 48) = result;
  *(_OWORD *)(a4 + 64) = v7;
  *(void *)(a4 + 80) = a2;
  *(void *)(a4 + 88) = a3;
  return result;
}

uint64_t IdMSAccount.SRPResults.description.getter()
{
  strcpy((char *)v1, "SRPResults(id:");
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  IdMSAccount.ID.description.getter();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  return v1[0];
}

uint64_t IdMSAccount.SRPResults.debugDescription.getter()
{
  strcpy((char *)v1, "SRPResults(id:");
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  IdMSAccount.ID.description.getter();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  sub_2481751D0();
  sub_24801681C();
  sub_248175CC0();
  sub_2481751D0();
  swift_bridgeObjectRetain();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t IdMSAccount.SRPResults.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 80);
  unint64_t v2 = *(void *)(v0 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2 >> 60 == 15) {
    return sub_248175E80();
  }
  sub_248175E80();
  sub_247FB6C20(v1, v2);
  sub_2481747E0();
  return sub_247FB846C(v1, v2);
}

uint64_t sub_24800E05C()
{
  if (*v0) {
    return 0x6465766968637261;
  }
  else {
    return 25705;
  }
}

uint64_t sub_24800E094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480174B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24800E0BC(uint64_t a1)
{
  unint64_t v2 = sub_248016870();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800E0F8(uint64_t a1)
{
  unint64_t v2 = sub_248016870();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IdMSAccount.SRPResults.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7128);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v18 = v1[1];
  long long v19 = v7;
  long long v8 = v1[2];
  long long v16 = v1[3];
  long long v17 = v8;
  uint64_t v10 = *((void *)v1 + 8);
  uint64_t v9 = *((void *)v1 + 9);
  uint64_t v11 = *((void *)v1 + 10);
  uint64_t v14 = *((void *)v1 + 11);
  uint64_t v15 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016870();
  sub_248175F60();
  long long v21 = v19;
  long long v22 = v18;
  long long v23 = v17;
  long long v24 = v16;
  uint64_t v25 = v10;
  uint64_t v26 = v9;
  char v27 = 0;
  sub_24801607C();
  uint64_t v12 = v20;
  sub_248175BE0();
  if (!v12)
  {
    *(void *)&long long v21 = v15;
    *((void *)&v21 + 1) = v14;
    char v27 = 1;
    sub_2480168C4();
    sub_248175B90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdMSAccount.SRPResults.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  unint64_t v2 = *(void *)(v0 + 88);
  sub_248175E50();
  sub_2481751A0();
  sub_248175E80();
  if (v2 >> 60 != 15)
  {
    sub_247FB6C20(v1, v2);
    sub_2481747E0();
    sub_247FB846C(v1, v2);
  }
  return sub_248175EC0();
}

uint64_t IdMSAccount.SRPResults.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7138);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016870();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v21 = 0;
    unint64_t v22 = 0xF000000000000000;
  }
  else
  {
    char v44 = 0;
    sub_248016124();
    sub_248175AF0();
    unint64_t v10 = v35;
    uint64_t v28 = v34;
    uint64_t v29 = a2;
    uint64_t v11 = v37;
    uint64_t v26 = v38;
    uint64_t v27 = v36;
    uint64_t v30 = v39;
    uint64_t v12 = v41;
    uint64_t v13 = v43;
    uint64_t v24 = v42;
    uint64_t v25 = v40;
    char v44 = 1;
    sub_248016918();
    unint64_t v33 = v10;
    swift_bridgeObjectRetain();
    uint64_t v32 = v11;
    uint64_t v14 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v13;
    swift_bridgeObjectRetain();
    sub_248175AA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = v34;
    unint64_t v16 = v35;
    sub_247FB8458(v34, v35);
    sub_247FB846C(0, 0xF000000000000000);
    unint64_t v17 = v33;
    swift_bridgeObjectRetain();
    uint64_t v18 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = v31;
    swift_bridgeObjectRetain();
    sub_247FB8458(v15, v16);
    sub_247FB846C(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v29;
    *uint64_t v29 = v28;
    v20[1] = v17;
    void v20[2] = v27;
    v20[3] = v18;
    v20[4] = v26;
    v20[5] = v14;
    v20[6] = v25;
    v20[7] = v12;
    v20[8] = v24;
    v20[9] = v19;
    v20[10] = v15;
    v20[11] = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v15;
    unint64_t v22 = v16;
  }
  return sub_247FB846C(v21, v22);
}

uint64_t sub_24800E754@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IdMSAccount.SRPResults.init(from:)(a1, a2);
}

uint64_t sub_24800E76C(void *a1)
{
  return IdMSAccount.SRPResults.encode(to:)(a1);
}

uint64_t sub_24800E788()
{
  uint64_t v1 = *(void *)(v0 + 80);
  unint64_t v2 = *(void *)(v0 + 88);
  sub_248175E50();
  sub_2481751A0();
  sub_248175E80();
  if (v2 >> 60 != 15)
  {
    sub_247FB6C20(v1, v2);
    sub_2481747E0();
    sub_247FB846C(v1, v2);
  }
  return sub_248175EC0();
}

uint64_t sub_24800E834()
{
  uint64_t v1 = *(void *)(v0 + 80);
  unint64_t v2 = *(void *)(v0 + 88);
  sub_2481751A0();
  if (v2 >> 60 == 15) {
    return sub_248175E80();
  }
  sub_248175E80();
  sub_247FB6C20(v1, v2);
  sub_2481747E0();
  return sub_247FB846C(v1, v2);
}

uint64_t sub_24800E8D0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  unint64_t v2 = *(void *)(v0 + 88);
  sub_248175E50();
  sub_2481751A0();
  sub_248175E80();
  if (v2 >> 60 != 15)
  {
    sub_247FB6C20(v1, v2);
    sub_2481747E0();
    sub_247FB846C(v1, v2);
  }
  return sub_248175EC0();
}

uint64_t IdMSAccount.AnisettePackage.machineID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.AnisettePackage.oneTimePassword.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.AnisettePackage.routingInfo.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t IdMSAccount.AnisettePackage.init(machineID:oneTimePassword:routingInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

unint64_t IdMSAccount.AnisettePackage.description.getter()
{
  return 0xD000000000000014;
}

unint64_t IdMSAccount.AnisettePackage.debugDescription.getter()
{
  return IdMSAccount.AnisettePackage.description.getter();
}

uint64_t IdMSAccount.AnisettePackage.hash(into:)()
{
  return sub_248175EB0();
}

uint64_t sub_24800EBE4()
{
  uint64_t v1 = 0x50656D6954656E6FLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x49676E6974756F72;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x49656E696863616DLL;
  }
}

uint64_t sub_24800EC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2480175A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24800EC80(uint64_t a1)
{
  unint64_t v2 = sub_248016BBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800ECBC(uint64_t a1)
{
  unint64_t v2 = sub_248016BBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IdMSAccount.AnisettePackage.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7148);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v10[1] = v1[3];
  v10[2] = v7;
  v10[0] = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016BBC();
  sub_248175F60();
  char v13 = 0;
  uint64_t v8 = v10[3];
  sub_248175BB0();
  if (!v8)
  {
    char v12 = 1;
    sub_248175BB0();
    char v11 = 2;
    sub_248175C10();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdMSAccount.AnisettePackage.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t IdMSAccount.AnisettePackage.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7158);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016BBC();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v24 = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  uint64_t v21 = v9;
  char v23 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_248175AC0();
  uint64_t v14 = v13;
  uint64_t v19 = v12;
  char v22 = 2;
  swift_bridgeObjectRetain();
  uint64_t v20 = v14;
  uint64_t v15 = sub_248175B20();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v20;
  *a2 = v21;
  a2[1] = v11;
  a2[2] = v19;
  a2[3] = v16;
  a2[4] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24800F1C4()
{
  return IdMSAccount.AnisettePackage.description.getter();
}

uint64_t sub_24800F204@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IdMSAccount.AnisettePackage.init(from:)(a1, a2);
}

uint64_t sub_24800F21C(void *a1)
{
  return IdMSAccount.AnisettePackage.encode(to:)(a1);
}

uint64_t sub_24800F238()
{
  return sub_248175EC0();
}

uint64_t sub_24800F2D8()
{
  return sub_248175EB0();
}

uint64_t sub_24800F360()
{
  return sub_248175EC0();
}

uint64_t IdMSAccount.DeviceInfo.deviceIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.DeviceInfo.deviceIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IdMSAccount.DeviceInfo.deviceIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.DeviceInfo.serverFriendlyDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.DeviceInfo.serverFriendlyDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*IdMSAccount.DeviceInfo.serverFriendlyDescription.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.DeviceInfo.localeInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_247FF6AA4(v2, v3);
}

__n128 IdMSAccount.DeviceInfo.localeInfo.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  sub_247FF6BFC(v1[4], v1[5]);
  __n128 result = v5;
  *((__n128 *)v1 + 2) = v5;
  v1[6] = v2;
  v1[7] = v3;
  return result;
}

uint64_t (*IdMSAccount.DeviceInfo.localeInfo.modify())()
{
  return nullsub_1;
}

uint64_t IdMSAccount.DeviceInfo.isLegacy.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t IdMSAccount.DeviceInfo.isLegacy.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t (*IdMSAccount.DeviceInfo.isLegacy.modify())()
{
  return nullsub_1;
}

void __swiftcall IdMSAccount.DeviceInfo.init(deviceIdentifier:serverFriendlyDescription:localeInfo:isLegacy:)(AppleIDSetup::IdMSAccount::DeviceInfo *__return_ptr retstr, Swift::String deviceIdentifier, Swift::String serverFriendlyDescription, AppleIDSetup::SetupReport::LocaleInfo_optional localeInfo, Swift::Bool isLegacy)
{
  retstr->deviceIdentifier = deviceIdentifier;
  retstr->serverFriendlyDescription = serverFriendlyDescription;
  long long v5 = *(_OWORD *)(localeInfo.value.localeID._countAndFlagsBits + 16);
  retstr->localeInfo.value.localeID = *(Swift::String *)localeInfo.value.localeID._countAndFlagsBits;
  *(_OWORD *)&retstr->localeInfo.value.languages._rawValue = v5;
  retstr->isLegacy = (Swift::Bool)localeInfo.value.localeID._object;
}

void static IdMSAccount.DeviceInfo.current.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_248174900();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  long long v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(self, sel_currentDevice);
  if (v6)
  {
    uint64_t v7 = v6;
    sub_2481748F0();
    uint64_t v8 = sub_2481748D0();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v11 = sub_2481748E0();
    uint64_t v12 = (__CFString *)sub_248175130();
    CFPropertyListRef v13 = CFPreferencesCopyValue(v12, (CFStringRef)*MEMORY[0x263EFFE48], (CFStringRef)*MEMORY[0x263EFFE70], (CFStringRef)*MEMORY[0x263EFFE50]);

    if (v13
      && (CFPropertyListRef v33 = v13, __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7160), swift_dynamicCast()))
    {
      uint64_t v14 = v32;
    }
    else
    {
      uint64_t v14 = MEMORY[0x263F8EE78];
    }
    id v15 = objc_msgSend(v7, sel_uniqueDeviceIdentifier);
    if (v15)
    {
      uint64_t v16 = v15;
      uint64_t v17 = sub_248175160();
      uint64_t v19 = v18;

      id v20 = objc_msgSend(v7, sel_serverFriendlyDescription);
      if (v20)
      {
        uint64_t v21 = v20;
        uint64_t v22 = sub_248175160();
        uint64_t v31 = v14;
        uint64_t v23 = v11;
        uint64_t v24 = v10;
        uint64_t v25 = v8;
        uint64_t v26 = v22;
        uint64_t v28 = v27;

        *(void *)a1 = v17;
        *(void *)(a1 + 8) = v19;
        *(void *)(a1 + 16) = v26;
        *(void *)(a1 + 24) = v28;
        *(void *)(a1 + 32) = v25;
        *(void *)(a1 + 40) = v24;
        uint64_t v29 = v31;
        *(void *)(a1 + 48) = v23;
        *(void *)(a1 + 56) = v29;
        *(unsigned char *)(a1 + 64) = 0;
        return;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    *(unsigned char *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    __break(1u);
  }
}

void __swiftcall AKDevice.into(with:)(AppleIDSetup::IdMSAccount::DeviceInfo_optional *__return_ptr retstr, AppleIDSetup::SetupReport::LocaleInfo_optional with)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)with.value.localeID._countAndFlagsBits;
  id v6 = *(void **)(with.value.localeID._countAndFlagsBits + 8);
  uint64_t v7 = *(void **)(with.value.localeID._countAndFlagsBits + 16);
  uint64_t v8 = *(void **)(with.value.localeID._countAndFlagsBits + 24);
  id v9 = objc_msgSend(v3, sel_uniqueDeviceIdentifier, with.value.languages._rawValue, with.value.keyboards._rawValue);
  if (!v9) {
    goto LABEL_7;
  }
  uint64_t v10 = v9;
  uint64_t v11 = sub_248175160();
  CFPropertyListRef v13 = v12;

  id v14 = objc_msgSend(v3, sel_serverFriendlyDescription);
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    retstr->value.isLegacy = 0;
    retstr->value.localeInfo.value.localeID = 0u;
    *(_OWORD *)&retstr->value.localeInfo.value.languages._rawValue = 0u;
    retstr->value.deviceIdentifier = 0u;
    retstr->value.serverFriendlyDescription = 0u;
    return;
  }
  id v15 = v14;
  uint64_t v16 = sub_248175160();
  uint64_t v18 = v17;

  retstr->value.deviceIdentifier._countAndFlagsBits = v11;
  retstr->value.deviceIdentifier._object = v13;
  retstr->value.serverFriendlyDescription._countAndFlagsBits = v16;
  retstr->value.serverFriendlyDescription._object = v18;
  retstr->value.localeInfo.value.localeID._countAndFlagsBits = v5;
  retstr->value.localeInfo.value.localeID._object = v6;
  retstr->value.localeInfo.value.languages._rawValue = v7;
  retstr->value.localeInfo.value.keyboards._rawValue = v8;
  retstr->value.isLegacy = 0;
  sub_247FF6AA4(v5, (uint64_t)v6);
}

uint64_t IdMSAccount.DeviceInfo.description.getter()
{
  sub_248175850();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "DeviceInfo(id:");
  swift_bridgeObjectRetain();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  swift_bridgeObjectRetain();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  return v1[0];
}

uint64_t IdMSAccount.DeviceInfo.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = IdMSAccount.DeviceInfo.description.getter();
  sub_247FF6AA4(v1, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7168);
  sub_248175190();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  sub_2481751D0();
  swift_bridgeObjectRetain();
  sub_2481751D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t IdMSAccount.DeviceInfo.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175E80();
  if (v1) {
    SetupReport.LocaleInfo.hash(into:)();
  }
  return sub_248175E80();
}

unint64_t sub_24800FCCC()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0x6E49656C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0x79636167654C7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24800FD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248017748(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24800FD8C(uint64_t a1)
{
  unint64_t v2 = sub_248016C10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24800FDC8(uint64_t a1)
{
  unint64_t v2 = sub_248016C10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IdMSAccount.DeviceInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7170);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v21 = *(void *)(v1 + 24);
  uint64_t v22 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v19 = *(void *)(v1 + 40);
  uint64_t v20 = v8;
  uint64_t v9 = *(void *)(v1 + 48);
  uint64_t v17 = *(void *)(v1 + 56);
  uint64_t v18 = v9;
  int v28 = *(unsigned __int8 *)(v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016C10();
  sub_248175F60();
  LOBYTE(v24) = 0;
  uint64_t v10 = v23;
  sub_248175BB0();
  if (!v10)
  {
    uint64_t v11 = v17;
    uint64_t v12 = v18;
    uint64_t v14 = v19;
    uint64_t v13 = v20;
    LOBYTE(v24) = 1;
    sub_248175BB0();
    uint64_t v24 = v13;
    uint64_t v25 = v14;
    uint64_t v26 = v12;
    uint64_t v27 = v11;
    char v29 = 2;
    sub_248016C64();
    sub_248175B90();
    LOBYTE(v24) = 3;
    sub_248175BC0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdMSAccount.DeviceInfo.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175E80();
  if (v1) {
    SetupReport.LocaleInfo.hash(into:)();
  }
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t IdMSAccount.DeviceInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7188);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016C10();
  sub_248175F20();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v15 = 0;
    uint64_t v16 = 0;
  }
  else
  {
    LOBYTE(v31) = 0;
    uint64_t v9 = sub_248175AC0();
    uint64_t v12 = v11;
    uint64_t v29 = v9;
    LOBYTE(v31) = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_248175AC0();
    uint64_t v30 = v14;
    uint64_t v26 = v13;
    uint64_t v28 = v12;
    char v35 = 2;
    sub_248016CB8();
    swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    sub_248175AA0();
    uint64_t v24 = a2;
    uint64_t v25 = v6;
    uint64_t v15 = v31;
    uint64_t v16 = v32;
    uint64_t v18 = v33;
    uint64_t v17 = v34;
    LOBYTE(v31) = 3;
    sub_247FF6AA4(v15, v32);
    char v19 = sub_248175AD0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v5);
    uint64_t v20 = v28;
    swift_bridgeObjectRetain();
    uint64_t v21 = v30;
    swift_bridgeObjectRetain();
    sub_247FF6AA4(v15, v16);
    sub_247FF6BFC(v15, v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = v24;
    *uint64_t v24 = v29;
    v22[1] = v20;
    void v22[2] = v26;
    v22[3] = v21;
    v22[4] = v15;
    v22[5] = v16;
    v22[6] = v18;
    v22[7] = v17;
    *((unsigned char *)v22 + 64) = v19 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_247FF6BFC(v15, v16);
}

uint64_t sub_2480104DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IdMSAccount.DeviceInfo.init(from:)(a1, a2);
}

uint64_t sub_2480104F4(void *a1)
{
  return IdMSAccount.DeviceInfo.encode(to:)(a1);
}

uint64_t sub_248010518()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175E80();
  if (v1) {
    SetupReport.LocaleInfo.hash(into:)();
  }
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t static Constants.GlobalUserDefaultsKeys.appleKeyboards.getter()
{
  return 0x79654B656C707041;
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.continuationKey.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.passwordResetKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.anisettePackage.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  *a1 = v1[4];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 IdMSAccount.Credential.CompanionKeyEnvelope.init(continuationKey:passwordResetKey:anisettePackage:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __n128 result = *(__n128 *)a5;
  long long v7 = *(_OWORD *)(a5 + 16);
  uint64_t v8 = *(void *)(a5 + 32);
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(__n128 *)(a6 + 32) = result;
  *(_OWORD *)(a6 + 48) = v7;
  *(void *)(a6 + 64) = v8;
  return result;
}

unint64_t IdMSAccount.Credential.CompanionKeyEnvelope.description.getter()
{
  return 0xD000000000000018;
}

unint64_t IdMSAccount.Credential.CompanionKeyEnvelope.debugDescription.getter()
{
  return IdMSAccount.Credential.CompanionKeyEnvelope.description.getter();
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175EB0();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248010998()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x6574746573696E61;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x61756E69746E6F63;
  }
}

uint64_t sub_248010A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248017908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_248010A38(uint64_t a1)
{
  unint64_t v2 = sub_248016D0C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_248010A74(uint64_t a1)
{
  unint64_t v2 = sub_248016D0C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7198);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  uint64_t v22 = v1[3];
  uint64_t v23 = v7;
  uint64_t v8 = v1[4];
  uint64_t v20 = v1[5];
  uint64_t v21 = v8;
  uint64_t v9 = v1[6];
  uint64_t v18 = v1[7];
  uint64_t v19 = v9;
  uint64_t v17 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016D0C();
  sub_248175F60();
  LOBYTE(v25) = 0;
  uint64_t v10 = v24;
  sub_248175BB0();
  if (!v10)
  {
    uint64_t v12 = v18;
    uint64_t v11 = v19;
    uint64_t v14 = v20;
    uint64_t v13 = v21;
    LOBYTE(v25) = 1;
    sub_248175BB0();
    uint64_t v25 = v13;
    uint64_t v26 = v14;
    uint64_t v27 = v11;
    uint64_t v28 = v12;
    uint64_t v29 = v17;
    char v30 = 2;
    sub_248016D60();
    sub_248175BE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.hashValue.getter()
{
  return sub_248175EC0();
}

uint64_t IdMSAccount.Credential.CompanionKeyEnvelope.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D71B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248016D0C();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v26) = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  uint64_t v25 = v9;
  LOBYTE(v26) = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_248175AC0();
  uint64_t v14 = v13;
  uint64_t v23 = v12;
  char v31 = 2;
  sub_248016DB4();
  swift_bridgeObjectRetain();
  uint64_t v24 = v14;
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v27;
  uint64_t v22 = v26;
  uint64_t v17 = v28;
  uint64_t v16 = v29;
  uint64_t v18 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v24;
  *a2 = v25;
  a2[1] = v11;
  a2[2] = v23;
  a2[3] = v19;
  a2[4] = v22;
  a2[5] = v15;
  a2[6] = v17;
  a2[7] = v16;
  a2[8] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_248011094()
{
  return IdMSAccount.Credential.CompanionKeyEnvelope.description.getter();
}

uint64_t sub_2480110E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IdMSAccount.Credential.CompanionKeyEnvelope.init(from:)(a1, a2);
}

uint64_t sub_2480110F8(void *a1)
{
  return IdMSAccount.Credential.CompanionKeyEnvelope.encode(to:)(a1);
}

uint64_t sub_248011118()
{
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  sub_248175EB0();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248011220()
{
  return sub_248175EC0();
}

Swift::Void __swiftcall IdMSAccount.Credential.apply(to:with:)(AKAppleIDAuthenticationContext *to, AppleIDSetup::IdMSAccount::ID *with)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v3 = *(void *)(v2 + 24);
  switch(*(unsigned char *)(v2 + 72))
  {
    case 1:
      uint64_t v11 = (void *)sub_248175130();
      [(AKAppleIDAuthenticationContext *)to setPasswordlessToken:v11];

      if (v3) {
        uint64_t v9 = sub_248175130();
      }
      else {
        uint64_t v9 = 0;
      }
      uint64_t v10 = &selRef_setIdmsDataToken_;
      goto LABEL_8;
    case 2:
      uint64_t v9 = sub_248175130();
      uint64_t v10 = &selRef__setPassword_;
      goto LABEL_8;
    case 3:
      return;
    default:
      uint64_t countAndFlagsBits = with->username.value._countAndFlagsBits;
      object = with->username.value._object;
      id v8 = objc_allocWithZone(MEMORY[0x263F291B0]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = v4;
      uint64_t v13 = v3;
      uint64_t v9 = (uint64_t)sub_248014EC4(countAndFlagsBits, (uint64_t)object);
      uint64_t v10 = &selRef_setCompanionKeyEnvelope_;
LABEL_8:
      id v14 = (id)v9;
      objc_msgSend(to, *v10, v12, v13);

      return;
  }
}

id IdMSAccount.Credential.CompanionKeyEnvelope.into(with:)(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  id v3 = objc_allocWithZone(MEMORY[0x263F291B0]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_248014EC4(v1, v2);
}

uint64_t sub_24801159C()
{
  return sub_2481752B0();
}

uint64_t sub_24801162C()
{
  return sub_248175250();
}

id IdMSAccount.into(with:)(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 72);
  v8[0] = *(void *)v1;
  v8[1] = v3;
  v8[2] = v4;
  long long v9 = *(_OWORD *)(v1 + 24);
  long long v10 = *(_OWORD *)(v1 + 40);
  long long v11 = *(_OWORD *)(v1 + 56);
  uint64_t v12 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = sub_248017AA0(v8, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

id static ACAccount.fetchIdMS(for:with:)(uint64_t *a1, void *a2)
{
  return sub_248017AA0(a1, a2);
}

void static IdMSAccount.fetch(for:with:)(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 8);
  v11[0] = *(void *)a1;
  v11[1] = v6;
  long long v7 = *(_OWORD *)(a1 + 32);
  long long v12 = *(_OWORD *)(a1 + 16);
  long long v13 = v7;
  long long v8 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 48);
  long long v15 = v8;
  id v9 = sub_248017AA0(v11, a2);
  if (!v3)
  {
    long long v10 = v9;
    ACAccount.into(with:)(a2, a3);
  }
}

void ACAccount.into(with:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v6 = sub_248174700();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  long long v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  long long v12 = (char *)&v49 - v11;
  ACAccount.id(with:)(a1, (uint64_t)&v72);
  if (!v3)
  {
    uint64_t v64 = v10;
    uint64_t v61 = *((void *)&v72 + 1);
    uint64_t v62 = v72;
    uint64_t v59 = *((void *)&v73 + 1);
    uint64_t v60 = v73;
    uint64_t v58 = v74;
    uint64_t v57 = v75;
    uint64_t v56 = v76;
    uint64_t v55 = v77;
    uint64_t v54 = v78;
    uint64_t v53 = v79;
    uint64_t v63 = v12;
    ACAccount.name(with:)(a1);
    id v13 = objc_msgSend(a1, sel_servicesUsingAccount_, v2);
    long long v14 = (void *)MEMORY[0x263F8EE78];
    if (!v13)
    {
LABEL_31:
      uint64_t v39 = v63;
      uint64_t v40 = v64;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v64, v63, v6);
      uint64_t v41 = sub_248017D38((uint64_t)v14);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v6);
      uint64_t v42 = v61;
      *(void *)a2 = v62;
      *((void *)a2 + 1) = v42;
      uint64_t v43 = v59;
      *((void *)a2 + 2) = v60;
      *((void *)a2 + 3) = v43;
      uint64_t v44 = v57;
      *((void *)a2 + 4) = v58;
      *((void *)a2 + 5) = v44;
      uint64_t v45 = v55;
      *((void *)a2 + 6) = v56;
      *((void *)a2 + 7) = v45;
      uint64_t v46 = v53;
      *((void *)a2 + 8) = v54;
      *((void *)a2 + 9) = v46;
      uint64_t v47 = (int *)type metadata accessor for IdMSAccount();
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&a2[v47[5]], v40, v6);
      uint64_t v48 = &a2[v47[6]];
      *((void *)v48 + 8) = 0;
      *((_OWORD *)v48 + 2) = 0u;
      *((_OWORD *)v48 + 3) = 0u;
      *(_OWORD *)uint64_t v48 = 0u;
      *((_OWORD *)v48 + 1) = 0u;
      v48[72] = 3;
      *(void *)&a2[v47[7]] = v41;
      return;
    }
    long long v15 = v13;
    uint64_t v49 = v7;
    uint64_t v50 = v6;
    uint64_t v51 = a2;
    uint64_t v16 = sub_248175530();

    int64_t v17 = *(void *)(v16 + 16);
    uint64_t v52 = 0;
    if (v17)
    {
      uint64_t v80 = v14;
      sub_2480150F8(0, v17, 0);
      int64_t v18 = sub_2480155A0(v16);
      int v20 = v19;
      char v22 = v21 & 1;
      uint64_t v67 = v16 + 56;
      do
      {
        if (v18 < 0 || v18 >= 1 << *(unsigned char *)(v16 + 32))
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          sub_2481759C0();
          __break(1u);
          JUMPOUT(0x248011EC4);
        }
        if (((*(void *)(v67 + (((unint64_t)v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          goto LABEL_34;
        }
        if (*(_DWORD *)(v16 + 36) != v20) {
          goto LABEL_35;
        }
        sub_247FBB220(*(void *)(v16 + 48) + 40 * v18, (uint64_t)&v72);
        v69[0] = v72;
        v69[1] = v73;
        uint64_t v70 = v74;
        sub_247FBB220((uint64_t)v69, (uint64_t)v68);
        swift_dynamicCast();
        sub_247FB84B0((uint64_t)v69);
        uint64_t v23 = v71;
        uint64_t v24 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2480150F8(0, v24[2] + 1, 1);
          uint64_t v24 = v80;
        }
        unint64_t v26 = v24[2];
        unint64_t v25 = v24[3];
        if (v26 >= v25 >> 1)
        {
          sub_2480150F8(v25 > 1, v26 + 1, 1);
          uint64_t v24 = v80;
        }
        v24[2] = v26 + 1;
        v24[v26 + 4] = v23;
        int64_t v27 = sub_248015644(v18, v20, v22 & 1, v16);
        int64_t v18 = v27;
        int v20 = v28;
        char v22 = v29 & 1;
        --v17;
      }
      while (v17);
      sub_248017DF4(v27, v28, v29 & 1);
      swift_bridgeObjectRelease();
      uint64_t v30 = v24[2];
      if (v30) {
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = (void *)MEMORY[0x263F8EE78];
      uint64_t v30 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v30)
      {
LABEL_15:
        swift_bridgeObjectRetain();
        uint64_t v31 = 0;
        uint64_t v32 = (void *)*MEMORY[0x263F26D28];
        uint64_t v67 = *MEMORY[0x263F26D30];
        uint64_t v66 = *MEMORY[0x263F26D40];
        uint64_t v65 = *MEMORY[0x263F26D38];
        uint64_t v33 = (void *)*MEMORY[0x263F26D48];
        long long v14 = (void *)MEMORY[0x263F8EE78];
        while (2)
        {
          uint64_t v34 = v32;
          switch(v24[v31 + 4])
          {
            case 1:
            case 7:
              goto LABEL_22;
            case 2:
              uint64_t v34 = v33;
              goto LABEL_22;
            case 4:
              char v35 = &v82;
              goto LABEL_21;
            case 5:
              char v35 = &v83;
              goto LABEL_21;
            case 6:
              char v35 = &v81;
LABEL_21:
              uint64_t v34 = (void *)*(v35 - 32);
LABEL_22:
              id v36 = v34;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                long long v14 = sub_248014FE8(0, v14[2] + 1, 1, v14);
              }
              unint64_t v38 = v14[2];
              unint64_t v37 = v14[3];
              if (v38 >= v37 >> 1) {
                long long v14 = sub_248014FE8((void *)(v37 > 1), v38 + 1, 1, v14);
              }
              ++v31;
              void v14[2] = v38 + 1;
              v14[v38 + 4] = v36;
              if (v30 != v31) {
                continue;
              }
              swift_bridgeObjectRelease();
              break;
            default:
              goto LABEL_36;
          }
          goto LABEL_30;
        }
      }
    }
    long long v14 = (void *)MEMORY[0x263F8EE78];
LABEL_30:
    swift_bridgeObjectRelease();
    a2 = v51;
    uint64_t v6 = v50;
    uint64_t v7 = v49;
    goto LABEL_31;
  }
}

void static IdMSAccount.fetchPrimary(with:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_primaryAuthKitAccount);
  if (v8)
  {
    id v9 = v8;
    ACAccount.into(with:)(a1, v7);

    if (v2)
    {
    }
    else
    {
      uint64_t v11 = type metadata accessor for IdMSAccount();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v7, 0, 1, v11);

      sub_248017EB4((uint64_t)v7, a2);
    }
  }
  else
  {
    uint64_t v10 = type metadata accessor for IdMSAccount();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    sub_248017E00((uint64_t)v7);
    sub_248017E60();
    swift_allocError();
    swift_willThrow();
  }
}

uint64_t IdMSAccount.companionKeyEnvelope(with:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x270FA2498](sub_248012098, 0, 0);
}

uint64_t sub_248012098()
{
  uint64_t v15 = v0;
  uint64_t v2 = *(void **)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 72);
  v10[0] = *(void *)v1;
  v10[1] = v3;
  v10[2] = v4;
  long long v11 = *(_OWORD *)(v1 + 24);
  long long v12 = *(_OWORD *)(v1 + 40);
  long long v13 = *(_OWORD *)(v1 + 56);
  uint64_t v14 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = sub_248017AA0(v10, v2);
  *(void *)(v0 + 48) = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 56) = v7;
  *(void *)uint64_t v7 = v0;
  *(void *)(v7 + 8) = sub_248012250;
  long long v8 = *(_OWORD *)(v0 + 16);
  *(void *)(v7 + 144) = *(void *)(v0 + 32);
  *(void *)(v7 + 152) = v6;
  *(_OWORD *)(v7 + 128) = v8;
  return MEMORY[0x270FA2498](sub_248012450, 0, 0);
}

uint64_t sub_248012250()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_2480123C8;
  }
  else {
    uint64_t v2 = sub_248012364;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_248012364()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_2480123C8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ACAccount.companionKeyEnvelope(with:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  return MEMORY[0x270FA2498](sub_248012450, 0, 0);
}

uint64_t sub_248012450()
{
  uint64_t v33 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 144), sel_continuationTokenForAccount_, *(void *)(v0 + 152));
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = *(void **)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 152);
    uint64_t v5 = sub_248175160();
    uint64_t v7 = v6;

    *(void *)(v0 + 160) = v5;
    *(void *)(v0 + 168) = v7;
    id v8 = objc_msgSend(v4, sel_passwordResetTokenForAccount_, v3);
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void **)(v0 + 136);
      uint64_t v11 = sub_248175160();
      uint64_t v13 = v12;

      *(void *)(v0 + 176) = v11;
      *(void *)(v0 + 184) = v13;
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 120;
      *(void *)(v0 + 24) = sub_2480127F4;
      uint64_t v14 = swift_continuation_init();
      *(void *)(v0 + 80) = MEMORY[0x263EF8330];
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_248013674;
      *(void *)(v0 + 104) = &block_descriptor;
      *(void *)(v0 + 112) = v14;
      objc_msgSend(v10, sel_anisetteDataWithCompletion_, v0 + 80);
      return MEMORY[0x270FA23F0](v0 + 16);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v15 = *(void **)(v0 + 152);
  uint64_t v16 = sub_248174B90();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B13B730);
  id v17 = v15;
  int64_t v18 = sub_248174B70();
  os_log_type_t v19 = sub_2481755D0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  char v21 = *(void **)(v0 + 152);
  if (v20)
  {
    char v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v32 = v23;
    *(_DWORD *)char v22 = 136315138;
    id v24 = v21;
    id v25 = objc_msgSend(v24, sel_description);
    uint64_t v26 = sub_248175160();
    unint64_t v28 = v27;

    *(void *)(v0 + 80) = sub_247FB6D24(v26, v28, &v32);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v18, v19, "Unable to generate companion key envelope for account (%s, missing CK and/or PRK.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v23, -1, -1);
    MEMORY[0x24C574E00](v22, -1, -1);
  }
  else
  {
  }
  sub_248017F18();
  swift_allocError();
  *(void *)uint64_t v29 = 0xD000000000000015;
  *(void *)(v29 + 8) = 0x8000000248190EC0;
  *(unsigned char *)(v29 + 16) = 3;
  swift_willThrow();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_2480127F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_248012DB0;
  }
  else
  {
    uint64_t v2 = sub_248012918;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

id sub_248012918()
{
  uint64_t v42 = v0;
  uint64_t v1 = *(void **)(v0 + 120);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_248174B90();
    __swift_project_value_buffer(v25, (uint64_t)qword_26B13B730);
    uint64_t v26 = sub_248174B70();
    os_log_type_t v27 = sub_2481755D0();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v28 = 0;
      _os_log_impl(&dword_247F93000, v26, v27, "Unable to generate CK envelope, no anisette data", v28, 2u);
      MEMORY[0x24C574E00](v28, -1, -1);
    }

    sub_248017F18();
    swift_allocError();
    *(void *)uint64_t v29 = 0xD000000000000015;
    *(void *)(v29 + 8) = 0x8000000248190F10;
    *(unsigned char *)(v29 + 16) = 3;
    swift_willThrow();
    uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_15;
  }
  id result = objc_msgSend(*(id *)(v0 + 120), sel_machineID);
  if (!result)
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v3 = result;
  uint64_t v40 = sub_248175160();
  uint64_t v5 = v4;

  id result = objc_msgSend(v1, sel_oneTimePassword);
  if (!result)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v39 = sub_248175160();
  uint64_t v8 = v7;

  id v38 = objc_msgSend(v1, sel_routingInfo);
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_248174B90();
  __swift_project_value_buffer(v9, (uint64_t)qword_26B13B730);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_248174B70();
  os_log_type_t v11 = sub_2481755C0();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = v8;
  uint64_t v14 = *(void *)(v0 + 184);
  if (v12)
  {
    log = v10;
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v34 = *(void *)(v0 + 176);
    uint64_t v16 = v5;
    uint64_t v17 = *(void *)(v0 + 160);
    int64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)int64_t v18 = 136642819;
    v41[0] = v36;
    v41[1] = v17;
    uint64_t v5 = v16;
    v41[2] = v15;
    v41[3] = v34;
    v41[4] = v14;
    v41[5] = v40;
    uint64_t v19 = v13;
    uint64_t v35 = v13;
    uint64_t v20 = v39;
    v41[6] = v16;
    v41[7] = v39;
    id v21 = v38;
    v41[8] = v19;
    v41[9] = (uint64_t)v38;
    unint64_t v22 = IdMSAccount.Credential.CompanionKeyEnvelope.description.getter();
    *(void *)(v0 + 80) = sub_247FB6D24(v22, v23, v41);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v24 = v35;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, log, v11, "Built CK envelope: %{sensitive}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v36, -1, -1);
    MEMORY[0x24C574E00](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    uint64_t v24 = v13;
    id v21 = v38;
    uint64_t v20 = v39;
  }
  uint64_t v32 = *(void *)(v0 + 176);
  uint64_t v31 = *(void *)(v0 + 184);
  uint64_t v33 = *(void *)(v0 + 128);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)(v0 + 160);
  *(void *)(v33 + 16) = v32;
  *(void *)(v33 + 24) = v31;
  *(void *)(v33 + 32) = v40;
  *(void *)(v33 + 40) = v5;
  *(void *)(v33 + 48) = v20;
  *(void *)(v33 + 56) = v24;
  *(void *)(v33 + 64) = v21;
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
LABEL_15:
  return (id)v30();
}

uint64_t sub_248012DB0()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id static ACAccount.fetch(for:withAccountTypeIdentifier:from:)(long long *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  long long v7 = a1[3];
  long long v22 = a1[2];
  long long v23 = v7;
  long long v24 = a1[4];
  long long v8 = a1[1];
  long long v20 = *a1;
  long long v21 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D71E0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_24817B010;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)sub_2481752E0();
  swift_bridgeObjectRelease();
  *(void *)&v19[0] = 0;
  id v11 = objc_msgSend(a4, sel_accountsWithAccountTypeIdentifiers_error_, v10, v19);

  BOOL v12 = *(void **)&v19[0];
  if (!v11)
  {
    id v17 = *(id *)&v19[0];
    sub_248174730();

    goto LABEL_5;
  }
  sub_247FB3398(0, (unint64_t *)&qword_2692D71E8);
  unint64_t v13 = sub_2481752F0();
  id v14 = v12;

  sub_2480181D4((uint64_t)&v20);
  id v11 = sub_248017F6C(v13, &v20);
  sub_248018240((uint64_t)&v20);
  swift_bridgeObjectRelease();
  if (!v11)
  {
    *(void *)&v19[0] = 0;
    *((void *)&v19[0] + 1) = 0xE000000000000000;
    sub_248175850();
    swift_bridgeObjectRelease();
    v19[2] = v22;
    v19[3] = v23;
    v19[4] = v24;
    v19[0] = v20;
    v19[1] = v21;
    IdMSAccount.ID.description.getter();
    id v11 = v15;
    sub_2481751D0();
    swift_bridgeObjectRelease();
    sub_2481751D0();
    sub_2481751D0();
    sub_248017F18();
    swift_allocError();
    *(void *)uint64_t v16 = 0xD00000000000001ELL;
    *(void *)(v16 + 8) = 0x8000000248190F30;
    *(unsigned char *)(v16 + 16) = 2;
LABEL_5:
    swift_willThrow();
  }
  return v11;
}

void ACAccount.id(with:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  id v6 = objc_msgSend(v3, sel_accountType);
  if (!v6)
  {
    __break(1u);
    goto LABEL_26;
  }
  long long v7 = v6;
  id v8 = objc_msgSend(v6, sel_identifier);

  if (!v8)
  {
    sub_248175160();
    goto LABEL_11;
  }
  uint64_t v9 = sub_248175160();
  uint64_t v11 = v10;

  uint64_t v12 = sub_248175160();
  if (!v11)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    id v16 = objc_msgSend(v3, sel_accountType);
    if (v16)
    {
      id v17 = v16;
      sub_248017F18();
      swift_allocError();
      *(void *)uint64_t v18 = v17;
      *(void *)(v18 + 8) = 0;
      *(unsigned char *)(v18 + 16) = 0;
LABEL_14:
      swift_willThrow();
      return;
    }
LABEL_26:
    __break(1u);
    return;
  }
  if (v9 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_16;
  }
  char v15 = sub_248175CE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  id v19 = objc_msgSend(a1, sel_altDSIDForAccount_, v3);
  if (!v19)
  {
    sub_248017F18();
    swift_allocError();
    *(void *)uint64_t v30 = 0;
    *(void *)(v30 + 8) = 0;
    *(unsigned char *)(v30 + 16) = 4;
    goto LABEL_14;
  }
  long long v20 = v19;
  uint64_t v21 = sub_248175160();
  uint64_t v23 = v22;

  id v24 = objc_msgSend(a1, sel_DSIDForAccount_, v3);
  if (v24)
  {
    uint64_t v25 = v24;
    id v26 = objc_msgSend(v24, sel_stringValue);
    uint64_t v27 = sub_248175160();
    uint64_t v29 = v28;
  }
  else
  {
    uint64_t v27 = 0;
    uint64_t v29 = 0;
  }
  id v31 = objc_msgSend(v3, sel_username);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = sub_248175160();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  *(void *)a2 = v21;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v35;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v29;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
}

uint64_t ACAccount.name(with:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D71F0);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_givenNameForAccount_, v2);
  if (v7)
  {
    id v8 = v7;
    sub_248175160();
  }
  id v9 = objc_msgSend(a1, sel_familyNameForAccount_, v2);
  if (v9)
  {
    uint64_t v10 = v9;
    sub_248175160();
  }
  uint64_t v11 = sub_248174700();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  return sub_2481746C0();
}

__C::AIDAServiceType __swiftcall AKAppleIDServiceType.into()()
{
  uint64_t v1 = v0 - 1;
  if (unint64_t)(v0 - 1) < 7 && ((0x7Bu >> v1))
  {
    uint64_t v2 = (void *)**((void **)&unk_265237228 + v1);
    return (__C::AIDAServiceType)v2;
  }
  else
  {
    result._rawValue = (NSString)sub_2481759C0();
    __break(1u);
  }
  return result;
}

unint64_t sub_248013528(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  sub_24801C020();
  unint64_t result = sub_248175550();
  unint64_t v13 = result;
  if (v3)
  {
    unint64_t v5 = 0;
    uint64_t v6 = 32;
    while (v5 < *(void *)(a2 + 16))
    {
      long long v7 = *(_OWORD *)(a2 + v6 + 48);
      void v14[2] = *(_OWORD *)(a2 + v6 + 32);
      v14[3] = v7;
      v15[0] = *(_OWORD *)(a2 + v6 + 64);
      *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)(a2 + v6 + 73);
      long long v8 = *(_OWORD *)(a2 + v6 + 16);
      v14[0] = *(_OWORD *)(a2 + v6);
      v14[1] = v8;
      ++v5;
      sub_24801C074((uint64_t)v14);
      sub_2480540F0((uint64_t)v11, (unint64_t)v14);
      unint64_t v9 = v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = sub_247FEFBA8(v9);
      v6 += 96;
      if (v3 == v5)
      {
        swift_release();
        swift_release();
        return v13;
      }
    }
    __break(1u);
  }
  else
  {
    unint64_t v10 = result;
    swift_release();
    swift_release();
    return v10;
  }
  return result;
}

uint64_t sub_248013674(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEC0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x270FA2410](v3, v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_24801C0EC((uint64_t)&v11, v8);
    return swift_continuation_throwingResume();
  }
}

uint64_t ACAccount.directFromCredentialItemCompanionKeyEnvelope(with:)(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return MEMORY[0x270FA2498](sub_24801375C, 0, 0);
}

uint64_t sub_24801375C()
{
  uint64_t v34 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 144), sel_credential);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_credentialItemForKey_, *MEMORY[0x263EFB028]);

    if (v3)
    {
      uint64_t v4 = *(void **)(v0 + 144);
      uint64_t v5 = sub_248175160();
      uint64_t v7 = v6;

      *(void *)(v0 + 152) = v5;
      *(void *)(v0 + 160) = v7;
      id v8 = objc_msgSend(v4, sel_credential);
      if (v8)
      {
        id v9 = v8;
        id v10 = objc_msgSend(v8, sel_credentialItemForKey_, *MEMORY[0x263EFB108]);

        if (v10)
        {
          uint64_t v11 = *(void **)(v0 + 136);
          uint64_t v12 = sub_248175160();
          uint64_t v14 = v13;

          *(void *)(v0 + 168) = v12;
          *(void *)(v0 + 176) = v14;
          *(void *)(v0 + 16) = v0;
          *(void *)(v0 + 56) = v0 + 120;
          *(void *)(v0 + 24) = sub_248013B54;
          uint64_t v15 = swift_continuation_init();
          *(void *)(v0 + 80) = MEMORY[0x263EF8330];
          *(void *)(v0 + 88) = 0x40000000;
          *(void *)(v0 + 96) = sub_248013674;
          *(void *)(v0 + 104) = &block_descriptor_8;
          *(void *)(v0 + 112) = v15;
          objc_msgSend(v11, sel_anisetteDataWithCompletion_, v0 + 80);
          return MEMORY[0x270FA23F0](v0 + 16);
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  id v16 = *(void **)(v0 + 144);
  uint64_t v17 = sub_248174B90();
  __swift_project_value_buffer(v17, (uint64_t)qword_26B13B730);
  id v18 = v16;
  id v19 = sub_248174B70();
  os_log_type_t v20 = sub_2481755D0();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v22 = *(void **)(v0 + 144);
  if (v21)
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v33 = v24;
    *(_DWORD *)uint64_t v23 = 136315138;
    id v25 = v22;
    id v26 = objc_msgSend(v25, sel_description);
    uint64_t v27 = sub_248175160();
    unint64_t v29 = v28;

    *(void *)(v0 + 80) = sub_247FB6D24(v27, v29, &v33);
    sub_248175730();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_247F93000, v19, v20, "Unable to generate companion key envelope for account (%s, missing CK and/or PRK.", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v24, -1, -1);
    MEMORY[0x24C574E00](v23, -1, -1);
  }
  else
  {
  }
  sub_248017F18();
  swift_allocError();
  *(void *)uint64_t v30 = 0xD000000000000015;
  *(void *)(v30 + 8) = 0x8000000248190EC0;
  *(unsigned char *)(v30 + 16) = 3;
  swift_willThrow();
  id v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_248013B54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_2480141C8;
  }
  else
  {
    uint64_t v2 = sub_248013C78;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

id sub_248013C78()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void **)(v0 + 120);
  if (!v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_248174B90();
    __swift_project_value_buffer(v27, (uint64_t)qword_26B13B730);
    unint64_t v28 = sub_248174B70();
    os_log_type_t v29 = sub_2481755D0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl(&dword_247F93000, v28, v29, "Unable to generate CK envelope, no anisette data", v30, 2u);
      MEMORY[0x24C574E00](v30, -1, -1);
    }

    sub_248017F18();
    swift_allocError();
    *(void *)uint64_t v31 = 0xD000000000000015;
    *(void *)(v31 + 8) = 0x8000000248190F10;
    *(unsigned char *)(v31 + 16) = 3;
    swift_willThrow();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_15;
  }
  id result = objc_msgSend(*(id *)(v0 + 120), sel_machineID);
  if (!result)
  {
    __break(1u);
    goto LABEL_19;
  }
  id v3 = result;
  uint64_t v4 = sub_248175160();
  uint64_t v6 = v5;

  id result = objc_msgSend(v1, sel_oneTimePassword);
  if (!result)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v7 = result;
  uint64_t v46 = sub_248175160();
  uint64_t v9 = v8;

  id v45 = objc_msgSend(v1, sel_routingInfo);
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  id v10 = *(void **)(v0 + 144);
  uint64_t v11 = sub_248174B90();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B13B730);
  id v12 = v10;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v13 = v12;
  uint64_t v14 = sub_248174B70();
  os_log_type_t v15 = sub_2481755C0();
  log = v14;
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = v9;
  uint64_t v18 = *(void *)(v0 + 176);
  if (v16)
  {
    uint64_t v38 = *(void *)(v0 + 160);
    uint64_t v39 = *(void *)(v0 + 168);
    uint64_t v37 = *(void *)(v0 + 152);
    uint64_t v42 = v6;
    id v19 = *(void **)(v0 + 144);
    uint64_t v43 = v4;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    v47[0] = v41;
    *(_DWORD *)uint64_t v20 = 138412547;
    *(void *)(v0 + 80) = v19;
    id v21 = v19;
    sub_248175730();
    *uint64_t v40 = v19;
    uint64_t v6 = v42;

    *(_WORD *)(v20 + 12) = 2085;
    v47[1] = v37;
    v47[2] = v38;
    v47[3] = v39;
    v47[4] = v18;
    v47[5] = v43;
    v47[6] = v42;
    id v22 = v45;
    uint64_t v23 = v46;
    v47[7] = v46;
    v47[8] = v17;
    v47[9] = (uint64_t)v45;
    unint64_t v24 = IdMSAccount.Credential.CompanionKeyEnvelope.description.getter();
    *(void *)(v0 + 80) = sub_247FB6D24(v24, v25, v47);
    sub_248175730();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_247F93000, log, v15, "Built CK envelope directly from %@: %{sensitive}s", (uint8_t *)v20, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v40, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v41, -1, -1);
    uint64_t v26 = v20;
    uint64_t v4 = v43;
    MEMORY[0x24C574E00](v26, -1, -1);
  }
  else
  {
    uint64_t v33 = *(void **)(v0 + 144);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    id v22 = v45;
    uint64_t v23 = v46;
  }
  uint64_t v35 = *(void *)(v0 + 168);
  uint64_t v34 = *(void *)(v0 + 176);
  uint64_t v36 = *(void *)(v0 + 128);
  *(_OWORD *)uint64_t v36 = *(_OWORD *)(v0 + 152);
  *(void *)(v36 + 16) = v35;
  *(void *)(v36 + 24) = v34;
  *(void *)(v36 + 32) = v4;
  *(void *)(v36 + 40) = v6;
  *(void *)(v36 + 48) = v23;
  *(void *)(v36 + 56) = v17;
  *(void *)(v36 + 64) = v22;
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
LABEL_15:
  return (id)v32();
}

uint64_t sub_2480141C8()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id AKAnisetteData.into()@<X0>(uint64_t *a1@<X8>)
{
  id result = objc_msgSend(v1, sel_machineID);
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_248175160();
    uint64_t v7 = v6;

    id result = objc_msgSend(v1, sel_oneTimePassword);
    if (result)
    {
      uint64_t v8 = result;
      uint64_t v9 = sub_248175160();
      uint64_t v11 = v10;

      id result = objc_msgSend(v1, sel_routingInfo);
      *a1 = v5;
      a1[1] = v7;
      a1[2] = v9;
      a1[3] = v11;
      a1[4] = (uint64_t)result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id IdMSAccount.AnisettePackage.into()()
{
  uint64_t v1 = *(void *)(v0 + 32);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F29100]), sel_init);
  uint64_t v3 = (void *)sub_248175130();
  objc_msgSend(v2, sel_setMachineID_, v3);

  uint64_t v4 = (void *)sub_248175130();
  objc_msgSend(v2, sel_setOneTimePassword_, v4);

  objc_msgSend(v2, sel_setRoutingInfo_, v1);
  return v2;
}

id IdMSAccount.DeviceInfo.into(with:)()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F291C0]), sel_init);
  objc_msgSend(v0, sel_setLinkType_, 3);
  uint64_t v1 = (void *)sub_248175130();
  objc_msgSend(v0, sel_setUniqueDeviceIdentifier_, v1);

  id v2 = (void *)sub_248175130();
  objc_msgSend(v0, sel_setServerFriendlyDescription_, v2);

  return v0;
}

uint64_t UserProfileInfo.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserProfileInfo.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t UserProfileInfo.shortName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall UserProfileInfo.init(identifier:name:shortName:)(AppleIDSetup::UserProfileInfo *__return_ptr retstr, Swift::String identifier, Swift::String_optional name, Swift::String_optional shortName)
{
  retstr->identifier = identifier;
  retstr->name = name;
  retstr->shortName = shortName;
}

uint64_t UserProfileInfo.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_248175E80();
    if (v2) {
      goto LABEL_3;
    }
    return sub_248175E80();
  }
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (!v2) {
    return sub_248175E80();
  }
LABEL_3:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248014608()
{
  uint64_t v1 = 1701667182;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D614E74726F6873;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_248014664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24801BE78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24801468C(uint64_t a1)
{
  unint64_t v2 = sub_2480182AC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2480146C8(uint64_t a1)
{
  unint64_t v2 = sub_2480182AC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t UserProfileInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7200);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  uint64_t v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480182AC();
  sub_248175F60();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_248175BB0();
  if (!v9)
  {
    char v13 = 1;
    sub_248175B60();
    char v12 = 2;
    sub_248175B60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t UserProfileInfo.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_248175E80();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_248175E80();
    return sub_248175EC0();
  }
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  return sub_248175EC0();
}

uint64_t UserProfileInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7210);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480182AC();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_248175AC0();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_248175A70();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_248175A70();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_248014C40@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return UserProfileInfo.init(from:)(a1, a2);
}

uint64_t sub_248014C58(void *a1)
{
  return UserProfileInfo.encode(to:)(a1);
}

uint64_t sub_248014C7C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 40);
  sub_248175E50();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_248175E80();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_248175E80();
    return sub_248175EC0();
  }
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_248175E80();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  return sub_248175EC0();
}

void FAFamilyMember.accountID.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(v2, sel_altDSID);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_248175160();
    uint64_t v8 = v7;

    id v9 = objc_msgSend(v2, sel_appleID);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_248175160();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    id v14 = objc_msgSend(v2, sel_dsid);
    uint64_t v15 = v14;
    if (v14)
    {
      id v16 = objc_msgSend(v14, sel_stringValue);

      uint64_t v15 = (void *)sub_248175160();
      uint64_t v18 = v17;
    }
    else
    {
      uint64_t v18 = 0;
    }
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v11;
    *(void *)(a1 + 24) = v13;
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 40) = v18;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
  }
  else
  {
    sub_248018300();
    swift_allocError();
    swift_willThrow();
  }
}

id sub_248014EC4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v2 = (void *)sub_248175130();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  id v4 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_248175130();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v9, sel_initWithUsername_altDSID_machineID_continuationKey_passwordResetKey_, v2, v3, v4, v5, v6);

  return v7;
}

void *sub_248014FE8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B13BEB0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      uint64_t v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_248017C30(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2480150F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248015158(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248015118(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_2480152B8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248015138(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_248015418(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_248015158(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B13BEA8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_248175A10();
  __break(1u);
  return result;
}

uint64_t sub_2480152B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2692DB7D0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_248175A10();
  __break(1u);
  return result;
}

uint64_t sub_248015418(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73B8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_248175A10();
  __break(1u);
  return result;
}

uint64_t sub_2480155A0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_248015644(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t _s12AppleIDSetup15UserProfileInfoV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (v10 = sub_248175CE0(), uint64_t result = 0, (v10 & 1) != 0))
  {
    if (v4)
    {
      if (!v6) {
        return 0;
      }
      if (v2 != v7 || v4 != v6)
      {
        char v12 = sub_248175CE0();
        uint64_t result = 0;
        if ((v12 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v6)
    {
      return 0;
    }
    if (v5)
    {
      if (v8 && (v3 == v9 && v5 == v8 || (sub_248175CE0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s12AppleIDSetup11IdMSAccountV10CredentialO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v13 = *(void *)a2;
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 40);
  uint64_t v18 = *(void *)(a2 + 48);
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v20 = *(void *)(a2 + 64);
  int v21 = *(unsigned __int8 *)(a2 + 72);
  v82[0] = *(void *)a1;
  v82[1] = v3;
  uint64_t v80 = v7;
  uint64_t v81 = v5;
  v82[2] = v5;
  v82[3] = v4;
  v82[4] = v7;
  v82[5] = v6;
  uint64_t v78 = v9;
  uint64_t v79 = v6;
  v82[6] = v9;
  v82[7] = v8;
  uint64_t v76 = v10;
  uint64_t v77 = v8;
  v82[8] = v10;
  char v83 = v11;
  uint64_t v84 = v13;
  uint64_t v85 = v12;
  uint64_t v86 = v15;
  uint64_t v87 = v14;
  uint64_t v88 = v16;
  uint64_t v89 = v17;
  uint64_t v90 = v18;
  uint64_t v91 = v19;
  uint64_t v92 = v20;
  char v93 = v21;
  switch(v11)
  {
    case 1:
      if (v21 != 1) {
        goto LABEL_31;
      }
      if (v2 != v13 || v3 != v12)
      {
        uint64_t v69 = v2;
        uint64_t v73 = v4;
        uint64_t v30 = v3;
        char v31 = sub_248175CE0();
        uint64_t v2 = v69;
        uint64_t v4 = v73;
        uint64_t v3 = v30;
        if ((v31 & 1) == 0)
        {
          uint64_t v53 = v12;
          uint64_t v39 = v69;
          uint64_t v54 = v15;
          uint64_t v41 = v73;
          uint64_t v55 = v14;
          uint64_t v43 = v30;
          sub_247FABF8C(v13, v53, v54, v55, v16, v17, v18, v19, v20, 1);
          char v62 = 1;
          goto LABEL_32;
        }
      }
      if (v4)
      {
        if (!v14)
        {
          uint64_t v56 = v12;
          uint64_t v57 = v2;
          uint64_t v58 = v15;
          uint64_t v41 = v4;
          uint64_t v59 = v18;
          uint64_t v60 = v3;
          sub_247FABF8C(v13, v56, v58, 0, v16, v17, v59, v19, v20, 1);
          char v62 = 1;
          uint64_t v61 = v76;
          uint64_t v44 = v57;
          uint64_t v45 = v60;
          goto LABEL_33;
        }
        if (v81 == v15 && v4 == v14)
        {
          char v32 = 1;
          uint64_t v33 = v12;
          uint64_t v34 = v2;
          uint64_t v35 = v4;
          uint64_t v36 = v18;
          uint64_t v37 = v3;
          sub_247FABF8C(v13, v33, v81, v4, v16, v17, v36, v19, v20, 1);
          sub_247FABF8C(v34, v37, v81, v35, v80, v79, v78, v77, v76, 1);
          goto LABEL_39;
        }
        uint64_t v71 = v2;
        uint64_t v75 = v4;
        uint64_t v67 = v3;
        sub_248175CE0();
        char v32 = 1;
        sub_247FABF8C(v13, v12, v15, v14, v16, v17, v18, v19, v20, 1);
        sub_247FABF8C(v71, v67, v81, v75, v80, v79, v78, v77, v76, 1);
        sub_24801C154((uint64_t)v82);
        if ((v64 & 1) == 0) {
          goto LABEL_35;
        }
      }
      else
      {
        char v32 = 1;
        uint64_t v49 = v12;
        uint64_t v50 = v2;
        uint64_t v51 = v18;
        uint64_t v52 = v3;
        sub_247FABF8C(v13, v49, v15, v14, v16, v17, v51, v19, v20, 1);
        sub_247FABF8C(v50, v52, v81, 0, v80, v79, v78, v77, v76, 1);
        swift_bridgeObjectRetain();
        sub_24801C154((uint64_t)v82);
        if (v14)
        {
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
      return v32 & 1;
    case 2:
      if (v21 != 2) {
        goto LABEL_31;
      }
      uint64_t v70 = v2;
      uint64_t v74 = v4;
      uint64_t v65 = v3;
      if (v2 == v13 && v3 == v12) {
        char v32 = 1;
      }
      else {
        char v32 = sub_248175CE0();
      }
      sub_247FABF8C(v13, v12, v15, v14, v16, v17, v18, v19, v20, 2);
      sub_247FABF8C(v70, v65, v81, v74, v80, v79, v78, v77, v76, 2);
LABEL_39:
      sub_24801C154((uint64_t)v82);
      return v32 & 1;
    case 3:
      if (v21 != 3 || v12 | v13 | v15 | v14 | v16 | v17 | v18 | v19 | v20) {
        goto LABEL_31;
      }
      sub_24801C154((uint64_t)v82);
      char v32 = 1;
      return v32 & 1;
    default:
      if (v21)
      {
LABEL_31:
        uint64_t v38 = v12;
        uint64_t v39 = v2;
        uint64_t v40 = v15;
        uint64_t v41 = v4;
        uint64_t v42 = v14;
        uint64_t v43 = v3;
        sub_247FABF8C(v13, v38, v40, v42, v16, v17, v18, v19, v20, v21);
        char v62 = v11;
LABEL_32:
        uint64_t v61 = v76;
        uint64_t v44 = v39;
        uint64_t v45 = v43;
LABEL_33:
        sub_247FABF8C(v44, v45, v81, v41, v80, v79, v78, v77, v61, v62);
        goto LABEL_34;
      }
      uint64_t v68 = v2;
      uint64_t v72 = v4;
      uint64_t v22 = v5;
      if (v2 != v13 || v3 != v12)
      {
        uint64_t v23 = v3;
        char v24 = sub_248175CE0();
        uint64_t v3 = v23;
        uint64_t v22 = v81;
        if ((v24 & 1) == 0) {
          goto LABEL_40;
        }
      }
      if (v22 != v15 || v72 != v14)
      {
        uint64_t v25 = v3;
        char v26 = sub_248175CE0();
        uint64_t v3 = v25;
        uint64_t v22 = v81;
        if ((v26 & 1) == 0) {
          goto LABEL_40;
        }
      }
      if (v80 != v16 || v79 != v17)
      {
        uint64_t v27 = v3;
        char v28 = sub_248175CE0();
        uint64_t v3 = v27;
        uint64_t v22 = v81;
        if ((v28 & 1) == 0)
        {
LABEL_40:
          uint64_t v47 = v14;
          uint64_t v48 = v3;
          sub_247FABF8C(v13, v12, v15, v47, v16, v17, v18, v19, v20, 0);
          sub_247FABF8C(v68, v48, v22, v72, v80, v79, v78, v77, v76, 0);
LABEL_34:
          sub_24801C154((uint64_t)v82);
          goto LABEL_35;
        }
      }
      if (v78 == v18 && v77 == v19)
      {
        uint64_t v29 = v3;
        sub_247FABF8C(v13, v12, v15, v14, v16, v17, v78, v77, v20, 0);
        sub_247FABF8C(v68, v29, v81, v72, v80, v79, v78, v77, v76, 0);
        sub_24801C154((uint64_t)v82);
        if (v76 == v20)
        {
LABEL_48:
          char v32 = 1;
          return v32 & 1;
        }
      }
      else
      {
        uint64_t v66 = v3;
        sub_248175CE0();
        sub_247FABF8C(v13, v12, v15, v14, v16, v17, v18, v19, v20, 0);
        sub_247FABF8C(v68, v66, v81, v72, v80, v79, v78, v77, v76, 0);
        sub_24801C154((uint64_t)v82);
        if ((v63 & 1) != 0 && v76 == v20) {
          goto LABEL_48;
        }
      }
LABEL_35:
      char v32 = 0;
      return v32 & 1;
  }
}

uint64_t _s12AppleIDSetup11IdMSAccountV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_248175CE0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for IdMSAccount();
  if ((sub_2481746E0() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = (char *)a1 + *(int *)(v5 + 24);
  uint64_t v7 = *((void *)v6 + 8);
  char v8 = v6[72];
  long long v9 = *((_OWORD *)v6 + 1);
  v23[0] = *(_OWORD *)v6;
  v23[1] = v9;
  long long v10 = *((_OWORD *)v6 + 3);
  v23[2] = *((_OWORD *)v6 + 2);
  v23[3] = v10;
  uint64_t v24 = v7;
  char v25 = v8;
  uint64_t v11 = (char *)a2 + *(int *)(v5 + 24);
  uint64_t v12 = *((void *)v11 + 8);
  char v13 = v11[72];
  long long v14 = *((_OWORD *)v11 + 1);
  v20[0] = *(_OWORD *)v11;
  v20[1] = v14;
  long long v15 = *((_OWORD *)v11 + 3);
  void v20[2] = *((_OWORD *)v11 + 2);
  v20[3] = v15;
  uint64_t v21 = v12;
  char v22 = v13;
  if ((_s12AppleIDSetup11IdMSAccountV10CredentialO2eeoiySbAE_AEtFZ_0((uint64_t)v23, (uint64_t)v20) & 1) == 0) {
    return 0;
  }
  uint64_t v16 = *(int *)(v5 + 28);
  uint64_t v17 = *(void *)((char *)a1 + v16);
  uint64_t v18 = *(void *)((char *)a2 + v16);
  return sub_24815D598(v17, v18);
}

uint64_t type metadata accessor for IdMSAccount()
{
  uint64_t result = qword_2692D7290;
  if (!qword_2692D7290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_248016028()
{
  unint64_t result = qword_2692D7040;
  if (!qword_2692D7040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7040);
  }
  return result;
}

unint64_t sub_24801607C()
{
  unint64_t result = qword_2692D7048;
  if (!qword_2692D7048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7048);
  }
  return result;
}

unint64_t sub_2480160D0()
{
  unint64_t result = qword_2692D7058;
  if (!qword_2692D7058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7058);
  }
  return result;
}

unint64_t sub_248016124()
{
  unint64_t result = qword_2692D7068;
  if (!qword_2692D7068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7068);
  }
  return result;
}

unint64_t sub_248016178()
{
  unint64_t result = qword_2692D7078;
  if (!qword_2692D7078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7078);
  }
  return result;
}

uint64_t sub_2480161CC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D67D8);
    sub_24801BFD8(a2, type metadata accessor for AIDAServiceType);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_248016260(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IdMSAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2480162C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IdMSAccount();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL _s12AppleIDSetup11IdMSAccountV10SRPResultsV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[10];
  unint64_t v2 = a1[11];
  uint64_t v5 = a2[10];
  unint64_t v4 = a2[11];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_248175CE0(), BOOL result = 0, (v7 & 1) != 0))
  {
    if (v2 >> 60 == 15)
    {
      if (v4 >> 60 == 15) {
        return 1;
      }
    }
    else if (v4 >> 60 != 15)
    {
      sub_247FB8458(v3, v2);
      sub_247FB8458(v5, v4);
      char v9 = sub_24802CAF4(v3, v2, v5, v4);
      sub_247FB846C(v5, v4);
      sub_247FB846C(v3, v2);
      return (v9 & 1) != 0;
    }
    sub_247FB8458(v3, v2);
    sub_247FB8458(v5, v4);
    sub_247FB846C(v3, v2);
    sub_247FB846C(v5, v4);
    return 0;
  }
  return result;
}

BOOL _s12AppleIDSetup11IdMSAccountV10CredentialO20CompanionKeyEnvelopeV2eeoiySbAG_AGtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v17 = a1[6];
  uint64_t v18 = a1[7];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v15 = a2[8];
  uint64_t v16 = a1[8];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_248175CE0(), BOOL result = 0, (v12 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7) {
      return (v3 == v8 && v5 == v9 || (sub_248175CE0() & 1) != 0)
    }
          && (v17 == v11 && v18 == v10 || (sub_248175CE0() & 1) != 0)
          && v16 == v15;
    char v14 = sub_248175CE0();
    BOOL result = 0;
    if (v14) {
      return (v3 == v8 && v5 == v9 || (sub_248175CE0() & 1) != 0)
    }
          && (v17 == v11 && v18 == v10 || (sub_248175CE0() & 1) != 0)
          && v16 == v15;
  }
  return result;
}

unint64_t sub_24801657C()
{
  unint64_t result = qword_2692D70A8;
  if (!qword_2692D70A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D70A8);
  }
  return result;
}

unint64_t sub_2480165D0()
{
  unint64_t result = qword_2692D70B0;
  if (!qword_2692D70B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D70B0);
  }
  return result;
}

unint64_t sub_248016624()
{
  unint64_t result = qword_2692D70B8;
  if (!qword_2692D70B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D70B8);
  }
  return result;
}

unint64_t sub_248016678()
{
  unint64_t result = qword_2692D70C0;
  if (!qword_2692D70C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D70C0);
  }
  return result;
}

unint64_t sub_2480166CC()
{
  unint64_t result = qword_2692D70C8;
  if (!qword_2692D70C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D70C8);
  }
  return result;
}

unint64_t sub_248016720()
{
  unint64_t result = qword_2692D70D0;
  if (!qword_2692D70D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D70D0);
  }
  return result;
}

unint64_t sub_248016774()
{
  unint64_t result = qword_2692D7100;
  if (!qword_2692D7100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7100);
  }
  return result;
}

unint64_t sub_2480167C8()
{
  unint64_t result = qword_2692D7110;
  if (!qword_2692D7110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7110);
  }
  return result;
}

unint64_t sub_24801681C()
{
  unint64_t result = qword_2692D7120;
  if (!qword_2692D7120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7120);
  }
  return result;
}

unint64_t sub_248016870()
{
  unint64_t result = qword_2692D7130;
  if (!qword_2692D7130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7130);
  }
  return result;
}

unint64_t sub_2480168C4()
{
  unint64_t result = qword_2692D9E90;
  if (!qword_2692D9E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D9E90);
  }
  return result;
}

unint64_t sub_248016918()
{
  unint64_t result = qword_2692D7140;
  if (!qword_2692D7140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7140);
  }
  return result;
}

uint64_t _s12AppleIDSetup11IdMSAccountV10DeviceInfoV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void **)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void **)(a2 + 48);
  uint64_t v18 = *(void **)(a2 + 56);
  uint64_t v19 = *(void **)(a1 + 56);
  int v16 = *(unsigned __int8 *)(a2 + 64);
  int v17 = *(unsigned __int8 *)(a1 + 64);
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v12 = sub_248175CE0();
    uint64_t result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (v2 != v7 || v4 != v8)
  {
    char v14 = sub_248175CE0();
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  if (!v6)
  {
    if (!v9) {
      return v17 ^ v16 ^ 1u;
    }
LABEL_18:
    sub_247FF6AA4(v10, v9);
    sub_247FF6BFC(v3, v6);
    sub_247FF6BFC(v10, v9);
    return 0;
  }
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  if (v3 == v10 && v6 == v9 || (v15 = sub_248175CE0(), uint64_t result = 0, (v15 & 1) != 0))
  {
    if ((sub_2480F3F3C(v5, v11) & 1) == 0 || (sub_2480F3F3C(v19, v18) & 1) == 0) {
      return 0;
    }
    return v17 ^ v16 ^ 1u;
  }
  return result;
}

BOOL _s12AppleIDSetup11IdMSAccountV15AnisettePackageV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_248175CE0(), BOOL result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 == v7;
    }
    char v12 = sub_248175CE0();
    BOOL result = 0;
    if (v12) {
      return v4 == v7;
    }
  }
  return result;
}

unint64_t sub_248016BBC()
{
  unint64_t result = qword_2692D7150;
  if (!qword_2692D7150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7150);
  }
  return result;
}

unint64_t sub_248016C10()
{
  unint64_t result = qword_2692D7178;
  if (!qword_2692D7178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7178);
  }
  return result;
}

unint64_t sub_248016C64()
{
  unint64_t result = qword_2692D7180;
  if (!qword_2692D7180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7180);
  }
  return result;
}

unint64_t sub_248016CB8()
{
  unint64_t result = qword_2692D7190;
  if (!qword_2692D7190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7190);
  }
  return result;
}

unint64_t sub_248016D0C()
{
  unint64_t result = qword_2692D71A0;
  if (!qword_2692D71A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D71A0);
  }
  return result;
}

unint64_t sub_248016D60()
{
  unint64_t result = qword_2692D71A8;
  if (!qword_2692D71A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D71A8);
  }
  return result;
}

unint64_t sub_248016DB4()
{
  unint64_t result = qword_2692D71B8;
  if (!qword_2692D71B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D71B8);
  }
  return result;
}

uint64_t sub_248016E08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69746E6564657263 && a2 == 0xEA00000000006C61 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365636976726573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_248016FA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F696E61706D6F63 && a2 == 0xED00007379654B6ELL || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000248190F50 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7773736150776172 && a2 == 0xEB0000000064726FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_248017188(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000248190F50 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144736D6469 && a2 == 0xED00006E656B6F54)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24801729C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64697344746C61 && a2 == 0xE700000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E72657375 && a2 == 0xE800000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684632420 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7355656369766564 && a2 == 0xEC00000064497265)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2480174B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2480175A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49656E696863616DLL && a2 == 0xE900000000000044;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50656D6954656E6FLL && a2 == 0xEF64726F77737361 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49676E6974756F72 && a2 == 0xEB000000006F666ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_248017748(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000248190F70 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000248190F90 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E49656C61636F6CLL && a2 == 0xEA00000000006F66 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x79636167654C7369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_248017908(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61756E69746E6F63 && a2 == 0xEF79654B6E6F6974;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000248190FB0 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574746573696E61 && a2 == 0xEF6567616B636150)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

id sub_248017AA0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[5];
  uint64_t v7 = (void *)sub_248175130();
  id v8 = objc_msgSend(a2, sel_authKitAccountWithAltDSID_, v7);

  if (!v8)
  {
    if (!v5
      || (uint64_t v10 = (void *)sub_248175130(),
          id v8 = objc_msgSend(a2, sel_authKitAccountWithAppleID_, v10),
          v10,
          !v8))
    {
      if (!v6
        || (uint64_t v11 = (void *)sub_248175130(),
            sub_247FB3398(0, &qword_2692D9EB0),
            objc_msgSend(v11, sel_integerValue),
            char v12 = (void *)sub_2481756B0(),
            id v8 = objc_msgSend(a2, sel_authKitAccountWithDSID_, v12),
            v12,
            v11,
            !v8))
      {
        sub_248017F18();
        swift_allocError();
        *(void *)uint64_t v13 = v3;
        *(void *)(v13 + 8) = v4;
        *(unsigned char *)(v13 + 16) = 1;
        swift_bridgeObjectRetain();
        swift_willThrow();
      }
    }
  }
  return v8;
}

uint64_t sub_248017C30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for AIDAServiceType(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_248175A10();
  __break(1u);
  return result;
}

uint64_t sub_248017D38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for AIDAServiceType(0);
  sub_24801BFD8((unint64_t *)&qword_26B13BE70, type metadata accessor for AIDAServiceType);
  uint64_t result = sub_248175550();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      unint64_t v5 = *v4++;
      sub_248053EC4(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_248017DF4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_248017E00(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D5080);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_248017E60()
{
  unint64_t result = qword_2692D71C0;
  if (!qword_2692D71C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D71C0);
  }
  return result;
}

uint64_t sub_248017EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IdMSAccount();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_248017F18()
{
  unint64_t result = qword_2692D71D8;
  if (!qword_2692D71D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D71D8);
  }
  return result;
}

void *sub_248017F6C(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_2481759D0();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v25 = v3;
      unint64_t v26 = v2 & 0xC000000000000001;
      uint64_t v4 = 4;
      while (1)
      {
        if (v26) {
          id v5 = (id)MEMORY[0x24C573D60](v4 - 4, v2);
        }
        else {
          id v5 = *(id *)(v2 + 8 * v4);
        }
        id v6 = v5;
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_33;
        }
        id v8 = objc_msgSend(v5, sel_aa_altDSID);
        if (v8)
        {
          char v9 = v8;
          uint64_t v10 = sub_248175160();
          uint64_t v12 = v11;

          if (v10 == *a2 && v12 == a2[1])
          {
            swift_bridgeObjectRelease();
LABEL_31:
            swift_bridgeObjectRelease();
            return v6;
          }
          char v14 = sub_248175CE0();
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_31;
          }
        }
        unint64_t v15 = v2;
        uint64_t v17 = a2[2];
        uint64_t v16 = a2[3];
        swift_bridgeObjectRetain();
        id v18 = objc_msgSend(v6, sel_username);
        if (!v18) {
          break;
        }
        uint64_t v19 = v18;
        uint64_t v20 = sub_248175160();
        uint64_t v22 = v21;

        if (!v16)
        {
          if (!v22) {
            goto LABEL_31;
          }
          goto LABEL_5;
        }
        if (!v22) {
          goto LABEL_5;
        }
        if (v17 == v20 && v16 == v22)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        char v23 = sub_248175CE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_31;
        }

LABEL_6:
        unint64_t v2 = v15;
        ++v4;
        if (v7 == v25) {
          goto LABEL_34;
        }
      }
      if (!v16) {
        goto LABEL_31;
      }
LABEL_5:

      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
LABEL_34:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2480181D4(uint64_t a1)
{
  return a1;
}

uint64_t sub_248018240(uint64_t a1)
{
  return a1;
}

unint64_t sub_2480182AC()
{
  unint64_t result = qword_2692D7208;
  if (!qword_2692D7208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7208);
  }
  return result;
}

unint64_t sub_248018300()
{
  unint64_t result = qword_2692D7218;
  if (!qword_2692D7218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7218);
  }
  return result;
}

uint64_t sub_248018354(void *a1)
{
  a1[1] = sub_24801BFD8(&qword_2692D50E0, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  a1[2] = sub_24801BFD8(&qword_2692D5098, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  uint64_t result = sub_24801BFD8(&qword_2692D7220, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  a1[3] = result;
  return result;
}

uint64_t sub_248018400()
{
  return sub_24801BFD8(&qword_2692D7228, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
}

uint64_t sub_248018448(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248018488(a1, a2, a3, (uint64_t (*)(void))sub_248016178, (uint64_t (*)(void))sub_2480160D0, (uint64_t (*)(void))sub_2480184DC);
}

uint64_t sub_248018488(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_2480184DC()
{
  unint64_t result = qword_2692D7230;
  if (!qword_2692D7230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7230);
  }
  return result;
}

unint64_t sub_248018534()
{
  unint64_t result = qword_2692D7238;
  if (!qword_2692D7238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7238);
  }
  return result;
}

uint64_t sub_248018588(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248018488(a1, a2, a3, (uint64_t (*)(void))sub_248016124, (uint64_t (*)(void))sub_24801607C, (uint64_t (*)(void))sub_2480185C8);
}

unint64_t sub_2480185C8()
{
  unint64_t result = qword_26B13BA98;
  if (!qword_26B13BA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13BA98);
  }
  return result;
}

unint64_t sub_248018620()
{
  unint64_t result = qword_26B13BAA0;
  if (!qword_26B13BAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B13BAA0);
  }
  return result;
}

uint64_t sub_248018674(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248018488(a1, a2, a3, (uint64_t (*)(void))sub_247FFA0F0, (uint64_t (*)(void))sub_247FF9FC0, (uint64_t (*)(void))sub_247FF9EC4);
}

uint64_t sub_2480186B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248018488(a1, a2, a3, (uint64_t (*)(void))sub_248016DB4, (uint64_t (*)(void))sub_248016D60, (uint64_t (*)(void))sub_2480186F8);
}

unint64_t sub_2480186F8()
{
  unint64_t result = qword_2692D7240;
  if (!qword_2692D7240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7240);
  }
  return result;
}

unint64_t sub_248018750()
{
  unint64_t result = qword_2692D7248;
  if (!qword_2692D7248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7248);
  }
  return result;
}

uint64_t sub_2480187A4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248018488(a1, a2, a3, (uint64_t (*)(void))sub_247FF9D1C, (uint64_t (*)(void))sub_247FF9CC8, (uint64_t (*)(void))sub_2480187E4);
}

unint64_t sub_2480187E4()
{
  unint64_t result = qword_2692D7250;
  if (!qword_2692D7250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7250);
  }
  return result;
}

unint64_t sub_24801883C()
{
  unint64_t result = qword_2692D7258;
  if (!qword_2692D7258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7258);
  }
  return result;
}

uint64_t sub_248018890(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248018488(a1, a2, a3, (uint64_t (*)(void))sub_248016774, (uint64_t (*)(void))sub_2480166CC, (uint64_t (*)(void))sub_2480188D0);
}

unint64_t sub_2480188D0()
{
  unint64_t result = qword_2692D7260;
  if (!qword_2692D7260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7260);
  }
  return result;
}

unint64_t sub_248018928()
{
  unint64_t result = qword_2692D7268;
  if (!qword_2692D7268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7268);
  }
  return result;
}

uint64_t sub_24801897C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_248018488(a1, a2, a3, (uint64_t (*)(void))sub_2480189BC, (uint64_t (*)(void))sub_248018A10, (uint64_t (*)(void))sub_248018A64);
}

unint64_t sub_2480189BC()
{
  unint64_t result = qword_2692D7270;
  if (!qword_2692D7270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7270);
  }
  return result;
}

unint64_t sub_248018A10()
{
  unint64_t result = qword_2692D7278;
  if (!qword_2692D7278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7278);
  }
  return result;
}

unint64_t sub_248018A64()
{
  unint64_t result = qword_2692D7280;
  if (!qword_2692D7280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7280);
  }
  return result;
}

unint64_t sub_248018ABC()
{
  unint64_t result = qword_2692D7288;
  if (!qword_2692D7288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7288);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for IdMSAccount(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    uint64_t v11 = a3[5];
    char v28 = (char *)a2 + v11;
    uint64_t v30 = (char *)a1 + v11;
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v13 = sub_248174700();
    unint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v30, v28, v13);
    uint64_t v14 = a3[6];
    unint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *((void *)v16 + 1);
    uint64_t v19 = *((void *)v16 + 2);
    uint64_t v20 = *((void *)v16 + 3);
    uint64_t v21 = *((void *)v16 + 4);
    uint64_t v22 = *((void *)v16 + 5);
    uint64_t v23 = *((void *)v16 + 6);
    uint64_t v27 = *((void *)v16 + 7);
    uint64_t v29 = *((void *)v16 + 8);
    LOBYTE(v30) = v16[72];
    sub_247FABF8C(*(void *)v16, v18, v19, v20, v21, v22, v23, v27, v29, (char)v30);
    *(void *)unint64_t v15 = v17;
    *((void *)v15 + 1) = v18;
    *((void *)v15 + 2) = v19;
    *((void *)v15 + 3) = v20;
    *((void *)v15 + 4) = v21;
    *((void *)v15 + 5) = v22;
    *((void *)v15 + 6) = v23;
    *((void *)v15 + 7) = v27;
    *((void *)v15 + 8) = v29;
    v15[72] = (char)v30;
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for IdMSAccount(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_248174700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  sub_247FAC1EC(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), *(void *)(v6 + 24), *(void *)(v6 + 32), *(void *)(v6 + 40), *(void *)(v6 + 48), *(void *)(v6 + 56), *(void *)(v6 + 64), *(unsigned char *)(v6 + 72));
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IdMSAccount(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v10 = a2[9];
  uint64_t v11 = a3[5];
  char v28 = (char *)a1 + v11;
  unint64_t v26 = (char *)a2 + v11;
  a1[8] = a2[8];
  a1[9] = v10;
  uint64_t v12 = sub_248174700();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v28, v26, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  unint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 1);
  uint64_t v17 = *((void *)v15 + 2);
  uint64_t v18 = *((void *)v15 + 3);
  uint64_t v19 = *((void *)v15 + 4);
  uint64_t v20 = *((void *)v15 + 5);
  uint64_t v21 = *((void *)v15 + 6);
  uint64_t v22 = *((void *)v15 + 7);
  uint64_t v25 = *(void *)v15;
  uint64_t v27 = *((void *)v15 + 8);
  LOBYTE(v28) = v15[72];
  sub_247FABF8C(*(void *)v15, v16, v17, v18, v19, v20, v21, v22, v27, (char)v28);
  *(void *)uint64_t v14 = v25;
  *((void *)v14 + 1) = v16;
  *((void *)v14 + 2) = v17;
  *((void *)v14 + 3) = v18;
  *((void *)v14 + 4) = v19;
  *((void *)v14 + 5) = v20;
  *((void *)v14 + 6) = v21;
  *((void *)v14 + 7) = v22;
  *((void *)v14 + 8) = v27;
  v14[72] = (char)v28;
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdMSAccount(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  uint64_t v14 = *((void *)v12 + 1);
  uint64_t v15 = *((void *)v12 + 2);
  uint64_t v16 = *((void *)v12 + 3);
  uint64_t v17 = *((void *)v12 + 4);
  uint64_t v18 = *((void *)v12 + 5);
  uint64_t v19 = *((void *)v12 + 6);
  uint64_t v31 = *((void *)v12 + 7);
  uint64_t v32 = *((void *)v12 + 8);
  char v33 = v12[72];
  sub_247FABF8C(*(void *)v12, v14, v15, v16, v17, v18, v19, v31, v32, v33);
  uint64_t v20 = *(void *)v11;
  uint64_t v21 = *((void *)v11 + 1);
  uint64_t v22 = *((void *)v11 + 2);
  uint64_t v23 = *((void *)v11 + 3);
  uint64_t v24 = *((void *)v11 + 4);
  uint64_t v25 = *((void *)v11 + 5);
  uint64_t v26 = *((void *)v11 + 6);
  uint64_t v27 = *((void *)v11 + 7);
  uint64_t v28 = *((void *)v11 + 8);
  char v29 = v11[72];
  *(void *)uint64_t v11 = v13;
  *((void *)v11 + 1) = v14;
  *((void *)v11 + 2) = v15;
  *((void *)v11 + 3) = v16;
  *((void *)v11 + 4) = v17;
  *((void *)v11 + 5) = v18;
  *((void *)v11 + 6) = v19;
  *((void *)v11 + 7) = v31;
  *((void *)v11 + 8) = v32;
  v11[72] = v33;
  sub_247FAC1EC(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for IdMSAccount(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  long long v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (_OWORD *)((char *)a1 + v12);
  uint64_t v15 = (_OWORD *)((char *)a2 + v12);
  long long v16 = v15[3];
  void v14[2] = v15[2];
  v14[3] = v16;
  *(_OWORD *)((char *)v14 + 57) = *(_OWORD *)((char *)v15 + 57);
  long long v17 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v17;
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  return a1;
}

void *assignWithTake for IdMSAccount(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_248174700();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[6];
  long long v16 = (char *)a1 + v15;
  long long v17 = (char *)a2 + v15;
  uint64_t v18 = *((void *)v17 + 8);
  char v19 = v17[72];
  uint64_t v20 = *(void *)v16;
  uint64_t v21 = *((void *)v16 + 1);
  uint64_t v22 = *((void *)v16 + 2);
  uint64_t v23 = *((void *)v16 + 3);
  uint64_t v24 = *((void *)v16 + 4);
  uint64_t v25 = *((void *)v16 + 5);
  uint64_t v26 = *((void *)v16 + 6);
  uint64_t v27 = *((void *)v16 + 7);
  uint64_t v28 = *((void *)v16 + 8);
  char v29 = v16[72];
  long long v30 = *((_OWORD *)v17 + 1);
  *(_OWORD *)long long v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v30;
  long long v31 = *((_OWORD *)v17 + 3);
  *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
  *((_OWORD *)v16 + 3) = v31;
  *((void *)v16 + 8) = v18;
  v16[72] = v19;
  sub_247FAC1EC(v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_248019368);
}

uint64_t sub_248019368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_248174700();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for IdMSAccount(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24801942C);
}

uint64_t sub_24801942C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_248174700();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2480194D4()
{
  uint64_t result = sub_248174700();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for IdMSAccount.Credential(uint64_t a1)
{
  return sub_247FAC1EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
}

uint64_t initializeWithCopy for IdMSAccount.Credential(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  sub_247FABF8C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(unsigned char *)(a2 + 72));
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v13;
  return a1;
}

uint64_t assignWithCopy for IdMSAccount.Credential(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  sub_247FABF8C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, *(unsigned char *)(a2 + 72));
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v20 = *(void *)(a1 + 64);
  char v21 = *(unsigned char *)(a1 + 72);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v23;
  sub_247FAC1EC(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for IdMSAccount.Credential(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  char v4 = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  char v14 = *(unsigned char *)(a1 + 72);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(void *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 72) = v4;
  sub_247FAC1EC(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.Credential(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.Credential(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 72) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_248019884(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 72) <= 2u) {
    return *(unsigned __int8 *)(a1 + 72);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_24801989C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 72) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential()
{
  return &type metadata for IdMSAccount.Credential;
}

uint64_t destroy for IdMSAccount.ID()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IdMSAccount.ID(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdMSAccount.ID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for IdMSAccount.ID(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.ID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.ID()
{
  return &type metadata for IdMSAccount.ID;
}

uint64_t destroy for IdMSAccount.SRPResults(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 88);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 80);
    return sub_247FB6CCC(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for IdMSAccount.SRPResults(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = a2 + 10;
  unint64_t v9 = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_247FB6C20(*v8, v9);
    *(void *)(a1 + 80) = v10;
    *(void *)(a1 + 88) = v9;
  }
  return a1;
}

void *assignWithCopy for IdMSAccount.SRPResults(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 10;
  unint64_t v5 = a2[11];
  if (a1[11] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_247FB6C20(*v4, v5);
      uint64_t v8 = a1[10];
      unint64_t v9 = a1[11];
      a1[10] = v7;
      a1[11] = v5;
      sub_247FB6CCC(v8, v9);
      return a1;
    }
    sub_248007220((uint64_t)(a1 + 10));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 5) = *(_OWORD *)v4;
    return a1;
  }
  uint64_t v6 = *v4;
  sub_247FB6C20(*v4, v5);
  a1[10] = v6;
  a1[11] = v5;
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *assignWithTake for IdMSAccount.SRPResults(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  unint64_t v9 = a2 + 10;
  unint64_t v10 = a1[11];
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = a2[11];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = a1[10];
      a1[10] = *v9;
      a1[11] = v11;
      sub_247FB6CCC(v12, v10);
      return a1;
    }
    sub_248007220((uint64_t)(a1 + 10));
  }
  *((_OWORD *)a1 + 5) = *(_OWORD *)v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.SRPResults(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.SRPResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.SRPResults()
{
  return &type metadata for IdMSAccount.SRPResults;
}

uint64_t destroy for IdMSAccount.AnisettePackage()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IdMSAccount.AnisettePackage(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdMSAccount.AnisettePackage(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

void *assignWithTake for IdMSAccount.AnisettePackage(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.AnisettePackage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.AnisettePackage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.AnisettePackage()
{
  return &type metadata for IdMSAccount.AnisettePackage;
}

uint64_t destroy for IdMSAccount.DeviceInfo(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for IdMSAccount.DeviceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for IdMSAccount.DeviceInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247FFB0A0(a1 + 32);
      long long v7 = *(_OWORD *)(a2 + 48);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 48) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 48) = v8;
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for IdMSAccount.DeviceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  if (!v6)
  {
    sub_247FFB0A0(a1 + 32);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    goto LABEL_6;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
LABEL_6:
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.DeviceInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.DeviceInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.DeviceInfo()
{
  return &type metadata for IdMSAccount.DeviceInfo;
}

ValueMetadata *type metadata accessor for Constants.GlobalUserDefaultsKeys()
{
  return &type metadata for Constants.GlobalUserDefaultsKeys;
}

uint64_t destroy for IdMSAccount.Credential.CompanionKeyEnvelope()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IdMSAccount.Credential.CompanionKeyEnvelope(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdMSAccount.Credential.CompanionKeyEnvelope(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

void *assignWithTake for IdMSAccount.Credential.CompanionKeyEnvelope(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for IdMSAccount.Credential.CompanionKeyEnvelope(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdMSAccount.Credential.CompanionKeyEnvelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.CompanionKeyEnvelope()
{
  return &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope;
}

uint64_t destroy for UserProfileInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for UserProfileInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for UserProfileInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for UserProfileInfo(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserProfileInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UserProfileInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserProfileInfo()
{
  return &type metadata for UserProfileInfo;
}

ValueMetadata *_s14MissingAltDsidVMa()
{
  return &_s14MissingAltDsidVN;
}

ValueMetadata *type metadata accessor for UserProfileInfo.CodingKeys()
{
  return &type metadata for UserProfileInfo.CodingKeys;
}

id sub_24801AA90(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
      __n128 result = result;
      break;
    case 1:
    case 2:
    case 3:
      __n128 result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void _s17ConversionFailureOwxx(uint64_t a1)
{
}

void sub_24801AAF0(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:

      break;
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t _s17ConversionFailureOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24801AA90(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s17ConversionFailureOwca(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24801AA90(*(id *)a2, v4, v5);
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24801AAF0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s17ConversionFailureOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24801AAF0(v4, v5, v6);
  return a1;
}

uint64_t _s17ConversionFailureOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s17ConversionFailureOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24801ACCC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_24801ACE4(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)__n128 result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *_s17ConversionFailureOMa()
{
  return &_s17ConversionFailureON;
}

ValueMetadata *type metadata accessor for IdMSAccount.NoPrimaryAccountFound()
{
  return &type metadata for IdMSAccount.NoPrimaryAccountFound;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.CompanionKeyEnvelope.CodingKeys()
{
  return &type metadata for IdMSAccount.Credential.CompanionKeyEnvelope.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.DeviceInfo.CodingKeys()
{
  return &type metadata for IdMSAccount.DeviceInfo.CodingKeys;
}

unsigned char *_s12AppleIDSetup15UserProfileInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24801AE0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.AnisettePackage.CodingKeys()
{
  return &type metadata for IdMSAccount.AnisettePackage.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.SRPResults.CodingKeys()
{
  return &type metadata for IdMSAccount.SRPResults.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for IdMSAccount.ID.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24801AF28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.ID.CodingKeys()
{
  return &type metadata for IdMSAccount.ID.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.CodingKeys()
{
  return &type metadata for IdMSAccount.Credential.CodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.NoneCodingKeys()
{
  return &type metadata for IdMSAccount.Credential.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.CompanionKeysCodingKeys()
{
  return &type metadata for IdMSAccount.Credential.CompanionKeysCodingKeys;
}

unsigned char *_s12AppleIDSetup11IdMSAccountV10SRPResultsV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24801B060);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.PasswordlessTokenCodingKeys()
{
  return &type metadata for IdMSAccount.Credential.PasswordlessTokenCodingKeys;
}

unsigned char *_s12AppleIDSetup11IdMSAccountV10CredentialO23CompanionKeysCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24801B134);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.Credential.RawPasswordCodingKeys()
{
  return &type metadata for IdMSAccount.Credential.RawPasswordCodingKeys;
}

unsigned char *_s12AppleIDSetup11IdMSAccountV10DeviceInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24801B238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdMSAccount.CodingKeys()
{
  return &type metadata for IdMSAccount.CodingKeys;
}

unint64_t sub_24801B274()
{
  unint64_t result = qword_2692D72A0;
  if (!qword_2692D72A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72A0);
  }
  return result;
}

unint64_t sub_24801B2CC()
{
  unint64_t result = qword_2692D72A8;
  if (!qword_2692D72A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72A8);
  }
  return result;
}

unint64_t sub_24801B324()
{
  unint64_t result = qword_2692D72B0;
  if (!qword_2692D72B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72B0);
  }
  return result;
}

unint64_t sub_24801B37C()
{
  unint64_t result = qword_2692D72B8;
  if (!qword_2692D72B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72B8);
  }
  return result;
}

unint64_t sub_24801B3D4()
{
  unint64_t result = qword_2692D72C0;
  if (!qword_2692D72C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72C0);
  }
  return result;
}

unint64_t sub_24801B42C()
{
  unint64_t result = qword_2692D72C8;
  if (!qword_2692D72C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72C8);
  }
  return result;
}

unint64_t sub_24801B484()
{
  unint64_t result = qword_2692D72D0;
  if (!qword_2692D72D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72D0);
  }
  return result;
}

unint64_t sub_24801B4DC()
{
  unint64_t result = qword_2692D72D8;
  if (!qword_2692D72D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72D8);
  }
  return result;
}

unint64_t sub_24801B534()
{
  unint64_t result = qword_2692D72E0;
  if (!qword_2692D72E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72E0);
  }
  return result;
}

unint64_t sub_24801B58C()
{
  unint64_t result = qword_2692D72E8;
  if (!qword_2692D72E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72E8);
  }
  return result;
}

unint64_t sub_24801B5E4()
{
  unint64_t result = qword_2692D72F0;
  if (!qword_2692D72F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72F0);
  }
  return result;
}

unint64_t sub_24801B63C()
{
  unint64_t result = qword_2692D72F8;
  if (!qword_2692D72F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D72F8);
  }
  return result;
}

unint64_t sub_24801B694()
{
  unint64_t result = qword_2692D7300;
  if (!qword_2692D7300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7300);
  }
  return result;
}

unint64_t sub_24801B6EC()
{
  unint64_t result = qword_2692D7308;
  if (!qword_2692D7308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7308);
  }
  return result;
}

unint64_t sub_24801B744()
{
  unint64_t result = qword_2692D7310;
  if (!qword_2692D7310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7310);
  }
  return result;
}

unint64_t sub_24801B79C()
{
  unint64_t result = qword_2692D7318;
  if (!qword_2692D7318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7318);
  }
  return result;
}

unint64_t sub_24801B7F4()
{
  unint64_t result = qword_2692D7320;
  if (!qword_2692D7320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7320);
  }
  return result;
}

unint64_t sub_24801B84C()
{
  unint64_t result = qword_2692D7328;
  if (!qword_2692D7328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7328);
  }
  return result;
}

unint64_t sub_24801B8A4()
{
  unint64_t result = qword_2692D7330;
  if (!qword_2692D7330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7330);
  }
  return result;
}

unint64_t sub_24801B8FC()
{
  unint64_t result = qword_2692D7338;
  if (!qword_2692D7338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7338);
  }
  return result;
}

unint64_t sub_24801B954()
{
  unint64_t result = qword_2692D7340;
  if (!qword_2692D7340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7340);
  }
  return result;
}

unint64_t sub_24801B9AC()
{
  unint64_t result = qword_2692D7348;
  if (!qword_2692D7348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7348);
  }
  return result;
}

unint64_t sub_24801BA04()
{
  unint64_t result = qword_2692D7350;
  if (!qword_2692D7350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7350);
  }
  return result;
}

unint64_t sub_24801BA5C()
{
  unint64_t result = qword_2692D7358;
  if (!qword_2692D7358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7358);
  }
  return result;
}

unint64_t sub_24801BAB4()
{
  unint64_t result = qword_2692D7360;
  if (!qword_2692D7360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7360);
  }
  return result;
}

unint64_t sub_24801BB0C()
{
  unint64_t result = qword_2692D7368;
  if (!qword_2692D7368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7368);
  }
  return result;
}

unint64_t sub_24801BB64()
{
  unint64_t result = qword_2692D7370;
  if (!qword_2692D7370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7370);
  }
  return result;
}

unint64_t sub_24801BBBC()
{
  unint64_t result = qword_2692D7378;
  if (!qword_2692D7378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7378);
  }
  return result;
}

unint64_t sub_24801BC14()
{
  unint64_t result = qword_2692D7380;
  if (!qword_2692D7380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7380);
  }
  return result;
}

unint64_t sub_24801BC6C()
{
  unint64_t result = qword_2692D7388;
  if (!qword_2692D7388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7388);
  }
  return result;
}

unint64_t sub_24801BCC4()
{
  unint64_t result = qword_2692D7390;
  if (!qword_2692D7390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7390);
  }
  return result;
}

unint64_t sub_24801BD1C()
{
  unint64_t result = qword_2692D7398;
  if (!qword_2692D7398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7398);
  }
  return result;
}

unint64_t sub_24801BD74()
{
  unint64_t result = qword_2692D73A0;
  if (!qword_2692D73A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D73A0);
  }
  return result;
}

unint64_t sub_24801BDCC()
{
  unint64_t result = qword_2692D73A8;
  if (!qword_2692D73A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D73A8);
  }
  return result;
}

unint64_t sub_24801BE24()
{
  unint64_t result = qword_2692D73B0;
  if (!qword_2692D73B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D73B0);
  }
  return result;
}

uint64_t sub_24801BE78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_248175CE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D614E74726F6873 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_248175CE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24801BFD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24801C020()
{
  unint64_t result = qword_2692D73C0;
  if (!qword_2692D73C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D73C0);
  }
  return result;
}

uint64_t sub_24801C074(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FEFB98(v2);
  return a1;
}

uint64_t sub_24801C0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24801C154(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 144);
  char v10 = *(unsigned char *)(a1 + 152);
  sub_247FAC1EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(unsigned char *)(a1 + 72));
  sub_247FAC1EC(v12, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t static AISBiome.shared.getter()
{
  type metadata accessor for AISBiome();
  return swift_initStaticObject();
}

uint64_t type metadata accessor for AISBiome()
{
  return self;
}

uint64_t AISBiome.deinit()
{
  return v0;
}

uint64_t AISBiome.__deallocating_deinit()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t AISBiomeProtocol.biomeEvent(from:familyCircleProvider:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return MEMORY[0x270FA2498](sub_24801C2A4, 0, 0);
}

uint64_t sub_24801C2A4()
{
  unint64_t v1 = (unsigned char *)(v0[6] + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  swift_beginAccess();
  if (*v1 == 1)
  {
    uint64_t v2 = (void *)v0[7];
    uint64_t v3 = v2[3];
    uint64_t v4 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v3);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
    uint64_t v5 = (void *)swift_task_alloc();
    v0[8] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_24801C4D0;
    return v13(v3, v4);
  }
  else
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v7 = sub_248174B90();
    __swift_project_value_buffer(v7, (uint64_t)qword_26B13B730);
    uint64_t v8 = sub_248174B70();
    os_log_type_t v9 = sub_2481755C0();
    if (os_log_type_enabled(v8, v9))
    {
      char v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v10 = 0;
      _os_log_impl(&dword_247F93000, v8, v9, "AISBiomeEventProvider setup aborted not fetching family", v10, 2u);
      MEMORY[0x24C574E00](v10, -1, -1);
    }

    uint64_t v11 = sub_24801C97C(0, 1);
    uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
    return v12(v11);
  }
}

uint64_t sub_24801C4D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24801C768;
  }
  else
  {
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_24801C5F8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24801C5F8()
{
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = objc_msgSend(v1, sel_me);

  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_age);
  }
  else
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_248174B90();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B13B730);
    uint64_t v5 = sub_248174B70();
    os_log_type_t v6 = sub_2481755D0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&dword_247F93000, v5, v6, "AISBiomeEventProvider childMember == nil. This should not happen", v7, 2u);
      MEMORY[0x24C574E00](v7, -1, -1);
    }

    id v3 = 0;
  }
  uint64_t v8 = sub_24801C97C((uint64_t)v3, v2 == 0);

  os_log_type_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v9(v8);
}

uint64_t sub_24801C768()
{
  if (qword_26B13B728 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = sub_248174B90();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B13B730);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_248174B70();
  os_log_type_t v6 = sub_2481755D0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[9];
  if (v7)
  {
    os_log_type_t v9 = (uint8_t *)swift_slowAlloc();
    char v10 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v12;
    sub_248175730();
    *char v10 = v12;

    _os_log_impl(&dword_247F93000, v5, v6, "AISBiomeEventProvider error fetching family %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D96F0);
    swift_arrayDestroy();
    MEMORY[0x24C574E00](v10, -1, -1);
    MEMORY[0x24C574E00](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = sub_24801C97C(0, 1);
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(v13);
}

uint64_t sub_24801C97C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v50 = a2;
  uint64_t v47 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73E0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  BOOL v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  os_log_type_t v9 = (char *)&v46 - v8;
  swift_beginAccess();
  id v10 = 0;
  int v11 = *(unsigned __int8 *)(v3 + 16);
  if (v11 != 2) {
    id v10 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v11 & 1);
  }
  id v51 = v10;
  uint64_t v12 = v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_startDate;
  swift_beginAccess();
  sub_24801D250(v12, (uint64_t)v9);
  uint64_t v13 = sub_248174850();
  uint64_t v14 = *(void *)(v13 - 8);
  long long v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v16 = 0;
  if (v15(v9, 1, v13) != 1)
  {
    uint64_t v16 = sub_248174810();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
  }
  uint64_t v17 = v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_endDate;
  swift_beginAccess();
  sub_24801D250(v17, (uint64_t)v7);
  uint64_t v18 = 0;
  if (v15(v7, 1, v13) != 1)
  {
    uint64_t v18 = (void *)sub_248174810();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
  }
  uint64_t v49 = (void *)v16;
  uint64_t v19 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_completedSetup);
  swift_beginAccess();
  id v48 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, *v19);
  uint64_t v20 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_lastViewedScreen);
  swift_beginAccess();
  uint64_t v21 = *v20;
  uint64_t v22 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_appUsage);
  swift_beginAccess();
  id v23 = 0;
  int v24 = *v22;
  if (v24 != 2) {
    id v23 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v24 & 1);
  }
  uint64_t v25 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_askToBuy);
  swift_beginAccess();
  id v26 = 0;
  int v27 = *v25;
  if (v27 != 2) {
    id v26 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v27 & 1);
  }
  uint64_t v28 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_commSafety);
  swift_beginAccess();
  id v29 = 0;
  int v30 = *v28;
  if (v30 != 2) {
    id v29 = objc_msgSend(objc_allocWithZone(NSNumber), (SEL)0x265238818, v30 & 1);
  }
  long long v31 = (unsigned __int8 *)(v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_screenDistance);
  swift_beginAccess();
  id v32 = 0;
  int v33 = *v31;
  if (v33 != 2) {
    id v32 = objc_msgSend(objc_allocWithZone(NSNumber), (SEL)0x265238818, v33 & 1);
  }
  if (v50)
  {
    id v35 = 0;
  }
  else
  {
    id v34 = objc_allocWithZone(NSNumber);
    id v35 = objc_msgSend(v34, sel_initWithInteger_, v47);
  }
  uint64_t v36 = v3 + OBJC_IVAR____TtC12AppleIDSetup27AISChildSetupAnalyticsEvent_flowType;
  swift_beginAccess();
  uint64_t v37 = 0;
  if ((*(unsigned char *)(v36 + 8) & 1) == 0)
  {
    uint64_t v37 = *(void *)v36;
    if (*(void *)v36 != 1)
    {
      if (v37)
      {
        uint64_t v52 = *(void *)v36;
        uint64_t result = sub_248175D50();
        __break(1u);
        return result;
      }
      uint64_t v37 = 2;
    }
  }
  if (v21 == 8) {
    uint64_t v38 = 0;
  }
  else {
    uint64_t v38 = v21 + 1;
  }
  uint64_t v39 = self;
  uint64_t v45 = v37;
  uint64_t v40 = v51;
  uint64_t v41 = v49;
  uint64_t v42 = v48;
  id v43 = objc_msgSend(v39, sel_biomeEventWithIsNewChildAccount_startDate_endDate_completedSetup_lastViewedScreen_appUsage_askToBuy_commSafety_screenDistance_age_flowType_, v51, v49, v18, v48, v38, v23, v26, v29, v32, v35, v45);

  return (uint64_t)v43;
}

uint64_t sub_24801CEAC(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_24801CEE4(uint64_t (*a1)(void))
{
  return a1();
}

void sub_24801CF0C(void *a1)
{
  id v2 = objc_msgSend(self, sel_ais_appleIDChildSetupSource);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = swift_dynamicCastObjCProtocolConditional();
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = a1;
      objc_msgSend(v3, sel_sendEvent_, v5);
      if (qword_26B13B728 != -1) {
        swift_once();
      }
      uint64_t v7 = sub_248174B90();
      __swift_project_value_buffer(v7, (uint64_t)qword_26B13B730);
      uint64_t v8 = sub_248174B70();
      os_log_type_t v9 = sub_2481755C0();
      if (os_log_type_enabled(v8, v9))
      {
        id v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v10 = 0;
        _os_log_impl(&dword_247F93000, v8, v9, "AISBiomeController wrote biome event for child setup", v10, 2u);
        MEMORY[0x24C574E00](v10, -1, -1);
      }
    }
    else
    {
      if (qword_26B13B728 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_248174B90();
      __swift_project_value_buffer(v14, (uint64_t)qword_26B13B730);
      long long v15 = sub_248174B70();
      os_log_type_t v16 = sub_2481755C0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl(&dword_247F93000, v15, v16, "AISBiomeController biomeEvent is not the correct type", v17, 2u);
        MEMORY[0x24C574E00](v17, -1, -1);
      }
    }
  }
  else
  {
    if (qword_26B13B728 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_248174B90();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B13B730);
    oslog = sub_248174B70();
    os_log_type_t v12 = sub_2481755C0();
    if (os_log_type_enabled(oslog, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_247F93000, oslog, v12, "AISBiomeController failed to get biome source", v13, 2u);
      MEMORY[0x24C574E00](v13, -1, -1);
    }
  }
}

uint64_t method lookup function for AISBiome(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for AISBiome);
}

uint64_t dispatch thunk of AISBiome.write(biomeEvent:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t dispatch thunk of AISBiomeProtocol.write(biomeEvent:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_24801D250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D73E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t SignInCommand.Request.account.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24802182C(v1, a1, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
}

uint64_t SignInCommand.Request.account.setter(uint64_t a1)
{
  return sub_247FF6920(a1, v1);
}

uint64_t (*SignInCommand.Request.account.modify())()
{
  return nullsub_1;
}

uint64_t SignInCommand.Request.srpResults.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 72);
  uint64_t v7 = *(void *)(v3 + 80);
  unint64_t v8 = *(void *)(v3 + 88);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v3 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v3 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v3 + 56);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_247FB8458(v7, v8);
}

uint64_t type metadata accessor for SignInCommand.Request(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_2692D7530);
}

__n128 SignInCommand.Request.srpResults.setter(long long *a1)
{
  long long v11 = a1[1];
  long long v12 = *a1;
  long long v9 = a1[3];
  long long v10 = a1[2];
  __n128 v8 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  uint64_t v3 = *((void *)a1 + 11);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
  uint64_t v5 = *(void *)(v4 + 80);
  unint64_t v6 = *(void *)(v4 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FB846C(v5, v6);
  *(_OWORD *)uint64_t v4 = v12;
  *(_OWORD *)(v4 + 16) = v11;
  *(_OWORD *)(v4 + 32) = v10;
  *(_OWORD *)(v4 + 48) = v9;
  __n128 result = v8;
  *(__n128 *)(v4 + 64) = v8;
  *(void *)(v4 + 80) = v2;
  *(void *)(v4 + 88) = v3;
  return result;
}

uint64_t (*SignInCommand.Request.srpResults.modify())()
{
  return nullsub_1;
}

uint64_t SignInCommand.Request.isFinal.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 24));
}

uint64_t SignInCommand.Request.isFinal.setter(char a1)
{
  uint64_t result = type metadata accessor for SignInCommand.Request(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*SignInCommand.Request.isFinal.modify())()
{
  return nullsub_1;
}

uint64_t SignInCommand.Request.isTerminal.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 28));
}

uint64_t SignInCommand.Request.isTerminal.setter(char a1)
{
  uint64_t result = type metadata accessor for SignInCommand.Request(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*SignInCommand.Request.isTerminal.modify())()
{
  return nullsub_1;
}

__n128 SignInCommand.Request.init(account:srpResults:isFinal:isTerminal:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  long long v16 = a2[1];
  long long v17 = *a2;
  long long v14 = a2[3];
  long long v15 = a2[2];
  __n128 v13 = (__n128)a2[4];
  uint64_t v8 = *((void *)a2 + 10);
  uint64_t v9 = *((void *)a2 + 11);
  sub_24801D8A0(a1, a5, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  long long v10 = (int *)type metadata accessor for SignInCommand.Request(0);
  uint64_t v11 = a5 + v10[5];
  *(_OWORD *)uint64_t v11 = v17;
  *(_OWORD *)(v11 + 16) = v16;
  *(_OWORD *)(v11 + 32) = v15;
  *(_OWORD *)(v11 + 48) = v14;
  __n128 result = v13;
  *(__n128 *)(v11 + 64) = v13;
  *(void *)(v11 + 80) = v8;
  *(void *)(v11 + 88) = v9;
  *(unsigned char *)(a5 + v10[6]) = a3;
  *(unsigned char *)(a5 + v10[7]) = a4;
  return result;
}

uint64_t SignInCommand.Request.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload
    || (type metadata accessor for V1Command.Request(0),
        int v6 = swift_getEnumCaseMultiPayload(),
        uint64_t v5 = type metadata accessor for V1Command.Request,
        v6 != 1))
  {
    sub_24801D840(a1, v5);
    uint64_t v12 = type metadata accessor for SignInCommand.Request(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_24801D8A0(a1, a2, type metadata accessor for SignInCommand.Request);
    uint64_t v7 = type metadata accessor for SignInCommand.Request(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t sub_24801D840(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24801D8A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t SignInCommand.Request.into()@<X0>(uint64_t a1@<X8>)
{
  return sub_24801F650(type metadata accessor for SignInCommand.Request, (void (*)(void))type metadata accessor for V1Command.Request, a1);
}

double static SignInCommand.Request.terminal.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for IdMSAccount();
  sub_2481746F0();
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  uint64_t v3 = a1 + *(int *)(v2 + 24);
  *(void *)(v3 + 64) = 0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  *(_OWORD *)uint64_t v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(unsigned char *)(v3 + 72) = 3;
  *(void *)(a1 + *(int *)(v2 + 28)) = MEMORY[0x263F8EE88];
  uint64_t v4 = (int *)type metadata accessor for SignInCommand.Request(0);
  uint64_t v5 = a1 + v4[5];
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0xE000000000000000;
  double result = 0.0;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(void *)(v5 + 80) = 0;
  *(void *)(v5 + 88) = 0xF000000000000000;
  *(unsigned char *)(a1 + v4[6]) = 0;
  *(unsigned char *)(a1 + v4[7]) = 1;
  return result;
}

uint64_t SignInCommand.Request.hash(into:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_2480217E4(&qword_2692D5898, MEMORY[0x263F06A30]);
  uint64_t v4 = a1;
  sub_2481750B0();
  uint64_t v5 = v1 + *(int *)(v3 + 24);
  uint64_t v7 = *(void *)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v11 = *(void *)(v5 + 56);
  switch(*(unsigned char *)(v5 + 72))
  {
    case 1:
      uint64_t v18 = *(void *)(v5 + 64);
      uint64_t v19 = *(void *)(v5 + 32);
      uint64_t v20 = *(void *)(v5 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v8)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        char v12 = 1;
        goto LABEL_6;
      }
      sub_248175E80();
      sub_247FAC1EC(v7, v6, v9, 0, v19, v10, v20, v11, v18, 1);
      break;
    case 2:
      uint64_t v18 = *(void *)(v5 + 64);
      uint64_t v19 = *(void *)(v5 + 32);
      uint64_t v20 = *(void *)(v5 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      char v12 = 2;
LABEL_6:
      sub_247FAC1EC(v7, v6, v9, v8, v19, v10, v20, v11, v18, v12);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v13 = *(void *)(v1 + *(int *)(v3 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC(v4, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = v1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
  uint64_t v15 = *(void *)(v14 + 80);
  unint64_t v16 = *(void *)(v14 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247FB8458(v15, v16);
  sub_2481751A0();
  sub_248175E80();
  if (v16 >> 60 != 15)
  {
    sub_247FB6C20(v15, v16);
    sub_2481747E0();
    sub_247FB846C(v15, v16);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247FB846C(v15, v16);
  sub_248175E80();
  return sub_248175E80();
}

uint64_t sub_24801DE74()
{
  uint64_t result = 0x746E756F636361;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C75736552707273;
      break;
    case 2:
      uint64_t result = 0x6C616E69467369;
      break;
    case 3:
      uint64_t result = 0x6E696D7265547369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24801DF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_248023F80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24801DF34(uint64_t a1)
{
  unint64_t v2 = sub_248021790();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24801DF70(uint64_t a1)
{
  unint64_t v2 = sub_248021790();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SignInCommand.Request.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7450);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_248021790();
  sub_248175F60();
  LOBYTE(v15) = 0;
  type metadata accessor for IdMSAccount();
  sub_2480217E4(&qword_2692D5098, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v9 = (uint64_t *)(v3 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20));
    uint64_t v10 = v9[1];
    uint64_t v15 = *v9;
    uint64_t v16 = v10;
    long long v11 = *((_OWORD *)v9 + 2);
    long long v17 = *((_OWORD *)v9 + 1);
    long long v18 = v11;
    long long v12 = *((_OWORD *)v9 + 4);
    long long v19 = *((_OWORD *)v9 + 3);
    long long v20 = v12;
    long long v21 = *((_OWORD *)v9 + 5);
    v14[15] = 1;
    sub_247FF9FC0();
    sub_248175BE0();
    LOBYTE(v15) = 2;
    sub_248175BC0();
    LOBYTE(v15) = 3;
    sub_248175BC0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SignInCommand.Request.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_2480217E4(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v3 = v0 + *(int *)(v2 + 24);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v9 = *(void *)(v3 + 56);
  switch(*(unsigned char *)(v3 + 72))
  {
    case 1:
      uint64_t v18 = *(void *)(v3 + 32);
      uint64_t v19 = *(void *)(v3 + 64);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v6)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        sub_247FAC1EC(v4, v5, v7, v6, v18, v8, v10, v9, v19, 1);
      }
      else
      {
        sub_248175E80();
        sub_247FAC1EC(v4, v5, v7, 0, v18, v8, v10, v9, v19, 1);
      }
      break;
    case 2:
      uint64_t v20 = *(void *)(v3 + 40);
      uint64_t v21 = *(void *)(v3 + 48);
      uint64_t v11 = *(void *)(v3 + 64);
      uint64_t v12 = *(void *)(v3 + 32);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FAC1EC(v4, v5, v7, v6, v12, v20, v21, v9, v11, 2);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v13 = *(void *)(v0 + *(int *)(v2 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v22, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = v1 + *(int *)(type metadata accessor for SignInCommand.Request(0) + 20);
  uint64_t v15 = *(void *)(v14 + 80);
  unint64_t v16 = *(void *)(v14 + 88);
  sub_2481751A0();
  sub_248175E80();
  if (v16 >> 60 != 15)
  {
    sub_247FB6C20(v15, v16);
    sub_2481747E0();
    sub_247FB846C(v15, v16);
  }
  sub_248175E80();
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t SignInCommand.Request.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for IdMSAccount();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7460);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for SignInCommand.Request(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  id v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_248021790();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  uint64_t v14 = v24;
  uint64_t v15 = (uint64_t)v12;
  LOBYTE(v27) = 0;
  sub_2480217E4(&qword_2692D50E0, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  uint64_t v16 = v25;
  sub_248175AF0();
  sub_24801D8A0((uint64_t)v6, v15, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  char v34 = 1;
  sub_247FFA0F0();
  sub_248175AF0();
  uint64_t v17 = v28;
  uint64_t v18 = v15 + v10[5];
  *(void *)uint64_t v18 = v27;
  *(void *)(v18 + 8) = v17;
  long long v19 = v30;
  *(_OWORD *)(v18 + 16) = v29;
  *(_OWORD *)(v18 + 32) = v19;
  long long v20 = v32;
  *(_OWORD *)(v18 + 48) = v31;
  *(_OWORD *)(v18 + 64) = v20;
  *(_OWORD *)(v18 + 80) = v33;
  LOBYTE(v27) = 2;
  *(unsigned char *)(v15 + v10[6]) = sub_248175AD0() & 1;
  LOBYTE(v27) = 3;
  char v21 = sub_248175AD0();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  *(unsigned char *)(v15 + v10[7]) = v21 & 1;
  sub_24802182C(v15, v23, type metadata accessor for SignInCommand.Request);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_24801D840(v15, type metadata accessor for SignInCommand.Request);
}

uint64_t sub_24801EA54@<X0>(uint64_t a1@<X8>)
{
  return sub_248020430(type metadata accessor for SignInCommand.Request, (void (*)(void))type metadata accessor for V1Command.Request, a1);
}

uint64_t sub_24801EA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for V1Command(0);
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v6 = type metadata accessor for V1Command;
  }
  else
  {
    type metadata accessor for V1Command.Request(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_24801D8A0(a1, a3, type metadata accessor for SignInCommand.Request);
      uint64_t v7 = 0;
      goto LABEL_7;
    }
    uint64_t v6 = type metadata accessor for V1Command.Request;
  }
  sub_24801D840(a1, v6);
  uint64_t v7 = 1;
LABEL_7:
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v8(a3, v7, 1, a2);
}

uint64_t sub_24801EB84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignInCommand.Request.init(from:)(a1, a2);
}

uint64_t sub_24801EB9C(void *a1)
{
  return SignInCommand.Request.encode(to:)(a1);
}

uint64_t sub_24801EBBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_2480217E4(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v6 = v2 + *(int *)(v5 + 24);
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = *(void *)(v6 + 40);
  uint64_t v12 = *(void *)(v6 + 56);
  switch(*(unsigned char *)(v6 + 72))
  {
    case 1:
      uint64_t v19 = *(void *)(v6 + 64);
      uint64_t v20 = *(void *)(v6 + 32);
      uint64_t v21 = *(void *)(v6 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v10)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        char v13 = 1;
        goto LABEL_6;
      }
      sub_248175E80();
      sub_247FAC1EC(v7, v8, v9, 0, v20, v11, v21, v12, v19, 1);
      break;
    case 2:
      uint64_t v19 = *(void *)(v6 + 64);
      uint64_t v20 = *(void *)(v6 + 32);
      uint64_t v21 = *(void *)(v6 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      char v13 = 2;
LABEL_6:
      sub_247FAC1EC(v7, v8, v9, v10, v20, v11, v21, v12, v19, v13);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v14 = *(void *)(v2 + *(int *)(v5 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC(a1, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v3 + *(int *)(a2 + 20);
  uint64_t v16 = *(void *)(v15 + 80);
  unint64_t v17 = *(void *)(v15 + 88);
  sub_2481751A0();
  sub_248175E80();
  if (v17 >> 60 != 15)
  {
    sub_247FB6C20(v16, v17);
    sub_2481747E0();
    sub_247FB846C(v16, v17);
  }
  sub_248175E80();
  return sub_248175E80();
}

uint64_t sub_24801EFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_2480217E4(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v5 = v2 + *(int *)(v4 + 24);
  uint64_t v7 = *(void *)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v11 = *(void *)(v5 + 48);
  uint64_t v12 = *(void *)(v5 + 56);
  switch(*(unsigned char *)(v5 + 72))
  {
    case 1:
      uint64_t v20 = *(void *)(v5 + 32);
      uint64_t v21 = *(void *)(v5 + 64);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v8)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        sub_247FAC1EC(v7, v6, v9, v8, v20, v10, v11, v12, v21, 1);
      }
      else
      {
        sub_248175E80();
        sub_247FAC1EC(v7, v6, v9, 0, v20, v10, v11, v12, v21, 1);
      }
      break;
    case 2:
      uint64_t v22 = *(void *)(v5 + 40);
      uint64_t v23 = *(void *)(v5 + 48);
      uint64_t v13 = *(void *)(v5 + 64);
      uint64_t v14 = *(void *)(v5 + 32);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FAC1EC(v7, v6, v9, v8, v14, v22, v23, v12, v13, 2);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v15 = *(void *)(v2 + *(int *)(v4 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v25, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v3 + *(int *)(a2 + 20);
  uint64_t v17 = *(void *)(v16 + 80);
  unint64_t v18 = *(void *)(v16 + 88);
  sub_2481751A0();
  sub_248175E80();
  if (v18 >> 60 != 15)
  {
    sub_247FB6C20(v17, v18);
    sub_2481747E0();
    sub_247FB846C(v17, v18);
  }
  sub_248175E80();
  sub_248175E80();
  return sub_248175EC0();
}

uint64_t (*SignInCommand.Response.account.modify())()
{
  return nullsub_1;
}

uint64_t SignInCommand.Response.resultsByService.getter()
{
  type metadata accessor for SignInCommand.Response(0);
  return swift_bridgeObjectRetain();
}

uint64_t SignInCommand.Response.resultsByService.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for SignInCommand.Response(0) + 20);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SignInCommand.Response.resultsByService.modify())()
{
  return nullsub_1;
}

uint64_t SignInCommand.Response.init(account:resultsByService:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24801D8A0(a1, a3, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  uint64_t result = type metadata accessor for SignInCommand.Response(0);
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t SignInCommand.Response.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for V1Command(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for V1Command;
  if (EnumCaseMultiPayload == 1
    && (type metadata accessor for V1Command.Response(0),
        int v6 = swift_getEnumCaseMultiPayload(),
        uint64_t v5 = type metadata accessor for V1Command.Response,
        v6 == 1))
  {
    sub_24801D8A0(a1, a2, type metadata accessor for SignInCommand.Response);
    uint64_t v7 = type metadata accessor for SignInCommand.Response(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  else
  {
    sub_24801D840(a1, v5);
    uint64_t v12 = type metadata accessor for SignInCommand.Response(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  return v8(v10, v11, 1, v9);
}

uint64_t SignInCommand.Response.into()@<X0>(uint64_t a1@<X8>)
{
  return sub_24801F650(type metadata accessor for SignInCommand.Response, (void (*)(void))type metadata accessor for V1Command.Response, a1);
}

uint64_t sub_24801F650@<X0>(uint64_t (*a1)(void)@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  sub_24801D8A0(v3, a3, a1);
  a2(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t SignInCommand.Response.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_2480217E4(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v5 = v1 + *(int *)(v4 + 24);
  uint64_t v7 = *(void *)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v11 = *(void *)(v5 + 56);
  switch(*(unsigned char *)(v5 + 72))
  {
    case 1:
      uint64_t v16 = *(void *)(v5 + 64);
      uint64_t v17 = *(void *)(v5 + 32);
      uint64_t v18 = *(void *)(v5 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v8)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        char v12 = 1;
        goto LABEL_6;
      }
      sub_248175E80();
      sub_247FAC1EC(v7, v6, v9, 0, v17, v10, v18, v11, v16, 1);
      break;
    case 2:
      uint64_t v16 = *(void *)(v5 + 64);
      uint64_t v17 = *(void *)(v5 + 32);
      uint64_t v18 = *(void *)(v5 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      char v12 = 2;
LABEL_6:
      sub_247FAC1EC(v7, v6, v9, v8, v17, v10, v18, v11, v16, v12);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v13 = *(void *)(v1 + *(int *)(v4 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)a1, v13);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v2 + *(int *)(type metadata accessor for SignInCommand.Response(0) + 20));
  swift_bridgeObjectRetain();
  sub_248020D1C(a1, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24801FA6C()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x746E756F636361;
  }
}

uint64_t sub_24801FAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24802414C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24801FAD4(uint64_t a1)
{
  unint64_t v2 = sub_2480219DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24801FB10(uint64_t a1)
{
  unint64_t v2 = sub_2480219DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SignInCommand.Response.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7468);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480219DC();
  sub_248175F60();
  char v12 = 0;
  type metadata accessor for IdMSAccount();
  sub_2480217E4(&qword_2692D5098, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  sub_248175BE0();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for SignInCommand.Response(0) + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7478);
    sub_248021A30();
    sub_248175BE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SignInCommand.Response.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_2480217E4(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v3 = v0 + *(int *)(v2 + 24);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v9 = *(void *)(v3 + 56);
  switch(*(unsigned char *)(v3 + 72))
  {
    case 1:
      uint64_t v21 = *(void *)(v3 + 32);
      uint64_t v22 = *(void *)(v3 + 64);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_248175E80();
      if (v6)
      {
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        uint64_t v20 = v22;
        uint64_t v11 = v4;
        uint64_t v12 = v5;
        uint64_t v13 = v7;
        uint64_t v14 = v6;
      }
      else
      {
        uint64_t v20 = v22;
        uint64_t v11 = v4;
        uint64_t v12 = v5;
        uint64_t v13 = v7;
        uint64_t v14 = 0;
      }
      sub_247FAC1EC(v11, v12, v13, v14, v21, v8, v10, v9, v20, 1);
      break;
    case 2:
      uint64_t v23 = *(void *)(v3 + 40);
      uint64_t v24 = *(void *)(v3 + 48);
      uint64_t v15 = *(void *)(v3 + 64);
      uint64_t v16 = *(void *)(v3 + 32);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FAC1EC(v4, v5, v7, v6, v16, v23, v24, v9, v15, 2);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v17 = *(void *)(v0 + *(int *)(v2 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v25, v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = type metadata accessor for SignInCommand.Response(0);
  sub_248020D1C(v25, *(void *)(v1 + *(int *)(v18 + 20)));
  return sub_248175EC0();
}

uint64_t SignInCommand.Response.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = type metadata accessor for IdMSAccount();
  MEMORY[0x270FA5388](v4);
  uint64_t v20 = (uint64_t)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7498);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SignInCommand.Response(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2480219DC();
  sub_248175F20();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v18;
  char v23 = 0;
  sub_2480217E4(&qword_2692D50E0, (void (*)(uint64_t))type metadata accessor for IdMSAccount);
  uint64_t v14 = v19;
  sub_248175AF0();
  sub_24801D8A0(v20, v12, (uint64_t (*)(void))type metadata accessor for IdMSAccount);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7478);
  char v22 = 1;
  sub_248021B14();
  sub_248175AF0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
  *(void *)(v12 + *(int *)(v9 + 20)) = v21;
  sub_24802182C(v12, v17, type metadata accessor for SignInCommand.Response);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24801D840(v12, type metadata accessor for SignInCommand.Response);
}

uint64_t sub_248020400@<X0>(uint64_t a1@<X8>)
{
  return sub_248020430(type metadata accessor for SignInCommand.Response, (void (*)(void))type metadata accessor for V1Command.Response, a1);
}

uint64_t sub_248020430@<X0>(uint64_t (*a1)(void)@<X2>, void (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  sub_24801D8A0(v3, a3, a1);
  a2(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for V1Command(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2480204AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  type metadata accessor for V1Command(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for V1Command.Response(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_24801D8A0(a1, a3, type metadata accessor for SignInCommand.Response);
      uint64_t v6 = 0;
      goto LABEL_7;
    }
    uint64_t v7 = type metadata accessor for V1Command.Response;
  }
  else
  {
    uint64_t v7 = type metadata accessor for V1Command;
  }
  sub_24801D840(a1, v7);
  uint64_t v6 = 1;
LABEL_7:
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56);
  return v8(a3, v6, 1, a2);
}

uint64_t sub_2480205B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SignInCommand.Response.init(from:)(a1, a2);
}

uint64_t sub_2480205C8(void *a1)
{
  return SignInCommand.Response.encode(to:)(a1);
}

uint64_t sub_2480205E8(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_2480217E4(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v6 = v2 + *(int *)(v5 + 24);
  uint64_t v8 = *(void *)v6;
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = *(void *)(v6 + 40);
  uint64_t v12 = *(void *)(v6 + 56);
  switch(*(unsigned char *)(v6 + 72))
  {
    case 1:
      uint64_t v17 = *(void *)(v6 + 64);
      uint64_t v18 = *(void *)(v6 + 32);
      uint64_t v19 = *(void *)(v6 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      if (v10)
      {
        sub_248175E80();
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        char v13 = 1;
        goto LABEL_6;
      }
      sub_248175E80();
      sub_247FAC1EC(v8, v7, v9, 0, v18, v11, v19, v12, v17, 1);
      break;
    case 2:
      uint64_t v17 = *(void *)(v6 + 64);
      uint64_t v18 = *(void *)(v6 + 32);
      uint64_t v19 = *(void *)(v6 + 48);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      char v13 = 2;
LABEL_6:
      sub_247FAC1EC(v8, v7, v9, v10, v18, v11, v19, v12, v17, v13);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v14 = *(void *)(v2 + *(int *)(v5 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)a1, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v3 + *(int *)(a2 + 20));
  return sub_248020D1C(a1, v15);
}

uint64_t sub_24802096C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_248175E50();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2481751A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for IdMSAccount();
  sub_248174700();
  sub_2480217E4(&qword_2692D5898, MEMORY[0x263F06A30]);
  sub_2481750B0();
  uint64_t v5 = v2 + *(int *)(v4 + 24);
  uint64_t v7 = *(void *)v5;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v9 = *(void *)(v5 + 16);
  uint64_t v8 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 40);
  uint64_t v12 = *(void *)(v5 + 48);
  uint64_t v11 = *(void *)(v5 + 56);
  switch(*(unsigned char *)(v5 + 72))
  {
    case 1:
      uint64_t v22 = *(void *)(v5 + 32);
      uint64_t v23 = *(void *)(v5 + 64);
      sub_248175E70();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_248175E80();
      if (v8)
      {
        swift_bridgeObjectRetain();
        sub_2481751A0();
        swift_bridgeObjectRelease();
        uint64_t v21 = v23;
        uint64_t v13 = v7;
        uint64_t v14 = v6;
        uint64_t v15 = v9;
        uint64_t v16 = v8;
      }
      else
      {
        uint64_t v21 = v23;
        uint64_t v13 = v7;
        uint64_t v14 = v6;
        uint64_t v15 = v9;
        uint64_t v16 = 0;
      }
      sub_247FAC1EC(v13, v14, v15, v16, v22, v10, v12, v11, v21, 1);
      break;
    case 2:
      uint64_t v24 = *(void *)(v5 + 40);
      uint64_t v25 = *(void *)(v5 + 48);
      uint64_t v17 = *(void *)(v5 + 64);
      uint64_t v18 = *(void *)(v5 + 32);
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      sub_247FAC1EC(v7, v6, v9, v8, v18, v24, v25, v11, v17, 2);
      break;
    case 3:
      sub_248175E70();
      break;
    default:
      sub_248175E70();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_2481751A0();
      swift_bridgeObjectRelease();
      sub_248175EB0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v19 = *(void *)(v2 + *(int *)(v4 + 28));
  swift_bridgeObjectRetain();
  sub_247FDE2AC((uint64_t)v27, v19);
  swift_bridgeObjectRelease();
  sub_248020D1C(v27, *(void *)(v3 + *(int *)(a2 + 20)));
  return sub_248175EC0();
}

uint64_t sub_248020D1C(long long *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7490);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v48 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7580);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (void **)((char *)&v40 - v11);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = v5;
  uint64_t v49 = (void (**)(char *, uint64_t))(v5 + 8);
  int v50 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  int64_t v41 = v43 - 1;
  uint64_t v47 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  int64_t v51 = 0;
  uint64_t v44 = v4;
  if (!v16) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v19 = v18;
  unint64_t v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v21 = v20 | (v51 << 6);
LABEL_5:
  uint64_t v22 = v46;
  uint64_t v23 = *(void **)(*(void *)(v47 + 48) + 8 * v21);
  unint64_t v24 = *(void *)(v47 + 56) + *(void *)(v46 + 72) * v21;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7588);
  id v26 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
  uint64_t v4 = v44;
  v26(&v10[*(int *)(v25 + 48)], v24, v44);
  *(void *)uint64_t v10 = v23;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v10, 0, 1, v25);
  id v27 = v23;
  uint64_t v18 = v19;
  while (1)
  {
    sub_24802423C((uint64_t)v10, (uint64_t)v12);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7588);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v12, 1, v33) == 1)
    {
      swift_release();
      return sub_248175E70();
    }
    char v34 = (char *)v12 + *(int *)(v33 + 48);
    id v35 = *v12;
    uint64_t v36 = v48;
    (*v50)(v48, v34, v4);
    uint64_t v37 = *((void *)a1 + 8);
    long long v38 = a1[1];
    long long v52 = *a1;
    long long v53 = v38;
    long long v39 = a1[3];
    long long v54 = a1[2];
    long long v55 = v39;
    uint64_t v56 = v37;
    sub_248175160();
    sub_2481751A0();

    swift_bridgeObjectRelease();
    sub_2480242A4(&qword_2692D7590, (void (*)(void))sub_247FF9F18);
    sub_2481750B0();
    (*v49)(v36, v4);
    uint64_t result = sub_248175EC0();
    v18 ^= result;
    if (v16) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v28 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 < v43)
    {
      unint64_t v29 = *(void *)(v42 + 8 * v28);
      if (v29) {
        goto LABEL_9;
      }
      int64_t v30 = v51 + 2;
      ++v51;
      if (v28 + 1 < v43)
      {
        unint64_t v29 = *(void *)(v42 + 8 * v30);
        if (v29)
        {
          ++v28;
LABEL_9:
          uint64_t v19 = v18;
          unint64_t v16 = (v29 - 1) & v29;
          unint64_t v21 = __clz(__rbit64(v29)) + (v28 << 6);
          int64_t v51 = v28;
          goto LABEL_5;
        }
        int64_t v31 = v28 + 2;
        int64_t v51 = v28 + 1;
        if (v28 + 2 < v43) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2692D7588);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v10, 1, 1, v32);
    unint64_t v16 = 0;
  }
  unint64_t v29 = *(void *)(v42 + 8 * v31);
  if (v29)
  {
    v28 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v28 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v28 >= v43)
    {
      int64_t v51 = v41;
      goto LABEL_21;
    }
    unint64_t v29 = *(void *)(v42 + 8 * v28);
    ++v31;
    if (v29) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2480211E0(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v16 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      int64_t v19 = v7;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v12 >= v16) {
      goto LABEL_19;
    }
    unint64_t v13 = *(void *)(v17 + 8 * v12);
    int64_t v14 = v7 + 1;
    if (!v13)
    {
      int64_t v14 = v7 + 2;
      if (v7 + 2 >= v16) {
        goto LABEL_19;
      }
      unint64_t v13 = *(void *)(v17 + 8 * v14);
      if (!v13) {
        break;
      }
    }
LABEL_18:
    unint64_t v4 = (v13 - 1) & v13;
    int64_t v19 = v14;
    unint64_t v9 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_5:
    uint64_t v10 = *(void **)(*(void *)(a2 + 48) + 8 * v9);
    sub_248175160();
    swift_bridgeObjectRetain();
    id v11 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2481751A0();

    swift_bridgeObjectRelease();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_248175EC0();
    int64_t v7 = v19;
    v6 ^= result;
  }
  uint64_t v15 = v7 + 3;
  if (v7 + 3 >= v16)
  {
LABEL_19:
    swift_release();
    return sub_248175E70();
  }
  unint64_t v13 = *(void *)(v17 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v7 + 3;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v16) {
      goto LABEL_19;
    }
    unint64_t v13 = *(void *)(v17 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_248021420(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v16 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v13 >= v16) {
      goto LABEL_19;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v16) {
        goto LABEL_19;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v8);
      if (!v14) {
        break;
      }
    }
LABEL_18:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    id v11 = *(void **)(*(void *)(a2 + 48) + 8 * v10);
    sub_248175160();
    id v12 = v11;
    swift_bridgeObjectRetain();
    sub_2481751A0();

    swift_bridgeObjectRelease();
    sub_2481751A0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_248175EC0();
    v7 ^= result;
  }
  int64_t v15 = v13 + 2;
  if (v15 >= v16)
  {
LABEL_19:
    swift_release();
    return sub_248175E70();
  }
  unint64_t v14 = *(void *)(v17 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v16) {
      goto LABEL_19;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t _s12AppleIDSetup13SignInCommandV7RequestV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_248175CE0(), v6 = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = type metadata accessor for IdMSAccount();
    if ((sub_2481746E0() & 1) == 0) {
      goto LABEL_11;
    }
    int64_t v8 = (char *)a1 + *(int *)(v7 + 24);
    uint64_t v9 = *((void *)v8 + 8);
    char v10 = v8[72];
    long long v11 = *((_OWORD *)v8 + 1);
    long long v34 = *(_OWORD *)v8;
    long long v35 = v11;
    long long v12 = *((_OWORD *)v8 + 3);
    long long v36 = *((_OWORD *)v8 + 2);
    long long v37 = v12;
    *(void *)&long long v38 = v9;
    BYTE8(v38) = v10;
    int64_t v13 = (char *)a2 + *(int *)(v7 + 24);
    uint64_t v14 = *((void *)v13 + 8);
    char v15 = v13[72];
    long long v16 = *((_OWORD *)v13 + 1);
    long long v28 = *(_OWORD *)v13;
    long long v29 = v16;
    long long v17 = *((_OWORD *)v13 + 3);
    long long v30 = *((_OWORD *)v13 + 2);
    long long v31 = v17;
    *(void *)&long long v32 = v14;
    BYTE8(v32) = v15;
    if ((_s12AppleIDSetup11IdMSAccountV10CredentialO2eeoiySbAE_AEtFZ_0((uint64_t)&v34, (uint64_t)&v28) & 1) == 0) {
      goto LABEL_11;
    }
    if ((sub_24815D598(*(void *)((char *)a1 + *(int *)(v7 + 28)), *(void *)((char *)a2 + *(int *)(v7 + 28))) & 1) == 0) {
      goto LABEL_11;
    }
    uint64_t v18 = (int *)type metadata accessor for SignInCommand.Request(0);
    int64_t v19 = (char *)a1 + v18[5];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)&long long v34 = *(void *)v19;
    *((void *)&v34 + 1) = v20;
    long long v21 = *((_OWORD *)v19 + 2);
    long long v35 = *((_OWORD *)v19 + 1);
    long long v36 = v21;
    long long v22 = *((_OWORD *)v19 + 4);
    long long v37 = *((_OWORD *)v19 + 3);
    long long v38 = v22;
    long long v39 = *((_OWORD *)v19 + 5);
    uint64_t v23 = (char *)a2 + v18[5];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)&long long v28 = *(void *)v23;
    *((void *)&v28 + 1) = v24;
    long long v25 = *((_OWORD *)v23 + 2);
    long long v29 = *((_OWORD *)v23 + 1);
    long long v30 = v25;
    long long v26 = *((_OWORD *)v23 + 4);
    long long v31 = *((_OWORD *)v23 + 3);
    long long v32 = v26;
    long long v33 = *((_OWORD *)v23 + 5);
    if (!_s12AppleIDSetup11IdMSAccountV10SRPResultsV2eeoiySbAE_AEtFZ_0(&v34, &v28)) {
      goto LABEL_11;
    }
    if (*((unsigned __int8 *)a1 + v18[6]) == *((unsigned __int8 *)a2 + v18[6])) {
      char v6 = *((unsigned char *)a1 + v18[7]) ^ *((unsigned char *)a2 + v18[7]) ^ 1;
    }
    else {
LABEL_11:
    }
      char v6 = 0;
  }
  return v6 & 1;
}

unint64_t sub_248021790()
{
  unint64_t result = qword_2692D7458;
  if (!qword_2692D7458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7458);
  }
  return result;
}

uint64_t sub_2480217E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24802182C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for SignInCommand.Response(uint64_t a1)
{
  return sub_247FF9D90(a1, (uint64_t *)&unk_2692D7540);
}

uint64_t _s12AppleIDSetup13SignInCommandV8ResponseV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_248175CE0() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for IdMSAccount();
  if ((sub_2481746E0() & 1) == 0) {
    return 0;
  }
  char v6 = (char *)a1 + *(int *)(v5 + 24);
  uint64_t v7 = *((void *)v6 + 8);
  char v8 = v6[72];
  long long v9 = *((_OWORD *)v6 + 1);
  v23[0] = *(_OWORD *)v6;
  v23[1] = v9;
  long long v10 = *((_OWORD *)v6 + 3);
  v23[2] = *((_OWORD *)v6 + 2);
  v23[3] = v10;
  uint64_t v24 = v7;
  char v25 = v8;
  long long v11 = (char *)a2 + *(int *)(v5 + 24);
  uint64_t v12 = *((void *)v11 + 8);
  char v13 = v11[72];
  long long v14 = *((_OWORD *)v11 + 1);
  v20[0] = *(_OWORD *)v11;
  v20[1] = v14;
  long long v15 = *((_OWORD *)v11 + 3);
  void v20[2] = *((_OWORD *)v11 + 2);
  v20[3] = v15;
  uint64_t v21 = v12;
  char v22 = v13;
  if ((_s12AppleIDSetup11IdMSAccountV10CredentialO2eeoiySbAE_AEtFZ_0((uint64_t)v23, (uint64_t)v20) & 1) == 0
    || (sub_24815D598(*(void *)((char *)a1 + *(int *)(v5 + 28)), *(void *)((char *)a2 + *(int *)(v5 + 28))) & 1) == 0)
  {
    return 0;
  }
  uint64_t v16 = *(int *)(type metadata accessor for SignInCommand.Response(0) + 20);
  uint64_t v17 = *(void *)((char *)a1 + v16);
  uint64_t v18 = *(void *)((char *)a2 + v16);
  return sub_2480F4274(v17, v18);
}

unint64_t sub_2480219DC()
{
  unint64_t result = qword_2692D7470;
  if (!qword_2692D7470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7470);
  }
  return result;
}

unint64_t sub_248021A30()
{
  unint64_t result = qword_2692D7480;
  if (!qword_2692D7480)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D7478);
    sub_2480217E4(&qword_2692D50D0, type metadata accessor for AIDAServiceType);
    sub_2480242A4(&qword_2692D7488, (void (*)(void))sub_247FFA014);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D7480);
  }
  return result;
}

unint64_t sub_248021B14()
{
  unint64_t result = qword_2692D74A0;
  if (!qword_2692D74A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2692D7478);
    sub_2480217E4(&qword_2692D5100, type metadata accessor for AIDAServiceType);
    sub_2480242A4(&qword_2692D74A8, (void (*)(void))sub_247FFA144);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D74A0);
  }
  return result;
}

unint64_t sub_248021BFC()
{
  unint64_t result = qword_2692D74B0;
  if (!qword_2692D74B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D74B0);
  }
  return result;
}

uint64_t sub_248021C50(uint64_t a1)
{
  uint64_t result = sub_2480217E4(&qword_2692D74B8, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_248021CAC()
{
  unint64_t result = qword_2692D74C0;
  if (!qword_2692D74C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2692D74C0);
  }
  return result;
}

uint64_t sub_248021D00(uint64_t a1)
{
  uint64_t result = sub_2480217E4(&qword_2692D74C8, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_248021D58(void *a1)
{
  a1[1] = sub_2480217E4(&qword_2692D74D0, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
  a1[2] = sub_2480217E4(&qword_2692D74D8, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
  uint64_t result = sub_2480217E4(&qword_2692D74E0, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
  a1[3] = result;
  return result;
}

uint64_t sub_248021E04()
{
  return sub_2480217E4(&qword_2692D74E8, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
}

uint64_t sub_248021E4C(uint64_t a1)
{
  uint64_t result = sub_2480217E4(&qword_2692D74F0, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_248021EA4(uint64_t a1)
{
  uint64_t result = sub_2480217E4(&qword_2692D74F8, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_248021EFC(void *a1)
{
  a1[1] = sub_2480217E4(&qword_2692D7500, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
  a1[2] = sub_2480217E4(&qword_2692D7508, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
  uint64_t result = sub_2480217E4(&qword_2692D7510, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
  a1[3] = result;
  return result;
}

uint64_t sub_248021FA8()
{
  return sub_2480217E4(&qword_2692D7518, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
}

uint64_t sub_248021FF0()
{
  return sub_2480217E4(&qword_2692D7520, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
}

uint64_t sub_248022038()
{
  return sub_2480217E4(&qword_2692D7528, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
}

unint64_t sub_248022080(uint64_t a1)
{
  unint64_t result = sub_248021CAC();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2480220A8()
{
  return sub_2480217E4(&qword_2692D74B8, (void (*)(uint64_t))type metadata accessor for SignInCommand.Request);
}

uint64_t sub_2480220F0()
{
  return sub_2480217E4(&qword_2692D74F0, (void (*)(uint64_t))type metadata accessor for SignInCommand.Response);
}

ValueMetadata *type metadata accessor for SignInCommand()
{
  return &type metadata for SignInCommand;
}

void *initializeBufferWithCopyOfBuffer for SignInCommand.Request(void *a1, void *a2, int *a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (void *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    uint64_t v10 = a2[9];
    a1[8] = a2[8];
    a1[9] = v10;
    uint64_t v11 = type metadata accessor for IdMSAccount();
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v42 = (char *)v4 + v12;
    uint64_t v43 = v11;
    uint64_t v40 = (char *)a2 + v12;
    uint64_t v13 = sub_248174700();
    long long v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(v42, v40, v13);
    uint64_t v14 = *(int *)(v11 + 24);
    long long v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *((void *)v16 + 1);
    uint64_t v18 = *((void *)v16 + 2);
    uint64_t v19 = *((void *)v16 + 3);
    uint64_t v20 = *((void *)v16 + 4);
    uint64_t v21 = *((void *)v16 + 5);
    uint64_t v23 = *((void *)v16 + 6);
    uint64_t v22 = *((void *)v16 + 7);
    uint64_t v39 = *(void *)v16;
    uint64_t v41 = *((void *)v16 + 8);
    LOBYTE(v42) = v16[72];
    sub_247FABF8C(*(void *)v16, v17, v18, v19, v20, v21, v23, v22, v41, (char)v42);
    *(void *)long long v15 = v39;
    *((void *)v15 + 1) = v17;
    *((void *)v15 + 2) = v18;
    *((void *)v15 + 3) = v19;
    *((void *)v15 + 4) = v20;
    *((void *)v15 + 5) = v21;
    *((void *)v15 + 6) = v23;
    *((void *)v15 + 7) = v22;
    *((void *)v15 + 8) = v41;
    v15[72] = (char)v42;
    *(void *)((char *)v4 + *(int *)(v43 + 28)) = *(void *)((char *)a2 + *(int *)(v43 + 28));
    uint64_t v24 = a3[5];
    char v25 = (char *)v4 + v24;
    long long v26 = (void *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *(void *)char v25 = *v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = v26[3];
    *((void *)v25 + 2) = v26[2];
    *((void *)v25 + 3) = v28;
    uint64_t v29 = v26[5];
    *((void *)v25 + 4) = v26[4];
    *((void *)v25 + 5) = v29;
    uint64_t v30 = v26[7];
    *((void *)v25 + 6) = v26[6];
    *((void *)v25 + 7) = v30;
    uint64_t v31 = v26[9];
    *((void *)v25 + 8) = v26[8];
    *((void *)v25 + 9) = v31;
    long long v32 = v26 + 10;
    unint64_t v33 = v26[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33 >> 60 == 15)
    {
      *((_OWORD *)v25 + 5) = *(_OWORD *)v32;
    }
    else
    {
      uint64_t v35 = *v32;
      sub_247FB6C20(*v32, v33);
      *((void *)v25 + 10) = v35;
      *((void *)v25 + 11) = v33;
    }
    uint64_t v36 = a3[7];
    *((unsigned char *)v4 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v4 + v36) = *((unsigned char *)a2 + v36);
  }
  return v4;
}

uint64_t destroy for SignInCommand.Request(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for IdMSAccount();
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_248174700();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  sub_247FAC1EC(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(unsigned char *)(v7 + 72));
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(v8 + 88);
  if (v10 >> 60 != 15)
  {
    uint64_t v11 = *(void *)(v8 + 80);
    return sub_247FB6CCC(v11, v10);
  }
  return result;
}

void *initializeWithCopy for SignInCommand.Request(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  uint64_t v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  uint64_t v10 = type metadata accessor for IdMSAccount();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v40 = (char *)a1 + v11;
  uint64_t v41 = v10;
  long long v38 = (char *)a2 + v11;
  uint64_t v12 = sub_248174700();
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36(v40, v38, v12);
  uint64_t v13 = *(int *)(v10 + 24);
  uint64_t v14 = (char *)a1 + v13;
  long long v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 1);
  uint64_t v17 = *((void *)v15 + 2);
  uint64_t v18 = *((void *)v15 + 3);
  uint64_t v19 = *((void *)v15 + 4);
  uint64_t v20 = *((void *)v15 + 5);
  uint64_t v22 = *((void *)v15 + 6);
  uint64_t v21 = *((void *)v15 + 7);
  uint64_t v37 = *(void *)v15;
  uint64_t v39 = *((void *)v15 + 8);
  LOBYTE(v40) = v15[72];
  sub_247FABF8C(*(void *)v15, v16, v17, v18, v19, v20, v22, v21, v39, (char)v40);
  *(void *)uint64_t v14 = v37;
  *((void *)v14 + 1) = v16;
  *((void *)v14 + 2) = v17;
  *((void *)v14 + 3) = v18;
  *((void *)v14 + 4) = v19;
  *((void *)v14 + 5) = v20;
  *((void *)v14 + 6) = v22;
  *((void *)v14 + 7) = v21;
  *((void *)v14 + 8) = v39;
  v14[72] = (char)v40;
  *(void *)((char *)a1 + *(int *)(v41 + 28)) = *(void *)((char *)a2 + *(int *)(v41 + 28));
  uint64_t v23 = a3[5];
  uint64_t v24 = (char *)a1 + v23;
  char v25 = (void *)((char *)a2 + v23);
  uint64_t v26 = v25[1];
  *(void *)uint64_t v24 = *v25;
  *((void *)v24 + 1) = v26;
  uint64_t v27 = v25[3];
  *((void *)v24 + 2) = v25[2];
  *((void *)v24 + 3) = v27;
  uint64_t v28 = v25[5];
  *((void *)v24 + 4) = v25[4];
  *((void *)v24 + 5) = v28;
  uint64_t v29 = v25[7];
  *((void *)v24 + 6) = v25[6];
  *((void *)v24 + 7) = v29;
  uint64_t v30 = v25[9];
  *((void *)v24 + 8) = v25[8];
  *((void *)v24 + 9) = v30;
  uint64_t v31 = v25 + 10;
  unint64_t v32 = v25[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32 >> 60 == 15)
  {
    *((_OWORD *)v24 + 5) = *(_OWORD *)v31;
  }
  else
  {
    uint64_t v33 = *v31;
    sub_247FB6C20(*v31, v32);
    *((void *)v24 + 10) = v33;
    *((void *)v24 + 11) = v32;
  }
  uint64_t v34 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v34) = *((unsigned char *)a2 + v34);
  return a1;
}